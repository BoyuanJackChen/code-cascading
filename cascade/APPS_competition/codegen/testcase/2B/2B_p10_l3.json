[
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '4'\nassert solution('6') == '5'\nassert solution('8') == '9'\nassert solution('10') == '1'\nassert solution('2') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"8 2\") == \"9\"\nassert solution(\"4\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '5'\nassert solution('8 ( 2 ( 2 1 ) ) 3') == '9'\nassert solution('4 ( 12 3 )') == '36'\nassert solution('6 ( ( 2 ) )') == '5'\nassert solution('6 ( ( ( 2 3 ) ) )') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"8 2\") == \"9\"\nassert solution(\"4\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"6\") == \"5\""
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2 3\nSample Output 1:\n5\n\nSample Input 2:\n8\n( 2 ( 2 1 ) ) 3\nSample Output 2:\n9\n\nSample Input 3:\n4\n( 12 3 )\nSample Output 3:\n36\n\nSample Input 4:\n6\n( 2 ) ( 3 )\nSample Output 4:\n5\n\nSample Input 5:\n6\n( ( 2 3 ) )\nSample Output 5:\n5\n''') == '''\n5\n\nSample Input 1:\n8\n( 2 ( 2 1 ) ) 3\nSample Output 1:\n9\n\nSample Input 2:\n8\n( 2 ) ( 3 )\nSample Output 2:\n9\n\nSample Input 3:\n4\n( 12 3 )\nSample Output 3:\n36\n\nSample Input 4:\n6\n( 2 ) ( 3 )\nSample Output 4:\n5\n\nSample Input 5:\n6\n( ( 2 3 ) )\nSample Output 5:\n5\n'''\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '5'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('6') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\nassert solution(stdin=\"\"\"2\n2 3\"\"\") == '5'\nassert solution(stdin=\"\"\"8\n( 2 ( 2 1 ) ) 3\"\"\") == '9'\nassert solution(stdin=\"\"\"4\n( 12 3 )\"\"\") == '36'\nassert solution(stdin=\"\"\"6\n( ( 2 ) )\"\"\") == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n2 3 1\n''') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"8 3\") == \"9\"\nassert solution(\"4\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0\n''') == '0'\nassert solution('''\n009990001\n''') == '3'\nassert solution('''\n29998\n''') == '5'\nassert solution('''\n610\n''') == '4'\nassert solution('''\n981\n''') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0\n''') == '0'\n\nassert solution('''\n009990001\n''') == '3'\n\nassert solution('''\n29998\n''') == '5'\n\nassert solution('''\n610\n''') == '4'\n\nassert solution('''\n981\n''') == '2'"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"610\") == \"4\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '4'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') =='seems legit'\nassert solution('2\\n2017 11 0\\n2018 1 1000\\n') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n''') == 'insufficient service'\nassert solution('''\n3\n2017 1 0\n2017 2 0\n''') == 'insufficient service'\nassert solution('''\n3\n2017 11 0\n2018 1 1000\n''') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"seems legit\"\nassert solution(\"2\") == \"insufficient service\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\nSample Output 1:\nseems legit\n\nSample Input 2:\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\nSample Output 2:\ninsufficient service\n\nSample Input 3:\n2\n2017 11 0\n2018 1 1000\nSample Output 3:\ntampered odometer\n\nSample Input 4:\n2\n2013 1 0\n2013 2 0\nSample Output 4:\nseems legit\n\"\"\") == \"seems legit\"\nassert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\nSample Output 1:\ninsufficient service\n\nSample Input 2:\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\nSample Output 2:\ntampered odometer\n\nSample Input 3:\n2\n2017 11 0\n2018 1 1000\nSample Output 3:\ntampered odometer\n\nSample Input 4:\n2\n2013 1 0\n2013 2 0\nSample Output 4:\nseems legit\n\"\"\") == \"tampered odometer\""
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') == 'insufficient service'\nassert solution('2\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') == 'tampered odometer'\nprint('all tests passed')\n\"\"\""
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') =='seems legit'\nassert solution('2\\n2013 1 0\\n2013 2 0\\n') =='seems legit'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') == 'insufficient service'\nassert solution('''\n2\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') == 'tampered odometer'\nassert solution('''\n2\n2017 11 0\n2018 1 1000\n''') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\nSample Output 1:\nseems legit\n\nSample Input 2:\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\nSample Output 2:\ninsufficient service\n\nSample Input 3:\n2\n2017 11 0\n2018 1 1000\nSample Output 3:\ntampered odometer\n\nSample Input 4:\n2\n2013 1 0\n2013 2 0\nSample Output 4:\nseems legit\"\"\") == \"\"\"seems legit\"\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\\\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n\"\"\") == \"3\"\nassert solution(r\"\"\"\n6\n1 3\n0 2 3\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n4\n1 2 3\n0 2 3\n0 1 3\n0 1 2\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n4\n1 2 3\n0 2 3\n0 1 3\n0 1 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 4\\n0 2 3\\n0 1 3\\n1\\n0 4') == '3'\nassert solution('4\\n2 3 4\\n0 2 3\\n0 1 3\\n0 1 2\\nSample Output 3:\n2\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n0 2 3\n0 1\n1\nSample Input 5:\n6\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\nSample Output 5:\n2\n''') == \"2\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(samples[0]) == \"3\"\nassert solution(samples[1]) == \"2\"\nassert solution(samples[2]) == \"2\"\nassert solution(samples[3]) == \"4\"\nprint('You passed all the tests! Congrats!')"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2\\n0 2 3\\n0 1') == '3'\nassert solution('6\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1') == '2'\nassert solution('4\\n1 3\\n0 2\\n1 4\\n0 1') == '4'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1') == '2'\nassert solution('6\\n1 3\\n0 2 3\\n1 5\\n0 4\\n1 3 5\\n2 4') == '2'"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 3\\n0 2 3\\n0 1\\n1') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 2:') == '2'\nassert solution('6\\n1 3\\n0 2\\n1 5\\n0 4\\n1 3 5\\n2 4\\n') == '2'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''\n3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''\n4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\n'''\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'IMPOSSIBLE'"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2\"\nassert solution('3') == \"IMPOSSIBLE\"\nassert solution('4') == \"IMPOSSIBLE\""
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nBLUE 1 4000\nRED 4002 10000\nORANGE 4000 8000''') == \"2\"\nprint(solution('''2\nBLUE 1 5000\nRED 5001 10000\nBLUE 5 6000\nRED 3000 8000\nWHITE 7000 10000'''))\nprint(solution('''4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\nBLUE 10 3000\nRED 9000 5000\nWHITE 9000 10000'''))\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    BLUE 1 5000\n    RED 5001 10000\n    ''') == '2'\nassert solution('''\n    BLUE 1 6000\n    RED 2000 8000\n    WHITE 7000 10000\n    ''') == '3'\nassert solution('''\n    BLUE 1 3000\n    RED 2000 5000\n    ORANGE 4000 8000\n    GREEN 7000 10000\n    ''') == 'IMPOSSIBLE'\nassert solution('''\n    BLUE 1 4000\n    RED 4002 10000\n    ''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\"\nassert solution(\"2\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\"\nassert solution(\"3\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"3\"\nassert solution(\"4\\nBLUE 1 4000\\nRED 4002 10000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"IMPOSSIBLE\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\nassert solution('A') == '1'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''HELLOWORLD''') == '1'\nassert solution('''XXXYYYYZZZZ''') == '1'\nassert solution('''EEESSSSSSSSSSSS''') == '1'\nassert solution('''TTTTTTTTTTTTTTTTTTTTTTTT''') == '4'\nassert solution('''TESSSSSS''') == '1'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\nprint('all tests passed')\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '1'\nassert solution('ABABAA') == '2'\nassert solution('ABAABA') == '2'\nassert solution('BABABA') == '2'\nassert solution('ABAAAB') == '3'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''D 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0'\nassert solution('''I 14 A\nI 15 B\nE\nI 14 A\nI 15 B\nE\n''') == '1'\nassert solution('''I 15 C\nI 14 A\nI 14 A\nI 15 B\nI 15 C\nE\n''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''D 2\nD 1\nE\nD 1\nD 2\nE''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE''') == '1'\nassert solution('''I 14 B\nI 14 A\nE''') == '0'\nassert solution('''I 14 A\nI 15 B\nE''') == '1'\nassert solution('''I 14 A\nI 15 B\nE''') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE') == '0'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\nE') == '1'\nassert solution('I 14 X\\nD 1\\nE\\nD 1\\nD 2\\nE\\nE') == '0'\nassert solution('I 14 A\\nI 15 A\\nI 14 A\\nI 15 A\\nE\\nE') == '1'"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"D 1\") == '0'\nassert solution(\"D 1 D 2\") == '0'\nassert solution(\"D 1 E\") == '1'\nassert solution(\"D 1 D 2 E\") == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\\n\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\\n\"\nassert solution(\"I 14 B\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"0\\n\"\nassert solution(\"I 14 A\\nI 15 B\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"1\\n\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''D 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0'\nassert solution('''I 14 A\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\"\nassert solution(\"D 2\\nD 1\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\"\nassert solution(\"I 14 X\\nD 1\\nE\") == \"0\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"D 1\nD 2\nE\"\"\") == \"0\"\nassert solution(\"\"\"D 2\nD 1\nE\"\"\") == \"1\"\nassert solution(\"\"\"I 14 B\nI 14 A\nE\"\"\") == \"0\"\nassert solution(\"\"\"I 14 A\nI 15 B\nE\"\"\") == \"1\"\n\n'''\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''D 1\nD 2\nE\nD 3\nD 1\nE\nD 1\nD 2\nE\nD 1\nD 2\nE\nD 1\nD 2\nE''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\nD 1\nD 2\nE\nD 1\nD 2\nE\nD 1\nD 2\nE''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"D 1\") == \"0\"\nassert solution(\"D 2\") == \"1\"\nassert solution(\"D 3\") == \"1\"\nassert solution(\"D 1\") == \"0\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n\nprint(\"All tests passed!\")\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 0 1 0 0 0\n''') == '300'\nassert solution('''\n5 0 1 0 1 0\n''') == '1900'\nassert solution('''\n6 0 1 1 0 0\n''') == '2300'\nassert solution('''\n10 399 0 0 0 0\n''') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1 0 0 0\n''') == '300'\nassert solution('''\n5 0 1 0 1 0\n''') == '1900'\nassert solution('''\n6 0 1 1 0 0\n''') == '2300'\nassert solution('''\n10 399 0 0 0 0\n''') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4 0 1 0 0 0\n''') == '300'\n\nassert solution(\n'''\n5 0 1 0 1 0\n''') == '1900'\n\nassert solution(\n'''\n6 0 1 1 0 0\n''') == '2300'\n\nassert solution(\n'''\n10 399 0 0 0 0\n''') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == \"0\"\nassert solution('4 0 1 0 0 0') == \"300\"\nassert solution('5 0 1 0 1 0') == \"1900\"\nassert solution('6 0 1 1 0 0') == \"2300\""
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nprint('Tests passed')\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10\\n1 5\\n1 4') == '2'\nassert solution('2 10\\n1 5\\n1 4') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 10\n1 5\n1 4\n''') == '2'\nassert solution('''\n2 10\n1 5\n1 4\n''') == '2'\nassert solution('''\n2 10\n1 5\n4 1\n''') == '2'\nassert solution('''\n2 10\n1 5\n4 1\n''') == '2'\nassert solution('''\n2 10\n1 5\n4 2\n''') == '1'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10') == '2'\nassert solution('2 10') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 10\n1 2\n1 4\n''') == '2'\nassert solution('''\n2 10\n1 2\n1 4\n''') == '2'"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\"\nprint('all tests passed')\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution([10, 6, 10, 9, 8, 1, 3, 1, 8, 9, 5, 7, 10, 7, 2, 5, 4, 3]) == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10') == '2'\nassert solution('2 10') == '2'\nassert solution('1 10') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10\\n1 12\\n1 13') == '2'\nassert solution('2 10\\n1 5\\n1 12\\n1 13') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 10') == '2'\nassert solution('2 10') == '2'\nassert solution('1 1') == '1'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10\") == \"2\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"2 10\") == \"2\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 3\\n5 3\\n4 5\\n1 2 6\") == \"28.976\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '28.970562748'\nassert solution('''\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '32'"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n10 10 5') == '28.970562748'\nassert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5') == '36.2842712475'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n99 6 -8') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28.970562748'\nassert solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8''') == '32'\nassert solution('''3\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '28.970562748'\nassert solution('''\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n''') == '36.2842712475'\nassert solution('''\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == '28.970562748'\nassert solution('6\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '32'\nassert solution('8\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\\n') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '28.9855206611'\nassert solution('4') == '36.2855206611'\nassert solution('5') == '32.0'\nassert solution('6') == 'INVALID'"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '28.969330073'\nassert solution('8') == '32'\nassert solution('6') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1\n5 1\n9 1\nSample Input 2:\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\nSample Output 2:\n28.970562748\n\nSample Input 3:\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\nSample Output 3:\n32.980674973\n\nSample Input 4:\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\nSample Output 4:\n32.980674973\n''') == '32.980674973'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '16.3526157985'\nassert solution('4') == '28.970562748'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\n\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution() == \"1\"\nassert solution() == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n1 3 9 5\n2 2 6 8\n4 8 9 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution([3, 1, 9, 5]) == \"3\"\nassert solution([5, 2, 7, 10]) == \"1\"\nassert solution([7, 4, 4, 10]) == \"1\"\nassert solution([2, 5, 10, 8]) == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n3\n-1 -2 -1 -1\n-1 2 -1 -1\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n2\n-1 -2 -1 -1\n-1 2 -1 -1\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution([3, 2, 1, 3, 2, 1, 2, 4, 6, 3, 1, 2]) == '1'\n\n'''\nimport math\n\nn = int(input())\n\nlines = []\n\nfor _ in range(n):\n    x0, y0, x1, y1 = list(map(int, input().split(' ')))\n    lines.append((x0, y0, x1, y1))"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n\"\"\") == \"1\"\n\n\"\"\"\nThe idea is to use the lines $x_0, y_0, x_1, y_1$ and the line segment $y_0 - y_1 = m*x_0 - m*x_1$ to determine the intersections of the line segment and the given line.\n\nLet $y_0 \\ne y_1$, so we can simplify the equation by $y_0 = m*x_0$ and $y_1 = m*x_1$. We can determine the line segments by using the line equation $y_0 = m*x_0$.\n\nLet $y_0 = m*x_0$ and $y_1 = m*x_1$. We can determine the points by using the equation $y_1 = m*x_0$ and $y_0 = m*x_1$.\n\nLet $y_0 = m*x_0$, we can determine the intersections of the line segment with the line through the point $x_0$, and also the line through the points $x_0$ and $x_1$; and so on.\n\nIf we have the line equation $y_0 = m*x_0$ and the line equation $y_1 = m*x_1$ and we have the points $x_0$ and $x_1$, we can use the equation $y = m*x$ to find the intersection points between them.\n\n$x_0$ and $x_1$ are the two line segments.\n\n$x_1 = m*x_0$ and $x_0 = m*x_1$. So $x_0$ and $x_1$ are the same line.\n\nLet $x_0$ and $x_1$ be the two points.\n\nNow, let $x_1 = m*x_0$ and $x_0 = m*x_1$. Then we have the equation $y = m*x$, which we can simplify to $y = m*x_0$ and $y = m*x_1$\n\nLet $x_0, y_0, x_1, y_1$ be the four line segments.\n\nLet $y_0 = m*x_0$ and $y_1 = m*x_1$.\n\nLet $y_1 = m*x_0$, we have the line equation $y_1 = m*x_0$, which gives the intersection points between the line and the line through the points $x_0$ and $x_1$.\n\nIf the line equations are $(y_0) = m*x_0$, $(y_1) = m*x_1$, then the equation $y = m*x$ and the equation $y = m*x_0$ and $y = m*x_1$ gives the points $x$ that the line segment intersects or touches.\n\n$x_1 = m*x_0$ and $x_0 = m*x_1$. So $x_0$ and $x_1$ are the same line.\n\nLet $x_0, y_0, x_1, y_1$ be the four line segments.\n\nNow, let $x_1 = m*x_0$ and $x_0 = m*x_1$. Then we have the equation $y = m*x$, which we can simplify to $y = m*x_0$ and $y = m*x_1$\n\nLet $x_0, y_0, x_1, y_1$ be the four line segments.\n\nLet $y_0 = m*x_0$ and $y_1 = m*x_1$.\n\nLet $y_1 = m*x_0$, we have the line equation $y_1 = m*x_0$, which gives the intersection points between the line and the line through the points $x_0$ and $x_1$.\n\nIf the line equations are $(y_0) = m*x_0$, $(y_1) = m*x_1$, then the equation $y = m*x$ and the equation $y = m*x_0$ and $y = m*x_1$ gives the points $x$ that the line segment intersects or touches.\n\n$x_1 = m*x_0$ and $x_0 = m*x_1$. So $x_0$ and $x_1$ are the same line.\n\nLet $x_0, y_0, x_1, y_1$ be the four line segments.\n\nNow, let $x_1 = m*x_0$ and $x_0 = m*x_1$. Then we have the equation $y = m*x$, which we can simplify to $y = m*x_0$ and $y = m*x_1$\n\nLet $x_0, y_0, x_1, y_1$ be the four line segments.\n\nLet $y_0 = m*x_0$ and $y_1 = m*x_1$.\n\nLet $y_1 = m*x_0$, we have the line equation $y_1 = m*x_0$, which gives the intersection points between the line and the line through the points $x_0$ and $x_1$.\n\nIf the line equations are $(y_0) = m*x_0$, $(y_1) = m*x_1$, then the equation $y = m*x$ and the equation $y = m*x_0$ and $y = m*x_1$ gives the points $x$ that the line segment intersects or touches.\n\n$x_0, y_0, x_1, y_1$ are the four line segments.\n\nLet $x_0, y_0, x_1, y_1$ be the four line segments.\n\nLet $y_0 = m*x_0$ and $y_1 = m*x_1$.\n\nLet $y_1 = m*x_0$, we have the line equation $y_1 = m*x_0$, which gives the intersection points between the line and the line through the points $x_0$ and $x_1$.\n\nIf the line equations are $(y_0) = m*x_0$, $(y_1) = m*x_1$, then the equation $y = m*x$ and the equation $y = m*x_0$ and $y = m*x_1$ gives the points $x$ that the line segment intersects or touches.\n\n$x_1 = m*x_0$ and $x_0 = m*x_1$. So $x_0$ and $x_1$ are the same line.\n\nLet $x_0, y_0, x_1, y_1$"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\n\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\n\nassert solution('''2\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234321') == '94708'\nassert solution('12345') == '-1'\nassert solution('12321') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"94708\"\nassert solution(\"1234321\") == \"94708\"\nprint(\"all tests passed\")"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"94708\"\nassert solution(\"1234321\") == \"-1\"\n\n\n---------------------------------------------------------------------------------------------------------------------------------------\n\nImplement a function which takes two strings $a$ and $b$ as input and returns $a$ minus $b$ if $a$ is a substring of $b$ or $b$ minus $a$ if $b$ is a substring of $a$.\n\nIf the strings $a$ and $b$ are not equal, return -1.\n\nExample:\n\nsolution(\"abcd\", \"bc\") \u279e \"ac\"\n\nsolution(\"abcd\", \"ac\") \u279e -1\n\nsolution(\"abc\", \"abcd\") \u279e \"ac\"\n\nsolution(\"a\", \"a\") \u279e \"a\"\n\nsolution(\"aaa\", \"aaaa\") \u279e \"aaaa\"\n\nsolution(\"a\", \"b\") \u279e -1\n\nsolution(\"xyz\", \"abc\") \u279e -1\n\n\n-----Input-----\nEach input will consist of two lines. The first line will contain a non-empty string $a$. The second line will contain a non-empty string $b$.\n\n-----Output-----\nOutput a single line with a single integer.\n\n-----Examples-----\nInput 1:\na = \"abcd\"\nb = \"bc\"\nOutput 1:\n\"ac\"\n\nInput 2:\na = \"abcd\"\nb = \"ac\"\nOutput 2:\n-1\n\nInput 3:\na = \"abc\"\nb = \"abcd\"\nOutput 3:\n\"ac\"\n\nInput 4:\na = \"aaa\"\nb = \"aaaa\"\nOutput 4:\n\"aaaa\"\n\nInput 5:\na = \"a\"\nb = \"b\"\nOutput 5:\n-1\n\nInput 6:\na = \"xyz\"\nb = \"abc\"\nOutput 6:\n-1\n\"\"\""
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1234321\") == \"94708\"\nassert solution(\"\") == -1\nassert solution(\"123\") == -1\n\"\"\"\nfrom sys import setrecursionlimit\n\nsetrecursionlimit(11000)\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1234567890\") == \"1\"\nassert solution(\"55555555\") == \"55\"\nassert solution(\"101\") == \"1\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234321\") == \"94708\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12223') == '5'\nassert solution('12321') == '5'\nassert solution('33322111') == '4'\nassert solution('1232') == '-1'\nassert solution('1234321') == '94708'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == 10\nassert solution('55') == 55\nassert solution('101') == -1\nassert solution('1234321') == 94708\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 0 0 0 3\n''') == '6'\nassert solution('''\n1 2 0 0 5\n''') == '2'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 6\n''') == '0'\n\nassert solution('''\n2 0 0 0 3\n''') == '4'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 5') == '2'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 0 0 0 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1 2 0 0 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 2 0 0 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1 2 0 0 6\n\"\"\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 0 0 0 3\n''') == '6'\n\nassert solution('''\n1 2 0 0 5\n''') == '2'\n\nassert solution('''\n1 2 0 0 4\n''') == '4'\n\nassert solution('''\n1 2 0 0 6\n''') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 0 0 0 3\n1 2 0 0 5\n''') == '6'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 6\n''') == '0'\nassert solution('''\n1 2 0 0 8\n''') == '0'\nassert solution('''\n2 2 0 0 4\n''') == '4'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 7') == '0'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0.5 -5.301 3.098''') == '-1.26167861 3.88425357'\nassert solution('''0.5 8 8''') == '9.21068947 2.56226688'\nassert solution('''1 8 8''') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0.5 -5.301 3.098\n0.5 8 8''') == '-1.26167861 3.88425357'\nassert solution('''0.5 8 8\n9.21068947 2.56226688''') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nassert solution('0.5 -8 8') == '-4.36385220 9.46891588'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 5') == '0'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '0'\nassert solution('''5 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '2'\nassert solution('''6 6\n1 2\n2 3\n2 4\n3 1\n4 1\n5 3\n5 2\n''') == '2'\nassert solution('''8 8\n1 2\n2 3\n2 4\n3 1\n4 1\n5 3\n6 2\n7 6\n''') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''4 5\n1 2\n1 3\n3 2\n2 4\n3 4\n''') == '0'\nassert solution('''8 5\n1 2\n1 3\n3 2\n2 4\n3 4\n4 5\n5 2\n6 3\n6 4\n''') == '2'\nassert solution('''20 20\n1 2\n1 3\n3 2\n2 4\n3 4\n4 5\n5 2\n6 3\n6 4\n6 5\n6 6\n''') == '10'\nassert solution('''40 40\n1 2\n1 3\n3 2\n2 4\n3 4\n4 5\n5 2\n6 3\n6 4\n6 5\n6 6\n6 6\n''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"4 5\") == \"0\""
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n1 2\n2 3\n3 4\n4 1\n5 1\n''') == '1'\nassert solution('''\n5 5\n1 2\n2 3\n3 4\n4 1\n5 1\n''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 2\n2 1''') == '1'\n\nassert solution('''3 3\n1 2\n2 3\n3 1\nSample Output 2:\n1\n1\n\nSample Input 4:\n4 5\n1 2\n2 3\n2 4\n3 4\nSample Output 4:\n0\n\nSample Input 5:\n10 10\n1 3\n2 5\n3 9\n4 4\n5 2\n6 7\n7 8\n8 7\n9 6\n10 5\nSample Output 5:\n3\n\n'''\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"5 5\") == \"1\""
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 2\n2 1\n''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '0'\nassert solution('''4 5\n1 2\n2 3\n3 1\n4 1\n''') == '2'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 0 3') == '11'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('3 3 1 2') == '2'\nassert solution('3 3 1 2') == 'infinity'\nassert solution('5 5 0 4') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 3 0') == '3'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('2 1 0 1') == '1'\nassert solution('2 2 2') == '2'\nassert solution('3 4 3 2') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5 0 3') == '11'\nassert solution('4 5 0 3') == 'infinity'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('5 5 0 4') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == '11'\nassert solution('5 5 0 3\\n0 1 1\\n1 2 1\\n2 0 4\\n2 3 1\\n2 3 3') == 'infinity'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\nSample Output 4:') == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5 0 3\n0 1 1\n1 2 1\n2 0 4\n2 3 1\n2 3 3''') == 'infinity'\nassert solution('''4 5 0 3\n0 1 1\n1 2 1\n2 0 4\n2 3 1\n2 3 3''') == '11'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\nSample Output 4:\ninfinity\n\n''') == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 0 3') == '11'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('2 1 0 1') == '2'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == \"11\"\nassert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == \"infinity\"\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == \"2\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"3\""
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''5 5 0 4\n0 1 1\n1 2 1\n2 0 4\n2 3 1\n2 4 1\n''') == 'infinity'\nassert solution('''3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == '2'\nassert solution('''2 2 1 1\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 2 1 2 1\n2 1 2\n2 3 4\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n3 3 1 1\n1 1\n2 2 3\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n3 2 2 3\n1 1\n2 2 3\n\"\"\"\n) == \"18\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 1 1 2 2\") == \"2\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 1 2 1') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'\nassert solution('3 1 2 3') == '12'"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 2 1 2 1\n2 1 2\n2 3 4\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 3 1 1\n1 1\n2 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 2 2 3\n1 1\n2 2 3\n\"\"\") == \"18\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1 2 1\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"3 1 2 1\") == \"12\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1 2') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'\n\n\"\"\"\n\nfrom functools import reduce\nfrom operator import mul\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3 1 2\n1 1\n2 2 3\n''') == '6'\nassert solution('''4 2 1 2\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''3 2 2 3\n1 1\n2 2 3\n''') == '0'\nassert solution('''3 1 2 3\n2 1\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 2 1 2 1\n2 1 2\n2 3 4\n\"\"\"\n) == \"6\"\nassert solution(\n\"\"\"\n3 3 1 1\n1 1\n2 2 3\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n3 2 2 3\n1 1\n2 2 3\n\"\"\"\n) == \"18\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 2\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\""
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n\n'''"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000000 1') == \"468559\"\nassert solution('1000000 5') == \"49401\"\nassert solution('1000000 16') == \"20\"\nassert solution('9000000000000000000 62') == \"1\"\nprint(solution(input()))\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1000000 1\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == \"20\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\nassert solution
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 9\n5 4 1\n''') == '1', 'First example'\nassert solution('''4 13\n2 2 2 2\n''') == '3', 'Second example'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12', 'Third example'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 9') == '1'\nassert solution('4 13') == '3'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"3 9\n5 4 1\nSample Input 4:\n4 13\n2 2 2 2\nSample Output 4:\n3\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'\nprint('Check completed')"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 3 4 5 6\\n\") == \"3\"\nassert solution(\"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\\n\") == \"12\"\n\n\"\"\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 9\") == \"1\"\nassert solution(\"4 13\") == \"3\"\nassert solution(\"18 90\") == \"12\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 9\n5 4 1\n''') == '1'\nassert solution('''\n4 13\n2 2 2 2\n''') == '3'\nassert solution('''\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 9\n5 4 1\n''') == '1'\nassert solution('''4 13\n2 2 2 2\n''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 7 8\n''') == '3'\nassert solution('''\n5\n2 3 4 5 8\n''') == '5'\nassert solution('''\n1\n1\n''') == '0'\nprint(solution('''\n1\n10\n'''))\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('5') == '8'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3\"\n    \"4 7 8\"\n) == \"3\"\nassert solution(\n    \"5\"\n    \"2 3 4 5 8\"\n) == \"5\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1\n''') == '0'\n\nassert solution('''\n3\n4 7 8\n''') == '3'\n\nassert solution('''\n5\n2 3 4 5 8\n''') == '5'"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1''') == '0'\nassert solution('''2\n1 2''') == '1'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1\n1\n2\n3\n4\n5\n6\n7\n8\n\"\"\") == \"5\"\n\nprint(solution(\n\"\"\"\n1\n1\n2\n3\n4\n5\n6\n7\n8\n\"\"\") == \"5\")\n\nprint(solution(\n\"\"\"\n2\n1 2\n2 3\n4 5\n1 2 3 4 5\n\"\"\") == \"4\")\n\nprint(solution(\n\"\"\"\n3\n1 1 1\n1 2 2\n1 3 3\n\"\"\") == \"5\")\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n\nSample Input 1:\n6\nSample Output 1:\n4\n\nSample Input 2:\n149\nSample Output 2:\n17\n\nSample Input 3:\n123476544\nSample Output 3:\n11112''') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"37\") == \"75\"\nassert solution(\"9\") == \"98\"\nassert solution(\"999999999999999999999\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nassert solution('1') == '-1'\nassert solution('13') == '-1'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(6) == '4'\nassert solution(149) == '17'\nassert solution(123476544) == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n''') == '4'\n\nassert solution('''\n149\n''') == '17'\n\nassert solution('''\n123476544\n''') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nprint(solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\"))\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'IMPOSSIBLE'\nassert sorted(sorted(solution()) for _ in range(2)) == ['IMPOSSIBLE', 'AMBIGUOUS']\nassert sorted(sorted(solution()) for _ in range(3)) == ['AMBIGUOUS', 'IMPOSSIBLE', 'ADCB']\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'IMPOSSIBLE'\nassert solution('5 4') == 'adcb'\nassert solution('10 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nd 4\ncab\ncda\nccc\nbadca\n''') == 'adcb'\nassert solution('''\nc 4\nabc\nbca\ncab\naca\n''') == 'IMPOSSIBLE'\nassert solution('''\nf 2\ndea\ncfb\n''') == 'AMBIGUOUS'\nassert solution('''\nd 4\ncab\ncda\nccc\nbadca\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == 'IMPOSSIBLE'\nassert solution('3 2') == 'IMPOSSIBLE'\nassert solution('3 3') == 'AMBIGUOUS'\nassert solution('2 2') == 'AMBIGUOUS'\nassert solution('2 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''d 4\ncab\ncda\nccc\nbadca''') == 'adcb'\nassert solution('''c 4\nabc\nbca\ncab\naca''') == 'IMPOSSIBLE'\nassert solution('''f 2\ndea\ncfb''') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('d 4\\nabc\\nbca\\ncab\\naca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nd 4\ncab\ncda\nccc\nbadca\n''') == 'adcb'\n\nassert solution('''\nc 4\nabc\nbca\ncab\naca\n''') == 'IMPOSSIBLE'\n\nassert solution('''\nf 2\ndea\ncfb\n''') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nf\\nabc\\nd') == 'IMPOSSIBLE'\nassert solution('4\\nc\\nd\\n') == 'cdb'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3\n3\n''') == '9'\nassert solution('''\n10\n20\n0\n0\n''') == '10'\nassert solution('''\n100\n20\n543\n12\n''') == '164'\nassert solution('''\n12\n23\n34\n''') == '10'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 2 1') == '2'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3 3 3\n''') == '9'\nassert solution('''\n10 20 0 0\n''') == '10'\nassert solution('''\n100 20 543 12\n''') == '164'\nassert solution('''\n2 3 3 3\n3 2 2 1\n''') == '5'\nassert solution('''\n2 3 2 3\n4 0 1 0\n''') == '4'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\nprint('ALL TEST CASES PASSED')\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"2 10 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5 7\n2 8\n8 10''') == '9', 'Should print 9'\nprint('Solution: {}'.format(solution(stdin)))\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\\n\") == \"no\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\\n\") == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"5 3 3\") == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes'\nassert solution('''\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\n\n'''\n'''"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4 2 3\"\n    \"0 1\"\n    \"1 0\"\n    \"-1 0\"\n    \"0 -1\"\n    \"-1 1 -2\"\n    \"-1 -1 2\"\n    \"0 -1 0\"\n) == \"yes\"\nassert solution(\n    \"4 3 3\"\n    \"0 1\"\n    \"1 2\"\n    \"-1 2\"\n    \"0 -1\"\n    \"-1 1 -2\"\n    \"-1 -1 2\"\n    \"0 -1 0\"\n) == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes'\nassert solution('''\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\nassert solution('''\n3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n''') == 'yes'\nassert solution('''\n2 1 1\n1 0\n-1 -2\n1 1 -2\n3 6 12\n''') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 3\\n0 1\\n1 2\\n-1 2') == 'yes'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"yes\"\nassert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"3 2 3\") == \"yes\"\nassert solution(\"3 3 3\") == \"no\""
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"3 2 3\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"yes\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s1) == '4'\nassert solution(s2) == '7'\nassert solution(s3) == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n652526\n''') == '4'\nassert solution('''\n12121131221\n''') == '7'\nassert solution('''\n123456789\n''') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('1234') == '2'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123456789\") == \"1\"\nassert solution(\"652526\") == \"4\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"800\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\nassert solution(input_string=\"2 3\") == \"0\"\nassert solution(input_string=\"3 3\") == \"0\"\nassert solution(input_string=\"6 8\") == \"800\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '0'\nassert solution('4 4') == '24'\nassert solution('6 8') == '800'"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\nassert solution(stdin_digits) == '0'\n\"\"\""
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"800\"\nassert solution(\n\"\"\"\n3 3\n1\n1 2\n2 3\n1 3\n\"\"\"\n) == \"800\"\nassert solution(\n\"\"\"\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n\"\"\"\n) == \"24\"\nassert solution(\n\"\"\"\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n\"\"\"\n) == \"100\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '24'\nassert solution('3') == '24'\nassert solution('4') == '24'\nassert solution('5') == '500'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 2') == '0'\nassert solution('3 2') == '1'\nassert solution('1 3') == '1'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '0'\nassert solution('4 4') == '24'\nassert solution('6 8') == '800'\nassert solution('3 4') == '0'\nassert solution('6 8') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"9 10\") == \"0\"\nassert solution(\"6 10\") == \"0\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2 4') == '1 4'\nassert solution('5 4 1 2 3') == '-1'\nassert solution('5 4 1 2 3 4') == '1 4'"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5'\nassert solution('4\\n2 1 4 3\\n') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"-1\"\nassert solution(\"2 3 4 5\") == \"1 4 5\"\nassert solution(\"5 1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 2 4') == '1 4'\nassert solution('5 1 2 3 4') == '1 2 3 4'\nassert solution('4 1 2 3') == '1 2 3'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 3 2 4\n''') == '1 4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''\n4\n2 1 4 3\n''') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 2 4') == '1 4'\nassert solution('5 1 2 3 4') == '1 2 3 4'\nassert solution('4 1 2 3') == '-1'"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''4\n1 2 3 4\n''') == '-1'\nassert solution('''6\n1 2 3 4 5 6\n''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1 4'\nassert solution('5') == '-1'\nprint('PASSED')\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"1 2 3 4 5\""
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"8\"\nassert solution(sample_input_2) == \"1\"\nassert solution(sample_input_3) == \"5\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..') == '8'\nassert solution('3 3\\n...\\n...\\n') == '1'\nassert solution('2 6\\n.#####\\n#####.\\n') == '5'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n''') == '8'\nassert solution('''\n3 3\n...\n.#.\n...\n''') == '1'\nassert solution('''\n2 6\n.#####\n#####.\n''') == '5'\nassert solution('''\n8 8\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 6\\n.#####\\n#####.\") == \"5\"\nassert solution(\"4 8\\n.######\\n.######.\\n..#..#..\\n\") == \"8\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 8\\n.######.\\n.######.\\n..#..#..\\n') == '8'\nassert solution('3 3\\n...\\n...\\n') == '1'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 8') == '8'\nassert solution('3 3') == '1'\nassert solution('2 6') == '5'\n'''"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '2'\nassert solution('5\\n') == '3'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1', 'test 1 failed'\nassert solution('1 2') == '1', 'test 2 failed'\nassert solution('1 2') == '1', 'test 3 failed'\nassert solution('1 2') == '1', 'test 4 failed'\nassert solution('1 2') == '1', 'test 5 failed'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 8') == '8'\nassert solution('3 3') == '1'\nassert solution('2 6') == '5'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 4\n.#####\n#####.\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''\n3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''\n3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '6'\nassert solution('1 3\\n') == '9 7'\nassert solution('1 2\\n') == '3 2'\nassert solution('1 3\\n') == '-1'"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 2\") == \"13\", \"Expected 13\"\nassert solution(\"3 3 3\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5 5') == '6'\nassert solution('3 3 3') == '13'\nassert solution('3 1 1') == '2'\nassert solution('1 3 2') == '19'"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '13'\nassert solution('3 3 3') == '4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution('3 2 2') == '4 2 6 1 9 7 5 5 7 1 2 3 3'"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 3 3\n3 1 3\n1 3 2\n3 2 3\n\"\"\") == \"13\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 3 3\n3 1 3\n1 3 2\n3 2 3\n\"\"\") == \"13\"\nassert solution(\"\"\"\n3 2 2\n1 2\n2 1\n1 2\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1''') == \"6\"\nassert solution('''3 3 3\n3 1 3\n1 3 2\n3 2 3\nSample Output 2:\n13\n4 2 6 1 9 7 5 5 7 1 2 3 3''') == \"13\"\nassert solution('''3 2 2\n1 2\n2 1\n1 2\nSample Output 2:\n-1''') == \"-1\"\nprint('All test cases passed')"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\") == \"6\"\nprint(solution(\"4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n\"))\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 3\") == \"13\"\nassert solution(\"3 3 3\") == \"13\"\nassert solution(\"3 3 3\") == \"13\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '1 3'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '1 5'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1 1'\nassert solution('4') == '1 5'\nassert solution('3') == '1 5'\nassert solution('2') == '1 5'\nassert solution('1') == '1 5'"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4''') == '1 5'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4''') == '1 6'\nassert solution('''3\n1\n2\n3''') == '4 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2 3'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 1'\nassert solution('5') == '1 1'\nassert solution('4') == '1 3'\nassert solution('6') == '2 1'\nassert solution('10') == '3 1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3\n3\n3\n3\n3\n1\n2\n3\n4\n''') == '1 5'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1 1'\nassert solution('5') == '1 5'\nassert solution('4') == '1 1'\nassert solution('0') == '1 1'\nassert solution('1') == '1 1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3') == '1 1'\nassert solution('5\\n4\\n3\\n2\\n1\\n0\\n1\\n2\\n3') == '1 4'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n3\n3\n3\n3\n1\n2\n3\n4\nSample Output 4:\n1 5\n\"\"\") == \"1 5\"\n\nassert solution(\"\"\"\n3\n3\n3\n3\n1\n2\n3\n4\nSample Output 5:\n1 5\n\"\"\") == \"1 5\""
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4\\n') == '1'\nassert solution('5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3 1\") == \"1\"\nassert solution(\"5 6 0 3 1 2\") == \"5\"\nassert solution(\"6 7 0 3 1 2\") == \"5\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '5'\nassert solution('''\n5\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '4'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '3'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == \"1\"\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == \"5\"\nassert solution('''\n6\n3 0\n1 1\n2 1\n1 3\n0 4\n5 1\n''') == \"5\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n3 0\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n\"\"\") == \"5\"\n\"\"\"\n4"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 0\\n3 1\\n3 2') == '1'\nassert solution('5 0\\n3 1\\n2 2\\n1 3\\n0 4') == '5'\nassert solution('10 0\\n8 7\\n6 6\\n5 5\\n4 4\\n3 3\\n2 2\\n1 1') == '8'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\nassert solution('''6\n3 0\n1 1\n2 1\n1 3\n0 4\n''') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n'''\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 0\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"3 4\") == \"3\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\n\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n\nassert solution('''\n6\n3 0\n1 1\n2 1\n1 3\n0 4\n5 1\n''') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\nassert solution(\"7\") == \"6\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''\n8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '4'\nassert solution('8') == '0'\nassert solution('9') == '5'"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"8\") == \"0\"\nassert solution(\"9\") == \"5\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\nassert solution('''8\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''\n8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\nassert solution('''\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\nassert solution('''\n10\n1 2 1\n2 3 1\n3 4 2\n4 5 3\n5 6 3\n6 7 3\n7 8 1\n8 9 2\n''') == '9'"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"8\") == \"0\"\nassert solution(\"8\") == \"0\"\nassert solution(\"9\") == \"5\""
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\nassert solution('''9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\") == \"4\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '5'\nassert solution('2 1') == '6'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"6\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"2 4\") == \"5\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == \"5\"\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == \"6\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '30'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\") == \"5\"\nassert solution(\"2 1\\nR10 V1 V2 V1 E\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\nV1 V2 V1 V1 V2\n''') == '5'\n\nassert solution('''2 1\nR10 V1 V2 V1 E\n''') == '6'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '5'\nassert solution('2 1') == '6'\nassert solution('1 2') == '5'\nassert solution('2 1') == '6'\nassert solution('1 2') == '5'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"6\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n3 5\nV1 V2 V3 V1 V2\nV3 E3 V1 V3 V1\nV2 E3 V2 V3 V2\nV1 E3 V1 V3 V3\n''') == '28'\n''')\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution('''\n1 2\nV1 V2\nR2 V1\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10 V1 V2\nR10"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 24\n''') == '38'\nassert solution('''10 11\n''') == 'impossible'\nassert solution('''9 216\n''') == '546'''\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\nprint(solution(input()))\n\n\"\"\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"15\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"10 24\\n\"\n    \"10 11\\n\"\n    \"9 216\"\n) == \"impossible\""
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\nassert solution('9 827') == 'impossible'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 15 0.33333 30') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('3 4 1 0') == '2.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('3 4 1 0') == '2.0'\nassert solution('1 2') == '1.0000'\nassert solution('1 3') == '0.3333'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 15 0.33333333 30\n22 60 0.66666670 70\n0 10''') == \"466.662\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('10') == '10.00005'"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n\"\"\") == \"466.662\"\nassert solution(\"\"\"3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n\"\"\") == \"10.00005\""
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 60 2 1\") == \"466.662\"\nassert solution(\"3 4 2 1\") == \"10.00005\"\nassert solution(\"3 4 1 0\") == \"2.0\"\nprint(\"Congratulations! All tests passed!\")\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 2 1') == '10.00005'\nassert solution('20 60 2 1') == '466.662'\nassert solution('5 15 0.33333 30') == '10.00005'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 6 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 2 1') == '10.00005'\nassert solution('5 20 2 1') == '466.662'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n\nprint(solution('''\n2\nblue red 1.0\nred pink 1.5\n'''))"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1.500000000000000'\nassert solution('2') == '0.000000000000000'\nassert solution('4') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1.500000000000000\"\nassert solution(\"2\") == \"0.000000000000000\"\nassert solution(\"4\") == \"10.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0.000000000000000\"\nassert solution(\"3\") == \"1.500000000000000\"\nassert solution(\"3 4.00000\") == \"1.70000000000000\"\nassert solution(\"3 4.000000\") == \"1.70000000000000\"\nassert solution(\"3 4.0000000\") == \"1.70000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0.000000000000000'\nassert solution('3') == '1.500000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1.500000000000000\"\nassert solution(\"2\") == \"0.000000000000000\"\nassert solution(\"4\") == \"10.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''3\nblue red 1.0\nred pink 1.5\nblue green 1.9\n''') == '10.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '10.000000000000000'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1 1 1 0') == '180'\nassert solution('3 2 2 1 1') == '22'\nassert solution('3 1 2') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == \"180\"\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == \"22\"\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == \"0\""
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n') == '180'\nassert solution('4 1 1 1 1\\n2 3 1 5 3 2\\n2 1 2\\n1 1\\n2 1\\n') == '22'\nassert solution('8 1 1 1 1 1 1 1 1\\n5 5 5 5 5 5\\n2 3 2\\n1 1\\n1 2\\n1 1\\n2 3\\n') == '0'\n\nstdin = '''8 1 1 1 1 1 1 1 1\n5 5 5 5 5 5\n2 3 2\n1 1\n1 2\n1 1\n2 3\n'''\n\ns = solution(stdin)\nprint(s)\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"too many\"\nassert solution(\"3 1 1 1 0\") == \"180\"\nassert solution(\"2 2 2 1 1\") == \"22\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1 1 1 0\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n') == '180'\nassert solution('3 2 2 1 1\\n2 3 2\\n1 1\\n1 2\\n1 2\\n1 3\\n1 1\\n2 3\\n') == '22'\nassert solution('6 1 1 1 1\\n2 3 1 5 3 2\\n2 1 2\\n3 3 4 5\\n1 6\\n') == 'too many'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"too many\"\nassert solution([0, 2, 3, 4, 5]) == \"too many\"\nassert solution([4, 2, 3, 1, 5]) == \"too many\"\nassert solution([4, 5, 3, 1, 2]) == \"too many\"\nassert solution([4, 5, 2, 3, 1]) == \"too many\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\nSample Output 4:\n0\n\n''') == 'too many'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '180'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\nSample Output 5:\ntoo many\n\n''') == 'too many'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n\"\"\") == \"180\"\nassert solution(\"\"\"3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\"\"\") == \"too many\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 4:\n14\n''') == '180'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2\\n..\\n...') == '20 20'\nassert solution('5 5 3\\n###\\n###\\n###\\n###\\n###\\nup 1\\ndown 3\\nleft 2\\nup 1\\nup 2\\ndown 1\\ndown 3\\nup 2\\ndown 3\\ndown 4\\ndown 5\\nup 4\\nup 5\\ndown 2\\nright 2\\ndown 2\\nup 4\\ndown 4\\nleft 2\\nup 4\\ndown 4\\ndown 3\\ndown 2\\nup 5\\nup 4\\ndown 4\\nright 2\\nup 5\\ndown 2\\nup 2\\nleft 3\\nup 3\\ndown 2\\ndown 3\\nup 3\\nup 3\\ndown 2\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\nup 3\\ndown 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\ndown 3\\ndown 2\\nup 3\\ndown 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3\\nup 3"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 2') == '17 17'\nassert solution('6 8 5') == '20 20'\nassert solution('5 6 5') == '-1 -1'\nassert solution('10 3 10') == '-1 -1'\nassert solution('2 1 2') == '-1 -1'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2') == '17 17'\nassert solution('10 10 10') == '20 20'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 8 5') == '20 20'\nassert solution('6 8 5') == '17 17'\nassert solution('3 3 2') == '-1 -1'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 8 5\\n' +\n                '........\\n' +\n                '...#....\\n' +\n                '########\\n' +\n                '#..#...#\\n' +\n                '#..#####\\n' +\n                '#.......\\n' +\n                'up 3\\n' +\n                'right 7\\n' +\n                'down 2\\n' +\n                'left 4\\n' +\n                'up 3\\n' +\n                'solution()\\n') == '20 20'\n\nassert solution('3 3 2\\n' +\n                '...\\n' +\n                '...\\n' +\n                'up 2\\n' +\n                'right 2\\n' +\n                'solution()\\n') == '17 17'\n\nassert solution('1 1\\n' +\n                '.\\n' +\n                'up 1\\n' +\n                'solution()\\n') == '-1 -1'\n\nassert solution('8 8 6\\n' +\n                '.....\\n' +\n                '##..\\n' +\n                '###.\\n' +\n                '##..\\n' +\n                '.....\\n' +\n                'up 3\\n' +\n                'right 2\\n' +\n                'solution()\\n') == '20 20'\n\nassert solution('6 8 5\\n' +\n                '........\\n' +\n                '...#....\\n' +\n                '########\\n' +\n                '#..#...#\\n' +\n                '#..#####\\n' +\n                '#.......\\n' +\n                'up 3\\n' +\n                'right 7\\n' +\n                'down 2\\n' +\n                'left 4\\n' +\n                'up 3\\n' +\n                'solution()\\n') == '20 20'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"20 20\"\nprint(solution(input_))"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 2') == '17 17'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\\n.\\n#\\n#\\nup 2\\nright 2\\n\") == \"17 17\"\nassert solution(\"3 3 2\\n.\\n#\\n#\\nup 2\\nright 2\\nup 3\\ndown 3\\n\") == \"20 20\"\nassert solution(\"3 3 2\\n.\\n#\\n#\\nup 2\\nright 2\\nup 3\\ndown 3\\nup 3\\ndown 3\\n\") == \"17 17\"\nassert solution(\"3 3 2\\n.\\n#\\n#\\nup 2\\nright 2\\nup 3\\ndown 3\\nup 3\\ndown 3\\nup 3\\ndown 3\\n\") == \"17 17\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''\n0\n2\n2 20 35\n2 88 200\n''') == '88'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('371') == 'impossible'\nassert solution('310') == '300'\nassert solution('90') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n2\n20 40\n20 88\n90 300\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n3\n2\n20 40 65\n2 100 150\n2 300 320\n\"\"\") == \"200\"\nassert solution(\"\"\"\n10\n3\n2 20 40 65\n2 100 150\n2 300 320\n1 40 100\n1 300 300\n1 300 600\n\"\"\") == \"600\"\nassert solution(\"\"\"\n5\n3\n2 20 40 65\n2 100 150\n2 300 320\n1 40 100\n1 300 300\n1 300 600\n\"\"\") == \"800\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''7\n3\n2 40 65\n2 100 150\n2 300 320\n2 400 450\n2 500 600\n2 600 800''') == '400'\nassert solution('''4\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '400'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '88'\nassert solution('1\\n5\\n3 50 75\\n4 100 95\\n2 200 120\\n1 200 200\\n') == '200'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'impossible'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == 'impossible'\nassert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == '300'\nassert solution('1\\n2\\n2 10 12\\n2 20 30') == 'impossible'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'impossible'\nassert solution() == '200'"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"...#.\\n###.#\\n##.#.\") == \"cannot fold\"\nassert solution(\"#...\\n....#\\n#.##\\n###.#\\n##...\\n#.##\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......') == 'can fold'\nassert solution('......\\n#.....\\n######\\n#.....\\n......\\n......') == 'cannot fold'\nassert solution('......\\n##.##\\n#..#.\\n##.##\\n#..#.\\n..##..\\n...#.\\n###...\\n#.#...') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"......#.#.#......#.....##....##....###....###....#.....##......#......##......#.###...#.....#........#..##.##.....#..###......\") == \"can fold\"\nassert solution(\"..##....#..#..#....##....###....##....##....##....##....#..#..#....##....#..#....##....##....##....##....##....##....##....#..#....##....##....#\") == \"cannot fold\"\nassert solution(\"..#....#.#..#....##....##....##....##....##....##....##....#..#....#.#..#....#.#..#....##....##....##....##....##....##....##....##....##....##....#\") == \"can fold\""
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('.#.\\n##.\\n####') == 'can fold'\nassert solution('.##\\n##.\\n####') == 'cannot fold'\n\n'''\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"......\\n..#..\\n......\\n..#..\\n......\\n......\") == \"can fold\"\nassert solution(\"......\\n...#..\\n......\\n....#.\\n......\\n......\") == \"cannot fold\""
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('......') == 'cannot fold'\nassert solution('......#') == 'cannot fold'\nassert solution('.#...#') == 'can fold'\nassert solution('..#....') == 'can fold'\nassert solution('#....#.') == 'can fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"....##..#.#...\") == \"cannot fold\"\nassert solution(\"#######..##.##.\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('......') == 'can fold'\nassert solution('##....') == 'cannot fold'\n\n-- Stretch Goal --\nWhat if we have many more initial shapes? How would we keep track of the current solution?\n\n-- Hints --\nUse a stack data structure.\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('......#..#......#......#.....') == 'cannot fold'\nassert solution('#..#.###...#######.#.#.##....#') == 'can fold'\nassert solution('#.#.#....###.#.#...#.#..#....#') == 'cannot fold'\nassert solution('...#.##...#...##....#.#.#.##....#') == 'can fold'\nassert solution('#.##...#...##....#.#.#.##....#') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('......\\n......\\n######\\n......\\n......\\n......') == 'cannot fold'\nassert solution('......\\n#...#\\n##..#\\n#..##\\n##...\\n......') == 'can fold'\nassert solution('#...#\\n##..#\\n#..##\\n#.###\\n###.#\\n#.#..\\n......') == 'cannot fold'\nassert solution('##.##\\n##.##\\n##.##\\n##.##\\n##.##\\n##.##\\n##.##') == 'can fold'"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nprint(solution(input()))\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n\"\"\""
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input().strip()) == \"abc\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n\n\"\"\"\n\n#################################################################################################################################################\n#################################################################################################################################################\n#################################################################################################################################################"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n\"\"\""
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\""
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4') == '4', 'One trip is invalid'\nassert solution('2 5') == '6', 'Two trips are invalid'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"4\"\nassert solution(\"2 5\") == \"6\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"2 10005\") == \"6\"\nassert solution(\"1 4\") == \"4\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 1\n1 1\n1 2\n1 3\n1 4\n2 4\n\"\"\") == \"4\", \"Should return 4\"\nassert solution(\"\"\"\n2 2\n1 1\n2 1\n\"\"\") == \"2\", \"Should return 2\"\nassert solution(\"\"\"\n4 1\n1 1\n1 2\n1 3\n1 4\n2 4\n\"\"\") == \"4\", \"Should return 4\""
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 4\n2 5''') == '4'\nassert solution('''2\n1 4\n2 10005\n0 15\nSample Input 4:\n10\n1 2\n4 5\n2 3\n3 4\n6 7\n8 9\n10 11\n12 13\n14 15\n16 17\n18 19\n20 21\n22 23\n24 25\n26 27\n28 29\n30 31\n32 33\n34 35\n36 37\n38 39\n40 41\n42 43\n44 45\n46 47\n48 49\n50 51\n52 53\n54 55\n56 57\n58 59\n60 61\n62 63\n64 65\n66 67\n68 69\n70 71\n72 73\n74 75\n76 77\n78 79\n80 81\n82 83\n84 85\n86 87\n88 89\n90 91\n92 93\n94 95\n96 97\n98 99\nSample Output 4:\n72''') == '64'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(\"\"\"\n3\n1 4\n2 5\n0 15\n\"\"\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('2') == '4'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('2') == '6'"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('2') == '4'\nassert solution('3') == '6'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('2') == '4'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '2'\nassert solution('3') == '3'\nassert solution('5') == '0'"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n7 2 8 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n6\n1 3 4 2 6\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n1 1 2 3 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n7\n2 3 4 4 8 12 24\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n3\n7 7 7\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n5\n1 2 3 2 1\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1 5 1 7') == '1'\nassert solution('3 6 9 5') == '4'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''\n3\n7 7 7\n''') == '3'\nassert solution('''\n5\n1 2 3 2 1\n''') == '0'\n'''"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '7\\n'\n    '2 3 4 4 8 12 24\\n'\n) == '2'\nassert solution(\n    '3\\n'\n    '7 7 7\\n'\n) == '3'\nassert solution(\n    '5\\n'\n    '1 2 3 2 1\\n'\n) == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n') == '2'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '0'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '3'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '5'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''\n5\n1 2 3 2 1\n''') == '3'\nassert solution('''\n5\n1 2 3 2 1\n''') == '0'"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4 5 2 1') == '2'\nassert solution('1 2 3 4 5 2 1') == '4'\nassert solution('1 2 1 1') == '0'\nassert solution('7 4 2 2 8 4 1') == '3'\nassert solution('1 2 3 4 5 2 1') == '3'\nprint('all tests passed')"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''3\n7 7 7\n''') == '3'\nassert solution('''5\n1 2 3 2 1\n''') == '0'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5 4\") == \"3\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 2 10\") == \"1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3\""
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5 4\") == \"3\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 2 10\") == \"1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5 4') == '3'\nassert solution('1 2 1') == '1'\nassert solution('2 2 10') == '1'"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(test_input_1) == \"3\"\nassert solution(test_input_2) == \"1\"\nassert solution(test_input_3) == \"-1\""
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5 4') == '3'\nassert solution('1 2 1') == '1'\nassert solution('2 2 10') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == '3'\nprint(solution('''\n2 5 4\nS#.F.\n.MFMG\n'''.strip()))\nassert solution('''\n1 2 1\nGS\n'''.strip()) == '1'\nassert solution('''\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 4\\nS#.F.\\n.MFMG') == '3'\nassert solution('1 2 1\\nGS') == '1'\nassert solution('2 2 10\\nS#\\n#G') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\n\") == \"3\"\nassert solution(\"1 2 1\\nGS\\n\") == \"1\"\nassert solution(\"1\\n5 2 3\") == \"3\"\nassert solution(\"2\\n3\") == \"0\"\nassert solution(\"1\\n0\") == \"0\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS...\\n.G...\\n...G\") == \"1\"\nassert solution(\"3 7\\n.SS.S.\\n....S.\\n....G\") == \"1\"\nassert solution(\"3 7\\n.G..#.\\n....S.\\n....G\") == \"2\"\nassert solution(\"3 7\\n.#.G#.\\n...S.\\n...G\") == \"0\"\nassert solution(\"3 7\\nS...\\n.G.#.\\n...G\") == \"1\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n') == '1'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\\n') == '1'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n') == '2'"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\nS..\n.#.\n..G\nDRRDD\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 6\n#####.\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n.......\n.G.##S.\n.......\n''') == '1'\nassert solution('''\n3 7\n.......\n.G.##S.\n.......\n''') == '1'\nassert solution('''\n3 7\n.#.....\n.G.##S.\n.......\n''') == '2'\nassert solution('''\n3 7\n.#.....\n.G.##S.\n.......\n''') == '0'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '1'\nassert solution('1 7') == '1'\nassert solution('2 3') == '2'\nassert solution('2 7') == '2'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\nS..\n.#.\n..G''') == '1'\nassert solution('''3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR''') == '1'\nassert solution('''3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR''') == '2'\nassert solution('''4 5\n#########\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\\n\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"1\"\nassert solution(\"3 7\\n.....\\n.G.##S.\\n.......\\nLDLDLLDR\\n\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == '1'\nassert solution(input_data_2) == '1'\nprint(solution(input_data_3))\nprint(solution(input_data_4))\nprint(solution(input_data_5))\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\nS..\n.#.\n..G\nDRRDD\n''') == '1', \"First\"\nassert solution('''\n3 7\n.......\n.G.##S.\n.......\nLDLDLLDR\n''') == '1', \"Second\"\nassert solution('''\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n''') == '2', \"Third\""
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\\nDRRDD\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n100 0 101\\n0 200 199') == 'uncertain'\nassert solution('2\\n0 0 1') == 'impossible'\n\"\"\""
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'impossible'\nassert solution('''\n2\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '999200'\nassert solution('5', '2') == '799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == \"uncertain\"\nassert solution('3') == \"1000200 799\"\nprint(solution(input()))\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1000200 799\"\n\nassert solution(stdin=\"3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222\") == \"1000200 799\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n\"\"\") == \"1000200 799\"\nassert solution(\"\"\"\n2\n100 0 101\n0 200 199\n\"\"\") == \"uncertain\"\nassert solution(\"\"\"\n2\n1 1 1\n0 0 0\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''2\n100 0 101\n0 200 199\n''') == 'uncertain'\nassert solution('''3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == 'impossible'\nassert solution('''2\n100 0 100\n0 200 199\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'impossible'\nassert solution('1') == '999'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n100 0 100\\n0 200 199') == 'impossible'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('2') =='syntax error'\nassert solution('3') == '1'\nassert solution('3') =='syntax error'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18') == '2\\n1'\nassert solution('2\\n4 8\\n9 7\\n14 18\\n19 17') == '1\\n2'"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2 1 2'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '1 2 2'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') =='syntax error'\n''')\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '1\\n2\\n'\nassert solution(input) =='syntax error'\n\nprint(solution(input))\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 4\n6 7\n3 5\n''') == '1 2 3'\n\nassert solution('''\n4\n2 4\n6 7\n3 5\n''') == '1 2 3'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('4 7') == '1'\nassert solution('4 7') == '2'\nassert solution('4 7') == '1'\nassert solution('4 7') == '2'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2\\n1\\n'\nassert solution('''\n3\n4 7\n9 8\n14 17\n19 18\n''') =='syntax error\\n'\nassert solution('''\n3\n4 7\n9 8\n14 17\n19 18\n''') =='syntax error\\n'\nassert solution('''\n3\n4 7\n9 8\n14 17\n19 18\n''') =='syntax error\\n'\n\n'''"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 7\n9 8\n14 17\n19 18\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n4 7\n14 17\n9 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n4 7\n9 7\n14 18\n19 17\n\"\"\") == \"syntax error\"\nassert solution(\"\"\"\n2\n4 7\n9 8\n14 17\n19 18\n\"\"\") == \"syntax error\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2 1\\n1 2\\n', 'Should be 2 1\\n1 2'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 7\\n9 8\\n14 17\\n19 18\") == \"2\\n1\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ _\\n\") == \"86400\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ 170\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81') == '1'\nassert solution('_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ 170') == '8640'\nassert solution('160 _ _ 136 _ _ _ _ _ 170') == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81') == '1'\nassert solution('_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ 85 63 153') == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n_ 95 _ _ _ _ _ _ _ _ _\n_ 4 51 53 _ 99 51 _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n''') == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\") == \"1\"\nassert solution(\"_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ 170\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('90 22 6 0 _ _ _ 81') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170') == '8640'\nprint(solution(input()))"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ 115 26 94\\n\") == \"8640\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''10\n2 1\n1 5\n3 1\n4 3\n''') == '24'"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '8'\nassert solution('5') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '8'\nassert solution('5') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\\n1 3\") == \"2\"\nassert solution(\"5\\n2 1\\n1 5\\n3 1\\n4 3\") == \"8\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 2\n1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n2 1\n1 5\n3 1\n4 3\n\"\"\") == \"8\"\nassert solution(\"\"\"\n10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n\"\"\") == \"24\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '24'\n\"\"\"\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''\n3\n2 1\n1 3\n3 1\n''') == '4'\nassert solution('''\n10\n2 1\n1 5\n3 1\n4 3\n5 6\n7 8\n5 9\n5 10\n''') == '24'\n\n'''\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''\n10\n2 1\n1 5\n3 1\n4 3\n''') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '2'\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''10\n2 1\n1 5\n3 1\n4 3\n''') == '24'\nprint('All tests passed!')"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nsecretmessage\nboot\n''') == 'essa'\nassert solution('''\ntreetreetreetree\nwood\n''') == '3'\nassert solution('''\noranges\napples\n''') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nisadog\nhippo\n''') == 'hippo'\nassert solution('''\ndoggo\nkacfog\n''') == 'doggo'\nassert solution('''\nbaybay\nbaybay\n''') == 'baybay'\nassert solution('''\nzap\nzap\n''') == 'zap'\nassert solution('''\noieaoie\noieaoie\n''') == 'oieaoie'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('boot') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"3\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"boot\") == \"3\"\nassert solution(\"treetreetreetree\") == \"0\"\nassert solution(\"oranges\") == \"0\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == '3'\nassert solution('treetreetreetree') == '0'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nttt\n''') == 'ttt'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\na\nb\nc\nd\ne\nf\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == '3'\nassert solution('treetreetreetree') == '0'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"boot\") == \"essa\"\nassert solution(\"treetreetreetree\") == \"3\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"<<<\") == \"4\"\nassert solution(\"<v<>\") == \"2\"\nassert solution(\"v<^>\") == \"2\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n>^<^\\n######\\n#.R#\\n#....#\\n#..#\\n######\\n') == '1'\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n') == '4'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''>^<^''') == '1'\nassert solution('>^<^') == '1'\nassert solution('<^<') == '1'\nassert solution('^<<') == '1'\nassert solution('^<^') == '2'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n>^<^') == '2'\nassert solution('4\\nv<^>') == '4'\nassert solution('4\\n<<<') == '1'\n\nprint(solution('''3\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution('''>^<^\n######\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\nassert solution('''\n3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n') == '3'\nassert solution('3\\n') == '6'\nassert solution('4\\n') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1 2\\n1\\n1 2\\n1\\n1 2\\n') == '2'\nassert solution('2\\n1 2\\n1\\n1 2\\n1\\n1 2\\n') == '3'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\nassert solution('''\n3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\nassert solution('''\n2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n''') == '11'"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\n\nassert solution('''\n3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\n\nassert solution('''\n2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n3 0 2 3 1 0 3 1\n5 2 4 2 1 0 4 1\n''') == '3'\nassert solution('''\n1\n1 2\n1 1\n''') == '2'\nassert solution('''\n4\n4 1 2 3 1\n0 2 1 3 0\n1 0 0 2 1\n3 0 2 1 0\n''') == '4'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3 0 2 9 2 3 0') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0') == '6'\nassert solution('3\\n3 5 50 55 8 1 -16 2') == '6'"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0') == '3.7320508076'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '163.5274740179'"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0''') == '3.7320508076'\nprint('all test cases passed')"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"40.0 0.0 0.0 0.0\") == \"163.5274740179\"\nassert solution(\"95.0 0.0 95.0 80.0\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\") == \"3.7320508076\"\nassert solution(\"0.0 0.0 4.0 0.0\") == \"1.41421356237\"\nassert solution(\"0.0 0.0 0.0 0.0\") == \"0.0\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0\\n3') == '163.5274740179'\nassert solution('60.0 0.0 50.0 170.0\\n3') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"0.0 1.0 4.0 1.0\") == \"3.7320508076\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\") == \"163.5274740179\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\nassert solution('5 3 5') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 5 3\nrarity''') == 'rarity'\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 5\") == \"madam\"\nassert solution(\"6 5 3\") == \"rarity\"\n\n'''\n\nn, k, p = map(int, stdin.readline().split())\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\ncounts = collections.Counter(alphabet)\nalphabet = set(alphabet)\nn_s = sum(counts.values())\nmin_v = min(counts.values())"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 5 3\n''') == 'rarity'\n\nassert solution('''\n9 8 1\n''') == 'canterlot'\n\nassert solution('''\n5 3 5\n''') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 5 3\nrarity\ncanterlot''') == 'rarity'\nassert solution('''9 8 1\ncanterlot\nmadam''') == 'canterlot'\nassert solution('''5 3 5\ncanterlot\nmadam''') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n\n##1.6.3. Palindromic Substrings from a String\n\nThe string $s$ is a palindromic string if it is a mirror image of itself.\n\nFor example, $s=aba$ is a palindromic string because it is the mirror image of $a$ and $b$:\n\n$$a\\nba$$\n\nYou are given a string $s$ of length at most 100.\n\nReturn the number of palindromic substrings of length $L$ from $1$ to $100$, inclusively, that can be made from $s$ as a whole.\n\nNote that all characters can be used for forming any length palindrome, and that in particular, $a$ and $b$ are not palindromic substrings.\n\nWrite a function:"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 5 3''') == 'rarity'\nassert solution('''9 8 1''') == 'canterlot'\nassert solution('''5 3 5''') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''Blue Ridge mountain road. Leaves, glowing in autumn sun,\nfall in Virginia. ''') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\\n'\nassert solution('''Who would know if we had too few syllables?''') == 'Who would know if we had too few syllables?\\n'\nassert solution('''International contest- motivation high Programmers have fun!.''') == 'International contest- motivation high\\nProgrammers have fun!.\\n'\nassert solution('''I dream of heights and heights. I dream of heights and heights. I dream of heights and heights.\nI dream of heights and heights. I dream of heights and heights. I dream of heights and heights.\nI dream of heights and heights. I dream of heights and heights. I dream of heights and heights.\nI dream of heights and heights. I dream of heights and heights. I dream of heights and heights.\nI dream of heights and heights. I dream of heights and heights. I dream of heights and heights.\nI dream of heights and heights. I dream of heights and heights. I dream of heights and heights.''') == 'I dream of heights and heights. I dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.\\nI dream of heights and heights. I dream of heights and heights.'"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nBlue Ridge mountain road. Leaves, glowing in autumn sun,\nfall in Virginia.\n''') == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution('''\nWho would know if we had too few syllables?\n''') == \"Who would know if we had too few syllables?\"\nassert solution('''\nInternational contest- motivation high Programmers have fun!.\n''') == \"International contest- motivation high Programmers have fun!.\\n\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('Blue Ridge mountain road. $5$ syllables each, $7$ syllables.') == 'Blue Ridge mountain road. $5$ syllables each, $7$ syllables.'\nassert solution('John loves Mary. Mary loves Mary.') == 'John loves Mary. Mary loves Mary.'\nassert solution('Bashful books. Happy Thanksgiving. Spacious voices. Pays. Applejack is a fruit.') == 'Bashful books. Happy Thanksgiving. Spacious voices. Pays. Applejack is a fruit.'"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Blue Ridge mountain road.') == 'Blue Ridge mountain road.'\nassert solution('Leaves, glowing in autumn sun, fall in Virginia.') == 'Leaves, glowing in autumn sun, fall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!.') == 'International contest- motivation high Programmers have fun!'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\nWho would know if we had too few syllables?''') == '''Blue Ridge mountain road.\nLeaves, glowing in autumn sun,\nfall in Virginia.'''.strip()\nassert solution('''International contest- motivation high Programmers have fun!.\nSample Output 3:\nInternational\ncontest- motivation high\nProgrammers have fun!.\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Blue Ridge mountain road.') == 'Blue Ridge mountain road.'\nassert solution('Leaves, glowing in autumn sun, fall in Virginia.') == 'Leaves, glowing in autumn sun, fall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!.') == 'International contest- motivation high Programmers have fun!.\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    'Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution(\n    'Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution(\n    'International contest- motivation high Programmers have fun!.') == 'International contest- motivation high Programmers have fun!.\\n'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Leaves, glowing in autumn sun, fall in Virginia.\") == \"Leaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"\"\"\n    Abc\n    def\n\"\"\") == \"\"\nassert solution(\"\"\"\n    Abc\n    def\n    ghi\n\"\"\") == \"\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia. \") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\""
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'ThoreH'\nassert solution('2') == 'Thore is awesome'\nassert solution('2') == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreH'\nassert solution('''\n2\nThoreHusfeldt\nThoreTiemann\n''') == 'ThoreH'\nassert solution('''\n1\nThoreHusfeldt\nThoreTiemann\n''') == 'ThoreH'\nassert solution('''\n1\nThoreHusfeldt\nJohanSannemo\n''') == 'ThoreH'\n''')"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'ThoreH'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"Thore is awesome\""
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Thore'\nassert solution('2') == 'ThoreHusfeldt'\nassert solution('3') == 'Thore sucks'\nprint('You are a smart programmer. Time to check your code!')\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n\n2\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreH'\n\nassert solution('''\n\n2\nThoreHusfeldt\nJohanSannemo\n''') == 'Thore is awesome'\n\nassert solution('''\n\n2\nThoreHusfeldt\nThoreHusfeldt\n''') == 'Thore sucks'\n\n''') == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\nThoreTiemann') == 'Thore'\nassert solution('2\\nThoreHusfeldt') == 'Thore'\nassert solution('2\\nThoreHusfeldter') == 'Thore'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nThoreTiemann\") == \"ThoreHusfeldt\"\nassert solution(\"2\\nThoreHusfeldter\\nThoreHusfeldt\") == \"ThoreHusfeldt\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'Thore sucks'\nassert solution('') == 'Thore is awesome'\nassert solution('1') == 'Thore sucks'\nassert solution('2') == 'ThoreH is awesome'\nassert solution('3') == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreHusfeldt'\nassert solution('''2\nThoreHusfeldt\nJohanSannemo\n''') == 'ThoreHusfeldt'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldter\n''') == 'ThoreHusfeldter'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldter\nThoreHusfeldt\n''') == 'ThoreHusfeldt'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''P*P''') == '6'\nassert solution('''L*R''') == '25'\nassert solution('''**''') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('*') == '1'\nassert solution('*') == '1'\nassert solution('*') == '1'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\"\nprint(solution(input()))\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('L*R') == '25'\nassert solution('P*P') == '6'\nassert solution('*') == '33'"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''L*R\nL*R\nL*R''') == '25'\nassert solution('''L*R\n*R\nL*R''') == '25'\nassert solution('''L*R\n*R\n*R''') == '25'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nherp is derp\\nderp is herp') == 'yes'\nassert solution('3\\noskar not lukas\\nlukas is smart\\n') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"yes\"\nassert solution(\"1\") == \"wait what?\"\nassert solution(\"3\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\nderp is derp\nherp is derp\nherp is derp\nherp is derp\nderp is derp\nderp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp\nherp is derp"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n\") == \"yes\"\nassert solution(\n    \"3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n\") == \"wait what?\"\n\nassert solution(\"1\\nmoo not foo\\n\") == \"yes\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''herp is derp\nderp is herp\nherp is herp\nderp is derp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp\nherp is herp"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'yes'\nassert solution('4') == 'wait what?'\nassert solution('1') == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    herp is derp\n    derp is herp\n    herp is herp\n    derp is derp\n    ''') == \"yes\", \"Tests 1 (see solutions.py)\"\nassert solution('''\n    oskar not lukas\n    oskar is poptart\n    lukas is smart\n    ''') == \"wait what?\", \"Tests 2 (see solutions.py)\"\n''')\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == 'yes'\nassert solution(sample_input_2) == 'wait what?'\nassert solution(sample_input_3) == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nherp is derp\\nderp is herp\\nherp is herp') == 'yes'\nassert solution('2\\noskar not lukas\\noskar is poptart\\nlukas is smart') == 'wait what?'\nassert solution('1\\nmoo not foo\\n') == 'yes'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2 1\"\nassert solution(\"1\") == \"1 1\"\nassert solution(\"4\") == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 4'\nassert solution() == 'impossible'\nassert solution() == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nACMA\nACM\nACA\n''') == 'impossible', 'First'\nassert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4', 'Second'\nassert solution('''\n1\nAM\n''') == 'impossible', 'Third'\n''')\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nACCCCCCCCCCCCCC\nACCCCCCCCCCCCCC\nACCCCCCCCCCCCCC\nACCCCCCCCCCCCCC\nACCCCCCCCCCCCCC\n''') == '1 4'\n\nassert solution('''\n10\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nACCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\nAC"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1 4'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 4'\nassert solution('3') == 'impossible'\nassert solution('1') == 'impossible'\n'''"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\nA\") == \"1 4\\nA\"\nassert solution(\"2\\nAC\") == \"1 2\\nAC\\nAC\"\nassert solution(\"3\\nACM\") == \"1 2\\nAC\\nACM\\nACM\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 4\"\nassert solution(\"4\") == \"impossible\"\nassert solution(\"4\") == \"impossible\"\nassert solution(\"5\") == \"impossible\"\nassert solution(\"5\") == \"impossible\"\n\"\"\"\n\nfrom typing import List\nfrom collections import defaultdict"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"100 111 5\\n\"\n    \"20 0.5 10\\n\"\n    \"80 0.5 2\\n\"\n    \"85 0.5 2\\n\"\n    \"90 0.5 2\\n\"\n    \"95 0.5 2\\n\"\n    \"\") == \"124\"\n\nassert solution(\n    \"1 2 3\\n\"\n    \"0.6 0.8 0.9\\n\"\n    \"0.7 0.1 0.2\\n\"\n    \"0.8 0.3 0.7\\n\"\n    \"0.9 0.5 0.9\\n\"\n    \"1 0.7 1\\n\"\n    \"\") == \"18.9029850746\"\n\nassert solution(\n    \"1 2 3\\n\"\n    \"0.6 0.8 0.9\\n\"\n    \"0.7 0.1 0.2\\n\"\n    \"0.8 0.3 0.7\\n\"\n    \"0.9 0.5 0.9\\n\"\n    \"1 0.7 1\\n\"\n    \"2 1 1\\n\"\n    \"3 0.5 3\\n\"\n    \"\") == \"59.78850393747\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 1') == '3'\nassert solution('20 0.5 10') == '124'\nassert solution('80 0.5 2') == '124'\nassert solution('85 0.5 2') == '124'\nassert solution('90 0.5 2') == '124'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n20 100 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\nassert solution('''\n1 2 3\n0.5 0.5 0.5\n''') == '3'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\nassert solution('100 111 5') == '124'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"100 111 5\") == \"124\"\nassert solution(\"2 4 1\") == \"3\"\nassert solution(\"10 20 3\") == \"18.9029850746\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\nassert solution(\"10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n\") == \"18.9029850746\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 5') == '1'\nassert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2''') == '124'\nassert solution('''10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3''') == '18.9029850746'\nassert solution('''3\n5 0.3 8\n6 0.8 3\n8 0.9 3''') == '18.9029850746'\nassert solution('''1\n0.5 0.3 8\n0.5 0.8 3\n0.5 0.9 3''') == '11.9928233766'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\nassert solution('20 0.5 10') == '19.916666667'\nassert solution('100 111 5') == '124'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '4 3 4 2'\nassert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\nprint('Congratulations! All test cases passed.')"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n2 1 2\n''') == '2 1 2'\nassert solution('''\n5 22\n4 3 4 2\n''') == '4 3 4 2'\nassert solution('''\n4 1\n1\n''') == '1'\nassert solution('''\n4 1\n2\n''') == '2'\nassert solution('''\n5 8\n1 2 3 4 5 6 7 8\n''') == '1 2 3 4'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n2 1 2\n1\n3\n4 2 1''') == '2 1 2 1 3 4'\nassert solution('''5 2\n1\n1\n3\n4\n2\n1''') == '1 1 2 1 2'\nassert solution('''2 1\n1\n1\n3\n4\n2\n1''') == '1 2 1 2 1 3 4'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 3') == '1'\nassert solution('7 4') == '1'\nassert solution('5 6') == '2'\nassert solution('4 5') == '1'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '2'\nassert solution('7 6') == '2'\nassert solution('7 5') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\"\nassert solution(\"7\\n6\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n\") == \"0\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == \"2\"\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == \"2\"\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == \"0\"\nassert solution('''\n9 9\n1 2\n1 3\n1 4\n3 5\n5 6\n6 7\n7 8\n8 9\n4 5\n4 6\n6 7\n''') == \"0\""
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_lines) == \"2\"\nassert solution(input_lines) == \"0\"\nassert solution(input_lines) == \"0\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('7 5') == '0'\nassert solution('2 4') == '1'\nassert solution('6 3') == '2'\nassert solution('8 2') == '3'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 2:\n2\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 3:\n0\n''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(samples[0]) == \"2\"\nassert solution(samples[1]) == \"2\"\nassert solution(samples[2]) == \"2\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 3:\n0\n''') == '0'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '28.26445910'"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('-10 10') == '3.14159265'"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 0\n1.00 0.10\n''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00\n''') == '3.14159265'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('-10 10') == '3.14159265'\nassert solution('0 20') == '28.26445910'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 0') == '20.00000000'\nassert solution('-10 10') == '3.14159265'\nassert solution('0 20') == '28.26445910'\n\"\"\"\n\nstdin = \"20 0\"\nx, y = map(float, stdin.split(\" \"))\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '28.2645910'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 0') == \"20.00000000\"\nassert solution('10.00 1.00') == \"3.14159265\"\n\nassert solution('-10 10') == \"3.14159265\""
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265'\nassert solution('''0 20\n1.00 0.10''') == '28.26445910'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"20 0\n1.00 0.10\n\"\"\") == \"20.00000000\"\nassert solution(\"\"\"-10 10\n10.00 1.00\n\"\"\") == \"3.14159265\"\nassert solution(\"\"\"1 1\n1.00 0.10\n\"\"\") == \"1.00000000\"\nassert solution(\"\"\"0 0\n1.00 0.10\n\"\"\") == \"0.00000000\"\nassert solution(\"\"\"0 1\n1.00 0.10\n\"\"\") == \"1.00000000\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"1\") == \"1\", \"Single\"\nassert solution(\"2 3 5 7\") == \"16\", \"Many\"\nassert solution(\"4 2 100\") == \"100\", \"One by one\"\nassert solution(\"3 2 1\") == \"3\", \"One person\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 100\\n1 100\\n4 70\\n3 70\\n2 80\\n') == '150'\nassert solution('4\\n2 100\\n1 100\\n4 70\\n3 70\\n2 80\\n') == '170'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4\\n2 100\\n1 100\\n4 70\\n3 70\\n2 80\\n\"\n) == \"170\"\nassert solution(\n    \"3\\n2 120\\n3 50\\n2 80\\n\"\n) == \"150\"\nassert solution(\n    \"1\\n1 100\\n\"\n) == \"100\"\nassert solution(\n    \"1\\n1 100\\n\"\n) == \"100\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '170'\nassert solution('6') == '160'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''\n2\n2 100\n1 100\n4 70\n3 70\n''') == '150'\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 100\\n1 100\\n4 70\\n3 70\\n\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\\n\") == \"150\""
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"6 6\") == \"5\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n2 2\n1 2\n1 3\n2 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n1 2\n2 2\n2 3\n3 2\n3 3\n3 4\n4 4\n4 5\n5 3\n5 6\n6 6\n\"\"\") == \"8\""
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n''') == '5'\nassert solution('''\n2 2\n1 2\n1 3\n''') == '2'\n'''\n    lines = stdin.splitlines()\n    n = int(lines[0])\n    m = int(lines[1])\n    roads = []\n    for i in range(2, n + 1):\n        roads.append(tuple(int(x) for x in lines[i].split()))\n    roads_set = set(roads)\n    answer = 0\n    while len(roads_set) > 0:\n        current_road = roads.pop()\n        current_road_set = {x for x in roads if x[0] == current_road[1] or x[1] == current_road[0]}\n        current_road_set = {x for x in current_road_set if x[0]!= current_road[0] and x[1]!= current_road[1]}\n        roads_set = roads_set - current_road_set\n        roads.append(current_road)\n        answer = max(answer, len(roads))\n    return answer\n'''\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"6 6\") == \"5\"\nprint('\"Run\" is good. Great job!')"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"6 6\") == \"5\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n\"\"\") == \"5\"\nassert solution(\"\"\"\n100 100\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6\n\"\"\") == \"12\"\nassert solution(\"\"\"\n7 3\n1 2\n1 3\n2 4\n3 4\n3 5\n4 5\n5 6\n\"\"\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"6 6\") == \"5\"\nprint('Cheer up')\n\"\"\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"6 6\") == \"5\"\nprint('Tests passed')\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 3') == '1 2 3'\nassert solution('2 4') == '2 3 4'\nassert solution('3 4') == '3 4'\nassert solution('3 5') == '3 4 5'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0.5\"\nassert solution(\"8\") == \"0.0446429\""
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"0.5\"\nassert solution(\"8\") == \"0.0446429\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0.5'\nassert solution('8') == '0.0446429'\nassert solution('4') == '0.0'\nassert solution('5') == '0.05'\nassert solution('10') == '0.01'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 2\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\nSample Output 3:\n0.0446429\n''') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.5'\nassert solution('8') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n3\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\nSample Output 3:\n0.048182\n\"\"\") == \"0.048182\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == '0.5'\nassert solution(\"8\") == '0.0446429'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == '3'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 2 1\\n\") == \"1 6 1\""
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 3 2 1') == '3 1 6 1'\nassert solution('4 1 2 1 2') == 'IMPOSSIBLE'\nassert solution('5 2 2 2 5') == '4 2 4 4'\nassert solution('1 1 1 1 1') == '5 5 5 5'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 3 2 1\") == \"3 1 6 1\"\nassert solution(\"6\") == \"IMPOSSIBLE\"\nprint(solution(input()))\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 2 1 2\n\"\"\") == \"3\n\"\nassert solution(\"\"\"\n6\n1 2 3 3 2 1\n\"\"\") == \"1 6 1\"\nassert solution(\"\"\"\n4\n1 2 1 2\n\"\"\") == \"2 4 3\"\nassert solution(\"\"\"\n3\n1 2 1\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3'\nassert solution('4') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 3 2 1\\n\") == \"3\\n1 6 1\"\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2 3 3 2\\n\") == \"2\\n1 6 1\\n2 5 2\\n3 4 3\\n\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"IMPOSSIBLE\\n\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2\\n1 100\\n1 1') == '1 2 100'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"5 10 20 30 40 50\") == \"10 20 28 27 30 40 50\""
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n1 100\\n1 1\\n') == '1 2 100'\nassert solution('2\\n5 10 20 30 40 50\\n2 28 27\\n') == '10 20 28 27 30 40 50'\nassert solution('1\\n') == ''\nassert solution('2\\n') == ''\n\nIf you can't figure out the logic behind the code, but you can:\n- find out what it's supposed to do\n- implement it\n- test your code and see whether it works"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1 2'\nassert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == '10 20 30 40 50'\nassert solution('''\n5\n1 1 2 3 2 1\n''') == '1 1 2 3 2 1'\nassert solution('''\n2\n4\n2 2\n''') == '4 2 2'"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2\n1 100\n1 1\n''') == '1 2 100'\nassert solution('''\n3\n5 10 20 30 40 50\n2 28 27\n''') == '10 20 28 27 30 40 50'\nassert solution('''\n4\n6 1 2 3 4 5\n4\n1 2 3 4 5\n3\n2 1 3 4 5\n5\n3\n2\n1\n''') == '1 2 3 4 5'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1 2\"\nassert solution(\"2\") == \"1 100\"\nassert solution(\"5 10 20 30 40 50\") == \"10 20 28 27 30 40 50\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2\\n1 100\\n1 1') == '1 2 100'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1 2'\nassert solution('4') == '1 1 2 2'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_1) == '1 2 100'\nassert solution(input_2) == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n0\n\"\"\") == \"2600\"\nassert solution(\"\"\"\n3\nAB 1 1\nAC 2 1\nBC 2 1\n\"\"\") == \"506\"\nassert solution(\"\"\"\n2\nA 1 0\nB 1 0\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2600'\nassert solution('3') == '504'\nassert solution('1000') == '0'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'\n'''\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0\\n') == '2600'\nassert solution('3\\n') == '506'\nassert solution('5\\nA 1 1\\nA 2 0\\nB 2 0\\nC 1 1\\nC 2 1\\n') == '252'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\") == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0\\n') == '2600'\nassert solution('3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\n') == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0\nAB 1 1\nAC 2 1\nBC 2 1\n''') == '2600'\nassert solution('''\n1\nAA 1 1\nAB 1 1\n''') == '2600'\nassert solution('''\n2\nAA 2 1\nAB 2 1\n''') == '2300'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0\\n') == '2600'\nassert solution('3\\nAB 1 1\\nAC 2 1\\nBC 2 1') == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '2600'\nassert solution('0') == '2600'\nassert solution('3') == '506'\nassert solution('AB 1 1') == '2600'\nassert solution('AC 2 1') == '506'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('((((') == 'possible'\nassert solution(')))))') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n(())\n(())\n()()\n\"\"\"\n    ) == \"possible\"\nassert solution(\n\"\"\"\n()()\n()()\n()()\n\"\"\"\n    ) == \"impossible\"\nassert solution(\n\"\"\"\n()\n()\n()\n\"\"\"\n    ) == \"impossible\"\nassert solution(\n\"\"\"\n(()))\n(()))\n(()))\n\"\"\"\n    ) == \"possible\"\nassert solution(\n\"\"\"\n()))\n(()))\n(()))\n\"\"\"\n    ) == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'possible'\nassert solution('(())') == 'possible'\nassert solution('()()') == 'possible'\nassert solution('(()())()') == 'possible'\nassert solution('())(') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'possible'\n\n\"\"\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('()))') == 'possible'\nassert solution('))(') == 'impossible'\nassert solution('))())') == 'possible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"possible\"\nassert solution(\"()))\") == \"possible\"\nassert solution(\"))()\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('()))' == 'possible'\nassert solution('))((' == 'impossible'\nassert solution('())(' == 'possible'"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''())()''') == 'possible'\nassert solution('''(())''') == 'possible'\nassert solution('''()((()))''') == 'possible'\nassert solution('''(())(())(())(()(()))''') == 'impossible'\nassert solution('''(((())((())))()(()))''') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"possible\"\nprint(solution(input))\n\"\"\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''()\n''') == 'possible', 'Sample Test 1 Failed'\nassert solution('''()\n(\n)\n''') == 'possible', 'Sample Test 2 Failed'\nassert solution('''(()\n''') == 'impossible', 'Sample Test 3 Failed'\nassert solution('''()()\n''') == 'possible', 'Sample Test 4 Failed'\nassert solution('''(())\n''') == 'impossible', 'Sample Test 5 Failed'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800', 'First'\nassert solution('''2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible', 'Second'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == '1800'\n\"\"\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '1800'\nassert solution('2 2') == 'impossible'\n\nstdin = \"\"\"\n4\n2 6\n1 2 10000\n2 2 20000\n2 3 30000\n\"\"\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n') == '1800'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n') == 'impossible'\nassert solution('10 20\\n0 0 0\\n0 0 0\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n11 11 11\\n12 12 12\\n13 13 13\\n14 14 14\\n15 15 15\\n') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400') == '1800'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n1 2200 9400 1400') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1800\"\nassert solution(\"2 2\") == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\nprint('all done')"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\nassert solution('''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1800\"\nassert solution(\"2 2\") == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n\"\"\") == \"1800\"\nassert solution(r\"\"\"\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n\"\"\") == \"impossible\"\nprint(solution(r\"\"\"\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n\"\"\") == \"impossible\")\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1 A3-B3 A1-C1 A2-B2 B1-C2\"\nprint(solution(input()))\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n1 2\n2 1\n''') == 'A1-B2 A2-C2 B2-C1'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2''') == 'A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1\\nA1-B3 A2-C1 B1-C2\\nA1-C2 A2-B3 B1-C1''')\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n3 3\n1 2 3\n2 1 3''') == \"A1-B2 A2-C2 B2-C1 A3-B3\""
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 1\n''') == 'A1-B1 A2-C2 B2-C1'\nassert solution('''3 3\n1 1\n1 2\n''') == 'A1-B1 A2-C2 B2-C1 A3-B3'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1'\nassert solution('1 3') == 'A1-B1 A2-C2 B2-C1'\nassert solution('4 1') == 'A1-B1 A2-C2 B2-C1 A3-B3'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n3 2\n2 3\n2 3\n''') == 'A1-B2 B1-A2 A3-B3 A2-B3 B3-A3 A1-B1'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2''') == 'A1-B2 B1-A2 A3-B3'\nassert solution('''2 3''') == 'A1-B1 A2-C2 B2-C1'\nassert solution('''3 1''') == 'A1-B1'"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('4 4') == '4'\nassert solution('3 3') == '4'\nassert solution('6 6') == '7'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2\\n.\\n.\\n') == '7'\nassert solution('4 4\\nX.X\\nX..\\n..X\\n..XX') == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '7'\nassert solution('2 4') == '9'\nassert solution('3 5') == '7'\nassert solution('4 6') == '8'\nassert solution('5 7') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\nassert solution('4 4') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == '7'\nassert solution('''\n4 4\nX.XX\nX..X\n..X.\n..XX\n''') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2\\n..\\n..') == '7'\nassert solution('4 4\\nX.XX\\nX..X\\n..X.\\n..XX') == '9'\nassert solution('4 4\\nX.XX\\nX..X\\n..X.\\n..XX') == '9'\nassert solution('1 3\\nX.\\n..\\n..') == '4'\nassert solution('2 2\\n.\\n.\\n.') == '3'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '6'\nassert solution('5 5') == '9'\nassert solution('4 5') == '8'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\n\n\"\"\""
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n.\\n.\\n') == '7'\nassert solution('4 4\\nX.X\\n.X.\\n.X.\\nX.X\\nX.X\\nX.X\\nX.X\\n.X.\\nX.X\\n') == '9'\nassert solution('3 3\\nXXX\\nXXX\\nXXX\\n') == '6'"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 2 2 100') == '600'\nassert solution('2 0 2 1 100') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '600'\nassert solution('3 3 2 2 100') == '600'\nassert solution('2 0 2 1 100') == '500'\nassert solution('6 0 8 1 1') == '100'\nassert solution('8') == '-1'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n3 3 2 2 100\n1 1 1 1 500\n\"\"\") == \"600\"\nassert solution(\"\"\"\n1\n1 1 1 1 500\n\"\"\") == \"100\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\nassert solution(\"1\\n2 0 2 1 100\\n6 0 8 1 1\\n\") == \"100\"\nassert solution(\"0\\n0 0 0 0 0\\n5 0 0 0 0\\n\") == \"5\"\nassert solution(\"0\\n0 0 0 0 0\\n0 0 0 0 0\\n\") == \"0\"\nassert solution(\"2\\n5 3 2 1 100\\n1 6 1 1 100\\n0 0 8 1 1\\n1 1 1 1 500\\n\") == \"600\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2 2 2 100''') == '600'\nassert solution('''3 4 2 0 100''') == '500'"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2 2 100\\n1 1 1 1 500\") == \"600\"\nassert solution(\"2\\n0 0 2 1 100\\n6 0 8 1 1\") == \"100\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '600'"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 2 2 2 100\n1 1 1 1 500\n''') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''\n3\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n361\n''') == '3'\nassert solution('''\n2\n11\n''') == '0'\nassert solution('''\n4\n444\n''') == '3'\nassert solution('''\n3\n111\n''') == '1'"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3\"\nprint(solution(__import__('sys').stdin.read()))\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('361') == '3'\nassert solution('-11') == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"0\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n361\\n') == '3'\nassert solution('2\\n11\\n') == '0'\nassert solution('1\\n11\\n') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('8') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1111') == '4'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n361\") == \"3\"\nassert solution(\"2\\n11\") == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n361''') == '3'\nassert solution('''2\n11''') == '0'"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10\") == \"10\"\nassert solution(\"3 10\") == \"cancel road trip\"\nassert solution(\"3 10\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10') == '10'\nassert solution('3 10') == '10'\nassert solution('1 2') == 'cancel road trip'\nassert solution('1 2') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 10\n2 100\n1 10\n11 5\nSample Output 1:\n10\"\"\") == \"10\"\nassert solution(\"\"\"3 10\n2 100\n1 10\n13 5\nSample Output 2:\ncancel road trip\"\"\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '10'\nassert solution('2') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 10\\n2 100\\n1 10\\n11 5') == '10'\nassert solution('3 10\\n2 100\\n1 10\\n11 5') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5\n''') == '10'\nassert solution('''3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'\nassert solution('''6 10\n3 100\n1 10\n3 100\n2 100\n3 100\n1 10\n''') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10') == '10'\nassert solution('2 100') == '100'\nassert solution('1 10') == 'cancel road trip'\nassert solution('11 5') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == '10'\n\nassert solution('''\n3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == '10'\nassert solution('''\n4 20\n1 1\n5 3\n6 5\n7 5\n8 5\n9 4\n10 4\n11 1\n12 2\n13 5\n''') == 'cancel road trip'\nassert solution('''\n3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'\n'''\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 9\") == \"1 8 9 9 100 101 108 109 109\""
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"\"\"\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\nSample Output 3:\n0 7 8 11 15 16 19\n\"\"\") == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"4 9\n2 8\n1 1\n3 4\n5 100\n\"\"\") == \"\"\"1 8 9 9 100 101 108 109 109\"\"\"\nassert solution(\n\"\"\"3 5\n2 2\n3 3\n2 4\n2 3\nSample Input 3:\n3 7\n2 8\n1 1\n3 4\n5 100\nSample Output 3:\n0 7 8 11 15 16 19\n\"\"\") == \"\"\"0 7 8 11 15 16 19\"\"\"\nassert solution(\n\"\"\"5 7\n2 2\n3 8\n2 7\n2 4\n3 8\nSample Input 4:\n6 9\n1 3\n3 5\n2 4\n2 4\n3 5\n3 4\nSample Output 4:\n1 3 3 4 5\n\"\"\") == \"\"\"1 3 3 4 5\"\"\"\nassert solution(\n\"\"\"1 5\n1 6\n2 3\n3 5\n4 7\n5 2\nSample Input 5:\n2 5\n1 2\n3 2\n2 1\n3 2\nSample Output 5:\n0 2 2 3\n\"\"\"\n) == \"\"\"0 2 2 3\"\"\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\nassert solution('''\n4 9\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''\n5 7\n3 6\n1 4\n5 100\n''') == '0 7 8 11 15 16 19'\nassert solution('''\n5 7\n3 6\n1 4\n5 100\n''') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 6\n4 5\n1 1\n2 2\n5 7\n''') == '1 7 8 11 15 16'\nassert solution('''3 3\n5 4\n1 1\n2 2\n3 3\nSample Output 3:\n0 7 8 11 15 16 19 20 21''') == '0 7 8 11 15 16 19 20 21'\n\nassert solution('''6 5\n5 2\n2 4\n3 8\n2 7\n1 2\n3 3\nSample Output 4:\n1 7 8 11 15 16 19 20 21''') == '1 7 8 11 15 16 19 20 21'\n\nassert solution('''6 6\n3 2\n2 4\n1 2\n3 8\n1 7\n1 4\nSample Output 5:\n0 7 8 11 15 16 19 20 21''') == '0 7 8 11 15 16 19 20 21'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\n'''"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7') == '0 7 8 11 15 16 19', 'Should be 0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 9\") == \"1 8 9 9 100 101 108 109 109\""
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '3'\n\nSTDIN_S = '''\\\n5 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n'''\n\nEXPECTED_RESULT = '''\\\n1\n'''.strip()\n\nimport sys\nimport io"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 4 5 2\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 6 3\n0 0 1\n5 5\n-5 -5\n5 5\n5 0\n0 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == '1'\nassert solution('1 3 3\\n0 0 1\\n3 3') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3') == '3'\nassert solution('1 5 3\\n3 -3\\n3 -3') == '3'\nassert solution('1 5 3\\n3 -3\\n-3 -3') == '3'\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n''') == '1'\nassert solution('''\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '3'\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 3') == '1', \"First\"\nassert solution('0 0 1') == '1', \"Second\"\nassert solution('3 3') == '1', \"Third\"\nassert solution('-3 3') == '1', \"Fourth\"\nassert solution('3 -3') == '1', \"Fifth\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\") == \"3\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\") == \"2\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\") == \"3\"\nassert solution(\"1 5 3\\n-3 3\\n3 -3\") == \"3\"\nassert solution(\"1 5 3\\n0 3\\n3 -3\") == \"3\"\nassert solution(\"1 5 3\\n3 -3\\n0 3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n0 3\n3 3''') == \"1\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n\nimport unittest\nimport inspect\nfrom random import randint, seed\n\nclass TestSolution(unittest.TestCase):\n\n    def setUp(self):\n        seed(42)\n\n    def tearDown(self):\n        pass\n\n    def test_solution(self):\n        # just remove this line\n        self.assertEqual(solution(), \"1\")"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 10\n1\n1\n10\n1\n9''') == '4 2 0 4 0'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '0'\nassert solution('20') == '2'\nassert solution('30') == '2'\nassert solution('40') == '1'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10000') == '4'\nassert solution('5 9') == '2'"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\\n2\\n0\\n2\\n0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10000') == '4'\nassert solution('5 9') == '2'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10000') == '4'\nassert solution('5 9') == '2'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n2\\n0\\n2\\n0\\n\"\nassert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4\\n4\\n2\\n0\\n0'\nassert solution() == '2\\n0\\n0\\n2\\n0'"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10000\\n\") == \"4\\n\"\nassert solution(\"5 9\\n\") == \"2\\n\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10') == '4\\n2\\n0\\n0\\n'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"NE\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nne\n''') == 'NE'\n\nassert solution('''\n4\nkava\n''') == 'DA'\n\nprint(\"All tests passed.\")"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"NE\"\nassert solution(\"4\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\nne') == 'NE'\nassert solution('4\\nkava') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'NE', solution('2')\nassert solution('4') == 'DA', solution('4')"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"DA\"\nprint(solution(sys.stdin.read()))\n\"\"\"\n\nn = int(input())\nsequence = input()\nstack = []\nresult = ''\nfor i in range(len(sequence)):\n    if len(stack) == 0:\n        stack.append(sequence[i])\n        result += sequence[i]\n    else:\n        if stack[-1] == sequence[i]:\n            stack.pop()\n            result += sequence[i]\n        else:\n            stack.append(sequence[i])\n            result += sequence[i]\nprint(result)"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\nne\nkava\ntak''') == 'NE'\nassert solution('''5\ntak\nkava\nak\nak''') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"DA\"\nassert solution() == \"n\""
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"0\\n\"\nassert solution(\"1 2\") == \"0\\n\"\nassert solution(\"1 2\") == \"0\\n\"\nassert solution(\"8 10 4\") == \"2\\n\"\nassert solution(\"8 10 4\") == \"2\\n\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '1'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6''') == '2'\nassert solution('''6 8 4\n1 1 4\n1 1 3\n2 2 3 2\n1 1 6\n1 1 8\n2 2 6 8\n2 2 7 8\n1 2 3 4 5''') == '0'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0'\n\nstdin = \"\"\"\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4 4\") == \"2\"\nassert solution(\"8 10 4\") == \"3\"\n\ninput()\nprint(solution(stdin))"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '3'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 4') == '1'\nassert solution('4 4 4') == '2'\nassert solution('8 10 4') == '2'"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '1'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\n\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '1'\n\nassert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '0'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '3'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0'"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2', 'First'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1', 'Second'\nassert solution('''\n1 3\n2 1 2 3\n1 2 1\n2 1 1\n1 2 1\n''') == '3', 'Third'\nassert solution('''\n1 2\n3 1 2\n3 2 1\n1 1 2\n''') == '4', 'Forth'\nassert solution('''\n1 2\n3 1 2\n3 2 1\n1 1 2\n''') == '3', 'Fifth'"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == \"2\"\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == \"1\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '2'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == \"2\"\n\nassert solution('''\n2 3\n1 2 1\n2 0 2\n2 0 0\n''') == \"1\""
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1\n1\n1\n1\n''') == '2', 'First'\nassert solution('''\n4\n1\n1\n1\n1\n''') == '1', 'Second'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == \"2\"\nprint(solution(input_string))"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2'\nassert solution('''\n1 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''\n1 1\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '0'\nassert solution('''\n1 1\n1 1\n1 1\n1 1\n1 1\n2 1 1\n2 1 3\n''') == '0'\nassert solution('''\n1 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '0'\n'''\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000'\nassert solution('''\n1 50\nD 5 0.5\n''') == '50.500000'\nassert solution('''\n1 1\nD 2\n''') == '1.000000'\nassert solution('''\n1 10000000000000\nD 0\nC 3\n''') == '1.000000'\n\nassert solution('''\n1 0.0000001\nD 10\n''') == '0.000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '40.5'\nassert solution('5 5\\nD 1 2\\nC 1 2\\nD 1 2\\nC 1 2\\nD 1 2\\nC 1 2\\nD 1 2\\nC 1 2\\nD 1 2') == '2.0'\nassert solution('5 5\\nD 1 2\\nC 1 2\\nD 1 2\\nC 1 2\\nD 1 2\\nC 1 2\\nD 1 2\\nC 1 2\\nD 1 2') == 'inf'\nassert solution('4 1\\nD 1 2\\nC 1 2\\nD 1 2\\nC 1 2\\nD 1 2\\nC 1 2\\nD 1 2\\nC 1 2') == '16.0'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 15') == '40.5'\nassert solution('3 15') == '49.0'\nassert solution('3 100') == '48.0'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1\n''') == \"40.500000000\"\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == \"49.000000000\"\nprint(solution(input))\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nD 4 10 1\nC 6 1\nC 9 3\n''') == '40.500000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 15') == '40.500000000'\nassert solution('3 15') == '49.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '40.500000000', 'First'\nassert solution('''\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000', 'Second'\nassert solution('''\n3 10\nD 4\nC 6\nC 9\n''') == '99.5', 'Third'\n''') == '99.5', 'Fourth'\n\n''') == '99.5', 'Fifth'"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\"\nassert solution(\"4 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"impossible\"\nassert solution(\"5 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nD 4 10 1\") == \"40.500000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 5\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000'\nassert solution('''\n5 3\nD 4 10 1\nC 6 1\nC 9 3\n''') == '40.500000000'\nprint('All Tests Passed!')\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == \"5 4 9 3 1 10 7 6 2\"\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == \"fail\"\n'''\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n7\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\n''') == 'fail'\nassert solution('''\n1\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\n''') == 'fail'\nassert solution('''\n2\na 2 10 3\na 1 6\n''') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('10\\na 1 6\\nh 1\\nj 1 7\\nf 1 2\\ng 2 6 8\\nf 1 4\\ne 1 3\\ne 2 6\\ne 3 4\\ne 5 1\\nh 2\\nf 1 5\\ne 2 8\\ne 3 7\\ne 4 6\\ne 5 5') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('10\\na 2 10 3\\nh 0\\ni 1 3\\nj 1 7') == 'fail'\nassert solution('9\\nab 2 10 3\\nab 1 6\\nac 2 1 5\\nad 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"fail\"\nassert solution(\"10\\n\") == \"fail\"\nassert solution(\"a 2 10 3\\n\") == \"5 4 9 3 1 10 7 6 2\"\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 1 6\\nb 1 9\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"fail\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2', \"First\"\n\nassert solution('''\n3\na 2 10 3\nb 1 6\nc 2 1 5\n''') == 'fail', \"Second\"\n\nassert solution('''\n1\na 2 10 3\nb 1 6\nc 2 1 5\n''') == '1 3 5 2 9 7 6 8', \"Third\"\n\nassert solution('''\n1\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '1 3 5 2 9 7 6 8', \"Fourth\"\n\nassert solution('''\n1\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail', \"Fifth\""
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00:00\\n01:01') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\nassert solution('00:08') == '3'"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''00:00\n01:01\n''') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"00:08\") == \"3\"\nassert solution(\"00:00\") == \"3\"\nassert solution(\"00:08\") == \"3\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01'\nassert solution('00:08\\n00:00') == '3\\n00:08\\n00:09\\n00:00'\nassert solution('00:08\\n00:00') == '2\\n00:08\\n00:09\\n00:00'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('00:00') == '3'\nassert solution('00:08') == '3'\n\n--Python Notes\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\nassert solution('00:00') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"01:01\") == \"3\"\n\n\"\"\"\n\n\n\"\"\"\nFirst let\u2019s try to find a solution that only uses one line of code.\n\nLet\u2019s look at the following example:\n\nSuppose the clock is at 12:03. At the end of this operation, the clock is at 00:03.\n\nNow let\u2019s say that we want to set the clock to 00:01. So, we need to decrement the minute by 1.\n\nNext, we need to check if the minute is 0. If it is 0, we need to make the hour decrease by 1. If it is not 0, we need to make the hour increase by 1.\n\nTo decide which operation to perform, we need to check if the hour is in range 00-23, and if the minute is in range 00-59. If the clock is in these ranges, then we can just change the clock. However, if we don\u2019t have enough time for the clock, we need to increase or decrease the time by 1.\n\nAt this point, we see that we have only one operation to perform. To better understand the operation, let\u2019s consider the following example:\n\nSuppose we want to set the clock to 00:01. We can simply increment the hour by 1, and decrement the minute by 1.\n\nTo make the clock go to 00:00, we just need to reset the hour and minute.\n\nIn the end, we can see that this is still valid. In fact, we can\u2019t improve the clock since it is already at 00:00. We can\u2019t make a change to the hour as well, since it is at 23:59. So, we can tell the clock to go to 00:00.\n\nNow let\u2019s see how many times we need to do this, and how to write it efficiently.\n\nSay we want to set the clock to 00:01. We can simply increment the hour by 1, and decrement the minute by 1.\n\nTo make the clock go to 00:00, we just need to reset the hour and minute.\n\nSo, we do this for the first time.\n\nAfter that, we can check if the clock is at 00:00. If it is, then we can move on to the next time.\n\nAt this point, we know that the clock is at 00:00, so we can just make the clock go to 00:01.\n\nAfter that, we can check if the clock is at 00:01. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:01, so we can just change the clock to 00:02.\n\nAfter that, we can check if the clock is at 00:02. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:02, so we can just change the clock to 00:03.\n\nAt this point, we can check if the clock is at 00:03. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:03, so we can just change the clock to 00:04.\n\nAfter that, we can check if the clock is at 00:04. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:04, so we can just change the clock to 00:05.\n\nAfter that, we can check if the clock is at 00:05. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:05, so we can just change the clock to 00:06.\n\nAfter that, we can check if the clock is at 00:06. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:06, so we can just change the clock to 00:07.\n\nAfter that, we can check if the clock is at 00:07. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:07, so we can just change the clock to 00:08.\n\nAfter that, we can check if the clock is at 00:08. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:08, so we can just change the clock to 00:09.\n\nAfter that, we can check if the clock is at 00:09. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:09, so we can just change the clock to 00:10.\n\nAt this point, we can check if the clock is at 00:10. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:10, so we can just change the clock to 00:11.\n\nAt this point, we can check if the clock is at 00:11. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:11, so we can just change the clock to 00:12.\n\nAt this point, we can check if the clock is at 00:12. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:12, so we can just change the clock to 00:13.\n\nAt this point, we can check if the clock is at 00:13. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:13, so we can just change the clock to 00:14.\n\nAt this point, we can check if the clock is at 00:14. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:14, so we can just change the clock to 00:15.\n\nAt this point, we can check if the clock is at 00:15. If it is, we can move on to the next time.\n\nAt this point, we know that the clock is at 00:15, so we can just change the clock to 00:16.\n\nAt this point, we can check if the clock is at 00:16. If"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('00:00\\n01:01') == '3\\n00:00\\n01:00\\n01:01'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\nassert solution('00:08') == '3'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"None\"\nassert solution(\"\") == \"None\"\nassert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"((((((((()))))))))\") == \"4,4:4,4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:4,4:4:"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"((()))\") == \"4,8:8,8:\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('(') == '4,4:'\nassert solution(')') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('(())') == \"4,8:8,8:\"\n\"\"\""
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('(())()') == '4,4:4,8:8,8:'\nassert solution
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('()') == '4,4:'\nassert solution('(())') == '4,8:8,8:'\nassert solution('()()') == '4,4:4,4:'\nassert solution('(()(()))') == '4,8:8,8:4,4:'\nassert solution('(()(())())') == '4,8:8,8:4,4:4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('()') == '4,4:'\n\nassert solution('(())') == '4,8:8,8:'"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('()') == '4,4:'\nassert solution('(())') == '4,4:'\nassert solution('((()))') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"()\") == \"4,4:\"\n\"\"\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('()') == '()'\nassert solution('(())') == '4,8:8,8:'\nassert solution('(())') == '4,8:8,8:'\nassert solution('(())(())(())()') == '4,4:4,4:'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''1 1\n26 02 03 03 2\n''') == '185'\nassert solution('''1 1\n26 02 03 03 1\n4 5\n16 17 18 19 20\n21 22 23 24 25 26\n''') == '185'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''1 1\n26 02 03 03 2\n''') == '185'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '5'\nassert solution('1 1') == '5'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"-1\"\nprint(solution([\"1 1\", \"26 02 03 03 1\"]))\nprint(solution([\"1 1\", \"26 02 03 03 2\"]))\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '5'\nassert solution('1 1') == '5'\nassert solution('1 1') == '5'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2\n1 5\n2 2\n2 4\n1 3\n2 3\n''') == '5'\n\nassert solution('''\n1 1\n26 02 03 03 1\n''') == '-1'\n\nassert solution('''\n3\n1 1\n1 5\n1 3\n''') == '4'\n\nassert solution('''\n10\n2 2\n1 1\n2 2\n1 1\n2 2\n1 1\n1 2\n1 2\n1 2\n2 1\n1 2\n1 1\n''') == '13'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == \"5\"\nassert solution('''\n1 1\n26 02 03 03 2\n''') == \"185\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n26 02 03 03 1') == '5'\nassert solution('1 1\\n26 02 03 03 2') == '185'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''\n1 1\n26 02 03 03 2\n''') == '185'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '6 2\\n'\n    '3 4 5 6 1 2'\n    ) == '5 6 1 2 3 4'\n\nassert solution(\n    '4 2\\n'\n    '3 4 1 2'\n    ) == '2 3 4 1'\n\nprint(solution(\n    input()\n    ))\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4', \"First\"\nassert solution('4 2\\n3 4 1 2') == '2 3 4 1', \"Second\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4 \nassert solution('''4 2\n3 4 1 2''') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\") == \"1 2 3\"\nassert solution(\"5 1 2 3\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2') == '5 6 1 2 3 4'\nassert solution('4 2') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"2 2\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"1 1\") == \"1 1\"\n\"\"\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2\\n') == '5 6 1 2 3 4'\nassert solution('4 2\\n3 4 1 2\\n') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1 2'\nassert solution('3 3') == '1 2 3'"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4'\nassert solution('4 2\\n3 4 1 2') == '2 3 4 1'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nprint('All test cases passed.')"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1', 'Smallest'\nassert solution('123') == '321', 'Positive'\nassert solution('001') == '010', 'Leading Zeroes'\nassert solution('4206') == '4212', 'Swaps'\nassert solution('1234') == '4321', 'Multiple Swaps'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"720\"\nassert solution(\"11\") == \"121\""
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nprint(solution(input()))\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''54321\n2''') == '5432'\nassert solution('''99\n9''') == '91'\n\nprint(solution('''12000\n9000'''))\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1454 32\n1691''') == '14432'\nassert solution('''1720\n29''') == '17202'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nassert solution('123 456') == '5432'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"7413\"\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0.66\"\nassert solution(\"2\") == \"0.7\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0.666666666666667'\nassert solution('5') == '0.733333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.6000000000000003'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '0.666666666666667'\nassert solution('3') == '0.733333333333333'\nassert solution('1000000000') == '7.999999999999999'\nassert solution('0') == '0.0'\nassert solution('0') == '0.0'\nprint(\"You're all set!\")\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0.666666666666667'\nassert solution('4') == '0.733333333333333'"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\\n\") == \"0.666666666666667\"\nassert solution(\"3\\n0 0\\n1 1\\n2 0\\n\") == \"0.733333333333333\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n0 0\n0 1\n1 1\n1 0\n''') == '0.666666666666667'\nassert solution('''3\n0 0\n1 1\n2 0\n''') == '0.733333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0.4999999999999998\"\nassert solution(\"10\") == \"0.2222222222222222\"\nassert solution(\"3\") == \"0.666666666666667\"\nassert solution(\"10\") == \"0.733333333333333\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 2\n2 2\n1 3\n0 0\n0 1\n3 0\n''') == '0.75'\nassert solution('''7\n0 0\n0 1\n1 1\n1 0\n2 2\n2 0\n''') == '0.707106781186548'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 4 3\n1 3 1 5\n1 1 3 3\n1 1 3 3\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3 3 3\n1 1 1 1\n1 1 1 1\n1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4 3\n1 2 5 5\n1 3 2 3\n1 1 4 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 3 4\n1 3 1 3\n1 1 5 5\n1 1 3 3\n1 1 5 5\n\"\"\") == \"7\""
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 4') == '9'\nassert solution('2 3 100') == '21'\nassert solution('2 3 10') == '9'\nassert solution('2 3 10') == '21'"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 4 1\n3 4 5\n\"\"\") == \"16\"\nassert solution(\"\"\"\n1 4 1\n3 3 5\n\"\"\") == \"16\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3 4\") == \"9\"\nassert solution(\"2 3 100\") == \"21\"\nassert solution(\"2 3 10\") == \"9\"\nassert solution(\"2 3 100\") == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3 4\n10 1 3\n0 1 20\n10 1 10\n''') == '9'\nassert solution('''\n4 4 2\n20 1 9\n0 1 0\n20 1 0\n20 1 0\n''') == '14'\nassert solution('''\n3 1 5\n10 1 3\n0 1 20\n10 1 20\n''') == '20'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 10\") == \"9\"\nassert solution(\"3 3 100\") == \"21\"\nassert solution(\"3 3 100\") == \"21\""
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3 4\n10 1 3\n0 1 20\n''') == '9'\nassert solution('''\n2 3 100\n10 1 10\n10 1 10\n''') == '21'\nprint('Tests passed')\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 3 4\n10 1 3\n0 1 20\n\"\"\") == \"9\"\nassert solution(\"\"\"5 5 100\n7 5 100\n0 1 100\n4 1 100\n4 1 100\n\"\"\") == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3 4\n10 1 3\n0 1 20\n''') == '9'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1') == '2'\nassert solution('2 2 2') == '3'\nassert solution('2 2 1') == '4'\nassert solution('2 2 2') == '5'"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2''') == '2'\nassert solution('''9 2 7 -\n1 1 1 2''') == '4'\n\n'''"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '4'\nprint('all test cases passed')"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 2\\n\") == \"2\"\nassert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\""
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == '4'\n\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution('''8 2 7 -\n1 1 1 2\n''') == \"2\"\nassert solution('''9 2 7 -\n1 1 1 2\n''') == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 2 7 -\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 3 +\") == \"0\"\nassert solution(\"6 6 3 -\") == \"2\"\nassert solution(\"5 5 5 +\") == \"1\"\nassert solution(\"5 5 5 -\") == \"1\"\nassert solution(\"8 6 9 +\") == \"0\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4'\nassert solution('8 2 7 -\\n1 1 1 2\\n3 2 1 3\\n') == '1'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '3'\nassert solution('4 4') == '2'\nassert solution('10 10') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '3'\nassert solution('''\n4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '2'\nprint('All tests passed!')\n\"\"\"\n##################################################\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2 5\\n2 3 5\\n3 4 5') == '3'\nassert solution('3 4\\n1 2 5\\n2 3 5\\n3 4 5') == '4'\nassert solution('1 4\\n2 3 5\\n3 4 5\\n1 5') == '4'\nassert solution('1 5\\n1 2 5\\n2 3 5\\n3 4 5') == '5'\nassert solution('2 3\\n2 3 5\\n3 4 5\\n1 4 8') == '2'"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n\"\"\"\n    ) == \"3\"\nassert solution(\n\"\"\"\n4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n\"\"\"\n    ) == \"2\"\nassert solution(\n\"\"\"\n4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 7\n\"\"\"\n    ) == \"1\""
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '3'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 5') == '3'\nassert solution('4 4') == '2'\nassert solution('1 2 5') == '3'\n\"\"\""
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '3'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '3'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '1'"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\"\n\n\"\"\"\n\n\nn, k = list(map(int, input().split()))"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '6'\nassert solution('3 4') == '24'"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n2 1\n''') == '6'\nassert solution('''3 4\n2 3 1\n''') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n2 1\n''') == '6'\nassert solution('''\n3 4\n2 3 1\n''') == '24'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3 4 5 1 2\n''') == '1'\nassert solution('''4\n1 1 2 2\n''') == '1'\nassert solution('''1\n1 1 2\n''') == '2'\nassert solution('''7\n3 4 5 1 2 4 4\n''') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution(stdin='''\n3\n1 2\n''') == '0'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"5\") == 1\nassert solution(\"3 4 5 1 2\") == 1\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '1'\n\"\"\"\nimport math"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '1'\nassert solution('3 4 5 1 2') == '1'"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2\\n1 2\\n\") == \"2\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 2') == '2'\nassert solution('5\\n3 4 5 1 2') == '1'\nassert solution('1000\\n1000000 1000 1000000 10000000 100000000 1000000000 10000000000') == '107337731350526583681375185979596202454125931749259248968762102027890786589760285793133721835912986703694261104198284843009734306465375571628752172790605804972898349726721312073234459565400148270413863372465496544447614516422576879273621015287670862569790985037888879758026941949296997955647686944341447363938744798325463804539454318593392187246855263949898098373599351616936039429831939615405096466593275399755411140148289396695981759643675642485759879555844841788314175358829576497530293651857108842247269026130509700783258194939621624935833988969829677744792364395069793993515728448700581433008995311814696964369149955451188956043537663369351437171314889535098279835238070044798151060582233629198446525455783005727347722786220665887669627092727773325959585618193910899552694648865956575366176674353906325829173008225257850815491947772854682948783751608181121894847657768834') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"5\\n3 4 5 1 2\") == \"1\""
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('5 3 4 1 2') == '1'"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2\n''') == '1'\nassert solution('''\n1\n1\n''') == '0'\nassert solution('''\n5\n3 4 5 1 2\n''') == '1'\nprint('solution is ok')\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\nassert solution('''\n3 3\n1 3 1\n2 1 2\n1 1 1\n''') == '4'\nassert solution('''\n10 10\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n5 5\n1 1 2 1 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '3'\nassert solution('''\n5 5\n1 1 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '2'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '9'\nassert solution('3 3') == '4'\nassert solution('2 5') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\nassert solution('''\n3 3\n1 3 1\n2 1 2\n1 1 1\n''') == '4'\nassert solution('''\n2 2\n1 2\n1 2\n''') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 3 1\n2 1 2\n1 1 1\n''') == \"9\"\nassert solution('''\n2 3\n5 2 1\n1 4 3\nSample Output 3:\n4\n''') == \"0\""
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"0\", \"You failed this test!\"\n\nassert solution(\"3 3\") == \"4\", \"You failed this test!\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '9'\nassert solution('3 3') == '4'"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9', \"First\"\nassert solution('''\n3 3\n1 3 1\n2 1 2\n1 1 1\n''') == '4', \"Second\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '9'\nassert solution('3 3') == '4'\nassert solution('3 3') == '0'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\nassert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 4 5\") == \"2\"\nassert solution(\"4 1 5 2\") == \"4\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6', 'First example'\n\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3', 'Second example'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 1\n1 1\n''') == '6'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\") == \"6\"\nassert solution(\"4\\n3 4 5 6\\n1 2\") == \"3\"\nassert solution(\"10\\n2 1 3 4 5 6 7 8 9 10\\n1 2\") == \"10\""
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '6'\n\"\"\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n') == '6'\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n') == '3'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3 1 3 4\\n1 2\\n1 3\\n3 4') == '6'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 1 3 4\\n1 2\\n1 3\") == \"6\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\") == \"3\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n2 1 3 4\n1 2''') == '6'\nassert solution('''4\n3 4 5 6\n1 2\n1 3\n2 4\nSample Output 3:\n2\n\n''') == '2'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 1\n1 1''') == '1'\nassert solution('''4\n1 2 3 4\n3 4 1''') == '3'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n4\n3\n2\n1\n''') == '18'\n\nassert solution('''\n2\n3\n4\n''') == '0'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 10\n5 8\n''') == '18\n\nassert solution('''3\n17 144\n121 121\n89 98\n''') == '265\n\nassert solution('''4\n2 5\n1 2\n1 3\n1 4\n''') == '10\n\nassert solution('''5\n2 5\n1 2\n1 3\n1 4\n1 5\n''') == '8\n\nassert solution('''6\n3 4\n1 3\n1 2\n2 4\n2 5\n2 6\n''') == '6"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 10\\n17 144\\n121 121\\n89 98') == '265\\n25\\n10'"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 10\n5 8\n\"\"\") == \"18\"\nassert solution(\"\"\"2\n1 10\n5 8\n\"\"\") == \"25\"\nassert solution(\"\"\"3\n17 144\n121 121\n89 98\n\"\"\") == \"265\"\nassert solution(\"\"\"2\n1 10\n5 8\n\"\"\") == \"25\"\nassert solution(\"\"\"3\n1 3\n5 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 10\n5 8\n''') == '18'\nassert solution('''\n3\n17 144\n121 121\n89 98\n''') == '265'\nassert solution('''\n4\n9 22\n8 10\n2 12\n''') == '10'"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10\\n5 8') == '18'\nassert solution('2\\n1 10\\n5 8') == '25'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10') == '18'\nassert solution('2 5') == '8'\nassert solution('3 1') == '10'\nassert solution('4 3') == '265'\nassert solution('5 1') == '25'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10\\n5 8\\n1 10') == '18'\nassert solution('2 1\\n5 8\\n1 10') == '25'\nassert solution('3 1\\n17 144\\n121 121\\n89 98') == '265'"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 10\n5 8\n7 9\n2 2\n''') == '18'\nassert solution('''\n4\n1 10\n5 8\n7 9\n2 2\n''') == '25'\nassert solution('''\n4\n1 10\n5 8\n7 9\n2 2\n''') == '10'\nassert solution('''\n4\n1 10\n5 8\n7 9\n2 2\n''') == '10'\nassert solution('''\n4\n1 10\n5 8\n7 9\n2 2\n''') == '10'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1 10\\n5 8\\n') == '18'\nassert solution('3\\n17 144\\n121 121\\n89 98\\n') == '265'\nprint('All tests passed.')"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\nassert solution('''\n7 6\n0 1\n1 3\n1 -2\n2 1\n4 3\n3 -4\n4 5\n''') == '8.50000000'\nprint('solution()')\n\n\"\"\""
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1.0'\nassert solution('5 5') == '12.5'\nassert solution('5 5') == '12.5'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '0.5'\nassert solution('5 5') == '12.5'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == '0.5'\nassert solution('2 2') == '0'\nassert solution('4 4') == '0.5'\n\n\"\"\"\n\nimport math\nfrom collections import defaultdict\n\nn, k = map(int, input().split())\n\npoints = defaultdict(list)\nfor i in range(n):\n    points[i] = list(map(int, input().split()))\n\nvertex = points[0]\nleft_x, left_y = vertex\nright_x, right_y = vertex\n\nfor i in range(n):\n    x, y = points[i]\n    if y == left_y:\n        right_x = max(x, right_x)\n    elif y == right_y:\n        left_x = min(x, left_x)\n    else:\n        left_y = min(y, left_y)\n        right_y = max(y, right_y)\n\nfor i in range(1, n):\n    x, y = points[i]\n    if x < left_x:\n        left_x = x\n    elif x > right_x:\n        right_x = x\n    if y < left_y:\n        left_y = y\n    elif y > right_y:\n        right_y = y\n\narea = (right_x - left_x) * (right_y - left_y)\nprint(area)"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"0.50000000\"\nassert solution(\"5 5\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\\n\") == \"12.50000000\"\nassert solution(\"4 3\\n0 0\\n1 1\\n2 1\\n1 0\\nSample Output 2:\n12.50000000"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('4 3') == '0.5'\nassert solution('5 5') == '12.5'\nassert solution('6 5') == '12.5'\nassert solution('3 4') == '6.0'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n0 0\\n1 1\\n1 0\") == \"0.50000000\"\nassert solution(\"5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4\") == \"12.50000000\""
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''\n4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n''') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'\n\n'''\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '1'\nassert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '0'\nassert solution('''\n5 0 5\n0 1\n1 2\n2 3\n1\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''\n4 0 4\n0 2\n0 1\n2 1\n2 3\n\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('1 3 2') == '1'\nassert solution('2 2 1') == '2'\nassert solution('1 1') == '1'\nassert solution('0 0') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\n\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''\n3 1 3\n0 1\n1 2\n2 3\n1\n''') == '1'\nassert solution('''\n4 0 4\n0 2\n0 1\n2 1\n2 3\n\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"3 3 3 3\") == \"1\"\nassert solution(\"5 0 3\") == \"4\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '30'\nassert solution('1 2 1') == '6'\nassert solution('4 1 2') == '0'\nassert solution('8 1 1') == '9'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(1) == 6\nassert solution(2) == 30\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\nprint(solution())\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('10 1 1') == '843312'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n2 2 2\\n1 2 1\") == \"6\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 1\") == \"5\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\") == \"3\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 2\") == \"2\"\nassert solution(\"1 2 2\\n1 2 2\\n1 2 1\") == \"1\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n') == '6'\nassert solution('2 2 2\\n') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n\n\"\"\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n\nassert solution('1 2 2') == '0'\nassert solution('2 2 2') == '0'\n\nassert solution('1 2 1') == '6'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 9999999') == 'impossible'\nassert solution('3 20 2020') == '2021 2020 2020'\n\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2020 2020 2020''') == '2020 2020 2020'\nassert solution('''2\n1 9999999''') == 'impossible'\nprint(solution(stdin))\n\"\"\""
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 9999999') == '1 999999'"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n2020 2020 2020''') == '2021 2020 2020'\nprint('Solution: ', solution('''3\n2020 2020 2020'''))\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n2020 2020 2020\n\"\"\") == \"2021 2020 2020\", \"1st Example Test Case\"\nassert solution(\"\"\"\n4\n2020 2020 2020 2020\n\"\"\") == \"impossible\", \"2nd Example Test Case\"\nassert solution(\"\"\"\n2\n2020 2020 2020\n\"\"\") == \"2021 2020 2020\", \"3rd Example Test Case\""
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2020 2020 2020'\nassert solution('2') == '1 9999999'\nassert solution('1') == '1 1 1'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 9999999') == 'impossible'\nassert solution('3 1 9999999') == '2021 1 9999999'"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2021 2020 2020'\nassert solution('2') == 'impossible'\nassert solution('1') == '1'\n'''"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"2021 2020 2020\""
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"2\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 20\n10 10\n10 12\n10 10\n10 6\n''') == '1'\n\nassert solution('''\n10 10\n10 6\n10 10\n''') == '2'\n\nassert solution('''\n10 10\n10 7\n10 12\n10 10\n10 10\n''') == '2'\n\nassert solution('''\n10 20\n10 10\n10 12\n''') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n1 2\\n2 1\\n2 2\\n2 2\\n2 3\\n2 2\\n2 4\\n2 5\\n2 4\\n2 4\\n2 4\\n2 4\\n2 5\\n2 6\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8\\n2 8"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 9') == '0'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution(\"0\\n1\\n2\\n3\\n4\\n\") == \"5\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 1') == '4'\nassert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n\nfrom sys import stdin\n\nstdin = stdin.readline\n\nm, n, x = map(int, stdin().split())\n\nboat = stdin().rstrip()\n\nans = 0"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 0\") == \"2\"\nassert solution(\"3 5 1\") == \"4\"\nassert solution(\"6 5 2\") == \"begin repairs\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == \"2\"\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n>>>>~\n''') == \"4\"\nassert solution('''\n4 4 1\n>@<<<\n>~#~<\n>>~\n''') == \"begin repairs\"\n'''\nimport sys\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nprint('Tests passed')\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == '2'\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n''') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 1\n>@<\n>#<\n>@<\n''') == '1'\nassert solution('''3 3 1\n>#<\n>#<\n>#<\n''') == '2'\nassert solution('''3 3 1\n>>@<<\n>#<\n>#<\n>#<\n''') == '4'\nassert solution('''1 1 1\n>#<\n>#<\n>#<\n''') == 'begin repairs'\nassert solution('''2 3 2\n>#<\n>#<\n>#<\n''') == '2'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 0\") == \"2\"\nassert solution(\"3 5 1\") == \"4\"\nprint(solution(*input().split()))\n\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"1\"\nassert solution(s1) == \"2\"\nassert solution(s2) == \"2\"\nassert solution(s3) == \"4\"\n\nstdin = '''5 5 0\n>@<\n>~#~<\n>@<\n>~#~<\n>@<\n'''\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 0') == '1'\nassert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('1 2 1') == 'begin repairs'\nassert solution('3 3 2') == '2'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n143175=120\n''') == '14+31+75=120'\nassert solution('''\n5025=30\n''') == '5+025=30'\nassert solution('''\n''') == ''\nassert solution('''\n''') == ''\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('143175=120') == '14+31+75=120', \"Should be 14+31+75=120\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\n''')\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5025=30\n''') == '5+025=30'\nassert solution('''\n143175=120\n''') == '14+31+75=120'\nassert solution('''\n1=1\n''') == '1+1=2'\n'''\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\n'''\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\nassert solution('746=638') == '74+638=738'\nassert solution('746=6380') == '74+6380=7381'\nassert solution('746=638') == '74+638=738'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '1 2'\n\nassert solution('8') == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0 -1\"\nassert solution(\"1\") == \"1 -1\"\nassert solution(\"2\") == \"2 -1\"\nassert solution(\"3\") == \"1 -1\"\nassert solution(\"4\") == \"2 -1\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('4\\n1\\n2\\n3\\n4\\n1\\n5\\n2\\n4\\n') == '-1'\nassert solution('1\\n') == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3') == '1 2'\nassert solution('8\\n1\\n3\\n2') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1\n2\n4\n1\n5\n2\n4\nSample Input 3:\n8\n1\n3\n2\n4\n1\n5\n2\n4\nSample Output 3:\n1 2\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1') == '1 2\\n'\nassert solution('8\\n1') == '1 2\\n4\\n'\nassert solution('8\\n1\\n3') == '1 2\\n'\nassert solution('8\\n1\\n3\\n2') == '1 2\\n'\nassert solution('8\\n1\\n3\\n2\\n4') == '1 2\\n'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3\\n2\\n4\\n1\") == \"1 2\"\nassert solution(\"8\\n1\\n2\\n4\\n1\") == \"1 2\"\nassert solution(\"8\\n1\\n2\\n4\\n1\") == \"-1\"\nassert solution(\"8\\n1\\n2\\n4\\n1\") == \"1 2\"\nassert solution(\"8\\n1\\n2\\n4\\n1\") == \"1 2\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\nassert solution('00') == '0'\nassert solution('0') == '1'\nassert solution('11') == '1'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1101') == '1'\nassert solution('101') == '0'\n\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"00\") == \"0\"\nassert solution(\"1110\") == \"0\"\nassert solution(\"1110\") == \"0\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1101') == '1'\nassert solution('1110') == '0'"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n111\n0''') == '0'\nassert solution('''\n111\n1''') == '1'\nassert solution('''\n1\n0''') == '0'\nassert solution('''\n0\n1''') == '1'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1101') == '1'\nassert solution('01') == '0'\n\nstdin = '1101'"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 3 1') == '1'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1\n''') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1'\n\nassert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '2'\n\nassert solution('''\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1\n''') == '0'"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1 3 1') == '0'\nassert solution('4 1 6 3 6') == '2'\nassert solution('7 3 4 2 6 5 6 1') == '3'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5\n2 5 2 2 1 3\n3 2 1\n1 2\n3 2\n1 3\n2 3\n2 4\n3 5\n4 5\n2 2\n2 3\n2 3\n1 1\n2 2\n4 3\n1 5\n3 3\n2 6\n2 5\n4 1\n4 4\n2 6\n3 4\n4 4\n3 4\n3 4\n3 4\n1 2\n2 4\n3 3\n2 3\n3 2\n3 2\n3 2\n2 4\n4 4\n4 4\n4 4\n4 4\n2 2\n2 4\n3 4\n1 5\n3 5\n2 4\n3 4\n3 4\n2 2\n4 4\n2 2\n3 3\n1 2\n3 3\n1 3\n3 1\n3 1\n1 1\n1 1\n1 1\n3 3\n3 3\n3 3\n1 4\n2 4\n1 4\n2 4\n3 4\n2 2\n2 2\n1 2\n2 2\n2 2\n2 2\n1 3\n2 2\n3 2\n2 3\n1 5\n3 5\n3 5\n2 2\n1 3\n3 3\n2 4\n2 4\n2 4\n2 4\n2 4\n1 4\n1 4\n2 4\n2 4\n2 4\n2 4\n1 5\n1 5\n3 5\n3 5\n2 4\n1 3\n1 3\n2 4\n2 4\n3 4\n3 4\n1 4\n1 4\n1 4\n1 4\n3 3\n2 4\n3 4\n3 4\n1 4\n1 4\n1 4\n2 4\n1 4\n2 4\n3 4\n1 5\n2 4\n2 4\n3 4\n2 4\n2 4\n2 4\n2 4\n1 4\n2 4\n1 4\n3 4\n1 4\n2 4\n3 4\n1 4\n2 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n3 4\n1 4\n2 4\n1 4\n2 4\n1 4\n2 4\n2 4\n2 4\n1 4\n2 4\n1 4\n1 4\n2 4\n2 4\n1 4\n2 4\n2 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n2 4\n2 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n2 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n0\\n2\\n\""
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3 3\n    3 1 3 1\n    2 2 1\n    3 3 1 3\n    1 2\n    2 3\n    3 1\n''') == '1'\n\nassert solution('''\n    2 1\n    4 1 6 3 6\n    7 3 4 2 6 5 6 1\n    1 2\n    2 3\n    3 1\n''') == '3'"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1\\n0\\n2\\n'\nassert solution('2 1') == '3\\n'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 1') == '0'\nassert solution('3 1') == '2'\nassert solution('3 1') == '0'\nassert solution('4 1') == '3'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 1 2 3 4\"\n    ) == \"4.000000\"\nassert solution(\n    \"4 2 3 4\"\n    ) == \"4.0000\""
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '5.000000'\nassert solution('5 2') == '3.666666'\nassert solution('5 3') == '2.666666'\nassert solution('5 4') == '1.666666'\nassert solution('5 5') == '0.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 1\n1 2 3\n\"\"\") == \"1.0\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 1\n1 2 3 4\n\"\"\") == \"4.000000\"\nassert solution(\"\"\"\n4 2\n2 4 3 4\n\"\"\") == \"3.666666\"\nassert solution(\"\"\"\n3 2\n2 4 3 4\n\"\"\") == \"2.50000\""
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1') == '4.000000'\nassert solution('4 2') == '3.666666'"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '1.0'\nassert solution('2 2') == '2.0'\nassert solution('5 2') == '2.0'\n\n'''\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1') == '4.000000'\nassert solution('4 2') == '3.666667'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '4.000000'\nassert solution('1 2 3 4 5') == '5.400001'\nassert solution('1 2 3 4 5 6 7 8') == '6.285714'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '7.571429'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12') == '7.857143'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2 3\n''') == '3.333333'\nassert solution('''4\n1 2 3 4\n''') == '3.333333'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '1.333333'\nassert solution('5 2') == '2.5'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0.375\"\nassert solution(\"3 4 3 4\") == \"0.75\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\") == \"0.625\"\nassert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\") == \"0.375\"\nassert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n\"\"\") == \"0.375\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '2 2 5 5\\n'\n    '2.0 2.0\\n'\n    '4.0\\n'\n    '1.0 0.0\\n'\n    '0.0 1.0\\n'\n    '1.5 0.0\\n'\n    '0.0 2.0\\n'\n    ) == '0.625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 5 5') == '0.750'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.625'\nprint(solution(input))\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"4.0\") == \"0.000\"\nassert solution(\"1.0 0.0\") == \"0.000\"\nassert solution(\"0.0 1.0\") == \"0.000\"\nassert solution(\"1.0 0.0\") == \"0.000\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n''') == '0.750'\nassert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 5 5') == '0.750'\nassert solution('3 2 5 5') == '0.750'\nassert solution('1 10 5 5') == '0.750'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\"\nassert solution(\"4 4 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.750\"\nprint(solution(input()))\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 5 5\") == \"0.750\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\n\"\"\"\n\nfrom math import factorial\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n\") == \"2\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"37\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"3 4\") == \"37\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"2 3 0 7\") == \"37\"\nassert solution(\"3 4 2 3 0 7\") == \"39\"\nassert solution(\"3 4 0 3 0 7\") == \"41\"\nassert solution(\"3 4 0 3 0 0 7\") == \"41\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n0 3 6\\n4 0 3') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0') == '37'\nassert solution('5 5\\n1 3 2 3 1\\n0 0 2 1\\n3 0 3 0\\n4 0 2 0\\n3 2 0 1') == '10'\nassert solution('15 15\\n2 2 5 2 3\\n0 0 2 1\\n4 0 2 0\\n5 0 3 0\\n7 0 3 0\\n0 0 0 2\\n6 0 3 1\\n2 2 0 1\\n8 0 3 1\\n6 0 2 3\\n9 0 3 0\\n12 0 3 1\\n12 0 2 0\\n13 0 3 0\\n12 0 2 1\\n13 0 3 1\\n') == '13'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"37\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 4') == '2'\nassert solution('3 4') == '37'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 2\n2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\n1234\n1 1\n1 2\n1 3\n1 4\nSample Output 3:\n10\n14\n18\n\"\"\"\n) == \"10\"\n\nassert solution(\"\"\"\n4\n1234\n1 4\n1 4\n1 4\n1 4\nSample Output 4:\n9\n16\n18\n\"\"\"\n) == \"9\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '10'\nassert solution('4 4') == '18'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4') == '10\\n14\\n18'\n\"\"\""
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"10\\n14\\n18\\n\""
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1234\\n1 4\\n1 4\\n1 4\\n') == '10\\n14\\n18\\n'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n4 3\n1234\n1 4\n1 4\n1 4\n1 4\n\"\"\"\n) == \"10\\n14\\n9\\n16\\n\"\nassert solution(\n    \"\"\"\n5 3\n1234\n1 1\n2 3\n1 4\n1 4\n1 4\n\"\"\"\n) == \"1\\n4\\n9\\n16\\n\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 4') == '10'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '10'\nassert solution('4 4') == '1 4'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"10\"\nassert solution(\"4 4\") == \"14\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution(stdin_up=SAMPLE_INPUT_1, stdin_down=SAMPLE_INPUT_2) == \"1\"\nassert solution(stdin_up=SAMPLE_INPUT_2, stdin_down=SAMPLE_INPUT_1) == \"1\""
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 3') == '1'\nassert solution('5 2 4') == '1'\nassert solution('10 1 10') == '10'\nassert solution('4 4 4') == '4'\nassert solution('7 2 4') == '0'"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '2 2 3\\n1 3\\n2 3\\n3 4\\n'\n) == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"2\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4 2 3\n1 3\n2 3\n3 4\n\"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n5 2 4\n1 3\n3 4\n2 4\n4 5\n\"\"\") == \"1\"\n\nassert solution(\n    \"\"\"\n1 1 2\n1 1\n\"\"\") == \"0\"\n\nassert solution(\n    \"\"\"\n4 2 3\n1 3\n3 4\n2 4\n4 5\n\"\"\") == \"1\"\n\nassert solution(\n    \"\"\"\n4 2 3\n1 3\n2 3\n3 4\n4 5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 3\") == \"2\"\nassert solution(\"5 2 4\") == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4 2 3\n1 3\n2 3\n3 4\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n5 2 4\n1 3\n3 4\n2 4\n4 5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n''') == 'yes', \"Top\"\nassert solution('''7\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n''') == 'no', \"Bot\""
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'yes'\nassert solution('2') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\nSample Output 1:\nyes\n\nSample Input 2:\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\nSample Output 2:\nyes\n\"\"\") == \"no\"\n\nassert solution(\"\"\"\n5\n0 0 0\n10 10 10\n0 0 0\n10 0 0\n0 0 0\n0 0 0\nSample Output 1:\nyes\n\nSample Input 2:\n3\n0 0 0\n0 0 0\n0 0 0\nSample Output 2:\nno\n\"\"\") == \"yes\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'no'"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"yes\"\nassert solution(\"2\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"no\"\nassert solution(\"2\") == \"yes\"\nassert solution(\"3\") == \"yes\"\nassert solution(\"4\") == \"yes\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"yes\"\nassert solution(\"2\") == \"no\""
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0 10000\\n') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'no'\nassert solution('1') == 'yes'"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"no\"\nassert solution(\"2\") == \"yes\""
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'YES\\n1 3\\n2 1\\n3 2\\n'"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"YES\\n1 3\\n2 1\\n\"\nassert solution(\"4 3\") == \"NO\\n\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == 'YES'\nassert solution('4 3') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3\n1 2\n2 3\n1 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4 3\n1 2\n1 3\n1 4\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2\\n2 3\\n1 3\\n') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'NO\\n'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"YES\\n1 3\\n2 1\"\nassert solution(\"4 3\") == \"NO\""
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3 3\n    1 2\n    2 3\n    1 3\n    \"\"\"\n) == \"YES\"\nassert solution(\n    \"\"\"\n    4 3\n    1 2\n    1 3\n    1 4\n    \"\"\"\n) == \"NO\"\nprint(solution(\n    stdin\n))\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('4 3') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n1 3\\n2 1\\n3 2\\n\"\nprint(solution())\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'inconsistent'\nassert solution('5 5') == 'consistent'\n\"\"\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"inconsistent\"\nassert solution(\"6 7\") == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n0 > 1\n1 = 2\n0 = 2''') == 'inconsistent'\n\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'consistent'''\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n3 3\n0 > 1\n1 = 2\n0 = 2\n    \"\"\") == \"inconsistent\"\n    assert solution(\n    \"\"\"\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n    \"\"\") == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"inconsistent\"\nassert solution(\"4 5\") == \"inconsistent\"\nassert solution(\"3 5\") == \"consistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'inconsistent'\nassert solution('5 5') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1.57079633'"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n0 0 0\\n1 1 0\\n0 0 0\") == \"1.57079633\"\nassert solution(\"3\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\") == \"41938.65135885\"\nprint(\"all tests passed\")\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\nassert solution('''\n10\n10 -10 -10\n-10 10 -10\n-10 -10 10\n-10 10 -10\n10 -10 -10\n10 10 -10\n10 -10 -10\n-10 -10 10\n-10 10 -10\n-10 -10 -10\n-10 10 -10\n-10 -10 -10\n-10 -10 10\n10 -10 -10\n10 10 -10\n10 -10 -10\n-10 -10 10\n-10 10 -10\n10 10 -10\n10 -10 -10\n10 -10 10\n-10 10 -10\n-10 10 10\n-10 -10 10\n-10 -10 -10\n10 10 -10\n-10 10 10\n''') == '3.15258789473684'\nassert solution('''\n1\n1 1 1\n0 0 0\n0 0 1\n''') == '1'\nassert solution('''\n1\n1 1 1\n1 1 1\n''') == '1'\nassert solution('''\n5\n-10 -10 0\n0 1 0\n-10 0 1\n0 -10 0\n0 0 -10\n0 0 -10\n-10 -10 -10\n-10 0 -10\n0 -10 -10\n0 0 -10\n0 -10 -10\n-10 0 0\n0 -10 0\n0 0 -10\n0 0 -10\n-10 0 -10\n0 -10 0\n0 0 -10\n0 0 -10\n0 -10 0\n0 0 -10\n0 -10 0\n-10 0 0\n0 -10 0\n0 0 -10\n-10 0 0\n0 -10 0\n0 0 -10\n-10 0 -10\n0 0 -10\n0 0 -10\n-10 0 0\n0 0 -10\n0 0 -10\n-10 0 0\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n-10 0 0\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0 -10\n0 0"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1.57079633'\nassert solution('2') == '1.12132034'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0') == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1.57079633'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1.57079633\""
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633', 'First'\nassert solution('''\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '41938.65135885', 'Second'"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1.57079633\"\nassert solution(\"1\") == \"1.0\"\nassert solution(\"2\") == \"0.7853981633974483\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0.5'\nassert solution('3') == '1.7320508075688772'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n' + 'abcdefg') == 'abc'\nassert solution('2\\n' + 'aa') == ''\nassert solution('5\\n' + 'abc') == 'abc'"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''13\nsabcabcfabc\n\n20\ntruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutruutru"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"3\"\nassert solution(\"18\") == \"4\""
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == '3'\nassert solution('18') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"12\"\nassert solution(\"11\") == \"11\"\nassert solution(\"18\") == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''11\nsabcabcfabc\n18\ntrutrutiktiktappop''') == '3'\nassert solution('''4\naaa''') == '0'\nprint('all tests passed')"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11\\n\"\n                 \"sabcabcfabc\") == \"3\"\nassert solution(\"18\\n\"\n                 \"trutrutiktiktappop\") == \"4\"\nassert solution(\"1\\n\"\n                 \"a\") == \"0\"\nassert solution(\"5\\n\"\n                 \"aabb\") == \"2\"\nassert solution(\"8\\n\"\n                 \"h\") == \"0\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nabcd\") == \"2\"\nassert solution(\"10\\nabcdeff\") == \"3\"\nassert solution(\"22\\nxyyx\") == \"0\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11\\n' +'sabcabcfabc\\n') == '3'\nassert solution('18\\n' + 'trutrutiktiktappop\\n') == '4'"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2\\n3 4') == '2'\nassert solution('4\\n2 4 1 3\\n3 2 1') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == 'huge'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2 3 1\n3 1 2\n''') == '2'\nassert solution('''\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''\n4\n1 1 4 1\n2 2 4 2\n1 3 3 3\n''') == '1'\nassert solution('''\n5\n1 1 1 1 1\n1 2 2 2 2\n1 3 3 3 3\n1 4 4 4 4\n''') == '1'\nassert solution('''\n10\n
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n4 6 5 1 3 2\n''') == '2'\nassert solution('''\n5\n1 1 1 1 1\n1 1 1 1 1\n''') == 'huge'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"6\") == \"5\"\nassert solution(\"10\") == \"huge\"\nassert solution(\"4\") == \"3\"\nassert solution(\"12\") == \"huge\""
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 3 1\n3 1 2\n''') == '2'\nassert solution('''\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1 3\n2 5\n''') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 2, 3, 1]) == \"2\"\nassert solution([6, 5, 6, 3, 2, 4]) == \"5\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 3 1\n3 1 2\n''') == '2'\nassert solution('''\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''\n1\n10\n5 10 9 8 7 6 1\n10\n2\n''') == 'Huge'\nassert solution('''\n2\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '2'\nassert solution('''\n4\n8 9 10 1 2 3\n10 1 2 3 9 8\n''') == '3'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"huge\"\nassert solution(\"5 1 2 3 4 5 6\") == \"huge\"\nassert solution(\"4 6 5 1 3 2\") == \"huge\"\nassert solution(\"3 1 2 3 1 2 1\") == \"huge\"\nassert solution(\"1 1 1 1 1 1 1\") == \"huge\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '4'\nassert solution('3 1') == '4'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n0 10 20\n0 10\n''') == '4'\nassert solution('''\n3 1\n0 10 20\n0 10\n''') == '4'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10\\n') == '4'\nassert solution('6 1\\n0 10 20 26 40 50\\n0 40\\n') == '9'\n\nimport io\nimport os\nimport sys\n\nfrom collections import deque\n\n\nclass Graph():\n    def __init__(self, vertices):\n        self.V = vertices\n        self.graph = []\n\n    def addEdge(self, u, v, w):\n        self.graph.append([u, v, w])\n\n    def find(self, parent, i):\n        if parent[i] == i:\n            return i\n        return self.find(parent, parent[i])\n\n    def union(self, parent, rank, x, y):\n        xroot = self.find(parent, x)\n        yroot = self.find(parent, y)\n\n        if rank[xroot] < rank[yroot]:\n            parent[xroot] = yroot\n        elif rank[xroot] > rank[yroot]:\n            parent[yroot] = xroot\n\n        else:\n            parent[yroot] = xroot\n            rank[xroot] += 1\n\n    def KruskalMST(self):\n\n        result = []\n        i = 0\n        e = 0\n\n        self.graph = sorted(self.graph, key=lambda item: item[2])\n\n        parent = []\n        rank = []\n\n        for node in range(self.V):\n            parent.append(node)\n            rank.append(0)\n\n        while e < self.V - 1:\n            u, v, w = self.graph[i]\n            i = i + 1\n            x = self.find(parent, u)\n            y = self.find(parent, v)\n\n            if x!= y:\n                e = e + 1\n                result.append([u, v, w])\n                self.union(parent, rank, x, y)\n        for u, v, weight in result:\n            print(\"{} - {} : {}\".format(u, v, weight))\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '4'\nassert solution('6 1') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 1\n0 10 20\n0 10\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1') == '4'\nassert solution('4 1') == '5'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '4'\nassert solution('6 1') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n0 10 20\n0 10\n''') == '4'\nassert solution('''\n6 1\n0 10 20 26 40 50\n0 40\n''') == '9'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '4'\nassert solution('6 1') == '9'\nassert solution('3 2') == '3'\nassert solution('6 2') == '6'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3 4 5 6\n5 4 3 2 1\n''') == '9'\n\nassert solution('''\n5 5 5 5 5\n3 4\n1 2\n''') == '4'\n\nassert solution('''\n5 5 5 5 5\n2 2\n1 1\n''') == '5'\n\nassert solution('''\n3 5 2 1\n2 3\n''') == '3'\n\nassert solution('''\n5 5 5 5 5\n4 4\n1 2\n''') == '6'"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\n    \"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"equal\"\nassert solution() == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'not equal'\nassert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''concat(shuffle([1,2]),shuffle([1,2]))\nshuffle([1,2,1,2])\n''') == 'not equal'\nassert solution('''sorted(concat([3,2,1],[4,5,6]))\n[1,2,3,4,5,6]\n''') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('concat([3,2,1],[4,5,6])') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('sorted([1,2,3,4])') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"shuffle([1,2,1,2])\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('1 3') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('3 2') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == 'Oh no'"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 2\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"1\"\nassert solution(\"\"\"1 3\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"2\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"Oh no\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 2 1 2\") == \"2\"\nassert solution(\"2 3 1 2\") == \"2\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('3 2') == '1'\nprint('all tests passed')\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"Oh no\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Oh no\"\n\nassert solution([1, 2, 3, 2, 1, 1]) == \"1\"\n\nassert solution([1, 2, 1, 2, 1, 1]) == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n3 2\") == \"Oh no\"\nassert solution(\"1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\") == \"1\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no', 'First'\nassert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1', 'Second'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'\nassert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == '3'\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 4], [\"1 2 2\", \"2 3 1\", \"3 4 1\", \"4 1 2\"]) == \"3\"\nprint('\"Run\" is good. How is \"Check\" going?')\nprint(solution([5, 5], [\"1 2 1\", \"2 3 1\", \"2 4 1\", \"2 5 1\", \"4 5 1\"]))\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4\\n2 1 1\\n1 3 1\\n4 2 1\\n4 1 2') == '3'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"5 5\") == \"impossible\"\nassert solution(\"10 10\") == \"impossible\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"5 5\") == \"impossible\"\nprint(solution(open(\"data.txt\")))\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([4, 4]) == '3'\nassert solution([5, 5]) == 'impossible'\nassert solution([3, 5, 1, 1]) == '4'\nassert solution([3, 3, 3, 3]) == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '3'\nassert solution('5 5') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == \"3\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2') == '3'\nassert solution('4 4\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == 'impossible'\nassert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 1 1 1 3''') == '2'\nassert solution('''1\n22''') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 1 1 1 3\n''') == '2'\nassert solution('''1\n22\n''') == '4'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '10'\n\nNested parentheses are the most common construct used to create an expression.\n\nThe parenthesis can be nested arbitrarily deep.\n\nLet's consider the following sequence of expressions:\n\n(2 + 3) * 5 * (8 + 9)\n\nIn this expression, the following parentheses are used to indicate the nesting:\n\n2 + 3\n5\n8 + 9\n\nThe structure of this expression is an expression followed by parentheses. This means that the expression inside the parentheses can be interpreted as an expression with a single term. This term can be the result of several operations that are grouped together.\n\nIt is often necessary to consider multiple terms in an expression with a single term. For example, the expression above can be expanded to:\n\n2 + 3 + (8 + 9)\n2 + 3 + 8 + 9\n\nThis is called a \"chain of operations\".\n\nIn general, a chain of operations can be written in mathematical notation as:\n\nP(i) = term(i\u22121) + term(i\u22122) +... + term(i\u2212n)\n\nHere is an example:\n\nP(3) = 3 + 2 + 1\n\nP(4) = 3 + 2 + 1 + 5 + 4\n\nP(5) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(6) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(8) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nThe result of this chain can be written in a mathematical notation like this:\n\nP(8) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nThis is called a \"mixed\" expression, because the sum of all terms is used to evaluate the expression.\n\nThe sum of terms is the sum of the terms in the expression. A simple example:\n\nP(4) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(6) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(8) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(10) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(12) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(14) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(16) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(20) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nThe expression above is called a \"mixed\" expression because the sum of all terms is used to evaluate the expression.\n\nLet's consider a mixed expression with terms that include the sum:\n\nP(8) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(12) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(14) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1\n\nP(16) = 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 + 1 + 5 + 4 + 3 + 2 +"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1 1 3') == '2'\nassert solution('5') == '2'\nassert solution('22') == '4'\nassert solution('10') == ''"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '2'\nassert solution('3') == '2'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3''') == '4'\nassert solution('''5\n2\n3\n1\n2''') == '3'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nprint('Congratulations! All test cases passed.')"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('22') == '4'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n2 1 1 1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"\"\nassert solution(\"\"\"\n10\n10 9 8 7 6 5 4 3 2 1\n\"\"\") == \"\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"\"\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1 1 3') == '2', \"Not correct\"\nprint(solution('2 1 1 1 3'))\n\nassert solution('5') == '', \"Not correct\"\nprint(solution('5'))\n\nassert solution('1') == '', \"Not correct\"\nprint(solution('1'))\n\n\"\"\""
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '2'\nassert solution('3\\n3 1 5') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 3') == '1'\nassert solution('4 1 2 3') == '2'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 1 5\n''') == '3'\nassert solution('''\n4\n1 2 3 4\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '3'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '4'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('3 1 5') == '3'\nassert solution('4 1 2 3 4') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n10\n\"\"\") == \"3\", \"Wrong\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 5\nSample Input 3:\n2\n1 2''') == '2'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\") == \"a-b+c\"\nassert solution(\"a-b+d-c\") == \"a+b-c\""
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\", \"Should return - +d-\"\nassert solution(\"a-b+d-c\") == \"\", \"Should return <empty>\""
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"knuth-morris-pratt\") == \"<empty>\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''a+b-c\na-b+d-c\n''') == '- +d-'"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"a+b-c\") == \"d-c\"\nassert solution(\"a-b+d-c\") == \"-c\"\nassert solution(\"knuth-morris-pratt\") == \"knuthmorrispratt\"\nassert solution(\"knuthmorrispratt\") == \"<any>\"\n\"\"\""
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"a+b-c\"\n) == \"<empty>\"\nassert solution(\n    \"a-b+d-c\"\n) == \"knuthmorrispratt\"\n\"\"\"\nimport re\nimport sys\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''a+b-c\na-b+d-c\n''') == '- +d-', 'dont get anything, you get <empty>'\nassert solution('''knuth-morris-pratt\nknuthmorrispratt\n''') == '<any> <empty>', 'dont get anything, you get <empty>'\n'''\n\ns = 'a+b-c'\ns2 = 'a-b+d-c'"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a+b-c') == '- +d-', \"First\"\nassert solution('a-b+d-c') == '- +d-', \"Second\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''a+b-c''') == '- +d-'\nassert solution('''a-b+d-c''') == '- +d-'\nassert solution('''knuth-morris-pratt''') == '<any> <empty>'''\nassert solution('''knuthmorrispratt''') == '<any> <empty>'''\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a+b-c\") == \"+ -cd\"\nassert solution(\"a-b+d-c\") == \"-- +c\""
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '1'\nassert solution('''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0'\n\nassert solution('''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '11'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '9'\nassert solution('''4 0\n4 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '8'\nassert solution('''4 0\n4 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10''') == '3'\nassert solution('''6 0\n4 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nt 11''') == '11'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '1'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nSample Output 2:\n11\n6\n5\n9\n4\n3\n7\n9\n9\n10''') == '13'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\nSample Output 2:\n11\n6\n5\n9\n4\n3\n7\n9\n9\n10''') == '3'"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 0') == '1'\nassert solution('3 10') == '11'\n\n'''"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"3 2\") == \"4\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nSample Output 1:\n0\n1\n3\n2\n3\n5\n3\n''') == '1 1'\nassert solution('''\n2 2\n4 7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nSample Output 2:\n5\n4\n4\n4\n4\n3\n''') == '2 2'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0') == '0'\nassert solution('3 0') == '1'\nassert solution('3 1') == '2'\nassert solution('3 2') == '3'\nassert solution('3 3') == '4'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1\\n0\\n7\\nt 0\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6') == '0\\n1\\n3\\n2\\n3\\n5\\n3\\n'\nassert solution('3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10') == '11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2'\nassert solution('''\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n''') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 8') == '2'\nassert solution('5 6') == '0'\nassert solution('1 2 2') == '2'"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6') == '2\\n4 6'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n\"\"\") == \"2 4 6\"\nassert solution(\"\"\"\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n\"\"\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6') == '0\\n4 6'\nassert solution('10 4\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n6 8 1\\n6 9 2\\n7 10 3\\n7 11 2\\n8 12 2\\n8 13 1\\n9 15 2\\n9 16 1\\n10 14 3\\n10 15 1\\n11 16 3\\n11 17 2\\n12 18 3\\n12 19 1\\n13 22 3\\n13 23 1\\n14 25 3\\n14 26 1\\n15 28 3\\n15 29 1\\n16 32 3\\n16 33 1\\n17 34 3\\n17 35 1\\n18 36 3\\n18 37 1\\n19 38 3\\n19 39 1\\n20 42 3\\n20 43 1\\n21 46 3\\n21 47 1\\n22 50 3\\n22 51 1\\n23 52 3\\n23 53 1\\n24 54 3\\n24 55 1\\n25 56 3\\n25 57 1\\n26 58 3\\n26 59 1\\n27 60 3\\n27 61 1\\n28 62 3\\n28 63 1\\n29 64 3\\n29 65 1\\n30 66 3\\n30 67 1\\n31 68 3\\n31 69 1\\n32 70 3\\n32 71 1\\n33 72 3\\n33 73 1\\n34 74 3\\n34 75 1\\n35 76 3\\n35 77 1\\n36 78 3\\n36 79 1\\n37 80 3\\n37 81 1\\n38 82 3\\n38 83 1\\n39 84 3\\n39 85 1\\n40 86 3\\n40 87 1\\n41 88 3\\n41 89 1\\n42 90 3\\n42 91 1\\n43 92 3\\n43 93 1\\n44 94 3\\n44 95 1\\n45 96 3\\n45 97 1\\n46 98 3\\n46 99 1\\n47 100 3\\n47 101 1\\n48 102 3\\n48 103 1\\n49 104 3\\n49 105 1\\n50 106 3\\n50 107 1\\n51 108 3\\n51 109 1\\n52 110 3\\n52 111 1\\n53 112 3\\n53 113 1\\n54 114 3\\n54 115 1\\n55 116 3\\n55 117 1\\n56 118 3\\n56 119 1\\n57 120 3\\n57 121 1\\n58 122 3\\n58 123 1\\n59 124 3\\n59 125 1\\n60 126 3\\n60 127 1\\n61 128 3\\n61 129 1\\n62 130 3\\n62 131 1\\n63 132 3\\n63 133 1\\n64 134 3\\n64 135 1\\n65 136 3\\n65 137 1\\n66 138 3\\n66 139 1\\n67 140 3\\n67 141 1\\n68 142 3\\n68 143 1\\n69 144 3\\n69 145 1\\n70 146 3\\n70 147 1\\n71 148 3\\n71 149 1\\n72 150 3\\n72 151 1\\n73 152 3\\n73 153 1\\n74 154 3\\n74 155 1\\n75 156 3\\n75 157 1\\n76 158 3\\n76 159 1\\n77 160 3\\n77 161 1\\n78 162 3\\n78 163 1\\n79 164 3\\n79 165 1\\n80 166 3\\n80 167 1\\n81 168 3\\n81 169 1\\n82 170 3\\n82 171 1\\n83 172 3\\n83 173 1\\n84 174 3\\n84 175 1\\n85 176 3\\n85 177 1\\n86 178 3\\n86 179 1\\n87 180 3\\n87 181 1\\n88 182 3\\n88 183 1\\n89 184 3\\n89 185 1\\n90 186 3\\n90 187 1\\n91 188 3\\n91 189 1\\n92 190 3\\n92 191 1\\n93 192 3\\n93 193 1\\n94 194 3\\n94 195 1\\n95 196 3\\n95 197 1\\n96 198 3\\n96 199 1\\n97 200 3\\n97 201 1\\n98 202 3\\n98 203 1\\n99 204 3\\n99 205 1\\n100 206 3\\n100 207 1\\n101 208 3\\n101 209 1\\n102 210 3\\n102 211 1\\n103 212 3\\n103 213 1\\n104 214 3\\n104 215 1\\n105 216 3\\n105 217 1\\n106 218 3\\n106 219 1\\n107 220 3\\n107 221 1\\n108 222 3\\n108 223 1\\n109 224 3\\n109 225 1\\n110 226 3\\n110 227 1\\n111 228 3\\n111 229 1\\n112 230 3\\n112 231 1\\n113 232 3\\n113 233 1\\n114 234 3\\n114 235 1\\n115 236 3\\n115 237 1\\n116 238 3\\n116 239 1\\n117 240 3\\n117 241 1\\n118 242 3\\n118 243 1\\n119 244 3\\n119 245 1\\n120 246 3\\n120 247 1\\n121 248 3\\n121 249 1\\n122 250 3\\n122 251 1\\n123 252 3\\n123 253 1\\n124 254 3\\n124 255 1\\n125 256 3\\n125 257 1\\n126 258 3\\n126 259 1\\n127 260 3\\n127 261 1\\n128 262 3\\n128 263 1\\n129 264 3\\n129 265 1\\n130 266"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2'\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0'"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"7 8\\n\" +\n    \"1 2 2\\n\" +\n    \"1 3 1\\n\" +\n    \"1 4 3\\n\" +\n    \"2 6 1\\n\" +\n    \"2 7 2\\n\" +\n    \"3 5 1\\n\" +\n    \"4 7 2\\n\" +\n    \"5 7 1\"\n    ) == \"2 4 6\"\n\nassert solution(\n    \"5 6\\n\" +\n    \"1 2 2\\n\" +\n    \"2 3 2\\n\" +\n    \"3 5 2\\n\" +\n    \"1 4 3\\n\" +\n    \"4 5 3\\n\" +\n    \"1 5 6\\n\" +\n    \"Sample Input 3:\n    \"\n    ) == \"0\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2\\n4 6'''\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '0'\n\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '4 6'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 8\") == \"2\"\nassert solution(\"5 6\") == \"0\""
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1 1\\n'\n    '1 2\\n'\n    '1 3\\n'\n    '1 1\\n'\n    '1 2\\n'\n    '1 3\\n'\n) == '4'\n\nassert solution(\n    '6\\n'\n    '1 1\\n'\n    '1 2\\n'\n    '1 3\\n'\n    '2 1\\n'\n    '2 2\\n'\n    '2 3\\n'\n) == '1'"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\\n2\\n3\"\nassert solution(\"12\") == \"1\\n2\\n3\"\nassert solution(\"6\") == \"1\\n2\\n3\\n4\\n5\\n6\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\") == \"4\"\nassert solution(\"1 1\\n1 2\\n1 3\\n1 1\") == \"5\"\nassert solution(\"1 1\\n1 2\\n1 3\\n2 1\") == \"6\""
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution) == '3 4 5'"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3') == '4\\n5\\n6'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '1 2 3 4 5 6'\nassert solution('''\n8\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '1 2 3 4 5 6'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '2 4 5 6 1 2 3'\nassert solution('''\n8\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4 5 6'\nassert solution('''\n4\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nprint('Solution:')\nprint(solution(input))\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nassert solution('CTTPPPPC') == '4'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''CPCC''') == '1'\nassert solution('''PPPPCCCC''') == '8'\nprint('Congratulations!')\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    'CCPPPPCC'\n) == '1'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('3 2 1') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 1\n1 3\n2 3\n3''') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 3\n2 3\n2\n\"\"\") == \"1 2 3\"\nassert solution(\"\"\"\n3 2 1\n1 3\n2 3\n1\n\"\"\") == \"1 3\"\nassert solution(\"\"\"\n4 2 1\n1 3\n2 3\n3\n\"\"\") == \"1 2 3\"\nassert solution(\"\"\"\n3 2 1\n1 3\n2 3\n2\n\"\"\") == \"1 3\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1\\n1 3\\n2 3\\n2') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 2\n2 3\n2\n\"\"\") == \"\"\"\n1 2 3\"\"\"\nassert solution(\"\"\"\n3 2 1\n1 3\n2 3\n3\n\"\"\") == \"\"\"\n3\"\"\"\nassert solution(\"\"\"\n3 2 1\n1 3\n2 3\n3\n\"\"\") == \"\"\"\n1 3\"\"\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 3\n2 3\n3\n\"\"\") == \"1 2 3\"\nassert solution(\"\"\"\n3 2 1\n1 2\n2 3\n2\n\"\"\") == \"2 3\"\nassert solution(\"\"\"\n3 2 1\n1 2\n2 3\n3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1\\n1 2\\n2 3') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3') == '1 2 3'\nassert solution('3 2 1\\n2 1\\n2 3') == '2 1 3'\nassert solution('3 2 1\\n2 2\\n2 3') == '2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3 2 1\"\n\"\"\"\n\nD, M, N = list(map(int, input().split()))\nimplications = []\nevents = set()\nfor _ in range(M):\n    implications.append(list(map(int, input().split())))\nevents = set(map(int, input().split()))\n\nall_events = set()\nfor i in range(N):\n    event = set(map(int, input().split()))\n    all_events = all_events.union(event)\n\nfor event in all_events:\n    if event in events:\n        print(event)\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1\\n1 3\\n2 3\\n2') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 2 1\n1 2\n2 3\n2\n\"\"\") == \"1 2 3\"\n\nassert solution(\"\"\"\n1 2\n1 3\n2 3\n3\n\"\"\") == \"1 2 3\"\n\nassert solution(\"\"\"\n2 2\n1 2\n2 3\n2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1 2\n1 3\n2 3\n3\n\"\"\") == \"1 2 3\"\n\nprint('solution is done!')\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 4 2 3 4') == '39'\nassert solution('5 1\\n1 0 1 1 1') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '39'\n\n'''\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '39'\nassert solution('5 1') == '4'\nassert solution('1 0 1 1 1') == '4'\nassert solution('5 1 0 1 1') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nprint(solution(\"5 1\\n1 0 1 1 1\"))\n\"\"\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '39'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"0\"\nassert solution(\"5 3\") == \"39\"\nassert solution(\"5 1\") == \"4\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n2 4 2 3 4''') == '39'\nassert solution('''5 1\n1 0 1 1 1''') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 2 3 4') == '39'\nassert solution('5 1') == '4'\nassert solution('3 3') == '9'\n\n'''"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"1 1\") == \"4\""
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '39'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"1 1 2\"\nassert solution(\"4 6\") == \"1 2 4\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...\n''') == '1 1 2'\nassert solution('''4 6\nxx...\nxx.xxx\n...xxx\n...xxx\n''') == '1 2 3'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\nxx.\nxxx\n...\nSample Output 1:\n1 1 2\n2 3 1\n\nSample Input 2:\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\nSample Output 2:\n1 1 2\n2 4 3\n''') == '1 1 2\\n2 4 3'"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...\n''') == '1 1 2'\nassert solution('''4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 2 3'\nprint(solution('''5 5\nxx.xxx\nxxx.xx\nxxxx.x\nxxx.xx\n'''))"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"3 3\\nxx.xx\\nxx.xxx\\nxx.xxx\") == \"1 1 2\"\nassert solution(r\"4 6\\nxx....\\nxx.xxx\\n...xxx\\n...xxx\") == \"1 2 3\"\n\n\n\n'''\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...''') == '1 1 2'\nassert solution('''4 6\nxx....\nxx.xxx\n...xxx\n...xxx\nSample Output 3:\n1 1 2\n2 4 3\n''') == '1 1 2'\nassert solution('''8 8\nx.xxx\nxx.xx.\nxx.xx.\nxx.xx.\nxx.xx.\nxx.xx.\nxx.xx.\nxx.xx.\nxx.xx.\nSample Output 4:\n2 4 3\n''') == '1 1 2'"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1 1 2'\nassert solution('4 6') == '1 1 2'\nassert solution('1 4') == '1 1 3'"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"2 3 4\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 1 2\"\nassert solution(input()) == \"2 4 3\"\nprint(solution(input()))\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1 2\n1 2 1\n0 2 0\n0 1 0''') == 'indistinguishable'''\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\nassert solution('2 0 1') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\") == \"indistinguishable\"\nassert solution(\"2 0 1\") == \"0\"\nassert solution(\"0 0 0\") == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == 'indistinguishable'\nassert solution('''\n5 2 1\n1 1 1\n1 1 1\n0 0 0\n0 1 0\n''') == '0'\nassert solution('''\n1 1 2\n1 2 1\n1 2 1\n''') == '1'\nassert solution('''\n1 1 2\n1 2 1\n1 2 1\n''') == '2'\nassert solution('''\n1 1 2\n1 2 1\n0 0 0\n0 1 0\n''') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n    \"\"\"\n) == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 2') == '1'\nassert solution('5 0 1') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 1 2\n1 2 1\n0 2 0\n0 1 0\"\"\") == \"indistinguishable\"\nassert solution(\"\"\"1 1 0\n0 1 1\n0 0 1\"\"\") == \"0\"\nassert solution(\"\"\"6 1 2\n1 2 1\n0 2 0\n0 1 0\n0 0 0\n1 0 1\"\"\") == \"0\"\nassert solution(\"\"\"6 3 2\n1 2 1\n0 2 0\n0 1 0\n0 0 0\n1 0 1\"\"\") == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 1 2\n1 2 1\n0 2 0\n0 1 0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n\"\"\") == \"indistinguishable\""
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\\n\") == \"0\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"0\") == \"-1\""
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\n\nfrom collections import deque\n\nrow = list(stdin.strip())\ncol = deque(stdin.strip())\n\ncol = deque([int(x) for x in col])"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0110\\n1001') == '1111\\n0111\\n1110\\n1111'\nassert solution('0\\n1') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0110''') == '1111'\nassert solution('''1001''') == '0111'\nassert solution('''0''') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0110') == '1111'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0110') == '1111', \"Wrong!\"\nassert solution('1001') == '0111', \"Wrong!\"\n\nSample Input 3:\n0001110111100\n0110011010001\nSample Output 3:\n-1"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n0\n1''') == '1'\n\nassert solution('''0\n1''') == '-1'\n\nassert solution('''0\n0''') == '-1'\n\nassert solution('''1\n1''') == '0'\n\nassert solution('''0\n0''') == '0'"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()[:-1]\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '+'\nassert solution('0') == '0'\nassert solution('-1') == '-'\nassert solution('2') == '+0'\nassert solution('5') == '-0'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin):\n        temp = stdin\n        n = int(temp, 2)\n        # print(n)\n        count = 0\n        while n!= 0:\n            count += 1\n            if n % 2 == 0:\n                n = n // 2\n            else:\n                n = (n * 3 + 1) // 2\n            # print(n)\n        # print(count)\n        temp = str(count)[::-1]\n        # print(temp)\n        if temp == \"\":\n            return str(n)\n        else:\n            return str(temp + '-' + str(n))\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\n\"\"\"\n\nfrom math import log2\nfrom itertools import combinations_with_replacement\nimport sys"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1111') == '+000-'\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '0'\nassert solution('-4') == '-0'\nassert solution('+4') == '+0'\nassert solution('-4') == '+0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000000000000\") == \"+000000\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\", \"Sample Test #1 Failed\"\n\n'''\n\nn = int(input())\na = bin(n).count('1')\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2 3') == '9'\nassert solution('1 2 3 4 5') == '9'\nassert solution('5 3 3 2') == '2'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 8 3 2\\n1 2\\n7 3 4\\n5 6\\n1 3 2\\n1 4 1\\n1 5 1\\n1 6 6\\n2 3 9\\n2 4 2\\n2 6 4\\n7 6 5\\n\") == \"9\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '9'\nprint(solution())"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution([13, 3, 4, 7, 3, 4, 8, 10, 10, 10, 4, 8, 9, 3, 10, 6, 6, 5, 8, 10, 4, 6, 6, 4, 4, 3, 10, 10, 5, 10, 6, 10, 10, 10, 10, 4, 10, 8, 6, 4, 8, 6, 4, 6, 4, 6, 10, 10, 9, 10, 4, 4, 9, 10, 6, 6, 5, 6, 8, 5, 6, 3, 4, 7, 3, 10, 6, 6, 10, 10, 10, 10, 10, 10, 10, 7, 7, 10, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7, 10, 7"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '2'\nprint('tests passed')\n\n\"\"\""
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n2 1 1 1\n2 2\n1\n1\n1 2 1\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '2'\nassert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n4 4 4 4\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n8 1\n8 2\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n''') == '27'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''5 6 8 2 3\n5 1\n4 3 2\n1 2\n6 7\n1 3 1\n2 4\n3 4\n4 5 2\n4 6 1\n''') == '10'"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 8 3 2') == '9'\nassert solution('2 1 1 1') == '2'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n2 1 1 1\n2 2\n1\n1\n1 2 1\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '2'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nprint('Tests passed')\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'\nassert solution('3 3 1 2 1 1 R 1 1 R') == '2'\nassert solution('3 4 2 3 1 R 2 1 L 2 1 L') == '3'\nassert solution('4 5 2 1 R R R R') == '3'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'\nassert solution('3 4 3') == '-1'"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010''') == \"2\"\n\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\nSample Output 3:\n7\n''') == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1') == \"2\"\nassert solution('3 4 2') == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == \"2\"\nassert solution('''\n3 3 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'\nassert solution('7 3 1') == '-1'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\") == \"2\"\nassert solution(\"3 4 2\") == \"7\"\nassert solution(\"6 1\") == \"-1\""
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1 2 1') == '2'\nassert solution('3 3 1') == '2'\nassert solution('2 3 2') == '-1'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('4\\n1 4 2 3') == '5'\nprint(\"\u2705 Passed all test cases!\")\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n2 2 1 2 3\n''') == '2'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 2 1 2 3\n''') == '2'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n2 2 1 2 3\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n8\n1 2 4 1 1 2 5 1\n\"\"\"\n) == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n2\n''') == '0'\nassert solution('''\n1\n3\n1\n2\n''') == '1'\nassert solution('''\n10\n1 1 1 2 2 3 3 2 3\n''') == '2'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'NE'\nassert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3') == 'NE'\nassert solution('6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''D 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == 'NE'\nassert solution('''D 7 1\nD 2 2\nD 1 6\nD 6 6\nD 4 4\nD 5 6\nP 4\nD 3 6\nP 1\nP 2\nP 3\nP 5\n''') == '1'\nassert solution('''D 9 1\nD 2 2\nD 1 6\nD 6 6\nD 4 4\nD 5 6\nP 4\nD 3 6\nP 1\nP 2\nP 3\nP 5\nP 4\nP 6\nP 7\nP 8\nP 9\nP 10\n''') == 'P 10'\nassert solution('''D 7 2\nD 2 3\nD 1 6\nD 6 8\nD 4 4\nD 5 6\nP 4\nD 3 6\nP 1\nP 2\nP 3\nP 5\nP 4\nP 6\nP 7\nP 8\nP 9\nP 10\n''') == 'P 3'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\nD 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\nP 4\nP 5\nP 6\nD 3 2\nD 2 4\nD 5 6\n''') == \"3\"\nassert solution('''\n7\nD 8 8\nD 2 4\nD 5 6\nP 4\nP 5\nP 6\nP 7\nP 8\nD 1 2\nD 1 3\nD 2 4\n''') == \"1\"\nassert solution('''\n3\nD 6 6\nD 1 4\nD 4 5\n''') == \"1\""
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"1\\n2\\n3\"\nassert solution(\"6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"1\\n2\\n4\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n1\nD 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n\"\"\",\n    \"NE\") == \"NE\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"6\", \"D 3 1\") == \"2\"\nassert solution(\"6\", \"D 2 2\", \"D 1 3\") == \"3\"\nassert solution(\"6\", \"D 1 3\", \"P 1\") == \"2\"\nassert solution(\"6\", \"D 1 3\", \"P 2\") == \"2\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == '3'\nassert solution('''\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '1'\nassert solution('''\n3\nP 3\nP 3\nP 3\n''') == 'NE'\nassert solution('''\n4\nD 5 6\nP 1\nP 2\nP 3\n''') == '1'\nassert solution('''\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '2'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\"\nassert solution(\"6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"1\""
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(\"D 2 4\") == \"NE\"\nassert solution(\"D 2 4\") == \"3\""
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''D 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == \"NE\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1 10') == '2'\nassert solution('3 3 5 6') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\nassert solution('''\n1 2 1 10\n0 0\n1 4\n3 2\n''') == '5'\nassert solution('''\n1 2 1 10\n0 0\n1 4\n3 2\n''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\nassert solution('''\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 1 10') == '2'\nassert solution('3 3 5 6') == '5'\nassert solution('5 3 3 3') == '3'\nprint('Coding complete? Click \"Check\" to earn cool rewards!')"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1 10\") == \"2\"\nassert solution(\"2 3 5 6\") == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 1 10\\n0 0\\n1 4\\n3 2') == '2'\nassert solution('2 3 5 6\\n1 1\\n1 1 6\\n1 2 2') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 1 10') == '2'\nassert solution('4 4 1 20') == '1'\nassert solution('6 4 5 7') == '1'"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 2 1 10\n0 0\n1 4\n3 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == stdout_\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1 10\\n0 0\\n1 4\\n3 2\") == \"2\"\nassert solution(\"2 3 5 6\\n1 1\\n1 1 6\\n1 2 2\") == \"5\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2.0000000000\"\nassert solution(\"5\") == \"2.0000000000\"\nassert solution(\"\") == \"Error\""
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1.0 0.0 1.4\") == \"2.0000000000\"\nassert solution(\"5.0 1.0 0.0\") == \"2.0000000000\""
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"\n1\n1.4 1.0 0.0\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n\"\"\") == \"2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2\\n') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5\\n') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1.5\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1.0000000000'\nassert solution('2') == '1.0000000000'\nassert solution('3') == '1.0000000000'\nassert solution('4') == '1.0000000000'\nassert solution('5') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1.0 0.0 1.4') == '2.0000000000'\nassert solution('3\\n1.0 0.0 1.4') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2.0000000000'\nassert solution('5') == '2.0000000000'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 9 5\n1 100 10\n''') == '9'\nassert solution('''1 100 10\n1 9 5\n''') == '1'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 9 5\n''') == '1'\nassert solution('''\n1 100 10\n''') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 10 5\n3 4\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n6 10 5\n1 2\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 9 5') == '1\\n5\\n'\nassert solution('1 100 10') == '9\\n19\\n'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 9 5\") == \"1\"\nassert solution(\"1 100 10\") == \"9\"\nassert solution(\"10 10 10\") == \"9\"\nassert solution(\"1 100 100\") == \"19\"\nassert solution(\"1 100 200\") == \"19\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 9 5\") == \"1\"\nassert solution(\"1 100 10\") == \"9\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n1\n1''') == '1'\nassert solution('''5 5\n4 1 2 4 4\n4 3 2 1\nSample Input 3:\n4 5\n4 1 2 4 4\n4 3 2 1\nSample Output 3:\n7\n4 4 2 4 4 1 4\nSample Input 4:\n3 3\n1 2 3\nSample Output 4:\n1 1 1\nSample Input 5:\n2 6\n1 2\nSample Output 5:\n1 1\n''') == '1 1 1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'\nassert solution('3 3') == '4 4 2 4 4 1 4'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n1\n1\n''') == '1'\n\nassert solution('''\n4 5\n4 1 2 4 4\n4 3 2 1\n''') == '7'\n\nassert solution('''\n1 1\n1\n1\n''') == '0'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('3 3') == '0'\nassert solution('1 3') == '0'\nassert solution('4 5') == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"4 4 2 4 4 1 4\") == \"7 4 4 2 4 4 1 4\""
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n1\n1\n''') == '1'\nassert solution('''\n3 2\n3 3 2\n''') == '3'\nassert solution('''\n3 1\n1 1\n''') == '1'\nassert solution('''\n4 1 2 4 4\n4 3 2 1\n''') == '4'"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '4 4 2 4 4 1 4'"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\nassert solution('10 20 10 1') == '10'\nprint('All test cases passed')\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\nassert solution(\"1 1 2 2\") == \"3\"\nassert solution(\"1 1 1 1\") == \"2\"\nassert solution(\"100 1 0 1\") == \"100\"\nassert solution(\"10 10 5 0\") == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"10\"\nassert solution(solution.__name__) == \"10\"\nassert solution(solution.__module__) == \"__main__\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 698 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999\n400 1\n400 2\n400 3\n400 4\n400 5\n400 6\n400 7\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 10 5 3\n''') == '10'\nassert solution('''\n10 10 5 0\n''') == '10'\nassert solution('''\n1 10 5 3\n''') == '1'\nassert solution('''\n1 10 5 0\n''') == '1'\nassert solution('''\n1 2 5 0\n''') == '1'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n\"\"\"\nfrom math import *\n\nd,g,n,k=map(int,stdin.split())\n\nfor i in range(n):\n    if i%4==1:\n        g+=d\n        d=min(d+1,g)\n    elif i%4==2:\n        d+=g\n        g=min(g+1,d)\n    elif i%4==0:\n        g+=d\n        d=min(d+1,g)\n    else:\n        d+=g\n        g=min(g+1,d)\n\nprint(max(d,g))"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2 10 3 2\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n10 10 5 0\n\"\"\") == \"10\""
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\n\n'''\n\nX, A, B = map(int, input().split())\n\nstr_digits = []\nfor d in range(1, 10):\n    str_digits += list(str(d))\n\ncount = 0\nfor a in range(A, B + 1):\n    if str(a)[0] in str_digits:\n        for b in range(a, B + 1):\n            if str(b)[0] in str_digits:\n                if b!= a:\n                    if str(b)[1] in str_digits:\n                        if str(b)[2] in str_digits:\n                            if str(b)[3] in str_digits:\n                                if str(b)[4] in str_digits:\n                                    if str(b)[5] in str_digits:\n                                        if str(b)[6] in str_digits:\n                                            if str(b)[7] in str_digits:\n                                                if str(b)[8] in str_digits:\n                                                    if str(b)[9] in str_digits:\n                                                        count += 1\n                                                else:\n                                                    pass\n                                            else:\n                                                pass\n                                        else:\n                                            pass\n                                    else:\n                                        pass\n                                else:\n                                    pass\n                            else:\n                                pass\n                        else:\n                            pass\n                    else:\n                        pass\n                else:\n                    pass\n            else:\n                pass\n        else:\n            pass\n    else:\n        pass\n\nprint(count)"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\n\n\"\"\""
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '10'\nassert solution(input()) == '111'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"8 5\") == \"1\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"10\"\nassert solution(input(\"Sample Input 2: \\n\")) == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\nassert solution('0 1 2') == '0'\nassert solution('6 9') == '3'\nassert solution('6 0') == '6'\n\nSample Input 1:\n2 1 10\n0 0\nSample Output 1:\n1\n\nSample Input 2:\n2 1 10\n123\nSample Output 2:\n0\n\nSample Input 3:\n1 10 20\n1234\nSample Output 3:\n4\n'''\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1 20\n0123456789''') == '10'\nassert solution('''6 100 9294\n23689''') == '111'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 5\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 3.666667\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('2 3') == '1.500000 3.666667'\nassert solution('4 5') == '1.500000 2.666667'\nassert solution('6 5') == '1.500000 3.666667'\nassert solution('10 10') == '0 0'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'\nassert solution('1 2 3 4 5') == '2.750000 3.750000'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('4 3') == '0.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 2.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 3.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 3.666667'"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\"\"\") == \"1.500000 2.666667\"\nassert solution(\"\"\"\n5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\"\"\") == \"1.500000 3.666667\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 2.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'\nassert solution('10 5') == '0.0'"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '1.500000 2.666667'\nassert solution('5 3\\n1 R 4\\n2 S 2\\n3 R 2\\n4 S 2\\n5 S 1\\n') == '0.500000 3.666667'"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 6\") == \"3\"\nassert solution(\"4 5\") == \"3\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 6\") == \"3\"\nassert solution(\"4 5\") == \"3\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 6') == '3'\nassert solution('4 5') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6\") == \"3\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"10 1\") == \"-1\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\"\n\nprint(\"solution = \", solution)\n\n\"\"\""
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n101010\n111001\n''') == '3'\nassert solution('''\n4\n10010\n01010\n10101\n01001\n''') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5\n10010\n01010\n10101\n01001\n''') == '3'\nassert solution('''\n4 5\n10010\n01010\n10101\n01001\n''') == '-1'\nassert solution('''\n6 6\n01010\n01010\n01010\n01010\n01010\n01010\n''') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6') == '3'\nassert solution('4 5') == '3'"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 6\") == \"3\", \"Should be 3\""
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 6\n11100\n10111\n10101\n01010\n10001\n''') == '3', 'First'\n\nassert solution('''\n3 2\n00\n01\n''') == '1', 'Second'\n\nassert solution('''\n3 4\n0011\n1101\n10001\n''') == '0', 'Third'\n\nassert solution('''\n4 4\n0011\n1101\n10001\n''') == '1', 'Fourth'\n\nassert solution('''\n6 6\n00010111\n110110001\n01001011\n100010111\n00010001\n''') == '2', 'Fifth'"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1'\nassert solution('''\n4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"-3 -1\"\nassert solution(\"3\") == \"3 1\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3 4'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '3 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('4') == '3 4'"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"-3 -1\"\nassert solution(\"4\") == \"3 4\""
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n4\\n0 1\\n0 -1\\n-1 0') == '-3 -1\\n3 1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1'\n\nassert solution('''\n4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\"\"\") == '-3 -1'\nassert solution(\"\"\"\n4\n2 4\n6 -1\n3 5\n-1 -1\n\"\"\") == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\"\"\") == \"3 -1\"\n\n\"\"\""
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 0.25 2 45 20\") == \"1 12.715255\"\nassert solution(\"3 0.25 2 45 20\") == \"2 6.0\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\\n') == '2 5.086781'\nassert solution('1 0\\n0 0\\n0 0\\n') == '1 0'\nassert solution('5 0\\n0 0\\n0 0\\n') == '4 0'\nassert solution('5 0\\n0 0\\n0 0\\n') == '4 0'\nassert solution('5 0\\n0 0\\n0 0\\n') == '4 0'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 45 20\\n0 0\\n2 0\\n1 1.5\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\\n0 0\\n2 0\\n1 1.5\") == \"1 12.715255\""
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6 5 45 20') == '2 5.086781'\nassert solution('3 0.25 2 45 20') == '1 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6 5 45 20') == '2 5.086781'\nassert solution('3 0.25 2 45 20') == '1 12.715255'"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 6 5 45 20') == '2 5.086781'\nassert solution('3 10 10 45 20') == '3 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 0\n0 0\n2 0\n1 1.5\n''') == '2 5.086781'\nassert solution('''\n3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 1 45 20') == '2 12.715255'\nassert solution('4 2 1 45 20') == '2 3.936881'\nassert solution('10 1 0 30 60 45 55 20') == '7 4.419907'\nassert solution('5 0 1 0 0') == '0 1.858095'"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 0.5 45 60\") == \"1 6.742689\"\nassert solution(\"2 1 3 4 5\") == \"0 1.218284\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6 5 45 20') == '2 5.086781'\nassert solution('4 4 1 45 45') == '1 9.999999'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 0 1\n0 0 0 1\n1 0 1 1\n''') == '1'\n\nassert solution('''\n2\n0 0 1\n0 0 0 1\n1 0 1 1\n''') == '2'\n\nassert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\n\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4''') == '8'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 0 1 0\n0 0 0 1\n1 0 1 1\n''') == '8'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '8', \"First\"\nassert solution('4') == '1', \"Second\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(open(\"sample_in.txt\", \"r\").read()) == \"1\"\nassert solution(open(\"actual_in.txt\", \"r\").read()) == \"1\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"8\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5 1 7 1\") == \"1\"\nassert solution(\"1 1 5 1\") == \"1\"\nassert solution(\"4 0 4 4\") == \"1\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '8'\nassert solution(f'{input()}\\n{input()}\\n{input()}\\n{input()}\\n{input()}') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1') == '8'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"2\"\nassert solution(\"1\\n2\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n3\n7\n''') == 'impossible'\n\nassert solution('''5\n5\n8\n''') == 'impossible'\n\nassert solution('''8\n5\n8\n''') == 'impossible'\n\nassert solution('''10\n10\n10\n''') == '4 3'\n\nassert solution('''20\n10\n10\n''') == 'impossible'"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"4\") == \"2 1\"\nassert solution(\"7\") == \"4 3\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '2 2'\nassert solution('10') == 'impossible'\nassert solution('123') == 'impossible'\nassert solution('30') == 'impossible'\nassert solution('1000000') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"impossible\"\nassert solution(\"1\\n3\") == \"impossible\"\n\n--CODE--\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n8\n4''') == 'impossible'\nassert solution('''6\n7\n2\n3''') == 'impossible'\nassert solution('''4\n8\n4''') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"impossible\"\nprint(solution())"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'impossible'\nassert solution('7') == '4 3'\nassert solution('10') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4 3'\nassert solution('10') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == '4 3'\nassert solution('5') == '3 2'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(f'1\\n2\\n3\\n') == '16'\nassert solution(f'4\\n2\\n4\\n1\\n4\\n') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n4\n7\n8''') == '109'\nassert solution('''5\n5\n4\n6\n2''') == '409'\nassert solution('''7\n3\n1\n5\n2\n5\n5''') == '179'\nassert solution('''7\n3\n5\n2\n5\n5''') == '1283'\nprint(solution('''12\n12\n12\n12'''))\nprint(solution('''8\n1\n1\n1\n1\n1\n1\n1\n1'''))\nprint(solution('''4\n2\n4\n2\n4'''))\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n4\\n\") == \"16\"\nassert solution(\"2\\n4\\n1\\n4\") == \"109\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1\\n3\\n') == '16'\nprint(solution('4\\n2\\n4\\n1\\n4'))\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '16'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1\n3\n''') == '16', 'incorrect'\nassert solution('''\n4\n2\n4\n1\n4\n''') == '109', 'incorrect'\nprint('Congratulations! All test cases passed.')"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '16'\nassert solution('2') == '109'\nassert solution('4') == '1074'\nassert solution('3') == '16'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '16'\nassert solution('4') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1\\n3\\n') == '16'\nassert solution('4\\n2\\n4\\n1\\n4\\n') == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '16'\nassert solution('4') == '109'"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"4 3\") == \"5\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''3 4\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '4'\nassert solution('''5 4\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '4'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3'\nassert solution('4 3') == '5'\nassert solution('10 10') == '10'\nassert solution('20 20') == '20'\nassert solution('10 10') == '10'"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\nSample Output 3:\n5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''\n3 2\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '4'\nassert solution('''\n4 2\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '3'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\nSample Output 3:\n5\n1 3 1\n2 3 2\n4 1 0\n2 4 1\n3 1 0\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"4 3\") == \"5\"\nassert solution(\"4 3\") == \"1\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''\n5 4\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\n\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('3 3') == 'impossible'\n\nstdin = '2 3'\nn, m = map(int, stdin.split())\nkids = range(n)\ntoys = range(m)"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1 2\"\nassert solution(\"6 7\") == \"1 2\"\nassert solution(\"0 1 1\") == \"1\"\nassert solution(\"10 1 0\") == \"1\"\nassert solution(\"10 2 1\") == \"2 1\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n''') == 'impossible'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example_input_1) == '1 2'\nassert solution(example_input_2) == '1 2 3'"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == \"1 2\""
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('2') == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 3:\nimpossible''') == 'impossible'"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1 2'\nassert solution('2 1') == '1 2'"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('1 1') == '1 2'\nassert solution('2 0') == 'impossible'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '0'\nassert solution('10') == '0'\nassert solution('20') == '0'\nassert solution('20') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n''') == '3 2 1'\nassert solution('''\n4\n''') == '4 3 2 1'\nassert solution('''\n4\n''') == '4 3 2 1'\nassert solution('''\n20\n''') == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '2 5'\nassert solution('10') == '10 1'\nassert solution('2020') == '2020 1'\n\n\"\"\""
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\nassert solution('-1') == 'ERROR'\nassert solution('-1000') == 'ERROR'\nassert solution('0') == 'ERROR'\n\"\"\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('20') == '3'\nassert solution('1000') == '100'\n\nimport math"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n10\n''') == '5 2'\nassert solution('''\n1 2\n10\n''') == '2 2'\nassert solution('''\n1 5\n10\n''') == '1 5'\nassert solution('''\n1 10\n10\n''') == '1 10'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n\n------------------------------------------------------------\n\nWrite a function which takes a positive integer $n$ as input and returns the number of integers which are less than or equal to $n$ and are divisible by 7. The function should be able to handle negative integer inputs.\n\nWrite a test which passes given a positive integer $n$ of 10 as input and should return the number of integers which are less than or equal to $n$ and are divisible by 7.\n\nThe function should also return the number of integers which are less than or equal to $n$ and are not divisible by 7.\n\n-----Input-----\nn\n\n-----Output-----\n(n % 7) - (n % 7)\nn\n\n-----Input-----\n-10\n\n-----Output-----\n10\n\n-----Input-----\n100000000\n\n-----Output-----\n1000\n\n'''"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\nSample Output 3:\nambiguous\n\"\"\") == \"ambiguous\"\n\nassert solution(\"\"\"\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nSample Output 4:\nimpossible\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n1\n0\nSample Output 5:\nimpossible\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 apple\n1 orange\n2 bananas\n2 oranges\n''') == 'impossible'\nassert solution('''\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies\n''') == 'unique'\nassert solution('''\n1\n1 apple\n1 orange\n2 bananas\n2 oranges\n3\nchocolate\nicecream\ncookies\n''') == 'ambiguous'\nassert solution('''\n1\n3\napple\nchocolate\n''') == 'impossible'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'impossible'\nassert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n''') == 'unique'\n'''\nSample Input 3:\n5\n5\n0 chocolate\n1 icecream\n2 cookies\n3\n4\n5\n6\n7\n8\n9\n10\n11\nSample Output 3:\nambiguous''') == 'ambiguous'\n'''\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'unique'\nassert solution('''\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'impossible'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies\n''') == \"impossible\"\nassert solution('''4\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == \"unique\"\nassert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies\n''') == \"ambiguous\"\n\n'''\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'impossible'\nassert solution('3') == 'unique'"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'impossible', f'Solution is {solution(\"3\")}'\nassert solution('4') == 'ambiguous', f'Solution is {solution(\"4\")}'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\\nchocolate\\nicecream\\ncookies\\n') == \"impossible\"\nassert solution('3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\\nchocolate\\nicecream\\ncookies\\n') == \"unique\"\n\"\"\""
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    3\n    3\n    0 chocolate\n    1 icecream\n    2 cookies\n    3\n    chocolate\n    icecream\n    cookies\n''') == 'impossible'\n\nassert solution('''\n    4\n    4\n    0 chocolate\n    1 icecream\n    2 cookies\n    2 chocolate\n    3\n    chocolate\n    icecream\n    cookies\n''') == 'unique'\n\nassert solution('''\n    2\n    3\n    1\n    1\n    2\n    1\n    2\n    1\n    3\n    2\n    3\n    3\n''') == 'ambiguous'"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'impossible'\n\nassert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n''') == 'unique'\n\nassert solution('''\n4\n2\n0 chocolate\n1 icecream\n2 cookies\n''') == 'ambiguous'\n\nassert solution('''\n2\n3\n0 chocolate\n1 icecream\n2 cookies\n''') == 'impossible'\n\nassert solution('''\n2\n4\n0 chocolate\n1 icecream\n2 cookies\n''') == 'unique'"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 10') == '1'\nassert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 10') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 0 10\\n\") == \"0\"\n\nassert solution(\"1 2 10\\n\") == \"1\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0 10') == '0', \"Wrong!\"\n\nassert solution('1 2 10') == '1', \"Wrong!\"\n\nassert solution('100 5 5') == '5', \"Wrong!\""
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 0 10\") == \"0\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 0 10\\n') == '0'\nassert solution('1 2 10\\n') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 10') == '0'\nassert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 10') == '0'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 10\n''') == '1'\nassert solution('''\n1 1 1\n''') == '2'\nassert solution('''\n1 10 1\n''') == '3'\n'''\n    for line in stdin:\n        x = line.split()\n        n = int(x[0])\n        k = int(x[1])\n        m = int(x[2])\n        print(solution(n,k,m))\n\n\n\nsolution('''\n1 2 10\n''') == '1'\nassert solution('''\n1 1 1\n''') == '2'\nassert solution('''\n1 10 1\n''') == '3'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n..................................................................................\n..........................................................................................\n...............................................XX.....................................\n.....................................XXX......XXXX....................................\n....................................XXXX........X....................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n......................................................................................\n............................................................ "
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == '1 pan'\nassert solution(\"....XXXX....................................................\") == '3 pan'\nassert solution(\"....XXXX..................................XXXX..............\") == '1 pan'\nassert solution(\"....XXXX...................................XXX..............\") == '2 zoom out'\nassert solution(\"....XXXX...................................XXX..............\") == '1 pan'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sample_input.txt') == '1 zoom'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg.2.jpg.1.jpg"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\nSample Output 2:\n1 pan\n''') == '1 pan':\n    print(\"Sample Output 2:\", '1 pan')\n\nassert solution('''\n............................................................\n............................................................\n...............................................XX...........\n.....................................XXX......XXXX..........\n....................................XXXX........X...........\n........XXX....XXX....................X.....................\n.........XXX...XX...........................................\n............................................................\n............XX..............................................\n...........XXX..............................................\n............................................................\n............................................XX..............\n...........................................XXXX.............\n.............................................XX.............\n............................................................\nSample Output 2:\n3 zoom out\n''') == '3 zoom out':\n    print(\"Sample Output 2:\", '3 zoom out')\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n............................................................\n............................................................\n....XXXX....................................................\n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\n............................................................\nSample Output 1:\n1 pan\n\nSample Output 2:\n3 zoom out''') == '3 zoom out'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(''.join(stdin.split())) == '1 zoom out'\nassert solution(''.join(stdin.split())) == '3 pan'"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n\n....XXXX...................... \n\n....XXXX...................... \n\n....XXXX...................... \n\n.............................. \n.............................. \n\n.............................. \n\n.............................. \n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n\n.............................. \n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('............................................................ \\n'\n'............................................................ \\n'\n'................XX...................XXXX.......................XX........... \\n'\n'.....................................XXX......XXXX..................... \\n'\n'....................................XXXX........X..................... \\n'\n'........XX...XX........................................... \\n'\n'...........XXX...XX........................................... \\n'\n'...........XXXX..XX........................................... \\n'\n'............X....XXX............. \\n'\n'.......................XX............. \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'............................................................ \\n'\n'......................................................"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('............................................................') == '1 pan'\nassert solution('............................................................') == '1 pan'\nassert solution('...............................................XXXX...........') == '3 zoom out'\nassert solution('.....................................XXX......XXXX..........') == '3 zoom out'\nassert solution('....................................XXXX........X...........') == '3 zoom out'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 20\napples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == 'apples are great!  check out our fresh apples!', \"First\"\nassert solution('''7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == '', \"Second\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 20') == 'apples are great!'\nassert solution('7 7') == '+++++++'\nassert solution('10 10') == '+++++++\\n+ +++ +\\n+ +++ +\\n+ +++ +\\n+ +++ +\\n+ +++ +\\n+++++++'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 20') == \"apples are great!\\n\"\nassert solution('7 7') == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\"\nassert solution('1 1') == ''\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 20') == 'apples are great!  '\nassert solution('7 7') == '+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 20\") == \"apples are great!\\n\" +\\\n            \"++++++++++\\n\" +\\\n            \"+ oranges are\\n\" +\\\n            \"+ way better!\\n\" +\\\n            \"+ #oranges>apples\\n\" +\\\n            \"++++++++++\\n\" +\\\n            \"check out our\\n\" +\\\n            \"fresh apples!\\n\"\n\nassert solution(\"7 7\") == \"+++++++\\n\" +\\\n            \"+  =  +\\n\" +\\\n            \"+ +++ +\\n\" +\\\n            \"+ + + +\\n\" +\\\n            \"+ +++ +\\n\" +\\\n            \"+     +\\n\" +\\\n            \"+++++++\\n\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 20') == 'apples are great!\\n+ oranges are\\n+ way better!\\n+ oranges>apples\\n++++++++++++++++++++\\ncheck out our fresh apples!'\nassert solution('7 7') == '+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\ncheck out our fresh apples!'"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 20\") == \"apples are great!\\n\"\nassert solution(\"7 7\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\\n\"\n\nimport sys"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 20') == 'apples are great!', 'Test #1'\nassert solution('7 7') == '+++++++', 'Test #2'\nassert solution('5 5') == '', 'Test #3'\nassert solution('3 3') == '', 'Test #4'\nassert solution('4 4') == '', 'Test #5'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n++++++++\n+++++++\n++++++++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n++++++++\n+++++++\n++++++++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++++++\n+++++++\n++++++++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n+++.+++.++\n++"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == 'apples are great!\\ncheck out our fresh apples!\\n'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''HHT\nH?T\nT?''') == '2.0'\nassert solution('''H\n?''') == '1.5'\nassert solution('''THT\nH?T\nT?T\nTTT''') == '2.0'\nassert solution('''HHT\nTHT\nH?T\nT?T\nT?''') == '2.0'\n''')\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nH?\nT''') == '1.5'\nassert solution('''\nT?\nHH''') == '2.0'\n''')\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n\"\"\""
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\nBTHTH\n''') == \"1.5\"\n\nassert solution(\n'''\nHHT\n''') == \"0\"\n\nassert solution(\n'''\nHTT\n''') == \"0\"\n\nassert solution(\n'''\nHTH\n''') == \"0\"\n\nassert solution(\n'''\nTHTH\n''') == \"2.0\""
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''H\nT\n?''') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H?H\") == \"1.5\"\nassert solution(\"HH\") == \"2.0\"\nassert solution(\"HT\") == \"2.0\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nprint('Congratulations, have a nice day!')\nIf the checker program is implemented correctly, it should not print anything besides your result.\n'''\n\nstdin = input()"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1111\n1111\n1111\n1111''') == '6'\nassert solution('''1\n0111\n0111\n0111\n0111''') == '6'\nassert solution('''3\n1111\n1111\n1111''') == '2'\nassert solution('''15\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n111111111111111111111111111111\n1111111111111111111111111111"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0111\n0111\n1111\n1111\n''') == '6'\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '6'\nassert solution('''\n4\n0001\n0001\n0011\n1110\n''') == '1'\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '1'\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '1'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('8') == '1'\nassert solution('16') == '1'\nassert solution('32') == '3'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0001\n0001\n0011\n1110\n''') == '1'\nassert solution('''\n4\n0001\n0001\n0011\n1111\n''') == '6'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n0001\n0001\n0011\n1110\n''') == '1'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1010\n0010\n1011\n''') == '3'\n\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '4'\n\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '4'\n\nassert solution('''\n4\n1011\n1001\n1011\n1011\n''') == '5'\n\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '4'"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\\n') == '2'\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2'\nassert solution('3\\nh 1 5 1\\nh 5 10 2\\nv 1 5 1\\nv 5 10 3') == '3'\nassert solution('3\\nh 1 2 1\\nh 5 2 2\\nv 1 2 1\\nv 5 2 3') == '4'\nassert solution('3\\nh 1 4 1\\nh 10 4 2\\nv 1 4 1\\nv 10 4 3') == '4'\nassert solution('3\\nh 1 4 1\\nh 10 4 2\\nv 1 10 1\\nv 10 4 3') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('4 2') == '2'\nassert solution('4 1 1') == '2'\nassert solution('4 1 2 1') == '3'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"5\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\nassert solution('''h 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3''') == '4'\nassert solution('''h 1 100 1\nh 5 100 2\nv 1 100 1\nv 5 100 3''') == '100'\nassert solution('''h 100 1\nh 5 100 2\nv 1 100 1\nv 5 100 3''') == '100'\nassert solution('''h 100 1\nh 5 100 2\nv 1 100 1\nv 100 1''') == '1'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '4'\nassert solution('3 1 2 3') == '4'\nassert solution('2 1 2 3') == '-1'\nassert solution('2 2 2 3') == '3'"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '4'\nassert solution('''\n2 2\n1 2\n3 1\n1 4\n''') == '-1'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''\n2 2\n1 1\n2 2\n2 1\n''') == '-1'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '-1'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n\"\"\"\nIn a library where every shelf is exactly $N$-by-$M$ shelf and books are $1$-by-$K$-by-$M$ pieces, every shelf has exactly $M$ books and every book is $1$-by-$K$ pieces, how many books do you have to move to arrange them in each shelf in order to minimize the number of lifts?\n\nWrite a function:"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n') == '4'\nassert solution('10 10\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n') == '-1'"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '4'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '-1'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '4'\nassert solution('1 2 3') == '-1'\nassert solution('4 5 6') == '4'\nassert solution('7 8 0') == '-1'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 3 3 4 2') == '2'\nassert solution('8\\n1 2 1 3 1 3 1 2') == '4'\n\"\"\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"2\"\nprint(solution(input))\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 2 3 3 4 2\n''') == '2'\nassert solution('''\n8\n1 2 1 3 1 3 1 2\n''') == '4'"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 3 3 4 2') == '2'\nassert solution('8\\n1 2 1 3 1 3 1 2') == '4'"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 2 3 3 4 2\n''') == '2'\nassert solution('''\n8\n1 2 1 3 1 3 1 2\n''') == '4'\nprint('PASSED ALL TESTS!')\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n1 2 3 3 4 2''') == '2'\nassert solution('''8\n1 2 1 3 1 3 1 2''') == '4'\nassert solution('''4\n4 5 6 7''') == '2'\nprint(\"Yay, today is the day we're having fun with this one!\")"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\n1 2 3 3 4 2\n''') == '2'\nassert solution('''8\n1 2 1 3 1 3 1 2\n''') == '4'\nprint(solution('''6\n1 2 3 3 4 2\n'''))"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == str(2)\nassert solution(sample_input_2) == str(4)"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 1 1\") == \"4\"\nassert solution(\"1 1 1 2\") == \"0\"\nassert solution(\"2 2 2 1\") == \"4\"\nassert solution(\"2 2 2 2 1\") == \"2\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 2\") == \"4\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n') == '4'\nassert solution('2\\n2\\n2\\n2\\n2\\n') == '0'\nassert solution('3\\n3\\n3\\n3\\n3\\n') == '6'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2 2 2\\n'\n    '1 1 1\\n'\n    '2 2 2 1\\n'\n    '2 2 2 2 1') == '4'\nassert solution(\n    '2 2 2\\n'\n    '1 1 1\\n'\n    '2 2 2 2 1') == '2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\nassert solution('''\n2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4'\nassert solution('''\n1 1 1\n1 1 1\n''') == '0'\nassert solution('''\n3 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '2'\nassert solution('''\n4 3 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 2\\n1 1 1\\n2 2 1\\n2 2 2 1\\n1 1 1 2\\n') == '4\\n2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 2\") == \"4\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == '1'\nassert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\nSample Output 3:\nimpossible''') == 'impossible'"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == 'impossible'\nassert solution('1 2') == '1'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == '1'\nassert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == 'impossible'\nassert solution('''4 5\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2''') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"4 2\") == \"impossible\"\nassert solution(\"4 3\") == \"impossible\""
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == 'impossible'\nassert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2''') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '1'\nassert solution('5 5') == '4'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\\n\") == \"1\"\nassert solution(\"4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2\\n\") == \"impossible\"\nassert solution(\"5 1\\n1 0\\n1 0\\n1 0\\n1 0\\n1 2\\n1 0\\n1 2\\n1 1\\n1 1\\n1 1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"4 2\\n1 0 0 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2\") == \"impossible\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\") == \"35\"\nassert solution(\"11 3\\n3 7 10\\n3\") == \"8\""
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == \"35\"\nassert solution('''\n11 3\n3 7 10\n3\n0 10\n2 6\n7 7\n''') == \"8\"\n\nprint(\"You're all set!\")"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 4') == '35'\nassert solution('11 3') == '8'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"18 2\""
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3') == '35'\nassert solution('11 3\\n3 7 10\\n3') == '8'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == \"8\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '5'\nassert solution('11 3') == '18'\nassert solution('10 4') == '35'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 4\\n1 1 2 1\\n3\") == \"35\\n18\\n1\\n\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 4\n1 1 2 1\n3''') == '35'\nassert solution('''11 3\n3 7 10\n3\n0 10\n2 6\n7 7\nSample Input 3:\n10 6\n1 1 2 1\n3\n0 10\n2 6\n7 7\nSample Output 3:\n36\n27\n1''') == '36'\nassert solution('''12 4\n1 1 2 1\n3\n0 10\n2 6\n7 7\nSample Input 4:\n10 5\n1 1 2 1\n3\n0 10\n2 6\n7 7\nSample Output 4:\n10\n11\n2''') == '10'"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3\\n0 9\\n2 6\\n7 7\\n') == '35\\n18\\n1\\n'\nassert solution('10 10\\n0 1 2 1\\n3\\n0 10\\n2 6\\n7 7\\n') == '23\\n23\\n1\\n'\nassert solution('10 10\\n0 1 2 1\\n3\\n0 10\\n2 6\\n7 7\\n') == '23\\n23\\n1\\n'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4') == '0\\n1\\n3\\n6'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\") == \"0\\n1\\n3\\n6\"\nassert solution(\"5\\n3\\n2\\n4\\n1\\n5\") == \"0\\n1\\n2\\n4\\n6\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '6'\nassert solution('5') == '10'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4') == '0\\n1\\n3\\n6'\nassert solution('5\\n3\\n2\\n4\\n1\\n5') == '0\\n1\\n2\\n4\\n6'"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4\\n1\\n2\\n3\\n4\"\n) == \"0\\n1\\n3\\n6\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0 1 2 3 4'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4') == '0\\n1\\n3\\n6'\nassert solution('5\\n3\\n2\\n4\\n1\\n5') == '0\\n1\\n2\\n4\\n6'"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1\n2\n3\n4\n''') == '0 1 3 6'\nassert solution('''5\n3\n2\n4\n1\n5\n''') == '0 1 2 4 6'\n\nstdin = sys.stdin.read()\nsys.stdin = open(os.path.expanduser(__file__.replace('.py', '.input.txt')))\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4') == '0\\n1\\n3\\n6'\nassert solution('5\\n3\\n2\\n4\\n1\\n5') == '0\\n1\\n2\\n4\\n6'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2 4 1 3'\nassert solution('1 3 2 2') == '2 4 1 3'\nassert solution('2 4 7 3') == '4 3 5 3'\nassert solution('3 3 5 3') == '3 3 5 3'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3'\n\n'''\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '2 4 1 3', 'Test 1 failed'\nassert solution('''4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2', 'Test 2 failed'\n\nassert solution('''4\n1 2 1 2\n1 1 2 1\n2 4 7 3\n3 3 5 3\n''') == '4 3 1 2', 'Test 3 failed'\nassert solution('''4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2', 'Test 4 failed'"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2 4 1 3'\nassert solution('4') == '4 3 1 2'\nassert solution('4') == '4 3 1 2'\nassert solution('4') == '4 3 1 2'\nassert solution('4') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n\"\n    \"1 3 2 2\\n\"\n    \"1 1 3 2\\n\"\n    \"2 4 7 3\\n\"\n    \"3 3 5 3\"\n) == \"2 4 1 3\"\n\nassert solution(\n    \"4\\n\"\n    \"0 0 1 1\\n\"\n    \"1 2 0 3\\n\"\n    \"2 2 3 3\\n\"\n    \"4 0 3 1\"\n) == \"4 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2 4 1 3'\nassert solution('4') == '2 4 1 3'\nassert solution('3') == '4 3 1 2'\nassert solution('3') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"5 3 1 2\"\nassert solution(\"10\") == \"9 1 2 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3'"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\"\"\",\n\"\"\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\"\"\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\nassert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'Theta wins'\nprint(solution())\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\"\n) == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\", \"Wrong answer in standard case\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\", \"Wrong answer in other case\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'Theta wins'\nassert solution(input) == 'Theta loses'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5''') == 'Theta wins'\nassert solution('''89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == 'Theta wins'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'charlatan'\n'''\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\"\nassert solution(\"2 1\\n1 or charlatan 1\\n\") == \"charlatan\"\nassert solution(\"2 1\\n1 or not charlatan 1\\n\") == \"truther\""
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'charlatan'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\\n\") == \"charlatan\"\n\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\\n\") == \"fabulist\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'truther'\nassert solution('2 1') == 'fabulist'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist'\n\"\"\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2\n1 charlatan 1\n1 not charlatan 1\n\"\"\") == \"charlatan\"\nassert solution(\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n\"\"\") == \"fabulist\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'truther'\nassert solution('''\n2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist'\nprint('All tests passed!')"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2\n1 charlatan 1\n1 not charlatan 1\n2 and fabulist 1 fabulist 2''') == 'charlatan'\n\"\"\""
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '4'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '3'"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '3'\nassert solution('10\\n1.00 1.00\\n-1.00 1.00\\n-1.00 -1.00\\n-1.00 -1.00\\n-1.00 -1.00') == '3'"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\"\nassert solution(\"1\\n1.00 1.00\") == \"1\"\nprint('All tests passed')"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '3'\nassert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4'\nassert solution('2\\n-1.00 -1.00\\n1.00 1.00\\n0.00 1.00') == '0'\nassert solution('2\\n-1.00 -1.00\\n1.00 0.00\\n0.00 1.00') == '1'\nassert solution('2\\n-1.00 -1.00\\n0.00 1.00\\n0.00 1.00') == '1'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '3'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"4\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\nSample Output 2:\") == \"3\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n''') == \"4\"\nassert solution('''\n3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == \"3\"\nassert solution('''\n2\n2.00 4.00\n1.00 2.00\n''') == \"2\"\n'''\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8') == '16'\nprint(solution(*list(map(int, stdin.split()))))"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n\"\"\") == \"16\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5 2\\nR..?\\n.X...\\n100 100 7 100 8\\n\") == \"16\"\nassert solution(\"5 4 3\\n?.X.\\n.X.X.\\n.X.X.\\n.X.X.\\n.X.X.\\n\") == \"10\""
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"5 5 2\") == '0'\nassert solution(\"R..?.X..X.?\") == '0'\nassert solution(\"R.X..X...L\") == '0'\nassert solution(\"R.X...X...L\") == '0'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '16'\nassert solution('2 3 1') == '10'\nassert solution('3 3 1') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 5 2\") == \"16\"\nassert solution(\"2 2 1\") == \"10\"\nassert solution(\"2 3 1\") == \"10\"\nassert solution(\"2 3 3\") == \"12\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1\") == \"10\"\nassert solution(\"2 5 2\") == \"16\"\nassert solution(\"2 3 1\") == \"10\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 5 2\"\n    \"R..?.\\n.X...\"\n    \"100 100 7 100 8\"\n) == \"16\"\n\nassert solution(\n    \"2 3 1\"\n    \"X..\"\n    \"10 1000 1\"\n) == \"10\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 2\\nR..?.\\n.X...\\n100 100 7 100 8') == '16'\nassert solution('2 3 1\\nX..\\n.?.\\n10 1000 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\n\"\"\"\nfrom itertools import product\nfrom math import inf\n\nR, C, K = map(int, input().split())\ngrid = [input() for _ in range(R)]"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 11') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 3\n0 4 4\n1 5 1\n2 6 1\n\"\"\") == \"1.414\", \"First\"\nassert solution(\"\"\"\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == \"5.657\", \"Second\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '1.414'\nassert solution('6 11') == '5.657'\n\n'''"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.000'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '1.414'\nassert solution('6 11') == '5.657'\nprint(solution(input()))"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    3 3\n    0 4 4\n    1 5 1\n    2 6 1\n    ''') == '1.414'\n    assert solution(\n    '''\n    6 11\n    0 0 1\n    0 1 2\n    1 0 3\n    1 1 4\n    5 5 1\n    20 20 10\n    ''') == '5.657'\n'''\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1.414'\nassert solution('6 11') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3\n0 4 4\n1 5 1\n2 6 1\n\"\"\") == '1.414'\nassert solution(\"\"\"\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n0 4 4\n1 5 1\n2 6 1\n\"\"\") == \"1.414\"\n\nassert solution(\"\"\"\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == \"5.657\"\n\nassert solution(\"\"\"\n5 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == \"5.657\"\n\nassert solution(\"\"\"\n5 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == \"5.657\"\n\nassert solution(\"\"\"\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == \"5.657\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1.414'\nassert solution('6 11') == '5.657'"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_lines[0]) == \"1.0\"\n\"\"\"\nimport math"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'\nassert solution('5 5 6 7') == '0.0'\nassert solution('1') == '0.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1 1\") == \"0.433\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 1 1 1\\n') == '1.0'\nassert solution('3 1 1 1\\n') == '0.433'\nassert solution('20 2 1 1 1 1\\n') == '0.125'\nassert solution('20 4 1 1 1\\n') == '1.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n1 1 2') == '1.0'\nassert solution('3 1 1 1\\n1 1 2\\n1 1 3') == '1.0'\nassert solution('3 2\\n1 2\\n1 1') == '0.0'\nassert solution('1 1\\n1 1') == '0.0'\nassert solution('1 2\\n2 2') == '1.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 2 2') == '0.433'\nassert solution('3 1 1 1') == '0.433'\nassert solution('1 2 1 1 1 2 1 1 1 2') == '0.433'\nassert solution('3 2 1 1 1 2 2 1 2 1 2') == '0.533'\nassert solution('3 1 2 1 1 1 2 2 1 2 1 2') == '0.533'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n4 1 1 1') == '0.433'\nassert solution('3\\n3 1 1 1') == '0.5'\nassert solution('4\\n3 1 1 1') == '0.5'\nassert solution('5\\n3 1 1 1 1') == '0.5'\nassert solution('1\\n1') == '0.5'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 1 1 1\n\"\"\") == \"1.0\"\nassert solution(\"\"\"\n10 10 10 1\n\"\"\") == \"0.5\"\nassert solution(\"\"\"\n10 10 10 10\n\"\"\") == \"2.0\"\nassert solution(\"\"\"\n10 10 10 10 10\n\"\"\") == \"3.0\"\nassert solution(\"\"\"\n20 1 1 1 1 1 1 1\n\"\"\") == \"1.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"3 1 1 1\") == \"0.433\"\n\"\"\""
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36'\nassert solution('4 4\\n3 2\\n1 1\\n3 2\\n2 2\\n2 3\\n2 4\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n3 2') == '3'"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 5') == '5'\nassert solution('8 10') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '5'\nassert solution('12 13') == '13'\nassert solution('8 10') == '36'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 5') == '5'\nassert solution('8 10') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"10 10\") == \"9\"\nassert solution(\"12 12\") == \"12\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"8 10\") == \"36\"\nprint(solution(input()))\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"8 10\") == \"36\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5') == '5'\nassert solution('8 10') == '36'"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == '5'\n\nassert solution('''8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\n''') == '36'\n\nassert solution('''1 1\n2 1\n1 2\n''') == '0'\n\nassert solution('''6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == '5'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 3') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 1\n2 1\n1 2\n''') == '1'\n\nassert solution('''\n3 2\n2 1 3\n1 3\n2 3\n''') == '3'\n\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '0'"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(\"2 1\\n2 1\\n1 2\") == \"1\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\nassert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\nassert solution('3 2') == '2'\nassert solution('10 5') == '5'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1\\n2 1\\n1 2') == '1'\nassert solution('2 2\\n2 2\\n2 2') == '2'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 3\n1 5\n1 2\n''') == '5'\nassert solution('''\n5\n2 3\n1 5\n3 6\n1 6\n''') == '-1'\nassert solution('''\n5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '5'\n'''\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4') == '-1'\nassert solution('5 8') == '5'\nassert solution('6 5') == '5'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '5'\nassert solution('''\n5 4\n1 4\n1 2\n2 3\n3 4\n''') == '-1'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == '-1'\nassert solution('6 5') == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 8') == '-1'\nassert solution('6 5') == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n\"\"\") == \"-1\"\n\nprint('All test cases passed!')"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '-1'\nassert solution('6 5') == '5'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\nassert solution([5, 8]) == '-1'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 8') == '-1'\nassert solution('6 5') == '5'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 8') == '-1'\nassert solution('6 5') == '5'\nassert solution('8 4') == '-1'\nassert solution('3 5') == '5'\nassert solution('7 5') == '-1'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2') == '4.00'\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0') == '9.00'"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 1') == '4.00'\nassert solution('4 3') == '6.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"9.00\"\nprint(solution())"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4 1\n1 1\n5 1\n5 5\n4 2\n\"\"\"\n) == \"4.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1\\n1 1\\n5 1\\n5 5') == '4.00'\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1') == '4.00'\nassert solution('6 3') == '9.00'"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2') == '4.00'\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1') == '4.00'\nassert solution('6 3') == '9.00'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\") == \"2 1 2 3\"\nassert solution(\"4 3 2\") == \"2 1 2 3\"\nassert solution(\"3 3 4\") == \"3 1 1 2 2\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\") == \"2 1 2 3\"\nassert solution(\"3 3 4\") == \"1 2 1 2\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 4') == '2 1 2 3', 'Test 1 Failed'\nassert solution('3 3 4') == '1 2 1 2', 'Test 2 Failed'\nassert solution('4 1 1 2 2') == '3 1 1 2 2', 'Test 3 Failed'\nassert solution('4 2 4 2') == '3 2 4 1 2', 'Test 4 Failed'"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 2 1 2'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 3 2\"\"\") == \"\"\"2 1 2\"\"\"[:-1]\nassert solution(\"\"\"3 3 4\"\"\") == \"\"\"1 2 1\"\"\"[:-1]\nassert solution(\"\"\"0\"\"\") == \"\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 2') == '2 1 2 3'\nassert solution('3 3 4') == '2 1 2 3'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\nSample Input 3:\n3 3 4\nPAINT 3 0 3 3 3\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nSample Output 3:\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\nSample Input 4:\n4 3 2\nPAINT 2 0 0 3 3\nSAVE\nPAINT 2 1 1 2 2\nSAVE\nPAINT 3 0 3 3 3\nLOAD 1\nSample Output 4:\n3 1 1\n1 3 1\n1 1 1\n1 2 1 2\n''') == '3 1 1\\n1 3 1\\n1 1 1\\n1 2 1 2\\n'\nassert solution('''10 5 1\nPAINT 1 7 1 7 4\nPAINT 2 1 2 2 2\nPAINT 5 3 5 5 5\nPAINT 6 7 6 6 6\nPAINT 7 7 7 7 7\nPAINT 8 8 8 8 8 8\nPAINT 9 1 1 1 9\nPAINT 10 2 2 2 2\nSample Input 5:\n10 5 1\nPAINT 1 7 1 7 4\nPAINT 2 1 2 2 2\nPAINT 5 3 5 5 5\nPAINT 6 7 6 6 6\nPAINT 7 7 7 7 7\nPAINT 8 8 8 8 8 8\nPAINT 9 1 1 1 9\nPAINT 10 2 2 2 2\nSample Output 5:\n1 1 1\n1 3 1\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1\n1 2 1 2\n1 1 1"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 4\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\n\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\"\nassert solution(\"5 5 3\\nPAINT 3 0 0 1 1\\nPAINT 4 0 1 1 1\\nPAINT 3 0 2 2 3\\nPAINT 4 0 3 3 3\\n\") == \"3 1 1\\n1 3 1\\n1 1 1\\n3 1 1\\n1 3 1\\n1 1 1\\n1 2 1\\n3 1 1\\n1 3 1\\n1 1 1\\n1 2 1\\n3 1 1\\n1 3 1\\n1 1 1\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2\") == \"2 1 2 3\", \"First\"\nassert solution(\"4 3 2\") == \"1 2 1 2\", \"Second\"\nassert solution(\"4 3 4\") == \"1 2 1 2\", \"Third\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 2 3''') == '1 2 3'\nassert solution('''5 1\n4 5 3 2 1''') == '-1'\n\nassert solution('''3 2\n1 2 3''') == '1 2 3'\nassert solution('''5 1\n4 5 3 2 1''') == '-1'"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"-1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1\") == \"-1\""
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 2'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2') == '1 2'\nassert solution('4 5\\n2 4 1 3') == '3 2 4'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '1 4 2 3', \"Wrong Answer\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1') == '-1'\nassert solution('5 2') == '1 2'\nassert solution('5 3') == '1 3'\nassert solution('5 4') == '2 3 4'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n\n\"\"\""
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n4 2\n2 1\n1 3''') == '1'\nassert solution('''4\n5 0\n2 6\n8 6\n5 7''') == '0'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4 2\\n2 1\\n1 3') == '1'\nassert solution('2\\n5 0\\n2 6\\n8 6\\n5 7') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3\\n\") == \"1\"\nassert solution(\"4\\n2\\n1\\n3\\n\") == \"1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 0\n2 6\n8 6\n5 7\n''') == '0'\nassert solution('''3\n4 2\n2 1\n1 3\n''') == '1'\nassert solution('''5\n0\n2 6\n8 6\n5 7\n''') == '0'\nassert solution('''5\n0\n2 6\n8 6\n5 7\n''') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n4 2\n2 1\n1 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n5 0\n2 6\n8 6\n5 7\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n-5 0\n2 6\n8 6\n5 7\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n-4 5\n2 6\n8 6\n5 7\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(3) == 1\nassert solution(4) == 1\nassert solution(5) == 0\nassert solution(6) == 2\nassert solution(7) == 2\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4\\n2 1\\n1 3') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n4 2\n2 1\n1 3\"\"\") == \"1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n4 2\\n2 1\\n1 3\\n\") == \"1\"\nassert solution(\n    \"4\\n5 0\\n2 6\\n8 6\\n5 7\\n\") == \"0\"\n\nimport math\n\nn = int(input())\npoints = []\nfor i in range(n):\n    points.append([int(j) for j in input().split()])\n\nans = 0\nfor i in range(n):\n    for j in range(i+1, n):\n        for k in range(j+1, n):\n            if (points[i][0] - points[j][0]) ** 2 + (points[i][1] - points[j][1]) ** 2 == (points[i][0] - points[k][0]) ** 2 + (points[i][1] - points[k][1]) ** 2:\n                ans += 1\nprint(ans)\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 0 3') == '4 140'\nassert solution('10 10 0 3') == '10 100000'\nassert solution('8 5 0 1 2 3 4') == '8 1 1 0 1 1 1 1'\nassert solution('3 3 2 4') == '2'\nassert solution('1 0 5 0 0 0 1') == '1'\nprint('\"Run\" is good. It is the exit code of our \"main\".')"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\nassert solution('''\n4 3 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4 0 3') == '4 140'\nassert solution('2 1 0 1') == '1000 1000000'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0 1 4 10') == '4 140'\nassert solution('2\\n0 1 4 10\\n0 2 4 10') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1 3\") == \"4 140\"\nassert solution(\"5 6 2 7 5 8\") == \"7 7\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140'\nassert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n\"\"\"\n) == \"4 140\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 2 4') == '2 140'\nassert solution('1 1 0 1') == '1 100'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4 0 3') == \"4 140\"\nassert solution('2 1 0 1') == \"1000 100000\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"10 3\") == \"impossible\"\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\nSample Output 2:\n3\n''') == '3'\nprint('All tests passed!')"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 2\n3 4\n2 5\n4 8\n3 6\nSample Input 3:\n2 3\n2 4\nSample Output 3:\n2\n\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 2\\n8 3\\n5 7') == '3'\nassert solution('100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20') == '3'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '3'\nassert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == 'impossible'\nassert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == 'impossible'\nassert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == 'impossible'\nassert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '1'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nprint('SUCCESS')\n\"\"\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"impossible\"\nassert solution(\"100 5\") == \"1 2\"\nassert solution(\"100 7\") == \"1 2 3\"\nassert solution(\"1 7\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '3'\nassert solution('''\n8 2\n8 3\n5 7\n''') == 'impossible'\nassert solution('''\n10 1\n5 10\n20 10\n50 10\n''') == '3'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n20\n5\n5 7\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n20\n4\n10 4\n8 10\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\"\nassert solution(\"123456789\") == \"144\"\nassert solution(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\") == \"120\"\nassert solution(\"12345678901234567890123456789012345678901234567890123456789012345678901234567890\") == \"1440\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"10\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"123\") == \"12\"\nassert solution(\"12345\") == \"12\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\""
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\nprint(solution(input()))"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\nassert solution(\"10 1 2 3\") == \"105\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 2') == '10'\nassert solution('5 4 2') == '45'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1 2\n''') == '45'\nassert solution('''10 1 2\n''') == '10'\nassert solution('''3 3 3\n''') == '10'\n'''\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 1 2\n''') == '45'\nassert solution('''\n3 3 3\n''') == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '45'"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n3\n1 1\n2 2\n5 6\n''') == 'impossible'\nassert solution(\n'''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == '18'\nassert solution(\n'''\n100000\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == 'impossible'\nassert solution(\n'''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == 'impossible'\n''')\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == '18'\nassert solution('4') == '20'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == '20'"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == '18'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '20'"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10''') == '18'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\nSample Input 3:\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n12\nSample Output 3:\n20\n''') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == '20'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'impossible'\nassert solution('4 5') == '10'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\") == \"18\"\nassert solution(\"1\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\") == \"20\""
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"18\"\nassert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n\") == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1\n4 1\n5 9\n2 6\n5 3\n10''') == '20'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5''') == 'impossible'"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 5 10\n7 8 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 5 10\n7 8 2\n''') == '3'\n\nassert solution('''\n3\n-1 -1 -1\n5 5 5\n10 10 10\n''') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '11'\nassert solution('4') == '8'\n\nstdin = '4'\nprint(solution(stdin))\n\"\"\"\n\nn = int(input())\n\npoints = []\nfor _ in range(n):\n    x, y, z = map(int, input().split())\n    points.append((x, y, z))\n\nx_range = sorted(list(set([p[0] for p in points])))\ny_range = sorted(list(set([p[1] for p in points])))\nz_range = sorted(list(set([p[2] for p in points])))\n\npoints_dict = {}\nfor x in x_range:\n    points_dict[x] = []\n    for y in y_range:\n        points_dict[x].append([])\n        for z in z_range:\n            points_dict[x][-1].append([])\n            points_dict[x][-1][-1].append([])\n            points_dict[x][-1][-1][-1].append(abs(x) + abs(y) + abs(z))\n\nfor p in points:\n    x, y, z = p\n    points_dict[x][y].append(z)\n    points_dict[x][y][-1].append(p)\n\ndistances = []\nfor x in x_range:\n    distances.append([])\n    for y in y_range:\n        distances[-1].append([])\n        for z in z_range:\n            distances[-1][-1].append(abs(x) + abs(y) + abs(z))\n\nfor i in range(1, n):\n    for j in range(len(x_range)):\n        for k in range(len(y_range)):\n            for l in range(len(z_range)):\n                for p in points_dict[x_range[j]][y_range[k]][z_range[l]]:\n                    x, y, z = p\n                    distances[j][k][l] = min(distances[j][k][l],\n                                             distances[j][k][l] +\n                                             abs(x - x_range[j]) +\n                                             abs(y - y_range[k]) +\n                                             abs(z - z_range[l]))\n\nprint(min(distances[0][0][0] +\n          distances[0][1][0] +\n          distances[1][0][0]))\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"11\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"11\""
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2\\n'\n    '1 5 10\\n'\n    '7 8 2\\n') == '3'\n\nassert solution(\n    '3\\n'\n    '-1 -1 -1\\n'\n    '5 5 5\\n'\n    '10 10 10\\n') == '11'\n\nassert solution(\n    '5\\n'\n    '-1 -1 -1\\n'\n    '5 5 5\\n'\n    '10 10 10\\n'\n    '7 8 2\\n'\n    '1 5 10\\n') == '11'\n\"\"\"\nfrom math import sqrt\n\ninput = lambda: stdin.readline()\n\nfor _ in range(int(input())):\n    N = int(input())\n    # N = 5\n    planets = [[0] * 3 for _ in range(N)]\n    for i in range(N):\n        planets[i][0], planets[i][1], planets[i][2] = map(int, input().split())\n    # print(planets)\n    def distance(p1, p2):\n        return sqrt(sum((i - j) ** 2 for i, j in zip(p1, p2)))\n\n    costs = []\n    for i in range(N - 1):\n        costs.append(min(distance(planets[i], planets[j]) for j in range(i + 1, N)))\n    # print(costs)\n    print(sum(costs))\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '1'\nassert solution('3') == '2'"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '11'"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"11\"\nassert solution(\"10\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"3\") == \"3\""
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'\nassert solution('1000 1000') == '0'"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1', \"Wrong!\"\nassert solution('1 0') == '0', \"Wrong!\"\nassert solution('0 1') == '1', \"Wrong!\"\nassert solution('0 0') == '0', \"Wrong!\"\nassert solution('1 0') == '1', \"Wrong!\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n110\n011\n''') == '2'\nassert solution('''\n4 2\n1000\n1000\n0000\n0010\n''') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n110\n011\nSample Input 3:\n4 2\n1000\n1000\n0000\n0010\nSample Output 3:\n2\n''') == '2'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 2') == '0'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(t) == '0'\nassert solution(tt) == '1'\nassert solution(st) == '0'\nassert solution(str) == '1'\nassert solution(ss) == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 1\n111\n010\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 2\n1000\n1001\n0101\n0010\nSample Output 3:\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10 3\n10101010\n01100011\n01100100\n01100101\n01100110\n01100111\n01101001\n01101010\n01101011\n01101100\n01101101\n01101110\n01101111\n01110100\n01110101\n01110110\n01110111\n01111000\n01111001\n01111010\n01111011\n01111100\n01111101\n01111110\n01111111\n10001000\n10100000\n10000001\n10100001\n10100011\n10100100\n10100101\n10100110\n10100111\n10101000\n10101001\n10101010\n10101011\n10101100\n10101101\n10101110\n10101111\n10110000\n10110001\n10110010\n10110011\n10110100\n10110101\n10110110\n10110111\n10111000\n10111001\n10111010\n10111011\n10111100\n10111101\n10111110\n10111111\n10111110\n10111111\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'\nprint('Solution:')\nprint(solution(input()))\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n3\n\"\"\") == \"1\n\nassert solution(\"\"\"\n3\n1 2 3\n1\n\"\"\") == \"1\n\nassert solution(\"\"\"\n3\n1 2 3\n3\n\"\"\") == \"1\n\nassert solution(\"\"\"\n3\n1 2 3\n2\n\"\"\") == \"2\n\nassert solution(\"\"\"\n3\n1 2 3\n1\n\"\"\") == \"0"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(tuple(open(0))) == '1'\nassert solution(tuple(open(1))) == '5'\n\nprint(solution(tuple(open(0))))\nprint(solution(tuple(open(1))))\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n3\n2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1', 'Wrong answer'\nprint('Runtime:', runtime(solution, '1', '2'))\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2') == '1'\nassert solution('3\\n1 3 2\\n2') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('2') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n3\n2''') == '1'\nassert solution('''3\n1 3 2\n2\n3''') == '5'''\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n3\\n2\\n') == '1'\nassert solution('3\\n1 3 2\\n2\\n') == '5'\nassert solution('3\\n1 3 2\\n3\\n2\\n') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n3') == '1'\nassert solution('3\\n1 3 2\\n2') == '5'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"7\"\n\n\"\"\"\n\nstdin = \"\"\"\n1\n100\n20\n\"\"\""
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"19\"\n\"\"\""
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 100 20\\n') == '0'\nassert solution('10 10 1\\n') == '19'\n\"\"\""
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\nassert solution(\"1 1 1\") == \"3\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"0 1 1\") == \"1\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2 1\n4 5''') == '0'\nassert solution('''2 3 1\n10 5''') == '19'\nassert solution('''5 10 1\n5 5''') == '19'\nassert solution('''5 5 1\n10 10''') == '19'\nassert solution('''10 10 1\n10 10''') == '19'\n'''"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 100 20\n''') == '0'\nassert solution('''\n10 10 1\n''') == '19'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\n\n--Challenge:--\nWhat if the program is written in a language of your choice?\n\n--Hints:--\n* Use functions to improve the time complexity of your solution.\n* Try to use the variables from the input.\n* You can use the built-in functions of Python to get the input.\n* To use Python, execute the program and extract the result.\n* If you are running the program on the Codility site, you need to save the file in a directory that you have read-access to.\n* You should solve this problem in one line.\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '19'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\n\"\"\""
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\n\") == \"SHIP IT\"\nassert solution(\"6\\njava jar clojure ruby ruby-on-rails\\nruby 1\\njava 1\\nclojure 1\\nruby-on-rails 1\\nruby 2\\njava 2\\nclojure 2\\nruby-on-rails 2\\n\") == \"CLOJIS\""
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nc 1\\nimport c\") == \"c\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\") == \"c\"\nassert solution(\"2\\nimport a, b\\na 1\\nimport b\\n\") == \"SHIP IT\"\nassert solution(\"1\\nimport b\") == \"SHIP IT\"\nassert solution(\"2\\nimport b\\nimport a\\n\") == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\na\\nb\\n') == 'SHIP IT'\nassert solution('3\\na\\nb\\nc\\nd\\n') == 'a'\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\n') == 'SHIP IT'\nassert solution('8\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\n') == 'SHIP IT'\nassert solution('12\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\n') == 'SHIP IT'\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c') == 'c'\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\n') == 'classb'\n\nn = int(input())\nfiles = list(map(str, input().split()))\ndeps = [[] for i in range(n)]\n\nfor i in range(n):\n    for j in input().split():\n        deps[i].append(j)\n\ncycle = []\nvisited = set()\nvisited.add(files[0])\n\nwhile len(visited) < n:\n    cycle = list(filter(lambda x: x not in visited, files))\n    if not cycle:\n        break\n    visited.update(cycle)\n    cycle.pop(cycle.index(min(cycle)))\n    cycle.sort()\n    print(' '.join(cycle))"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\") == \"SHIP IT\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\") == \"SHIP IT\"\nassert solution(\"10\\nimport foo\\nimport bar\\nimport spam\\nimport eggs\\nimport spam, bar, foo, eggs, spam, bar, foo, eggs, spam, bar, foo, eggs\") == \"\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\nd 0\") == \"SHIP IT\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"SHIP IT\""
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\n') == 'SHIP IT'\nassert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c\\n') == 'SHIP IT'\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\n') == 'SHIP IT'\nassert solution('8\\na b c d\\nb 1\\nimport c\\nc 1\\nimport d\\nd 1\\nimport a\\n') == 'SHIP IT'\nassert solution('6\\na b c\\na 1\\nimport a\\nimport c\\nimport b\\nimport c\\n') == 'SHIP IT'\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'SHIP IT','sample #1'\nassert solution('''5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT','sample #2'\nassert solution('''4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'a d','sample #3'\n\n'''\nimport collections"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nc 1\\nimport c\\n') == \"SHIP IT\"\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n') == \"myfilec\"\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n') == \"SHIP IT\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\") == \"MYFILEC\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3+x+3\n-3+1\n6\nx\n7\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\nx\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\n\nassert solution('(5+3)+x') == '2'\nassert solution('(20+3)+x') == '2'\n\nassert solution('5+3*x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('x+3+x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5+3+x') == '1'\nassert solution('20+3+x') == '2'\n\"\"\""
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nprint('Congratulations, you passed all the tests!')"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5+3+x''') == '1'\nassert solution('''9 10''') == '2'\nassert solution('''20+3+x''') == '2'\nprint('All tests passed!')"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\n\n\"\"\"\n\nimport re"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5+3+x''') == '1'\nassert solution('''20+3+x''') == '2'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2, 10, 0, 15, 5, 20]) == \"yes\"\nassert solution([2, 10, 1, 15, 5, 20]) == \"no\"\nassert solution([2, 10, 5, 20, 1, 15]) == \"no\"\nassert solution([2, 10, 1, 15, 5, 20]) == \"no\"\nassert solution([2, 10, 1, 15, 5, 20, 1, 15]) == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 10\n0 15\n5 20\n''') == 'yes'\nassert solution('''\n2 10\n1 15\n0 20\n''') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 10\n0 15\n5 20\n''') == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n0 15\n1 15\n1 20\n2 30\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n4\n0 15\n1 15\n1 20\n2 30\n\"\"\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes'\nassert solution('2 10\\n1 15\\n0 20') == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\") == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n2 11\n2 12\n2 13\n2 14\n2 15\n2 16\n2 17\n2 18\n2 19\n2 20\n2 21\n2 22\n2 23\n2 24\n2 25\n2 26\n2 27\n2 28\n2 29\n2 30\n2 31\n2 32\n2 33\n2 34\n2 35\n2 36\n2 37\n2 38\n2 39\n2 40\n2 41\n2 42\n2 43\n2 44\n2 45\n2 46\n2 47\n2 48\n2 49\n2 50\n2 51\n2 52\n2 53\n2 54\n2 55\n2 56\n2 57\n2 58\n2 59\n2 60\n2 61\n2 62\n2 63\n2 64\n2 65\n2 66\n2 67\n2 68\n2 69\n2 70\n2 71\n2 72\n2 73\n2 74\n2 75\n2 76\n2 77\n2 78\n2 79\n2 80\n2 81\n2 82\n2 83\n2 84\n2 85\n2 86\n2 87\n2 88\n2 89\n2 90\n2 91\n2 92\n2 93\n2 94\n2 95\n2 96\n2 97\n2 98\n2 99\n2 100\n2 101\n2 102\n2 103\n2 104\n2 105\n2 106\n2 107\n2 108\n2 109\n2 110\n2 111\n2 112\n2 113\n2 114\n2 115\n2 116\n2 117\n2 118\n2 119\n2 120\n2 121\n2 122\n2 123\n2 124\n2 125\n2 126\n2 127\n2 128\n2 129\n2 130\n2 131\n2 132\n2 133\n2 134\n2 135\n2 136\n2 137\n2 138\n2 139\n2 140\n2 141\n2 142\n2 143\n2 144\n2 145\n2 146\n2 147\n2 148\n2 149\n2 150\n2 151\n2 152\n2 153\n2 154\n2 155\n2 156\n2 157\n2 158\n2 159\n2 160\n2 161\n2 162\n2 163\n2 164\n2 165\n2 166\n2 167\n2 168\n2 169\n2 170\n2 171\n2 172\n2 173\n2 174\n2 175\n2 176\n2 177\n2 178\n2 179\n2 180\n2 181\n2 182\n2 183\n2 184\n2 185\n2 186\n2 187\n2 188\n2 189\n2 190\n2 191\n2 192\n2 193\n2 194\n2 195\n2 196\n2 197\n2 198\n2 199\n2 200\n2 201\n2 202\n2 203\n2 204\n2 205\n2 206\n2 207\n2 208\n2 209\n2 210\n2 211\n2 212\n2 213\n2 214\n2 215\n2 216\n2 217\n2 218\n2 219\n2 220\n2 221\n2 222\n2 223\n2 224\n2 225\n2 226\n2 227\n2 228\n2 229\n2 230\n2 231\n2 232\n2 233\n2 234\n2 235\n2 236\n2 237\n2 238\n2 239\n2 240\n2 241\n2 242\n2 243\n2 244\n2 245\n2 246\n2 247\n2 248\n2 249\n2 250\n2 251\n2 252\n2 253\n2 254\n2 255\n2 256\n2 257\n2 258\n2 259\n2 260\n2 261\n2 262\n2 263\n2 264\n2 265\n2 266\n2 267\n2 268\n2 269\n2 270\n2 271\n2 272\n2 273\n2 274\n2 275\n2 276\n2 277\n2 278\n2 279\n2 280\n2 281\n2 282\n2 283\n2 284\n2 285\n2 286\n2 287\n2 288\n2 289\n2 290\n2 291\n2 292\n2 293\n2 294\n2 295\n2 296\n2 297\n2 298\n2 299\n2 300\n2 301\n2 302\n2 303\n2 304\n2 305\n2 306\n2 307\n2 308\n2 309\n2 310\n2 311\n2 312\n2 313\n2 314\n2 315\n2 316\n2 317\n2 318\n2 319\n2 320\n2 321\n2 322\n2 323\n2 324\n2 325\n2 326\n2 327\n2 328\n2 329\n2 330\n2 331\n2 332\n2 333\n2 334\n2 335\n2 336\n2 337\n2 338\n2 339\n2 340\n2 341\n2 342\n2 343\n2 344\n2 345\n2 346\n2 347\n2 348\n2 349\n2 350\n2 351\n2 352\n2 353\n2 354\n2 355\n2 356\n2 357\n2 358\n2 359\n2 360\n2 361\n2 362\n2 363\n2 364\n2 365\n2 366\n2 367\n2 368\n2 369\n2 370\n2 371\n2 372\n2 373\n2 374\n2 375\n2 376\n2 377\n2 378\n2 379\n2 380\n2 381\n2 382\n2 383\n2 384\n2 385\n2 386\n2 387\n2 388\n2 389\n2 390\n2 391\n2 392\n2 393\n2 394\n2 395\n2 396\n2 397\n2 398\n2 399\n2 400\n2 401\n2 402\n2 403\n2 404\n2 405\n2 406\n2 407\n2 408\n2 409\n2 410\n2 411\n2 412\n2 413\n2 414\n2 415\n2 416\n2 417\n2 418\n2 419\n2 420\n2 421\n2 422\n2 423\n2 424\n2 425\n2 426\n2 427\n2 428\n2 429\n2 430\n2 431\n2 432\n2 433\n2 434\n2 435\n2 436\n2 437\n2 438\n2 439\n2 440\n2 441\n2 442\n2 443\n2 444\n2 445\n2 446\n2 447\n2 448\n2 449\n2 450\n2 451\n2 452\n2 453\n2 454\n2 455\n2 456\n2 457\n2 458\n2 459\n2 460\n2 461\n2 462\n2 463\n2 464\n2 465\n2 466\n2 467\n2 468\n2 469\n2 470\n2 471\n2 472\n2 473\n2 474\n2 475\n2 476\n2 477\n2 478\n2 479\n2 480\n2 481\n2 482\n2 483\n2 484\n2 485\n2 486\n2 487\n2 488\n2 489\n2 490\n2 491\n2 492\n2 493\n2 494\n2 495\n2 496\n2 497\n2 498\n2 499\n2 500\n2 501\n2 502\n2 503\n2 504\n2 505\n2 506\n2 507\n2 508\n2 509\n2 510"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 10') == 'yes'\nassert solution('2 10') == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 10, 0, 15, 5, 20]) == \"yes\"\nassert solution([2, 10, 1, 15, 5, 20]) == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10\\n1 15\\n0 20\") == \"yes\"\nassert solution(\"2 10\\n5 20\\n0 15\") == \"no\""
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0.25'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n\") == \"0.25\"\nassert solution(\"4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n\") == \"0\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4 4\n1\n1 red\n2 green\n2 yellow\n''') == '0.25', solution.__doc__\nassert solution('''4 4 4\n5\n1 red\n2 green\n3 yellow\n4 red\n''') == '0', solution.__doc__"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution('''4 4 4\n2\n1 green\n6 yellow\n10 red\n''') == '0'\nassert solution('''4 4 4\n2\n1 green\n2 yellow\n2 red\n3 green\n1 yellow\n2 red\n3 red\n''') == '1'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0.0'\n\nstdin = '5 0 5'\nassert solution(stdin) == '1'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '0.25'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4 4\\n3\\n2 green\\n18 yellow\\n34 red\\n5 green\\n') == '0.25'\nassert solution('4 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\\n') == '0'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n\"\"\") == \"inf\"\n\nassert solution(\"\"\"\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"6 7\") == \"3\"\nassert solution(\"6 8\") == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 7\") == \"3\"\nassert solution(\"6 8\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\nassert solution('6 9') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n\"\"\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n') == \"3\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n''') == '3'\n\nassert solution(\n    '''\n6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n''') == \"3\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '4'\nassert solution('12 3') == '2'\nassert solution('12 3') == '2'"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == '4'\nassert solution(s) == '2'"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12 3') == '2'\nassert solution('16 3') == '2'\nassert solution('100000 3') == '100000'\nassert solution('10 4') == '10'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '4'\nassert solution('12 3') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\", \"Too few arguments\"\nassert solution(\"1 2 3 4\") == \"4\", \"Too many arguments\"\nassert solution(\"1 2 3 4 5\") == \"5\", \"Too many arguments\"\nassert solution(\"1 2 3 4 5 6 7 4 7 8 8 12 12\") == \"2\", \"Too many arguments\""
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4') == '4'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '4'\nassert solution('''12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\nassert solution('''100 2\n1 2 3 4 5 6 7 4 7 8 8 9 10 11 12\n''') == '12'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '4'\nassert solution('''\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\nassert solution('''\n10 2\n4 5 6 7 8 9 10 12 13 14 15\n''') == '7'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\nhoose\nhose\nnose\nnoises\nnoise\n\"\"\") == \"hoose, noise\"\n\"\"\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == \"hoose\\nnoises\\nnoise\\n\"\nassert solution('2') == \"NO TYPOS\\n\"\n\nprint('\\nCustom tests:')\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\nhoose\\nhose\\nnoises\\nnoise\\n') == 'NO TYPOS'\nassert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise\\n') == 'hose, noises'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'NO TYPOS'\nassert solution('4') == 'hoose,moose'\n\nassert solution('1') == 'NO TYPOS'\nassert solution('0') == 'NO TYPOS'\nassert solution('-1') == 'NO TYPOS'\n'''\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''hoose\nhose\nnose\nnoises\nnoise''') == 'hoose noise'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nhoose\nhose\nnose\nnoises\nnoise\n''') == 'hoose, noises, noise'\nassert solution('''\n5\nhoose\nhose\noose\nmoose\n''') == 'hoose, moose, noise'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"NO TYPOS\"\nassert solution(\"hoose\") == \"hoose\"\nassert solution(\"hose\") == \"noise\"\nassert solution(\"nose\") == \"noise\"\nassert solution(\"noises\") == \"noise\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"NO TYPO\"\n'''"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'hoose', 'TEST FAILURE'\nassert solution('4') == 'hoose,moose,def', 'TEST FAILURE'"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\\\n5\nhoose\nhose\nnose\nnoises\nnoise\n''') == 'hoose, noise, noise, nose, noises'\n\nassert solution('''\\\n4\nhose\nhoose\noose\nmoose\n''') == 'hoose, moose, noise, nose, noises'"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'\nassert solution('3 4') == '1'"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n3\n''') == '2\\n2\\n5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '0'\nassert solution('4') == '16'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '16'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2') == '1 1'\nassert solution('4\\n3') == '0 1'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"1 1 1\"\nassert solution(\"3 3\") == \"1 2 1\"\nassert solution(\"4 2\") == \"0 1 2\"\nassert solution(\"2 1\") == \"2 1 1\"\nassert solution(\"4 1\") == \"3 1 1\""
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"3 4\") == \"8\"\nassert solution(\"3 4\") == \"8\"\nassert solution(\"2 3\") == \"5\""
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\n\"\"\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n40 45 50\n50 45 50\n60 60 60\n''') == '68.52419365'\nassert solution('''\n2\n40 50\n50 40\n''') == '44.72135955'\nassert solution('''\n2\n1 1\n1 1\n''') == '1.00000'\nassert solution('''\n3\n50 100 50\n100 50 50\n50 100 50\n''') == '11.22222222'\nassert solution('''\n3\n50 50 50\n50 50 50\n50 50 50\n''') == '58.33333333'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n40 40 40\n\"\"\") == \"44.72135955\"\nassert solution(\"\"\"\n2\n80 80 80\n\"\"\") == \"68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0.000000000\"\nassert solution(\"2\") == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n50 45 45\n1 1 0\n5 2 5\n0 1 1\n2 0 0\n2 4 1\n2 1 1\n1 1 0''') == '44.72135955'\nprint('All tests passed!')\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n50 45 45\n''') == '68.52419365'\nassert solution('''\n1\n3 1 3\n''') == '7.46999999'\nprint('all tests passed')\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n50 45 45\n''') == \"68.52419365\"\nprint(solution('''\n1\n50 45 45\n'''))\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n50 45 45\n40 50 40\n50 55 55\n''') == '68.52419365'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\nprint(solution(*[input() for _ in range(int(input()))]))\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"3 4 2 3\") == \"0\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 2 3\n1 3 1\n''') == '1\\n2\\n3\\n2\\n'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"3 4 2 3\") == \"0\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n2\\n1\\n1\\n0\\n\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4 2 3\n1 3 1\n''') == '1'\nassert solution('''\n4 3 2 3\n1 3 1\n''') == '2'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '1'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '0'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '1'\nassert solution('2 4 2 1') == '0'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 1 5') == '1'\nassert solution('4 4 2 3') == '0'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\\n1\\n0\\n2\\n\""
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nprint('\"Run\" is good. How is \"Check\"?')"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n2 2\n''') == '3'\nassert solution('''\n2 3\n1 1\n''') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\"\nprint(solution(input()))\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '3'\nassert solution('2 3') == '2'\nassert solution('5 2') == '2'\nassert solution('6 9') == '1'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 5\n1 1\n''') == '3'\nassert solution('''\n5 3\n2 2 3 2 2\n''') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 1\\n') == '3'\nassert solution('5 3\\n2 2 3 2 2\\n') == '2'"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 5\\n1 1\"\n) == \"3\"\nassert solution(\n    \"5 3\\n2 2 3 2 2\"\n) == \"2\""
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '50'\nassert solution('0 50') == '25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '25.0'\nassert solution('100') == '50.0'\nassert solution('0 50') == '50.0'"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '50'\nassert solution('0 0') == '50'\nassert solution('100 100') == '50.0'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n100 100\\n50 50\\n') == '50'\nassert solution('2\\n0 50\\n50 0\\n') == '25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0.5'\nassert solution('2') == '0.25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n100 100\") == \"50\"\nassert solution(\"2\\n0 50\") == \"25\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n50 50') == '50'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n100 100\\n50 50\\n') == '50'\nassert solution('2\\n0 50\\n50 0\\n') == '25'"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n50 50\n100 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '160'\nassert solution('2') == '250'\nassert solution('3') == '360'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"160\"\nassert solution(\"3\") == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '160'\nassert solution('3') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"250\""
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n100\n200\n''') == '160'\n\nassert solution('''\n3\n100\n200\n2010\n''') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10\\n20\\n') == '160'\nassert solution('2\\n100\\n200\\n') == '250'\nassert solution('3\\n100\\n200\\n2010') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n100\\n200\\n2010\\n\") == \"250\"\nassert solution(\"10\\n150\\n250\\n300\\n400\\n500\\n600\\n700\\n800\\n900\\n1000\\n2000\\n3000\") == \"2000\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"250\"\nassert solution(\"2\") == \"160\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n100\\n200\\n') == '160'\nassert solution('2\\n100\\n200\\n2010\\n') == '250'\n\nstdin = '2\\n100\\n200'\nstdout = '160'\nprint('The expected output is:\\n' + stdout + '\\n')\nprint(f'The actual output is:\\n{solution(stdin)}')"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n100\\n200') == '160'\nassert solution('3\\n100\\n200\\n2010') == '250'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n3 4 3\n4 0 3\n''') == '2'\n\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 3 1\n2 3 1\n1 2 3\nSample Input 3:\n4 5\n0 1 1\n2 3 1\n1 2 3\n2 3 3\n3 4 3\n4 0 3\nSample Output 3:\n0\n''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n3 4 3\n4 0 3\n''') == '2'\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == '2'\nassert solution(input_string_2) == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '0'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3') == '2'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"10 5\") == \"2\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == \"0\"\nassert solution('''3 2\n0 1 1\n2 3 1\nSample Input 3:\n10 5\n0 9 2\n0 7 3\n0 5 4\n0 8 1\n1 9 0\n2 8 0\n3 4 1\n4 8 0\n5 9 2\n6 7 2\n7 9 2\n8 9 1\n9 10 2\nSample Output 3:\n4\n''') == \"2\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1 1'\nassert solution('2 3') == '1 2'\nassert solution('6 3') == '2 3 4'"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n10 10 10 10\n''') == '''\n2 2\n0 0\n'''\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n3 3 2 1\n3 3 3\n''') == '1 2'\n\nassert solution('''\n2 2\n3 3 3\n6 3\n''') == '1 2'\n\nassert solution('''\n1 1\n1 2\n2 3 4\n''') == '2 3 4'\n\nassert solution('''\n1 1\n1 2\n1 2\n''') == '-1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2 3 3 2 3 1\\n1 2 3 4 5\\n2 3 3 3 4 5'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n3 3 2 1\n3 3 3\n''') == '1 1\\n1 2\\n2 3 4'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == '1 2'"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == '1 1'\nassert solution(sample_input_2) == '1 2'\nassert solution(input) == '4 3'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == output\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n3 3 2 1\n3 3 3\n''') == '1 1\\n1 2\\n2 3 4'\nassert solution('''\n4 2\n3 3 2 2\n6 3\n''') == '-1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 2 1\") == \"1 1\"\nassert solution(\"4 3\") == \"-1\"\nassert solution(\"4 2\") == \"-1\"\nassert solution(\"4 2\") == \"-1\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L') == \"10.0\\n10.0\\n0.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 10') == '10.0'\nassert solution('4 3 7') == '10.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"2 3 10\n0 0 D\n10 1 L\n\"\"\"\n    ) == \"10.0\\n4.0\\n1.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0\n\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '4.0\nassert solution('''5 5 0 0 0 0 0 1 1\n1 0 D\n0 0 D\n0 1 D\n0 2 D\n0 3 D\n2 4 D\n4 5 D\n5 6 D\n6 7 D\n7 8 D\n8 9 D\n9 10 D\n10 11 D\n11 12 D\n12 13 D\n13 14 D\n14 15 D\n15 16 D\n16 17 D\n17 18 D\n18 19 D\n19 20 D\n20 21 D\n21 22 D\n22 23 D\n23 24 D\n24 25 D\n25 26 D\n26 27 D\n27 28 D\n28 29 D\n29 30 D\n30 31 D\n31 32 D\n32 33 D\n33 34 D\n34 35 D\n35 36 D\n36 37 D\n37 38 D\n38 39 D\n39 40 D\n40 41 D\n41 42 D\n42 43 D\n43 44 D\n44 45 D\n45 46 D\n46 47 D\n47 48 D\n48 49 D\n49 50 D\n50 51 D\n51 52 D\n52 53 D\n53 54 D\n54 55 D\n55 56 D\n56 57 D\n57 58 D\n58 59 D\n59 60 D\n60 61 D\n61 62 D\n62 63 D\n63 64 D\n64 65 D\n65 66 D\n66 67 D\n67 68 D\n68 69 D\n69 70 D\n70 71 D\n71 72 D\n72 73 D\n73 74 D\n74 75 D\n75 76 D\n76 77 D\n77 78 D\n78 79 D\n79 80 D\n80 81 D\n81 82 D\n82 83 D\n83 84 D\n84 85 D\n85 86 D\n86 87 D\n87 88 D\n88 89 D\n89 90 D\n90 91 D\n91 92 D\n92 93 D\n93 94 D\n94 95 D\n95 96 D\n96 97 D\n97 98 D\n98 99 D\n99 100 D\n100 101 D\n101 102 D\n102 103 D\n103 104 D\n104 105 D\n105 106 D\n106 107 D\n107 108 D\n108 109 D\n109 110 D\n110 111 D\n111 112 D\n112 113 D\n113 114 D\n114 115 D\n115 116 D\n116 117 D\n117 118 D\n118 119 D\n119 120 D\n120 121 D\n121 122 D\n122 123 D\n123 124 D\n124 125 D\n125 126 D\n126 127 D\n127 128 D\n128 129 D\n129 130 D\n130 131 D\n131 132 D\n132 133 D\n133 134 D\n134 135 D\n135 136 D\n136 137 D\n137 138 D\n138 139 D\n139 140 D\n140 141 D\n141 142 D\n142 143 D\n143 144 D\n144 145 D\n145 146 D\n146 147 D\n147 148 D\n148 149 D\n149 150 D\n150 151 D\n151 152 D\n152 153 D\n153 154 D\n154 155 D\n155 156 D\n156 157 D\n157 158 D\n158 159 D\n159 160 D\n160 161 D\n161 162 D\n162 163 D\n163 164 D\n164 165 D\n165 166 D\n166 167 D\n167 168 D\n168 169 D\n169 170 D\n170 171 D\n171 172 D\n172 173 D\n173 174 D\n174 175 D\n175 176 D\n176 177 D\n177 178 D\n178 179 D\n179 180 D\n180 181 D\n181 182 D\n182 183 D\n183 184 D\n184 185 D\n185 186 D\n186 187 D\n187 188 D\n188 189 D\n189 190 D\n190 191 D\n191 192 D\n192 193 D\n193 194 D\n194 195 D\n195 196 D\n196 197 D\n197 198 D\n198 199 D\n199 200 D\n200 201 D\n201 202 D\n202 203 D\n203 204 D\n204 205 D\n205 206 D\n206 207 D\n207 208 D\n208 209 D\n209 210 D\n210 211 D\n211 212 D\n212 213 D\n213 214 D\n214 215 D\n215 216 D\n216 217 D\n217 218 D\n218 219 D\n219 220 D\n220 221 D\n221 222 D\n222 223 D\n223 224 D\n224 225 D\n225 226 D\n226 227 D\n227 228 D\n228 229 D\n229 230 D\n230 231 D\n231 232 D\n232 233 D\n233 234 D\n234 235 D\n235 236 D\n236 237 D\n237 238 D\n238 239 D\n239 240 D\n240 241 D\n241 242 D\n242 243 D\n243 244 D\n244 245 D\n245 246 D\n246 247 D\n247 248 D\n248 249 D\n249 250 D\n250 251 D\n251 252 D\n252 253 D\n253 254 D\n254 255 D\n255 256 D\n256 257 D\n257 258 D\n258 259 D\n259 260 D\n260 261 D\n261 262 D\n262 263 D\n263 264 D\n264 265 D\n265 266 D\n266 267 D\n267 268 D\n268 269 D\n269 270 D\n270 271 D\n271 272 D\n272 273 D\n273 274 D\n274 275 D\n275 276 D\n276 277 D\n277 278 D\n278 279 D\n279 280 D\n280 281 D\n281 282 D\n282 283 D\n283 284 D\n284 285 D\n285 286 D\n286 287 D\n287 288 D\n288 289 D\n289 290 D\n290 291 D\n291 292 D\n292 293 D\n293 294 D\n294 295 D\n295 296 D\n296 297 D\n297 298 D\n298 299 D\n299 300 D\n300 301 D\n301 302 D\n302 303 D\n303 304 D\n304 305 D\n305 306 D\n306 307 D\n307 308 D\n308 309 D\n309 310 D\n310 311 D\n311 312 D\n312 313 D\n313 314 D\n314 315 D\n315 316 D\n316 317 D\n317 318 D\n318 319 D\n319 320 D\n320 321 D\n321"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"10.0 10.0 1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 10') == '10.0'\nassert solution('4 3 7') == '10.0'\n\n'''\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 10') == '10.0'\nassert solution('4 3 7') == '10.0'\nassert solution('5 3 7') == '15.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0\\n4.0\\n1.0\\n'''\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 10\") == \"10.0\"\nassert solution(\"4 3 7\") == \"10.0\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\nprint('Done!')\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''ex eoii jpxbmx cvz uxju sjzzcn jzz\n\nwl jkd''') == 'we will avenge our dead parrot arr'"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''ex eoii jpxbmx cvz uxju sjzzcn jzz''') == 'we will avenge our dead parrot arr'\n\nprint(solution('''wl jkd'''))\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\nassert solution(\"wl jkd\") == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''ex eoii jpxbmx cvz uxju sjzzcn jzz\nwl jkd''') == 'we will avenge our dead parrot arr'"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Impossible\"\nassert solution('eoii jpxbmx cvz uxju sjzzcn jzz') == \"we will avenge our dead parrot arr\"\nassert solution('wl jkd') == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''ex eoii jpxbmx cvz uxju sjzzcn jzz''') == \"we will avenge our dead parrot arr\"\nassert solution('''wl jkd''') == \"Impossible\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n\"\"\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Hamburg Bremen\\n3') == '68.3'\nassert solution('Amsterdam Rotterdam\\n1') == 'IMPOSSIBLE'\nassert solution('Amsterdam Rotterdam\\n1\\n2') == 'IMPOSSIBLE'\nassert solution('Amsterdam Rotterdam\\n1\\n2\\n3') == 'IMPOSSIBLE'\nassert solution('Amsterdam Rotterdam\\n1\\n2\\n3\\n4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n''') == '68.3'\nassert solution('''\nAmsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n''') == '68.3'\nassert solution('''Amsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n\"\"\") == \"68.3\"\nassert solution(\n    \"\"\"Amsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Hamburg Bremen\\n3') == '68.3'\nassert solution('Amsterdam Rotterdam\\n1') == 'IMPOSSIBLE'\nassert solution('Amsterdam Rotterdam\\n2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == \"IMPOSSIBLE\"\nassert solution('5') == \"IMPOSSIBLE\"\n\n\"\"\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'IMPOSSIBLE'\nassert solution('3 2') == 'IMPOSSIBLE'\nassert solution('3 4 1') == '0.5833333333333333'\nassert solution('3 8 3') == '0.38333333333333334'\nassert solution('4 10 1') == '0.4'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n\"\"\") == \"68.3\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n''') == '68.3'\n\nassert solution('''\nAmsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n''') == 'IMPOSSIBLE'\n\nassert solution('''\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n''') == 'IMPOSSIBLE'\n\nassert solution('''\nHamburg Bremen\n1\nAmsterdam Utrecht 10 22 5 10\n''') == 'IMPOSSIBLE'\n\nassert solution('''\nAmsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n\"\"\") == '68.3'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '2'\nassert solution('''\n*.*\n*.*\n*.*\n''') == '3'\nassert solution('''\n*.*\n*-*\n*.*\n''') == '0'\nassert solution('''\n*.*\n*.*\n*-*\n''') == '2'\nassert solution('''\n*.*\n*.*\n*.*\n''') == '0'\n\nimport sys\n\nstdin = sys.stdin.read()\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n*-*.*\\n|.|.|\\n*.*-*\"\n) == \"3\"\n\nassert solution(\n    \"2\\n*-*.*\\n|.|.|\\n*.*-*\"\n) == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '3'\nassert solution('''\n5\n*.*\n|.|.|\n*.*.|\n|*.*.|\n*.*.*\n''') == '7'\nassert solution('''\n6\n*.*\n|.|.|\n*.*.|\n|*.*.|\n|.*.|\n*.*.*\n''') == '6'\nassert solution('''\n13\n*.*\n|-*|\n*.*-*\n|*|*|\n|*|*|\n*.*-*\n|*|*|\n|*|*|\n*.*-*\n|.|*|\n|*|*|\n*.*-*\n|*|*|\n|*|*|\n*.*-*\n|*|*|\n|*|*|\n*.*-*\n|*|*|\n|*|*|\n*.*-*\n|.|*|\n|*|*|\n''') == '32'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '3'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''*-*.*\n|.|.|\n*.*-*''') == '3'\nassert solution('''*.*\n|.|.|\n*.*''') == '4'\nassert solution('''*.*\n|.|.|\n*.*''') == '4'\nassert solution('''*-*.*\n|.|.|\n*.*-*''') == '3'\nassert solution('''*.*\n|.|.|\n*.*''') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('0') == '1'\nassert solution('2') == '0'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1111\n''') == 'impossible', 'First'\n\nassert solution('''\n8\n12210020\n''') == '4', 'Second'\n\nprint('Problem 1:')\nprint(solution('''\n4\n1111\n'''))\nprint()\n\nprint('Problem 2:')\nprint(solution('''\n8\n12210020\n'''))\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"impossible\"\nassert solution(\"8\") == \"4\"\nassert solution(\"12210020\") == \"4\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"0\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"012\") == \"1\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12210020\") == \"impossible\"\nassert solution(\"1111\") == \"4\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('1') == '4'\nassert solution('5') == 'impossible'\nassert solution('6') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '4'\nassert solution('4') == 'impossible'\n'''\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1111\nSample Input 3:\n5\n1212\nSample Output 3:\n1\n\nSample Input 4:\n3\n1111\nSample Output 4:\nimpossible''') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"8\\n12210020\\n1111\\n22210020\\n31221100\\n21100100\\n22210020\\n22210020\\n12210020\\n22210020\\n12210020\\n22210020\\n22210020\\n\"\n) == \"4\"\n\nassert solution(\n    \"5\\n0\\n0\\n1\\n0\\n2\\n\"\n) == \"impossible\"\n\nassert solution(\n    \"5\\n0\\n0\\n1\\n0\\n1\\n\"\n) == \"impossible\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n1\n0 0 999\n1000 1000 200\nSample Output 1:\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n\nSample Input 2:\n2\n0 0 999\n750 250 300\nsample Output 2:\nBill will be bitten.\n\"\"\"\n) == \"Bill will be bitten.\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n\"\n) == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\n    \"4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n\"\n) == \"Bill will be bitten.\\n\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n\nassert solution('4') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'''"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nprint('Solution:')\nstdin_str = input()\nprint(solution(stdin_str))\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n500 500 499\n0 0 999\n1000 1000 200\n1000 1000 200\n500 500 499\n\"\"\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('2') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Bill will be bitten.\"\nassert solution(\"2\") == \"Bill enters at (0.00, 0.00) and leaves at (1000.00, 1000.00).\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200\nSample Output 1:\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\nSample Output 2:\nBill will be bitten.''') == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nprint('All test cases passed!')\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\") == \"Bill will be bitten.\\n\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 3\n++xx+x++\n''') == '++xx+o++'\nassert solution('''\n8 3\nxxxxx\n''') == 'xxooo'\nassert solution('''\n5 1\n++x+x++\n''') == '++x+o++'\nassert solution('''\n5 1\nxxxxx\n''') == 'xxooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == '++xx+x++'\nassert solution('8 4') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(['2', '+x+x+x+x+x+x', '+x+x', '+x+x+', '+x+', '++x+x++', '+x+', '+x+x+', '+x+x+x', '+x+x+', '+x+', '+x', '+x+x+x+x+x+x+x+x', '+x+x+x+x+x+x+x+x+x', '+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x', '+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+x+"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"ooo\"\nassert solution(\"10\") == \"xxxxx\"\nassert solution(\"0\") == \"x\"\nassert solution(\"1\") == \"x\"\nassert solution(\"2\") == \"x\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\nassert solution('''8 3\nxx+x++\n''') == 'xxooooo'\nassert solution('''8 3\nx++xx+x++\n''') == 'xxoooooo'\nassert solution('''8 3\n+x+x+x+x+x+x+x+x+x\n''') == 'xxooooooo'\nassert solution('''8 3\nx++x++x++x++x++x++x++x++x++x++x++x++x++x++x++x++x\n''') == 'xxooooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 3\") == \"++xx+o++\"\nassert solution(\"8 2\") == \"xx+o++\"\nassert solution(\"8 1\") == \"xxo++\""
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"xoooooo\"\nassert solution(\"7 3\") == \"++xoooo++\"\nassert solution(\"1\") == \"o\"\nassert solution(\"10\") == \"xoxoxoxxooxoxoxoxx\"\nassert solution(\"17\") == \"xooooooooxoxoxoxoxo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"6+o+6x+o\"\nassert solution(\"9 3\") == \"6+o+6x+o\"\nassert solution(\"1 1\") == \"x\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\n\nassert solution('''8 3\n+++++x++\n''') == 'xxooooo'\n\nassert solution('''8 3\n+oo+x++\n''') == '+ooxoo'\n\nassert solution('''8 3\n+++++x++\n''') == '+ooo+oo'\n\nassert solution('''8 3\n+++++x++\n''') == '+oo+oo+'"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxooo++') == 'xxoooooo'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('\\n'.join(['a', 'b', 'c'])) == 'a: b c: c'\nassert solution('\\n'.join(['b', 'c', 'a'])) == 'a: b c: c'\nassert solution('\\n'.join(['c', 'a', 'b'])) == 'a: b c: c'\nassert solution('\\n'.join(['d', 'a', 'b'])) == 'a: b: c: d'\nassert solution('\\n'.join(['b', 'c', 'd'])) == 'c: d: b'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''lost is close to lose\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n***\nSample Output 2:\nclose: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n''') == '''close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n'''\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"The fox said, \\\"When?\\\", \\\"Not till 12 o'clock\\\", \\\"That clock is stopped, it will never strike.\\\" he said.\") == \"clock: oclock\\the: hen the\\the: when\\thi: is\\tit: it\\totill: will\\tis: hen the\\tin: clock\\tin: till\\tnot: till\"\n\nThe fox said, \"When?\"\nNot till 12 o'clock\nThat clock is stopped, it will never strike.\n\nThe fox said, \"When?\"\nThe fox said, \"When?\"\nThe fox said, \"When?\"\nThe fox said, \"When?\"\nThe fox said, \"When?\"\nThe fox said, \"When?\"\nThe fox said, \"When?\"\nThe fox said, \"When?\"\nThe fox said, \"When?\"\nThe fox said, \"When?\"\n\n---Input---\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\" he said.\n***\n\n\"\"\"\n\nimport re\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''The fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.''') == 'clock: oclock\\the: hen the\\tis: it\\ti: is\\till: will\\twhen: hen\\twill: till\\tdef solution(stdin: str) -> str\\n***\\nhe: hen the\\tothe clock: oclock\\tin: not till\\t12 o'clock\\tclock is stopped, it will never strike.'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n''') == 'clock: oclock\\the: hen the\\the: when\\tis: it\\tis: is\\till: will\\twhen: hen\\till: will\\tis: it\\tis: is'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n***') == '1:1 2:1 3:1 4:1 5:1 6:1 7:1 8:1 9:1 10:1 11:1 12:1 13:1 14:1 15:1 16:1 17:1 18:1 19:1 20:1 21:1 22:1 23:1 24:1 25:1 26:1 27:1 28:1 29:1 30:1 31:1 32:1 33:1 34:1 35:1 36:1 37:1 38:1 39:1 40:1 41:1 42:1 43:1 44:1 45:1 46:1 47:1 48:1 49:1 50:1 51:1 52:1 53:1 54:1 55:1 56:1 57:1 58:1 59:1 60:1 61:1 62:1 63:1 64:1 65:1 66:1 67:1 68:1 69:1 70:1 71:1 72:1 73:1 74:1 75:1 76:1 77:1 78:1 79:1 80:1 81:1 82:1 83:1 84:1 85:1 86:1 87:1 88:1 89:1 90:1 91:1 92:1 93:1 94:1 95:1 96:1 97:1 98:1 99:1 100:1***')\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\"\"\") == \"\"\"\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sample.in') =='sample.out'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n\"Better Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n\"Now, besides the spell checking feature, the new word processors should support the line-by-line difference (DEL) operation, which performs an in-place replacement of the last character in the line by the given character.\"\n***\nSample Output 2:\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('The fox said, \"When?\"') == 'clock: oclock\\ntill: will\\nwhen: hen\\nwill: till\\nthat clock is stopped, it will never strike.'\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\ntill: will\\nwhen: hen\\nwill: till\\nthat clock is stopped, it will never strike.'\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\ntill: will\\nwhen: hen\\nwill: till\\nthat clock is stopped, it will never strike.'\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\ntill: will\\nwhen: hen\\nwill: till\\nthat clock is stopped, it will never strike.'\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\ntill: will\\nwhen: hen\\nwill: till\\nthat clock is stopped, it will never strike.'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"1\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\\n\") == \"1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"1\"\nassert solution(\"2\\n1 2 3\\n\") == \"2\"\nassert solution(\"3\\n1 2\\n\") == \"2\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\"\nassert solution(\"10\\n3 8 1 9 4 5 2 7 10 6\") == \"2\"\nassert solution(\"10\\n3 1 2 8 4 7 9 5 6\") == \"1\"\n\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 2 1\n4\n6 5 7 8 9 10''') == '1'\nassert solution('''10\n7 3 6 5 8 4 2 9 1''') == '2'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n1 2 7 3 8 9 4 5 10 6\n''') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '1\\n'\n\nassert solution('3\\n8 1 9 4 5 2 7 10 6\\n') == '2\\n'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1'\nassert solution('5\\n3 8 1 9 4 5 2 7 10 6') == '2'"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '1'\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6\\n') == '2'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1 2 7 3 8 9 4 5 10 6\n''') == '1'\nassert solution('''\n10\n3 8 1 9 4 5 2 7 10 6\n''') == '2'\n''')\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '2'\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\n\nassert solution('''\n2\n3 1\n''') == '2'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0.142857 6''') == '1/7'\nassert solution('''1.6 1''') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('0.142857') == '1'\nassert solution('1.6') == '5'\nassert solution('1') == '1'"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '0.142857 6'\n    ) == '1/7'\nassert solution(\n    '1.6 1'\n    ) == '5/3'\nassert solution(\n    '1.2 1'\n    ) == '2/1'\nassert solution(\n    '1 1'\n    ) == '1'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '0.142857 6') == '1/7'\nassert solution(\n    '1.6 1') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"0.142857 6\"\n) == \"1/7\"\nassert solution(\n    \"1.6 1\"\n) == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0.142857 6''') == \"1/7\"\nassert solution('''1.6 1''') == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0.142857 6''') == '1/7'\nassert solution('''1.6 1''') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0.142857\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.6 1') == '5/3'\nassert solution('2 4') == '6/2'\nassert solution('3 3') == '3/3'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\nassert solution() == \"10\"\n\nprint(solution())\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0 0\\n0 0 1\\n') == '10'"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '10'"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0 0 0\\n0 0 1') == '6'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n0 0 0\\n0 0 1\\n') == '6'\nassert solution('5\\n0 0 0\\n0 0 1\\n') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '6', \"Should be 6\"\nassert solution('2') == '10', \"Should be 10\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t1) == '6'\nassert solution(t2) == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"2\") == \"10\""
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0 0 0\\n0 0 1\") == \"6\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n0 0 2\") == \"10\"\nprint(\"You passed all the tests!\")\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"6\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"5\") == \"5\""
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution('7') == '1'"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n-1 2 -1\n2 2''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1''') == '1'\nassert solution('''10\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"1\", f\"sample_input_1 failed: {sample_input_1}\"\nassert solution(sample_input_2) == \"1\", f\"sample_input_2 failed: {sample_input_2}\"\nassert solution(sample_input_3) == \"2\", f\"sample_input_3 failed: {sample_input_3}\"\nassert solution(input_data) == \"18\", f\"input_data failed: {input_data}\""
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == '1'\nassert solution(input_string_2) == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\nassert solution('1234') == '2'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\"\nassert solution(\"101\") == \"4\"\nassert solution(\"111\") == \"2\"\nassert solution
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"3\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1001\"\n    ) == \"3\"\nassert solution(\n    \"1111\"\n    ) == \"1\"\nassert solution(\n    \"11001\"\n    ) == \"0\"\nassert solution(\n    \"110011\"\n    ) == \"1\"\nassert solution(\n    \"111111\"\n    ) == \"0\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\nprint(solution(input()))\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'LLRLR'\nassert solution('100') == 'LLLLLLLLLLLLLRRRLLLLLLLLLLLLLRRRRRLR'\n\n##########################\n##ROTATE TILES\n##########################\n\"\"\""
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 2 1 2\n''') == 'LLRLR'"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'LLRLR'\nassert solution('10') == 'LLLLLLLLLRR'\nassert solution('30') == 'LLLLLLRRRLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRR"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == 'LLL'\nassert solution('3') == 'LLR'\nassert solution('4') == 'RRLL'\nassert solution('5') == 'RLRLLRLL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"LL\"\nassert solution(\"3\") == \"LLL\"\nassert solution(\"4\") == \"LLRLR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 2 1 2\") == \"LLRLR\"\nassert solution(\"5\\n1 2 1 1 2\") == \"LLRLLRLL\"\nprint('All test cases passed!')\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'LLRLR'\nassert solution('7') == 'RRLLRLLRLL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"LLL\"\nassert solution(\"5\") == \"LLRLR\"\n\nstdin = \"\"\"\n3\n1 1 1\n\"\"\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"LLL\"\nassert solution(\"5\") == \"LLRLR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"LLL\"\nassert solution(\"1 2 2 1 2\") == \"LLRLR\"\nassert solution(\"1 1 1\") == \"LLL\"\nassert solution(\"1 1 1\") == \"LLL\"\nassert solution(\"1 1 1\") == \"LLL\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 7 10\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'Poor girl!'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 7 10\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\"\nassert solution(\"10 10 7\") == \"489000000000009\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 7 10\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"Poor girl!\"\nassert solution('2') == \"Poor girl!\"\nassert solution('7') == \"Poor girl!\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 7 10\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'Poor girl'\nassert solution('7 7 10') == '49000000000070'\nassert solution('6 6 7') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    6 6 7\n    1 3 1000000\n    3 5 3000000\n    5 1 5000000\n    2 4 2000000\n    4 6 4000000\n    6 2 6000000\n    \"\"\"\n) == \"25000000000021\"\nassert solution(\n    \"\"\"\n    7 7 10\n    1 2 1000000\n    2 3 2000000\n    3 4 3000000\n    4 5 4000000\n    5 6 5000000\n    6 7 6000000\n    7 1 7000000\n    \"\"\"\n) == \"49000000000070\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 7 10') == '49000000000070'\nassert solution('6 6 7') == '25000000000021'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 2') == '1'\nassert solution('3 3') == '2'\nassert solution('4 4') == '2'\n\n----------------------------------------------------------------------\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '2\\n2\\n0\\n1'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\"\n\ninput = \"\"\"\n6 4\n0 1\n1 0\n2 3\n3 2\n4 5\n5 4\n\"\"\""
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('3 4 1 2') == '4'\n\n'''\n\nn, m = map(int, input().split())\nroad_list = [[] for _ in range(n)]\nfor _ in range(m):\n    a, b = map(int, input().split())\n    road_list[a - 1].append(b - 1)\n    road_list[b - 1].append(a - 1)\n\nvisited = []\nnum_of_visited = 0\ncnt = 0\nfor i in range(n):\n    if i not in visited:\n        cnt += 1\n        visited.append(i)\n        print(road_list[i])\n        num_of_visited = len(visited)\n        while num_of_visited!= 0:\n            check = road_list[visited[-1]]\n            for i in check:\n                if i not in visited:\n                    visited.append(i)\n                    num_of_visited = len(visited)\n                    print(road_list[i])\n                    break"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n0 1\\n1 0\\n2 3\\n3 2\\n') == '2'\nassert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 2\\n') == 'Yeah!'\nassert solution('5 7\\n0 1\\n1 0\\n2 3\\n3 2\\n4 4\\n4 5\\n') == '1'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"2\\n0\\n2\\n2\"\nassert solution(sample_input_2) == \"Yeah!\""
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''4 4\n0 1\n1 0\n2 3\n3 2''') == '2'\nassert solution(\n'''4 4\n0 1\n1 0\n2 3\n3 3''') == 'Yeah!'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n0 1\n1 0\n2 3\n3 2''') == '2'\n\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!'\n\nassert solution('''6 4\n1 3\n3 0\n3 0\n2 2\n2 1\n0 1''') == '2'\n\nassert solution('''6 4\n2 2\n2 1\n1 2\n3 3\n3 2\n0 1''') == 'Yeah!'\n\nassert solution('''5 5\n1 1\n1 2\n2 3\n3 4\n4 4\n''') == '2'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '2'\nassert solution('4 4') == 'Yeah!'\nassert solution('4 4') == 'Yeah!'\nassert solution('4 4') == 'Yeah!'\nassert solution('4 4') == 'Yeah!'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n0 1\\n1 0\\n2 3\\n3 2\\n\") == \"2\\n2\\n0\\n1\"\nassert solution(\"3 4\\n0 1\\n1 0\\n2 2\\n2 1\\n\") == \"Yeah!\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 1 2 1 2\\n2 1') == 'POSSIBLE\\n1 3\\n2 3'"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\") == \"IMPOSSIBLE\"\nassert solution(\"2\\n1 1 2\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'POSSIBLE'\nassert solution('2') == 'IMPOSSIBLE'\nassert solution('1') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 2\\n') == 'POSSIBLE\\n1 3\\n2 3\\n', 'First'\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE\\n', 'Second'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1 2\\n\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"POSSIBLE\"\nassert solution(\"1 2\\n1 1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n1 2 1\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n3 3 4\\n3 4 4\") == \"IMPOSSIBLE\"\nassert solution(\"1\\n2\\n\") == \"POSSIBLE\"\nassert solution(\"3\\n1 2 1\\n2 3\\n\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 2') == 'POSSIBLE'\nassert solution('1 1 2 3 4 5 6 7 8 9 10') == 'POSSIBLE'\nassert solution('1') == 'IMPOSSIBLE'\n\"\"\""
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 2\") == \"POSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 2\\n') == 'POSSIBLE\\n1 3\\n2 3'\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'\nassert solution('1 2 1\\n-2 1 2\\n-1 3 1\\n1 -3 1') == '1.5 0.5 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\nprint('All test cases passed')"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\nprint('All tests passed!')\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\"\nprint(\"Congratulations! All test cases are passed!\")\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1 1'\nassert solution('3') == '2 2 1'\nassert solution('4') == '3 3 3'\nassert solution('5') == '4 4 4'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n6 2 3 2 2 2 1 5 6\n''') == '2'\n\nassert solution('''\n10\n3 6 2 3 2 2 2 1 5 6\n''') == '2'\n\nassert solution('''\n10\n7 8 9 2 4 6 8 7 2 5\n''') == '9'\n\nassert solution('''\n2\n20 5\n''') == '1 2'\n\nassert solution('''\n20\n30 25 20 3 1 10 10 30 10 20 15 1 5 5 10 10 15 3 10 5 10 10 15 20 25 20 30 25 20 5\n''') == '10 20 30'"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"3\") == \"0\""
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2 2 1'"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n3 6 2 3 2 2 2 1 5 6\n''') == '2\\n3 2 2\\n6 6\\n'\nassert solution('''\n3\n1 2 5\n''') == '1 2\\n2 5\\n'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n3 2\n4 1''') == '0 2'\nassert solution('''3\n3 2 2\n2 5\n4 1''') == '2 5 1'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n3 6 2 3 2 2 2 1 5 6\n''') == '2'\nassert solution('''\n3\n17 17 17\n''') == '0'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string()) == \"2 0 3 2 1 5 6\"\nassert solution(input_string()) == \"5\"\n\nimport os\nimport sys\n\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print('------------')\n        print(out)\n        print('------------')\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"10\n3 6 2 3 2 2 2 1 5 6\"\"\"\n        output = \"\"\"2\n3 2 2 1 5\n3 2 2\n6 6\n\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"3\n17 17 17\"\"\"\n        output = \"\"\"0\n17 17 17\n\"\"\"\n        self.assertIO(input, output)\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n3 6 2 3 2 2 2 1 5 6') == '2 2 2 1 5'\nassert solution('3\\n3 6 2 3 2 2 2 1 5 6') == '3 2 2 1 5'\nassert solution('10\\n3 6 2 3 2 2 2 1 5 6') == '2 2 2 1 5'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n3 6 2 3 2 2 2 1 5 6\n\"\"\") == \"2 3 2 1 5\"\nassert solution(\"\"\"\n5\n3 6 2 3 2 2 2 1 5 6\n\"\"\") == \"2 2 2 1 5\"\nassert solution(\"\"\"\n10\n3 6 2 3 2 2 2 1 5 6\n\"\"\") == \"2 3 2 1 5\"\nassert solution(\"\"\"\n8\n3 6 2 3 2 2 2 1 5 6\n\"\"\") == \"2 2 2 1 5\"\nassert solution(\"\"\"\n10\n0 0 0 0 0 0 0 0 0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 7') == 'IMPOSSIBLE'\nassert solution('3 2 1') == '74.6667'\nassert solution('3 2 1') == '74.6667'"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n5 2\\n1 3\\n2 4\\n') == 'IMPOSSIBLE'\nassert solution('1\\n5 2\\n1 3\\n2 4\\n') == '74.6666666667'\nassert solution('1\\n5 2\\n1 3\\n2 4\\n') == 'IMPOSSIBLE'\nassert solution('1\\n5 2\\n1 3\\n2 4\\n') == '74.6666666667'\nassert solution('5 2\\n1 3\\n2 4\\n') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"74.6666666667\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"74.6666666667\"\n\nassert solution(\"2 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"2 2 1\\n1 2 7\\n2 3 8\\n1\") == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2 1\n1 2 7\n2 3 8\n1''') == 'IMPOSSIBLE'\n\nassert solution('''3 2 1\n1 2 7\n2 3 8\n1''') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3') == '74.6666666667'\nassert solution('10\\n8\\n5\\n1\\n8\\n5\\n5\\n1\\n8\\n5\\n5\\n5\\n1') == '8.0'\nassert solution('100\\n500\\n10\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100') == '99.0'"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"\nassert solution(\"2 2 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 7\") == \"74.6666666667\"\nassert solution(\"3 2 1\") == \"IMPOSSIBLE\"\nassert solution(\"2 3 8\") == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == 'IMPOSSIBLE'\nassert solution('3 2 1') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    3 2 1\n    1 2 7\n    2 3 8\n    1\n    3 2\n    ''') == \"IMPOSSIBLE\"\n    \n'''\nExplanation:\n\nThe first line of the input consists of three integers $n$, $m$ and $e$, where $2 \\le n \\le 100$ describe the number of intersections, $1 \\le m \\le 5000$ describes the number of roads in the city and $1 \\le e \\le n$ describes the number of highway exits. Then follow $m$ lines, each consisting of three integers $a,b,l$ such that $1 \\le a < b \\le n$ and $1 \\le l \\le 100$ describing a road of length $l$ hundred meters from intersection $a$ to intersection $b$. Then follow a line of $e$ integers, each one a number in $1, \\ldots, n$ describing which intersections are connected to highway exits. Finally there is a line with two integers $b$ and $p$ ($1 \\le b,p \\le n \\text { and } b \\neq p$) describing the intersections where the brothers and the police cars start, respectively.\n\nIt will always be possible to travel from any intersection to any other intersection. Roads are only connected at intersection points (although they may cross using bridges or tunnels at others points). Roads can be used in both directions but there cannot be more than one road between two intersections.\n\n'''\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"1\"\nassert solution(\"7 7\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4''') == '1'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\nSample Output 3:\n2\n2\n2\n2\n2\n2\n2\n''') == '0'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"1\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"2\"\nprint('All test cases passed!')"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '1'\nassert solution('7 7') == '2'\n\"\"\""
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '1'\nassert solution('''\n7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '2'\nassert solution('''\n7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '0'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n''') == '1'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '2'\nassert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n''') == '0'\n'''"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n'\nassert solution('4 5\\n2 3\\n3 1\\n3 4\\n1 4\\n1 2\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '2\\n1\\n2\\n1\\n2\\n1\\n2\\n'"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\nSample Input 3:\n3 3\n1 2\n1 3\n2 3\nSample Output 3:\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"1\"\nassert solution(\"7 7\") == \"2\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '1'\nassert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '2'\nassert solution('''\n10 10\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '0'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 10 2\n0\n15\n30\n45\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 10 2\n0\n15\n30\n45''') == '10'\nassert solution('''4 10 3\n0\n15\n30\n45\n60\n''') == '5'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('3 2') == '2'\nassert solution('3 2 3') == '3'\nassert solution('3 2 3 4') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 10 2\") == \"10\"\nassert solution(\"4 10 3\") == \"5\"\nassert solution(\"6 2 5 2 2 5\") == \"9\"\nassert solution(\"3 1 1 1 1\") == \"0\"\nassert solution(\"5 6 2 2 5\") == \"0\""
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 10 2\n0\n15\n30\n45\nSample Output 2:\n5''') == '10'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'\n\nassert solution('1000000000000') == '3999999999999'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 10 2\") == \"10\"\nassert solution(\"4 10 3\") == \"5\"\nassert solution(\"4 1 3\") == \"4\"\nassert solution(\"4 0 2\") == \"4\"\nassert solution(\"1 1 2\") == \"3\"\nprint(solution('''4 10 2\n0\n15\n30\n45\n'''))\nprint(solution('''4 10 3\n0\n15\n30\n45\n'''))\nprint(solution('''4 1 3\n0\n15\n30\n45\n'''))\nprint(solution('''4 0 2\n0\n15\n30\n45\n'''))\nprint(solution('''1 1 2\n0\n15\n30\n45\n'''))\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'\nassert solution('4 10 0') == '0'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution(stdin='''4 2\n50 50 75\n25 25 25\n''') == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n50 50 75\n25 25 25\n''') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n50 50 75\\n25 25 25\\n\") == \"2\"\nassert solution(\"5 2\\n50 50 50 50\\n25 25 25 25\\n\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"10 3\") == \"4\"\nassert solution(\"10 20\") == \"10\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1 1') == '2'\nassert solution('2 3') == '1'\nassert solution('2 1 2 1 2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2 2\n50 50\n25 25\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n50 50 50 50\\n25 25 25 25') == '1'\n\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n0 0\\n50 50 50 50') == '2'\n\nassert solution('10 10\\n0 0 0 0 0 0 0 0 0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 3\n4 5 6''') == '3'\nassert solution('''5\n1 2 5\n1 4 5\n2 3 2\n1 2 5\n2 4 2''') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n.X.\n.X.\n.L..\n''') == '1'\nassert solution('''4 4\n.X.\n.X.\n...X\n.X..\n''') == '2'\nassert solution('''3 4\n.X.\n.X.\n..X.\n.L..\n''') == '1'\nassert solution('''2 1\n.X.\n.X.\n''') == '0'\nprint('All tests passed!')"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 4\n.LX.\n.X..\n....\n.L..\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n4 4\n.XLX\n.X..\n...L\n.X..\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n5 3\n.X.L.\nXLL.\nLLLL\nLLL.\n.L.X.\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5 3\n.XLL\nLLLL\n.X.X.\n.L.X.\nLL.X.\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5 4\n.X.L.\nXLL.\nLLLL\nLLL.\n.L.X.\n\"\"\") == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\n\nassert solution(input()) == \"2\"\n\n## Link: https://cses.fi/problemset/task/1\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n.LX.\n.X..\n....\n.L..\n''') == '1', 'First'\nassert solution('''\n4 4\n.XLX\n.X..\n...L\n.X..\n''') == '2', 'Second'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n.X.\\n.X..\\n.L..\\n') == '1'\nassert solution('4 4\\n.LX.\\n.X..\\n.X..\\n.X.L') == '2'\nprint(\"You're a smart cookie!\")\n\n'''\n\n\nfrom collections import deque\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n...L\n.X..\n''') == '1'\nassert solution('''4 4\n.X.L.\n.X..\n...L\n.X..\n''') == '1'\nassert solution('''4 4\n.X.L.\n.X..\n.LL.\n.X..\n''') == '0'\nassert solution('''4 4\n.X.L.\n.X..\n.LL.\n.X..\n''') == '0'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n.L.\n.X.\n...\n.X.''') == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..\n''') == '1'\n\nassert solution('''3 3\n.LX.\n.X..\n....\n.L..\n''') == '2'\n\nassert solution('''4 4\n.XLX\n.X..\n...L\n.X..\n''') == '0'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n.LX.\n.X..\n....\n.L..\n''') == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2 1\n1 1\n2 0 2\n2 1 3\n1 2''') == 'home'\nassert solution('''5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''') == 'detention'"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n''') == 'home'\nassert solution('''\n5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2 1') == 'home'\nassert solution('5 2 1') == 'detention'"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2') == 'detention'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n2 2 5') == 'home'\nassert solution('10 20 10\\n4 5 6\\n5 1 2\\n1 2 5\\n2 3 1\\n1 3 6\\n1 2 4\\n1 5 2\\n2 4 5\\n2 3 1\\n1 1 2\\n3 1 6\\n3 2 5\\n1 1 4\\n2 1 3') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n\"\"\") == \"detention\"\n\nassert solution(\n\"\"\"\n4 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n\"\"\") == \"home\"\n\nassert solution(\n\"\"\"\n7 7 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n2 3 5\n2 4 6\n1 5\n\"\"\") == \"home\"\n\nassert solution(\n\"\"\"\n8 8 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n2 3 5\n2 4 6\n2 5 7\n1 6\n\"\"\") == \"home\"\n\nassert solution(\n\"\"\"\n20 10 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n2 3 5\n2 4 6\n2 5 7\n2 6 8\n2 7 9\n2 8 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n\"\"\") == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\") == \"home\"\nassert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\nSample Output 2:\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2 1') == 'home', 'First'\nassert solution('5 2 1') == 'detention', 'Second'\nassert solution('5 3 1') == 'home', 'Third'\nassert solution('10 2 1') == 'home', 'Fourth'\n\n< "
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('tralalal') == 'allatral', f\"expected 'allatral', got {solution('tralalal')}\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\", \"expected allatral\"\nassert solution(\"zzzz\") == \"zzzz\", \"expected zzzz\""
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"zzzz\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\n\nassert solution(\"zzzz\") == \"-1\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\"\nassert solution(\"zzzzz\") == \"-1\"\nassert solution(\"zzz\") == \"-\"1\nassert solution(\"z\") == \"-\"1\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''tralalal\nzzzz''') == 'allatral'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('6\\n3 2 1 6 4 5') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"8\"\nassert solution(\"3 2 1 6 4 5\") == \"5\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '5'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\"\n) == \"5\"\nassert solution(\n    \"6\"\n) == \"8\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == \"5\"\nassert solution('6\\n3 2 1 6 4 5') == \"8\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '5'\nassert solution('''6\n3 2 1 6 4 5\n''') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('6 3 2 1 6 4 5') == '8'"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n''') == '1'\nassert solution('''\n5\n''') == '1'\nassert solution('''\n6\n''') == '0'\nassert solution('''\n8\n''') == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"12\") == \"3\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('47') == '1'\nassert solution('523') == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"23\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"523\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\\n\".join([\"523\", \"10\"])) == \"2\"\nassert solution(\"\\n\".join([\"523\", \"2\"])) == \"1\"\nassert solution(\"\\n\".join([\"523\", \"23\"])) == \"2\"\nassert solution(\"\\n\".join([\"523\", \"6\"])) == \"2\"\nassert solution(\"\\n\".join([\"523\", \"56\"])) == \"2\"\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '1'\nprint(solution(__import__('sys').stdin.read().strip()))\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('523\\n') == '2\\n'"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '1'\nassert solution('10\\n') == '2'\nassert solution('100\\n') == '5'\nassert solution('101\\n') == '2'\nassert solution('1001\\n') == '5'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('7') == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"11\") == \"2\"\nassert solution(\"23\") == \"4\"\nassert solution(\"3\") == \"1\"\nassert solution(\"8\") == \"1\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 5') == '0'\nassert solution('3 3') == '1'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == '0'\nassert solution('2 2') == '1'"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 10\n0 1 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0 1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '0'\nassert solution('2 2\\n0 1 20\\n1 0 5\\nSample Output 2:') == '1\\n0 1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\nassert solution(\"\"\"\n3 2\n0 1 5\n1 0 2\n\"\"\") == \"1 0 2\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 10') == '0'\nassert solution('3 2 10') == '1 2 15'\n\nstdin = \\\n'''4\n5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n'''\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '5'\nassert solution('5 10') == '4'\nassert solution('10 2') == '10'\nassert solution('15 5') == '0'\n\nstdin = '''10 5\n4 4 8 12\n1 2\n2 3\n3 4\n4 5\n5 5\n6 6\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10'''"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '1'\nassert solution('4 4 8 12') == '4'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3') == '5'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n2 5') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3') == '5'\nassert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"5\"\nassert solution(\"4 3\") == \"1\""
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\n\nassert solution('''\n4 3\n4 4 8 12\n1 2\n2 3\n3 4\nSample Output 2:\n1\n''') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 8 12') == '1'\nassert solution('5 4 8 12') == '2'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"5\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 4 8 12\") == \"2\"\nassert solution(\"10 8 10 10 8 11 11 10 10 10 11 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''04060''') == '8'\nassert solution('''24444''') == '6'\nassert solution('''12''') == '6'\nassert solution('''1''') == '1'\nprint('Congratulations, solved it')\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '7'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0203''') == '7'\nassert solution('''020302''') == '7'\nassert solution('''1311''') == '24'\nassert solution('''010101''') == '7'\nassert solution('''111011''') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\n\"\"\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('010202') == '7'\nassert solution('1311') == '24'\nassert solution('11') == '1'"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0123456789\") == \"123456789\"\nassert solution(\"01234567890\") == \"1234567890\"\nassert solution(\"012345678901\") == \"12345678901\"\nassert solution(\"0123456789012\") == \"123456789012\"\nassert solution(\"01234567890123\") == \"1234567890123\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('1311') == '24'\nassert solution('11') == '1'\nassert solution('12') == '0'\nassert solution('11110') == '0'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"022\") == \"7\"\nassert solution(\"123\") == \"12\"\nassert solution(\"1\") == \"1\"\nassert solution
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 10\") == \"3 1 3 10\"\nassert solution(\"5 20\") == \"1 15 5 15\""
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 10') == '3 1 3 10'\nassert solution('5 20') == '1 15 5 15'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3 1 3 10'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 20') == '1 15 5 15'\nassert solution('8 10') == '3 1 3 10'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 10\") == \"1 1 4 10\"\nassert solution(\"8 10\") == \"3 1 3 10\"\nassert solution(\"5 20\") == \"1 15 5 15\"\nassert solution(\"5 10 10 10 10\") == \"1 15 5 15\"\nassert solution(\"5 20 20 20 20\") == \"1 15 15 15\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"3 1 3 10\"\nassert solution(\"1 2\") == \"1 2 3 10\"\nassert solution(\"1 2 3\") == \"1 2 3 10\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4 10\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''50 0.125\n201 1.000''') == '16.339203308'"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"16.339203308\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''50 0.125''') == '16.339203308'\nassert solution('''201 1.000''') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '3'"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '3'\nprint('solution() is working!')"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('4\\n3') == '3'"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n0.5 1\n''') == '2'\n\nassert solution('''\n4 3\n1 11\n0.4 1\n''') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 2\n0.5 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n1 11\n0.4 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 4\n1 100\n0.6 0.4\n0.5 1\n\"\"\") == \"3\"\n\"\"\"\n    # answer: 3\n\"\"\"\n\nstdin = \"\"\".4 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0.5 1\n0.6 0.4\n0.7 0.4\n0.8 0.4\n0.9 0.4\n0.1 1\n0.2 1\n0.3 1\n0.4 1\n0"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0.5 1\\n1 11\\n0.4 1') == '2'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 2\\n0.5 1\\n') == '2'\nassert solution(\n    '4 3\\n1 11\\n') == '3'\nprint('All tests passed')\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n0.5 1') == '2'\nassert solution('4 3\\n1 11\\n0.4 1') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3 2\n    0.5 1\n    0.4 1\n    ''') == '2'\nassert solution('''\n    5 3\n    0.5 1\n    0.4 1\n    1 1\n    0.5 1\n    0.4 1\n    ''') == '2'\nassert solution('''\n    5 5\n    0.5 1\n    0.4 1\n    1 1\n    0.5 1\n    0.4 1\n    ''') == '4'\n\n''') == '2'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n10\n1 5\n2\n20\n''') == '10.5', 'First'\nassert solution('''\n1\n10\n0 5\n2\n20\n''') == '-1', 'Second'\nassert solution('''\n1\n10\n1 5\n2\n20\n''') == '-1', 'Third'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0\n''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3\n''') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n7 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n4 0\\n0 3\") == \"-1\"\nassert solution(\"3\\n2 1\\n3 2\\n10 0\") == \"10.5\"\nassert solution(\"3\\n2 1\\n3 2\\n10 0\") == \"-1\"\nassert solution(\"10\\n0\") == \"10.0\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n7 1\n3 2\n10 0\n''') == '10.5'\n\nassert solution('''\n3\n2 1\n4 0\n0 3\n''') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n1 0\\n1 3\\n0 1') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '10.5'\nassert solution('3 1') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n2 1\\n4 0\\n0 3') == '10.5'\nassert solution('3\\n7 1\\n3 2\\n10 0\\n0 3') == '10.5'\nassert solution('2\\n3 1\\n3 2\\n10 0\\n0 3') == '-1'\nassert solution('2\\n3 1\\n4 0\\n0 3') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0\\n') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3\\n') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0\n''') == '10.5'\nassert solution('''5\n20 2\n11 3\n10 6\n2 1\n0 1\n''') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n7 1\n3 2\n10 0\n\"\"\") == \"10.5\"\nassert solution(\"\"\"\n2\n3 2\n4 1\n0 3\n\"\"\") == \"-1\""
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2 0.5\\n1 0.5\") == \"1\"\nassert solution(\"2\\n2 0.51\\n1 0.49\") == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49') == '2'\nassert solution('6 0.001\\n1 0.5\\n1 0.999\\n1 0.5\\n1 0.5\\n1 0.5') == '6'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'\nassert solution('''4 0.1\n5 0.1\n4 0.2\n5 0.2''') == '2'\n\n\"\"\"\n\nimport math\n\nn = int(input())\np = float(input())\n\ne1 = []\np1 = []\nfor i in range(n):\n    e1.append(float(input()))\n    p1.append(float(input()))\n\ne2 = []\np2 = []\nfor i in range(n):\n    e2.append(float(input()))\n    p2.append(float(input()))"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"1\"\nassert solution(\"3 0.9\\n0.1 0.2\\n0.2 0.1\\n0.7 0.5\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t1) == '1'\nassert solution(t2) == '2'"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 0.5\n2 0.51\n1 0.49''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.5''') == '2'\nassert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'\n\nprint('All tests passed!')"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 0.5') == '1'\nassert solution('2 0.51') == '2'\nassert solution('1 0.49') == '2'"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t1) == \"1\"\nassert solution(t2) == \"2\""
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0.5') == '1'\nassert solution('2 0.5') == '1'\nassert solution('2 0.51') == '2'\nassert solution('1 0.49') == '2'"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"1\"\nassert solution(\"5 2.50\\n2 0.75\\n2 0.00\\n0.50\\n3 0.00\\n4 0.00\\n4 0.00\\n3 0.00\") == \"5\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == \"yes\"\nassert solution('''\n4 5 2\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\nSample Output 3:\nno''') == \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\n\nassert solution('''10 20 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 2') == 'yes'\nassert solution('5 4 4') == 'no'\nassert solution('4 5 4') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 4') == 'yes'\nassert solution('5 5 5') == 'no'"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n\"\"\"\n) == \"yes\"\nassert solution(\n    \"\"\"\n5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n\"\"\"\n) == \"no\"\nassert solution(\n    \"\"\"\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n\"\"\"\n) == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\nassert solution('''\n5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 4') == 'yes'\nassert solution('2 4 4') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 2') == 'yes'\nassert solution('5 4 4') == 'no'\nassert solution('1 1 2 2 2') == 'yes'\nassert solution('2 3') == 'no'\n\n\"\"\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 4') == 'yes'\nassert solution('4 5 2') == 'no'\n\n\"\"\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5 2\") == \"yes\"\nassert solution(\"5 4 4\") == \"yes\"\nassert solution(\"5 5 4\") == \"no\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '5'\nassert solution('5') == '2'\nassert solution('4') == '5'"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2 1 8 7'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '1'\nassert solution('20') == '5'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n') == '1\\n2\\n3\\n'\nassert solution('2\\n2\\n3\\n') == '2\\n1\\n3\\n'\nassert solution('3\\n3\\n3\\n') == '3\\n2\\n1\\n'\nassert solution('4\\n4\\n4\\n') == '4\\n1\\n2\\n3\\n'"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n5\n5\n5\n5\n''') == '2 1 2 3 4'\n\nassert solution('''4\n20\n15\n17\n14\n''') == '5 8 2 7 4'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2 1 2 7'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n5\n5\n''') == '2 1 2 1 5'\nassert solution('''4\n20\n15\n17\n14\n''') == '5 8 2 7 14'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n5\n5\n5\n\"\"\") == \"\"\"2\n1\n2\"\"\"\n\nassert solution(\"\"\"4\n20\n15\n17\n14\n\"\"\") == \"\"\"5\n8\n2\n7\"\"\"\n\nassert solution(\"\"\"1\n5\n5\n5\n\"\"\") == \"\"\"2\n1\n2\"\"\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2 1'\nassert solution('4') == '5 8'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"python\njava\n^^^\n^^^\n^^^\n^^^\n^^^\n^^^^^\n^\"\"\") == \"python java python python python java python\"\nassert solution(\"\"\"^\n^\n^\n^\n^\n^^^\n^^^^^\n^^^\n^^^\n^^^\n^\"\"\") == \"java java java java java java java java\"\nassert solution(\"\"\"^\n^\n^\n^\n^\n^\n^\n^^^\n^^^\n^^^\n^^^\n^^^\n^\"\"\") == \"java java java java java java java java\"\nassert solution(\"\"\"^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^^^\n^^^\n^^^\n^^^\n^^^\n^\"\"\") == \"java java java java java java java java\"\nassert solution(\"\"\"^\n^^^\n^^^\n^^^\n^^^\n^^^\n^\"\"\") == \"java java java java java java java java\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\npython\\njava\\n\") == \"python\\njava\\n\"\nassert solution(\"5\\npython\\njava\\njava\\n\") == \"python\\njava\\njava\\njava\\n\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\npython\np^ main.py\n^ -n 10\n\"\"\") == \"python\"\nassert solution(\"\"\"\n2\npython\njava\n^\n^^^\n^^^\n\"\"\") == \"java\"\nassert solution(\"\"\"\n3\npython\njava\np^ main.py\n^ -n 10\n\"\"\") == \"python\"\nassert solution(\"\"\"\n4\npython\njava\npython\n^\n^^^\n^^^\n\"\"\") == \"java\"\nassert solution(\"\"\"\n5\npython\njava\np^ main.py\n^ -n 10\n\"\"\") == \"java\""
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''python\np^ main.py\n^ -n 10''') == 'python main.py -n 10'\n\nassert solution('''python\njava\n^''') == 'java'\n\nassert solution('''5\npython\njava\n^''') == 'python java'\n\nassert solution('''\n    python\n    java\n    ^''') == 'java'\n\nassert solution('''\n    python\n    java\n    ^''') == 'java'"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'python java\\njava\\npython\\npython\\npython'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'python'\nassert solution(input()) == 'java'\nassert solution(input()) == 'java'\nassert solution(input()) == 'java'\nassert solution(input()) == 'java'"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"python\"\nassert solution(\"2\") == \"python main.py\"\nassert solution(\"3\") == \"python main.py -n 10\"\nassert solution(\"4\") == \"python main.py -n 10\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"java\") == \"java\"\nassert solution(\"java\") == \"java\"\nassert solution(\"python\") == \"python\"\nassert solution(\"python\") == \"python\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join(['python', 'java', 'java','main.py', 'java','main.py', 'java','main.py'])) == 'python main.py main.py main.py main.py main.py main.py main.py main.py main.py'\n\nassert solution('\\n'.join(['python', 'java', 'java','main.py', 'java','main.py', 'java','main.py'])) == 'python main.py main.py main.py main.py main.py main.py main.py main.py'\n\nassert solution('\\n'.join(['python', 'java', 'java', 'java', 'java', 'java', 'java', 'java'])) == 'python java java java java java'\n\nassert solution('\\n'.join(['java', 'java', 'java', 'java', 'java', 'java', 'java', 'java'])) == 'java java java java java java'"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"python\"\nassert solution(\"3\") == \"python python python\"\nassert solution(\"4\") == \"python python python python\"\nassert solution(\"5\") == \"python python python python\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'impossible'\nassert solution('not enough words to decipher') == 'impossible'\nassert solution('tihs snetncee mkaes prfecet sesne') == 'tihssnetnceemkaesprfecetsesne'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne'\nassert solution('aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'impossible'\nassert solution('hello') == 'impossible'\nassert solution('this sentence makes perfect sense') == 'this sentence makes perfect sense'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense', solution('tihssnetnceemkaesprfecetsesne')\nassert solution('hitehre') == 'impossible', solution('hitehre')\nassert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense', solution('tihssnetnceemkaesprfecetsesne')\nassert solution('hitehre') == 'impossible', solution('hitehre')\nassert solution('this sentence makes perfect sense') == 'this sentence makes perfect sense', solution('this sentence makes perfect sense')\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''tihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis\nSample Output 3:\nimpossible\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"tihssnetnceemkaesprfecetsesne\\n\"\n    \"5\\n\"\n    \"makes\\n\"\n    \"perfect\\n\"\n    \"sense\\n\"\n    \"sentence\\n\"\n    \"this\\n\"\n    ) == \"this sentence makes perfect sense\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense', 'Check your code'\n\nassert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense', 'Check your code'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''tihssnetnceemkaesprfecetsesne''') == 'this sentence makes perfect sense'\nassert solution('''makes\nperfect\nsense\nsentence''') == 'this sentence makes perfect sense'\nassert solution('''hello\nthere\na''') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"Solution is wrong\"\nassert solution(\"hello\") == \"impossible\", \"Solution is wrong\"\nassert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"Solution is wrong\"\nassert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\", \"Solution is wrong\"\nassert solution(\"hihello\") == \"impossible\", \"Solution is wrong\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n''') == '4'\nassert solution('''\n2 2\n''') == '16'\nassert solution('''\n1 1\n''') == '1'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\nassert solution('3 1') == '18'\nassert solution('10 10') == '90240000'\n\"\"\""
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n\"\"\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"16\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n') == '4'\nassert solution('2 2\\n') == '16'"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n''') == '1', 'Odd'\nassert solution('''\n1 2\n''') == '4', 'Even'\nassert solution('''\n2 2\n''') == '16', 'Even'\n'''\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n\n\"\"\"\n\n###################################################################################################\n\nn, m = list(map(int, input().split()))"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"1\""
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\n') == '2'\nassert solution('4\\nabab\\n2\\nbac\\n') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab') == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\n') == '2'\nassert solution('4\\nabab\\n2\\nbac\\n') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n') == '2'\nassert solution('4\\nabab\\n2\\nbac\\nbaba\\n') == '4'\nassert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n') == '2'\n\n\"\"\""
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution('1\\n2') == '2'\nassert solution('3\\nbaba') == '4'"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\nabcbab\\n2\\ncb\\ncbab\\n') == '2'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0\n''') == '6\n85\n90\n95\n100\n105\n''')\n\nassert solution('''24\n3\n10 10\n30 10\n20 20\n''') == '4\n17.071067\n20\n22.928932\n''')\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\n\nassert solution('''24\n3\n10 10\n30 10\n20 20\nSample Output 2:\n4\n17.071067\n20\n22.928932\n''') == '4\n\nassert solution('''\n10\n3\n10 10\n30 10\n20 20\nSample Output 2:\n4\n17.071067\n20\n22.928932\n''') == '4\n\nassert solution('''\n13\n3\n30 20\n20 20\n20 30\nSample Output 2:\n5\n16.6666666666666666\n25.333333333333332\n30.0\n''') == '5\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"50\n4\n110 10\n80 10\n80 0\n110 0\n\"\"\"\n) == \"\"\"6\n85\"\"\"\n\nassert solution(\n\"\"\"24\n3\n10 10\n30 10\n20 20\n\"\"\"\n) == \"\"\"4\n17.071067\n20\n22.928932\n\"\"\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"50\n4\n110 10\n80 10\n80 0\n110 0\"\"\") == \"6\"\nassert solution(\"\"\"24\n3\n10 10\n30 10\n20 20\"\"\") == \"4\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\nassert solution('''1\n4\n10\n100\n100\n100\n100\n100''') == '1'\nassert solution('''8\n30\n100\n100\n100\n100\n100\n100\n100\n100\n100''') == '5'\nassert solution('''9\n50\n100\n100\n100\n100\n100\n100\n100\n100\n100''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n24\n3\n10 10\n30 10\n20 20\n''') == '4\\n17.071067\\n20\\n22.928932\\n'''\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n50\n4\n110 10\n80 10\n80 0\n110 0\n''') == '6'\nassert solution('''\n24\n3\n10 10\n30 10\n20 20\n''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6\n\nassert solution('''24\n3\n10 10\n30 10\n20 20\n''') == '4\n\nimport math\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'\nassert solution('10000000000') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'yes'\n\nprint('solution() finished successfully!')"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"no\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('123 456 1') == 'no'\nassert solution('123 456 0') == 'yes'"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'\n\"\"\"\n\nfrom math import gcd"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 11\\n\") == \"yes\\n\", \"small test\"\nassert solution(\"10 7\\n\") == \"yes\\n\", \"small test\"\nassert solution(\"15 42\\n\") == \"no\\n\", \"small test\"\nassert solution(\"20 42\\n\") == \"no\\n\", \"small test\"\nassert solution(\"27 23\\n\") == \"yes\\n\", \"small test\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 11\n''') == 'yes'\nassert solution('''\n10 7\n''') == 'no'"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 4\\n2 5\\n1 6\") == \"3\"\nassert solution(\"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\") == \"3\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n3 4\n2 5\n1 6\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"20\") == \"2\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n10 30\n20 40\n30 50\n10 60\n30 40''') == '3'\nassert solution('''20\n30 50\n30 40\n20 40''') == '2'\n\n'''\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3\n3 4\n2 5\n1 6\n''') == '3'\nassert solution(\n'''\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '3'\nassert solution(\n'''\n2\n4 4\n2 3\n''') == '2'\n'''"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n3 4\n2 5\n1 6\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 4\n2 5\n1 6\n''') == '3 1 6 2 5 3 4'\nassert solution('''\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n''') == '3 1 6 2 5 3 4'\n'''\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6') == '3\\n1 6\\n2 5\\n3 4'\nassert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40') == '3\\n10 60\\n30 50\\n30 40'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n\"\"\") == \"\"\"\n3\n10 60\n30 50\n30 40\n\"\"\", \"Just put one interval in a sequence\"\n\nassert solution(\"\"\"\n5\n2 5\n1 6\n3 4\n2 5\n1 6\n\"\"\") == \"\"\"\n3\n1 6\n2 5\n3 4\n2 5\n1 6\n\"\"\", \"The number of intervals should be equal or less than the length of the array\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1\\n10 10 5') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\nassert solution('10 20\\n10 20\\n20 20\\n10 20\\n10 20\\n20 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n20 20\\n20 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20 20\\n10 20\\n10 20\\n10 20\\n20 20\\n20 20\\n20"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\nprint(solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\"))"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == '5836'\nassert solution('5 2') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1\\n10 10 5') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '5836'\nassert solution('''\n5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '5836'\nassert solution('5 2') == '1828'\nassert solution('6 2') == '31836'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"914\"\nassert solution(\"5 2\") == \"1728\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1') == '5836'\nassert solution('5 2') == '1828'\n\nimport heapq\nimport collections\nimport sys\ninput = sys.stdin.readline"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'impossible'\nassert solution('2') == '50'\nassert solution('1') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('5') == '50'\nassert solution('4') == 'impossible'\nassert solution
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\nSample Output 3:\n50''') == '50'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 7, 2401, 3299, 0]) == \"50\"\nassert solution([6, 2401, 2399, 0]) == \"impossible\"\nassert solution([2, 750, 750, 99]) == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"3\") == \"50\"\nassert solution(\"3\\n3\") == \"50\""
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n7 2401 3299 0') == '50'\nassert solution('3\\n6 2401 2399 0') == 'impossible'\nassert solution('3\\n2 750 750 99') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n\"\"\") == \"50\"\nassert solution(\"\"\"\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n10\n1 1 2 3 4 5 6 7 8 9 10\n10 0 1 0 0 0 0 0 0 0 0\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n100 200 200\n8 100 300 200\n9 100 400 200\n\"\"\") == \"50\"\n\nassert solution(\"\"\"\n2\n100 200 300\n8 100 300 200\n9 100 400 200\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n3\n100 200 400\n8 100 300 200\n9 100 400 200\n\"\"\") == \"50\""
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50'\nassert solution('''\n4\n6 1149 1737\n8 1319 2749\n9 1510 4698\n''') == 'impossible'"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n\"\"\"\n\n\nimport math\nfrom decimal import *\n\ngetcontext().prec = 3\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0 0 0 0 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0 0 0\"\nassert solution(\"4\") == \"0 0 0 1\"\nassert solution(\"5\") == \"0 0 0 0 1\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"4.2\") == \"1 1 1 1\"\nassert solution(\"3.4\") == \"1 1 1 1\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '0 0 0 0 1'\n\n'''\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\nassert solution('6 7 8 5 4 3 2 1') == '7'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n8 3 1\n1 7 8 2 6 4 3 5\n\"\"\") == \"8\"\n\nassert solution(\n\"\"\"\n8 3 1\n1 7 8 2 6 4 3 5\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5\\n') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3'\nprint(solution(input()))\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 3 1\n1 7 8 2 6 4 3 5''') == '8'\nassert solution('''8 2 1\n1 7 8 2 6 4 3 5''') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3 1\") == \"8\"\nassert solution(\"8 2 1\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3 1\n1 7 8 2 6 4 3 5\n''') == '8'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n2 3 4 1\n''') == '3'\nassert solution('''\n6 3\n2 2 2 4 4 4\n''') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n2 3 4 1\n''') == '3'\n\nassert solution('''\n6 3\n2 2 2 4 4 4\n''') == '4'\n\nassert solution('''\n4 4\n4 4 4 2\n''') == '3'\n\nassert solution('''\n5 10\n1 2 3 4 5 6 7 8 9\n''') == '5'\n\nassert solution('''\n8 16\n2 4 4 2 4 4 4 4\n4 4 4 3 4 4 4 4\n''') == '4'"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1\n3''') == '3'\nassert solution('''5\n2\n3\n4\n5\n6''') == '4'\nassert solution('''6\n1\n3\n5\n7\n9''') == '5'\nassert solution('''20\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '18'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '3'\nassert solution('6 3') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3') == '4'\nassert solution('1') == '1'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"4\"\nassert solution(input_string_1) == \"3\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3') == '4'\nassert solution('4 3') == '3'\nassert solution('5 1') == '1'"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '3'\nassert solution('6 3') == '4'"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '3'\nassert solution('6 3') == '4'\nassert solution('6 2') == '1'\nassert solution('9 2') == '0'\nassert solution('100 2') == '0'"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n3 4 1\n''') == '4'\n\nassert solution('''5 3\n1 2 1 3 2 4\n''') == '3'\n\nassert solution('''10 4\n10 10 10 10 10 10 10 10 10 10 10\n''') == '1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nprint('all tests passed')\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2') == '3.0'\nassert solution('1 2 3') == '2.000000'\nassert solution('1 1 1') == '1.732050'\nassert solution('0.5 0.5 1.2') == '1.732050'\nassert solution('0.5 0.5 0.5') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1.732050') == '1.732050801'\nassert solution('1 1 3.0') == '-1'\nassert solution('1 1 4.6') == '-1'\nassert solution('1 1 7.4') == '1.732050801'\nassert solution('1 1 9.6') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-1\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1.732050') == '1.7320508000000001'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1.732050') == '1.732050829997'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\n\"\"\""
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nassert solution(\"1 1 3.0\") == \"-1\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''\n2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\"\nprint(solution(input))\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n3 4 2\n.75\n\"\"\") == \"2.4999999987500003\"\nassert solution(\"\"\"\n2\n0 100 10\n0 -100 100\n.80\n\"\"\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'\n\nstdin = \"\"\"\n1\n3 4 2\n0 -100 100\n.80\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3 4 2\\n.75') == '2.4999999987500003'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80') == '9.999999999000002'\nassert solution('2\\n-1 100 -5\\n1 -100 100\\n.79') == '2.5'\nassert solution('2\\n-1 100 5\\n1 -100 100\\n.79') == '1.8'\nassert solution('2\\n-1 100 1\\n1 -100 100\\n.79') == '1.8'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2.4999999987500003\"\nassert solution(\"2\") == \"9.999999999000002\"\nassert solution(\"3\") == \"7.80000000596046448\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1.00000001'\nassert solution('2') == '1.0'\nassert solution('0.95') == '0.95000'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'\nassert solution('3') == '2.4999999987500003'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 1 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''\n4\n1 2 1 4\n.75\n''') == '2.4999999987500003'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3 4 2\\n.75') == '2.4999999987500003'\nassert solution('2\\n0 100 10\\n0 -100 100\\n.80') == '9.999999999000002'"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '1'\nassert solution('4 1') == '3'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3\\n2 1 6\\n1 1 5 1 2\\n2 1 6\\n') == '3'\nassert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n') == '2'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''2 1 6\n2 1 5 1 2''') == '3'\nassert solution(\n'''4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\nSample Output 2:\n3\n2\n1\n0''') == '2'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3') == '0'\nassert solution('4 5') == '3'"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1 6\n2 1 6\n3 1 5 1 2\n2 1 6\n''') == '0'\nassert solution('''2 2 4\n1 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '2'\nassert solution('''4 5\n1 1 5 1 2\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '3'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3') == '0'\nassert solution('4 5') == '3'"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4') == '3'\nassert solution('7 7\\n1 1 2 3 1 1\\n2 1 1 1\\n1 1 1 1\\n2 1 1 1\\n1 1 1 1\\n2 1 1 1\\n1 1 1 1\\n2 1 1 1\\n1 1 1 1\\n2 1 1 1') == '1'\nassert solution('6 5\\n1 1 4 3 4\\n2 1 1\\n2 2 2\\n2 3 3\\n2 4 4\\n5 5 5\\n6 6 6') == '0'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n1 1 5 1 2\n2 1 6\n2 2 2\n2 3 3\n2 4 4\n''') == '3'\nassert solution('''\n5 4\n1 1 5 1 2\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '2'\nassert solution('''\n5 7\n1 1 5 1 2\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '0'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1 6\n2 1 5 1 2\n2 1 6\n''') == '0\nassert solution('''4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '3\nassert solution('''6 4\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '2\n'''\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2 1 6') == '3'\nassert solution('4\\n1 1 5 1 2') == '4'\nassert solution('5\\n1 1 5 1 2') == '0'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 7 1000000007\n''') == '1'\nassert solution('''\n3 2 1000000007\n''') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 7 1000000007\n''') == '1'\nassert solution('''\n3 2 1000000007\n''') == '4'\nassert solution('''\n3 5 4 5\n''') == '1'\nassert solution('''\n3 5 4 5\n''') == '3'\nassert solution('''\n3 1 3 1\n''') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 10') == '4', 'Sample Test 1'\nassert solution('3 2 1000000007') == '4', 'Sample Test 2'"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 2 1000000007\"\"\") == \"4\"\nassert solution(\"\"\"5 5 3\"\"\") == \"5\"\nprint(solution(input()))\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3\\n') == '5'\nassert solution('1 2\\n4\\n') == '8'\nassert solution('2 3\\n4\\n') == '0'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n3') == '5'\nassert solution('10 10\\n6') == '5'\nassert solution('10 10\\n11') == '8'\nassert solution('10 10\\n30') == '0'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '5'\nassert solution('2 5') == '8'\nassert solution('3 1') == '0'\nprint('Congratulations, have a nice day!')\n\"\"\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '10 10\\n6\\n'\n    '10\\n'\n    '11'\n    ) == '8'\nassert solution(\n    '10 10\\n6\\n'\n    '10\\n'\n    '11'\n    ) == '8'\nassert solution(\n    '100 10\\n100\\n'\n    '100'\n    ) == '100'\nassert solution(\n    '50 50\\n10\\n'\n    '10'\n    ) == '50'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"5\"\nassert solution(\"3 5\") == \"8\"\nprint(solution(input))\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '5'\nassert solution('3 5') == '8'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 5]) == \"8\"\nassert solution([5, 5]) == \"8\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n8''') == '1'\nassert solution('''10 10\n7\nSample Input 3:\n3 5\n12\nSample Output 3:\n0\n''') == '0'\nassert solution('''7 4\n8\nSample Input 4:\n4 4\n1\nSample Output 4:\n4\n''') == '4'"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 10') == '5'\nassert solution('3 5') == '8'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n6') == '5'\nassert solution('10 10\\n6') == '8'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''10 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n4 5 1\n5 6 1\n6 7 1\n7 8 1\n8 9 1\n9 10 1\n10 11 1\n11 12 1\n12 13 1\n13 14 1\n14 15 1\n15 16 1\n16 17 1\n17 18 1\n18 19 1\n19 20 1\n20 21 1\n21 22 1\n22 23 1\n23 24 1\n24 25 1\n25 26 1\n26 27 1\n27 28 1\n28 29 1\n29 30 1\n30 31 1\n31 32 1\n32 33 1\n33 34 1\n34 35 1\n35 36 1\n36 37 1\n37 38 1\n38 39 1\n39 40 1\n40 41 1\n41 42 1\n42 43 1\n43 44 1\n44 45 1\n45 46 1\n46 47 1\n47 48 1\n48 49 1\n49 50 1\n50 51 1\n51 52 1\n52 53 1\n53 54 1\n54 55 1\n55 56 1\n56 57 1\n57 58 1\n58 59 1\n59 60 1\n60 61 1\n61 62 1\n62 63 1\n63 64 1\n64 65 1\n65 66 1\n66 67 1\n67 68 1\n68 69 1\n69 70 1\n70 71 1\n71 72 1\n72 73 1\n73 74 1\n74 75 1\n75 76 1\n76 77 1\n77 78 1\n78 79 1\n79 80 1\n80 81 1\n81 82 1\n82 83 1\n83 84 1\n84 85 1\n85 86 1\n86 87 1\n87 88 1\n88 89 1\n89 90 1\n90 91 1\n91 92 1\n92 93 1\n93 94 1\n94 95 1\n95 96 1\n96 97 1\n97 98 1\n98 99 1\n99 100 1\n100 101 1\n101 102 1\n102 103 1\n103 104 1\n104 105 1\n105 106 1\n106 107 1\n107 108 1\n108 109 1\n109 110 1\n110 111 1\n111 112 1\n112 113 1\n113 114 1\n114 115 1\n115 116 1\n116 117 1\n117 118 1\n118 119 1\n119 120 1\n120 121 1\n121 122 1\n122 123 1\n123 124 1\n124 125 1\n125 126 1\n126 127 1\n127 128 1\n128 129 1\n129 130 1\n130 131 1\n131 132 1\n132 133 1\n133 134 1\n134 135 1\n135 136 1\n136 137 1\n137 138 1\n138 139 1\n139 140 1\n140 141 1\n141 142 1\n142 143 1\n143 144 1\n144 145 1\n145 146 1\n146 147 1\n147 148 1\n148 149 1\n149 150 1\n150 151 1\n151 152 1\n152 153 1\n153 154 1\n154 155 1\n155 156 1\n156 157 1\n157 158 1\n158 159 1\n159 160 1\n160 161 1\n161 162 1\n162 163 1\n163 164 1\n164 165 1\n165 166 1\n166 167 1\n167 168 1\n168 169 1\n169 170 1\n170 171 1\n171 172 1\n172 173 1\n173 174 1\n174 175 1\n175 176 1\n176 177 1\n177 178 1\n178 179 1\n179 180 1\n180 181 1\n181 182 1\n182 183 1\n183 184 1\n184 185 1\n185 186 1\n186 187 1\n187 188 1\n188 189 1\n189 190 1\n190 191 1\n191 192 1\n192 193 1\n193 194 1\n194 195 1\n195 196 1\n196 197 1\n197 198 1\n198 199 1\n199 200 1\n200 201 1\n201 202 1\n202 203 1\n203 204 1\n204 205 1\n205 206 1\n206 207 1\n207 208 1\n208 209 1\n209 210 1\n210 211 1\n211 212 1\n212 213 1\n213 214 1\n214 215 1\n215 216 1\n216 217 1\n217 218 1\n218 219 1\n219 220 1\n220 221 1\n221 222 1\n222 223 1\n223 224 1\n224 225 1\n225 226 1\n226 227 1\n227 228 1\n228 229 1\n229 230 1\n230 231 1\n231 232 1\n232 233 1\n233 234 1\n234 235 1\n235 236 1\n236 237 1\n237 238 1\n238 239 1\n239 240 1\n240 241 1\n241 242 1\n242 243 1\n243 244 1\n244 245 1\n245 246 1\n246 247 1\n247 248 1\n248 249 1\n249 250 1\n250 251 1\n251 252 1\n252 253 1\n253 254 1\n254 255 1\n255 256 1\n256 257 1\n257 258 1\n258 259 1\n259 260 1\n260 261 1\n261 262 1\n262 263 1\n263 264 1\n264 265 1\n265 266 1\n266 267 1\n267 268 1\n268"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5 3') == '2'\nassert solution('4 5 3') == '3'\nassert solution('2 5 3') == '1'\nassert solution('2 5 3') == '1'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == \"2\"\nassert solution('''5 5 2\n1 2 1\n3 4 2\n5 6 3\n4 7 4\n2 8 1\n9 10 5\n1 11 2\n1 8 2\n7 9 3\n12 13 1\n2 14 1\n6 15 2''') == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\") == \"2\"\nassert solution(\"4 5 3\") == \"3\"\nassert solution(\"4 5 1\") == \"1\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nprint(solution())\n\n\n\"\"\"\n\nfrom itertools import product"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == \"2\"\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n5 5 2\n0 1 1\n0 1 1\n1 2 2\n0 2 1\n1 2 1\n''') == '4'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\n\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\n\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\n\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\n\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"3\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"3 1 1\") == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\nassert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '3'\nassert solution('''\n3 2\n10 20\n5 10\n2 20\n1 30\n1 32\n''') == '3'\nassert solution('''\n4 1\n10\n10\n1 10\n1 10\n1 10\n''') == '1'\nassert solution('''\n4 1\n10\n10\n1 10\n1 10\n1 10\n''') == '0'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3'\nassert solution('4 3') == '3'\nassert solution('3 1') == '3'\nassert solution('5 5 10') == '5'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3'\nassert solution('3 1') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '3'\nassert solution('4 3') == '3'\nassert solution('6 4') == '2'\nassert solution('6 5') == '1'\nassert solution('6 1') == '6'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 1 10\") == \"2\"\nassert solution(\"2 1 10\") == \"2\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n\nassert solution(input()) == \"5\""
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '5'"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '5'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"8\"\nassert solution(\"6\") == \"9\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\""
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2\\n4\\n5\\n1\\n2\\n4\") == \"1\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '11'\nassert solution('100') == '101'\nassert solution('50000000') == '51767736'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 3\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n0 11 9\n1 0 10\n0 0 0''') == '2'\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '-1'\nassert solution('''7 4\n0 1 0 1 0 3\n0 0 2 0 0 0\n0 0 0 0 0 0\n0 1 0 0 0 0\n0 0 0 0 0 0\n0 0 2 0 0 0\n0 0 0 0 0 0''') == '4'"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n3 1\n0 11 9\n1 0 10\n0 0 0\n\"\"\") == \"2\"\nassert solution(\n    \"\"\"\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1\n0 11 9\n1 0 10\n0 0 0''') == '2'\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0''') == '-1'\nassert solution('''5 4\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n1 0 10''') == '2'"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 3\") == \"-1\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"100 1\") == \"100\"\n\n\"\"\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\nassert solution('''\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'\nassert solution('''\n100 100\n''') == '-1'\nassert solution('''\n6 6\n0 0 0 0 0 0\n0 1 0 0 0 0\n0 0 1 0 0 0\n0 0 0 1 0 0\n0 0 0 0 1 0\n0 0 0 0 0 1\n''') == '7'\nassert solution('''\n5 1\n0 0\n0 0\n0 0\n0 0\n''') == '3'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\\n\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\\n\") == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2'\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '-1'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5 0 3') == '3 5 4'\nassert solution('2 1 0 1') == '2 1 2'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5 0 3') == '4 3 5'\nassert solution('2 1 0 1') == '2 100000 1'"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5 0 3') == '3 4 5'\nassert solution('2 1 0 1') == '3 2 1'\nprint('\"Run\" is good. Great job!')\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5 0 3') == '4 3 5'\nassert solution('2 1 0 1') == '2 100000 1'"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\""
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\"\nprint(\"Congratulations! Your solution is correct!\")\n\n\"\"\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 0 1\") == \"2 100000 1\"\nassert solution(\"2 100000 1\") == \"2 100000 1\"\nassert solution(\"2 1 0 1\\n0 1 100000\") == \"2 100000 1\"\nassert solution(\"2 100000 1\\n0 1 100000\") == \"2 100000 1\"\nassert solution(\"2 1 0 1\\n0 1 100000\\n1 0 1\\n1 3 1\\n2 3 10\\n1 2 1\\n0 2 1\\n2 3 10\\n2 1 1\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '4 3 5'\nassert solution('''\n2 1 0 1\n0 1 100000\n''') == '2 100000 1'"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n.S.M\nS..M\nS.M.\n''') == '2 0'\nassert solution('''\n2 3\n.S..\nM...\n''') == '0 1'\nassert solution('''\n4 4\n.SSM\nMM.M\n.S.M\n''') == '2 2'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '3 5'\nassert solution('2 4') == '2 0'"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"3 5\""
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 0\""
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"2 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1\nSMS\nSMS''') == '3 5'\n\nassert solution('''1 1\nSMS\nSMS''') == '2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '3 5'\nassert solution('''2 3\nS.M\nM..''') == '2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"3 5\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '3 5'\nassert solution('''2 3\nS.M\nM..''') == '2 0'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '2'\nassert solution('1 0 B') == '2'\nassert solution('1 0 T A') == '6 c'\nassert solution('1 1 T A') == '6 b'\nassert solution('6 0 B') == '1 c'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\n\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\nSample Output 3:\n2\n''') == '1'\n\nassert solution('''\n12\n0 B\n1 G a\n2 G a\n2 E a\n3 G a\n3 T a\n3 S a\n3 E a\n3 S a\n2 T a\n1 E a\n1 S\n1 S\nSample Output 4:\n1\n''')"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\n\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\nSample Output 2:\n1\n6 b\n''') == '5 b'"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\nassert solution('''\n4\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '1'\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n0 S\n1 S\n2 S\n3 S\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n0 T\n1 G\n2 E\n3 G\n\"\"\") == \"4\"\nassert solution(\"\"\"\n9\n0 S\n1 S\n2 S\n3 S\n4 S\n5 S\n6 S\n7 S\n8 S\n\"\"\") == \"1\"\nassert solution(\"\"\"\n13\n0 T\n1 G\n2 G\n3 G\n4 G\n5 G\n6 G\n7 G\n8 G\n9 G\n10 G\n11 G\n12 G\n13 G\n\"\"\") == \"3\"\nassert solution(\"\"\"\n0 B\n1 S\n2 S\n3 S\n4 S\n5 S\n6 S"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0 B\\n1 B') == '2\\n3 c'\nassert solution('3\\n0 B\\n1 B\\n2 E a') == '4 c'\nassert solution('6\\n0 B\\n1 B\\n2 E a\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a') == '1\\n6 b'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution('13') == '0 B'\nassert solution('6') == '6 b'\nassert solution('0 B') == '0'\nassert solution('1 T a') == '1'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '1'\nassert solution('5') == '6 b'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"1\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '40'\nassert solution('1 2') == '2'\nassert solution('7 5') == '77'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5\\n\") == \"40\"\nassert solution(\"288 291\\n\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"1 2 3 4\") == \"7\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"23\") == \"7\"\nassert solution(\"1234567\") == \"45\"\nassert solution(\"1234567890\") == \"49\"\nassert solution(\"1234567891\") == \"49\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 5\n\"\"\") == \"40\"\nassert solution(\"\"\"\n24 87\n\"\"\") == \"76\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"40\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '20'\nassert solution('0 0') == '0'\nassert solution('1 2') == '2'\nassert solution('6 1') == '3'\nassert solution('50000 1000000') == '3757'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nCAT\") == \"CAT\"\nassert solution(\"3\\nCAT\") == \"CAT\"\nassert solution(\"2\\nCAT\") == 0\nassert solution(\"1\\nCAT\") == -1\nassert solution(\"5\\nCAT\") == \"CAT\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'COG'\nassert solution('2') == 0\nassert solution('3') == 'COG'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nCAT\\nDOG\\nCOT') == 'COG'\nassert solution('5\\nDOG\\nCAT') == 'COG'\nassert solution('10\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI') == 'E'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\nCAT\nDOG\nCOT\n\"\"\") == \"COG\"\nassert solution(\"\"\"\n2\nCAT\nDOG\n\"\"\") == \"0\""
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5\nCAT\nDOG\nCOT\n\"\"\") == \"COG\"\nassert solution(\"\"\"5\nCAT\nDOG\nCOT\n\"\"\") == \"0\"\nassert solution(\"\"\"2\nCAT\nDOG\n\"\"\") == \"0\"\nassert solution(\"\"\"4\nCAT\nDOG\nCOT\n\"\"\") == \"COG\"\nassert solution(\"\"\"4\nCAT\nCOT\nDOG\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nCAT\\nDOG\\nCOT\\nCAT\\nDOG') == 'CAT'\nassert solution('4\\nCAT\\nDOG\\nCOT\\nCAT\\nDOG') == 'CAT'\nassert solution('3\\nCAT\\nDOG\\nCOT\\nCAT\\nDOG') == 'DOG'\nassert solution('2\\nCAT\\nDOG\\nCOT\\nCAT\\nDOG') == '0'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == (\"\", 0)\nassert solution(\"2\") == (\"\", 0)\nassert solution(\"2 1\") == (\"\", 0)\nassert solution(\"2 1 2\") == (\"\", 0)\nassert solution(\"2 3\") == (\"\", 0)\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"COG\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'CAT'\nassert solution('2') == 'COG'\nassert solution('3') == 'COT'"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nCAT\\nDOG\\nCOT\") == \"COG\", \"Should return COG\"\nassert solution(\"1\\nCAT\\nDOG\\n\") == \"\", \"Should return 0\"\nassert solution(\"1\\nCAT\\nDOG\\n\") == \"COG\", \"Should return COG\""
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '6'\nassert solution('10 4') == '9'\nassert solution('2 3') == '4'\nassert solution('6 2') == '4'\nassert solution('5 4 3') == '2'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '0'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == '9'\nassert solution('10 1') == '9'\nassert solution('100 100') == '1000000000'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n2\n1''') == '2'\nassert solution('''2\n1\n''') == '1'\nassert solution('''2\n3\n''') == '0'\nassert solution('''2\n2\n''') == '0'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"6\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"5 1\") == \"9\"\nassert solution(\"5 4\") == \"11\"\n\nfrom math import floor, sqrt\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"9\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 3') == '6'\nassert solution('1000000 1') == '1'\nassert solution('10 1') == '9'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '9'\nassert solution('10') == '90'\nassert solution('12') == '360'\nassert solution('15') == '700'\n\nassert solution('9') == '9'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2\\nV...V\\nH...V\\n') == '3'\nassert solution('1 1\\n..#..\\n#..#.\\n.#.#.\\n.#.#.\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\n#.#.#\\"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\nV...\\nH...V') == '3'\nassert solution('5 5\\nV...\\nH..V') == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n.V..V..V..V.\n.V..V..V..V.\n..#...V.#.V.#\n.V.#..V.#.V.#\n.V..V..V..V.\n''') == '3'\nassert solution('''2 5\n.V..V..V..V.\n.V..V..V..V.\n''') == '-1'\nassert solution('''5 5\n.V..V..V..V.\n.V..V..V..V.\n..#...V.#.V.#\n.V.#..V.#.V.#\n.V..V..V..V.\n''') == '3'"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n.V.\\n.V.\\n\") == \"3\"\nassert solution(\"2 5\\nV...\\nH...V\\n\") == \"2\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./\") == \"3\"\nassert solution(\"2 5\\nV...\\nH...V\") == \"-1\""
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./\\n') == \"3\"\nassert solution('2 5\\nV...\\nH...V\\n') == \"-1\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\n/#.V.\\\n./.V.\\\n..#..\\\n.V.#.\\\n.V./\n''') == '3'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution('1 2') == '-1'\n\n- Input:\n               .V.\n                 \\V.\n                   H.\n                    /|\\\n                   V.V\\\n                 .V..\n                 /|\\\n                V.H\\\n               .V./\nOutput:\n3\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./') == '3'\nassert solution('2 5\\nV...\\nH...V') == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"3\"\nassert solution(\"2 5\") == \"-1\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog\\n\") == \"AMBIGUOUS\"\nassert solution(\"4\\ncdefghi\\nefghijk\\nefghijx\\nabcdefg\\n\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nabcdefg\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\ncdefghi\nefghijk\nefghijx\nabcdefg\n''') == \"AMBIGUOUS\"\nassert solution('''\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == \"AMBIGUOUS\"\nassert solution('''\n4\nfox\ndog\ndog\ncat\n''') == \"AMBIGUOUS\"\nassert solution('''\n3\ncdef\nefg\nhi\n''') == \"AMBIGUOUS\"\n\nassert solution('''\n11\nvirus cefghi virus jklmno\notziv virus jklmno\nanswevirus vsygjvtvr\ntivysvrsvygjvtr\n''') == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\ngeeks\\nfor\\ngeeks\\n\") == \"AMBIGUOUS\"\nassert solution(\"4\\nfoo\\nbar\\nbar\\n\") == \"AMBIGUOUS\"\nassert solution(\"3\\nfox\\njumps\\nfox\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 'AMBIGUOUS'\n\nassert solution('7') == 'The quick brown fox jumps over the lazy dog.'\n\nassert solution('4') == 'AMBIGUOUS'\n\nassert solution('7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog') == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\ncdefghi\\nefghijk\\nefghijx\\nabcdefg\\n') == 'AMBIGUOUS'\nassert solution('7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog\\n') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('25\\nxptgs,glgxkzhb,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqxn,ptgq,lst,ptgq,uadag,fucd,lst,ptgq,xqx"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog\\n') == 'The quick brown fox jumps over the lazy dog.'\nassert solution('4\\ncdefghi\\nefghijk\\nefghijx\\nabcdefg\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\nabcdef\\nghijkl\\n') == 'AMBIGUOUS'\nassert solution('5\\nfox\\nbrown\\nfox\\n') == 'AMBIGUOUS'\nassert solution('8\\nfox\\nbrown\\nbrown\\nfox\\n') == 'AMBIGUOUS'\nassert solution('9\\nfox\\nbrown\\nbrown\\nfox\\n') == 'AMBIGUOUS'\nassert solution('12\\nfox\\nbrown\\nbrown\\nfox\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == 'AMBIGUOUS'\nassert solution('''\n6\nfoo bar\nfoo bar\nbar foo\nfoo bar\nbar foo\nbar bar\nfoo bar\nfoo bar\nbar foo\nfoo bar\n''') == 'AMBIGUOUS'\nassert solution('''\n3\na b\na c\n''') == 'AMBIGUOUS'\n\nassert solution('''\n1\nfoo\n''') == 'AMBIGUOUS'\n\nimport sys"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\") == \"AMBIGUOUS\"\nassert solution(\"6\\ncyc dgjhg\\nigfghj\\nxhgyfxa\\ncyc dgjhg\\ncyfghjx\") == \"AMBIGUOUS\"\n\"\"\"\n\n\"\"\"\n***Using Python's built-in 'deque' module***\n\nDeque can be used as a data structure for this problem as well. The data structure can be implemented in the following way:\n\nWe create an empty deque d.\nWe add all the text fragments to the deque d.\nWe then take every element from the deque d and compute the prefix and suffix of the element.\nWe check whether the suffix is a prefix of the prefix for every other element in the deque. If so, we can remove it from the deque, which removes the corresponding prefix from the deque, and if so, we can also remove the corresponding suffix from the deque, which removes the corresponding suffix from the deque.\n\nOnce we have removed all the prefixes and suffixes from the deque, we can use the prefixes and suffixes to reconstruct the text.\n\"\"\""
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '+--'\nassert solution('5 6\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '0+--'\nassert solution('4 4\\n1 2 1\\n-2 0 2\\n2 3 3') == '--+'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([5,6]) == \"--+0-\"\nassert solution([3,2]) == \"0+-\n\nassert solution([3,2]) == \"0+-\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5, 6], \"x y 1\") == \"--+0-\"\nassert solution([3, 2], \"x y 1\") == \"0+-\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+0-'\n\nassert solution('''3 2\n1 2 1\n-2 0 2\n''') == '0+-'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+0-', 'First'\nassert solution('''\n3 2\n1 2 1\n-2 0 2\n''') == '0+-', 'Second'"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+0-'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"+-0\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == '--+0-'\nassert solution('3 2') == '0+-'\nassert solution('-3 -2 3') == '--+0-'\nassert solution('-2 -2 4') == '--+0-'\nassert solution('2 3 3') == '--+0-'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"--+0-\"\nassert solution(\"3 2\") == \"0+-\", \"Should only have a single solution\"\nassert solution(\"-3 -2 3\") == \"--+0-\", \"Should find an impossible solution\"\nassert solution(\"-2 -2 4\") == \"-+0+\", \"Should find an impossible solution\"\nassert solution(\"2 3 3\") == \"++-+\", \"Should find an impossible solution\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 2, 1, -2, 0, 2, 5, 1, 4, 2, 5, 1]) == \"0+-\"\nassert solution([3, 2, 1, -2, 0, 2, 5, 1, 4, 2, 5, 1, 2, 1, 5]) == \"--+-\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 1\n1 1\n1\n1 1 1\n2 2 2\n''') == '4', 'First'\nassert solution('''\n2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n''') == '4', 'Second'\nassert solution('''\n2 2\n1 2\n2 3\n2\n1 2 1\n2 2 2\n''') == '4', 'Third'\n''')\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('1 1 1') == '1'\nassert solution('1 2') == '4'\nassert solution('2 3') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"2\") == \"4\"\nassert solution(\"1 2 1\") == \"2\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n2 2\n1 1\n1 1\n1\n1 1 1\n2 2 2\n''') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 2') == '4'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"2\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2''') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2\\n1 1\\n1 1\\n1') == '1\\n'\nassert solution('2 2\\n1 1\\n1 1\\n1') == '2\\n'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 1\n1 1\n1''') == '1'\nassert solution('''2 2\n1 2\n2 3\n2''') == '4'\nprint('all tests passed')\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 1\\n1 1 1\\n1') == '1'\nassert solution('2 2\\n1 1\\n2 3\\n2') == '4'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == 'YES'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5') == 'YES'\nassert solution('3 4') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nWRRRG\") == \"YES\"\nassert solution(\"3 4\\nWWRR\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == 'YES'\nassert solution('3 4') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\n''') == 'NO'\n\n'''\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert Solution().solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert Solution().solution('''3 4\nWWRR\nWRRR\nWRRR\n''') == 'NO'\n'''"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution(\"RWRBRW\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5') == 'YES', \"WRRRG\"\nassert solution('3 4') == 'NO', \"WWRR\"\n\nprint(solution(input()))\n\n---\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == 'YES', \"First\"\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\n''') == 'NO', \"Second\"\nprint('All passed!')"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\nSample Output 2:\nNO''') == 'NO'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"6 3 5\") == \"3\"\nassert solution(\"5 3 5\") == \"2\"\nassert solution(\"5 6 5\") == \"2\"\nassert solution(\"5 5 5\") == \"1\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3 5\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"6 3 5\") == \"1\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 5\n1\n2\n3''') == '1'\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1''') == '3'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 4\n1\n4\n2\n3\n1''') == '1'\nassert solution('''3 4 5\n1\n2\n3\n1''') == '3'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n3\n''') == \"1\"\nassert solution('''\n3\n5\n5\n''') == \"3\"\nassert solution('''\n6\n3\n5\n''') == \"3\"\n\n## To run this use this: python3 solution.py < inputs/inputs.txt\n## To see another test input run: python3 solution.py < inputs/test_inputs.txt\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3 5\n1\n2\n3\n3\n2\n1''') == '1'\n\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1\nSample Output 3:\n3''') == '3'\n\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1\nSample Output 4:\n2''') == '2'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"2\"\n\nstdin = \"\"\"\n5 1 3\n1\n2\n2\n1\n3\"\"\"\n\nprint(solution(input_string))\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('6 3 5') == '3'\nassert solution('3 3 5') == '3'\nassert solution('6 3 5 4') == '4'\nassert solution('10 3 5 4') == '6'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3 5\n1\n2\n3''') == '1'\n\nassert solution('''3 3 5\n1\n2\n3\n3\n2\n1''') == '3'\n\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1\nSample Output 3:\n2\n\nSample Input 4:\n7 5 3\n1\n3\n2\n3\n2\n1\n1\nSample Output 4:\n3\n\nSample Input 5:\n3 1 2\n1\n1\nSample Output 5:\n0\n\nSample Input 6:\n5 1 1\n0\n1\nSample Output 6:\n1\n'''\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('6 3 5') == '3'\nassert solution('3 4 5') == '3'\nassert solution('6 3 5') == '3'\nassert solution('6 3 5') == '2'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0 2\n1 3\n3 3\n''') == '12 3'\n\nassert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\n\nprint(solution('''\n1\n0 2\n1 3\n3 3\n'''))\n\nprint(solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n'''))"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n0 2\n1 2\n3 3\n\"\"\") == \"3 2\"\nassert solution(\"\"\"\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n\"\"\") == \"12 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == \"4 2\"\nassert solution('5') == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    3\n    0 2\n    1 2\n    3 3\n    \"\"\"\n) == \"12 3\"\nassert solution(\n    \"\"\"\n    5\n    0 2\n    1 3\n    3 3\n    7 5\n    9 5\n    \"\"\"\n) == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 2\n1 2\n3 3\n''') == '3 2'\nassert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\nassert solution('''\n10\n0 1\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n''') == '14 18 10'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n0 2\\n1 2\\n3 3\\n') == '3 2'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n0 2\n1 3\n3 3\n''') == '3 2'\nassert solution('''\n2\n0 2\n1 3\n3 3\n''') == '4 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3 2'\nassert solution('5') == '12 3'"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n0 2\\n1 2\\n3 3\") == \"3 2\"\nassert solution(\n    \"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"100100\"\nassert solution(\"1\") == \"01\"\nassert solution(\"2\") == \"00\"\nassert solution(\"1 0 0 0 1\") == \"100\"\nassert solution(\"1 1\") == \"010\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '100'\nassert solution('4') == '00011'\nassert solution('5') == '10000'\nassert solution('6') == '101010'\n\nstdin = ''\nfor _ in range(int(input())):\n    stdin += input().strip()\nprint(solution(stdin))\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1\n0\n0\n3\n''') == '100'\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\nSample Input 3:\n3\n0\n1 1\n1\n1 1\n1\n1\nSample Output 3:\n100\n001\n010\n101\n110\n111\n''') == '10010'\nassert solution('''\n4\n1\n1 1\n1\n0\nSample Output 4:\n0111\n0011\n0000\n0001\n0110\n0010\n0101\n0001\n''') == '0111010'\nassert solution('''\n6\n0\n1 1\n1\n1 1\n1\n1\n0\nSample Output 5:\n0101\n0011\n0110\n0010\n0101\n0001\n''') == '0101100'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '100'\n\nstdin = \\\n\"\"\"\n3\n0\n0\n0\n3\n0\n0\n0\n0\n1\n1\n0\n1\n1\n1\n0\n0\n1\n0\n1\n0\n0\n0\n0\n1\n0\n1\n0\n1\n0\n1\n0\n1\n0\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '100'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"100\\n000\"\nassert solution(\"3\") == \"001\\n100\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1001\\n0010\\n0101\\n0110\\n0000'\nassert solution('''\n5\n0\n1 1\n1\n1 1\n1\n1\nSample Output 3:\n100000\n11101000\n010101010\n110101010\n0110101010\n''') == '100000\\n010101010\\n11101000\\n0110101010\\n110101010\\n'\nassert solution('''\n6\n2 3 3 2 3 2\n2 2 3 1 1 1\n2 3 2 3 1 1\n2 3 2 3 1 1\n2 2 3 2 1 1\n2 2 2 2 1 1\n''') == '00100\\n01010\\n00100\\n01010\\n10010\\n10010\\n'''\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '100'\nassert solution('2') == '00'\nassert solution('3') == '100'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n0\n1 1\n1\n1 1\n1\n1\n''') == '100'\nassert solution('''3\n0\n1 1\n1\n1 1\n1\n1\n''') == '001010'\nassert solution('''2\n0\n0\n1\n0\n0\n0\n''') == '000'\nassert solution('''3\n0\n1 1\n1\n1 1\n1\n1\n''') == '010'\nassert solution('''4\n0\n0\n1 1\n1\n1 1\n1\n1\n''') == '001010'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0\n0\n1\n2\n0\n0\n\"\"\") == \"100\"\nassert solution(\"\"\"\n3\n0\n1 1\n1\n1 1\n1\n1\n\"\"\") == \"00101\"\nassert solution(\"\"\"\n2\n1 1\n1\n1\n\"\"\") == \"010\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 1\n1 2\n2 3\n2 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3 1\n1 2\n2 3\n2 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 1\n1 3\n4 6\n7 8\n2 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4 1\n1 3\n4 6\n7 8\n2 5\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5 1\n1 3\n5 6\n7 8\n2 5\n\"\"\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5 1\n1 3\n2 3\n2 3\n2 3\nSample Input 3:\n10 1\n0 2\n2 5\n6 6\n6 5\n4 7\n1 3\n3 4\n5 2\nSample Output 3:\n10\n\"\"\") == \"3\""
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    3 1\n    1 2\n    2 3\n    2 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n    4 1\n    1 3\n    4 6\n    7 8\n    2 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n    5 1\n    1 3\n    4 6\n    7 8\n    2 5\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n    6 1\n    1 3\n    4 6\n    7 8\n    2 5\n    3 6\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 1') == '3'"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 2') == '2'\nassert solution('4 1') == '3'\nassert solution('4 6') == '3'\nassert solution('7 8') == '4'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1\n1 2\n2 3\n\"\"\") == \"2\""
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 1\\n1 2\\n2 3\") == \"2\"\nassert solution(\n    \"4 1\\n1 3\\n4 6\\n7 8\\n2 5\") == \"3\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1\n1 2\n2 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 1\n1 3\n4 6\n7 8\n2 5\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 500') == '126.86989765'\nassert solution('5 10 5') == '134.29395975'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6 500\") == \"90.00000000\"\nassert solution(\"5 6 450\") == \"126.86989765\"\nassert solution(\"5 6 500\") == \"Impossible\"\nassert solution(\"5 6 300\") == \"Impossible\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6 500\") == \"90.00000000\"\nassert solution(\"5 6 450\") == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.00000000'\nassert solution('''\n5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '126.86989765'\nassert solution('''\n0 1 2\n1 2 3\n2 3 4\n3 4 5\n''') == 'Impossible'"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '90.0'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\nSample Output 1:\n90.00000000''') == '90.00000000'''\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6 500\") == \"90.00000000\"\nassert solution(\"5 6 400\") == \"Impossible\"\nassert solution(\"5 6 500\") == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\nSample Output 1:\n90.00000000\n\nSample Input 2:\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\nSample Output 2:\n126.86989765\n''') == '90.00000000\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6 500\") == \"90.00000000\"\nassert solution(\"5 6 500\") == \"126.86989765\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 450') == '126.86989765'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"7\"\nassert solution(input_data=\"1234\") == \"4\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\nassert solution(\"10000000000000\") == \"7\"\nassert solution(\"10000000000\") == \"7\"\nassert solution(\"100000000\") == \"7\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2147483648\") == \"8\"\nassert solution(\"2147483647\") == \"9\"\nassert solution(\"27\") == \"4\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\""
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\nassert solution('1000') == '1000'\nassert solution('0') == '0'"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\nassert solution(\"3 3 3\") == \"7.5\"\nassert solution(\"3 3 4\") == \"7.5\"\nassert solution(\"2 3 4\") == \"2.75\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4.9'\nassert solution(\"2 3 1\") == '3.5'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1') == '1.5'\nassert solution('2 2 2') == '2.0'\nassert solution('2 1 2') == '2.0'\nassert solution('4 4 4') == '4.0'\nassert solution('4 4 4') == '4.0'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3.5\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 3 1\"\n) == \"3.5\"\nassert solution(\n    \"3 3 2\"\n) == \"4.9\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n\nstdin = \"\"\"\n3 3 2\n\"\"\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\nprint(solution('''\n2 3 1\n'''))\nprint(solution('''\n3 3 2\n'''))"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\nassert solution(\"2 3 1\") == \"3.5\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 5 1 5\n''') == '19'\n'''\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 1 5\") == \"19\"\nassert solution(\"1 2 1 2\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5 4') == '19'"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 5 1 5\n''') == '19'\nassert solution('''\n12 12 1 12\n''') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\""
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\nassert solution('1 5 3 5') == '0'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 1 3 4') == '3'\nassert solution('1 2 5 4') == '5'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n1 1\\n1 3') == '1 1\\n1 2\\n1 3'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"1 3 5\"\"\") == \"4\"\nassert solution(r\"\"\"5 1 2\"\"\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(['car']) == '1'\nassert solution(['cocar']) == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\nprint(f\"AC! {solution(input())}\")\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\ncocar\ncar''') == '1'\nassert solution('''\ncocar\ncocar''') == '2'\nassert solution('''\ncar\ncocar''') == '1'\nassert solution('''\ncar\ncar''') == '2'\nassert solution('''\na''') == '1'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''car\ncocar\ncar\n''') == '1'\nassert solution('''cocar\ncocar\ncar\n''') == '2'\nassert solution('''cocar\ncocar\ncar\n''') == '2'\nassert solution('''cocar\ncar\ncocar\n''') == '3'\nassert solution('''cocar\ncocar\ncar\n''') == '3'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\nprint(solution(input()))\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1000000 1 1 1 1\\n') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n0 2 0 1') == '8'\nassert solution('5\\n1000000 1 1 1 1') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\n1000000 1 1 1 1\"\n) == \"0\"\nassert solution(\n    \"5\\n1000000 1 1 1 1\"\n) == \"0\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"1000000\") == \"8\""
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n0 2 0 1') == \"8\"\nassert solution('5\\n1000000 1 1 1 1') == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1000000 1 1 1 1\\n') == '0'\nassert solution('10\\n1000000 1 1 1 1 1\\n') == '8'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"10\"\nassert solution(\"5\") == \"18\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1\\n1\\n'\nassert solution('4') == '1\\n1\\n1\\n'\nassert solution('5') == '0\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 5''') == '3'\nassert solution('''4\n0 2 0 1''') == '8'\nassert solution('''5\n1000000 1 1 1 1''') == '0'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 650\nSample Output 1:\nzyz\nSample Output 2:\n-1\n''') == 'zyz'\nassert solution('''2 651\nSample Output 1:\n-1\nSample Output 2:\nzyz\n''') == 'zyz'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'zyz'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'zyz'\nassert solution('2') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 1 2\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 650') == 'zyz'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"zyz\"\nassert solution(input()) == \"-\"\n'''\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 652\") == \"zyz\"\nassert solution(\"2 653\") == \"-1\""
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '2'\nassert solution('12') == '3'\nassert solution('22') == '4'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\n\nassert solution('''10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1''') == '8'\n\nassert solution('''10\n10 10 1\n10 10 0\n10 10 1\n5 5 0\n11 2 1\n11 3 0\n8 8 0\n6 6 0\n6 3 1\n6 3 1''') == '7'"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('6') == '4'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n2 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n1 1\\n0 0\\n2 2\\n0 1\\n') == '6'\nassert solution('20\\n20\\n19 1\\n1 1\\n17 0\\n0 0\\n5 2\\n10 3\\n10 4\\n7 5\\n8 4\\n6 7\\n11 1\\n11 2\\n3 4\\n5 4\\n7 5\\n12 5\\n12 6\\n5 7\\n6 7\\n4 7\\n3 7\\n1 7\\n10 4\\n11 5\\n12 6\\n4 1\\n4 2\\n5 1\\n6 1\\n7 5\\n10 4\\n11 5\\n12 6\\n4 1\\n4 2\\n5 1\\n6 1\\n7 5\\n10 4\\n11 5\\n12 6\\n4 1\\n4 2\\n5 1\\n6 1\\n7 5\\n10 4\\n11 5\\n12 6\\n4 1\\n4 2\\n5 1\\n6 1\\n7 5\\n10 4\\n11 5\\n12 6\\n4 1\\n4 2\\n5 1\\n6 1\\n7 5\\n10 4\\n11 5\\n12 6\\n4 1\\n4 2\\n5 1\\n6 1\\n7 5\\n') == '12'"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\nassert solution('''10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1''') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nassert solution('''\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\") == \"4\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\") == \"8\"\nassert solution(\"8\\n7 1 0\\n0 6 1\\n6 1 1\\n4 3 0\\n4 5 0\\n4 1 0\") == \"7\""
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2\"\nassert solution('3') == \"3\"\nassert solution('4') == \"4\"\nassert solution('5') == \"5\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"6 0 10 0\") == \"4\"\nassert solution(\"10 0 1\") == \"1\"\nassert solution(\"12 8 1\") == \"1\"\nassert solution(\"5 5 0\") == \"4\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4 3\n3 4 5 7\n1 2 10\n''') == '0'\nassert solution('''\n3 5 2\n1 4 7 9 11\n2 3\n''') == '2'\n\nimport sys\nfrom typing import List\nfrom collections import deque\n\nn, e, d = list(map(int, sys.stdin.readline().split()))\ne_cards = list(map(int, sys.stdin.readline().split()))\nd_cards = list(map(int, sys.stdin.readline().split()))\n\nexplosions = deque()\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10\\n') == '0'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 3') == '0'\nassert solution('3 5 2') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 3\") == \"0\"\nassert solution(\"3 5 2\") == \"2\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 3\") == \"0\"\nassert solution(\"3 5 2\") == \"2\"\nassert solution(\"1 2 10\") == \"1\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4 3\n3 4 5 7\n1 2 10\n''') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 3\") == \"0\"\nassert solution(\"3 5 2\") == \"2\"\nassert solution(\"5 2 1\") == \"1\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\nassert solution('3 5 2') == '2'\nassert solution('3 5 2', '1 4 7 9 11') == '2'\n\"\"\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\n\n'''\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution('1\\n2\\n') == '0'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    2 2\n    2 2\n    \"\"\") == \"1\"\n\nassert solution(\n    \"\"\"\n    1 2\n    3 4\n    \"\"\") == \"3\"\n\nassert solution(\n    \"\"\"\n    3 1\n    2 2\n    \"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n    1 1\n    2 2\n    \"\"\") == \"0\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 3\n3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 2\n3 4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '1'\nassert solution('1 3') == '1'"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n3 2\n''') == '1'\n\nassert solution('''\n1 2\n3 4\n''') == '3'\n\nassert solution('''\n-2 -1\n''') == '2'\n\nassert solution('''\n0 -2\n''') == '0'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 3\"\n    ) == \"1\"\nassert solution(\n    \"1 2\"\n    ) == \"3\""
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '2'"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '3'"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\nIVO\\nJASNA\\nJOSIPA') == '4\\n'\nassert solution('5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA') == '24\\n'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '24'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nIVO\\nJOSIPA') == '4'\nassert solution('2\\nIVO\\nJOSIPA') == '7'\nassert solution('3\\nIVO\\nJOSIPA') == '24'\nprint('All test cases passed!')"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == \"4\"\nassert solution(\"\"\"\n3\nIVO\nJASNA\nJOSIPA\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA\n\"\"\") == \"24\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"24\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA\n''') == '4', 'First'\n\nassert solution('''\n3\nIVO\nJASNA\nJOSIPA\n''') == '1', 'Second'\n'''\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '24'\nassert solution('5') == '25'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\nIVO\nJASNA\nJOSIPA\n\"\"\") == \"4\", \"Should be 4\"\nassert solution(\"\"\"\n5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA\n\"\"\") == \"24\", \"Should be 24\"\nassert solution(\"\"\"\n3\nMAR\nMAR\n\"\"\") == \"3\", \"Should be 3\""
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nIVO\\nJASNA\\nJOSIPA\\n') == '4'\nprint('Done!')"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '24'\nprint(solution(input()))"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 1\n2 3 4 1\n3 4 5 1\n1 9 4 7\n1 6 8 9''') == '39'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '39'\nassert solution('4') == '27'\nassert solution('5') == '16'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3 1') == '3'\nassert solution('3\\n2 1 3') == '3'\nassert solution('3\\n1 2 3') == '1'\nassert solution('3\\n3 2 1') == '3'\nassert solution('3\\n3 1 2') == '2'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3', \"First\"\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39', \"Second\""
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    1 2 3 1\n    2 3 4 1\n    3 4 5 1\n    ''') == '3'\n\nassert solution('''\n    5 5 5 3 3 4 3 2\n    ''') == '1'\n\nassert solution('''\n    4 5 5 4 3 2\n    ''') == '1'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"39\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 2 3 8\n3 1 5 6\n1 9 4 7''') == '39'\nassert solution('''4\n1 2 3 5\n5 2 3 5\n3 2 1 5\n3 5 1 5''') == '28'\nassert solution('''8\n1 2 3 4\n4 5 6 7\n5 6 7 8\n4 1 3 2\n2 4 7 5\n1 3 7 5\n2 6 8 4\n3 8 7 4''') == '52'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n2 3 4 6 7 8 9 10 11\n3 5 6 9 10 11 12 13\n4 6 7 11 12 13 14 15\n5 7 11 14 15 16 17 18\n6 8 11 16 17 18 19 20\n7 9 11 18 19 20 21 22\n8 10 11 18 20 21 22 23\n9 10 11 18 20 21 23 24\n10 11 18 20 21 23 24 25\n11 12 13 14 15 16 17 18\n12 13 14 16 17 18 19 20\n13 14 15 16 17 19 20 21\n14 15 16 17 19 20 21 22\n15 16 17 19 20 21 22 23\n16 17 19 20 21 23 24 25\n17 19 20 21 23 24 25 26\n18 19 20 21 23 24 25 26 27\n19 20 21 23 24 25 26 27 28''') == '2322'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n2 3 4 6 7 8 9 10 11\n3 5 6 9 10 11 12 13\n4 6 7 11 12 13 14 15\n5 7 11 14 15 16 17 18\n6 8 11 16 17 18 19 20\n7 9 11 18 19 20 21 22\n8 10 11 18 20 21 22 23\n9 10 11 18 20 21 23 24\n10 11 18 20 21 23 24 25\n11 12 13 14 15 16 17 18\n12 13 14 16 17 18 19 20\n13 14 15 16 17 19 20 21\n14 15 16 17 19 20 21 22\n15 16 17 19 20 21 22 23\n16 17 19 20 21 23 24 25\n17 19 20 21 23 24 25 26\n18 19 20 21 23 24 25 26 27\n19 20 21 23 24 25 26 27 28''') == '2112'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '39'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 1\n2 3 4 1\n3 4 5 1\n3 4 5 2\n3 5 6 1\n\"\"\") == \"39\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0.0\"\nassert solution(\"2\") == \"5.2696518641\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1''') == '5.2696518641'\nassert solution('''1\n8 9 3 -14 -14 14 -14 0 20''') == '9'\nassert solution('''1\n10 10 1 -100 -100 100 -100''') == '100'\nprint('Tests passed')\n\n\"\"\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution('''\n1\n8 9 3 -14 -14 14 -14 0 20\n''') == '9'\nassert solution('''\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\n\n__EXAMPLE__ = \"\"\"\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\"\n__REQUIRED__ = True\n__SECOND_ATTEMPT__ = 'Wrong'\n__THIRD_ATTEMPT__ = 'Wrong'\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert Solution().solution(__EXAMPLE__) == __SECOND_ATTEMPT__\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert Solution().solution(__EXAMPLE__) == __THIRD_ATTEMPT__\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"5.2696518641\"\nassert solution(\"1\") == \"9\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3 4 5\n6 4 5\n5 3 4\n''') == '4.25'\nassert solution('''5\n7 4\n2 3 5 6 3 1\n3 7 5\n5 2 1 3\n1 2 2 3\n''') == '0.56'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n8 4 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '9'\nassert solution('''1\n8 9 3 -14 -14 14 -14 0 20\n''') == '9'\nassert solution('''5\n8 9 3 -14 -14 14 -14 0 20\n''') == '9.965291162'"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 5 6\n6 10 4 5 -4\n-1 -2 4 3\n''') == '5.4'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '5.2696518641'\nassert solution('1') == '9'"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9.45\"\nassert solution(\"2\") == \"9.45\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n8 9 3 -14 -14 14 -14 0 20\\n\") == \"9.2696518641\"\nassert solution(\"2\\n5 8 4 -2 0 0 -3 2 0 0 3\\n8 10 4 -1 -1 1 -1 1 1 -1 1\") == \"5.2696518641\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 1\\n2 0 2\\n3 1 1\") == \"1\"\nassert solution(\"3\\n4 1 1\\n5 2 3\\n5 0 3\") == \"8\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1\\n2 0 2\\n3 1 1') == '1'\nassert solution('4 1 1\\n5 2 3\\n5 0 3') == '8'"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n1 1 1\n2 0 2\n3 1 1\"\"\") == \"1\"\nassert solution(\"\"\"3\n4 1 1\n5 2 3\n5 0 3\"\"\") == \"8\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\\n2 0 2\\n3 1 1\") == \"1\"\nassert solution(\"4 1 1\\n5 2 3\\n5 0 3\") == \"8\"\nassert solution(\"5 4 1\\n5 2 3\\n5 0 3\") == \"24\""
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '1', \"example 1 wrong\"\nassert solution('2 0 2') == '8', \"example 2 wrong\"\nassert solution('3 1 1') == '4', \"example 3 wrong\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '8'\nassert solution('5') == '4'\nassert solution('1 1 1') == '1'\nassert solution('2 0 2') == '4'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3\n1 1 1\n2 0 2\n3 1 1\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '1', solution('1 1 1')\nassert solution('2 0 2') == '4', solution('2 0 2')\nassert solution('3 1 1') == '-1', solution('3 1 1')\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"6\"\nassert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == \"1\"\nassert solution('2 0 2') == \"8\"\nassert solution('3 1 1') == \"4\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\nassert solution('4 5') == '4 5 6 7'\nassert solution('6 9') == '4545454546'\n\nstdin = \"\"\"\n2 2\n\"\"\"\nassert solution(stdin
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\nprint('all tests passed')"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 1\") == \"3\"\nassert solution(\"6 6\") == \"240\"\nassert solution(\"3 5 1\") == \"4\"\nassert solution(\"6 6\") == \"240\"\nassert solution(\"4 2 1\") == \"4\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3'\nassert solution('6 6') == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n') == '3'\nassert solution('3 2\\n') == '3'\nassert solution('4 4\\n') == '12'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == \"9\"\nassert solution('6 6') == \"240\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n''') == '3'\nassert solution('''\n6 6\n''') == '240'\nassert solution('''\n3 4\n''') == '3'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '3'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6 6\n\"\"\") == \"240\"\n\nassert solution(\"\"\"\n10 10\n\"\"\") == \"10000\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\nassert solution('10 10') == '48192'\nassert solution('100 10') == '48192'\nassert solution('1000000 1000000') == '271677726'\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n\nThe input puzzle must be in the form $w_1$+$w_2$=$w_3$. All characters must be in uppercase. The word length may be in any order.\n\nYour program should work regardless of the order in which words are input.\n\"\"\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''SEND+MORE=MONEY''') == '9567+1085=10652'\nassert solution('''A+A=A''') == 'impossible'"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"9567+1085=10652\", \"Your result does not match expected result\"\nassert solution(sample_input_2) == \"impossible\", \"Your result does not match expected result\""
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n\n--\n\nSolution from leetcode\nhttps://leetcode.com/problems/replace-words/discuss/790024/JavaC%2B%2BPython-Simple-solution-using-two-arrays\n\nclass Solution:\n    def replaceWords(self, s: str) -> str:\n        res = []\n        for word in s.split():\n            if word in replacements:\n                res.extend(replacements[word])\n            else:\n                res.append(word)\n        return''.join(res)\n\nclass Solution:\n    def replaceWords(self, s: str) -> str:\n        trie = {}\n        for word in replacements:\n            trie[word] = True\n        \n        res = []\n        for word in s.split():\n            if word in trie:\n                res.extend(replacements[word])\n            else:\n                res.append(word)\n        return''.join(res)\n\nThe time complexity of solution 1 is O(n). If we put replacement array as an array of size n, we will have a quadratic time complexity.\n\nSo, if we want to replace all words with the same length, it is O(n^2).\n\nThe time complexity of solution 2 is O(n). This is similar to solution 1, but it is O(n * n) as we loop through the length of the string.\n\nThe time complexity of solution 3 is O(n^2). \n\nThe time complexity of solution 4 is O(n * n).\n\nThe time complexity of solution 5 is O(n).\n\nThe time complexity of solution 6 is O(n).\n\nThe time complexity of solution 7 is O(n).\n\nThe time complexity of solution 8 is O(n).\n\nThe time complexity of solution 9 is O(n).\n\nThe time complexity of solution 10 is O(n).\n\nThe time complexity of solution 11 is O(n).\n\nThe time complexity of solution 12 is O(n).\n\nThe time complexity of solution 13 is O(n).\n\nThe time complexity of solution 14 is O(n).\n\nThe time complexity of solution 15 is O(n).\n\nThe time complexity of solution 16 is O(n).\n\nThe time complexity of solution 17 is O(n).\n\nThe time complexity of solution 18 is O(n).\n\nThe time complexity of solution 19 is O(n).\n\nThe time complexity of solution 20 is O(n).\n\nThe time complexity of solution 21 is O(n).\n\nThe time complexity of solution 22 is O(n).\n\nThe time complexity of solution 23 is O(n).\n\nThe time complexity of solution 24 is O(n).\n\nThe time complexity of solution 25 is O(n).\n\nThe time complexity of solution 26 is O(n).\n\nThe time complexity of solution 27 is O(n).\n\nThe time complexity of solution 28 is O(n).\n\nThe time complexity of solution 29 is O(n).\n\nThe time complexity of solution 30 is O(n).\n\nThe time complexity of solution 31 is O(n).\n\nThe time complexity of solution 32 is O(n).\n\nThe time complexity of solution 33 is O(n).\n\nThe time complexity of solution 34 is O(n).\n\nThe time complexity of solution 35 is O(n).\n\nThe time complexity of solution 36 is O(n).\n\nThe time complexity of solution 37 is O(n).\n\nThe time complexity of solution 38 is O(n).\n\nThe time complexity of solution 39 is O(n).\n\nThe time complexity of solution 40 is O(n).\n\nThe time complexity of solution 41 is O(n).\n\nThe time complexity of solution 42 is O(n).\n\nThe time complexity of solution 43 is O(n).\n\nThe time complexity of solution 44 is O(n).\n\nThe time complexity of solution 45 is O(n).\n\nThe time complexity of solution 46 is O(n).\n\nThe time complexity of solution 47 is O(n).\n\nThe time complexity of solution 48 is O(n).\n\nThe time complexity of solution 49 is O(n).\n\nThe time complexity of solution 50 is O(n).\n\nThe time complexity of solution 51 is O(n).\n\nThe time complexity of solution 52 is O(n).\n\nThe time complexity of solution 53 is O(n).\n\nThe time complexity of solution 54 is O(n).\n\nThe time complexity of solution 55 is O(n).\n\nThe time complexity of solution 56 is O(n).\n\nThe time complexity of solution 57 is O(n).\n\nThe time complexity of solution 58 is O(n).\n\nThe time complexity of solution 59 is O(n).\n\nThe time complexity of solution 60 is O(n).\n\nThe time complexity of solution 61 is O(n).\n\nThe time complexity of solution 62 is O(n).\n\nThe time complexity of solution 63 is O(n).\n\nThe time complexity of solution 64 is O(n).\n\nThe time complexity of solution 65 is O(n).\n\nThe time complexity of solution 66 is O(n).\n\nThe time complexity of solution 67 is O(n).\n\nThe time complexity of solution 68 is O(n).\n\nThe time complexity of solution 69 is O(n).\n\nThe time complexity of solution 70 is O(n).\n\nThe time complexity of solution 71 is O(n).\n\nThe time complexity of solution 72 is O(n).\n\nThe time complexity of solution 73 is O(n).\n\nThe time complexity of solution 74 is O(n).\n\nThe time complexity of solution 75 is O(n).\n\nThe time complexity of solution 76 is O(n).\n\nThe time complexity of solution 77 is O(n).\n\nThe time complexity of solution 78 is O(n)."
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    'SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution(\n    'A+A=A') == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"impossible\"\n'''"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''SEND+MORE=MONEY\nA+A=A''') == '9567+1085=10652'\nassert solution('''A+A=A''') == 'impossible'\nassert solution('''A=0''') == 'impossible'\n''')\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''SEND+MORE=MONEY''') == '9567+1085=10652'\nassert solution('''A+A=A''') == 'impossible'"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 2 3\n''') == '14'\nassert solution('''\n5\n1 1 2 1 1\n''') == '1'\nassert solution('''\n20\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n''') == '5'\nassert solution('''\n3\n1 1 1\n''') == '5'\nassert solution('''\n100\n
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 2 3') == '1'\nassert solution('1 1 2 1') == '0'\nassert solution('2 1 2 1') == '1'\nassert solution('2 3 5 4 2') == '4'\nassert solution('3 2 3 2') == '2'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 1 2 3\n''') == '14'\nassert solution('''\n5\n1 1 2 1 1\n''') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '1 2 3 4 5 6 7 8 9'\n) == '14'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '1'"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\""
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0 1 2 3 4\n''') == '14'"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '88'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'\n'''\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == \"88\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '88'\nassert solution('4 4') == '-1'\nassert solution('6 5') == '86'"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\", \"First Example\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\", \"Second Example\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n10 0 0 11\\n11 0 0 12\\n12 0 0 13\\n13 0 0 14\\n14 0 0 15\") == \"3904\", \"Third Example\""
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"88\"\nassert solution(\"\"\"\n5 5\n0 0 0 0 0\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n\"\"\") == \"113\"\nassert solution(\"\"\"\n7 7\n1 2 3 0 0 0 0\n4 5 6 7 8 9 10\n11 12 13 14 15 16 17\n18 19 20 21 22 23 24\n25 26 27 28 29 30 31\n32 33 34 35 36 37 38\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == '88', \"Should be 88\"\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == '-1', \"Should be -1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '88'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n4 0 0 11''') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"1 10\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"5 6\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n12 13 14\\n\") == \"12\"\nassert solution(\"5 6\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n12 13 14\\n\") == \"12\"\nassert solution(\"5 6\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n12 13 14\\n\") == \"12\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n''') == '88'\n'''\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"88\"\n\nassert solution(\"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"88\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 1\n1 1\n''') == '0.000'\nassert solution('''\n1\n1 1\n''') == '0.000'\nassert solution('''\n4\n1 99999\n9999 99999\n99999 99999\n9999 99999\n''') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"9999700002.000\"\nassert solution(\"1 1\") == \"0.000\"\nassert solution(\"1 99999\") == \"9999700002.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n1 1\n''') == '0.000'\nassert solution('''\n2\n1 99999\n99999 99999\n''') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 1\n1 1\n''') == '0.000'\nassert solution('''\n2\n9999999999999 99999\n9999999999999 99999\n''') == '9999700002.000'"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 1\n1 1\n1 1\n''') == '1.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n1 1') == '0.000'\nassert solution('5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '1.000'\nassert solution('7\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1\\n1 1') == '0.000'\nassert solution('2\\n1 99999\\n99999 99999') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    2\n    1 1\n    1 1\n    ''') == '0.000'\nassert solution('''\n    2\n    1 99999\n    99999 99999\n    ''') == '9999700002.000'\n''')\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1 1') == '0.000'\nassert solution('2\\n1 99999') == '9999700002.000'"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5''') == '3'\nassert solution('''\n5 7 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\nSample Output 2:\nInfinity''') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 8 1 6\") == \"3\"\nassert solution(\"4 4 1 2\") == \"4\"\nassert solution(\"3 4 1 2\") == \"3\"\nassert solution(\"6 4 1 2\") == \"0\""
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 8 1 6') == '3'\nassert solution('3 4 1 2') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6 8 1 6\\n\"\n    \"1 2 5\\n\"\n    \"1 3 1\\n\"\n    \"2 6 6\\n\"\n    \"2 3 6\\n\"\n    \"4 2 3\\n\"\n    \"3 4 1\\n\"\n    \"4 5 1\\n\"\n    \"5 6 1\\n\"\n    \"5\"\n    ) == \"3\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 1 2\") == \"3\"\nassert solution(\"2 3 4 5\") == \"3\"\nassert solution(\"3 4 1 5\") == \"Infinity\"\nassert solution(\"5 5 2 1 4\") == \"3\""
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"6 8 1 6\\n\"\n    \"1 2 5\\n\"\n    \"1 3 1\\n\"\n    \"2 6 6\\n\"\n    \"2 3 6\\n\"\n    \"4 2 3\\n\"\n    \"3 4 1\\n\"\n    \"4 5 1\\n\"\n    \"5 6 1\\n\"\n    \"5\\n\"\n    \"1 3 6 5 4\\n\"\n) == \"3\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\nassert solution('''\n5 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4') == '3'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"impossible\"\nassert solution(\"3 1\") == \"000\"\nassert solution(\"4 1\") == \"001\"\nassert solution(\"5 1\") == \"010\"\nassert solution(\"6 1\") == \"011\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"impossible\"\nassert solution(\"3 1\") == \"000\"\nassert solution(\"4 1\") == \"000\"\nassert solution(\"5 1\") == \"000\"\nassert solution(\"6 1\") == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == 'impossible'\nassert solution('3 1') == '000'\nassert solution('5 1') == '0000'\nassert solution('4 1') == '00000'\nassert solution('6 2') == '0000010101'\n\n--We are given n=6 and P = {6} so the output is:\n\n--Solution:\n\n6 2\n0000\n00010\n00011\n00110\n00111\n01101\n01110\n01111\n10100\n10101\n10111\n11000\n11001\n11010\n11011\n11100\n11101\n11110\n11111\n11111\n\n--Solution:\n\n5 2\n0000\n00011\n00010\n00110\n00111\n01110\n01101\n01100\n11000\n11001\n11010\n11011\n11100\n11101\n11110\n11111\n11111\n\n--Solution:\n\n4 2\n0000\n00011\n00010\n00110\n00111\n01100\n01101\n01110\n11000\n11001\n11010\n11011\n11100\n11101\n11110\n11111\n11111\n\n--Solution:\n\n3 2\n0000\n00010\n00011\n00110\n00111\n01110\n01101\n01100\n11000\n11001\n11010\n11011\n11100\n11101\n11110\n11111\n11111\n\n--Solution:\n\n2 2\n00100\n01000\n01100\n00100\n01100\n10000\n10001\n10010\n10011\n10100\n10101\n10110\n10111\n11000\n11001\n11010\n11011\n11100\n11101\n11110\n11111\n11111\n\n--Solution:\n\n1 2\n00000\n01000\n01100\n00100\n01100\n10000\n10001\n10010\n10011\n10100\n10101\n10110\n10111\n11000\n11001\n11010\n11011\n11100\n11101\n11110\n11111\n11111\n\n--Solution:\n\n0 2\n00000000\n00000001\n00000010\n00000011\n00000100\n00000101\n00000110\n00000111\n00001000\n00001001\n00001010\n00001011\n00001100\n00001101\n00001110\n00001111\n00010000\n00010001\n00010010\n00010011\n00010100\n00010101\n00010110\n00010111\n00011000\n00011001\n00011010\n00011011\n00011100\n00011101\n00011110\n00011111\n0010000\n00100010\n00100020\n00100021\n00100030\n00100031\n00100100\n00100101\n00100110\n00100111\n00100200\n00100201\n00100210\n00100211\n00101000\n00101001\n00101010\n00101011\n00101100\n00101101\n00101110\n00101111\n00101200\n00101201\n00101210\n00101211\n00110000\n00110001\n00110010\n00110011\n00110100\n00110101\n00110110\n00110111\n00111000\n00111001\n00111010\n00111011\n00111100\n00111101\n00111110\n00111111\n01000000\n01000001\n01000010\n01000011\n01000100\n01000101\n01000110\n01000111\n01001000\n01001001\n01001010\n01001011\n01001100\n01001101\n01001110\n01001111\n010100000\n01010000\n01010001\n01010010\n01010011\n01010100\n01010101\n01010110\n01010111\n01011000\n01011001\n01011010\n01011011\n01011100\n01011101\n01011110\n01011111\n01100000\n01100001\n01100010\n01100011\n01100100\n01100101\n01100110\n01100111\n01101000\n01101001\n01101010\n01101011\n01101100\n01101101\n01101110\n01101111\n01110000\n01110001\n01110010\n01110011\n01110100\n01110101\n01110110\n01110111\n01111000\n01111001\n01111010\n01111011\n01111100\n01111101\n01111110\n01111111\n\n\"\"\""
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1') == 'impossible'\nassert solution('3 1') == '000 011 010 110 111 100'\nassert solution('4 2') == '010 100 011 010'"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == 'impossible'\nassert solution('3 1') == '000'\nassert solution('3 1') == '111'\nassert solution('6 1') == '000'\nassert solution('3 1') == '111'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"impossible\"\nassert solution(\"6 1\") == \"000\"\nassert solution(\"6 2\") == \"000\"\nassert solution(\"6 3\") == \"000\"\nassert solution(\"6 4\") == \"000\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1') == 'impossible'\nassert solution('3 1') == '000'"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '100'\nassert solution('3') == '110'\nassert solution('4') == '101'\nassert solution('5') == '111'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3 1\\n1') == '000\\n001\\n011'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1') == 'impossible'\nassert solution('3 1') == '000'\nassert solution('2 4') == '0000'\nassert solution('10 3') == '010110'\nassert solution('12 2') == '111101'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"2\"\nassert solution(\"90\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\\n99\") == \"1\"\nassert solution(\"90\\n10\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '10'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '10'\nassert solution('100') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"90\") == \"10\"\nassert solution(\"90\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"10\"\nassert solution(\"90\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('91') == '1'\nassert solution('999') == '1'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"1\"\nassert solution(\"90\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '2'\nassert solution('90') == '10'\nassert solution
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2 3\n4 1 10\n2 7 3\n''') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 3 3\n4 1 10\n2 7 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n3 1 3 3\n5 8 7 10\n4 1 2 6\nSample Output 3:\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\nassert solution('''\n4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\nassert solution('''\n5\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '0'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\nassert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2\n2 1\n''') == '1'\nassert solution('''4\n1 2 3\n5 8 7\n4 1 2\n6 3 4\n''') == '2'\nassert solution('''5\n3 1 2 3 1\n4 8 7 2\n2 1 4 5\n5 6 3\n''') == '3'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 1 3 3\") == \"2\"\nassert solution(\"4\\n5 8 7 10\") == \"1\"\nassert solution(\"6\\n3 1 3 3\\n2 7 3\\n4 1 2 6\") == \"1\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nbeginning\n1 5\n4 8\n1 9\n''') == '5'\n'''\n''')"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == \"17\"\nassert solution(\"beginning\") == \"5\"\nassert solution(\"1 5\") == \"11\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '6', 'Should output 5'\nassert solution('10 3') == '7', 'Should output 7'\nassert solution('10 4') == '8', 'Should output 8'\nassert solution('3 6') == '4', 'Should output 4'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9 3\\nbeginning\\n1 5\\n4 8\\n1 9\\n') == '5'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('beginning') == '5'\nassert solution('velvet') == '7'\nassert solution('asdfasdf') == '5'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '7'\nassert solution('9 3') == '11'\nassert solution('9 2') == '12'\nassert solution('10 10') == '17'\nassert solution('100 100') == '214'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1') == '7'\n\nassert solution('9 3') == '11'"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"A\"\nassert solution(\"AB\") == \"AB\"\nassert solution(\"ABB\") == \"ABB\"\nassert solution(\"ABBB\") == \"ABBB\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 2') == '10'\nassert solution('7 1') == '7'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 4\n3 1\n2 2\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2 3\n1 23\n2 17\n\"\"\") == \"23\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '2'\nassert solution('1 2') == '2'\nassert solution('1 2') == '1'"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2'\nassert solution('2 3') == '2'\n\nprint(solution(input))"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4') == '2'\nassert solution('2 3') == '23'\nassert solution('1 1') == '1'\nassert solution('3 1') == '3'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 4\n3 1\n2 2\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n2 1\n1 2\n3 4\n1 2\n2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1\n''') == '2'\nassert solution('''4 2\n4 5\n2 4\n1 3\n''') == '4'"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n1 23\\n2 17\") == \"23\"\nassert solution(\"10 3\\n2 2\\n1 2\\n7 1\\n4 1\\n3 3\\n7 2\\n8 2\\n5 1\\n7 1\\n6 3\\n9 3\\n10 2\\n1 1\\n1 1\\n1 3\\n3 1\\n4 2\\n3 2\\n5 2\\n4 1\\n6 4\\n5 2\\n2 2\\n6 3\\n7 3\\n8 2\\n3 2\\n4 3\\n5 3\\n6 4\\n7 3\\n8 3\\n9 2\\n10 3\") == \"4\"\n\"\"\""
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2\\n3 1\\n2 2') == '2'\nassert solution('4 5\\n6 1\\n5 2\\n4 5') == '6'\nassert solution('6 3\\n3 2\\n5 1\\n6 1') == '7'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '2'\nassert solution('2 3') == '23'\nassert solution('1 23') == '23'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '23'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.0000000000'\n\"\"\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n0 0\n2 0\n2 2\n0 2''') == '0.0000000000'\n\nassert solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0''') == '9.476048311178'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'\nassert solution('''\n3\n0 0\n1 0\n0 1\n''') == '0.0000000000'\nassert solution('''\n2\n0 0\n1 0\n0 1\n''') == '0.0000000000'\nassert solution('''\n1\n0\n''') == '0.0000000000'\n'''"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 0\n2 0\n2 2\n''') == '0.0000000000'\nassert solution('''6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1.5000000000000\"\nassert solution(\"3 3\") == \"1.5000000000000\"\nassert solution(\"5 5\") == \"1.5000000000000\"\nassert solution(\"10 20\") == \"1.5000000000000\"\nassert solution(\"20 50\") == \"0.0000000000\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\nassert solution(\n'''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'\nassert solution(\n'''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '3.584315689976'\nassert solution(\n'''\n5\n0 1\n0 3\n3 2\n1 3\n4 0\n''') == '0.0000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0.0000000000\"\nassert solution(\"2\") == \"0.0000000000\"\nassert solution(\"5\") == \"0.0000000000\"\nassert solution(\"5\") == \"0.0000000000\"\nassert solution(\"6\") == \"0.0000000000\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0 1\n2 0\n''') == '0.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0 0\\n1 1\") == \"8.0000000000\"\nassert solution(\"2\\n0 1\\n1 1\") == \"0.200000000\"\nassert solution(\"3\\n0.5 0\\n1 1\") == \"0.40000000000\"\nassert solution(\"4\\n0.5 0\\n1 1\") == \"1.60000000000\"\nassert solution(\"5\\n0.5 0\\n1 1\") == \"0.300000000000\""
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0.0000000000\"\nassert solution(\"5\") == \"8.0000000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '8.0000000000'\nassert solution('3') == '6.0000000000'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n5\n0.2 0\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n''') == '8.0000000000'\nassert solution('''\n1\n2 0\n1 1\n''') == '4.0'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n\"\"\") == \"0.0200000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n0.0 0\\n-0.2 0\\n0 0.20') == '8.0000000000'\nassert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '8.0000000000'\nassert solution('4') == '0.2000000000000'\nassert solution('6') == '0.0'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0.25'\nassert solution('5') == '0.2499999999999999'\nassert solution('8') == '1.25'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000'"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '9 4 3\\n'\n    '1 1 9 9 1 6 6 39 9'\n) == '2'\n\nassert solution(\n    '10 2 2\\n'\n    '1 1 1 1 1 2 2 2 2 2'\n) == '2'"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2 2\n1 1 1 1 1 2 2 2 2 2\n''') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6 4 3\n1 1 9 9 1 6 6 39 9\n\"\"\") == \"2\"\nassert solution(\"\"\"\n9 4 3\n1 1 9 9 1 6 6 39 9\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 2') == '2'\nassert solution('10 2 2') == '2'\nassert solution('10 2 2') == '2'\nassert solution('11 10 2 2') == '2'\nassert solution('10 2 2') == '2'"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1 1 1 2 2 2 2 2') == '2'\nprint(solution(*stdin.split()))"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\\n1 1 9 9 1 6 6 39 9\") == \"2\"\nassert solution(\"5 5 4 2\\n1 1 9 9 1 6 6 39 9\") == \"2\"\nassert solution(\"5 6 4 2\\n1 1 9 9 1 6 6 39 9\") == \"1\""
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n9 4 3\n1 1 9 9 1 6 6 39 9\n''') == '2'\nassert solution('''\n10 2 2\n1 1 1 1 1 2 2 2 2 2\n''') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"2\"\nassert solution(sample_input_2) == \"2\"\nassert solution(input) == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2 3\n1 1 2\n1 2 2\n1 3 2\n2 1 2\n2 2 3\n2 3 3\n3 1 2\n3 2 1''') == '2'\nassert solution('''5 4 3\n1 1 1 1 1 1 2 2 2\n1 2 1 1 1 1 1 1 2 2\n1 3 1 1 1 1 1 2 2 2\n1 4 1 1 1 1 1 1 1 1\n2 1 2 1 1 1 1 1 1\n2 2 2 1 1 1 1 1 1\n2 3 2 1 1 1 1 1 1\n2 4 2 1 1 1 1 1 1\n3 1 2 1 1 1 1 1\n3 2 1 1 1 1 1 1\n3 3 1 1 1 1 1 1\n3 4 1 1 1 1 1 1\n4 1 1 1 1 1 1 1\n4 2 1 1 1 1 1 1\n4 3 1 1 1 1 1 1\n4 4 1 1 1 1 1 1''') == '2'\nassert solution('''5 5 4 3\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n2 1 2 1 1 1 1 1 1\n2 2 2 1 1 1 1 1 1\n2 3 2 1 1 1 1 1 1\n2 4 2 1 1 1 1 1 1\n3 1 2 1 1 1 1 1\n3 2 1 1 1 1 1 1\n3 3 1 1 1 1 1 1\n3 4 1 1 1 1 1 1\n4 1 1 1 1 1 1 1\n4 2 1 1 1 1 1 1\n4 3 1 1 1 1 1 1\n4 4 1 1 1 1 1 1''') == '2'\nassert solution('''10 10 4 3\n1 1 9 9 1 6 6 39 9\n1 1 9 9 1 6 6 39 9\n1 1 9 9 1 6 6 39 9\n1 6 6 6 6 6 6 6 6 6\n1 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6\n6 6 6 6 6 6 6 6 6 6\n7 7 7 7 7 7 7 7 7 7''') == '2'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 2\n1 2 3\n''') == '3.666666667'\nassert solution('''\n4 11 4\n10 10 10 10\n''') == '20.000000000'\nprint('All tests passed!')\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 5\\n1 2 3') == '5.0'\nassert solution('2 2 7\\n1 2 3') == '7.0'\nassert solution('2 3 4\\n10 10 10 10') == '12.0'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 2 3\n1 2 3\n\"\"\") == \"3.666666667\"\nassert solution(\"\"\"\n1 2 3\n1 2 3\n\"\"\") == \"3.666666667\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3 2\n1 2 3\n''') == '3.666666667'\nassert solution('''4 11 4\n10 10 10 10\n''') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'''"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\n\"\"\"\n\n\nimport math"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 42]) == 2\nassert solution([5, 123456789]) == 16317634\nprint('Congratulations, have you solved this problem!')\nhelp(solution)\n\n'''"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\nprint(solution(input()))\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n2\n''') == '1'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([42, 1]) == '2'\nassert solution([123456789, 5]) == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('4 5') == '3'\nassert solution('4 5000000') == '3'\nassert solution('5 6') == '5'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\nassert solution('''\n5 1 0 0 2\n1 2 2\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == \"4\"\nassert solution('''\n5 1 0 0 2\n1 2 2\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == \"12\"\nassert solution('''\n10 10 10 10 10\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n''') == \"2551889\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\nassert solution('4 4 2 1 1 2') == '4'\nassert solution('4 4 2 0 1 2') == '5'\nassert solution('3 3 4 4 4 2 3 3') == '7'"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\nassert solution('3 1 1 1 8 9') == '5'\nassert solution('3 1 1 1 8 9 10') == '5'\nassert solution('3 1 1 1 8 9 10 20') == '5'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == \"4\"\nassert solution(input_2) == \"1\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\nassert solution('3 1 1 1 8') == '0'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('1 2 2') == '1'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\n\"\"\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1 0 0 2') == '0'\nassert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\nassert solution('0 1 1 1 8') == '8'\nassert solution('1 2 2') == '0'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '4'\nassert solution('''4 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '8'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\""
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10 10\") == \"3\", \"Should be 3\"\nassert solution(\"5 1 100 100\") == \"3\", \"Should be 3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == \"3\"\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\nSample Output 2:\n3\n''') == \"3\"\nassert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == \"0\"\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\nSample Output 2:\n3\n''') == \"0\"\nassert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == \"3\", \"Sample Test 3 Failed\"\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == \"3\", \"Sample Test 4 Failed\"\n\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1''') == '3'\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\nSample Output 2:\n3''') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 2 3\") == \"0\"\nassert solution(\"5 1 2 3 4\") == \"1\"\nassert solution(\"5 1 2 3 4 5\") == \"0\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"8 8\") == \"3\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"4 6\") == \"1\"\nassert solution(\"4 7\") == \"1\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\nassert solution(\"BBBCCCBB\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABC\\nABC\\nABC\") == \"2\"\nassert solution(\"ABBBAAAA\\nBBBCCCBB\\nCCCCAAAC\\n\") == \"3\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABC\\nABC\\nABC') == '2'\nassert solution('ABBBAAAA\\nBBBCCCBB\\nCCCCAAAC\\n') == '3'\nassert solution('CCCCAAA\\nAAABBA\\nAAABB\\nAABB\\nAABA\\n') == '-1'\nassert solution('AAAAAAAAAAA\\nABABABABA\\nABABABABA\\n') == '-1'\nassert solution('ABBCB') == '-1'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\"\nassert solution(\"BBBCCCBB\") == \"3\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nABC\nABC\nABC\n''') == \"2\"\nassert solution('''\nABBBAAAA\nBBBCCCBB\nCCCCAAAC\n''') == \"3\"\nassert solution('''\nABAB\nBABA\nBABA\n''') == \"0\"\nassert solution('''\nABAABAAB\nBABABABA\nBABABABA\n''') == \"3\"\nprint(solution('''\nABCABCABC\nABCABCABC\nABCABCABC\n'''))\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\"\nassert solution(\"BBBCCCBB\") == \"3\"\nassert solution(\"CCCCAAAC\") == \"4\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''ABC\nABC\nABC''') == '2'\nassert solution('''ABC\nABC\nABC''') == '3'\nassert solution('''ABC\nAB\nAC\n''') == '-1'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\"\nassert solution(\"BBBCCCBB\") == \"3\"\nassert solution(\"CCCCAAAC\") == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 2\nassert solution('BBBCCCBB') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABC') == '2'\nassert solution('ABBBAAAA') == '3'\nassert solution('BBBCCCBB') == '2'\nassert solution('CCCCAAAC') == '1'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nA\\nB\\nAA\\nBBB\\nAAA') == '3'\nassert solution('5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''\n5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == '3'\nassert solution('''\n1\nA\n''') == '1'\nassert solution('''\n1\nA\n''') == '0'\nassert solution('''\n2\nA\n''') == '0'\n'''\n) == '0'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''\n5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('4') == '1'\nassert solution('100') == '1'\nassert solution('100000') == '8'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\nA\nAA\nBBB\nAA\n''') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nAAA\") == \"3\"\nassert solution(\"5\\nA\\nBBB\\nAA\\nBBB\\nAAAAAB\") == \"3\"\nassert solution(\"5\\nA\\nAA\\nAA\\nBBB\\nAAA\") == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '7'\nassert solution('100') == '8'\nassert solution('1000000') == '9'\nassert solution('11111') == '8'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\""
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nA\nB\nAA\nBBB\nAAA''') == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 10 2 1\") == \"0.1\"\nassert solution(\"1 10 2 2\") == \"0.1909090909\""
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == '0.1'\nassert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1818181818'\nassert solution('1000000 100 10 2 1') == '0.1'\nassert solution('1000000 100 10 2 2') == '0.1818181818'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 1 2') == '0.1', 'First'\nassert solution('2 1 1 2') == '0.0078947368421052632', 'Second'\nassert solution
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 2 1') == '0.25'\nassert solution('100 10 2 1') == '0.1'\nassert solution
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 2 1') == '0.1'\nassert solution('1 1 2 2') == '0.1818181818'\n\n---------------------------------------"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n100 10 2 1\n''') == '0.1'\nassert solution('''\n100 10 2 2\n''') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4') == '0.166666666667'\nassert solution('1\\n2\\n3\\n5') == '0.33333333333'\nassert solution('1\\n2\\n3\\n4') == '0.4'\n\n'''\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABABABcABABAbAbab') == '5'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"AA\") == \"3\"\nassert solution(\"AAAABAABABAAABAAB\") == \"6\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == str\nprint(solution(input))\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '5'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '0'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '0'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '0'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '6'\n\n'''\n\ns = stdin.readline().strip()\nq = int(stdin.readline().strip())\n\nfor i in range(q):\n    a,b = stdin.readline().strip().split()\n    a = int(a)\n    b = int(b)\n    #a = 0\n    #b = 2\n    print(len(s[a:b+1]))"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '5'\n\n'''"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '0'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '5'\n\n'''"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2'\nassert solution('5 1') == '2'\nassert solution('5 5') == '3'\nassert solution('10 1') == '3'\nassert solution('10 10') == '5'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n0\n1\n0\n0\n''') == '2'\nassert solution('''\n5\n0\n0\n1\n0\n0\n''') == '3'\nassert solution('''\n6\n0\n0\n0\n0\n1\n0\n''') == '4'\nassert solution('''\n7\n0\n0\n0\n0\n0\n1\n0\n''') == '5'\nassert solution('''\n8\n0\n0\n0\n0\n0\n1\n0\n0\n''') == '6'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n0\n0\n1\n''') == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"2\"\n\nassert solution(\"2 3\") == \"2\"\n\nassert solution(\"1 3\") == \"3\"\n\nassert solution(\"2 4\") == \"3\"\n\nassert solution(\"4 4\") == \"4\""
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('5 5') == '1'\n\"\"\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n0\n0\n1\n2\n''') == \"2\"\nassert solution('''\n3 3\n0\n0\n1\n2\n''') == \"3\"\nassert solution('''\n4 3\n0\n0\n1\n2\n''') == \"2\"\nassert solution('''\n5 3\n0\n0\n1\n2\n0\n3\n''') == \"4\"\nassert solution('''\n6 6\n0\n0\n1\n2\n0\n4\n''') == \"5\"\n'''\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '2'\nassert solution('4 3') == '2'\nassert solution('5 2') == '3'\nassert solution('1 0') == '1'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1\\n0\\n0\\n1\\n1\\n') == '2'\nassert solution('1 3\\n2\\n2\\n') == '3'\nassert solution('1 2\\n0\\n1\\n') == '2'\n\"\"\""
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 3 1\") == \"3\"\nassert solution(\"4 3 5\") == \"4\"\nassert solution(\"4 3 0\") == \"3\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\nassert solution('''\n2 4 5 8\n4 4 4 4 4\n1 1 1 1 1\n''') == '1'\nassert solution('''\n2 3\n3 3 3\n1 1 1 1\n''') == '1'\nassert solution('''\n2 5\n5 5 5\n1 1 1 1 1\n''') == '0'\nassert solution('''\n1 2\n2 1\n1 1\n''') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3 1\n8 -2 -2 -1 -1\n2 8 2\n2 -1 2 -1 -1\n8 -3 3 -2 -1\n1 1 1\n-1000 -1000 1000\n''') == '2\\n1 0 0 0 0\\n1 0 0 0 0\\n1 0 0 0 0\\n1 0 0 0 0\\n2 0 0 0 0 0\\n2 0 0 0 0 0\\n3 0 0 0 0 0\\n'''\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('12 4 1 4 5 3 -2') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\nassert solution('''\n100 100 100 100\n
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\n\nassert solution('''\n5 5 5\n3 3 -1 2 -3\n3 4 1 -3 -2\n3 2 2 3\n5 5 7\n''') == '1'\n\nassert solution('''\n9 9 9\n0 1 1 1 1 1 1 1 1\n0 2 2 2 2 2 2 2 2\n0 2 2 2 2 2 2 2 2\n0 2 2 2 2 2 2 2 2\n0 2 2 2 2 2 2 2 2\n0 2 2 2 2 2 2 2 2\n0 2 2 2 2 2 2 2 2\n0 2 2 2 2 2 2 2 2\n''') == '1'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 2') == '1'\nassert solution('10 1 2 1 8 -6 1') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('12 4 1 4 5 3 -2') == '1'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 8 8 8\n6 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\n\nassert solution('''\n2 5 5 5\n5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5\n''') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2') == '1'\nassert solution('10 1 2 1 8 -6 1\\n4 3 6 2 5 -8 -8 -8 -5') == '3'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\nSample Input:\n1\n0 1 2\n0 3 4\nSample Output:\n0\nP0: 4 2 1 0 0 1 3\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '2 7\\n'\n    '1 2 1\\n'\n    '1 2 3\\n'\n    '1 3 2\\n'\n    '1 4 1\\n'\n    '2 3 4\\n'\n    '2 4 4\\n'\n    '3 4 4\\n'\n    '3'\n) == '3'\n\nassert solution(\n    '4 7\\n'\n    '1 2 1\\n'\n    '1 2 3\\n'\n    '1 3 2\\n'\n    '1 4 1\\n'\n    '2 3 4\\n'\n    '2 4 4\\n'\n    '3 4 4\\n'\n    '3'\n) == '2'\n\nassert solution(\n    '8 7\\n'\n    '1 2 1\\n'\n    '1 2 3\\n'\n    '1 2 4\\n'\n    '1 3 2\\n'\n    '1 3 4\\n'\n    '1 4 2\\n'\n    '1 4 3\\n'\n    '2 3 4\\n'\n    '2 4 4\\n'\n    '3 4 4\\n'\n    '3'\n) == '4'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1\\n2\\n3\\n4\\n'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 7\\n\" +\n    \"1 2 1\\n\" +\n    \"1 2 3\\n\" +\n    \"1 3 2\\n\" +\n    \"1 4 1\\n\" +\n    \"2 3 4\\n\" +\n    \"2 4 4\\n\" +\n    \"3 4 4\\n\" +\n    \"3\\n\" +\n    \"1 2\\n\" +\n    \"1 3\\n\" +\n    \"3 4\\n\"\n) == \"1\\n2\\n3\\n4\"\nprint(solution(input()))\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\") == \"1\"\nassert solution(\"5 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\") == \"2\"\nassert solution(\"5 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\") == \"4\"\nassert solution(\"5 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\") == \"3\""
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 7') == '1'\nassert solution('3 3') == '3'\nassert solution('5 7') == '1'\nassert solution('4 9') == '1'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 3 2\\n1 1 1\\n3 2 2\\n2 1 2\") == \"4\"\nassert solution(\"5\\n1 2 1\\n2 2 4\\n3 4 2\\n2 3 4\\n5 5 5\\n4 1 2\\n5 2 4\\n4 5 5\\n5 4 5\") == \"10\"\nassert solution(\"5\\n5 2 1\\n4 1 2\\n3 3 2\\n2 4 2\\n3 4 2\\n2 3 4\\n2 5 1\\n3 5 4\\n5 5 5\\n4 5 5\\n3 4 5\") == \"12\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 5') == '2'\nassert solution('4 7') == '3'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3\\n3 4 2\\n3') == '1'\nassert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3') == '2'"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == \"3\"\nassert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == \"3\"\nassert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == \"1\"\nassert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == \"1\"\nassert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == \"1\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"2\""
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n6 3 1 5 2 4\\n1 2 5 4 3 6') == '3\\n2 1 4 5 6 3'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution('''2\n1 2 5 4 3 6\n1 2 5 4 3 6''') == '1 2 5 4 3 6'\nassert solution('''3\n1 5 4 3 2 6\n1 2 5 4 3 6\n1 3 5 4 2 6''') == '1 3 5 4 2 6'\nassert solution('''1\n6 2 3 4 1 5\n6 2 3 4 1 5''') == '1 6 2 3 4 5 1'\nassert solution('''1\n1 2 3 4 5 6\n1 2 3 4 5 6''') == '1 6 2 3 4 5 1'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 5 4 3 2 6\n1 2 5 4 3 6''') == '2'\n\"\"\""
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 2 5 4 3\n1 2 5 4 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n1 2 5 4 3 6\n1 2 5 4 3 6\n1 2 5 4 3 6\n1 2 5 4 3 6\n1 2 5 4 3 6\n\"\"\") == \"1\"\n\n\"\"\"\n    Start with the permutation of frogs in the starting sequence.\n    \n    Step 1) find frog with ID $1$ and check if it is in front of any frog in the permutation\n    Step 2) if so, swap current frog and current frog's next frog\n    Step 3) if there are more frogs than id's in the permutation, jump all the frogs behind it\n    Step 4) if all frogs in the permutation are in front of any frog, return the permutation\n\"\"\""
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"6\n1 5 4 3 2 6\n1 2 5 4 3 6\"\"\") == \"\"\"2\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n5 4 3 2 6\n1 2 5 4 3 6''') == '4 2 5 1 3 6'\n'''\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 5 4 3 2\n1 2 5 4 3 6''') == '2'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3\n1 3 2\n''') == '2'\n\"\"\"\n\n\"\"\"\nclass frog(object):\n    def __init__(self, id, positions):\n        self.id = id\n        self.positions = positions\n\n    def __repr__(self):\n        return 'id:{}, positions:{}'.format(self.id, self.positions)\n\n    def jump(self):\n        return '{} -> {}'.format(self.id, self.positions[self.id])\n\n\nclass frog_sequence(object):\n    def __init__(self, start_positions, result_positions):\n        self.start_positions = start_positions\n        self.result_positions = result_positions\n\n    def __repr__(self):\n        return'start:{}, result:{}'.format(self.start_positions, self.result_positions)\n\n    def is_result(self):\n        return self.start_positions == self.result_positions\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '-1'\nassert solution('4 3 5') == '4'\nassert solution('2 3 2') == '2'\nassert solution('1 3 1') == '1'\nassert solution('1 2 2') == '1'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 3 2\"\n    \"1 30 2 50\"\n    \"2 70 3 10\"\n    \"3 20 1 80\"\n) == \"60\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 2') == '60'\nassert solution('3 3 2') == '-1'\nassert solution('4 3 2') == '-1'\nassert solution('5 3 2') == '-1'"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'\nassert solution('''5 2 5\n1 5 2 3 8\n3 5 2 1 3\n5 2 2 5 4 6\n4 5 1 3 3\n3 3 3 3 4\n''') == '18'\nassert solution('''3 3 1\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '-1'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\"\"\") == \"60\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"1\"\nassert solution(\"3 3 2\") == \"60\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == '60'\nassert solution('2 3 2') == '-1'\nassert solution('3 3 2') == '60'"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 2\\n3 2 2\\n3 3 1\\n2 4 1') == '-1'\nassert solution('1 2 1\\n2 3 1\\n1 3 1\\n1 2 1') == '-1'\nassert solution('2 3 1\\n3 1 1\\n2 3 1\\n3 3 1') == '3'\nassert solution('4 3 3\\n2 1 2\\n2 2 1\\n3 3 1') == '4'\nassert solution('4 3 3\\n1 1 2\\n2 2 1\\n3 3 1') == '4'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '60'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'Case #1: 1\\nCase #2: 2'\nassert solution('3') == 'Case #1: 1\\nCase #2: 1\\nCase #3: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Case #1: 1\\nCase #2: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Case #1: 1\\nCase #2: 2\\n'\nassert solution('2') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n''') == 'Case #1: 1\nassert solution('''\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #2: 2\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"Case #1: 1\\nCase #2: 2\\n\"\nassert solution(\"3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\\n\") == \"Case #1: 1\\nCase #2: 2\\n\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n100 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2'\n\nassert solution('''\n2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2'\n\nassert solution('''\n1\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2'\n\nassert solution('''\n2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2'"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n10000 0 0\n0 10000 0\n0 0 10000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 1\\n'''\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\n'"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '1 3 6 2'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n+1 3 C 6 H 12 O 6\n0 0''') == '6 9 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '1 4 6 2'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 9 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\n\nassert solution('''-1 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2 C 1 O 2\n+1 2"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\n'''"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1\\n'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1\\n'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1\\n'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1\\n'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n') == '6 6 6 1\\n'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1'\nassert solution('+1 2 C 1 O 2') == '6 6 6 1'\nassert solution('-1 1 O 2') == '1'\nassert solution('-1 3 C 6 H 12 O 6') == '1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n+1 6 C 1 H 5 C 1 O 1 O 1 H 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6''') == '6 6 6 1'\nassert solution('''-1 1 O 2\n+1 3 C 6 H 12 O 6\n+1 4 C 1 O 2\n-1 3 C 6 H 12 O 6\n-1 1 O 2''') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\") == \"5 5 5 1\"\nassert solution(\"-1 1 O 2\") == \"2 1 1 1\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"1 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\nassert solution('''\n+1 2 C 1 O 2\n+1 2 H 2 O 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\nassert solution('''\n+1 2 C 1 O 2\n+1 2 H 2 O 1\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\nassert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\n'''\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n''') == '6 6 6 1'\n'''\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 1 O 2\") == \"1 1 1 1\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"1 1 1 1\"\nassert solution(\"0 0\") == \"0 0\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n2\n0 1\n0 3\n1 1\n1 3\n1 2\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n''') == '16.75'\n\nassert solution('''\n3\n-2 2\n-3 1\n-1 2\n''') == '3.5'\n\nassert solution('''\n10\n-1 1\n-3 2\n-3 3\n-1 4\n-1 5\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n7 3\n7 4\n7 5\n7 6\n7 7\n7 8\n7 9\n7 10\n8 3\n8 4\n8 5\n8 6\n8 7\n8 8\n8 9\n8 10\n9 3\n9 4\n9 5\n9 6\n9 7\n9 8\n9 9\n9 10\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n10 10\n''') == '10.01'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n') == '20.83'\nassert solution('3\\n2 2\\n1 2\\n3 4\\n2 2\\n') == '1.00'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n50 50\\n0 0\\n100 0\\n100 40\\n20 40\\n') == \"20.83\"\nassert solution('2\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n') == \"20.83\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\nassert solution('''\n1\n0 1\n''') == '1.00'\nassert solution('''\n1\n1\n''') == '2.00'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == \"20.83\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n5\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\\n') == '20.83'"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\nassert solution('''\n6\n15 20\n0 30\n20 15\n30 0\n40 20\n20 30\n30 20\n''') == '34.5'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2 2\n1 1\n1 1\n''') == \"2.83\"\nassert solution('''4\n3 1\n0 0\n1 1\n1 2\n''') == \"2.83\"\nassert solution('''1\n1\n''') == \"1.00\"\nassert solution('''2\n3 3\n1 1 1\n0 0 1\n2 2 0\n1 1 0\n''') == \"2.83\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 5\\n7 6 4\\n9 8 3') == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 5\n7 6 4\n9 8 3\n\"\"\") == \"49\"\n\nassert solution(\"\"\"\n3 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n\"\"\") == \"49\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\nassert solution('''3 3\n1 2 5\n7 6 4\n9 8 2\n''') == '59'\n'''\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 5\\n7 6 4\\n9 8 3') == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\nassert solution('''\n2 2\n2 2\n''') == '0'\nassert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '49'\nassert solution('1 1') == '1'\nassert solution('3 3') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3\\n') == '49'\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n##.######\n###.###.\n#######.\n#########\n\"\"\") == \"\"\"##CROSSWORD####\n###.###.\n#######.\n#########\"\"\", \"\"\"\n10\n######.###\n###.####\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 15\\n1 2 1\\n1 2 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '#.###.###.#\\n#.###.###.#\\n#.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###.#\\n###.###.###."
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n\") == \"#####\"\n\nassert solution(\"4 3\\nCROSS\") == \"#CROSS\"\n\nassert solution(\"4 3\\n..#.\") == \"..#.#\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 5\n.#####.\n######.\n#####..\n######\"\"\") == \"\"\"#######\n1\nCROSSWORD\nCROSSWORD\"\"\"[:-1]\nassert solution(\"\"\"1 2\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 10\n##########\n1\n##########\n2\n''') == '2\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n##########\\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n.................\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 20\n..........#\n1\nCROSSWORD''') == 'CROSSWORD'\n'''"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\nR R R R\n1\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n''') == '''\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n'''\nassert solution(\n'''\nR R R R\n1\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n''') == '''\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n'''\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 5\n##.....######\n5\nCROSSWORD\n''') == '##CROSSWORD####', \"First\"\nassert solution('''\n1 2\n##.....######\n2\nCROSSWORD\n''') == '##CROSSWORD####', \"Second\"\nassert solution('''\n1 1\n##...\n1\nCROSSWORD\n''') == '##CROSSWORD####', \"Third\"\nassert solution('''\n10 10\n##........##\n1\nCROSSWORD\n''') == '##CROSSWORD####', \"Four\"\nassert solution('''\n1 1\n##.....##..\n1\nCROSSWORD\n''') == '##CROSSWORD####', \"Fifth\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 15') == '##CROSSWORD####'\n\n\n\n\"\"\"\n\n\"\"\"\n\nsolution(input())\n\n\n\"\"\"\n\n\nfrom typing import List\nimport sys\nimport itertools\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '31'"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"31\", \"Expected 31, but printed {}\".format(solution(\"2 1\"))\nassert solution(\"3 2\") == \"34\", \"Expected 34, but printed {}\".format(solution(\"3 2\"))\nassert solution(\"4 3\") == \"37\", \"Expected 37, but printed {}\".format(solution(\"4 3\"))\nassert solution(\"5 4\") == \"48\", \"Expected 48, but printed {}\".format(solution(\"5 4\"))\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 1\"\n) == \"31\", \"simple\"\nassert solution(\n    \"2 1\"\n) == \"1\", \"simple\"\nassert solution(\n    \"4 3 8\"\n) == \"14\", \"complex\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 7 6\n9 5 1\n4 3 8\n\"\"\") == \"31\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '31'\nassert solution('5 5 1') == '17'\nassert solution('5 5 5 1') == '15'\nassert solution('5 5 5 5 1') == '14'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 1\n2 7 6\n9 5 1\n4 3 8\n\"\"\") == \"31\"\nassert solution(\"\"\"\n1 1\n1 2 2\n1 3 3\n1 4 4\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '31'\nassert solution('3 2') == '32'\nassert solution('3 3') == '34'\nassert solution('3 4') == '37'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\n2 7 6\n''') == '31'\nassert solution('''\n3 1\n2 7 6\n9 5 1\n4 3 8\n''') == '32'\nassert solution('''\n3 1\n2 7 6\n9 5 1\n4 3 8\n''') == '31'\nassert solution('''\n3 2\n3 2 2\n4 2 4\n''') == '0'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1\n2 7 6\n9 5 1\n4 3 8\n''') == '31'\nassert solution('''\n3 1\n9 5 1\n4 3 8\n''') == '26'\nassert solution('''\n5 4\n3 4 2 4 1\n''') == '14'\nassert solution('''\n5 4\n4 4 1 4 2\n''') == '9'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"3 1\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1\\nBWBWB') == '1'\nassert solution('7 1\\nBBWWWWB') == '2'\n\nstdin = \"\"\"4 3\nBBW\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 1\nBWB\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 1\nBWB\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\n\n======="
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n4\nWBWB\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n4\nWWBW\n\"\"\") == \"1\"\nassert solution(r\"\"\"\n10\nWWWWWWWWWW\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '2'\nassert solution('3 1') == '2'\nassert solution('4 1') == '3'\nassert solution('5 1') == '4'\nassert solution('6 1') == '5'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1\\nBBW') == '2'\n\nassert solution('3 2\\nBWB') == '1'\n\nassert solution('3 2\\nBWBWB') == '1'\n\nassert solution('3 3\\nBBWBBB') == '1'\n\nassert solution('3 3\\nBWBWBWB') == '1'"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '2'\nassert solution('10 2') == '2'\nassert solution('100 100') == '2'\nassert solution('100 2') == '2'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nBBW\nWBB\n''') == '2'\nassert solution('''\nBWB\nBWW\n''') == '0'\nassert solution('''\nBBW\nWWB\n''') == '1'\nassert solution('''\nBWB\nBWW\n''') == '1'\n''')\n\n\u0422\u0435\u0441\u0442 2\n\u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u043e\u043b\u0435\u0431\u0430\u043d\u0438\u0439 \u0438 \u0446\u0432\u0435\u0442\u043e\u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0441 \u0446\u0438\u0444\u0440\u0430\u043c\u0438 \u043e\u0442 1 \u0434\u043e 10. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044e \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u043e\u0442 1 \u0434\u043e 10 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043b\u0435\u0431\u0430\u043d\u0438\u0439 \u043e\u0434\u043d\u043e\u0433\u043e \u0438\u0437 \u043d\u0438\u0445.\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043b\u0435\u0431\u0430\u043d\u0438\u0439 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 $X$ \u0438 $Y$, \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044e \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u043e\u0442 1 \u0434\u043e 10, \u0438 \u0438\u0445 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e.\n\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u043d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u043a\u0443, \u043d\u043e \u0438 \u0432\u044b\u0432\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c. \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:\n\n3 1\nBBW\n1\n1\n1\n1\n1\n1\n1\n2\n2\n1\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435:\n\u0422\u0430\u043a \u043a\u0430\u043a \u0447\u0438\u0441\u043b\u043e \u043a\u043e\u043b\u0435\u0431\u0430\u043d\u0438\u0439 \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0439, \u043d\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043b\u0435\u0431\u0430\u043d\u0438\u0439 \u043c\u043e\u0436\u043d\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043f\u043e \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u0443 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430.\n\nSample Input 1:\n\n4\nBBB\nBWW\nWWB\nWWWW\nSample Output 1:\n\n1\n3\n4\n3\n\n\u0422\u0435\u0441\u0442 1\n\u0412 \u043f\u0435\u0440\u0432\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438 \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0441\u0442\u0440\u043e\u043a\u0443, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043a\u043e\u043b\u0435\u0431\u0430\u043d\u0438\u0439 \u0438 \u0446\u0432\u0435\u0442\u043e\u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0441 \u0446\u0438\u0444\u0440\u0430\u043c\u0438 \u043e\u0442 1 \u0434\u043e 10. \u0422\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0439 \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044e \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u043e\u0442 1 \u0434\u043e 10 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''3 1\n3 2 1\n1 2 3''') == '0.556'\nassert solution(\n'''5 4\n2 1 1 2 3\n1 2 3 4\n1 3 1 1\n3 2 3 2\n1 1 2 3''') == '1.521'\nassert solution(\n'''3 5\n3 2 1 2 1\n1 2 3\n1 3 1''') == '0.459'\nassert solution(\n'''6 4\n2 2 1 2 1 2\n1 2 3\n1 3 1\n1 4 1\n3 2 3\n1 5 2''') == '0.348'\nassert solution(\n'''3 5\n3 2 1 2 1\n1 2 3\n1 3 1\n1 4 1\n1 5 2''') == '0.354'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556', '''Test 1'''\nassert solution('''3 2\n1 2 3\n1 1 2''') == '0.333', '''Test 2'''\nassert solution('''3 1\n1 2 3\n1 1 2''') == '0.333', '''Test 3'''\nassert solution('''3 1\n1 2 3\n1 1 2''') == '0.333', '''Test 4'''\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0.556\"\nassert solution(\"1 1\") == \"0.556\"\nassert solution(\"1 1 2\") == \"0.562\"\nassert solution(\"1 2 1\") == \"0.555\"\nassert solution(\"1 2 3\") == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1\\n') == '0.5', \"Wrong!\"\nassert solution('3 1\\n') == '0.5', \"Wrong!\"\nassert solution('1 1\\n') == '1.0', \"Wrong!\""
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '0.556'\nassert solution('3 2 1') == '0.556'\nassert solution('1 2 3') == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n5 1\n2 2 1\n1 2 3\n4 5 1\n1 2 3\n3 4 2\n\"\"\") == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0.556'\n\"\"\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0.556\"\nassert solution(\"3 1\") == \"0.556\"\nassert solution(\"1 2 3\") == \"0.556\""
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '0.556'\nassert solution('2 3 4') == '0.849'\nassert solution('1 2 3') == '0.849'\nassert solution('1 2 3 4') == '0.625'\n\"\"\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '0.556'\nassert solution('3 1') == '0.555'"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 3 2') == '3'\nprint(solution('''\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4 3 2\n''') == '3'\nassert solution('''\n9 7 7 7\n''') == '2'\nassert solution('''\n10 10 10 10\n''') == '0'\n''')\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 5 1\") == \"4\"\nassert solution(\"4 5 3 1\") == \"5\""
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('10 2 3 5') == '10'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n5 4 3 2') == '3'\nassert solution('2\\n10 10 8 7') == '0'\nassert solution('2\\n0 0 0 0') == '1'\nassert solution('2\\n0 0 0 1') == '0'"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n\") == \"3\"\n\nassert solution(\"1 1 1 1\\n2 2 2 2\\n3 3 3 3\") == \"0\"\n\"\"\"\n\nimport time\n\nstart_time = time.time()"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 3 2') == '3'\n\n-- Python code --"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 2 3\\n2') == '1'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nassert solution(\"5 6 4 3 2\") == \"6\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '13'\nassert solution('3') == '6'\nassert solution('5') == '13'\nassert solution('6') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"13\"\nassert solution([\n    \"3 3 6\",\n    \"2 5 8\",\n    \"3 3 5\",\n    \"5 3 6\",\n    \"7 3 6\",\n    \"5 3 6\",\n    \"5 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \"7 3 6\",\n    \""
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 2\n3 4 4\n4 5 3\n2 5 2\n6 6 6\n2 4 2\n3 3 4\n4 4 5\n1 4 1\n3 5 2\n3 5 1\n2 2 2\n3 1 1\n2 1 2\n3 2 1\n2 1 1\n3 4 1\n2 1 3\n1 5 2\n1 1 2\n2 2 2\n4 4 4\n3 1 3\n1 3 2\n1 2 1\n2 2 1\n2 5 2\n4 4 4\n2 5 3\n2 1 3\n1 1 1\n3 3 3\n3 3 4\n4 4 4\n2 3 2\n2 5 2\n2 1 2\n1 2 2\n2 1 2\n2 1 2\n2 1 2\n3 4 1\n2 1 3\n2 1 3\n3 1 4\n4 4 4\n2 3 2\n3 2 2\n2 2 2\n2 5 2\n3 3 2\n3 4 2\n3 5 2\n2 2 2\n3 2 2\n4 3 3\n2 1 3\n1 5 2\n2 1 2\n2 1 2\n2 1 2\n3 1 3\n2 1 2\n2 1 2\n3 2 2\n2 1 2\n2 1 2\n1 4 2\n3 2 3\n1 3 2\n1 5 2\n2 3 2\n2 2 2\n1 5 2\n2 2 2\n1 1 2\n2 1 2\n1 5 2\n2 1 2\n2 3 2\n3 1 4\n2 2 2\n2 2 2\n1 5 2\n2 1 2\n3 2 2\n2 5 2\n1 1 2\n3 2 2\n3 4 3\n2 5 2\n2 1 2\n3 1 3\n2 1 3\n3 5 2\n2 5 2\n2 3 2\n2 5 2\n2 5 2\n3 2 2\n2 5 2\n3 1 3\n2 5 2\n1 1 2\n2 5 2\n3 2 2\n2 5 2\n1 1 2\n1 3 2\n2 5 2\n2 1 2\n3 2 2\n2 1 2\n3 4 3\n2 1 2\n1 5 2\n2 5 2\n3 2 2\n2 2 2\n2 2 2\n2 5 2\n2 5 2\n1 5 2\n2 5 2\n2 1 2\n2 5 2\n1 1 2\n2 1 2\n2 5 2\n3 5 2\n3 2 2\n3 5 2\n2 1 2\n1 5 2\n1 5 2\n2 5 2\n2 5 2\n3 4 3\n3 3 4\n2 5 2\n2 5 2\n1 5 2\n1 5 2\n3 3 4\n2 1 2\n2 5 2\n2 1 2\n2 3 2\n3 1 4\n2 5 2\n3 2 2\n2 5 2\n1 5 2\n1 5 2\n1 1 2\n1 5 2\n1 5 2\n1 1 2\n3 5 2\n1 3 2\n1 5 2\n2 5 2\n2 5 2\n1 1 2\n1 5 2\n1 1 2\n1 1 2\n1 1 2\n2 1 2\n1 1 2\n2 5 2\n1 5 2\n3 5 2\n1 3 2\n1 5 2\n2 5 2\n1 5 2\n2 5 2\n2 5 2\n3 2 2\n3 2 2\n3 1 4\n1 5 2\n2 1 2\n2 1 2\n1 5 2\n2 5 2\n2 1 2\n3 2 2\n1 5 2\n1 5 2\n2 5 2\n1 1 2\n2 5 2\n3 2 2\n1 5 2\n1 5 2\n1 1 2\n2 1 2\n3 5 2\n2 1 2\n2 5 2\n3 2 2\n2 5 2\n3 2 2\n2 5 2\n3 5 2\n3 2 2\n2 5 2\n2 5 2\n1 3 2\n3 2 2\n2 5 2\n2 1 2\n3 5 2\n3 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n1 4 2\n2 5 2\n1 5 2\n2 1 2\n3 5 2\n1 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n1 5 2\n1 5 2\n2 5 2\n1 5 2\n2 5 2\n2 5 2\n2 5 2\n1 5 2\n1 5 2\n2 5 2\n1 5 2\n1 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n1 5 2\n2 5 2\n2 5 2\n2 5 2\n1 5 2\n2 5 2\n2 5 2\n2 5 2\n1 5 2\n1 5 2\n2 5 2\n2 5 2\n1 5 2\n1 5 2\n1 5 2\n1 5 2\n2 5 2\n2 5 2\n1 5 2\n1 5 2\n2 5 2\n1 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n1 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n1 5 2\n2 5 2\n2 5 2\n2 5 2\n1 5 2\n2 5 2\n2 5 2\n1 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n2 5 2\n1 5 2\n2 5 2\n1 5 2"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"13\"\nassert solution(\"\"\"\n2\n1 1\n2 1\n\"\"\") == \"1\""
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n\") == \"13\"\nassert solution(\"5\\n3 4 5 6\\n1 3 5 6\\n2 4 4 5\\n2 3 5 3\\n3 2 5 6\\n\") == \"15\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3 6\n2 5 8\n3 3 5''') == '13'\nassert solution('''5\n1 3 6\n2 5 8\n3 3 5\n4 4 5''') == '27'\nassert solution('''5\n1 3 6\n2 5 8\n3 3 5\n4 4 5''') == '19'\nassert solution('''2\n1 2 3''') == '0'\nassert solution('''1\n1 3 6''') == '6'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n2 4 5\\n1 2 5\\n3 2 5\\n1 1 5\\n3 1 5\\n') == '19\\n'\n\nassert solution('3\\n3 1 2\\n3 2 2\\n3 3 3\\n') == '6\\n'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6\\n') == '13'\nprint('SUCCESS')\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nprint(\"Solution = Right\")\n\"\"\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n10.000000 20.123456\\n1\\n13.141593 20.123456') == '3.141593'\nassert solution('1\\n5.000000 4.123456\\n1\\n5.000000 4.123456\\n1\\n5.000000 4.123456\\n1\\n5.000000 4.123456') == '1.000000'\nassert solution('1\\n1.000000 1.123456\\n1\\n1.000000 1.123456\\n1\\n1.000000 1.123456\\n1\\n1.000000 1.123456') == '0.000000'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n2\\n3\\n4\\n5\\n') == '3.141593'\nassert solution('100\\n100\\n100\\n100\\n100\\n100\\n') == '0.000000'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456\n1\n10.000000 10.000000\n1\n10.000000 20.123456\n2\n10.000000 20.123456\n3\n10.000000 20.123456"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456') == '3.141593'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"1000000\\n1000000\") == \"1\"\nassert solution(\"10.000000 0\\n1\\n10.000000\") == \"10\"\nassert solution(\"10.000000 0\\n10.000000\") == \"0\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '3.141593'\nassert solution('10.000000 20.123456') == '3.141593'\nassert solution('1.0') == '3.141593'\nassert solution('1.0001') == '3.141593'\nassert solution('1.000001') == '3.141593'"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10.000000 20.123456') == '3.141593'\nassert solution('1') == '1.000000'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n4\n6\n4\n1\n7\n''') == \"14.0\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10.000000 20.123456') == '3.141593'\nassert solution('10.000000 20.123456') == '3.141593'\n'''\n\n'''\n10.000000 20.123456\n1\n13.141593 20.123456\nSample Output:\n3.141593\n'''"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"2 4\") == \"2.13333333333333\"\nprint(solution(open(\"input.txt\")))\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''3\n4 4\n2\nSample Input 2:\n10\n3\n7\n6\n4\n1\n5\n8\n9\n6\n''') == 'impossible'\nassert solution(\n'''6\n6\n2\n1\n4\n5\n''') == '2.5'\nassert solution(\n'''13\n4\n3\n5\n4\n1\n2\n''') == 'impossible'\nassert solution(\n'''16\n3\n1\n1\n1\n3\n1\n2\n''') == 'impossible'\nassert solution(\n'''20\n4\n1\n3\n4\n1\n2\n3\n4\n5\n''') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1\n4\n2\n5\n3\n''') == 'impossible'\nassert solution('''4\n4\n4\n4\n4\n''') == '2.13333333333333'\nassert solution('''1\n10\n''') == '10'\nassert solution('''5\n1\n1\n2\n2\n''') == '4.0000'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n10\n1\n2\n4\n9\n''') == '2.13333333333333'\nassert solution('''\n2\n7\n2\n1\n2\n''') == 'impossible'\nassert solution('''\n5\n15\n1\n2\n3\n4\n''') == 'impossible'\nassert solution('''\n3\n4\n1\n2\n''') == '2.14285714285714'\nassert solution('''\n5\n14\n1\n2\n3\n4\n''') == 'impossible'\n'''\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2.13333333333333'"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4\n2\n''') == '2.13333333333333'\nassert solution('''\n10\n2\n9\n3\n5\n4\n6\n7\n8\n''') == 'impossible'\nprint(solution('''\n4\n4\n2\n1\n3\n''')) == '2.13333333333333'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2.13333333333333'\nassert solution('4') == '2.13333333333333'\nassert solution('5') == 'impossible'\n'''\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4 4\\n2') == '2.13333333333333'\nassert solution('2\\n2 2') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n4\n3\n2\nSample Input 2:\n1\n100\n5\n9\nSample Output 2:\n2.13333333333333\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1\n100\n100\n4\nSample Output 3:\n2.13333333333333\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1\n1\n3\n2\nSample Output 4:\n2.13333333333333\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n10\n4\n1\nSample Output 5:\nimpossible\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n20\n4\n1\nSample Output 6:\nimpossible\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '18'\nassert solution('') == '18'\nassert solution('1') == '3'\nassert solution('-2') == '0'\nassert solution('2') == '2'\n'''"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '2000000'\n\nstdin = \"\"\"\n3\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"18\""
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n') == '2'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n5\n8''') == '4'\nassert solution('''15\n1\n6\n8\n7\n4\n5\n3\n9\n11\n13\n17\n9\n10\n14\n6''') == '144'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n') == '7'\nassert solution('10\\n') == '51'\nassert solution('100\\n') == '18975462'\nassert solution('1000\\n') == '2975093461029'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7''') == '18'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\n') == '14'\nassert solution('7\\n') == '18'"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n35 M classicism programming\\n0 M baroque skiing') == '2'\nassert solution('2\\n30 F baroque chess\\n43 M baroque skating') == '1'\nassert solution('2\\n43 M baroque chess\\n30 F baroque skating') == '1'\nassert solution('2\\n30 F baroque skating\\n43 M baroque chess') == '2'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\""
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer') == '3'\nassert solution('3\\n30 F baroque soccer\\n0 M baroque skiing\\n43 M baroque chess\\n35 M classicism programming') == '3'\nassert solution('7\\n30 F baroque soccer\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n35 M classicism programming') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('35 M classicism programming') == '3'\nassert solution('0 M baroque skiing') == '1'\nassert solution('43 M baroque chess') == '2'\nassert solution('30 F baroque soccer') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n35 M classicism programming\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\"\nassert solution(\"2\\n3 M classicism programming\\n0 M baroque chess\\n43 M baroque soccer\\n\") == \"2\"\nassert solution(\"3\\n0 M classicism programming\\n35 M baroque chess\\n30 F baroque soccer\\n\") == \"1\"\nassert solution(\"4\\n43 M classicism programming\\n3 M baroque chess\\n0 M baroque soccer\\n\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n\") == \"3\"\n\"\"\"\n\nn = int(input())\n\nd = {}\nfor _ in range(n):\n    h, sex, music, sport = input().split()\n    d[h] = (sex, music, sport)\n\nprint(len(d.keys()))\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == '3'\nassert solution('''1\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n0 M baroque soccer''') == '3'\nassert solution('''1\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n0 M baroque volleyball''') == '4'\nassert solution('''1\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n0 M baroque volleyball\n0 M baroque programming''') == '2'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\nassert solution('''\n2\n35 M classicism programming\n0 F baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '2'\n'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a 0\") == \"2\"\nassert solution(\"a 1\") == \"1\"\nassert solution(\"b 2\") == \"1\"\nassert solution(\"c 2 3\") == \"2\"\nassert solution(\"b 4\") == \"3\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 1'\n'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n0\\n1\\n3\\n2\\n4\\n') == '1'\nassert solution('1\\n2\\n') == '0'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n3\\n2\\n'\n\nassert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '1\\n1\\n2\\n3\\n2\\n'\n\nassert solution('''\na 0\na 1\na 2\nc 2 3\nb 4\n''') == '2\\n1\\n1\\n3\\n2\\n'\n\nassert solution('''\na 0\na 1\nb 2\na 2\nb 4\n''') == '2\\n1\\n2\\n1\\n2\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\na 1\\n3\\n1\\n1\\n2\\n2\\n3\\n3\\n3\\n') == '2\\n1\\n2\\n1\\n0\\n'\nassert solution('5\\n3\\n0\\n0\\n0\\n2\\n3\\n2\\n3\\n0\\n1\\n2\\n') == '3\\n1\\n2\\n2\\n0\\n0\\n1\\n0\\n1\\n'\nassert solution('5\\n4\\n1\\n1\\n1\\n3\\n1\\n3\\n') == '1\\n1\\n0\\n1\\n0\\n1\\n0\\n1\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 1'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == \"2 1\\n2 1\\n2 1\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 1'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n2 4') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n5\\n5') == '2'\nassert solution('1\\n2\\n1\\n2 3\\n1\\n3\\n2 4\\n3\\n2\\n5\\n4\\n5\\n5\\n') == '1'\nassert solution('1\\n1\\n1\\n2\\n2') == '1'"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4') == '2\\n1\\n2\\n'"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"5\"\nassert solution(\"10 12 3 2 3 2 6 5\") == \"10\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 1 1\n3 3 1\n2 0 0\n1 2 0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6\n2 1 1\n3 3 1\n2 2 1\n1 2 0\n3 3 0\n2 0 0\n1 2 0\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6\n2 1 1\n3 3 1\n2 2 1\n1 2 0\n3 3 0\n2 0 0\n1 2 0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6\n2 1 1\n3 3 1\n2 2 1\n1 2 0\n3 3 0\n2 0 0\n1 2 0\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6\n2 1 1\n3 3 1\n2 2 1\n1 2 0\n3 3 0\n2 0 0\n1 2 0\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    1\n    78 61 88 71\n    80 80 90 90\n    70 90 80 100\n    90 70 0 0\n    80 67 0 0\n    90 63 0 0\n''') == '5'"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '5'\nassert solution('2 1') == '4'\nassert solution('3 1') == '5'\nassert solution('4 1') == '4'\nassert solution('5 1') == '3'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\"\nassert solution(\"10 5\\n75 85 88 72\\n65 85 85 82\\n85 67 88 72\\n72 84 72 88\\n76 87 73 86\\n87 75 86 72\\n85 76 82 73\\n72 76 86 72\\n65 85 85 82\\n75 85 88 72\\n76 84 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n65 85 85 82\\n75 85 88 72\\n76 84 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 84 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85 85 82\\n75 85 88 72\\n76 86 72 88\\n87 75 86 72\\n72 76 86 72\\n85 67 88 72\\n72 84 72 88\\n65 85"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '5'"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1') == '5'\n\nassert solution('6 2') == '6'\n\nassert solution('2 4') == '4'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\nassert solution('''\n3 3\n0 0 0\n2 2 0\n''') == '1'\nassert solution('''\n9 9\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n''') == '9'\n'''"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\") == \"5\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"6 3\") == \"3\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1, 2]) == 4\nassert solution([1, 3]) == 4\nassert solution([1, 4]) == 4\nassert solution([2, 3]) == 2\nassert solution([2, 4]) == 2\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 3\") == \"0\"\nassert solution(\"1 4\") == \"0\"\nassert solution(\"2 3\") == \"4\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n2 3\\n') == '1'\nassert solution('2\\n1 2\\n2 3\\n') == '0'\nassert solution('2\\n1 2\\n2 3\\n') == '0'\nassert solution('1\\n1 2\\n2 3\\n') == '0'\nassert solution('3\\n1 2\\n2 3\\n') == '0'"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == '4'"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4, 5]) == \"4\"\nassert solution([5, 5]) == \"0\"\nassert solution([4, 3]) == \"4\"\nassert solution([3, 3]) == \"0\"\nassert solution([5, 4]) == \"5\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4'\n\n--or--"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\n    '4',\n    '5',\n    '1 2',\n    '1 3',\n    '1 4',\n    '2 3',\n    '2 4',\n    ]) == '4'\n\nassert solution([\n    '4',\n    '5',\n    '1 2',\n    '1 3',\n    '1 4',\n    '2 3',\n    '2 4',\n    '2 5',\n    '3 4',\n    '3 5',\n    '4 5',\n    '4 6',\n    '5 6',\n    '6 7',\n    '7 8',\n    '8 9',\n    '9 10',\n    '10 11',\n    '11 12',\n    '12 13',\n    '13 14',\n    '14 15',\n    '15 16',\n    '16 17',\n    '17 18',\n    '18 19',\n    '19 20',\n    '20 21',\n    '21 22',\n    '22 23',\n    '23 24',\n    '24 25',\n    '25 26',\n    '26 27',\n    '27 28',\n    '28 29',\n    '29 30',\n    '30 31',\n    '31 32',\n    '32 33',\n    '33 34',\n    '34 35',\n    '35 36',\n    '36 37',\n    '37 38',\n    '38 39',\n    '39 40',\n    '40 41',\n    '41 42',\n    '42 43',\n    '43 44',\n    '44 45',\n    '45 46',\n    '46 47',\n    '47 48',\n    '48 49',\n    '49 50',\n    '50 51',\n    '51 52',\n    '52 53',\n    '53 54',\n    '54 55',\n    '55 56',\n    '56 57',\n    '57 58',\n    '58 59',\n    '59 60',\n    '60 61',\n    '61 62',\n    '62 63',\n    '63 64',\n    '64 65',\n    '65 66',\n    '66 67',\n    '67 68',\n    '68 69',\n    '69 70',\n    '70 71',\n    '71 72',\n    '72 73',\n    '73 74',\n    '74 75',\n    '75 76',\n    '76 77',\n    '77 78',\n    '78 79',\n    '79 80',\n    '80 81',\n    '81 82',\n    '82 83',\n    '83 84',\n    '84 85',\n    '85 86',\n    '86 87',\n    '87 88',\n    '88 89',\n    '89 90',\n    '90 91',\n    '91 92',\n    '92 93',\n    '93 94',\n    '94 95',\n    '95 96',\n    '96 97',\n    '97 98',\n    '98 99',\n    '99 100',\n    '100 101',\n    '101 102',\n    '102 103',\n    '103 104',\n    '104 105',\n    '105 106',\n    '106 107',\n    '107 108',\n    '108 109',\n    '109 110',\n    '110 111',\n    '111 112',\n    '112 113',\n    '113 114',\n    '114 115',\n    '115 116',\n    '116 117',\n    '117 118',\n    '118 119',\n    '119 120',\n    '120 121',\n    '121 122',\n    '122 123',\n    '123 124',\n    '124 125',\n    '125 126',\n    '126 127',\n    '127 128',\n    '128 129',\n    '129 130',\n    '130 131',\n    '131 132',\n    '132 133',\n    '133 134',\n    '134 135',\n    '135 136',\n    '136 137',\n    '137 138',\n    '138 139',\n    '139 140',\n    '140 141',\n    '141 142',\n    '142 143',\n    '143 144',\n    '144 145',\n    '145 146',\n    '146 147',\n    '147 148',\n    '148 149',\n    '149 150',\n    '150 151',\n    '151 152',\n    '152 153',\n    '153 154',\n    '154 155',\n    '155 156',\n    '156 157',\n    '157 158',\n    '158 159',\n    '159 160',\n    '160 161',\n    '161 162',\n    '162 163',\n    '163 164',\n    '164 165',\n    '165 166',\n    '166 167',\n    '167 168',\n    '168 169',\n    '169 170',\n    '170 171',\n    '171 172',\n    '172 173',\n    '173 174',\n    '174 175',\n    '175 176',\n    '176 177',\n    '177 178',\n    '178 179',\n    '179 180',\n    '180 181',\n    '181 182',\n    '182 183',\n    '183 184',\n    '184 185',\n    '185 186',\n    '186 187',\n    '187 188',\n    '188 189',\n    '189 190',\n    '190 191',\n    '191 192',\n    '192 193',\n    '193 194',\n    '194 195',\n    '195 196',\n    '196 197',\n    '197 198',\n    '198 199',\n    '199 200',\n    '200 201',\n    '201 202',\n    '202 203',\n    '203 204',\n    '204 205',\n    '205 206',\n    '206 207',\n    '207 208',\n    '208 209',\n    '209 210',\n    '210 211',\n    '211 212',\n    '212 213',\n    '213 214',\n    '214 215',\n    '215 216',\n    '216 217',\n    '217 218',\n    '218 219',\n    '219 220',\n    '220 221',\n    '221 222',\n    '222 223',\n    '223 224',\n    '224 225',\n    '225 226',\n    '226 227',\n    '227 228',\n    '228 229',\n    '229 230',\n    '230 231',\n    '231 232',\n    '232 233',\n    '233 234',\n    '234 235',\n    '235 236',\n    '236 237',\n    '237 238',\n    '238 239',\n    '239 240',\n    '240 241',\n    '241 242',\n    '242 243',\n    '243 244',\n    '244 245',\n    '245 246',\n    '246 247',\n    '247 248',\n    '248 249',\n    '249 250',\n    '250 251',\n    '251 252',\n    '252 253',\n    '253 254',\n    '254 255',\n    '255 256',\n    '256 257',\n    '"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n1 3\n1 4\n2 3\n2 4''') == '4'\n\nassert solution('''1\n1 2\n1 3\n1 4\n2 3\n2 4''') == '0'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4'\nassert solution('10 10\\n2 2 2 2 2\\n4 2 2 2 2\\n2 2 2 2 2\\n4 2 2 2 2\\n2 2 2 2 2\\n') == '0'\nassert solution('1 20\\n2 4 3\\n5 2 2\\n1 3 2\\n3 4 1\\n') == '16\\n'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '0'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '1'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n3 4\") == \"2 4\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2 3\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\") == \"3 4\""
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '2\\n3\\n4\\n'"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1 1\"\nassert solution(\"3\\n2 1\") == \"2 3\"\nassert solution(\"4\\n1 2 3 4\") == \"2 4\"\nassert solution(\"4\\n1 2 3 4\\n2 3 4\") == \"3 4\"\nassert solution(\"5\\n1 2 3 4 5\\n2 3 4\") == \"4 5\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2\n2 3\n''') == '2 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n10 20\n10 30\n20 10\n30 20\n20 30\n30 20\n20 30\n30 10\n10 20\n10 30\n10 20\n10 20\n10 30\n30 10\n30 20\n10 20\n30 20\n30 20\n30 20\n10 20\n30 20\n10 30\n20 10\n30 30\n10 20\n30 10\n10 20\n30 30\n30 30\n30 30\n30 30\n20 20\n30 30\n30 30\n30 20\n30 30\n30 20\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30\n30 30"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2 3\\n2 4\\n'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2 4'\nassert solution('4\\n1 2\\n2 3\\n3 4') == '1 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2 3 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2 4'\nassert solution('5\\n4\\n3\\n2\\n1') == '3 4'\nassert solution('4\\n3\\n1\\n2\\n5') == '2 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2\\n2 3\\n3 4\\n') == '2 3'\nassert solution('3\\n1 2\\n2 3\\n3 4\\n') == '2 4'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '0 0'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n') == '3 4'\n\n'''\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 3\n2 1\n3 5\n7 2\n''') == '5'\nassert solution('''\n2 4\n1 3\n2 1\n3 2\n7 2\n''') == '0'\n\nassert solution('''\n2 4\n1 2\n2 1\n3 3\n7 2\n''') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\""
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'\nassert solution([2, 2]) == '5'\nassert solution([1, 3]) == '5'\nassert solution([3, 5]) == '5'\nassert solution([7, 2]) == '5'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '4'\nassert solution('2 1') == '0'\nassert solution('3 5') == '8'\nassert solution('7 2') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n') == '5'\nassert solution('2 3\\n1 1\\n2 5\\n3 8\\n4 2\\n4 2\\n5 1\\n6 5\\n7 1\\n8 5\\n9 5\\n10 1\\n') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '0'\nassert solution('2 1') == '2'\nassert solution('3 5') == '4'\nassert solution('7 2') == '5'"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3 4') == '2'\nassert solution('5 4\\n5 4') == '0'\nassert solution('3 2\\n1 3') == '3'\nassert solution('3 2\\n5 4') == '2'\n\n'''\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '0'\nassert solution('2 1') == '1'\nassert solution('3 5') == '3'\nassert solution('7 2') == '5'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 3\n2 1\n3 5\n7 2\n''') == '5'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3\") == \"2\"\nassert solution(\"3 5 3\") == \"2\"\nassert solution(\"3 5 3\") == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\n1 2\n1 3\n0 0\n0 3\n0 5\n1 4\n3 3\n3 0\n\"\"\") == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 3\") == \"3\"\nassert solution(\"2 8 3\") == \"2\"\nassert solution(\"1 5 2\") == \"1\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''6 5 7\n0 1\n1 2\n3 4\n2 4\n3 3\n4 2\n1 3\n3 3''') == '5'\nassert solution('''2 1\n3 3\n3 1''') == '0'"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '2'\nassert solution(\n    '7 3 4\\n0 0\\n0 3\\n1 2\\n3 5\\n1 7\\n5 4\\n0 1\\n5 2\\n3 5\\n5 5\\n5 0\\n') == '2'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nprint(solution('''\n10 3 6\n3 9\n5 2\n7 5\n7 2\n4 7\n3 6\n9 8\n9 7\n5 1\n8 6\n9 3\n'''))\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3\") == \"2\"\nassert solution(\"5 3 5\") == \"1\"\nassert solution(\"5 4 3\") == \"3\""
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '2'\nassert solution('2 4\\n1 2\\n3 4\\n1 3\\n2 4\\n') == '3'\nassert solution('10\\n0 0\\n0 2\\n1 4\\n2 4\\n3 6\\n5 6\\n7 8\\n9 8\\n9 7\\n8 8\\n') == '6'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == \"2\"\nassert solution('3 5 3') == \"1\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n3 C\n2 C\n1 C\n''') == 'GHOST'\nassert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'SAFE'\nassert solution('''4 5\n3 C\n2 C\n1 C\n5 C\n''') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'GHOST'\nassert solution('''4 1\n1 C\n2 C\n3 C\n4 C\n''') == 'SAFE'\nassert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'GHOST'\nassert solution('''4 4\n1 C\n2 C\n3 C\n4 C\n5 C\n6 C\n7 C\n''') == 'SAFE'\nassert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"4 3\\n1 C\\n2 C\\n3 C\\n\") == \"SAFE\"\nassert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n4 C\\n\") == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n2 C\n1 C\n3 C''') == 'GHOST'\nassert solution('''4\n3 C\n2 C\n1 C\n3 C''') == 'SAFE'\n\n--Challenge: One by one, check if a string is valid\n--Challenge: What's the difference between assert and print\n\n--Challenge: If one input string is wrong, the program is stopping.\n--Challenge: Now make the program continue even if one input string is wrong.\n\n--Challenge: Print an error if it's not possible to make the wire ghost.\n--Challenge: Print an error if it's not possible to make the wire safe.\n\n--Challenge: Define a dictionary and you are an expert in the creation of dictionaries!\n--Challenge: If you are a smart student and you know the syntax, you can use the following code to create a dictionary:\n--Challenge: Use the dictionary to check if the wire ghost is safe.\n--Challenge: Use the dictionary to check if the wire is ghost.\n\n--Challenge: You need to compare the values of the dictionary to find the missing value.\n--Challenge: Compare the order of the values to find the missing value.\n--Challenge: You need to check if the whole dictionary is correct.\n'''\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 3\n3 C\n2 C\n1 C\n\"\"\") == \"GHOST\"\n\nassert solution(\"\"\"\n4 2\n3 C\n2 C\n1 C\n\"\"\") == \"SAFE\"\n\nassert solution(\"\"\"\n4 3\n3 C\n2 C\n1 C\n\"\"\") == \"SAFE\"\n\nassert solution(\"\"\"\n4 2\n3 C\n2 C\n1 C\n\"\"\") == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 C\n2 C\n3 C\n''') == 'GHOST'\nassert solution('''\n1 C\n2 C\n3 C\n4 C\n''') == 'SAFE'\nassert solution('''\n1 C\n2 C\n3 C\n4 C\n''') == 'SAFE'\n''')"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 C\n1 C\n2 C\nSample Output:\nGHOST\n''') == 'GHOST', 'It should return GHOST.'\nassert solution('''4 4\n1 C\n3 C\n2 C\n4 C\nSample Output:\nSAFE''') == 'SAFE', 'It should return SAFE.'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '5 2\\n3 C\\n2 C\\n1 C\\n') == 'GHOST'\nassert solution(\n    '5 3\\n3 C\\n2 C\\n1 C\\n') == 'SAFE'\nassert solution(\n    '1 3\\n3 C\\n2 C\\n1 C\\n') == 'SAFE'\nassert solution(\n    '1 2\\n3 C\\n2 C\\n1 C\\n') == 'SAFE'\nassert solution(\n    '1 3\\n3 C\\n2 C\\n1 C\\n') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'GHOST'\nassert solution('4 5') == 'SAFE'\nassert solution('5 5') == 'SAFE'\nassert solution('8 7') == 'GHOST'\nassert solution('8 9') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 C\n2 C\n3 C\n''') == 'GHOST'\n\nassert solution('''4\n3 C\n2 C\n1 C\n''') == 'SAFE'\n\nassert solution('''10\n1 C\n9 C\n2 C\n3 C\n4 C\n5 C\n6 C\n7 C\n8 C\n9 C\n10 C\n''') == 'GHOST'\n\nassert solution('''10\n1 C\n2 C\n3 C\n4 C\n5 C\n6 C\n7 C\n8 C\n9 C\n10 C\n''') == 'SAFE'\n\nassert solution('''10\n1 C\n2 C\n3 C\n4 C\n5 C\n6 C\n7 C\n8 C\n9 C\n10 C\n''') == 'SAFE'"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('2 3.001') == '1'\nassert solution('2 2.0001') == '2'\nassert solution('2 0.001') == 'no fika'\nassert solution('2 1.0001') == '2'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2'\nassert solution('3 1\\n0.00 1.00') == '1'\nassert solution('10 1\\n0.00 0.01') == '1.0'\nassert solution('100 1\\n0.00 0.01') == '1.0'\nassert solution('1000000 1\\n0.00 0.01') == '1.0'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n0.00 2.00') == \"2\"\nassert solution('100000 1\\n0.00 2.00') == \"1\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 1\n0.00 2.00\n0.00 0.00\n0.00 0.00\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 1\n1.00 2.00\n1.00 2.00\n1.00 2.00\n\"\"\") == \"no fika\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n\nfor n in range(2, 10):\n    for x, y in zip(range(0, 10), range(1, 11)):\n        if y - x == 10:\n            print(y)\n        else:\n            print(x)\n'''\n\nimport math"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '2'\nassert solution('6 3') == 'no fika'\nassert solution('1 2') == 'no fika'\nassert solution('1 5') == 'no fika'\nassert solution('1 1') == 'no fika'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 2') == 'no fika'\nassert solution('20 3') == '3'\nassert solution('20 2') == '2'\nassert solution('10 2') == 'no fika'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2'\nassert solution('1 2\\n0.00 2.00') == 'no fika'"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '2'\nassert solution('2 2.00') == '2'\nassert solution('3.000 3.000') == '1'\nassert solution('3.000 1.000') == '1'\nassert solution('1.000 2.000') == '1'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1\\n0.00 1.00') == '2'\nassert solution('5 1\\n0.01 1.01') == '1'\nassert solution('5 1\\n0.02 1.02') == '1'\nassert solution('5 1\\n0.03 1.03') == '1'\nassert solution('5 1\\n0.04 1.04') == '1'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('4\\n0 0\\n30 0\\n0 0\\n15 0') == '15'"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '5'\nassert solution('10') == '9.6'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n0 0\n10 0\n2\n30 0\n15 0\n''') == '10'\nassert solution('''\n3\n-1 0\n0 0\n0 0\n''') == '0'\nassert solution('''\n1\n0\n0\n''') == '0'\nassert solution('''\n3\n1 2\n3 4\n-1 2\n''') == '4'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '11'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '15'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n0 0\n2\n30 0\n15 0\n\"\"\") == \"10\"\nassert solution(\"\"\"\n2\n0 0\n10 0\n2\n30 0\n15 0\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n10 0\") == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n\") == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"15\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'\nassert solution('10 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '1'\nassert solution('10 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n2\\n') == '1'\nassert solution('2\\n1\\n2\\n2\\n') == '2'\nassert solution('3\\n1\\n2\\n2\\n') == '0'\nassert solution('4\\n1\\n2\\n2\\n') == '1'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4 6\nE 1 10\nE 1 20\nE 1 30\nE 1 40\nE 1 50\nE 1 60\nW 1 70\nE 1 80\nE 1 90\nE 1 100\nE 1 110\nE 1 120\nE 1 130\nE 1 140\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n12 3\nW 10 0\nW 10 3\nE 17 4\nE 17 6\nE 17 9\nE 17 12\nE 17 15\nE 17 18\nE 17 21\nE 17 24\nE 17 27\nE 17 30\nE 17 33\nE 17 36\nE 17 39\nE 17 42\nE 17 45\nE 17 48\nE 17 51\nE 17 54\nE 17 57\nE 17 60\nE 17 63\nE 17 66\nE 17 69\nE 17 72\nE 17 75\nE 17 78\nE 17 81\nE 17 84\nE 17 87\nE 17 90\nE 17 93\nE 17 96\nE 17 99\nE 17 102\nE 17 105\nE 17 108\nE 17 111\nE 17 114\nE 17 117\nE 17 120\nE 17 123\nE 17 126\nE 17 129\nE 17 132\nE 17 135\nE 17 138\nE 17 141\nE 17 144\nE 17 147\nE 17 150\nE 17 153\nE 17 156\nE 17 159\nE 17 162\nE 17 165\nE 17 168\nE 17 171\nE 17 174\nE 17 177\nE 17 180\nE 17 183\nE 17 186\nE 17 189\nE 17 192\nE 17 195\nE 17 198\nE 17 201\nE 17 204\nE 17 207\nE 17 210\nE 17 213\nE 17 216\nE 17 219\nE 17 222\nE 17 225\nE 17 228\nE 17 231\nE 17 234\nE 17 237\nE 17 240\nE 17 243\nE 17 246\nE 17 249\nE 17 252\nE 17 255\nE 17 258\nE 17 261\nE 17 264\nE 17 267\nE 17 270\nE 17 273\nE 17 276\nE 17 279\nE 17 282\nE 17 285\nE 17 288\nE 17 291\nE 17 294\nE 17 297\nE 17 300\nE 17 303\nE 17 306\nE 17 309\nE 17 312\nE 17 315\nE 17 318\nE 17 321\nE 17 324\nE 17 327\nE 17 330\nE 17 333\nE 17 336\nE 17 339\nE 17 342\nE 17 345\nE 17 348\nE 17 351\nE 17 354\nE 17 357\nE 17 360\nE 17 363\nE 17 366\nE 17 369\nE 17 372\nE 17 375\nE 17 378\nE 17 381\nE 17 384\nE 17 387\nE 17 390\nE 17 393\nE 17 396\nE 17 399\nE 17 402\nE 17 405\nE 17 408\nE 17 411\nE 17 414\nE 17 417\nE 17 420\nE 17 423\nE 17 426\nE 17 429\nE 17 432\nE 17 435\nE 17 438\nE 17 441\nE 17 444\nE 17 447\nE 17 450\nE 17 453\nE 17 456\nE 17 459\nE 17 462\nE 17 465\nE 17 468\nE 17 471\nE 17 474\nE 17 477\nE 17 480\nE 17 483\nE 17 486\nE 17 490\nE 17 493\nE 17 496\nE 17 499\nE 17 502\nE 17 506\nE 17 510\nE 17 513\nE 17 516\nE 17 520\nE 17 524\nE 17 527\nE 17 530\nE 17 533\nE 17 536\nE 17 540\nE 17 543\nE 17 546\nE 17 549\nE 17 552\nE 17 557\nE 17 560\nE 17 563\nE 17 566\nE 17 569\nE 17 572\nE 17 575\nE 17 578\nE 17 581\nE 17 584\nE 17 587\nE 17 590\nE 17 593\nE 17 596\nE 17 600\nE 17 603\nE 17 606\nE 17 610\nE 17 613\nE 17 616\nE 17 619\nE 17 622\nE 17 626\nE 17 630\nE 17 633\nE 17 636\nE 17 639\nE 17 642\nE 17 645\nE 17 648\nE 17 650\nE 17 653\nE 17 656\nE 17 659\nE 17 662\nE 17 665\nE 17 668\nE 17 671\nE 17 674\nE 17 677\nE 17 680\nE 17 683\nE 17 686\nE 17 689\nE 17 692\nE 17 695\nE 17 698\nE 17 701\nE 17 704\nE 17 707\nE 17 710\nE 17 713\nE 17 716\nE 17 719\nE 17 722\nE 17 725\nE 17 728\nE 17 731\nE 17 734\nE 17 737\nE 17 740\nE 17 743\nE 17 746\nE 17 749\nE 17 752\nE 17 755\nE 17 758\nE 17 761\nE 17 764\nE 17 767\nE 17 770\nE 17 773\nE 17 776\nE 17 779\nE 17 782\nE 17 785\nE 17 788\nE 17 791\nE 17 794\nE 17 797\nE 17 800\nE 17 803\nE 17 806\nE 17 809\nE 17 812\nE 17 815\nE 17 818\nE 17 821\nE 17 824\nE 17 827\nE 17 830\nE 17 833\nE 17 836\nE 17 839\nE 17 842\nE 17 845\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == output\nimport os\nimport sys\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1\nW 1 5\nW 1 8\nW 2 10\nE 2 5\nE 2 7\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n6 2\nW 1 6\nW 1 8\nW 2 6\nE 2 5\nE 2 7\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 4\nW 1 8\nW 1 7\nW 2 3\nW 3 2\nW 3 1\nE 2 3\nE 2 2\nE 2 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n6 6\nW 1 8\nW 1 7\nW 2 3\nW 3 2\nW 3 1\nW 4 5\nE 2 3\nE 2 2\nE 2 1\nE 3 1\nE 3 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n15 2\nW 1 4\nW 1 1\nW 3 5\nW 2 6\nE 2 7\nE 2 4\nE 2 3\nE 3 1\nE 3 2\nE 3 3\nE 3 4\nE 3 5\nE 3 6\nE 3 7\nE 3 8\nE 4 2\nE 5 2\nE 5 2\nE 5 3\nE 5 4\nE 5 6\nE 5 7\nE 5 8\nE 6 1\nE 6 2\nE 6 3\nE 6 4\nE 6 5\nE 6 6\nE 6 7\nE 6 8\nE 7 2\nE 7 3\nE 7 4\nE 7 5\nE 7 6\nE 7 7\nE 7 8\nE 8 2\nE 8 3\nE 8 4\nE 8 5\nE 8 6\nE 8 7\nE 8 8\nW 3 9\nW 5 9\nE 1 9\n\"\"\") == \"4\""
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'\nassert solution('4 4\\nE 4 2\\nW 3 2\\nE 10 4\\n') == '0'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5\n8\n5 6\n3 4\n5 13\n6 10\n\"\"\") == \"3\"\n\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '3'\nassert solution('''10\n5 8\n5 6\n3 4\n5 13\n6 10''') == '1'\nassert solution('''5\n5 8\n5 6\n3 4\n5 13\n6 10''') == '2'\n'''\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n8\\n5 6\") == \"3\"\nassert solution(\"5\\n8\\n5 6\") == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\\n1\\n1\\n1\\n1\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n8\\n5 6\\n3 4') == '3'\nassert solution('4\\n8\\n5 6\\n3 4') == '2'\nassert solution('5\\n8\\n5 6\\n3 4') == '1'\nassert solution('5\\n8\\n5 10\\n3 4') == '2'\nassert solution('5\\n8\\n5 13\\n3 4') == '0'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n8 6\\n5 6') == '3'\nassert solution('5\\n8 6\\n3 4\\n5 13\\n6 10') == '4'"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n4\\n5\\n') == '3'\nassert solution('1\\n2\\n3\\n4\\n') == '2'\nassert solution('1\\n2\\n5\\n3\\n4\\n') == '2'\nassert solution('1\\n2\\n4\\n3\\n5\\n') == '1'\nassert solution('1\\n1\\n5\\n3\\n4\\n') == '0'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n8\\n5 6') == '3'\nassert solution('5\\n6 10') == '1'\nassert solution('3\\n4\\n5\\n6') == '3'"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 3\n''') == 'ABABCD'\nassert solution('''\n3 1 1\n1\n''') == 'ABC'\nassert solution('''\n3 3\n1 2 3\n''') == 'ABC'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n10 3 3\n''') == 'AABBCCC'\nassert solution('''\n4 4\n5 2 1\n''') == 'ABBBCC'\nassert solution('''\n4 4\n2 2 1\n''') == 'AABACCC'\nassert solution('''\n4 4\n4 1 2\n''') == 'AABACCC'\nassert solution('''\n4 4\n2 2 2\n''') == 'AABACCC'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4\\n5 3 3') == 'ABC'\nassert solution('5 4\\n3 3 3') == 'ABC'\nassert solution('1 5\\n3 3 3') == 'ABCABCABC'\n\n-- Python --"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'AABB'"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n10 3 3\n''') == 'BACBA'\nassert solution('''\n10 3\n1 1 2\n''') == 'BACBA'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'ABCAC'"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4\\n10 3 3\\n') == 'ABB\\n'\nassert solution('8 10\\n1 2 3\\n8 3 4\\n4 5 6\\n7 8 9\\n1 10\\n') == 'ABCCBAB\\n'"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '5 4\\n'\n    '3 2 2\\n'\n    '3 2 1\\n'\n    '4 3 2\\n'\n    '2 4 1\\n') == 'ABD'\n\nassert solution(\n    '6 4\\n'\n    '2 3 2\\n'\n    '1 2 1\\n'\n    '3 2 2\\n'\n    '2 1 1\\n'\n    '3 2 1\\n') == 'ABCD'\n\nassert solution(\n    '6 5\\n'\n    '1 2 1\\n'\n    '2 1 1\\n'\n    '1 3 3\\n'\n    '3 2 2\\n'\n    '1 1 2\\n') == 'ABDBCDCC'\n\nassert solution(\n    '6 6\\n'\n    '1 3 3\\n'\n    '3 1 3\\n'\n    '3 2 3\\n'\n    '2 3 2\\n'\n    '2 3 2\\n') == 'ABCDBCDDCCDDCCDD'\n\nassert solution(\n    '1 1\\n'\n    '3 3\\n
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 4, 4, 3, 2]) == \"A\\nB\\nC\\n\"\nassert solution([2, 3, 2, 3, 2]) == \"ABC\"\nassert solution([2, 1, 2, 3, 2]) == \"AB\\nAC\"\nassert solution([2, 3, 2, 3, 2]) == \"AB\\nBC\"\nassert solution([3, 4, 3, 4, 2]) == \"AC\\nBC\\nAC\\n\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(samples[0]) == \"B A C\"\nassert solution(samples[1]) == \"B C D A\"\nassert solution(samples[2]) == \"B D C A\"\nassert solution(samples[3]) == \"B C D A\"\nassert solution(samples[4]) == \"B D C A\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"11\\n\"\n    \"BETWEEN\\n\"\n    \"SUBTLE\\n\"\n    \"SHADING\\n\"\n    \"AND\\n\"\n    \"THE\\n\"\n    \"ABSENCE\\n\"\n    \"OF\\n\"\n    \"LIGHT\\n\"\n    \"LIES\\n\"\n    \"NUANCE\\n\"\n    \"IQLUSION\\n\"\n    \"BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"\n) == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\"\"\""
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    12\n    BETWEEN\n    SUBTLE\n    SHADING\n    AND\n    THE\n    ABSENCE\n    OF\n    LIGHT\n    LIES\n    NUANCE\n    IQLUSION\n    BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n    \"\"\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\nimport unittest\n\nclass TestStringMethods(unittest.TestCase):\n    def test_input(self):\n        self.assertEqual(solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\"), \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\")"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n''') == 'BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN'\nassert solution('''\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\nABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n''') == 'BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN'\nassert solution('''\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\nABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\nABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\n''') == 'ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\NUANCE\\IQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"11\") == \"\"\nassert solution(\"12\") == \"\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\IQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '12'\nprint(solution())\n\"\"\""
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abrahellehhelleh') == '12'"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\nassert solution(\"ghi\") == \"0\""
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('abraheellhheh') == '12'\nassert solution('hellabraheelh') == '0'\nassert solution('hehabrbhehb') == '0'\nassert solution('aabrbhehb') == '4'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('abra') == '4'\nassert solution('ab') == '1'\n\"\"\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('abraheblehhelleh') == '12'\nassert solution('abraheblehleh') == '6'\nassert solution('abracadabra') == '0'\nassert solution('abbaaaaaab') == '4'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''abra\n    hleh\n    helleh''') == '12'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abrahellehhelleh') == '12'"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''\n1 3 3 1 2 5 2 5 1 4 1 1\n1 1 1 1 2 5 5 1 4 4 4 5\n1 3 5 3 2 3 3 5 5 5 1\n1 1 1 1 1 4 4 4 1 5 5 5\n1 4 5 1 4 1 2 4 4 4 4 2\n''') == '130'\nassert solution('''\n1 1 3 2 2 5 5 3 3 5 1 1\n3 5 1 2 3 4 3 4 5 2 5 5\n1 1 3 5 4 3 5 5 4 1 1 1\n1 1 1 1 4 5 5 5 5 5 1 1\n1 4 3 2 4 3 4 5 5 5 2 2\n''') == '147'\nassert solution('''\n5 5 5 4 5 5 4 4 4 5 4 5 4\n4 5 5 5 4 5 4 4 4 4 5 5 5\n4 5 5 5 4 5 5 4 4 4 5 5 5\n4 5 5 5 4 5 5 4 4 4 5 5 5\n4 5 5 5 4 5 5 4 4 4 5 5 5\n''') == '1590'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"65\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '14'\nassert solution('5') == '29'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"4\") == \"30\"\nassert solution(\"65\") == \"340\"\nassert solution(\"4\") == \"40\"\nassert solution(\"7\") == \"50\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 3 1 2 3\n3 3 2 3 1\n4 2 2 2 2\n''') == '70'\nassert solution('''\n2\n1 1\n2 2\n''') == '50'\nassert solution('''\n1\n1 1\n1 2\n''') == '40'\nassert solution('''\n1\n1 2\n1 1\n''') == '40'\nassert solution('''\n1\n2 3\n1 2\n''') == '36'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    '2',\n    '4 1 2 3',\n    '2 4 2 1 3',\n    '3 2 1 2 3',\n])) == '30'\n\nassert solution('\\n'.join([\n    '1',\n    '2 1 2 3',\n    '2 4 2 1 3',\n    '3 2 1 2 3',\n])) == '40'\n\nassert solution('\\n'.join([\n    '1',\n    '2 2 3 4',\n    '3 4 5 2 3',\n    '4 5 5 4 4',\n])) == '50'\n\nassert solution('\\n'.join([\n    '1',\n    '2 2 3 3',\n    '3 4 5 2 3',\n    '4 5 5 5 5',\n])) == '60'\n\nassert solution('\\n'.join([\n    '1',\n    '2 2 3 3',\n    '3 4 5 2 3',\n    '4 5 5 5 5',\n])) == '70'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"7\"\nassert solution(\"10 5\") == \"7\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"10 10 0\") == \"10\"\nassert solution(\"10 10 1\") == \"9\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n1 2 3 4 5\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\n\nassert solution('''6\n1 2 3 4 5 6\n1 2 3 4 5 6\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '9'\n\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '11'"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n1 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n\"\"\") == \"10\"\nassert solution(r\"\"\"\n6 11\n4 3 2 1 5 8 7 9 10\n4 3 2 1 5 8 7 9\n6 11\n4 3 2 1 5 8 7 9\n4 3 2 1 5 8 7\n6 11\n4 3 2 1 5 8 7\n4 3 2 1 5 8\n6 11\n4 3 2 1 5 8\n4 3 2 1 5\n6 11\n4 3 2 1 5\n4 3\n6 11\n4 3\n6 11\n4 3\n6 11\n4 3\n4 3\n6 11\n4 3\n4 3\n6 11\n4 3\n4 3\n6 11\n4 3\n4 3\n\"\"\") == \"21\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10'\nassert solution('''\n5 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10'\nassert solution('''\n10 3\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10'\nassert solution('''\n5 3\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '10'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == \"10\\n7\\n8\\n7\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '8'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '7'\nassert solution('10\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '8'\nassert solution('0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '0'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 5\") == \"7\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"8\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"8\""
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 2\n''') == '5'\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 2\n''') == '0'\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 3\n''') == '5'\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 3\n''') == '0'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n10 7 6\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n4 -2\n5 0\n6 -2\n7 -2\n8 -2\n9 -2\n10 -1\n11 -1\n12 -1\n13 -1\n14 -1\n15 -1\n16 -1\n17 -1\n18 -1\n19 -1\n20 -1\n21 -1\n22 -1\n23 -1\n24 -1\n25 -1\n26 -1\n27 -1\n28 -1\n29 -1\n30 -1\n\"\"\"\n) == \"55\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 7') == '6'\nassert solution('2 4 5') == '3'\nassert solution('4 3') == '3'\nassert solution('3 4') == '4'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'\n\nassert solution('''\n2 3\n0 1\n-1 2\n1 1\n1 0\n''') == '3'\n\nassert solution('''\n2 4\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'\n\nassert solution('''\n1 1\n0 2\n''') == '2'\n\nassert solution('''\n2 1\n0 1\n''') == '1'"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 4, 7]) == '6'\nassert solution([-2, 0]) == '2'\nassert solution([0, -1]) == '2'\nassert solution([-2, 1]) == '1'\nassert solution([1, 0]) == '1'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == \"6\"\n\nassert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == \"0\"\n\nassert solution('''5 5 1\n-5 -5\n-5 -4\n-4 -3\n-3 -2\n-2 -1\n''') == \"4\"\n\nassert solution('''8 6 5\n-5 -5\n-5 -4\n-4 -3\n-3 -2\n-2 -1\n-1 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == \"7\"\n\nassert solution('''8 7 5\n-5 -5\n-5 -4\n-4 -3\n-3 -2\n-2 -1\n-1 0\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == \"5\""
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'\nassert solution('''\n3 3 3\n3 1\n2 -1\n2 1\n2 1\n''') == '2'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 4 7\"\n    \"0 -1\"\n    \"0 1\"\n    \"1 0\"\n    \"2 1\"\n    \"2 3\"\n    \"3 -1\"\n) == \"6\"\nassert solution(\n    \"1 2\"\n    \"0 1\"\n    \"0 0\"\n    \"1 2\"\n    \"1 2\"\n    \"1 3\"\n    \"1 0\"\n) == \"2\""
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'\n\nassert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"3 4 7\\n0 -1\\n-2 1\\n-2 1\\n0 1\\n2 1\\n2 3\\n3 -1\") == \"10\""
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4 3\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'\n\nassert solution('''\n10 10 10\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n4 -1\n4 0\n5 -1\n5 1\n6 -1\n6 1\n6 2\n5 2\n4 2\n3 0\n3 1\n''') == '6'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1 4 40''') == '3'\nassert solution('''4 1 6 45''') == '4'\nassert solution('''1 1 5 30''') == '2'\nassert solution('''2 1 6 40''') == '3'\nassert solution('''8 1 2 6''') == '2'\n''')\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('9 1 5 100') == '10'\nassert solution('5 4 3 1') == '6'\n\"\"\"\n\ns,r,n,z = map(int,input().split())\nprint(min(int((n*n*s*s/r/r-n*n*s*s/r/r+n*n*s*s/r/r)*z/100),n))"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\nassert solution(\"3 2 1 4 40\") == \"3\"\nassert solution(\"3 2 2 1 4 40\") == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2\n10\n''') == '1'\nassert solution('''2\n4\n2\n3\n''') == '1'\nassert solution('''1\n2\n1\n1\n''') == '1'\n'''\n\nfrom math import pi\n\ns, r, n, z = map(int, input().split())\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('2 1 4 40') == '2'\nassert solution('3 1 1 4 40') == '2'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 4 40') == '3'\n\nSample Input 2:\n3 100 30\nSample Output 2:\n3\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('10 1 10 40') == '10'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '20'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 1\") == \"2\"\nassert solution(\"3 1 4 40\") == \"3\"\nassert solution(\"2 4 3 1\") == \"3\"\n\nimport collections\n\nn, m, z = map(int, input().split())\narea = (m * n) ** 0.5\np1 = n - z\np2 = n + z"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('10 1 2 40') == '10'\nassert solution('100 2 1 50') == '99'\nassert solution('100 100 50 50') == '100'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('5 1 2 2') == '2'\nassert solution('5 1 4 4') == '2'\nassert solution('5 1 4 3') == '1'\nassert solution('5 1 4 5') == '1'"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"91\""
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == \"99\"\nassert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == \"83\"\nassert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == \"0\"\nassert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n99 0 -1') == \"0\"\nassert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n99 0 -1') == \"\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n2 5\n90 10\n40 100\n''') == '90'\nassert solution('''\n3 8\n5 60\n40 60\n40 100\n40 100\n''') == '40'\nassert solution('''\n3 10\n90 10\n40 100\n''') == '90'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n10 6\n0 0 1 1 1\n1 1 0 0\n1 1 1 1\n1 1 1 1\n1 1 1 1\n0 0 1 1\n1 1 0 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n0 0 1 1\n''') == '1 1 1 1 1 1 1'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"99\"\nassert solution(\"\") == \"\"\nassert solution(\"3 352\") == \"3\"\nassert solution(\"9 82 444\") == \"82\"\nassert solution(\"99 62 -1\") == \"99\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\n\nassert solution('''\n5 6\n1 9 9 9 9 9\n10 10 10 10 10\n5 10 5 10 5\n5 10 5 10 5\n5 10 5 10 5\n''') == '10'\n\nassert solution('''\n3 4\n-1 -1 -1 -1\n-1 -1 -1 -1\n-1 -1 -1 -1\n0 -1 0 -1\n-1 -1 -1 -1\n''') == '-1'\n\nassert solution('''\n0\n0\n''') == '0'\n\nassert solution('''\n3 2\n3 5 8\n-1 -1 -1\n-1 -1 -1\n-1 -1 -1\n0 -1 0\n-1 -1 -1\n-1 -1 -1\n''') == '-1'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    ''') == '99'"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n\"\"\"\n) == \"99\"\nassert solution(\n\"\"\"\n3 2\n78 83\n60 68\n60 69\n\"\"\"\n) == \"\"\nassert solution(\n\"\"\"\n1 2\n15\n\"\"\"\n) == \"\"\n\"\"\"\n-----Explanation-----\nTask 3 can be performed at location 0 with a minimum of 15 minutes. Task 1 can be performed at location 0 with a minimum of 15 minutes.\n\"\"\""
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 352\") == \"99\"\nassert solution(\"92 76 436\") == \"3\"\nassert solution(\"99 62 -1\") == \"\"\nassert solution(\"0 70 66 71 97\") == \"0\"\nassert solution(\"76 0 87 66 74\") == \"3\"\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n') == '99'\nassert solution('5 2\\n1 2 4 6 8\\n2 2 1 4 6\\n3 1 2 4 7\\n2 1 2 3\\n4 4 2 1\\n') == '1'"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2 3'\nassert solution('5\\n1 2\\n3 4\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '3 4'\nassert solution('20\\n2 3\\n6 5\\n9 6\\n8 7\\n7 8\\n4 5\\n1 2\\n9 10\\n9 11\\n8 11\\n7 10\\n4 6\\n') == '9 7'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2 3\\n4 2\\n'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '2 4'\nassert solution('''\n5\n1 2\n1 3\n2 3\n2 4\n3 4\n''') == '3 4'\nassert solution('''\n5\n1 2\n1 3\n2 3\n2 4\n3 4\n''') == '4 2'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n2 3\n3 4\n''') == \"2 3 4\"\n\nassert solution('''\n4\n3 1\n1 2\n2 3\n''') == \"4 1 3\"\n\nassert solution('''\n4\n2 3\n1 2\n3 4\n''') == \"1 2 3\"\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n''') == \"2 3 5\"\n\nassert solution('''\n1\n2\n3\n''') == \"3 2\""
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == \"2\"\nassert solution('2') == \"4\"\nassert solution('3') == \"1\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2 3 4'"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2 3\"\nassert solution(\"6\\n1 2 3 4\\n5 6 7 8\\n9 10 11 12\\n13 14 15 16\\n17 18 19 20\\n21 22 23 24\\n25 26 27 28\\n29 30 31 32\\n\") == \"3 5\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2 3 4'\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 2\n2 3\n3 4\n''') == '2 4'''"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1\n2 2\n3 2\n4 1\n5 1\n''') == '9.0'\nassert solution('''3\n1 2\n2 3\n3 1\n''') == '9.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 1\n2 2\n3 2\n4 1\n''') == '9.0'\nassert solution('''5\n1 1\n2 2\n3 2\n4 1\n5 3\n''') == '18.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n1 1\n2 2\n3 2\n4 1\n\"\"\") == \"9.0000\\n12\\n12.00000\\n9.0\\n\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1') == '9.00000'\nassert solution('6\\n1 1 2 1\\n2 3\\n4 5\\n4 2\\n3 3\\n3 1\\n2 2\\n5 1\\n') == '12.00000'\nassert solution('100\\n30 25 100 50\\n50 10\\n95 20\\n30 20\\n40 10\\n80 5\\n75 20\\n95 20\\n100 10\\n') == '105.00000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.00000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\\n\") == \"9.0000\\n12.00000\\n12.00000\\n9.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1\\n') == '9.0000\\n12.00000\\n12.00000\\n9.0'\nassert solution('5\\n1 1\\n2 2\\n3 2\\n4 1\\n5 2\\n') == '9.0000\\n12.00000\\n12.00000\\n9.0\\n12.00000'"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1.5'\nassert solution('2') == '1.25'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3.00000'\nassert solution('4') == '9.0'\nassert solution('10') == '9.0'\nassert solution('4') == '9.0'\nassert solution('7') == '8.00000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '12.00000'\nassert solution('1 1') == '9.0'\nassert solution('3 3') == '0.0'\nassert solution('4') == '9.0'\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'ST A\\nDI Y'\n\nassert solution('3') == 'DI Y\\nDI Y\\nDI Y'\n\"\"\""
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\nDI Y\"\n\n'''\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'AD\\nPL Y\\nDI Y\\n'\nassert solution('4') == 'AD\\nPL Y\\nDI Y\\nDI\\nDI\\n'\nassert solution('255') == 'AD\\nPL Y\\nDI Y\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\nDI\\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\"\nassert solution(\"128\") == \"ST A\\nST X\\nST Y\\nST Z\\nST E\\nST H\\nST L\\nPH A\\nPH X\\nPH Y\\nPH Z\\nPH E\\nPH H\\nPH L\\nAD\\nPL Y\\nDI Y\\nDI Z\\nDI E\\nDI H\\nDI L\"\nassert solution(\"129\") == \"ST A\\nST X\\nST Y\\nST Z\\nST E\\nST H\\nST L\\nPH A\\nPH X\\nPH Y\\nPH Z\\nPH E\\nPH H\\nPH L\\nAD\\nPL Y\\nDI Y\\nDI Z\\nDI E\\nDI H\\nDI L\"\nassert solution(\"-1\") == \"ST A\\nST X\\nST Y\\nST Z\\nST E\\nST H\\nST L\\nPH A\\nPH X\\nPH Y\\nPH Z\\nPH E\\nPH H\\nPH L\\nAD\\nPL Y\\nDI Y\\nDI Z\\nDI E\\nDI H\\nDI L\\nAD\\nPL Y\\nDI Y\\nDI Z\\nDI E\\nDI H\"\nassert solution(\"0\") == \"ST A\\nST X\\nST Y\\nST Z\\nST E\\nST H\\nST L\\nPH A\\nPH X\\nPH Y\\nPH Z\\nPH E\\nPH H\\nPH L\\nAD\\nPL Y\\nDI Y\\nDI Z\\nDI E\\nDI H\\nDI L\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"DI Y\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n\"\"\"\n\nfrom typing import Union\nimport unittest\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'ST A\\nDI A\\n'\nassert solution('25') == 'ST A\\nPL A\\nPL Y\\nDI Y\\n'\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"ST A\\nPL A\\nDI A\\n\"\nassert solution(\"2\") == \"ST X\\nPL Y\\nDI Y\\n\"\n\"\"\""
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\""
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n\nassert solution('''\n1 4 8\n0000 0000 0000 0000 0000\n0000 0000 FFFF 0000 0000\n00FF FFFF 0000 0000 0000\n0000 0000 0000 FFFF 0000\n0000 0000 0000 0000 0000\n0000 FFFF FFFF 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n0000 0000 0000 0000 0000\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 6\") == \"2\"\nassert solution(\"2 2 2\") == \"0\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5 6\\nFFFF FFFF 0000 0000 0000 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\"\nassert solution(\"1 4 5\\nFFFF FFFF 0000 0000 0000 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\\n0000 0000 0000 0000 0000 0000\") == \"1\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 6\") == \"2\"\nassert solution(\"1 0 0 0 0\") == \"1\"\nassert solution(\"1 3 0 0 0\") == \"1\"\nassert solution(\"1 1 3 1 0 0\") == \"2\"\nassert solution(\"1 1 1 3 1 0\") == \"3\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1 5 6\\n\"\n    \"0000 FFFF 0000 0000 0000 0000\\n\"\n    \"FFFF FFFF 0000 FFFF FFFF 0000\\n\"\n    \"0000 0000 0000 FFFF 0000 0000\\n\"\n    \"0000 FFFF FFFF FFFF FFFF 0000\\n\"\n    \"0000 0000 0000 0000 0000 0000\\n\"\n    ) == \"2\"\n\nassert solution(\n    \"3 4 4\\n\"\n    \"0000 0000 0000 0000 0000\\n\"\n    \"FFFF FFFF FFFF FFFF FFFF\\n\"\n    \"0000 0000 0000 0000 0000\\n\"\n    \"FFFF FFFF FFFF FFFF FFFF\\n\"\n    \"0000 0000 0000 0000 0000\\n\"\n    ) == \"5\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('2 3 3') == '1'"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 6\") == '2'\nassert solution(\"1 5 5\") == '2'\nassert solution(\"1 5 5\") == '2'\nassert solution(\"1 5 5\") == '2'\nassert solution(\"1 5 5\") == '2'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abaaba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n\") == \"abaaba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nNONE on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"abaaba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaabaaba"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'abaaba\\nNONE\\nabbbbbbbbbbbbbbbbba\\na'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'abaaba'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'NONE'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'NONE'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'NONE'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n') == 'NONE'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\nS -> aSa\") == \"abaaba\"\nassert solution(\"4\\nS -> aSb S\\nS -> bSb\") == \"abbbbbbbbbbbbbbbbba\"\nassert solution(\"5\\nS -> aSb S\\nS -> bSb\\nS -> a\\nS -> b\") == \"a\"\nassert solution(\"3\\nS -> aSa\") == \"abaaba\"\nassert solution(\"4\\nS -> aSb S\\nS -> bSb\") == \"abbbbbbbbbbbbbbbbba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\") == \"abaaba\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'abaaba'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nNONE\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'NONE'\nprint(solution(input()))\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nNONE\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'abaaba\\nNONE\\nb\\nabbbbbbbbbbbbbbbbba'"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n4 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2\n1 3 7\n2 0\n4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n3 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n4 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n4 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n') == '4'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\n\nassert solution('1 3 7') == '1'\n\nassert solution('2 0') == '2'\n\nassert solution('4') == '0'\n\nassert solution('4') == '0'"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4'\n\nassert solution('''\n4\n2 2 0 1\n1 2 2\n2 1\n4\n''') == '3'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution('1\\n2') == '2'\nassert solution('1\\n2') == '2'\nassert solution('3\\n4') == '1'\nassert solution('5\\n6') == '0'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n') == '4'\nassert solution('4\\n0 5 0 2\\n1 3 7\\n2 0\\n4\\n') == '3'\nassert solution('3\\n1 3 7\\n2 0\\n4\\n') == '6'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\n\"\"\"\nimport math"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n') == '4'\nassert solution('10\\n15 3 5 10 2\\n6 2 2\\n8 8\\n12\\n') == '7'"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 3\\n\"\n    \"4 4\\n\"\n    \"WWWW\\n\"\n    \"WSBB\\n\"\n    \"WWWW\\n\"\n    \"WBWG\\n\"\n) == \"GO FOR IT\"\n\nassert solution(\n    \"2 3\\n\"\n    \"4 4\\n\"\n    \"WWWW\\n\"\n    \"WSBB\\n\"\n    \"WWWW\\n\"\n    \"WBWG\\n\"\n) == \"SUCCESS\"\n\nassert solution(\n    \"2 3\\n\"\n    \"4 4\\n\"\n    \"WWWW\\n\"\n    \"WSBB\\n\"\n    \"WWWW\\n\"\n    \"WBWG\\n\"\n) == \"NO CHANCE\"\n\nassert solution(\n    \"2 3\\n\"\n    \"4 4\\n\"\n    \"WWWW\\n\"\n    \"WSBB\\n\"\n    \"WWWW\\n\"\n    \"WBWG\\n\"\n) == \"NO WAY\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"NO WAY\"\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(1000000)"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWBWG\\nWSBB') == 'SUCCESS'\nassert solution('1 1\\n1 1\\n' * 1000) == 'NO WAY'\nassert solution('1 2\\n1 1\\n' * 1000) == 'GO FOR IT'\n\"\"\"\nimport re\nimport itertools\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 3\\n\"\n    \"4 4\\n\"\n    \"WWWW\\n\"\n    \"WSBB\\n\"\n    \"WWWW\\n\"\n    \"WBWG\\n\"\n) == \"GO FOR IT\"\n\nassert solution(\n    \"1 1\\n\"\n    \"10 10\\n\"\n    \"SBBB\\n\"\n    \"SGBG\\n\"\n    \"SBBB\\n\"\n    \"SGBG\\n\"\n    \"SBBB\\n\"\n    \"SGBG\\n\"\n    \"SBBB\\n\"\n    \"SGBG\\n\"\n) == \"SUCCESS\"\n\nassert solution(\n    \"2 2\\n\"\n    \"4 4\\n\"\n    \"WBW\\n\"\n    \"WBW\\n\"\n    \"SBB\\n\"\n    \"SBB\\n\"\n    \"WBW\\n\"\n    \"WBW\\n\"\n    \"WBW\\n\"\n    \"WBW\\n\"\n    \"SBB\\n\"\n    \"SBB\\n\"\n    \"WBW\\n\"\n    \"WBW\\n\"\n    \"WBW\\n\"\n    \"WBW\\n\"\n    \"WBW\\n\"\n    \"WBW\\n\"\n) == \"NO CHANCE\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\nWBWG\n''') == \"GO FOR IT\"\nassert solution('''\n2 3\n3 4\nWWWW\nWSBB\nWWWW\n''') == \"NO CHANCE\"\nassert solution('''\n2 3\n3 4\nBBBB\nWSBB\nWWWW\n''') == \"NO WAY\"\nassert solution('''\n2 3\n3 4\nSWWW\nWSBB\nWWWW\n''') == \"SUCCESS\"\n\"\"\""
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWBWG\\nSample Output\") == \"NO CHANCE\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"NO WAY\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"2 3\") == \"SUCCESS\"\nassert solution(r\"10 10\") == \"GO FOR IT\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"3 4\") == \"SUCCESS\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"4 4\") == \"GO FOR IT\"\nassert solution(\"5 5\") == \"GO FOR IT\"\nassert solution(\"2 2\") == \"NO CHANCE\"\nassert solution(\"5 4\") == \"GO FOR IT\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWBWG\\nSample Output') == 'NO WAY'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWBWG\\nSample Output\\nS') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWBWG\\nS') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWBWG\\nWB') == 'GO FOR IT'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n900\\n800 700 400 300 200') == '2243'\nassert solution('2\\n1000\\n800 900 700 400 300 200') == '1110'\nassert solution('3\\n2000\\n800 900 700 400 300 200') == '2974'\nassert solution('4\\n3000\\n900 900 700 400 300 200') == '3474'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5\n800 700 400 300 200\n''') == '2243'\nassert solution('''\n6 3\n600 700 400 300 200\n''') == '1900'\nassert solution('''\n10 1\n500 600 400 300 200\n''') == '500'\nassert solution('''\n6 2\n800 700 400 300 200\n''') == '1900'\nassert solution('''\n5 1\n800 700 400 300 200\n''') == '800'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 900\n800 700 400 300 200\n''') == '2243'\nassert solution('''\n3 1\n1\n''') == '1'\nassert solution('''\n5 3\n1\n2\n3\n4\n5\n''') == '5'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 100\n7 25 50 50\n''') == '2243'\nassert solution('''\n3 500\n600 800 200 100\n''') == '1900'\nassert solution('''\n1 100\n10\n''') == '10'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\") == \"2243\"\nassert solution(\"5 901\\n800 700 400 300 200\") == \"2400\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n100\\n800 700 400 300 200') == '2243'\nassert solution('2\\n100\\n900 900 900 900 900 900') == '2243'\nassert solution('3\\n500\\n500 500 500 500 500 500') == '0'\n\nclass TestSolution:\n\n    def test_sample_input(self):\n        assert solution('1\\n100\\n800 700 400 300 200') == '2243'\n    def test_sample_input_2(self):\n        assert solution('2\\n100\\n900 900 900 900 900 900') == '2243'\n    def test_sample_input_3(self):\n        "
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5') == '900'\nassert solution('4 9') == '2096'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n1\n''') == '1'\nassert solution('''\n5 4\n1\n2\n3\n4\n5\n''') == '5'\nassert solution('''\n5 3\n1\n2\n3\n4\n5\n''') == '5'\nassert solution('''\n5 2\n1\n2\n3\n4\n5\n''') == '3'\nassert solution('''\n5 1\n1\n2\n3\n4\n5\n''') == '4'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 900\\n800 700 400 300 200') == '2243'\nassert solution('20 10\\n1 5 8 3 5 4') == '20'\nassert solution('8 1\\n1 2 3 4 5 6 7 8') == '8'"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\\n\") == \"2243\"\nassert solution(\"8 10\\n400 200 400 200\\n\") == \"2500\"\nassert solution(\"10 20\\n400 200 400 200\\n\") == \"10000\"\n\nimport io\nimport unittest"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == 'yes\\n'\nassert solution('10 4') == 'yes\\n'\nassert solution('5 4') == 'no\\n'\nassert solution('100 4') == 'no\\n'\nassert solution('8 9') == 'no\\n'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 4\") == \"yes\"\nassert solution(\"10 3\") == \"yes\"\nassert solution(\"10 4\") == \"no\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4\\n= 1 3\\n= 1 3\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3') == 'yes\\nno'\nassert solution('2 4\\n= 1 3\\n= 1 3\\n? 1 3\\n= 1 8\\n? 3 8\\n? 1 3') == 'no\\nyes'\nassert solution('2 4\\n= 1 3\\n= 1 3\\n? 1 3\\n= 1 8\\n? 3 8\\n? 1 3\\n? 1 3\\n? 1 3\\n? 1 3\\n? 1 3') == 'yes\\nno'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == \"yes\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'yes\\nno'"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input) == \"yes\\nno\"\nassert solution(other_input) == \"yes\\nno\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4\\n= 2 7\\n= 4 7\\n= 2 7\\n= 2 7\\n? 2 3\\n? 3 4') == 'yes\\no'\nassert solution('4 5\\n? 1 2\\n? 1 2\\n= 2 5\\n= 1 2\\n? 1 3\\n? 3 4') == 'yes\\no'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'no\\nyes'\nassert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'yes\\nno'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'yes\\n'\nassert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'no\\n'"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\nSample Output:\nyes\nno\n''') == 'yes\\nno\\n'\n\nassert solution('''\n5 4\n= 1 8\n= 3 8\n? 1 3\nSample Output:\nyes\nno\n''') == 'no\\nyes\\n'\n\nassert solution('''\n4 2\n? 0 1\n= 0 2\n? 1 2\nSample Output:\nyes\nno\n''') == 'yes\\nno\\n'\n\nassert solution('''\n5 2\n= 1 8\n? 1 2\nSample Output:\nno\nno\n''') == 'no\\nno\\n'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"6 3\") == \"0\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '2'\nassert solution('1 2 3 4 5 6 7 8') == '7'"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"10 5 4 8 3\") == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n5 7\n5 1 3 6\n4\n5 7 8 9 10\n5 1 3 6\n5\n''') == '2'\nprint(solution('''\n3\n5 7\n5 1 3 6\n4\n5 7 8 9 10\n5 1 3 6\n5\n'''))\n'''\n<tr>\n<td>\n3\n<td>\n5 7\n<td>\n5 1 3 6\n<td>\n4\n<td>\n5 7 8 9 10\n<td>\n5 1 3 6\n<td>\n5\n<tr>\n'''\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '2'\nassert solution('3 5 4 8 3') == '2'\n'''\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 3\\n10 5 4 8 3\\n\"\n) == \"2\"\n\n\"\"\"\n\nimport math\nimport time\nstart = time.time()\n\nn, k = map(int, input().split())\nv = list(map(int, input().split()))\nmax_score = 0\nfor i in range(0, len(v)-k+1):\n    score = 0\n    for j in range(i,i+k):\n        if is_prime(v[j]):\n            score = score + 1\n    if score > max_score:\n        max_score = score\nprint(max_score)\n\nend = time.time()\nprint(\"Runtime: {}\".format(end - start))"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n\nSample Input:\n7 2\n1 2 3 4 5 6 7\nSample Output:\n-1\n'''\nimport math\nn, k = list(map(int, input().split()))\nlst = list(map(int, input().split()))"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"10\"\nassert solution(\"10 5\") == \"10\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 127') == '1083', 'TEST ERROR!'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 127\n''') == '1083', 'First Test Cases'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 127') == '1083'\nassert solution('3 7') == '6'"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 100\") == \"95\"\nassert solution(\"1 128\") == \"105\"\nassert solution(\"1 15\") == \"95\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 3\") == \"1\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 127\") == \"1083\"\n\nassert solution(\"1 1\") == \"0\"\n\nassert solution(\"1 3\") == \"10\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 127') == '1083'\nassert solution('1 2') == '3'\nassert solution('1 3') == '4'\nassert solution('1 10') == '19'\n'''\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 127\") == \"1083\""
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1083\"\nassert solution(\"1 9\") == \"1084\"\nassert solution(\"2 2\") == \"5\"\n\nimport sys\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 127') == '1083'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\"\"\") == \"2.0000000000\"\n\nprint(\"All tests passed.\")\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(0).read()) == '2.0000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('3 3') == '1.1111111111'\nassert solution('5 5') == '5.0'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 4') == '1.5'\nassert solution('4 6\\n2 4') == '2.0'\nassert solution('1 2\\n3 2') == '1.0'\nassert solution('1 2\\n3 2\\n2 2\\n3 2\\n4 2\\n2 2\\n3 2') == '1.5'\nassert solution('4 6\\n2 4') == '2.0'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == '2.0000000000'\nassert solution('''5 5\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Definitely\nWhat is the air speed velocity of an unladen swallow? African?\n''') == '4.0000000000'\n''')\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000'\nassert solution('1 10\\n0.5\\n1\\n0.5\\n1\\n0.5\\n1\\n') == '0.25'\nassert solution('3 10\\n10 10 10\\n20 20 20\\n30 30 30\\n') == '30'"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n\"\"\") == \"2.0000000000\"\"\")\n\nstdin = \"\"\"4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n\"\"\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('4 3') == '3.999999999'\nassert solution('1 5') == '1.5'"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '2.0000000000'\n\"\"\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\nprint(solution('''2 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?'''))\n''')\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''2 1\ncat dog''') == 'IMPOSSIBLE'\nassert solution('''3 3\ndog cat dog\ndog monkey dog\nmonkey cat monkey''') == 'IMPOSSIBLE'\n\"\"\"\n\nfrom collections import defaultdict\n\nn, m = list(map(int, input().split()))\n\nenclosures = defaultdict(list)\n\nfor _ in range(n):\n    enclosures[input().split()[1]].append(input().split()[0])\n\nanimals = defaultdict(set)\n\nfor _ in range(m):\n    animal, start_encl = input().split()\n    animals[animal].add(start_encl)\n\nresult = 'IMPOSSIBLE'\n\nfor animal, start_encl in animals.items():\n    if len(start_encl) == 0:\n        result = 'FALSE ALARM'\n        break\n\n    if len(start_encl) == 1:\n        encl = start_encl[0]\n        if len(enclosures[encl]) == 1:\n            result = 'POSSIBLE'\n            break\n\n    for enclosure in start_encl:\n        if len(enclosures[enclosure]) == 0:\n            result = 'FALSE ALARM'\n            break\n\nprint(result)\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6') == 'IMPOSSIBLE'\nassert solution('5 5') == 'IMPOSSIBLE'\nassert solution('10 10') == 'FALSE ALARM'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == \"POSSIBLE\"\n\"\"\"\n\n\nn, m = map(int, input().split())\nenclosures = {}\n\nfor i in range(n):\n    enclosures[input()] = 0\n\nfor i in range(m):\n    temp = input()\n    enclosures[temp] += 1\n\nfor k, v in enclosures.items():\n    if v == 0:\n        print(\"FALSE ALARM\")\n        break"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6') == 'POSSIBLE'\nassert solution('3 7') == 'IMPOSSIBLE'\n\"\"\""
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\"\n\n\"\"\",\"\"\"\\\n--- Day 4: Passport Processing ---\nYou arrive at the airport only to realize that you grabbed your North Pole Credentials instead of your passport. While these documents are extremely similar, North Pole Credentials aren't issued by a country and therefore aren't actually valid documentation for travel in most of the world.\n\nIt seems like you're not the only one having problems, though; a very long line has formed for the automatic passport scanners, and the delay could upset your travel itinerary.\n\nDue to some questionable network security, you realize you might be able to solve both of these problems at the same time.\n\nThe automatic passport scanners are slow because they're having trouble detecting which passports have all required fields. The expected fields are as follows:\n\nbyr (Birth Year)\niyr (Issue Year)\neyr (Expiration Year)\nhgt (Height)\nhcl (Hair Color)\necl (Eye Color)\npid (Passport ID)\ncid (Country ID)\nPassport data is validated in batch files (your puzzle input). Each passport is represented as a sequence of key:value pairs separated by spaces or newlines. Passports are separated by blank lines.\n\nHere is an example batch file containing four passports:\n\necl:gry pid:860033327 eyr:2020 hcl:#fffffd\nbyr:1937 iyr:2017 cid:147 hgt:183cm\n\niyr:2013 ecl:amb cid:350 eyr:2023 pid:028048884\nhcl:#cfa07d byr:1929\n\nhcl:#ae17e1 iyr:2013\neyr:2024\necl:brn pid:760753108 byr:1931\nhgt:179cm\n\nhcl:#cfa07d eyr:2025 pid:166559648\niyr:2011 ecl:brn hgt:59in\nThe first passport is valid - all eight fields are present. The second passport is invalid - it is missing hgt (the Height field).\n\nThe third passport is interesting; the only missing field is cid, so it looks like data from North Pole Credentials, not a passport at all! Surely, nobody would mind if you made the system temporarily ignore missing cid fields. Treat this \"passport\" as valid.\n\nThe fourth passport is missing two fields, cid and byr. Missing cid is fine, but missing any other field is not, so this passport is invalid.\n\nAccording to the above rules, your improved system would report 2 valid passports.\n\nCount the number of valid passports - those that have all required fields. Treat cid as optional. In your batch file, how many passports are valid?\n\"\"\",\"\"\"\\\n\n--- Part Two ---\nYou notice that your list of invalid passports is much longer than it would be if all passports where valid. The only requirement for each passport is that the person's birth year is between 1920 and 2002 (inclusive).\n\nUsing the same reasoning as earlier, you need to test  passports. This time, you must only test the birth year. All other fields are  valid passport categories. The birth year itself is not required for a passport to be valid.\n\nTo check the validity of a passport, add the  birth year  to the conditions and then test if this sum is divisible by  8.\n\nFor example, consider the birth year of your passport:\n\n1956\n\nThis is a valid passport, because  1956 % 8 == 0.\n\nThis means that the birth year, when  added to the conditions, will always be evenly divisible by 8.\n\nYou can also add the  birth year  to the conditions in the same way.\n\nIn this example, adding  1956 to the conditions produces  82, which is evenly divisible by 8.\n\nHow many passports are valid?\n\"\"\",\"\"\"\\\n\n--- Part Two ---\nThe final step in breaking the password is to look for a contiguous range of letters or numbers that could have belonged to someone in your old time. Your list of invalid passports is still large enough to force this into an earlier stage of your search.\n\nThe only other field you are interested in is the security check digit. An old security checker required that each value in this field  had an even number of digits. To help you make the search easier, you have volunteered to add a new field to each passport: the security check digit of the  passport. The security check digit of a passport is the products  of the values in the  field and their respective positions,  modulo 10.\n\nFor example, if  the  field is  and, and, and, the security check digit is.\n\nYou are now ready to test your updated validity function. Given an  updated list of invalid passports, how many are valid?\n\n\"\"\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution('''\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == \"POSSIBLE\"\nassert solution('''\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == \"POSSIBLE\"\nassert solution('''\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 6\") == \"IMPOSSIBLE\"\nassert solution(\"5 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"\nassert solution(\"4 5\") == \"POSSIBLE\"\nassert solution(\"5 7\") == \"IMPOSSIBLE\"\n\"\"\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == \"POSSIBLE\"\nassert solution('''6 5\nmonkey 5 monkey monkey monkey monkey monkey\nlion 1 lion\npenguin 5 penguin\nmonkey 3 monkey\npenguin 4 penguin\nlion 2 lion\nmonkey 1''') == \"POSSIBLE\"\nassert solution('''7 3\nmonkey 5 lion 5 goat 4\nlion 5 goat 5 monkey 3\ngoat 4 goat 4 monkey 3\nmonkey 4 monkey 4''') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    3 6\n    monkey 2 lion penguin\n    lion 3 monkey penguin lion\n    penguin 1 monkey''') == \"POSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''\n10\n6 3 5 2 1 7 9 8 4 2 8 5 7\n3 2 9 8 4 5 7 1 9 1 3 2\n4 1 7 9 8 4 2 5 9 3 2\n1 6 2 4 1 8 7 3 9 5 4\n2 8 3 4 1 9 7 8 6 9 5\n2 9 4 1 5 3 8 6 7 9 8\n6 8 5 1 3 2 4 7 9 3 9\n1 4 2 5 1 4 3 7 8 6 9\n5 9 1 3 9 8 7 7 1 4 3\n8 9 4 1 5 3 8 6 7 9 2\n7 3 1 8 9 5 6 4 3 9 2\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9\n5 6 7 8 1 2 3 4\n4 1 5 6 7 8 9 2\n3 4 5 1 2 6 8 9 7\n7 8 9 1 5 4 3 2\n6 7 9 1 5 4 3 2\n6 1 2 5 4 7 8 9\n2 1 5 4 7 8 9 6\n4 1 2 5 4 7 8 9 3\n5 1 2 5 4 7 8 9 1\n9 1 5 4 7 8 9 3 6\n8 1 2 5 4 7 8 9 1\n7 1 5 4 7 8 9 3 6\n6 1 2 5 4 7 8 9 1\n5 1 2 5 4 7 8 9 1\n9 1 5 4 7 8 9 1 6\n1 1 5 4 7 8 9 1 6\n1 5 4 7 8 9 1 2 6\n5 4 7 8 9 1 2 6 3\n1 4 7 8 9 1 2 6 3\n7 1 5 4 7 8 9 1 2\n6 1 5 4 7 8 9 1 2\n4 1 5 4 7 8 9 1 2\n1 4 5 7 8 9 1 2 3\n5 1 4 5 7 8 9 1 2\n1 4 5 7 8 9 1 2 3\n3 1 5 4 7 8 9 1 2\n4 1 5 4 7 8 9 1 2\n5 1 5 4 7 8 9 1 2\n4 1 5 4 7 8 9 1 2\n1 1 5 4 7 8 9 1 2\n1 1 5 4 7 8 9 1 2\n5 1 5 4 7 8 9 1 2\n9 1 5 4 7 8 9 1 2 6\n8 1 5 4 7 8 9 1 2 6\n7 1 5 4 7 8 9 1 2 6\n6 1 5 4 7 8 9 1 2 6\n1 1 5 4 7 8 9 1 2 6\n5 1 5 4 7 8 9 1 2 6\n1 5 4 7 8 9 1 2 6 3\n4 1 5 4 7 8 9 1 2 6\n9 1 5 4 7 8 9 1 2 6\n6 1 5 4 7 8 9 1 2 6\n5 1 5 4 7 8 9 1 2 6\n3 1 5 4 7 8 9 1 2 6\n5 1 5 4 7 8 9 1 2 6\n7 1 5 4 7 8 9 1 2 6\n1 1 5 4 7 8 9 1 2 6\n1 1 5 4 7 8 9 1 2 6\n1 1 5 4 7 8 9 1 2 6\n1 1 5 4 7 8 9 1 2 6\n1 1 5 4 7 8 9 1 2 6\n1 1 5 4 7 8 9 1 2 6\n1 1 5 4 7 8 9 1 2 6\n9 1 5 4 7 8 9 1 2 6 6\n8 1 5 4 7 8 9 1 2 6 6\n7 1 5 4 7 8 9 1 2 6 6\n6 1 5 4 7 8 9 1 2 6 6\n5 1 5 4 7 8 9 1 2 6 6\n4 1 5 4 7 8 9 1 2 6 6\n3 1 5 4 7 8 9 1 2 6 6\n1 1 5 4 7 8 9 1 2 6 6\n1 1 5 4 7 8 9 1 2 6 6\n1 1 5 4 7 8 9 1 2 6 6\n9 1 5 4 7 8 9 1 2 6 6 6\n8 1 5 4 7 8 9 1 2 6 6 6\n7 1 5 4 7 8 9 1 2 6 6 6\n6 1 5 4 7 8 9 1 2 6 6 6\n5 1 5 4 7 8 9 1 2 6 6 6\n4 1 5 4 7 8 9 1 2 6 6 6\n3 1 5 4 7 8 9 1 2 6 6 6\n2 1 5 4 7 8 9 1 2 6 6 6\n1 1 5 4 7 8 9 1 2 6 6 6\n1 1 5 4 7 8 9 1 2 6 6 6\n1 1 5 4 7 8 9 1 2 6 6 6\n9 1 5 4 7 8 9 1 2 6 6 6 6\n8 1 5 4 7 8 9 1 2 6 6 6 6\n7 1 5 4 7 8 9 1 2 6 6 6 6\n6 1 5 4 7 8 9 1 2 6 6 6 6\n5"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4') == 'triple correlation 4(1)4(3)3 found'\nassert solution('2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8') == 'triple correlation 2(1)1(3)5 found'\nassert solution('8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'triple correlation 8(1)6(3)5 found'\nassert solution('4 4 5 8 3 2 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 4') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('10000') == 'random sequence'\n\"\"\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"1000\") == \"triple correlation 4(2)4(3)3 found\"\nassert solution(\"0\") == \"random sequence\"\nassert solution(\"1\") == \"random sequence\"\nassert solution(\"2\") == \"random sequence\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'random sequence'\nassert solution('2') == 'random sequence'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100') == \"triple correlation 4(1)4(3)3 found\"\nassert solution('4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2') == \"triple correlation 4(1)4(3)3 found\"\nassert solution('2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8') == \"triple correlation 4(1)4(3)3 found\"\nassert solution('8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == \"triple correlation 4(1)4(3)3 found\"\nassert solution('100 4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2') == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('2') == 'random sequence'\nassert solution('10') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('0') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"100\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"1000\") == \"random sequence\"\nassert solution(\"9999\") == \"random sequence\"\nassert solution
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5\\n7 9\\n8 9') == '10'\n\nassert solution('2 3\\n2 5\\n3 8') == '9'\n\nassert solution('3 4\\n5 4\\n6 2\\n7 8') == '11'\n\nassert solution('1 1\\n3 1\\n2 3') == '3'\n\nassert solution('1 100\\n1 100\\n1 100\\n1 100') == '100'"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"40.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1\n39\n10\n40\n''') == '40.5'\nassert solution('''\n2 10\n2 4\n''') == '4.0'\nassert solution('''\n1 1\n10\n''') == '10.0'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1\n39\n10\n40''') == '40.5', 'First'\nassert solution('''3 2\n78\n94\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '80.0', 'Second'"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n30 10\") == \"20.5\"\nassert solution(\"5\\n12 10 6 7 4\\n20 14 9 20 30\") == \"17\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n3') == '2.5'\nassert solution('2 3\\n10 11\\n15\\n5 6\\n9 8\\n4 7\\n') == '7.5'"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1\\n39\\n10\\n40') == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1\\n39\\n10') == '40.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n39\\n10') == '40.5'\nassert solution('2\\n40\\n10') == '41.0'\nassert solution('3\\n41\\n10') == '41.0'\n\"\"\"\nimport sys\nfrom math import *"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '40.5'\nassert solution('1 5 4 10') == '20'\nprint('YOUR CODE SUCCESSFUL!')"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n') == 'Impossible'\nassert solution('4 7\\n1 2 2017\\n2 3 2017\\n1 3 2017\\n2 4 2017\\n1 4 2017\\n3 4 2017\\n') == '2017'\nassert solution('4 9\\n1 2 2016\\n2 3 2016\\n1 3 2016\\n2 4 2016\\n1 4 2016\\n3 4 2016\\n') == '2016'\nassert solution('4 10\\n1 2 2014\\n2 3 2014\\n1 3 2014\\n2 4 2014\\n1 4 2014\\n3 4 2014\\n') == '2014'\nassert solution('4 11\\n1 2 2013\\n2 3 2013\\n1 3 2013\\n2 4 2013\\n1 4 2013\\n3 4 2013\\n') == '2013'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Impossible'\nassert solution('1 2 3') == 'Impossible'\nassert solution('1 3') == '1991'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n') == '2008'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"2008\"\nassert solution(\"4 2\\n1 2\\n1 3\\n2 3\\n2 4\\n3 4\\n\") == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 1\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n\"\"\") == \"Impossible\"\n\nassert solution(\"\"\"\n4 1\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n\"\"\") == \"1988\"\n\nassert solution(\"\"\"\n4 2\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n\"\"\") == \"1988\"\n\nassert solution(\"\"\"\n10 10\n1 2 1999\n2 3 2000\n1 3 2001\n2 4 1998\n1 4 2001\n3 4 1999\n\"\"\") == \"1998\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1988\") == \"1988\"\nprint(solution(\"4 1 1999\"))\nprint(solution(\"2 1 1999\"))\nprint(solution(\"4 1 2000\"))\nprint(solution(\"2 1 2000\"))\nprint(solution(\"4 1 2001\"))\nprint(solution(\"2 1 2001\"))\nprint(solution(\"4 1 2002\"))\nprint(solution(\"2 1 2002\"))\nprint(solution(\"4 1 2003\"))\nprint(solution(\"2 1 2003\"))\nprint(solution(\"4 1 2004\"))\nprint(solution(\"2 1 2004\"))\nprint(solution(\"4 1 2005\"))\nprint(solution(\"2 1 2005\"))\nprint(solution(\"4 1 2006\"))\nprint(solution(\"2 1 2006\"))\nprint(solution(\"4 1 2007\"))\nprint(solution(\"2 1 2007\"))\nprint(solution(\"4 1 2008\"))\nprint(solution(\"2 1 2008\"))\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4 6\n    1 2 1987\n    2 3 1987\n    1 3 1987\n    2 4 1987\n    1 4 1987\n    3 4 1987\n    \"\"\"\n) == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == 'Impossible'\nassert solution('''4 9\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == '1986'\nassert solution('''4 9\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987''') == '2020'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2\n1 4 1987\n1 3 1987''') == '2008'\nassert solution('''4\n2\n1 4 1987\n1 3 1987''') == '1948'\nassert solution('''3\n2\n1 4 1987\n1 3 1987''') == 'Impossible'\nassert solution('''4\n3\n1 2 1987\n1 3 1987\n2 3 1987\n1 4 1987\n2 4 1987''') == '1948'\nassert solution('''2\n1\n1 4 1987\n2 4 1987''') == 'Impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 2\") == \"3\"\nassert solution(\"2 0 3\") == \"impossible\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"3 2 1\") == \"impossible\"\nassert solution(\"4 0 1\") == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0 1') == '1'\nassert solution('4 0 1') == 'impossible'\nassert solution('4 0 1') == 'impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1') == '3'\n\nassert solution('4 0 1\\n1 0 2\\n2 0 3\\n3 0 1\\n') == 'impossible'\n\nassert solution('7 2 1\\n1 0 2\\n2 0 3\\n3 0 1\\n1 1 1\\n') == 'impossible'\n\nassert solution('5 1 2\\n1 0 2\\n2 0 3\\n3 0 1\\n1 2 2\\n') == 'impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('1 3') == '3'\nassert solution('1 2 3') == '5'\nassert solution('1 2 4') == '3'\nassert solution('3 1 2') == '5'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == '3'\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'\nassert solution('''\n4 0 2\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\nassert solution('3 0 1') == 'impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 0 1') == 'impossible'\nassert solution('10 0 5') == 'impossible'\nassert solution('10 0 1') == '1'\nassert solution('5 0 10') == '3'\nassert solution('6 0 3') == '1'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 0, 1]) == \"impossible\"\nassert solution([4, 0, 1, 2, 3]) == \"3\"\nassert solution([4, 0, 1, 2, 3, 4, 5]) == \"5\"\nassert solution([4, 0, 1, 2, 3, 4, 5, 6]) == \"impossible\"\nassert solution([4, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == \"8\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\") == \"3\"\nprint(solution(\"4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\"))\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"\n5 0 1\nN 1 2\nN 1 3\nN 1 4\nC 1 5\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('())' == 10\nassert solution('((()') == 7\nassert solution('(()())') == 10\nassert solution('(((()()))())()(())') == 12\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 9\n\"\"\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"(())\") == 2\nassert solution(\"()()\") == 4\nassert solution(\"(((()))\") == 10\nassert solution(\"(((()())))\") == 14\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n()\n((()\n)()\n''') == 11\n\nassert solution('''\n4\n)()(\n((()\n)()\n(()()\n)()\n''') == 11\n\nassert solution('''\n5\n)()(\n()(\n)()\n((()\n)()\n)()\n''') == 10\n\nassert solution('''\n20\n)()(\n()(\n()(\n)()\n((()\n)()\n)()\n)()\n(()()\n()(\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)()\n)()\n)()\n(()(\n)"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 10"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n(\n(\n)\n)\n''') == 4\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('())') == 0\nassert solution('((()') == 2\nassert solution('()(()') == 4\nassert solution('((()))') == 5\nassert solution('(())(())') == 7\n\nprint(solution(input()))\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n(\n)\n((()\n)()\n''') == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('())') == '0'\nassert solution('((())') == '2'\nassert solution('))((') == '4'\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '10'\nassert solution('4') == '9'\nassert solution('2') == '0'\n\"\"\""
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n377 h\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"85293\"\n\"\"\"\n--- Part Two ---\n\nNow that the UW distances are known, you can calculate the shortest path between systems that can be taken by a certain amount of time, per their gravity values.\n\nThe fastest path is the shortest one with the lowest sum of gravities. The total amount of time can be spent on this path is equal to the sum of the distances that the path runs, times the time that it takes to travel one gravitational unit.\n\nIf your path takes $p$ time to travel and each gravitational unit takes $a$ time to travel, then the total amount of time spent on this path is $p+p+a+a+a+a+a+a+a+a+a+a+a+a+a+a+a$ or $p+2p+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a+2a$ or $p+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*p)+2(2*"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n\") == \"85293\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\nassert solution('''\n4\n277 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '5157'\n'''\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1081\"\nassert solution(\"4\") == \"410\"\nassert solution(\"5\") == \"330\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    5\n    377 a\n    455 h\n    180 a\n    211 a\n    134 a\n    46 h\n    111 h\n    213 h\n    17 a\n    15\n    1 2\n    1 4\n    1 6\n    2 3\n    2 4\n    2 5\n    3 5\n    4 6\n    4 7\n    4 9\n    5 7\n    5 8\n    6 9\n    7 9\n    7 8\n    ''') == '85293'\n\nassert solution(\n    '''\n    3\n    377 a\n    455 h\n    180 a\n    211 a\n    134 a\n    46 h\n    111 h\n    213 h\n    17 a\n    15\n    1 2\n    1 4\n    1 6\n    2 3\n    2 4\n    2 5\n    3 5\n    4 6\n    4 7\n    4 9\n    5 7\n    5 8\n    6 9\n    7 9\n    7 8\n    ''') == '91266'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '85293'\nimport math"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'\nassert solution('4\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '2399'\nassert solution('5\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '33883'\nassert solution('10\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n8 9\\n9 8\\n9 7\\n') == '58295577'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"85293\"\nassert solution(\"\"\"\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"81285\"\n\n\"\"\"\n(9, 3, 4, 5, 6, 7, 8, 9, 7, 8, 9, 5, 6, 3, 4, 2, 1)\n\n\"\"\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"4\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\n\n\"\"\"\n\nfrom collections import defaultdict\nimport math\nfrom typing import List\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"7 10\") == \"7\"\nassert solution(\"1 10\") == \"10\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\nassert solution('5 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '0'\nassert solution('5 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\nassert solution('1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\nassert solution(\"8 8\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\") == \"8\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n3 4\") == \"5\""
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\nassert solution(\"7 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n4 5\\n3 6\\n4 5\") == \"4\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 5\n1 2\n1 3\n2 3\n1 4\n2 4''') == '5'\n'''\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5'\nassert solution('2 10\\n1 2 3 4 5 6 7\\n') == '3'\nassert solution('9 8\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n7 8\\n') == '1'\nassert solution('1 10\\n') == '0'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\"\n\"\"\""
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\"\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n3\n2 caterpillar 2 pupa 2 butterfly\n3\n2 mouse 2 electromouse\n3\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse 2 electromouse\n2\n2 mouse"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"10\") == \"1000000\"\nassert solution(\"30\") == \"123456789\"\nassert solution(\"100\") == \"123456789\"\nassert solution(\"200\") == \"123456789\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"13300\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"200\"\nassert solution(\"5\") == \"300\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n7 mouse 1 electromouse 5 rat\\n7\\n500\\n1000\\n1500\\n2000\\n2500\\n3000\") == \"5100\"\nassert solution(\"2\\n2 a\\n1\") == \"0\"\nassert solution(\"2\\n1 a\\n0\") == \"0\"\nassert solution(\"3\\n2 c\\n2\\n2\") == \"0\"\nassert solution(\"4\\n3 b\\n3\\n3\") == \"0\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5300'\nassert solution('''\n5\n1a 2b 3c 4d 5e\n2b 3c 4d 5e\n5a 3b 4c 5d\n1b 2c 4d 5e\n5e 1c 2b 4d\n''') == '-1'\nassert solution('''\n1\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '20500'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"5100\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '100'\nassert solution('5') == '900'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''\n4\n5 hippopotamus 4 bus 1 dragon 5 gorgon 2 toad 6 owl 7 kangaroo 8 parrot 9 turtle 10 snail 11 penguin 12 cheetah 13 rabbit 14 goat 15 cat 16 wolf 17 zebra 18 horse 19\n''') == '1199'\nassert solution('''\n6\n7 kakuna 8 kodchi 9 koichu 10 kodu 11 kudu 12 kudu13 kudu14 kudu15 kudu16 kudu17 kudu18 kudu19 kudu20 kudu21 kudu22 kudu23 kudu24 kudu25\n18 marbles 11 marbles12 marbles13 marbles14 marbles15 marbles16 marbles17 marbles18 marbles19 marbles20 marbles21 marbles22 marbles23 marbles24 marbles25\n''') == '4764'\nassert solution('''\n7\n8 kakuna 8 kodchi 9 koichu 10 kodu 11 kudu12 kudu13 kudu14 kudu15 kudu16 kudu17 kudu18 kudu19 kudu20 kudu21 kudu22 kudu23 kudu24 kudu25\n20 marbles 11 marbles12 marbles13 marbles14 marbles15 marbles16 marbles17 marbles18 marbles19 marbles20 marbles21 marbles22 marbles23 marbles24 marbles25\n''') == '3046'\nassert solution('''\n6\n5 hippopotamus 4 bus 1 dragon 5 gorgon 2 toad 6 owl 7 kangaroo 8 parrot 9 turtle 10 snail 11 penguin 12 cheetah 13 rabbit 14 goat 15 cat 16 wolf 17 zebra 18 horse 19\n''') == '3231'\n'''\nThe Nudg\u00e9mon family is described in the following table:\n\nFamily      Number of Nudg\u00e9mon   Candies per Nudg\u00e9mon   XP earned     Profit earned\n\nA       4     3             3             60            120\nB       5     2             5             50            130\nC       6     2             4             60            140\n\nThe first Nudg\u00e9mon family has 4 Nudg\u00e9mon and 3 candies, which means that the first Nudg\u00e9mon in this family can evolve into the next one at most 3 times faster. The family is described in the following table:\n\nFamily      Number of Nudg\u00e9mon   XP earned\n\nA       4     60\nB       5     130\nC       6     140\n'''"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0\n1\n1\n2\n3\n1\n4\n5\n''') == '6'\nassert solution('''\n5\n1\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6'\nassert solution('''\n5\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6'\nassert solution('''\n5\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6 1 2 3 1 4 5'"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '-1'\nassert solution('3') == '3'\nassert solution('10') == '6'"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10\n1\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\"\nassert solution(\"\"\"\n10\n1\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('5\\n1\\n2\\n3\\n4\\n5\\n') == '-1\\n'"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6 1 2 3 1 4 5\"\n\nassert solution(\"\"\"\n4\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6 1 2 3 1 4 5\"\n\nassert solution(\"\"\"\n8\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6 1 2 3 1 4 5\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1\n2\n1\n1\n5\n5\n5\n5\n''') == '6'\n\nassert solution('''\n10\n1\n1\n2\n3\n1\n2\n3\n1\n4\n5\n4\n2\n5\n''') == '-1'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '6'\nassert solution('''5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5''') == '6'\nassert solution('''3\n0\n1\n2''') == '-1'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5\n1 2 1 2 1\n4\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\nassert solution('''2 3\n1 2 R 3\n1 2 O 3\n2 1 O 3\n''') == '8'\nassert solution('''2 3\n1 2 R 2\n1 2 O 2\n2 1 O 2\n''') == '12'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '10'\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5') == '5'\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n1 1 R 2') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"10\"\n\"\"\"\n\nclass Solution:\n    def solution(self):\n        input()\n        cities = [int(x) for x in input().split()]\n        airfares = {}\n        while cities:\n            airfares[cities[0]] = (cities[1:] + [cities[0]])\n            cities = cities[1:] + [cities[0]]\n        tickets = [int(x) for x in input().split()]\n        tickets = [airfares[x] for x in tickets if x in airfares]\n        cost = 0\n        for ticket in tickets:\n            cost += ticket[0] * (ticket[1] - 1)\n            cost += ticket[0] * (ticket[2] - 1)\n            cost += ticket[0] * (ticket[3] - 1)\n        return cost\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '4'\nassert solution('3 3') == '4'\nassert solution('4 4') == '0'"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"10\"\nassert solution(\"2 6\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n\") == \"11\""
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n1 2 R 5\\n') == '15'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 10\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n2 1 R 6\n''') == '10'\n\nassert solution('''\n3 8\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n2 1 R 6\n''') == '20'\n\nassert solution('''\n3 2\n1 2\n1 2\n2 1\n''') == '3'\n\nassert solution('''\n10\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n2 1 R 6\n''') == '13'\n\nassert solution('''\n20\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n2 1 R 6\n''') == '11'\n'''"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2\\n1 3\\n2 3\\n\") == \"3\"\nassert solution(\"5 5\\n3 1\\n2 4\\n3 1\\n1 2\\n2 1\\n4 5\\n1 3\\n1 4\\n1 2\\n2 1\\n3 1\\n4 3\\n1 4\\n4 3\\n2 1\\n3 1\\n3 1\\n\") == \"5\"\nassert solution(\"1 1\\n0 2\\n1 3\\n1 4\\n\") == \"1\"\nassert solution(\"4 4\\n0 1\\n1 2\\n2 3\\n3 4\\n\") == \"4\"\nassert solution(\"4 4\\n0 1\\n1 2\\n2 3\\n3 4\\n\") == \"4\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4 3\n0 1\n1 2\n2 3\n3 4\nSample Input:\n8 6\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\nSample Output:\n8\n\"\"\") == \"8\"\nassert solution(\"\"\"8 2\n0 1\n1 2\n3 4\n5 6\n7 8\nSample Output:\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    5 2\n    0 1\n    1 2\n    2 3\n    3 4\n    3\n    ''') == '2'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n0 1\\n1 2\\n2 3\") == \"1\"\n\n\"\"\"\nimport collections\nimport heapq"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 3') == '1'\nassert solution('6 6') == '3'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5\\n3 1\\n1 0\\n3 1\\n2 0\\n1 0') == '2'\nassert solution('2 4\\n0 1\\n1 2\\n2 0\\n0 1') == '3'\nassert solution('3 4\\n0 1\\n1 2\\n0 2\\n0 1') == '2'\n\n-------------------------------------------------------------\nWrite a program that reads a directed graph (a list of lists) from standard input and outputs the largest size of a topologically sorted digraph.\n\nThe input file contains the graph as a list of lists.\n\nThe graph has one node for each element in the first line,\nand each element is connected to at least one other element.\nThere is one edge from each element to each other element.\n\nThe graph is directed. A directed graph is a graph in which there is at most one edge from one node to another node for any given pair of nodes.\n\nThe graph has no repeated edges, and is acyclic (that is, there is no edge from node a to b for which there is an edge from b to a).\n\nThe graph contains at least one node, and at least one edge.\n\nThe graph is either empty (contains no nodes) or has at least one node.\n\nEach element of the graph is an integer.\n\nThe graph will contain no duplicate edges.\n\nThe output format is as follows:\n\nFor each test case:\nFor each line in the graph:\nPrint the node in which the edge goes from, followed by the node to which the edge goes.\nThere will be no space between the two nodes.\nIf the graph is empty, then print the node number 0.\n\nFor example, suppose the graph is:\n0 1\n1 2\n2 3\n3 4\n0 1\n1 2\n2 3\n3 4\n\nThen the output should be:\n0 1 0\n1 2 1\n2 3 2\n3 4 3\n0 1 3\n1 2 3\n2 3 4\n3 4 0\n0 1 4\n1 2 4\n2 3 4\n3 4 0\n\nNote that in the first graph, the source node 0 has no outgoing edges. The destination node 0 has no incoming edges.\n\n------- Sample Solution\nimport sys"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n3 4\") == \"2\"\nassert solution(\"4 5\\n1 2\\n3 4\\n5 6\\n1 3\\n2 4\") == \"4\"\nassert solution(\"3 2\\n0 1\\n1 2\") == \"2\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('3 3\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('3 4\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('4 5\\n0 1\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('4 5\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5') == '1'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"1\""
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3\\n0 1\\n1 2\\n2 3\\n') == '1'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0.962962962963'\nassert solution
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0.962962962963'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n3') == '0.5'\nassert solution('4\\n5') == '0.025'\nassert solution('12\\n20') == '0.03125'\nassert solution('1000\\n5000') == '0.016666666666666666666666666667'\nassert solution('20\\n50') == '0.5'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0.5'\nassert solution('1') == '0.5'\nassert solution('1') == '0.5'\nassert solution('10') == '0.0'\nassert solution('40') == '0.0'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '0.962962962963'\nassert solution('1') == '0.999'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.962962962963'\nassert solution('2') == '0.0077125499510'\nassert solution('3') == '0.0'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '0.962962962963'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n10\\n8\\n5\\n10') == '0.962962962963'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n''') == '0.962962962963'\nprint('Congratulations!')\n'''\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '0.962962962963'\nassert solution('10') == '0.999269216392'\nassert solution('20') == '0.9997368421053'\nassert solution('50') == '0.9998471264168'"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n0 0\n40000000 0\n0 40000000\"\"\") == \"\"\"0 0\n40000000 0\n0 40000000\"\"\"[:-1]\n\nassert solution(\"\"\"10\n0 0\n0 0\n0 40000000\n0 40000000\n0 0\n0 40000000\n40000000 0\n40000000 0\"\"\") == \"\"\"0 0\n0 0\n40000000 0\n0 40000000\n40000000 0\n0 40000000\"\"\"[:-1]\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0 0\"\nassert solution(\"2\") == \"0 1\"\nassert solution(\"3\") == \"0 2\"\nassert solution(\"4\") == \"0 3\"\nassert solution(\"5\") == \"0 4\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n10\n5\n0 0\n0 10\n10 0\n10 10\n5 0\n\"\"\") == \"0 0\\n100000000 0\\n0 100000000\\n100000000 10\\n5 0\\n\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0 0\"\nassert solution(\"3\") == \"40000000 0\"\nassert solution(\"10\") == \"0 40000000\""
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n0\n1''') == '0 0'\nassert solution('''3\n2\n2\n2''') == '2 2 2 2'\nassert solution('''1\n0\n1''') == '0 1'\nassert solution('''1\n2\n2''') == '2 2'\nassert solution('''1\n0\n0''') == '0 0'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000\\n'\nassert solution('2') == '0 0\\n40000000 0\\n'\nassert solution('1000') == '0 0\\n40000000 0\\n0 40000000\\n'\nassert solution('10000') == '0 0\\n40000000 0\\n0 40000000\\n'\nassert solution('1000000') == '0 0\\n40000000 0\\n0 40000000\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000\\n'\nassert solution('2') == '0 0\\n0 40000000\\n'\nassert solution('12') == '0 0\\n40000000 0\\n0 40000000\\n'\n\"\"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n2\\n2\\n2\\n') == '1 2\\n40000000 2'\n\"\"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0 0\\n\"\nassert solution(\"3\") == \"0 40000000\\n\"\nassert solution(\"100000\") == \"0 40000000\\n\"\nassert solution(\"50\") == \"0 40000000\\n\"\nassert solution(\"50000\") == \"0 40000000\\n\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6\n\"\"\") == \"\"\"\n0 0\n40000000 0\n0 40000000\n\"\"\".strip()\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('4 5 6 2') == '1'\nassert solution('12 3 3 1') == '2'\nassert solution('13 3 3 2') == '3'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5 5 2\n5 4 7\n''') == \"1\"\n\nassert solution('''\n3 5 5 2\n1 2\n''') == \"impossible\"\n\nassert solution('''\n6 6 6 6\n6 4 9\n''') == \"3\"\n\nassert solution('''\n2 2\n2 4\n''') == \"impossible\"\n\nassert solution('''\n2 4\n1 5\n''') == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('5 5 5 2') == '2'\nassert solution('3 3 5 2') == 'impossible'\nassert solution('1 2 3 4') == 'impossible'\nassert solution('1 2 3 4') == 'impossible'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('6 5 4 -2') == '2'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 5 2') == '0'\nassert solution('10 1') == 'impossible'"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('5 1 4 5 1 4') == '0'\nassert solution('4 8 0 6 1') == 'impossible'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('5 3 1 5 6') == '3'\nassert solution('2 3 4 5 6') == '0'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('2 3 5 6') == '2'\n\n---Input is a sequence of base values---\n\n-----Input-----\nInput consists of a single line containing $4$ base values. All base values are between $1$ and $100$, inclusive.\n\n-----Output-----\nDisplay the lowest grade possible using the sequence of base values. If it is not possible to produce $24$, display impossible.\n\n-----Examples-----\nSample Input:\n3 5 5 2\nSample Output:\n1\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\nassert solution('1 5 5 2') == '1'\nassert solution('4 6 3 2') == '2'\nassert solution('5 4 4 1') == 'impossible'\n\"\"\"\n\nfrom functools import reduce\nimport sys"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\") == \"2\"\nassert solution(\"20 3 -5 5\") == \"0\"\nassert solution(\"20 3 0 5\") == \"0\"\nassert solution(\"20 3 10 5\") == \"3\"\nassert solution(\"20 3 10 -5\") == \"0\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '2'\n\nassert solution('''\n20 3 5 5\n0 0 0\n0 -1 0\n30 0 0\n0 0 0\n''') == '4'\n\nassert solution('''\n20 3 5 5\n0 0 0\n0 -1 0\n30 0 0\n0 0 0\n''') == '1'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 5 0') == '1'\nassert solution('5 3 5 0') == '2'\nassert solution('5 3 5 0') == '2'\nassert solution('20 3 5 5') == '0'\nassert solution('20 3 5 5') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '2'"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''4 1 4\n0 0 0\n0 0 0\n0 0 0\n0 0 0''') == '0'\nassert solution('''2 2 2\n1 1 0\n1 1 0\nSample Output:\n3\n''') == '3'\nassert solution('''1 2 3\n1 1 0\n0 1 0\n0 0 0''') == '1'\nassert solution('''1 2 2\n0 0 0\n0 0 0\nSample Output:\n0\n''') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 3 5 5') == '2'\n\nassert solution('40 8 50 7') == '1'\n\nassert solution('50 40 9 0') == '0'\n\nassert solution('1000 999 9999 9999') == '3'\n\nassert solution('9 999 9999 9999') == '0'"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution('20 3 5 5') == '2'"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 3 5 5\\n') == '2'\nassert solution('20 0 0 0\\n') == '0'\n\n'''"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n12''') == '14'\nassert solution('''4\n2''') == '4'\nassert solution('''3645\n2743''') == '2744'\n'''\nimport math\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10\\n6\\n8\") == \"8 10\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('13') == '14'\nassert solution('123') == '124'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == '14'\nassert solution('20') == '19'\nassert solution('55') == '54'\nassert solution('999') == '999'\nassert solution('10') == '11'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000000') == '1000000'\nassert solution('12') == '12'\nassert solution('123') == '12'\nassert solution('1234') == '14'\nassert solution('1235') == '14'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('42') == '21'\nassert solution('42 3') == '21 33'\nassert solution('123') == '31 33 33'\nassert solution('1234') == '12 33 33 33'\nassert solution('12345') == '11 33 33 33 33'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13') == '14'\nassert solution('1112') == '1111'\nassert solution('12') == '12'\nassert solution('1') == '11'\nassert solution('2') == '21'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"13\") == \"12 14\"\nassert solution(\"1234\") == \"1214\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('10') == '2'\nassert solution('1000') == '2'\nassert solution('100000') == '2'"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n8') == '10 16'\nassert solution('8') == '10 16'\nassert solution('2') == '10'"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 0') == '1'\nassert solution('1 2 3 1') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 0 0\") == \"0\"\nassert solution(\"1 0 1\") == \"0\"\nassert solution(\"3 0 1\") == \"0\"\nassert solution(\"3 0 0\") == \"3\"\nassert solution(\"3 0 1\") == \"2\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0') == '0'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '1'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\nassert solution('''\n5\n1 0 1\n1 1 0\n3 0 1\n3 0 0\n3 0 1\n''') == '1'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 0\\n1 0 1\\n3 1 0') == '0'\nassert solution('5 1 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '1'"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0'\nassert solution('10\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n10 0 1\\n10 0 0\\n10 0 1') == '1'\nassert solution('1\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n10 0 1\\n10 0 0\\n10 0 1') == '0'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n10 0 1\\n10 0 0\\n10 0 1') == '2'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\nassert solution('''\n2\n1 0 0\n1 1 0\n3 0 1\n3 0 0\n3 0 1\n''') == '1'\nassert solution('''\n4\n1 0 0\n1 1 0\n3 0 1\n3 0 0\n3 0 1\n''') == '4'\nassert solution('''\n4\n1 0 0\n1 1 0\n3 0 1\n3 0 0\n3 0 1\n''') == '4'\nassert solution('''\n10\n1 0 0\n1 1 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n3 0 0\n3 0 1\n''') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"9\") == \"8\"\nassert solution(\"11\") == \"5\"\nassert solution(\"21\") == \"11\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('3 3\\n') == '1 1\\n2 2\\n1 3'\nassert solution('1 1\\n') == '1 1\\n1 1'\nassert solution('2 2\\n') == '1 1\\n2 2'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1 2\\n1 3\\n2 1\\n2 2\"\nassert solution(\"2 3\") == \"-1\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n2 2\n1 1''') == '1 2\\n2 1'\nassert solution('''3 4\n1 2 3\n3 4 4\n4 5 4\n3 5 3''') == '2 1 3\\n1 4 4\\n4 5 2'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 3]) == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1 1\\n2 2'\nassert solution('3 3') == '1 2\\n2 1\\n3 3'\nassert solution('4 4') == '1 1\\n2 2\\n3 3\\n4 4'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\"\nassert solution(\"3 3\") == \"1 2\\n1 2\\n2 1\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('2 3') == '1 2'\n\"\"\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3 4\\n1 2') == '1 2\\n1 3\\n2 3\\n2 1'\nassert solution('3 2\\n1 2\\n3 4') == '1 2\\n1 3\\n2 3\\n2 1'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n\"\"\") == \"\"\"1 1\n2 2\n1 3\n2 1\n1 2\n2 3\"\"\"\nassert solution(\n\"\"\"\n3 3\n1 2\n2 3\n3 2\n1 3\n\"\"\") == \"\"\"1 2\n2 3\n3 1\n1 3\n2 1\n3 2\"\"\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 10 2\\n1 10 1\\n1 10 0\") == \"1.8333\\n1.8333\\n1.8333\""
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\"\nassert solution(\"3 9\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.5\"\nassert solution(\"3 9\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.5\"\nassert solution(\"2 5\\n1 1 1\\n0 1 1\") == \"0.0\"\nassert solution(\"1 2\\n2 1 1\\n1 1 1\") == \"0.5\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n10 1 2 3 4\\n5 0 0 0\\n') == '3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '1.33333334'\nassert solution('3 3') == '1.66666667'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '''3.33333333'''\n\nSample Input:\n4 10\n0 10 2 3\n0 10 2 3\n0 10 2 3\n0 10 2 3\nSample Output:\n2.0\n3.0\n4.0\n4.0\n'''\n\nassert solution('''\n4 10\n0 10 2 3\n0 10 2 3\n0 10 2 3\n0 10 2 3\n''') == '''3.33333333'''"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 3\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333', solution.__doc__\nassert solution('''\n3 1\n0 10 1\n0 10 1\n''') == '1.0', solution.__doc__\nprint('All test cases passed...')\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333'\nassert solution('''3 10\n0 10 1\n1 10 1\n0 10 1''') == '3.33333333'\nassert solution('''3 10\n0 10 1\n1 10 1\n0 10 1''') == '4.0625'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 10\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == \"3.33333333\"\nassert solution(\"\"\"\n2 10\n0 10 1\n0 10 1\n\"\"\") == \"3.33333333\"\nassert solution(\"\"\"\n3 100\n10 10 1\n10 10 1\n10 10 1\n\"\"\") == \"3.33333333\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333'\n\nassert solution('''\n2 5\n0 10 1\n0 10 1\n''') == '3.33333333'\n\nassert solution('''\n4 3\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333'\n\nassert solution('''\n10 2\n1 1\n0 0.01\n0.5 0.01\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0.01 0.5\n0"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2\n0 10 1\n0 10 1\n0 10 1\n\"\"\"\n) == \"3.33333333\"\nassert solution(\n\"\"\"\n3\n0 10 1\n0 10 1\n0 10 1\n\"\"\"\n) == \"3.33333333\"\n\n\"\"\"\nSample Input:\n3\n3\n0 1 0\n10 1 0\n1 0 1\nSample Output:\n0.0975\n\"\"\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 3 2\nSample Input 2:\n3\n3 2 3\nSample Output 2:\n2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n3 3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n3 3 3 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n3 2 5 6 8\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n0 0 1 0\\n1 0 1') == '1'\nassert solution('5\\n0 0 1 0\\n1 0 2') == '2'\nassert solution('5\\n0 0 1 0\\n1 0 2') == '0'\nassert solution('5\\n0 0 1 0\\n1 0 2') == '0'\nassert solution('5\\n0 0 1 0\\n1 1 1') == '0'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3 2') == '0'\nassert solution('3 3 3 2') == '1'\nassert solution('3 3 3 3 2') == '0'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"2\") == '0'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 3 2\n''') == '1'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 3 2') == '1'\nassert solution('2\\n1 1 1') == '2'\nassert solution('3\\n3 2 2') == '1'\nassert solution('5\\n3 4 2 3 4') == '1'\nassert solution('4\\n1 1 1 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 3 2\\n') == '1'\nassert solution('5\\n1 3 1 2 3\\n') == '4'\nassert solution('10\\n1 1 1 1 1 1 1 1 1\\n') == '10'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n3 3 2\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n2\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\nabba\n''') == '2'\nassert solution('''\n2\naba\n''') == '1'\nassert solution('''\n2\nbaa\n''') == '0'\n\nstdin = (\n'''\n3\naba\n''', )\n\nfor line in stdin:\n    print(solution(line))"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT\nprint(solution(INPUT))\n\"\"\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\nabba\n''') == '2'\nassert solution('''\n6 2\naaaaa\naabab\naabba\naabbb\nababa\nababb\n''') == '3'\n'''"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(inp1) == exp1\nassert solution(inp2) == exp2"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 0\") == \"1\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == 0\nassert solution(\"ab\") == 1\nassert solution(\"a\") == 2\nassert solution(\"aba\") == 3\nassert solution(\"abb\") == 3\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\nababab\na\nb\n''') == '3'\nassert solution('''\n3\na\nb\n''') == '1'\nassert solution('''\n4\na\nb\nb\n''') == '2'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3\\n2 3\\n2 4') == '3'\nassert solution('5 3\\n3 2\\n3 3\\n2 3\\n2 4') == '4'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7') == '7'"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 3') == '3'\nassert solution('5 7') == '2'\nassert solution('5 8') == '1'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('2\\n3\\n') == '1'\nassert solution('4\\n5\\n6\\n') == '4'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''\n1 2\n2 3\n2 4\n''') == '2'\n'''\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3'"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4\\n') == '3'\nassert solution('10 3\\n1 3\\n2 3\\n3 4\\n3 4\\n4 5\\n4 6\\n4 7\\n4 8\\n5 1\\n5 2\\n5 3\\n5 4\\n5 5\\n') == '5'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '2'\nassert solution('1 1') == '2'\nassert solution('2 4') == '2'"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '3'\nassert solution('2 2') == '2'\nassert solution('5 5') == '4'\nassert solution('4 3') == '3'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('2\\n3') == '4'\nassert solution('3\\n4') == '5'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n2 4') == '3'\nassert solution('4 3\\n1 2\\n2 3\\n2 4') == '2'\nassert solution('5 3\\n1 2\\n2 3\\n2 4\\n1 5') == '4'"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n0 1\n3 1\n0 2\n''') == '0'\nassert solution('''\n1 2\n0 1\n3 1\n0 2\n''') == '0'\nassert solution('''\n1 1\n2 0\n0 1\n''') == '0'\nassert solution('''\n1 1\n2 0\n0 1\n''') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '1'\nassert solution('5 1') == '0'"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\nSample Output:\n1\n0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\nSample Output:\n0\n1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1'\nassert solution('4 5\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '2'\nassert solution('2 5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '2'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 4\n1 0\n0 1\n2 2\n1 3\n1 4\n3 4\n3 3\n4 4\nSample Input 2:\n6 3\n0 1\n0 1\n0 2\n1 1\n2 1\n1 2\n2 1\nSample Output 2:\n0\n0\n0\nSample Input 3:\n5 1\n0 1\n0 2\n0 3\n1 3\n2 3\nSample Output 3:\n1\n0\n1\n0\n1\n\"\"\") == \"\"\"1\"\"\""
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\nassert solution('1 2\\n2 3\\n4 5\\n0 1\\n1 2\\n1 3') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n') == '0'"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n0\n1\n1\n2\n1\n2\n1\n2\n3\n0\n''') == '1', 'First'\nassert solution('''\n1\n0\n1\n1\n2\n1\n2\n1\n2\n3\n0\n''') == '0', 'Second'\nassert solution('''\n1\n0\n1\n1\n2\n1\n2\n1\n2\n3\n0\n''') == '0', 'Third'\nassert solution('''\n1\n0\n1\n1\n2\n1\n2\n1\n2\n3\n0\n''') == '1', 'Fourth'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n3 3\n1 2\n4 2\n''') == '1'\nassert solution('''\n1 5\n5 3\n1 3\n4 2\n''') == '1'\n'''\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\nassert solution('''\n5\n7 4 9 5\n10 6 1 3\n12 1 2 1\n11 7 1 2\n2 1 4 5\n''') == '11'\nassert solution('''\n10\n8 5 4 4 8 8 1 1 5\n3 1 1 5 1 1 2 1 1\n3 1 4 1 2 4 2 2\n8 1 4 3 3 2 1 2\n4 1 3 4 2 3 2 1\n4 1 4 1 2 4 1 2\n4 1 4 1 3 1 4 1\n6 4 2 1 4 4 2 1\n7 2 1 3 1 4 2 1\n7 3 2 2 1 2 2 1\n''') == '18'\n'''\n\n'''\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    1 2 3\n    3 2 2\n    5 2 1\n    3 2 1\n    1 2 1\n    1 2 3\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n    1\n    2\n    3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n    2\n    3\n    4\n    5\n    6\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n    4\n    2\n    3\n    5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n    4\n    2\n    3\n    5\n\"\"\") == \"1\""
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '7'\n\n\"\"\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n3\n''') == '7'\n\nassert solution('''\n3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\n\nprint(solution('''\n8\n1 2 3 4 5 6 7 8\n9 2 1 3 4 3 5 7 5\n8 2 2 4 4 5 7 8 8\n'''))"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == \"7\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2\n1\n''') == '2'\nassert solution('''\n4\n2 3 4 5\n4 5 3 2\n3 2 4 1\n1 2 5''') == '6'\n\"\"\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2\n2\n2\n2\n2\n''') == '7', \"First\"\n\nassert solution('''\n3\n3\n3\n3\n''') == '5', \"Second\"\n\nassert solution('''\n4\n2\n1\n1\n''') == '5', \"Third\"\n\n\"\"\""
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\nassert solution('''\n3\n3 2 2\n5 2 1\n3 2 1\n''') == '6'\nassert solution('''\n2\n4 5\n1 2\n''') == '4'\n'''"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3\\n5\\n3\\n1\\n1\\n1\\n1\\n') == '7'\n\"\"\"\nn = int(input())\narr = []\nfor _ in range(n):\n    arr.append(list(map(int, input().split())))\n\nans = []\nfor i in range(n):\n    for j in range(n):\n        ans.append(arr[i][j])\n\nprint(ans)\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100''') == '20'\nassert solution('''3 5\nlinearalgebra 1\nlinearalgebra 10\nlinearalgebra 2\nlinearalgebra 3\nlinearalgebra 4\ncalculus 1\ncalculus 10\ncalculus 2''') == '20'\n\n'''"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\n\"\"\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '20'"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n\nstdin = input()\nprint(solution(stdin))"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '20'\nassert solution('5 1') == '10'\nassert solution('5 2 3') == '30'\nassert solution('5 2 5') == '40'\nassert solution('5 2 1') == '20'\n\"\"\"\nimport sys\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        def build_tree(N, values):\n            if N == 0: return None\n            if N == 1: return TreeNode(values[0])\n            root = TreeNode(values[0])\n            l = build_tree(N // 2, values[1:N // 2 + 1])\n            r = build_tree(N // 2, values[N // 2 + 1:])\n            root.left = l\n            root.right = r\n            return root\n\n        def update_values(root):\n            if root.left:\n                root.left.value += root.value\n                update_values(root.left)\n            if root.right:\n                root.right.value += root.value\n                update_values(root.right)\n\n        def get_diff(root):\n            if not root: return 0\n            l = get_diff(root.left)\n            r = get_diff(root.right)\n            if root.left and root.right:\n                return max(l, r) + 1\n            else:\n                return max(l, r)\n\n        def get_answer(root):\n            if not root: return 0\n            l = get_answer(root.left)\n            r = get_answer(root.right)\n            if root.left and root.right:\n                return l + root.value + r\n            else:\n                return l + root.value + r\n\n        values = [int(x) for x in stdin.split(' ')]\n        root = build_tree(len(values), values)\n        update_values(root)\n        return str(get_diff(root))\n\ns = Solution()\nprint(s.solution(sys.stdin.read()))\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\n\"\"\") == \"20\"\nassert solution(\"\"\"1\ncalculus1 10\ncalculus2 20\n\"\"\") == \"10\"\nassert solution(\"\"\"1\ncalculus1 10\ncalculus2 20\n\"\"\") == \"20\"\nassert solution(\"\"\"5\nlinearalgebra 10\nlinearalgebra 1\nlinearalgebra 2\ncalculus1 10\ncalculus2 20\n\"\"\") == \"18\"\nassert solution(\"\"\"4\nlinearalgebra 10\nlinearalgebra 3\nlinearalgebra 1\ncalculus1 10\ncalculus2 20\n\"\"\") == \"15\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '20'\nprint('All test cases passed...')"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"20\""
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '20'\nassert solution('2 4') == '10'\nassert solution('2 2') == '0'\nassert solution('2 2') == '0'"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution('''3\n2\n1\n2\n''') == '2'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '0'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '5'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '0'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 5\n2 3 2\n1 2 1\n3 4 3\n2 5\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3 2\n2 2 2\n1 2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"6\"\nassert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == \"6\"\nassert solution('''\n4 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == \"1\"\nassert solution('''\n8 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == \"3\"\nassert solution('''\n4 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == \"1\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution('''\n3 4\n2 5 2\n3 5 7\n4 4 2\n5 3 2\n''') == '5'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 2 2\\n2 3 4\\n3 4 1\\n4 1 2\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6'"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution('''\n5 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution('''\n3 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '8'\nassert solution('''\n5 5\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '5'\n'''"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '4'\nassert solution('12') == '10'\nassert solution('123') == '3'\nassert solution('12345') == '5'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"1 2 2\") == \"0\"\nassert solution(\"2 3 4\") == \"3\"\nassert solution(\"3 4 1\") == \"4\"\nassert solution(\"3 3 3\") == \"0\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\nSample Output:\nimpossible\n\"\"\"):\n    pass\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 1') == 'impossible'\nassert solution('4 4 4\\n1 1 2 1\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2') == 'impossible'\nassert solution('5 5 5\\n2 1 1 1\\n2 1 2\\n1 1 1\\n1 1 1\\n1 1 1') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n\"\"\"\n\nn, m, k = list(map(int, stdin.split()))\ncoals = list(map(int, input().split()))\niron_ores = list(map(int, input().split()))\n\nvisited_cells = set()\n\nmoves = [(1, 0), (-1, 0), (0, 1), (0, -1)]"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 1') == 'impossible'\nassert solution('3 1 1 2') == 'impossible'\nassert solution('3 1 1 2 3') == '3'\nassert solution('3 3 3') == 'impossible'\nassert solution('5 6 5') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3 1\n2\n3\n1 2\n2 3 1\n1 1\nSample Output 2:\nimpossible\n''') == 'impossible'\nassert solution('''\n3 3 1\n2\n3\n1 2\n2 3 1\n1 1\nSample Output 3:\n2\n''') == '2'\nprint('All Tests Passed!')"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n4 4 3\n3\n1 2 3\n1 3 2\n2 1 3\n2 3 1\n1 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 1 1\n2\n3\n1 2\n2 3 1\n1 1\"\"\") == \"impossible\"\n\nassert solution(\"\"\"2 2 3\n3\n2\"\"\") == \"3\"\n\nassert solution(\"\"\"3 5 1\n4\n3\n2 3\n3 4 2\n2 3\"\"\") == \"3\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\") == \"2\"\nassert solution(\"3 3 1\\n3\\n1 2\\n1 3\") == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == 'impossible'\nassert solution('3 1 1') == '2'\nassert solution('3 2 1') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 1 1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"1 2\\n\"\n    \"2 3 1\\n\"\n) == \"2\"\nassert solution(\n    \"6 5 4\\n\"\n    \"0 0 0\\n\"\n    \"2 3 1\\n\"\n    \"1 1 2\\n\"\n    \"2 2 3\\n\"\n    \"3 1 1\\n\"\n) == \"impossible\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n10 5 10\\n20 10 10\\n30 20 10') == '500.00'\nassert solution('20\\n0 0\\n10 10\\n10 0\\n10 10\\n10 0\\n10 10\\n10 0\\n20 10\\n0 0') == '1500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n250 250\n250 750\n''') == '500.00'\nassert solution('''\n1\n25\n25\n''') == '25.00'\n'''\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n50 50\\n1 50\\n\"\n    ) == \"500.00\\n\"\nassert solution(\n    \"2\\n100 100\\n100 200\\n\"\n    ) == \"250.00\\n\"\nassert solution(\n    \"3\\n0 0\\n10 10\\n\"\n    ) == \"100.00\\n\"\nassert solution(\n    \"4\\n100 100\\n100 0\\n\"\n    ) == \"250.00\\n\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n100 200\n100 300\n100 400\n''') == \"1000.00\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 1\\n3 4\\n5 7\\n') == \"500.00\"\nassert solution('5\\n1 5 5 5 5\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n') == \"50.00\"\nassert solution('9\\n1 5 5 5 5 5 5 5 5\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n') == \"0.00\""
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    250 250\n    250 750\n''') == '500.00'\n\nprint('all tests passed')"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5\\n20 20\\n20 40\\n40 80\\n40 40\\n20 20\"\n) == \"500.00\"\nassert solution(\n    \"10\\n30 30\\n30 60\\n60 80\\n80 60\\n60 30\\n30 30\\n30 60\\n60 80\\n80 60\"\n) == \"650.00\"\nassert solution(\n    \"20\\n30 30\\n30 60\\n60 80\\n80 60\\n60 30\\n30 30\\n30 60\\n60 80\\n80 60\"\n) == \"950.00\"\nassert solution(\n    \"30\\n40 40\\n40 60\\n60 80\\n80 80\\n80 60\\n60 40\\n40 40\\n40 60\\n60 80\\n80 60\"\n) == \"950.00\"\nassert solution(\n    \"20\\n40 40\\n40 60\\n60 80\\n80 80\\n80 60\\n60 40\\n40 40\\n40 60\\n60 80\\n80 60\"\n) == \"950.00\"\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 4\\n1 2\\n3 2') == '4.00'\nassert solution('9\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '10.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n250 250\n250 750\n''') == '500.00'\n\n'''\n    https://docs.python.org/3/tutorial/controlflow.html#binary-operator-precedence\n    http://www.tutorialspoint.com/python/python_operator_precedence.htm\n\n6.7 Task\nThe goal of this task is to learn about the precedence of arithmetic operators.\n\nExample\n\nLet's say that we have this expression:\n\n1 + 2 * 3\n\nWhat would be the output of the following code?\n\n(2.0) + ((2.0) * (3.0))\n\nThe output should be\n\n18.0\n\nThe output is a float.\n\nNote\n\nThe input is always a valid expression.\n\nIn Python, the output must be a float. If the output is an integer, round it to the nearest float.\n\nConstraints\n\n\n    The input contains only integers and the operations +, -, *, /, ^, %, // are valid.\n\n'''"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '500.00'\nassert solution('6') == '750.00'\nassert solution('12') == '1.000.000.000.000.000.000.000.000.000.000.000.000'\nassert solution('100') == '0.000'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0'\nassert solution('2 4') == '1'\nassert solution('4 2') == '3'\nassert solution('5 4') == '3'"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'\nassert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 2\n5 5\n10 10\n\"\"\") == \"25\"\nassert solution(\"\"\"\n3 10\n2 3 5 6 7 1 3 1\n2 5 5 1 1\n4 4 2 1 1\n1 2 3 4\n\"\"\") == \"25\"\nassert solution(\"\"\"\n2 2\n2 1\n\"\"\") == \"0\""
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"0\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n2 100 10\\n100 1 10\") == \"0\"\nassert solution(\"5 5\\n5 100 10\\n100 1 10\\n20 5 10\\n50 100 20\") == \"0\"\nassert solution(\"2 4\\n2 100 10\\n100 1 10\\n20 5 10\\n50 100 20\") == \"200\"\nassert solution(\"3 3\\n3 100 10\\n100 1 10\\n20 5 10\\n50 100 20\") == \"100\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10\\n') == '0'\nassert solution('2 4\\n2 200 10\\n200 1 10\\n') == '4'\nassert solution('5 4\\n2 200 10\\n200 1 10\\n') == '7'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    3 2\n    10 10 10\n    '''\n    ) == '0'\n\nassert solution(\n    '''\n    5 2\n    10 1 10 10 10\n    '''\n    ) == '10'\n\nassert solution(\n    '''\n    8 5\n    6 3 3 3 10 10\n    '''\n    ) == '6'\n\nassert solution(\n    '''\n    2 3\n    10 1 10\n    '''\n    ) == '10'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '0'\nassert solution('4 5') == '6'"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 100 10\n100 1 10\n100 2 10\n100 3 10\n100 4 10\nSample Input 2:\n3\n2 200 10\n100 1 200\n100 2 200\n100 3 200\nSample Output 2:\n
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n2 100 10\n100 1 10\n1 200 20\n''') == '0'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35') == '2'\nassert solution('60 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\\n55 10 25 20 50 35\\n50 5 25 35') == '1'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '2'\n'''"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('80 50 3 2\\n75 5 25 20 50 35') == '2'\n\n------------------\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('80 50 3 2') == '2'\nassert solution('75 5 25 20 50 35') == '2'\nassert solution('50 5 25 35') == '2'"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\nSample Input:\n5 6 7\n4 5 9\n5 5 7\n5 7 4\nSample Output:\n0''') == '0'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '2'\n\ninput = stdin
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 10 3 1\") == \"5\"\nassert solution(\"20 20 10 10\") == \"15\"\nprint(\"Check passed\")\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\"\"\") == \"2\"\nprint(solution('''10 50 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n10 10 10 10\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('80 50 3 2') == '2'\nassert solution('75 5 25 20 50 35') == '3'\nassert solution('30 50 100 1') == '1'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\\n1112\\n2211\\n2211\\n2211\") == \"AAAA\\n...A\\n....\\nBBBB\\n...B\\n....\\nCCCC\\n...C\\n....\\n\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\n1211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\"\nassert solution(\"5 5\\n2211\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n\") == \"AAAA\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\"\nassert solution(\"5 5\\n2211\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n1112\\n\") == \"AAAA\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\"\nassert solution(\"5 5\\n1112\\n2211\\n2211\\n2211\\n2211\\n2211\\n2211\\n2211\\n2211\\n\") == \"AAAA\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\\nBBBB\"\n\"\"\""
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == 'AAAA'\nassert solution('5 5') == 'A.AA.A.A.'\n\"\"\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"AAAA\\n...A\\n....\\n\"\nassert solution(\"3 4\") == \"AAAA\\n...A\\n...B\\n...C\\n\""
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n2211\n1112\n1112\n''') == 'AAAA'\nassert solution('''\n3 4\n2211\n1112\n1112\n''') == 'CCCC'\nassert solution('''\n3 4\n2211\n1112\n1112\n''') == 'impossible'"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == \"AAAABB..CCCC\"\nassert solution('3 4\\n1112\\n2211\\n2211') == \"BBBB..CCCC\"\nassert solution('3 4\\n2211\\n1112\\n2211') == \"AAAABB..CCCC\"\nassert solution('3 4\\n2211\\n1112\\n2211') == \"AAAABB..CCCC\"\nassert solution('3 4\\n2211\\n1112\\n2211') == \"AAAABB..CCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"AABB\"\nassert solution(\"3 2\") == \"AA\"\nassert solution(\"6 2\") == \"AAA\"\nassert solution(\"5 3\") == \"AAA\"\nassert solution(\"2 2\") == \"AA\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n2211\n1112\n1112\nSample Output:\nAAAA\nBBBB\n...A\n\nBBBB\n''') == 'BBBB'"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == 'AAAA'\nassert solution('2 3') == 'BBBB'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == 'A.B.C.'\nassert solution('1 3') == 'A.B.C.'\nassert solution('10 10') == '....C'\nassert solution('1 3') == 'A.B.C.'\nassert solution('10 3') == 'A.B.C.'\n\"\"\""
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"9\"\n\"\"\""
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '8'\nassert solution('4 3 1 2 1') == '0'\nassert solution('1 4 1 2 1 3') == '8'\nassert solution('1') == '0'\n\n\"\"\""
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == '1'\nassert solution('2 2 2 2') == '0'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 1 3') == '8'\nassert solution('8 2 1 3') == '7'\nassert solution('4 1 2 3') == '5'\nassert solution('5 1 2 3') == '4'"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n\"\"\") == \"9\"\n\nprint(\"### Start Execution of solution() function ###\")\nprint(\"### Sample Output for'solution()' function ###\")\nprint(solution(\"\"\"\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n\"\"\"), end=\"\")\nprint(\"\\n### End of sample Output ###\\n\")"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2 3 4\n3 1 2 2\n3 2 1 2\n2 3 1 2\n3 4 1 2\n3 2 1 2\n3 3 1 2\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 3 3\") == \"9\"\nassert solution(\"3 4 1 2 3 2\") == \"6\"\nassert solution(\"4 3 1 2 1\") == \"3\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3 2 3\n2 5 1\n1 2 3\n2 1 3\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3 2 3\n3 3 1\n1 2 3\n2 1 3\n\"\"\") == \"10\"\nassert solution(\"\"\"\n4 4 2\n2 5 1\n1 2 3\n3 3 1\n2 1 3\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '13'\nassert solution('4 3 1 2 1') == '2'"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"4\"\nassert solution(\"3 4 1 2 3 2\") == \"7\"\nassert solution(\"4 3 1 2 1\") == \"1\"\nprint('You are awesome')"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\") == \"20.396078\"\nassert solution(\"0 0 6\") == \"20.396078\"\nassert solution(\"3 4 7\") == \"IMPOSSIBLE\"\nassert solution(\"0 8 8\") == \"20.396078\"\nassert solution(\"6 8 8\") == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n\"\"\") == \"20.396078\"\nassert solution(\"\"\"\n9 10 12\n1 2 3\n4 5 6\n7 8 9\n\"\"\") == \"42.75\"\nassert solution(\"\"\"\n5 7\n2 4\n3 4\n5 6\n\"\"\") == \"1.000001\"\n\"\"\"\n3 5\n4 5\n2 2\n1 2\n\"\"\"\n\"\"\"\n4 5\n5 5\n3 3\n2 3\n\"\"\"\n\"\"\"\n3 4\n5 5\n4 4\n4 5\n\"\"\"\n\"\"\"\n5 6\n5 6\n5 5\n2 2\n1 1\n\"\"\"\n\"\"\"\n4 4\n5 5\n4 4\n5 5\n\"\"\"\n\"\"\"\n5 6\n5 6\n4 4\n2 2\n\"\"\"\n\"\"\"\n5 6\n5 5\n2 2\n1 1\n\"\"\"\n\"\"\"\n5 6\n5 5\n4 4\n1 1\n\"\"\"\n\"\"\"\n4 4\n4 5\n3 3\n2 2\n\"\"\"\n\"\"\"\n3 5\n4 4\n4 5\n4 4\n\"\"\"\n\"\"\"\n6 6\n5 5\n5 5\n5 5\n\"\"\"\n\"\"\"\n5 6\n5 5\n5 5\n5 5\n\"\"\"\n\"\"\"\n3 4\n4 5\n5 5\n5 5\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 5\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 5\n3 3\n\"\"\"\n\"\"\"\n4 5\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n4 5\n4 4\n3 3\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n5 6\n5 5\n5 5\n2 2\n1 1\n\"\"\"\n\"\"\"\n5 6\n5 5\n5 5\n2 2\n1 1\n\"\"\"\n\"\"\"\n4 4\n5 5\n4 4\n4 5\n\"\"\"\n\"\"\"\n4 4\n5 5\n4 4\n5 5\n\"\"\"\n\"\"\"\n5 6\n5 5\n5 5\n5 5\n\"\"\"\n\"\"\"\n5 6\n5 5\n5 5\n5 5\n\"\"\"\n\"\"\"\n4 4\n5 5\n4 4\n5 5\n\"\"\"\n\"\"\"\n4 4\n5 5\n4 4\n5 5\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n5 6\n5 5\n5 5\n2 2\n1 1\n\"\"\"\n\"\"\"\n5 6\n5 5\n5 5\n2 2\n1 1\n\"\"\"\n\"\"\"\n4 4\n5 5\n4 4\n4 5\n\"\"\"\n\"\"\"\n4 4\n5 5\n4 4\n5 5\n\"\"\"\n\"\"\"\n5 6\n5 5\n5 5\n5 5\n\"\"\"\n\"\"\"\n5 6\n5 5\n5 5\n5 5\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n1 1\n1 1\n1 1\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n3 4\n4 5\n4 4\n3 3\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n2 2\n2 2\n1 1\n\"\"\"\n\"\"\"\n1 1"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '6 2 2 8',\n    '0 0 6',\n    '3 4 7',\n    '0 8 8',\n    '6 8 8',\n    '6 0 6',\n    '6 4 8',\n    '3 4') == '20.396078'"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2 2 8') == \"20.396078\"\nassert solution('0 0 6') == \"impossible\"\nassert solution('3 4 7') == \"impossible\"\nassert solution('0 8 8') == \"impossible\"\nassert solution('6 8 8') == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('0 0 6') == '2.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 2 8\") == \"20.396078\"\nassert solution(\"6 1 2 8\") == \"10.829753\"\nassert solution(\"6 2 2 8\") == \"10.270855\"\nassert solution(\"6 3 2 8\") == \"10.270855\"\nassert solution(\"6 4 2 8\") == \"10.270855\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 2 4') == '20.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2 8\") == \"20.396078\"\nassert solution(\"0 0 6\") == \"20.396078\"\nassert solution(\"3 4 7\") == \"IMPOSSIBLE\"\nassert solution(\"0 8 8\") == \"20.396078\"\nassert solution(\"6 8 8\") == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 3 3') == 'Impossible'\nassert solution('9 9 5 1') == 'Impossible'\nassert solution('10 2 5 3') == '20.396078'\nassert solution('13 1 2 3') == '1.8'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '20.396078'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"c\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\\n\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n\\n1 8\") == \"c\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\\n\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n\\n1 8\\n\\n1 7\") == \"d\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\\n\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n\\n1 8\\n\\n1 7\\n\\n1 9\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\\n\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n\\n1 8\\n\\n1 7\\n\\n1 9\\n\\n1 8\") == \"e\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abca') == 'c'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1 8\\n') == 'c'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1 8\\n2 8') == 'c'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1 8\\n2 9') == 'c'\nassert solution('abcde\\nfghij\\nklmno\\npqrst\\nfguvw\\nxyz') == 'x'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"ac\"\nassert solution(sample_input_2) == \"aa\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"b\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"d\"\nassert solution(\"bb bb ab aa\") == \"a\"\nassert solution(\"aaa aaa aaaaa\") == \"a\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8''') == 'a'\n\nassert solution('''pqr\nasdf\nlmn\n!@#$%&\n''') == '@'\n\nassert solution('''abc\nab\na\nab\na\na\nab\na\nab\na\nab\na\n''') == 'a'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'bc'\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 6\n''') == 'bc'\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 10\n''') == 'bc'\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n2 5\n''') == 'd'\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n2 4\n''') == 'c'"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abca') == 'c'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'e'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'y'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'abc'\nassert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n3\n3 4\n4 7\n''') == 'a'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abca') == 'bc'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'ee'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"12\") == \"13\"\nassert solution(\"24\") == \"13\"\n\n-----------------\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == \"12\"\nassert solution('4') == \"7\"\n\"\"\""
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nhobotnica\nrobot\nhobi\nhobit\n''') == '12'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"6\") == \"10\"\nassert solution(\"11\") == \"16\"\nassert solution(\"12\") == \"7\"\nassert solution(\"13\") == \"error\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n') == '12'\n\nassert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n') == '10'\n\n\"\"\""
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n') == '12'\nassert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n') == '10'"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nhobotnica\\nrobot\\nhobi') == '12'\n\nassert solution('4\\nhobit\\nrobi\\nhobi\\nrakija') == '16'"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi') == '12'\nassert solution('3\\nhobit\\nhobi\\nhobit') == '16'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija''') == '12'\nassert solution('''2\nkp''') == '0'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrakija\\n') == '12'"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"JQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n\nSample Input:\n13 7\nABC D B C\nSample Output:\nABC D\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n14 4\nJQ IRKEYFG EXQ\n''') == 'THIS IS A TEST'\nSample Input:\n13 1\nFQST QWQQQ AA\nSample Output:\nQAQQQQTZQ\n'''\n\nprint(f'''\n{solution(input())}\n''')\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n14 4\nJQ IRKEYFG EXQ\n\"\"\") == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\nJQ IRKEYFG EXQ\n''') == 'THIS IS A TEST'\n\n'''\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    13 4\n    JQ IRKEYFG EXQ\n    ''') == 'THIS IS A TEST'\n''')\n\n\n\n'''"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 3\\nABC') == 'ABC'\nassert solution('12 4\\nAB CC') == 'ABCCC'\nassert solution('12 5\\nABABABABABA') == 'ABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABA"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 14\nJQ IRKEYFG EXQ\n''') == 'THIS IS A TEST'\n'''\n---Input---\n3 4\nAQJGLKFJHDVFYUZ\n'''\n---Output---\n'A Q J G L K F J H D V Y U Z'\n'''\n---Examples---\nSample Input:\n14 4\nJQ IRKEYFG EXQ\nSample Output:\nTHIS IS A TEST\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ\\n') == 'THIS IS A TEST'\n\"\"\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\nYHAIRFREJFQUIVER\n''') == 'THIS IS A TEST'\nassert solution('''\n13\nOPTIONS DO YOU WANT TO GO\n''') == 'OPTIONS DO YOU WANT TO GO'\n''')"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2.6') == '135\\n270'\nassert solution('2.63') == '135135\\n270270'\nassert solution('2.064') == '135135'\nassert solution('1.764') == '135135'\nassert solution('10.64') == '135135'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4.0\n6.2\n20.5\n11.0''') == '''5\n4\n8\n8'''\nassert solution('''3.9\n6.3\n23.6\n100.5''') == '''2\n3\n7\n7'''\nassert solution('''1.8\n3.0\n9.7\n14.0''') == '''No solution'''\nassert solution('''1.6\n4.0\n8.8\n1.0''') == '''1\n1\n1\n'''\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1.5\n7.2''') == '''1\n7\n135\n27'''\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2.6\") == \"135\"\nassert solution(\"-2.6\") == \"270\"\nassert solution(\"-1.6\") == \"135135\"\nassert solution(\"0.6\") == \"270270\""
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'No solution'\nassert solution('2.3') == '135'\nassert solution('2.3') == '270'\nassert solution('2.6') == '135135'\nassert solution('2.6') == '270270'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2.6\") == \"135\"\nassert solution(\"1.01\") == \"135\"\nassert solution(\"1.2\") == \"135\"\nassert solution(\"1.4\") == \"135\"\nassert solution(\"1.6\") == \"135135\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2.6') == '135', \"Should be 135\"\nassert solution('3.2') == '135', \"Should be 135\"\nassert solution('10.1') == '10', \"Should be 10\"\nassert solution('12.1') == '2135', \"Should be 2135\"\nassert solution('5.8') == '3135', \"Should be 3135\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.4\") == \"No solution\"\nassert solution(\"2.6\") == \"135\"\nassert solution(\"1.4\") == \"No solution\"\nprint('You passed all the tests!')"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.1\") == \"1\"\nassert solution(\"1.2\") == \"1\"\nassert solution(\"1.3\") == \"1\"\nassert solution(\"1.4\") == \"1\"\nassert solution(\"1.5\") == \"1\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"1.2\n    2.3\n    3.4\n    \"\"\") == \"\"\"135\n    270\n    \"\"\"\n\nassert solution(r\"\"\"2.3\n    2.6\n    \"\"\") == \"\"\"270270\n    \"\"\"\n\nassert solution(r\"\"\"1.1\n    1.2\n    1.3\n    1.4\n    1.5\n    1.6\n
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n4\n0 1\n0 5\n0 9\n0 2\n0 6\n1 4\n1 6\n1 8\n2 3\n2 5\n2 8\n3 4\n3 5\n3 7\n4 8\n5 4\n5 6\n6 6\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9 9\n9 8\n9 7\n9 6\n8 5\n8 6\n8 7\n8 8\n8 9\n''') == '0'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9 9\n9 8\n9 7\n8 6\n8 7\n8 8\n8 9\n8 7\n8 6\n8 5\n8 4\n8 3\n8 2\n7 5\n7 6\n7 8\n7 9\n7 8\n7 9\n7 6\n7 5\n7 4\n7 3\n6 3\n6 4\n6 5\n6 7\n6 8\n6 9\n6 7\n6 6\n6 5\n6 4\n6 3\n5 4\n5 6\n5 7\n5 8\n5 9\n5 7\n5 6\n5 4\n5 3\n4 4\n4 5\n4 6\n4 7\n4 8\n4 9\n4 7\n4 5\n4 3\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 7\n3 6\n3 5\n3 4\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 7\n2 6\n2 5\n2 4\n1 4\n1 6\n1 8\n1 9\n1 2\n0 4\n0 6\n0 8\n0 9\n0 2\n0 5\n0 3\n0 7\n0 8\n0 9\n''') == '2'\nassert solution('''\n6\n0 1\n1 2\n2 3\n3 4\n5 4\n5 2\n6 4\n6 2\n6 3\n6 5\n6 6\n7 7\n7 2\n7 4\n7 6\n8 7\n8 2\n8 3\n8 5\n8 6\n9 7\n9 2\n9 4\n9 6\n9 8\n10 9\n10 2\n10 4\n10 6\n''') == '0'\nassert solution('''\n6\n0 1\n1 2\n2 3\n3 4\n5 4\n5 2\n6 4\n6 2\n6 3\n6 5\n6 6\n7 7\n7 2\n7 4\n7 6\n8 7\n8 2\n8 3\n8 5\n8 6\n9 7\n9 2\n9 4\n9 6\n9 8\n10 9\n10 2\n10 4\n10 6\n''') == '1'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n7\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\nassert solution('''\n6\n0 1\n2 3\n5 4\n7 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\nassert solution('''\n3\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '2'\nassert solution('''\n5\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\n'''\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\n\"\"\"\nfrom typing import Tuple\nimport math\nfrom collections import deque\nimport itertools\nimport unittest\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n5\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '2'\n'''\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9') == '4'\nassert solution('1\\n3 2\\n6 2\\n8 1\\n5 5\\n5 4\\n6 6\\n5 4\\n7 8\\n6 4\\n5 5\\n4 5') == '2'\nassert solution('3\\n1 2\\n3 2\\n2 4\\n5 5\\n4 5') == '0'\nassert solution('10\\n0 1\\n1 2\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == '0'"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '0'"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n1 2\n1 3\n1 4\n1 5\n\"\"\") == \"\"\"0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n3\n1 2\n2 3\n3 4\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 3\n1 2\n1 5\n1 4\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n10\n1 10\n1 9\n1 7\n1 6\n1 5\n1 4\n1 3\n1 2\n1 1\n1 0\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 2\n1 3\n1 4\n1 5\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 3\n1 2\n1 5\n1 4\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 3\n1 2\n1 5\n1 4\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 3\n1 2\n1 5\n1 4\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 3\n1 2\n1 5\n1 4\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 2\n1 3\n1 4\n1 5\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 2\n1 3\n1 4\n1 5\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n10\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 2\n1 3\n1 4\n1 5\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 2\n1 3\n1 4\n1 5\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0.0000000 1.0000000\n0.0000000 -1.0000000\n\"\"\", \"\"\"\n5\n1 2\n1 3\n1 4\n1 5\nSample Output:\n0.0000000 0.0000000\n1.0000000 0.0000000\n-1.0000000 0.0000000\n0"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\") == \"0.0000000 0.0000000\"\nassert solution(\"3\\n1 2 4\") == \"0.0000000 0.0000000\"\nassert solution(\"3\\n1 2 4\") == \"0.0000000 0.0000000\"\nassert solution(\"3\\n1 2 4\") == \"0.0000000 0.0000000\"\nassert solution(\"3\\n1 2 4\") == \"0.0000000 0.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\nassert solution('6') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\nassert solution('1') == '0.0000000 0.0000000\\n0.0000000 1.0000000\\n'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n1 2\n1 3\n1 4\n1 5\n\"\"\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"0.0000000 0.0000000\"\nassert solution(\"5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"0.0000000 0.0000000 1.0000000 0.0000000 -1.0000000 0.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1 2 3\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1 2 3 4\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1 2 3 4 5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution('aaa') == '1'\nassert solution('abc') == '1'\nassert solution('aba') == '1'\nassert solution('a*a') == '1'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n\"\"\") == \"\"\"2\n1\n1\"\"\"\nassert solution(\"\"\"1 3\na*a\naaa*\n*aaa\naaa\n\"\"\") == \"\"\"1\n2\"\"\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    3 3\n    aaa\n    abc\n    aba\n    a*a\n    aaa*\n    *aaa\n    '''\n) == '2'\nassert solution(\n    '''\n    7 2\n    a\n    ab\n    abc\n    ab*\n    ab*c\n    ab*a\n    abc*\n    *abc\n    '''\n) == '1 3 3 1 3 1 3'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\nabc\naba\naaa\naaa\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\naaa\naaa\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na*a\nabc\na*a\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na*a\nabc\na*a\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\naaa\naaa\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('1\\n2\\n3\\n') == '3\\n'\nassert solution('3\\n*\\n*\\n*\\n') == '3\\n'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2\\n1\\n1\\n'"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '2\\n1\\n1\\n'\n\nassert solution('''\n3 2\n*a*\nabc\na*\n''') == '1\\n1\\n1\\n'\n\nassert solution('''\n10 10\naaa\na*a\na*\n*a\na*\n*a\na*\na*\na*\na*\na*\na*\n*a*\na*\na*\n*a\naaa\na*a\na*\na*\na*\na*\na*\na*\na*\na*\na*\na*\na*\na*\n''') == '3\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n2\\n1\""
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    *\n    a\n    a\n    b\n    *\n    b\n    *\n    *\n    ''') == '3'\n    ''')\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('code').solution(__import__('sys').stdin), \"Code doesn't match expected output\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"4 4\") == \"1\"\n\nIn the first sample case, there is a 1-1 hole in the middle. If you hammer the peg in position 2, it would be down, so that would be the new configuration.\n\nIn the second sample case, there is a hole in the middle. If you hammer the peg in position 3, it would be up, so that would be the new configuration.\n\nIn the third sample case, there are no holes in the middle. If you hammer the peg in position 2, it would be up, so that would be the new configuration.\n\nIn the fourth sample case, there are no holes in the middle. If you hammer the peg in position 3, it would be down, so that would be the new configuration.\n\nThis test case shows that there are no holes in the middle.\n\"\"\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('4') == '1'\n\n\"\"\"\n\nr, c = list(map(int, input().split()))\n\ngrid = []\n\nfor i in range(r):\n    grid.append(input())\n\nfor i in range(r):\n    for j in range(c):\n        if grid[i][j] == 'O':\n            if i + 1 < r and grid[i + 1][j] == 'O':\n                if i + 2 < r and grid[i + 2][j] == 'O':\n                    if i + 3 < r and grid[i + 3][j] == 'O':\n                        if i + 4 < r and grid[i + 4][j] == 'O':\n                            if i + 5 < r and grid[i + 5][j] == 'O':\n                                print(0)\n                                exit()\n        if grid[i][j] == 'X':\n            if i - 1 >= 0 and grid[i - 1][j] == 'X':\n                if i - 2 >= 0 and grid[i - 2][j] == 'X':\n                    if i - 3 >= 0 and grid[i - 3][j] == 'X':\n                        if i - 4 >= 0 and grid[i - 4][j] == 'X':\n                            if i - 5 >= 0 and grid[i - 5][j] == 'X':\n                                print(0)\n                                exit()\n        if grid[i][j] == 'O':\n            if i - 1 >= 0 and grid[i - 1][j] == 'O':\n                if i - 2 >= 0 and grid[i - 2][j] == 'O':\n                    if i - 3 >= 0 and grid[i - 3][j] == 'O':\n                        if i - 4 >= 0 and grid[i - 4][j] == 'O':\n                            if i - 5 >= 0 and grid[i - 5][j] == 'O':\n                                print(0)\n                                exit()\n        if grid[i][j] == 'X':\n            if i + 1 < r and grid[i + 1][j] == 'X':\n                if i + 2 < r and grid[i + 2][j] == 'X':\n                    if i + 3 < r and grid[i + 3][j] == 'X':\n                        if i + 4 < r and grid[i + 4][j] == 'X':\n                            if i + 5 < r and grid[i + 5][j] == 'X':\n                                print(0)\n                                exit()\n\n\n\nprint(1)"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution(stdin) == \"1\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"4 4\") == \"1\""
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"4 2\nOX\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n\"\"\") == \"1\"\nassert solution(\"\"\"4 2\nOX\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n\"\"\") == \"0\"\nassert solution(\"\"\"4 2\nOX\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n\"\"\") == \"0\"\nassert solution(\"\"\"4 2\nOX\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n\"\"\") == \"1\"\nassert solution(\"\"\"4 2\nOX\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"5 4\") == \"0\"\nassert solution(\"6 5\") == \"1\"\n\"\"\""
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '1'\nassert solution('4 1') == '0'\nassert solution('4 2') == '1'\n\"\"\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2\\nOOO\\nOOO\\nOOO') == '1'\n\n\"\"\""
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO\\n\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n3\nO O\nX X\nX X\n    \"\"\"\n    ) == \"1\"\n\nassert solution(\n    \"\"\"\n2\nO O\nX X\n    \"\"\"\n    ) == \"0\"\n\nassert solution(\n    \"\"\"\n1\nO O\nX X\n    \"\"\"\n    ) == \"1\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n3 2\\n-2 0\\n0 -2\") == \"1\\n1\\n1\\n1\"\nassert solution(\"2\\n1 1\\n1 1\\n-1 -1\\n1 1\\n-1 -1\\n1 -1\") == \"2\\n0\\n2\\n0\\n2\\n0\\n4\\n0\\n4\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0\") == \"16\"\nassert solution(\"0 2\") == \"16\"\nassert solution(\"-2 0\") == \"16\"\nassert solution(\"0 -2\") == \"16\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n-1\\n0\") == \"1\"\nassert solution(\"3\\n2\\n0\") == \"0\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"16\"\n\n__EXAMPLE__\n\nSample Input:\n5\n3 0\n-2 0\n0 -2\n0 2\n1 2\nSample Output:\n3\n'''\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0') == '4'\nassert solution('0 2') == '4'\nassert solution('-2 0') == '16'\nassert solution('0 -2') == '16'"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 0\n0 2\n-2 0\n0 -2\n''') == '16'\n\nassert solution('''7\n-1 -2\n0 -2\n2 -1\n-2 1\n-1 -2\n0 2\n''') == '55'\n\nassert solution('''1\n0\n''') == '1'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 0\") == \"16\"\nassert solution(\"-2 0\") == \"0\"\nassert solution(\"0 -2\") == \"0\"\nassert solution(\"0 0\") == \"0\""
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 0') == '16'\nassert solution('0 2') == '16'\nassert solution('-2 0') == '16'\nassert solution('0 -2') == '16'\n\n----"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4 0\\n2 0\\n-2 0\\n0 -2') == '16'\nassert solution('2\\n0 0\\n1 0\\n-1 0') == '0'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '16'\nassert solution('8') == '1'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 6') == '8'\nassert solution('4 10 50') == '80'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('3 5') == '5'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '1\\n2\\n3'\nassert solution('2 4 -5 2') == '10\\n-5\\n10\\n-5'\nassert solution('3 6 1') == '1\\n1\\n1'\nassert solution('3 0 1') == '1\\n1\\n1'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 10 50') == '80'\nassert solution('1 1 2 2') == '2'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 4 4\\n-1') == '1'\nassert solution('5 5 2 3 1\\n-1 -1 -1 1 -1 -1') == '2'"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n8 8 2 -2') == '80'\nassert solution('4\\n10 8 2 -2') == '80'\n\nclass TestSolution(unittest.TestCase):\n\n    def test_simple(self):\n        self.assertEqual(solution('2\\n8 8 2 -2'), '80')\n        self.assertEqual(solution('4\\n10 8 2 -2'), '80')\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'\nassert solution('3 10 5\\n10 5 1 2') == '70'\nassert solution('3 10 10\\n-10 10 1 2') == '20'\nassert solution('3 10 2\\n-10 -1 1 2') == '3'\nassert solution('100 100 1\\n1 1 100 2') == '1'"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 3 2') == '4'\nassert solution('2 0 0 0') == '4'\nassert solution('2 10 10 10 10') == '2'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 10 50\n8 8 2 -2\n3 8 4 5\n-1 7 5 2\n9 4 3 -2\n''') == '80'\nassert solution('''\n2 2 1\n1 1\n''') == '1'\nassert solution('''\n3 2 4\n1 2 3\n2 3\n1 2 1\n''') == '3'\nassert solution('''\n5 3 7\n2 2 -1 1 1\n2 1 3 4\n2 -1 -2 1 2\n1 -2 1 -3 1\n-1 2 1 -4\n3 2 1 3\n4 5 4 2\n-2 -3 1\n3 5 3 2\n-4 4 5\n4 -3 2\n2 3 4 3\n3 2\n''') == '12'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '80'\nassert solution('2') == '80'\nassert solution('3') == '80'\nassert solution('4') == '80'\nassert solution('5') == '80'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n8 8 2 -2\\n') == '80'\nassert solution('4\\n8 8 2 -2\\n') == '80'\nassert solution('10\\n8 8 2 -2\\n') == '100'\nassert solution('1\\n1 1 1\\n') == '1'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 8') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"0 0 10 10\") == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3''') == '2.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3''') == '4.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\nSample Output:\n0.000000000''') == '0.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6''') == '3.000000000'\nassert solution('''\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '5.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n-10.10000000000\\n2.5\") == \"10.10000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n-10.10000000000\\n2.5\\n-5.0\") == \"10.10000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 8') == '3.000000000'\nassert solution('0 0 10 10') == '3.000000000'\nassert solution('5 1') == '4.99000000'\nassert solution('5 9') == '4.99000000'\nassert solution('3') == '1.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"3.000000000\"\nassert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"4.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\"\n) == \"3.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9') == '3.000000000'\nassert solution('3\\n-1 1\\n-2 2\\n') == '0.000'\nassert solution('10\\n-5 -5\\n-4 -4\\n') == '9.99999999999999999'\nassert solution('10\\n-5 -5\\n-4 -4\\n') == '0.000'\nassert solution('4\\n-5 -5\\n-4 -4\\n') == '-1.000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6') == '3.000000000'"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 7') == '3'\n'''\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 4') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '1'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4 4\n0 1 0 0\n1 2\n2 3\n2 4\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 1\nassert solution('4 3') == 1\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2\\n2 3\\n1 3') == '1'\nassert solution('4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4') == '1'\nassert solution('6 2\\n0 0 0 0 0 0\\n1 1') == '0'\nprint('all tests passed')\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1 1 1 1\n1 1 1 1\n1 1 1 1\n0 0 0 0\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n4 4\n0 1 0 0\n1 2\n2 3\n2 4\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\n\n'''"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3\n0 1 0\n1 2\n2 3\n2 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n''') == '6.283185'\n\nassert solution('''\n3 3\n0 0\n1 0\n1 1\n''') == '7.14285714285714'\n\nassert solution('''\n4 4\n0 0\n1 0\n1 1\n0 1\n0 2\n1 2\n''') == '3.141592653589793'\n\nassert solution('''\n5 5\n0 0\n1 0\n1 1\n1 1\n2 0\n2 1\n''') == '6.283185309514456'\n\nassert solution('''\n5 5\n0 0\n1 0\n1 1\n2 0\n2 1\n''') == '3.141592653589793'"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"6.283185\"\nassert solution(\"5 5\") == \"12.56153846153846\"\n\"\"\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n0\\n0\\n1\\n0 1\") == \"0\"\nassert solution(\"3\\n0 0\\n0 1\\n1 0\") == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\""
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '0.5708'\nassert solution('3 2') == '1.5707963267949'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6.283185\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n''') == '6.283185'\nassert solution('''5\n0 0\n0 1\n1 0\n0 1\n1 1\n''') == '2.166667'\nassert solution('''1\n1\n1\n''') == '0.0'\nassert solution('''2\n0 1\n0 1\n0 2\n0 3\n''') == '-0.5'\nassert solution('''2\n0 1\n1 0\n1 1\n''') == '1.5'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '6.283185'\nassert solution('5 5') == '25.618034'\n\n---\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1 2'\nassert solution('5') == '1 2 3 4 5'"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n3\n''') == '1 2 3'\nassert solution('''\n2\n1\n3\n''') == '1 2 3'\nassert solution('''\n3\n1\n2\n''') == '1 2 3'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"2 3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 1 2\"\nassert solution(\"2 3 4 5 6 7\") == \"1 2 3 4 5 6 7\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('8') == '1 2 3 4 5 6 7 8'\nassert solution('16') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16'"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"1 2 3\"\n\"\"\""
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1 2 3\""
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution(\"\"\"\n1 3\n4 1\n2 4\n3 1\n4 3\n5 3\n3 1\n5 2\n4 1\n\"\"\") == '3 1 2 4'\nassert solution(\"\"\"\n4 4\n3 3\n4 4\n3 1\n1 3\n\"\"\") == '1'\nassert solution(\"\"\"\n3 3\n3 4\n3 1\n3 4\n\"\"\") == '1'\nassert solution(\"\"\"\n4 4\n4 3\n3 4\n3 3\n3 2\n3 3\n3 1\n\"\"\") == '3 1 2 3'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution(input) == '1 2 3 4'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\n\nassert solution('''\n10 2\n1 2 3 4\n10 4\n8 5 6 7 8\n''') == '1 2 3 4'\n\nassert solution('''\n6 7\n1 2 3 4 5 6\n3 5 6\n3 4\n2 4\n''') == '1 2 3 4 5 6'\n\nassert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\n\nassert solution('''\n1 2 3 4 5\n''') == '1 2 3 4 5'"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\\n1 2 3 4\\n\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 3') == '1 2 3'\nassert solution('1 2\\n1 3') == '1 2 3'\nassert solution('4 2\\n1 3\\n2 3\\n1 4\\n4 3') == '1 2 3 4'"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(\"3 4\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1 2 3 4\"\nassert solution(\"3 3\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    5 5\n    1 2\n    1 3\n    2 4\n    3 4\n    ''') == '1 2 3 4 5'\n\nassert solution('''\n    2 5\n    1 3\n    3 4\n    ''') == '2 3 4 5'\n\nassert solution('''\n    7 5\n    1 3\n    2 4\n    3 6\n    5 7\n    6 7\n    4 5\n    ''') == '4 5 1 3 2 4 6 7'\n\nassert solution('''\n    4 4\n    2 4\n    4 1\n    4 3\n    ''') == '2 4 4 1 3'\n\nassert solution('''\n    1 1\n    1\n    ''') == '1'"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4\\n1 2\\n2 3\\n3 4') == '1'\nassert solution('2 1\\n2 3\\n3 4') == '3'\nassert solution('3 2\\n1 3\\n2 4') == '1 3 2 4'\nassert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1 3 2 4'\nassert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1 3 2 4'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 3') == '1 2 3'\nassert solution('2 3') == '2 3'\nassert solution('3 3') == '3'\nassert solution('4') == '1 2 3 4'\n\n\n-----Hint:-----\nUse a dictionary to store the visited cities. The value of a city is a boolean, which means if he has visited it, then we can go there, else he can't. Use this dictionary to find out how many times the city has been visited.\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1'\n\nassert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\n\n''')"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1\n1 2''') == '1'\nassert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\nassert solution('''4 3\n1 2\n3 4\n1 3\n2 4''') == '3'\nassert solution('''2 4\n1 2\n3 4''') == '2'\nassert solution('''5 5\n1 2\n3 4\n3 5\n2 5\n2 4''') == '4'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\""
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 2') == '1'\nassert solution('5 1\\n1 2\\n1 3\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12') == '3'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"1\"\nassert solution(\"3 4\\n1 2\\n1 3\\n\") == \"2\"\nassert solution(\"3 5\\n1 2\\n1 3\\n1 4\\n\") == \"4\"\nassert solution(\"10 10\\n2 5\\n4 8\\n8 7\\n8 9\\n7 10\\n7 6\\n\") == \"3\"\nassert solution(\"5 5\\n1 2\\n2 3\\n3 4\\n4 1\\n\") == \"4\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\n1 2') == '1'\nassert solution('2 1\\n3 2\\n1 3') == '1'\nassert solution('3 2\\n1 3\\n2 3') == '2'\nassert solution('5 5\\n5 5\\n3 4\\n1 3\\n5 2\\n1 4\\n1 5') == '5'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n1 3\n2 3\n1 4\n1 5''') == '1'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 2') == '1'\nassert solution('2 4\\n1 2\\n3 2\\n1 4') == '2'\nassert solution('10\\n1 2\\n3 4\\n5 2\\n6 7\\n7 8\\n2 9\\n10 1') == '10'\nassert solution('100\\n1 2\\n1 3\\n4 5\\n3 6\\n2 7\\n3 8\\n6 9\\n7 10\\n7 11\\n2 12\\n3 13\\n4 14\\n5 15\\n6 16\\n7 17\\n18 19\\n7 20\\n11 21\\n18 22\\n22 23\\n19 24\\n7 25\\n6 26\\n25 27\\n23 28\\n12 29\\n29 30') == '28'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 2\n1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2\n1 2\n1 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1\n1 2\n''') == '1'\n\nassert solution('''2 1\n3 1\n3 2\n''') == '1'\n\nassert solution('''3 3\n2 2\n1 1\n3 1\n1 2\n''') == '2'\n\nassert solution('''10 9\n9 8\n8 7\n7 5\n6 4\n5 3\n4 1\n3 2\n2 1\n1 2\n''') == '2'\n\nassert solution('''1000 100\n100 999\n999 99\n99 98\n98 97\n97 96\n96 95\n95 94\n94 93\n93 92\n92 91\n91 90\n90 89\n89 88\n88 87\n87 86\n86 85\n85 84\n84 83\n83 82\n82 81\n81 80\n80 79\n79 78\n78 77\n77 76\n76 75\n75 74\n74 73\n73 72\n72 71\n71 70\n70 69\n69 68\n68 67\n67 66\n66 65\n65 64\n64 63\n63 62\n62 61\n61 60\n60 59\n59 58\n58 57\n57 56\n56 55\n55 54\n54 53\n53 52\n52 51\n51 50\n50 49\n49 48\n48 47\n47 46\n46 45\n45 44\n44 43\n43 42\n42 41\n41 40\n40 39\n39 38\n38 37\n37 36\n36 35\n35 34\n34 33\n33 32\n32 31\n31 30\n30 29\n29 28\n28 27\n27 26\n26 25\n25 24\n24 23\n23 22\n22 21\n21 20\n20 19\n19 18\n18 17\n17 16\n16 15\n15 14\n14 13\n13 12\n12 11\n11 10\n10 9\n9 8\n8 7\n7 6\n6 5\n5 4\n4 3\n3 2\n2 1\n1 2\n''') == '1'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1\\n1 2') == '1'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '45'\n\n\"\"\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '2'"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"45\"\nprint(solution())"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"45\"\nassert solution(\"3\") == \"5\"\n\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '45'\n\"\"\""
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '45'\nassert solution('1000000') == '450000'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '12'\nassert solution('10') == '50'\nassert solution('1') == '1'\nassert solution('4') == '1'\nassert solution('7') == '8'\n\"\"\"\n\nn = int(stdin)"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n5''') == \"45\"\nassert solution('''10\n5''') == \"45\"\nassert solution('''100\n10''') == \"45\"\nassert solution('''2000\n
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '45'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n5\n2\n3\n8\n10''') == '45'\n\nassert solution('''6\n2\n8\n9\n4\n5\n3\n''') == '20'\n\nassert solution('''4\n10\n3\n4\n2\n6\n5\n8\n1''') == '36'\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('1 1 1 1 1') == '5'\nassert solution('100 10 30 10 50') == '2'"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('7 11 9 12 2') == '3'\nassert solution('5 20 20') == '3'\nassert solution('6 8 8 8 8') == '0'\nassert solution('6 8 8') == '1'\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 20 20\n7 11 9 12 2\n''') == '4'\nassert solution('''5 10 10\n7 11 9 12 2\n''') == '1'\n\"\"\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\nassert solution('''\n10 20 20\n4 9 8 7 5\n''') == '5'\nassert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\nassert solution('''\n10 20 20\n4 9 8 7 5\n''') == '5'\n\nassert solution('''\n2 2 2\n1\n''') == '2'\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\nassert solution('''\n10 20 20\n3 1 2 3 4 5 2 2 5\n''') == '6'\nprint('All test cases passed')"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 20 20\") == \"4\"\nassert solution(\"7 11 9 12 2\") == \"3\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == '4', \"ERROR\"\nassert solution([int(i) for i in stdin.split('\\n')[0].split()]) == '4', \"ERROR\"\nassert solution([int(i) for i in stdin.split('\\n')[1].split()]) == '4', \"ERROR\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 20 20\") == \"4\"\nassert solution(\"7 11 9 12 2\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 20 20\\n\"\n    \"7 11 9 12 2\\n\") == \"4\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\nkenny harrypotter1\\ncharlie harrypotter1\\njenny harrypotter1\\nlaura harrypotter1\\n') == '2'\nassert solution('2 2\\nkenny harrypotter1\\ncharlie harrypotter1\\njenny harrypotter1\\nlaura harrypotter1\\n') == '1'"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 1\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1 1\nkenny 1 harrypotter1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 1\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n\") == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 2' + '1 kenny' + '1 harrypotter' + '1 charlie' + '1 jenny' + '1 laura') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings''') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0 1'"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('010') == '1'\nassert solution('111') == '2'\nassert solution('0110') == '2'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(samples[0]) == '2 1'\nassert solution(samples[1]) == '1 4'\nassert solution(samples[2]) == '3 8'\nassert solution(samples[3]) == '3 5'\n\n-----Explanation-----\n\nInput:\n\n1\n01\n1 0 0 1 1 1 0 1 1 1\n\nOutput:\n\n2 1\n\nExplanation:\n\nSubsequences with the best success rate are:\n\n1 0 0 1 1 1 0 1 1 1\n1 0 0 0 1 1 1 0 1 1\n\nOutput:\n\n2 1\n\n\"\"\"\n\nimport time"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n01\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n2\n0 1\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n2\n0 0\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n3\n0 1 0\n\"\"\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1') == '1 1'\nassert solution('1\\n0') == '1 1'\nassert solution('1\\n1\\n') == '1 1'\nassert solution('1\\n1\\n1') == '1 1'\nassert solution('1\\n0\\n1') == '1 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n01\n1\n0''') == '2 2'\nassert solution('''1\n01\n1\n1\n0''') == '2 2'\nassert solution('''1\n10\n10\n10\n0\n0\n0\n1\n1\n0''') == '1 4'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    1\n    01\n''') == '2 1'\n\nassert solution('''\n    1\n    1\n''') == '2 1'\n\nassert solution('''\n    2\n    00\n''') == '2 1'\n\nassert solution('''\n    5\n    00 0 1 1 0 1\n''') == '5 4'\n\nassert solution('''\n    1\n    0\n''') == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1\n01\n\"\"\") == \"1 1\"\n\nassert solution(\n\"\"\"\n2\n00\n\"\"\") == \"2 1\"\n\nassert solution(\n\"\"\"\n2\n00\n\"\"\") == \"2 1\"\n\nassert solution(\n\"\"\"\n3\n00\n00\n\"\"\") == \"3 1\"\n\nassert solution(\n\"\"\"\n3\n01\n01\n\"\"\") == \"3 1\""
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1 1'\nassert solution('01') == '1 1'\nassert solution('0101') == '1 1'\nassert solution('010101') == '2 3'\nassert solution('0101010') == '2 5'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n2 3\n3 3\n''') == '1 1\\n2 3\\n3 3'\nassert solution('''\n2 2\n11 1\n1 1\n''') == '2 2\\n11 1\\n1 1'\nassert solution('''\n2 4\n1 1\n1 1\n1 1\n''') == '2 4\\n1 1\\n1 1\\n1 1'\nassert solution('''\n4 4\n2 1\n1 1\n1 1\n''') == '4 4\\n2 1\\n1 1\\n1 1'\nassert solution('''\n3 3\n1 1\n1 1\n''') == '3 3\\n1 1\\n1 1'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    3\n    4 1\n    2 123\n    2 2\n    21\n    10\n    2 2\n    23\n    12\n    '''\n) == '4 3\\n2233\\n2233\\n1111\\n'"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3 3\n1234\n1\n2\n3\n4\n''') == \"2 3\"\nassert solution('''\n4\n2 1\n22\n12\n''') == \"2 1\"\nassert solution('''\n2\n2 2\n23\n22\n''') == \"2 2\"\nassert solution('''\n1\n1\n2\n''') == \"1\"\nassert solution('''\n2\n2 2\n2 2\n''') == \"2 2\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2 3') == '2 3'\nassert solution('2 1') == '1'\nassert solution('2 1 2') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\n''') == '4 3\\n2123\\n1012\\n2123\\n1111\\n2123\\n2233\\n2233\\n1111\\n2123'\nassert solution('''\n6\n5 4\n1 2 3 4 5\n2 3 1\n3 4 1\n4 5 2\n5 6 1\n6 5\n''') == '5 4\\n1 2 3 4 5\\n2 3 1\\n3 4 1\\n4 5 2\\n5 6 1\\n6 5\\n2233\\n2233\\n1111\\n2123'\nassert solution('''\n5\n4 1\n1 2 3 4\n2 3 1\n3 4 1\n4 5 2\n5 6 1\n6 5\n''') == '4 3\\n1 2 3 4\\n2 3 1\\n3 4 1\\n4 5 2\\n5 6 1\\n6 5\\n2123\\n2233\\n1111'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n''') == '2233\\n2233\\n1111\\n'''\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n5\n1 1\n2 2\n3 3\n4 4\n5 5\nSample Output:\n5 3\n2122\n2233\n1111\n2233\n2233\n\"\"\"\n) == \"5 3\\n2122\\n2233\\n1111\\n2233\\n2233\\n\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4 1\\n2123\\n2 2\\n21') == '4 3'\nassert solution('3\\n4 1\\n2 2\\n21') == '3 2'\nassert solution('3\\n4 1\\n2 2\\n21') == '3 2'\nassert solution('3\\n4 1\\n2 2\\n21') == '3 2'\nassert solution('3\\n4 1\\n2 2\\n21') == '3 2'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'cannot be ordered'\nassert solution('2') == 'cannot be ordered'\nassert solution('1') == 'cannot be ordered'\nassert solution('14') == 'cannot be ordered'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'atk'\nassert solution('5') == 'freetype'\nassert solution('0') == 'emacs xorg-x11 lisp'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk pango gtk2 libtiff zlib vim-common libjpeg atk pango glib2 freetype pcre gtk2 vim-X11 lisp xorg-x11-libs grep freetype'\nprint('all test cases passed')"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n20\nalgorithm\nalgorithms\nalgorithm\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic\nalgorithms\nalgorithmic"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"atk\"\nassert solution(\"2\") == \"freetype\"\nassert solution(\"3\") == \"glib2\"\nassert solution(\"4\") == \"libattr\"\nassert solution(\"5\") == \"libjpeg\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nlibattr\\nvim-common\\ngtk2 libattr\") == \"atk\"\nassert solution(\"6\\nzlib\\nlibjpeg\\natk\\npango\\nfreetype\\nxorg-x11-libs\\nxorg-x11\\npango\\n\\ngrep pcre\\nxorg-x11\\n\\n\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n\\n0\\n\") == \"cannot be ordered\"\nassert solution(\"8\\nxorg-x11\\nlisp\\nemacs\\ngrep\\nxorg-x11\\n\\n\\n\") == \"cannot be ordered\"\nassert solution(\"13\\natk\\npango\\nzlib\\n\\n\\n\\ngrep\\nxorg-x11\\n\\n\\n\\n\") == \"cannot be ordered\"\nassert solution(\"1\\n\") == \"cannot be ordered\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nzlib\npango\nglib2\n1\nx11''') == 'x11 zlib pango glib2'\nassert solution('''6\nlibpng\nopenjpeg zlib\npng\nlibpixman-2 libatk\nlibgdk-3 libglib2\nzlib''') == 'zlib openjpeg libpng libpixman-2 libgdk-3 libglib2 libatk'\nassert solution('''3\nlibattr\nvim-common\ngtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg atk\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\nSample Output:\nlibattr\nfreetype\nglib2\nlibjpeg\npcre\nzlib\natk\npango\nxorg-x11-libs\nzlib\nlibtiff\ngtk2\nvim-common\nxorg-x11\nlisp\n''') == 'libattr libjpeg libpng libtiff atk pango gtk2 x11 pango x11-libs zlib pango x11-libs grep freetype gtk2-common'"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg atk\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11 lisp emacs\\n0\") == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\nlibtiff\\ngtk2\\nvim-X11\\n'"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\nfreetype pango\\n0\\n\") == \"atk\\npango\\nglib2\\nzlib\\nlibjpeg\\nlibattr\\nxorg-x11-libs\\ngtk2\\nglib2\\npango\\npcre\\nvim-common\\nxorg-x11\\nfreetype\\nemacs\\n\"\nprint(solution(input))\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nlibattr') == \"atk\"\nassert solution('5\\nemacs xorg-x11 lisp') == \"emacs xorg-x11 lisp\"\nassert solution('2\\nlibattr') == \"libattr\"\nassert solution('10\\nlibattr') == \"cannot be ordered\"\n\nassert solution('10\\nlibattr') == \"cannot be ordered\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"16\"\n\n----Analysis----\nstdin=input\n\n---Variables---\na, b\n\n---Constraints---\nstdin=input\n\n---Strategy---\n* init a, b\n* while a<y or b<y\n  * a, b = b, a+b\n\n* return b\n\n\"\"\"\n\nimport unittest\nfrom typing import List"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('32 20') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"15 16\") == \"16\"\nassert solution(\"16 18\") == \"16\"\nassert solution(\"8 13\") == \"16\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"32 20\") == \"16\"\n\"\"\""
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('32 20') == '16'\nassert solution('32 21') == '16'\nassert solution('32 22') == '16'\nassert solution('32 23') == '16'\nassert solution('32 24') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32 20') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''32 20''') == '16'\nassert solution('''4 2''') == '10'\nassert solution('''32 42''') == '16'\n\nimport sys\nsys.stdin = open('input.txt', 'r')"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('32 20') == '16'\nassert solution('100') == '2'\nassert solution('33') == '2'\nassert solution('3') == '1'\nassert solution('7777') == '8'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('32 20') == '16'\nassert solution('12 12') == '10'\nassert solution('6 3') == '7'\n\n###\n\nimport sys"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''32 20''') == '16'\n\n'''\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 4\n....\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '1 2\\n'\n    '2 1\\n'\n    ) == '4 4'\n\nassert solution(\n    '5 6\\n'\n    '#.\\n'\n    '#.\\n'\n    '#.\\n'\n    '#.\\n'\n    '#.\\n'\n    ) == '15 16'\n\nassert solution(\n    '3 5\\n'\n    '...\\n'\n    '..#\\n'\n    '..#\\n'\n    '#..\\n'\n    ) == '19 20'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n\") == \"5 13\"\nassert solution(\"3 4\\n....\\n#.#\\n\") == \"0 0\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n....\\n\") == \"5 13\"\n\n'''\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n1 2\n...\n.#\n''') == '5 3\nassert solution(\n'''\n1 2\n..#\n...\n''') == '4 3\n'''\nTest 1.\nWrite your code in Python 3.6\nNote: The first test case has m = 1, n = 1.\n''')\nassert solution(\n'''\n2 2\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '5 13'\nassert solution('2 3') == '0'\nassert solution('1 2') == '3'\n\nn = int(input())\na = list(input())\n\nbroken = 0\nfor i in range(n):\n    if a[i] == '#':\n        broken += 1"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n...#\n...#\n...#''') == '13'\nassert solution('''3 5\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4\n....\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n.##\") == \"2 3\\n3 1\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\n.##\\n###\\n') == \"5 13\"\nassert solution('5\\n....\\n###\\n....\\n') == \"13\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 4\n1 2 5 2\n2 3 4 1\n3 4 4 2\n3 1? 0\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 4\n1 2 5 2\n2 3 4 1\n3 4 4 2\n3 1? 0\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n1 2 5 1\n2 3 3 1\n3 4 4 2\n3 1? 0\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '5'\nassert solution('3 3') == '5'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '5'\nassert solution('3 3') == '5'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\\n') == '5'\n\"\"\""
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\n\nassert solution('''\n1 1\n1 2\n1??\n''') == '??'\n'''"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '5'\nassert solution('10 4') == '10'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '5'\nassert solution('1 2 5 1') == '5'\nassert solution('2 3 3 1') == '4'"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '5'\nassert solution('5 4') == '4'\nassert solution('5 2') == '2'\nassert solution('1 2 3 4') == '1'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '5'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\\n') == '5'\nassert solution('8 9\\n6 7 4 1\\n3 2 8 1\\n9 5 3 1\\n5 6 2 1\\n8 5 4 1\\n9 1 5 1\\n4 6 5 1\\n9 6 7 1\\n7 5 8 1\\n9 1 6 1\\n2 3 8 1\\n3 6 5 1\\n1 6 7 1\\n') == '6'\nassert solution('4 4\\n5 1 4 1\\n3 1 2 1\\n5 2 4 1\\n3 2 1 1\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0'\nassert solution('5 5') == '3'\nassert solution('1 10') == '8'\nassert solution('1 10') == '8'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n-1 0\n-1 1\n0 1\n''') == '0'\nassert solution('''\n4 4\n-1 0\n-1 1\n0 1\n1 2\n''') == '3'\nassert solution('''\n5 5\n-1 0\n-1 1\n0 1\n1 2\n2 3\n4 4\n''') == '4'\nassert solution('''\n8 8\n-1 0\n-1 1\n0 1\n1 2\n2 3\n3 4\n5 5\n6 6\n''') == '5'\nassert solution('''\n4 4\n-1 0\n-1 1\n0 1\n1 2\n2 3\n4 4\n''') == '3'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3\\n-1 0\\n-1 1\\n0 1') == '0'\nassert solution('5 2\\n-1 0\\n-1 1\\n0 1\\n-1 2\\n-1 3\\n-1 4\\n-1 5') == '5'\nassert solution('100000 3\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n-1 4\\n-1 5\\n-1 6\\n-1 7\\n-1 8\\n-1 9\\n-1 10\\n-1 11\\n-1 12\\n-1 13\\n-1 14\\n-1 15\\n-1 16\\n-1 17\\n-1 18\\n-1 19\\n-1 20\\n-1 21\\n-1 22\\n-1 23\\n-1 24\\n-1 25\\n-1 26\\n-1 27\\n-1 28\\n-1 29\\n-1 30\\n-1 31\\n-1 32\\n-1 33\\n-1 34\\n-1 35\\n-1 36\\n-1 37\\n-1 38\\n-1 39\\n-1 40\\n-1 41\\n-1 42\\n-1 43\\n-1 44\\n-1 45\\n-1 46\\n-1 47\\n-1 48\\n-1 49\\n-1 50\\n-1 51\\n-1 52\\n-1 53\\n-1 54\\n-1 55\\n-1 56\\n-1 57\\n-1 58\\n-1 59\\n-1 60\\n-1 61\\n-1 62\\n-1 63\\n-1 64\\n-1 65\\n-1 66\\n-1 67\\n-1 68\\n-1 69\\n-1 70\\n-1 71\\n-1 72\\n-1 73\\n-1 74\\n-1 75\\n-1 76\\n-1 77\\n-1 78\\n-1 79\\n-1 80\\n-1 81\\n-1 82\\n-1 83\\n-1 84\\n-1 85\\n-1 86\\n-1 87\\n-1 88\\n-1 89\\n-1 90\\n-1 91\\n-1 92\\n-1 93\\n-1 94\\n-1 95\\n-1 96\\n-1 97\\n-1 98\\n-1 99\\n-1 100\\n-1 101\\n-1 102\\n-1 103\\n-1 104\\n-1 105\\n-1 106\\n-1 107\\n-1 108\\n-1 109\\n-1 110\\n-1 111\\n-1 112\\n-1 113\\n-1 114\\n-1 115\\n-1 116\\n-1 117\\n-1 118\\n-1 119\\n-1 120\\n-1 121\\n-1 122\\n-1 123\\n-1 124\\n-1 125\\n-1 126\\n-1 127\\n-1 128\\n-1 129\\n-1 130\\n-1 131\\n-1 132\\n-1 133\\n-1 134\\n-1 135\\n-1 136\\n-1 137\\n-1 138\\n-1 139\\n-1 140\\n-1 141\\n-1 142\\n-1 143\\n-1 144\\n-1 145\\n-1 146\\n-1 147\\n-1 148\\n-1 149\\n-1 150\\n-1 151\\n-1 152\\n-1 153\\n-1 154\\n-1 155\\n-1 156\\n-1 157\\n-1 158\\n-1 159\\n-1 160\\n-1 161\\n-1 162\\n-1 163\\n-1 164\\n-1 165\\n-1 166\\n-1 167\\n-1 168\\n-1 169\\n-1 170\\n-1 171\\n-1 172\\n-1 173\\n-1 174\\n-1 175\\n-1 176\\n-1 177\\n-1 178\\n-1 179\\n-1 180\\n-1 181\\n-1 182\\n-1 183\\n-1 184\\n-1 185\\n-1 186\\n-1 187\\n-1 188\\n-1 189\\n-1 190\\n-1 191\\n-1 192\\n-1 193\\n-1 194\\n-1 195\\n-1 196\\n-1 197\\n-1 198\\n-1 199\\n-1 200\\n-1 201\\n-1 202\\n-1 203\\n-1 204\\n-1 205\\n-1 206\\n-1 207\\n-1 208\\n-1 209\\n-1 210\\n-1 211\\n-1 212\\n-1 213\\n-1 214\\n-1 215\\n-1 216\\n-1 217\\n-1 218\\n-1 219\\n-1 220\\n-1 221\\n-1 222\\n-1 223\\n-1 224\\n-1 225\\n-1 226\\n-1 227\\n-1 228\\n-1 229\\n-1 230\\n-1 231\\n-1 232\\n-1 233\\n-1 234\\n-1 235\\n-1 236\\n-1 237\\n-1 238\\n-1 239\\n-1 240\\n-1 241\\n-1 242\\n-1 243\\n-1 244\\n-1 245\\n-1 246\\n-1 247\\n-1 248\\n-1 249\\n-1 250\\n-1 251\\n-1 252\\n-1 253\\n-1 254\\n-1 255\\n-1 256\\n-1 257\\n-1 258\\n-1 259\\n-1 260\\n-1 261"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input) == '3'\nassert solution(input) == '5'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n-1 0\\n-1 1\\n0 1\") == \"0\"\nassert solution(\"4 4\\n-1 0\\n-1 1\\n-1 2\\n0 1\") == \"1\"\nassert solution(\"10 10\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n-1 4\\n0 1\") == \"2\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1\\n') == '3'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 3\n-1 0\n-1 1\n0 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 5\n-1 0\n-1 1\n0 1\n1 -1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"10 2\") == \"1\"\n\"\"\"\nimport math"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1\n9 6 2 4\"\"\") == \"6\"\nassert solution(\"\"\"4\n2 4 5 1\"\"\") == \"2\"\nassert solution(\"\"\"5\n1 1 2 3 4\"\"\") == \"3\"\nassert solution(\"\"\"10\n1 1 2 2 2 3 3 3 2 2 1\"\"\") == \"10\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n3\n2\n4\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5\n1 2 3 4\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n9 6 2 4\") == \"6\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('18') == '6'\nassert solution('10') == '3'\nassert solution('3') == '2'\n\"\"\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2 10\") == \"1\""
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '6'\nassert solution('9 6 2 4') == '7'\nprint(solution())\n\n\"\"\""
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"6\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"5\"\n'''\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '6'\nassert solution('10') == '8'\nassert solution('11') == '2'\nassert solution('22') == '3'\n\nimport unittest\n\nclass Test(unittest.TestCase):\n    def test_sample(self):\n        self.assertEqual(solution('10'), '8')\n        self."
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\nassert solution('5\\n0 1 2 3 4') == '1'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\nassert solution('1 1 1 3 1') == '2.000000'\nassert solution('3 1 1 3 1') == '4.000000'\nassert solution('4 5 1') == '4.000000'\nassert solution('3 4 2') == '5.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"3 4 1 3 3\") == \"7.333333\""
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '1.000000'"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 3 2\") == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '2.000000'\n\nstdin = \"\"\"\n2 1 1 3 2\n2 5 1\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"4 1 4 4\") == \"6.000000\"\nassert solution(\"1 1 1 1\") == \"2.000000\""
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1 3 2') == \"2.000000\"\nassert solution('3 4 1 5') == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3 2') == \"2.000000\"\nassert solution('2 5 1') == \"3.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '2.000000'\nassert solution('1 100000 2') == '2.000000'\nassert solution('1 1 100000 2') == '2.000000'\nassert solution('1 1 2') == '0.000000'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '3\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '4\\n'\n    '1 2\\n'\n    '1 3\\n'\n    '1 4\\n'\n) == '96\\n'\n\nassert solution(\n    '5\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '3 4\\n'\n    '4 5\\n'\n    '1 2\\n'\n    '1 3\\n'\n    '1 4\\n'\n    '1 5\\n'\n    '2 3\\n'\n    '2 4\\n'\n    '2 5\\n'\n    '3 4\\n'\n    '3 5\\n'\n    '4 5\\n'\n    '4 6\\n'\n    '5 6\\n'\n    '5 7\\n'\n    '6 7\\n'\n    '6 8\\n'\n    '7 8\\n'\n    '7 9\\n'\n    '8 9\\n'\n    '8 10\\n'\n    '9 10\\n'\n    '9 11\\n'\n    '10 11\\n'\n    '11 12\\n'\n    '12 13\\n'\n    '13 14\\n'\n    '13 15\\n'\n    '14 15\\n'\n    '14 16\\n'\n    '15 16\\n'\n    '15 17\\n'\n    '16 17\\n'\n    '16 18\\n'\n    '17 18\\n'\n    '17 19\\n'\n    '18 19\\n'\n    '18 20\\n'\n    '19 20\\n'\n    '19 21\\n'\n    '20 21\\n'\n    '20 22\\n'\n    '21 22\\n'\n    '21 23\\n'\n    '22 23\\n'\n    '22 24\\n'\n    '23 24\\n'\n    '23 25\\n'\n    '24 25\\n'\n    '24 26\\n'\n    '25 26\\n'\n    '25 27\\n'\n    '26 27\\n'\n    '26 28\\n'\n    '27 28\\n'\n    '27 29\\n'\n    '28 29\\n'\n    '28 30\\n'\n    '29 30\\n'\n    '29 31\\n'\n    '30 31\\n'\n    '30 32\\n'\n    '31 32\\n'\n    '31 33\\n'\n    '32 33\\n'\n    '32 34\\n'\n    '33 34\\n'\n    '33 35\\n'\n    '34 35\\n'\n    '34 36\\n'\n    '35 36\\n'\n    '35 37\\n'\n    '36 37\\n'\n    '36 38\\n'\n    '37 38\\n'\n    '37 39\\n'\n    '38 39\\n'\n    '38 40\\n'\n    '39 40\\n'\n    '39 41\\n'\n    '40 41\\n'\n    '40 42\\n'\n    '41 42\\n'\n    '41 43\\n'\n    '42 43\\n'\n    '42 44\\n'\n    '43 44\\n'\n    '43 45\\n'\n    '44 45\\n'\n    '44 46\\n'\n    '45 46\\n'\n    '45 47\\n'\n    '46 47\\n'\n    '46 48\\n'\n    '47 48\\n'\n    '47 49\\n'\n    '48 49\\n'\n    '48 50\\n'\n    '47 50\\n'\n    '47 51\\n'\n    '46 51\\n'\n    '46 52\\n'\n    '45 52\\n'\n    '45 53\\n'\n    '44 53\\n'\n    '44 54\\n'\n    '43 54\\n'\n    '43 55\\n'\n    '42 55\\n'\n    '42 56\\n'\n    '41 56\\n'\n    '41 57\\n'\n    '40 57\\n'\n    '39 58\\n'\n    '38 58\\n'\n    '37 59\\n'\n    '36 59\\n'\n    '35 60\\n'\n    '34 60\\n'\n    '33 61\\n'\n    '32 61\\n'\n    '31 62\\n'\n    '30 62\\n'\n    '29 63\\n'\n    '28 63\\n'\n    '27 64\\n'\n    '26 64\\n'\n    '25 65\\n'\n    '24 65\\n'\n    '24 66\\n'\n    '23 66\\n'\n    '22 67\\n'\n    '21 67\\n'\n    '20 68\\n'\n    '19 68\\n'\n    '18 69\\n'\n    '17 69\\n'\n    '16 70\\n'\n    '15 70\\n'\n    '14 71\\n'\n    '13 71\\n'\n    '13 72\\n'\n    '12 72\\n'\n    '11 73\\n'\n    '10 73\\n'\n    '9 74\\n'\n    '8 74\\n'\n    '7 75\\n'\n    '6 75\\n'\n    '5 76\\n'\n    '5 77\\n'\n    '4 78\\n'\n    '4 79\\n'\n    '4 80\\n'\n    '3 81\\n'\n    '3 82\\n'\n    '2 83\\n'\n    '2 84\\n'\n    '2 85\\n'\n    '2 86\\n'\n    '2 87\\n'\n    '2 88\\n'\n    '2 89\\n'\n    '1 90\\n'\n    '1 91\\n'\n    '1 92\\n'\n    '1 93\\n'\n    '1 94\\n'\n    '1 95\\n'\n    '1 96\\n'\n    '1 97\\n'\n    '1 98\\n'\n    '1 99\\n'\n    '1 100\\n'\n)"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '96'\nassert solution('2') == '98'\nassert solution('3') == '96'\nassert solution('4') == '96'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"96\"\nassert solution(\"3\") == \"108\"\nassert solution(\"4\") == \"108\"\nassert solution(\"5\") == \"108\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n\"\"\") == \"96\"\nassert solution(\"\"\"\n2\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n\"\"\") == \"48\"\nassert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n1 2\n1 3\n1 4\n\"\"\") == \"48\"\nassert solution(\"\"\"\n5\n1 2\n2 3\n3 4\n4 5\n1 2\n1 3\n1 4\n1 5\n\"\"\") == \"72\""
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6''') == '96'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20''') == '111'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n2 3\n3 4\n4\n2 3\n4\n''') == '96', \"Your solution doesn't match the expected result\"\nassert solution('''\n10\n3 3\n5 2\n3 4\n1 5\n5 1\n3 6\n3 7\n4 2\n6 3\n7 4\n6 5\n4 1\n''') == '456', \"Your solution doesn't match the expected result\"\nassert solution('''\n5\n1 2\n1 3\n2 3\n2 4\n3 4\n''') == '99999', \"Your solution doesn't match the expected result\"\nassert solution('''\n5\n1 2\n1 3\n2 3\n2 4\n3 4\n''') == '30903489', \"Your solution doesn't match the expected result\""
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''\n2\n3\n1 2\n1 3\n1 4\n''') == '104'\n'''\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n\"\"\"\n) == \"96\"\n\nassert solution(\n\"\"\"\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n\"\"\"\n) == \"96\"\n\nassert solution(\n\"\"\"\n4\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n\"\"\"\n) == \"11\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n3\n2\n1 3\n3 2\n\"\"\") == \"96\"\n\nassert solution(\"\"\"\n4\n3\n2\n1 4\n3 1\n\"\"\") == \"96\"\n\nassert solution(\"\"\"\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n\"\"\") == \"671584\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\n    [1, 2],\n    [2, 3],\n    [4, 1]\n]) == 96\n\nassert solution([\n    [1, 2],\n    [2, 3],\n    [3, 4]\n]) == -1\n\nassert solution([\n    [1, 2],\n    [2, 3],\n    [3, 4],\n    [4, 1]\n]) == 96\n\nassert solution([\n    [1, 2],\n    [2, 3],\n    [3, 4],\n    [4, 1],\n    [4, 1]\n]) == -1\n\nassert solution([\n    [1, 2],\n    [2, 3],\n    [3, 4],\n    [4, 1],\n    [4, 1],\n    [5, 6],\n    [6, 7],\n    [7, 8],\n    [8, 9],\n    [9, 1],\n    [9, 1]\n]) == -1"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\nassert solution('3\\n1 1\\n1 0\\n2 2') == '4'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4', \"Wrong answer with inputs {}, {}\".format(3, solution('3'))\nassert solution('4') == '1', \"Wrong answer with inputs {}, {}\".format(4, solution('4'))\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1\n4\n0 0\n0 1\n1 0\n1 1''') == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 3 4 2') == '3'\nassert solution('3 2 1 1 2') == '5'\nassert solution('1') == '0'\n'''\n\n'''\nO(N^2)"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"6\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1\\n2 1\") == \"4\""
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"10 10\") == \"8\"\nassert solution(\"6 5\") == \"2\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0 0\\n1 0\\n0 1\\n1 1') == '3'\nassert solution('5\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\\n1 2\\n2 0\\n2 1\\n2 2\\n3 0\\n3 1\\n3 2\\n4 0\\n4 1\\n4 2\\n5 0\\n5 1\\n5 2') == '5'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n1 1\\n2 0\\n2 1') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n0 0\n1 1\n''') == '3'\nassert solution('''\n3\n0 0\n0 1\n1 0\n''') == '4'\n\n'''\n\nfrom math import inf\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 4') == '3'\nassert solution('4 5\\n5 4\\n5 3\\n3 2\\n2 1\\n1 0') == '1'\nassert solution('10 10\\n10 10\\n10 10\\n10 10\\n10 10') == '2'\nassert solution('1 2\\n3 1\\n4 3\\n1 2\\n3 2\\n2 3') == '1'\nassert solution('8 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '5'\n\"\"\"\n\nn = int(input())\ngraph = {}\n\nfor _ in range(n):\n    x, y = map(int, input().split())\n    graph[(x,y)] = graph.get((x,y), 0) + 1\n\nfor key in graph.keys():\n    if len(graph) == 1:\n        break\n    graph[key] = min(graph[key], graph[key - 1] + graph[(key[0], key[1] - 1)])\n\nprint(len(graph))"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n3 1\n2 4\n4 2\n3 1\n\"\"\") == \"10\"\nassert solution(\"\"\"\n4\n2 8\n3 1\n1 4\nSample Output:\n10\n10\n9\n\"\"\"\n) == \"10\""
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n8\n3 1\n1 4\n\"\"\") == \"10 10\"\nassert solution(\"\"\"\n5\n5 5\n3 2\n1 4\n1 3\n3 5\n\"\"\") == \"8 8\"\nassert solution(\"\"\"\n4\n100 100\n100 2\n2 200\n3 4\n\"\"\") == \"104 104\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n8\n3 1\n1 4\n''') == '10'\nassert solution('''5\n5 5\n4 1\n2 1\n6 4\n3 2\n''') == '14'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '10'\nassert solution('2') == '10'\nassert solution('1') == '9'\nassert solution('3 5') == '10'\nassert solution('3 10') == '9'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n') == '10'\nassert solution('2\\n8\\n1\\n4\\n') == '10'\nassert solution('3\\n1\\n4\\n') == '9'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '9'\nassert solution('4') == '7'\nassert solution('5') == '7'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n2\n3\n\"\"\") == \"10\"\nassert solution(\"\"\"\n3\n3 2\n2 3\n\"\"\") == \"10\"\nassert solution(\"\"\"\n3\n5 1\n3 5\n\"\"\") == \"15\"\nassert solution(\"\"\"\n3\n1 9\n4 7\n\"\"\") == \"19\"\nassert solution(\"\"\"\n3\n2 1\n1 4\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 8\n3 1\n1 4\n''') == '10'\n'''\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n2 8\n3 1\n1 4\n\"\"\") == \"10 10 9\"\nassert solution(\"\"\"\n3\n2 8\n1 7\n1 5\n\"\"\") == \"9 9 9\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3') == '10'\nassert solution('1\\n10\\n100') == '11'\nassert solution('1\\n10\\n1000') == '10'\nassert solution('2\\n3\\n5') == '7'\nassert solution('4\\n6\\n7') == '7'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n######\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n#####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n#JF#\\n#..#\\n#..#\\n######\") == \"3\"\nassert solution(\"4 4\\n#.JF#\\n#..#\\n#..#\\n######\") == \"3\"\nassert solution(\"4 4\\n#.JF#\\n#..#\\n######\\n######\") == \"0\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == 'IMPOSSIBLE'\n\nassert solution('5 5\\n....\\n....\\n#F#F\\n...#\\n...#\\n') == '4'\n\nassert solution('10 10\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n########\\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n#####\\n#J..\\n#..#\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n#####\\n#..#\\n#..#\") == \"1\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n.F.') == 'IMPOSSIBLE'\nassert solution('2 3\\n.#J.') == '1'\nassert solution('2 3\\n.F.#') == '0'\nassert solution('2 3\\nF.F.') == '3'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n#####\\n#JF#\\n##.#') == 'IMPOSSIBLE'"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n#.# #\\n.###\") == \"IMPOSSIBLE\"\n\nassert solution(\"1 1\\n##.#\") == \"3\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'IMPOSSIBLE'\nassert solution('4 4') == '2'\nassert solution('10 10') == '0'"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 2\\nJ F\\n#.\\n#.\\nSample Output\") == \"IMPOSSIBLE\"\nassert solution(\n    \"4 4\\n#J.#\\n#..#\\n#..#\\nSample Output\") == \"5\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\n###\\n###\\n###') == \"IMPOSSIBLE\"\nassert solution('4 4\\n#####\\n#####\\n#####') == \"3\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 5\n####\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2\") == \"0.3333333333\"\n\"\"\""
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2\") == \"0.3333333333\"\nassert solution(\"2\") == \"0.416666666667\"\nassert solution(\"1 2\") == \"0.3333333333\"\n\n'''\n\n'''\n1. the middle element should be the target.\n2. we only need to consider the half of the array.\n\n3. we should also make sure we are comparing the min (left, middle) and max (right, middle)\n\n4. since we are summing to the end, it should be the same for all indexes\n'''"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\") == \"0.3333333333\"\nassert solution(\"4 6 2\\n5\\n6 4\") == \"0.6666666666\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 2') == '0.3333333333333333333333333333333333'\nassert solution('1 2 3') == '0.3333333333333333333333333333333333'\nassert solution('1 5 3') == '0.3333333333333333333333333333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2\\n2\\n1 1\\n\") == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('1000000000 2 2') == '0.9999999999'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('2') == '0.5'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('2') == '0.3333333333'\nassert solution('2 2 2') == '0.3333333333'\nassert solution('1 1') == '0.25'\nassert solution('2 3 4') == '0.20833333'"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2\") == \"0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '0.3333333333'\nassert solution('1 1 1') == '0.0'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('1*1') == '1'\nassert solution('1*10') == '100'\nassert solution('1*100') == '10000'\nassert solution('1*101') == '10100'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '111'\nassert solution('11') == '1101'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '10\\n01\\n1\\n'\n) == '1023'\nassert solution(\n    '10\\n11\\n1\\n'\n) == '102'\nassert solution(\n    '10\\n1*1\\n1\\n'\n) == '10'\nassert solution(\n    '10\\n1*1\\n1\\n1\\n'\n) == '10'\nassert solution(\n    '10\\n1*1\\n1\\n0\\n1\\n'\n) == '103'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n10\n1001110''') == '1023'\n\nassert solution('''\n5\n101\n11100\n1101\n11111\n1010111''') == '939'\n\nassert solution('''\n6\n11011110\n11010111\n110100011\n100110111\n110111001\n010101111''') == '932'\n\nassert solution('''\n11\n01101001\n100110111\n010101111\n110100011\n110111001\n010101111''') == '932'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"1\"\nassert solution('101') == \"11\"\nassert solution('01101110') == \"11\"\nassert solution('10101110') == \"11\"\nassert solution('101011111') == \"11\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1,1,1,1,1,1,1,1,1') == '1023'\nassert solution('50\\n1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*1,1*"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '1'\nassert solution('1101') == '1'\nassert solution('1110001') == '1'\nassert solution('111010011100') == '2'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1023'\nassert solution('101') == '1023'\nassert solution('1*1') == '1023'\nassert solution('11') == '1023'\nassert solution('10101') == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('101') == '2'\nassert solution('1101') == '3'\nassert solution('10111') == '3'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\""
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 3\") == \"18\"\nassert solution(\"5 5\") == \"50\"\nassert solution(\"4 4\") == \"24\"\nassert solution(\"6 6\") == \"0\""
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '6'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '6'\n\n\"\"\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '6', 'First Test'\nassert solution('1 2') == '3', 'Second Test'\nassert solution('3 3') == '6', 'Third Test'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 1') == '6'\nassert solution('2 3\\n3 2') == '8'\nassert solution('5 5\\n5 3') == '11'\nassert solution('5 5\\n4 4') == '16'\nassert solution('10 10\\n10 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n2 2\n1 2\n''') == '6'\nassert solution('''\n1 1\n2 3\n3 4\n5 6\n6 7\n''') == '30'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '2'\nassert solution('0 0') == '0'\nassert solution('5 2') == '6'\nassert solution('10 10') == '0'"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '6'\nassert solution('6 3') == '9'\nassert solution('100 200') == '968750000'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n2000') == 'Impossible'\nassert solution('1000 2000 7\\n1\\n2\\n3\\n4\\n5\\n6\\n7') == 'Impossible'"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\"\"\") == \"2930\"\n\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\"\"\") == \"Impossible\"\n\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\"\"\") == \"2930\"\n\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\"\"\") == \"Impossible\"\n\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\"\"\") == \"Impossible\""
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2930\"\nassert solution([\n    \"1000 2000 7\",\n    \"100\",\n    \"480\",\n    \"500\",\n    \"550\",\n    \"1000\",\n    \"1400\",\n    \"1500\"\n    ]) == \"2930\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == \"2930\"\nassert solution('''10 20 7\n1\n5\n4\n5\n2\n14\n5\n''') == \"Impossible\"\nprint(solution('''10 20 7\n1\n5\n4\n5\n2\n14\n5\n'''))\n\n\n### 338.py ###\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n') == '2930'\nassert solution('1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n1500\\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('100\\n') == 'Impossible'\nassert solution('1\\n') == 'Impossible'\nassert solution('1\\n') == 'Impossible'"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == 'Impossible'\nprint('All tests passed.')\n\"\"\""
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == '2930'\nassert solution('''10000 1000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == 'Impossible'\n\n'''"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"2930\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 3 2\") == \"1\"\nassert solution(\"1 2 1\") == \"0\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 3 1') == '1'\nassert solution('1 5 2') == '1'\nassert solution('1 5 3') == '2'\nassert solution('1 5 3') == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1\\n') == '2'\nassert solution('3\\n1 2\\n1\\n0\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1\\n') == '2'\nassert solution('4 5 6\\n0\\n1\\n2\\n3\\n') == '3'\nassert solution('10 50 50\\n0\\n1\\n2\\n3\\n') == '1'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == \"2\"\nassert solution('1 1 1') == \"1\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 3\n0\n0\n1\nSample Input 2:\n2 1 3\n0\n1\nSample Output 2:\n0\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n0\n0\n1\n''') == '2'\n\nassert solution('''\n1 2 3\n0\n0\n1\n''') == '1'\n\nassert solution('''\n2\n0\n0\n1\n''') == '0'"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"1 2 3\\n0\\n0\\n0\\n\") == \"1\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1 2 3\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"1\") == \"2\"\n\nassert solution(\n    \"1 2 3\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\") == \"0\"\n\nassert solution(\n    \"1 2 3\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"2\") == \"2\"\n\nassert solution(\n    \"1 2 3\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\") == \"0\"\n\nassert solution(\n    \"1 2 3\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"2\") == \"1\""
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"30.0\"\nassert solution(\"3 3\") == \"30.0\"\nassert solution(\"10 5 -5\") == \"100.0\"\nassert solution(\"6 6 2 2\") == \"12.0\""
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n4 4\n''') == '10'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '10'\n\nSample Input 2:\n10 10\n-100 -50 -20 20 -30 50 -50 -100\n-100\n-200\n5 5\n1 1\nSample Output 2:\n20\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3 3\\n'\n    '-5 2 -5\\n'\n    '-1 -2 -1\\n'\n    '5 4 -5\\n'\n    '2 2'\n) == '10'\nassert solution(\n    '3 4\\n'\n    '10 -1\\n'\n    '2 -2\\n'\n    '4 -4\\n'\n    '6 -4\\n'\n    '2 1\\n'\n    '10 -1\\n'\n) == '12'"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '3'\nassert solution('3 3') == '0'\nassert solution('10 3') == '27'\nassert solution('10 9') == '26'\nassert solution('10 0') == '26'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"10\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"7 5 -5\") == \"20\"\nassert solution(\"10 10 2\") == \"200\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\nassert solution('''5 5\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '210'\nassert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '30'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '20'\nassert solution('4 3') == '20'\nassert solution('3 5') == '14'\nassert solution('3 3') == '10'\nassert solution('5 5') == '100'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == '10'"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2') == \"10\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1300\"\nassert solution(\"5 3\") == \"3000\"\nassert solution(\"6 3\") == \"4250\"\nassert solution(\"1 5\") == \"300\"\nassert solution(\"1 5\") == \"300\""
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nassert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3300'\nassert solution('10\\n8\\n4\\n5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n') == '9300'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n\"\"\") == \"3100\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '3000'\nassert solution('4 3') == '2100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1000') == '3000'\nassert solution('3 3 1000') == '12000'\nassert solution('2 2 1000') == '3000'"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '30100'\nassert solution('6 4') == '24000'\nassert solution('8 2') == '12000'\nassert solution('10 3') == '22000'\nassert solution('12 5') == '25000'\n\nsolution(\"2 3\")\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 5\n1 2 1000\n1 3 1000\n2 3 1000\n3 4 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '5400'\nassert solution('''\n2 5\n1 2 1000\n1 3 1000\n2 3 1000\n3 4 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '5400'\n'''\n\nn,r,f=map(int,input().split())\na,b=map(int,input().split())\nc,d=map(int,input().split())\ne,f=map(int,input().split())\ng,h=map(int,input().split())\n\nprint(a*b+c*d+e*f,a*e+b*f,c*e+d*f)\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0\", \"Should be 0\"\nassert solution(\"2 1\") == \"1\", \"Should be 1\"\nassert solution(\"3 2\") == \"2\", \"Should be 2\"\nassert solution(\"4 3\") == \"3\", \"Should be 3\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n0 1\n''') == '0'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n0 1') == '0'\nassert solution('1 3\\n0 1\\n1 0') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0'\nassert solution('4 4') == '1'\nassert solution('2 1') == '0'\nassert solution('4 4') == '1'\nassert solution('100 100') == '46'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n1 2\n''') == '0'\nassert solution('''\n2 3\n2 1 2\n''') == '1'\n\nassert solution('''\n3 5\n0 2 1 2\n''') == '2'\nassert solution('''\n3 4\n0 2 1 2\n''') == '1'"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0'\nassert solution('''\n    1 2\n    1 2\n    ''') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 1\\n') == '0'\nassert solution('4 2\\n1 1 1 1\\n0 2\\n1 2\\n1 3\\n0 3\\n1 3\\n') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 1\n0 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2 2\n0 1\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10 10\n0 9 1 2 3 4 5 6 7 8 9 10\n0 1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"11\""
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == '10'\nassert solution('5 5') == '10'\nassert solution('-1 -10') == '10'\nassert solution('0 0') == '0'\n\"\"\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"1755 1984\") == \"6\"\nassert solution(\"21 42\") == \"1\"\nassert solution(\"10 10\") == \"0\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1 10\"\n) == \"10\"\n\"\"\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 10') == '10'\n\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 10\") == \"10\"\n\"\"\"\n\nn = int(input())\nm = int(input())\n\nprint(sum([1 for x in range(n, m+1) if \"\".join(sorted(str(x))) == \"\".join(sorted(str(x))).replace(\"0\", \"\")]))\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 10') == '10'"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_1) == '10'\nassert solution(input_2) == '7'"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 100') == '100'"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 2') == '3'\nassert solution('1 10') == '9'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 3') == '5'\nassert solution('2 7') == '4'\nassert solution('20 80') == '1'\nassert solution('1 10') == '10'\n\"\"\""
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0\\n0 0\\n100 100') == 0\nassert solution('4\\n0 0\\n0 0\\n100 100\\n0 0\\n0 100') == 0\nassert solution('8\\n0 0\\n0 0\\n100 100\\n0 0\\n0 100\\n0 0\\n0 100') == 0\nassert solution('10\\n0 0\\n0 0\\n100 100\\n0 0\\n0 100\\n0 0\\n0 100') == 0\nassert solution('12\\n0 0\\n0 0\\n100 100\\n0 0\\n0 100\\n0 0\\n0 100') == 3\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 2\n2 4\n''') == '1'"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '0'\nassert solution('''\n5\n-1000 -1000\n0 0\n0 1000\n1000 1000\n-1000 -1000\n''') == '0'\nassert solution('''\n5\n-1000 -1000\n0 0\n0 1000\n1000 1000\n-1000 -1000\n''') == '1'\nassert solution('''\n5\n-1000 -1000\n0 0\n0 1000\n1000 1000\n-1000 -1000\n''') == '2'\nassert solution('''\n5\n-1000 -1000\n0 0\n0 1000\n1000 1000\n-1000 -1000\n''') == '0'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"1\", \"0\", \"0\", \"1000\", \"0\", \"1000\"]) == \"0\"\nassert solution([\"2\", \"0\", \"0\", \"0\", \"0\", \"0\"]) == \"1\"\nassert solution([\"1\", \"0\", \"0\", \"1000\", \"0\", \"1000\"]) == \"1\"\nassert solution([\"3\", \"0\", \"0\", \"0\", \"0\", \"0\"]) == \"2\"\nassert solution([\"2\", \"0\", \"0\", \"0\", \"0\", \"0\"]) == \"1\"\n\n'''"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n    5\n    0 0\n    1000 0\n    0 1000\n    1000 1000\n    1 1000\n    1000 1001\n    1 1001\n    \"\"\") == \"0\"\nassert solution(\"\"\"\n    4\n    0 0\n    1000 0\n    0 1000\n    1000 1000\n    1 1000\n    1000 1001\n    1 1001\n    \"\"\") == \"2\"\nassert solution(\"\"\"\n    8\n    0 0\n    0 -1000\n    0 1000\n    1000 -1000\n    1000 0\n    1000 1000\n    1000 -1000\n    1000 1000\n    \"\"\") == \"8\"\nassert solution(\"\"\"\n    1\n    0\n    \"\"\") == \"1\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\nassert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\"\nassert solution(\"3\\n0 0\\n10 0\\n-10 0\") == \"1\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\""
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 0\n1000 0\n0 1000\n''') == '0'\nassert solution('''\n4\n0 0\n1000 0\n0 1000\n1000 1000\nSample Output:\n1\n''') == '1'\nassert solution('''\n6\n0 0\n1 0\n1 1\n0 -1\n-1 0\n-1 1\n''') == '1'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 3\\n1 3 0.5\\n') == '0.500000000 1.000000000'\nassert solution('1\\n3 3\\n1 2 0.5\\n') == '0.500000000 1.000000000'\nassert solution('3\\n2 3\\n1 2 0.5\\n') == '0.500000000 1.000000000'\n\"\"\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1\n0 1 0.5\nSample Input 2:\n2 2\n2 2 1\nSample Output 2:\n-1''') == '-1'\n\nassert solution('''2 2\n0 0 1\n0 1 0\nSample Input 3:\n2 2\n0 1\n0 2 0\nSample Output 3:\n0.5 0.5''') == '0.5 0.5'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n0 1 0.5\n''') == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2\\n0 1 0.5\\n1 0 1\\n') == '1 1 -1'\nprint(solution('''7 4\n1 0.5 1\n0 1 1\n1 0.5 1\n1 0.5 1\n0 1 1\n0 1 1'''))\nassert solution('''1 1\n1 1\n1 1\n0 0\n1 0.5\n0 1\n0 0.5\n1 1\n1 1\n0 1\n0 0.5\n1 0.5\n1 0.5\n1 0.5\n0 1\n1 0.5\n1 1\n1 0.5\n0 0.5\n1 0.5\n0 1\n0 0.5\n0 0.5\n0 1\n1 0.5\n1 0.5\n0 1\n0 1''') == '0.833333333 1.000000000'\nprint(solution('''3 1\n1 1\n0 1\n0 0.5'''))\nassert solution('''5 3\n1 0.5 1\n0 1 1\n0 0.5 1\n0 0.5 1\n0 0.5 1\n0 1 1''') == '0.5 0.5 -1'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"0.500000000 1.000000000\"\nassert solution(\"100 1\") == \"1.00000000 1.00000000\"\n\nimport decimal"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('4 1\\n0 0 0 0\\n0 1 0 0\\n0 0 0 0\\n0 0 0 0\\n1 0 0 0\\n') == '0.500000000 1.000000000'\nassert solution('10 1\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '0.500000000 1.000000000'\nassert solution('4 2') == '1.00000000000 0.500000000 1.00000000000'\nassert solution('4 2') == '1.00000000000 0.500000000 1.00000000000'\nassert solution('20 1') == '1.00000000000 -1.00000000000 -1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1.00000000000 -1.00000000000 1.00000000000 1.00000000000 1"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.500000000 1.000000000'\nassert solution('2') == '0.500000000 1.000000000'\n\nassert solution('2 10') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 1 0.5\n0 2 0.25\n0 3 0.1\n''') == '0.300000000 1.00000000'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''8\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '8'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '7'\nassert solution('1 1') == '1'\nassert solution('4 1') == '1'\nassert solution('1 5') == '1'\nassert solution('10 10') == '2'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '3'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''\n1\n1\n''') == '0'\nassert solution('''\n5\n0 0\n0 2\n0 0\n1 2\n0 0\n''') == '0'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n10 10\n''') == '7'\nassert solution('''\n1\n10\n''') == '7'\nassert solution('''\n3\n1 2\n2 1\n3 2\n''') == '6'\nassert solution('''\n10\n1 1\n''') == '10'\nassert solution('''\n1\n1\n3 3\n''') == '4'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"7\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '7'\nassert solution('3') == '7'\nassert solution('1000000000') == '9'\n\"\"\""
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''\n5\n1 1\n1 5\n10 10\n7 10\nSample Output:\n3\n''') == '3'\nassert solution('''\n2\n1 1\n2 5\nSample Output:\n1\n''') == '1'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '7'\nassert solution('1 1') == '1'\nassert solution('4 1') == '4'\nassert solution('1 5') == '6'\nassert solution('10 10') == '9'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10\") == \"7\"\n\n\"\"\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '9-b'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n1\naba\na b\n''') == '8-a'\nassert solution('''\n0\nb\n''') == 'b'\nassert solution('''\n1\na\nb\n''') == '1'\nassert solution('''\n2\na\na\n''') == '2-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b'\n\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\nab\nba\n1\naba\nb\n''') == '8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0''') == '9-b'\nassert solution('''3\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0''') == '8-a'\nprint(\"Solution:\")\nprint(solution(input))\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\naba\\nbba\\n0') == 'ababab'\nassert solution('3-b 5-b\\n6-a 2-b\\n2') == 'bba'"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b'"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '8-a'\nassert solution('2') == '2-a'\nassert solution('3-b 5-b') == '5-b 6-b'\nassert solution('6-a 2-b') == '2-a'\nassert solution('aba') == 'a-b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\na b\n3-b 5-b\n6-a 2-b\n2\n''') == '9-b'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nb ba\n3-b 5-b\n6-a 2-b\n2\n''') == '9-b'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\na\nb\n3-b 5-b\n6-a 2-b\n2\n''') == '6-a'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\na\nb\n3-b 5-b\n6-a 2-b\n2\n''') == '6-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '9-b'\nassert solution('''\n4\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b'\n\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '8-a'\n\n'''\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"8-a\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'ABC'\nassert solution('3') == 'DEF'\nassert solution('4') == 'GHI'\nassert solution('5') == 'JKL'\nassert solution('6') == 'MNO'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2123'\nassert solution('12') == '2312'\nassert solution('1234') == '23124'\nassert solution('1') == '1'\nassert solution('123') == '23'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '3246'\nassert solution('2') == '3246'\nassert solution('3') == '3246'\nassert solution('4') == '3246'\nassert solution('5') == '3246'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '12345'\nassert solution('10') == 'abcdefghijklmnopqrstuvwxyz'\nassert solution('3') == 'abc'\nassert solution('20') == 'zxcvbnm'\nassert solution('20') == 'zxcvbnm'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3246R3246'\nassert solution('2') == '3246R3246'\nassert solution('3') == '3246R3246'\nassert solution('4') == '3246R3246'\nassert solution('5') == '3246R3246'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    01234\n    56789\n    1234567890\n    sample\n    ''') == 'U1U1U2U2U3U3U4U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4U4U5U5U6U6U7U7U8U8U9U9U2U2U2U3U3U4"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\nhello\nworld\n''') == '''\n2\n2\n2\n'''\nassert solution('''\n1\nworld\n''') == '''\n2\n2\n2\n'''\nassert solution('''\n1\n''') == '''\n3\n3\n3\n'''\nassert solution('''\n1\n''') == '''\n3\n3\n3\n'''\nassert solution('''\n1\n''') == '''\n4\n3\n3\n3\n'''\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n' + ''.join(map(str, range(10)))) == '1' + str(2) + str(3) + str(4) + str(5) + str(6) + str(7) + str(8) + str(9) + str(10) + str(11) + str(12) + str(13) + str(14) + str(15) + str(16) + str(17) + str(18) + str(19) + str(20)\nassert solution('2\\n' + ''.join(map(str, range(10))) + '\\n' + ''.join(map(str, range(10)))) == '2' + str(3) + str(4) + str(5) + str(6) + str(7) + str(8) + str(9) + str(10) + str(11) + str(12) + str(13) + str(14) + str(15) + str(16) + str(17) + str(18) + str(19) + str(20)\nassert solution('3\\n' + ''.join(map(str, range(10))) + '\\n' + ''.join(map(str, range(10)))) == '3' + str(4) + str(5) + str(6) + str(7) + str(8) + str(9) + str(10) + str(11) + str(12) + str(13) + str(14) + str(15) + str(16) + str(17) + str(18) + str(19) + str(20)\n\n---\n\nA nice explanation:\n\nSay we have the following mapping, where A is the alphabet:\n\n2 -> ABC\n3 -> DEF\n4 -> GHI\n5 -> JKL\n6 -> MNO\n7 -> PQRS\n8 -> TUV\n9 -> WXYZ\n\nIf we type the word ABC, we will get '2' and '3'.\n\nIf we type the word DEF, we will get '2' and '3'.\n\nIf we type the word GHI, we will get '2' and '3'.\n\nIf we type the word JKL, we will get '2' and '3'.\n\nIf we type the word MNO, we will get '2' and '3'.\n\nIf we type the word PQRS, we will get '2' and '3'.\n\nIf we type the word TUV, we will get '2' and '3'.\n\nIf we type the word WXYZ, we will get '2' and '3'.\n\nIf we type a word that does not exist, we will get '2' and then '3'.\n\nExample 2:\n\nInput:\n2\n5\nABCDEFGHI\nABC\n\nOutput:\n1D3A2C\n0D1B2C\n\nExplanation:\n\nExample 3:\n\nInput:\n5\n5\nXWYZ\nW\n\nOutput:\n0X1C2\n0D1B2C\n\nExplanation:\n\nExample 4:\n\nInput:\n5\n5\nXWYZ\nX\n\nOutput:\n1D3A2C\n0D1B2C\n\nExplanation:\n\nExample 5:\n\nInput:\n3\n5\nABCDEFGHI\nABC\n\nOutput:\n0D1B2C\n0D1B2C\n\nExplanation:\n\nIn all of the test cases, if we have 2 different ways to type the same word, we should find the one that uses the least keypresses.\n\n-----Idea-----\nSince we have the mapping of each digit (2, 3, 4, 5, 6, 7, 8, 9) to an alphabetic word,\nwe can just use a simple backtracking algorithm:\n\n- We build a trie\n- Each node has a key (the current digit in the word)\n- We need to check if the node has a word that has the same key\n  - If so, we can keep adding nodes to the end of the word.\n  - If not, we need to keep building a new word.\n  - If we have finished building the word, we can then recursively call the backtracking on the node\u2019s children.\n  - We can only finish building the word once we reach the end of the word\n- At the end, we can either return the result or return an empty list.\n\nWe can use this algorithm to find the optimal solution for the queries and write the solution to the stdout.\n\n'''\n\nfrom collections import defaultdict\nclass Solution:\n    def wordBreak(self, s: str, words):\n        self.max_size = max([len(x) for x in words])\n        self.result = defaultdict(list)\n        self.backtrack(0, s, words)\n        return self.result[0]\n\n    def backtrack(self, idx, s, words):\n        if idx == len(s):\n            self.result[0].append(\"\".join(self.result[idx]))\n            return\n        for i in range(1, self.max_size+1):\n            if s[id"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"1 3\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"3 1\") == \"NO\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == 'NO'\nassert solution('3 1') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'\nassert solution('5 4') == 'NO\\n'\nassert solution('5 5') == 'YES\\n1 2\\n3 4'\nassert solution('10 10') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'YES'"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'NO'\nassert solution('3 2') == 'NO'\nassert solution('3 2') == 'YES'\nassert solution('5 3') == 'YES'\nassert solution('4 3') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"YES\\n1 2\\n1 3\"\nassert solution(\"5 2\") == \"NO\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == 'YES\\n1 2\\n1 3\\n'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('10 10') == 'YES'\nassert solution('1 10') == 'NO'\nassert solution('3 3') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n1 2\\n1 3\"\n\nassert solution() == \"NO\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"9\") == \"176\"\nassert solution(\"6 6\") == \"175\"\nassert solution(\"333333\") == \"175\"\nassert solution(\"300003\") == \"176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '90000'\nassert solution('9') == '176'\nassert solution('13') == '6597'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '22'\nassert solution('9') == '142'\nassert solution('6') == '11'"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"176\"\nassert solution(\"1\") == \"176\"\nassert solution(\"6\") == \"176\"\nassert solution(\"1 2 3\") == \"181\"\nassert solution(\"3 1 2\") == \"292\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9') == '176'\nassert solution('1') == '0'\nassert solution('6') == '0'\n\"\"\"\n\nimport math\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom utils.utils import time_it\nfrom utils.utils import get_fibonacci_number\n\n@time_it\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n4\n10 10\n10000\n1000 10\n10000 1000\n100000\n100000\n''') == '1'\n\nassert solution('''\n6\n4\n10 10\n10000\n1000 10\n10000 1000\n100000\n100000\n''') == '176'\n\nassert solution('''\n8\n4\n8 8\n1000000\n1000000\n1000000\n1000000\n1000000\n1000000\n''') == '234'\n\nassert solution('''\n6\n6\n6 6\n6 6\n6 6\n6 6\n''') == '252'\n\nassert solution('''\n7\n7\n7 7\n7 7\n7 7\n7 7\n7 7\n''') == '222'"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '180'\nassert solution('5') == '1030'\nassert solution('1') == '1030'\nassert solution('100') == '4220'\nassert solution('4') == '180'"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"176\"\nassert solution(\"9\") == \"176\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"16\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"12\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '12'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '100'\nassert solution('11') == '11'\nassert solution('112') == '112'"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == '012'\nassert solution('123') == '123'\nassert solution('1234') == '1234'\nassert solution('12345') == '12345'\nassert solution('123456789') == '123456789'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '12'\n\nassert solution('10') == '10'\nassert solution('15') == '15'\nassert solution('20') == '20'\nassert solution('25') == '25'\n\"\"\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '12'\nassert solution('101') == '012'\nassert solution('123456789') == '123456789'\nassert solution('123456789') == '123456789'\nassert solution('123456789') == '123456789'"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('101') == '101'\nassert solution('15343456') == '156'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"01\"\nassert solution(\"12345\") == \"012\"\nassert solution(\"1234567\") == \"012\"\nassert solution(\"1234567890\") == \"012\"\nassert solution(\"1234\") == \"012\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '12'\nassert solution('25') == '15'\nassert solution('95') == '5'\nassert solution('99') == '1'\nassert solution('12345') == '123'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '12'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '012'\nassert solution('2768') == '227'\nassert solution('00') == '00'\nassert solution('98') == '98'"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '?', \"Please implement me!\""
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 1\n((()\n480\n617\n-570\n928\n''') == '480'"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '2'\nassert solution('4 5') == '1'\nassert solution('6 7') == '6'\nassert solution('10 20') == '10'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"?\\n\"\nassert solution(\"2 1\") == \"?\\n\"\nassert solution(\"3 1\") == \"?\\n\"\nassert solution(\"4 1\") == \"?\\n\"\nassert solution(\"5 1\") == \"?\\n\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '?', \"Wrong Answer\"\nassert solution('4 1') == '480', \"Wrong Answer\"\nassert solution('5 1') == '?', \"Wrong Answer\"\nassert solution('6 1') == '?', \"Wrong Answer\"\nassert solution('7 1') == '?', \"Wrong Answer\"\n\"\"\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n((()\n480\n617\n-570\n928\n''') == '?', 'Wrong'\n\nassert solution('''\n2\n(((()\n480\n-57\n928\n''') == '480', 'Wrong'\n\nassert solution('''\n3\n(((()\n480\n-57\n928\n''') == '480', 'Wrong'\n\nassert solution('''\n4\n((((()\n480\n-57\n928\n''') == '?', 'Wrong'\n\nassert solution('''\n5\n(((()\n-547\n928\n''') == '-547', 'Wrong'"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1\\n((()\\n480\\n617\\n-570\\n928\\n') == '480'\n\n'''\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1') == '?', \"Should be '?'\""
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n((()\n480\n620\n-570\n928\n''') == '?', 'Minimum effort required?'\nassert solution('''\n3 1\n(((\n-928\n''') == '?', 'Minimum effort required?'\nassert solution('''\n1 6\n((\n-123\n''') == '?', 'Minimum effort required?'\nassert solution('''\n2 1\n((\n-12\n''') == '?', 'Minimum effort required?'\nassert solution('''\n2 2\n(((\n-12\n''') == '?', 'Minimum effort required?'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1\") == \"??\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 4\n3 1 3 5\n2 2 4\n3 1 3 6''') == '''1 4\n5 6'''\n\nprint(solution('''13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\nSample Output:\n2 4\n5 6\n7 8 9 10 11 12 13''') == '''2 4\n5 6\n7 8 9 10 11 12 13'''\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'\nassert solution('4\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '1 2 4'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"2 4\"\nassert solution(\"3\") == \"2 4\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 4\"\nassert solution(\"3\") == \"3 1 3 5\"\nassert solution(\"4\") == \"2 2 4\"\nassert solution(\"5\") == \"2 2 4\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"13\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"None\"\nassert solution(\"1\\n2\") == \"1 2\"\nassert solution(\"2\\n2\") == \"None\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'\nassert solution('30\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'\nassert solution('20\\n4 5 4\\n5 5 4\\n4 5 4\\n5 5 4\\n4 5 4\\n') == 'None\\n'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '4 5 6 7 8 9 10 11 12 13'\nassert solution('''\n1\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '1 2 3 4 5 6 7 8 9 10 11 12 13'\n'''"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n12\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n\"\"\") == \"5 6 7 8 9 10 11 12 13\"\nassert solution(\"\"\"\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n\"\"\") == \"5 6 7 8 9 10 11 12 13\"\n\"\"\"\nJay is in the room with number $1$ and is standing in the corner with $2$. The room with number $2$ is also positioned in the corner with $3$ and is positioned in the corner with $4$. The room with number $3$ is positioned in the corner with $5$ and is positioned in the corner with $6$.\n\nIn the room with number $4$, there are $7$ exits and the only room in the corner with $5$ is the room with number $6$.\n\nIn the room with number $6$, there are $8$ exits and the only room in the corner with $5$ is the room with number $7$.\n\nIn the room with number $7$, there are $9$ exits and the only room in the corner with $6$ is the room with number $8$.\n\nIn the room with number $8$, there are $10$ exits and the only room in the corner with $7$ is the room with number $9$.\n\nIn the room with number $9$, there are $11$ exits and the only room in the corner with $8$ is the room with number $10$.\n\nIn the room with number $10$, there are $12$ exits and the only room in the corner with $9$ is the room with number $11$.\n\nIn the room with number $11$, there are $13$ exits and the only room in the corner with $10$ is the room with number $12$.\n\nIn the room with number $12$, there are $14$ exits and the only room in the corner with $11$ is the room with number $13$.\n\nIn the room with number $13$, there are $15$ exits and the only room in the corner with $12$ is the room with number $14$.\n\nIn the room with number $14$, there are $16$ exits and the only room in the corner with $13$ is the room with number $15$.\n\nIn the room with number $15$, there are $17$ exits and the only room in the corner with $14$ is the room with number $16$.\n\nIn the room with number $16$, there are $18$ exits and the only room in the corner with $15$ is the room with number $17$.\n\nIn the room with number $17$, there are $19$ exits and the only room in the corner with $16$ is the room with number $18$.\n\nIn the room with number $18$, there are $20$ exits and the only room in the corner with $17$ is the room with number $19$.\n\nIn the room with number $19$, there are $21$ exits and the only room in the corner with $18$ is the room with number $20$.\n\nIn the room with number $20$, there are $22$ exits and the only room in the corner with $19$ is the room with number $21$.\n\nIn the room with number $21$, there are $23$ exits and the only room in the corner with $20$ is the room with number $22$.\n\nIn the room with number $22$, there are $24$ exits and the only room in the corner with $21$ is the room with number $23$.\n\nIn the room with number $23$, there are $25$ exits and the only room in the corner with $22$ is the room with number $24$.\n\nIn the room with number $24$, there are $26$ exits and the only room in the corner with $23$ is the room with number $25$.\n\nIn the room with number $25$, there are $27$ exits and the only room in the corner with $24$ is the room with number $26$.\n\nIn the room with number $26$, there are $28$ exits and the only room in the corner with $25$ is the room with number $27$.\n\nIn the room with number $27$, there are $29$ exits and the only room in the corner with $26$ is the room with number $28$.\n\nIn the room with number $28$, there are $30$ exits and the only room in the corner with $27$ is the room with number $29$.\n\nIn the room with number $29$, there are $31$ exits and the only room in the corner with $28$ is the room with number $30}.\n\nIn the room with number $30$, there are $32$ exits and the only room in the corner with $29$ is the room with number $31}.\n\nIn the room with number $31$, there are $33$ exits and the only room in the corner with $30$ is the room with number $32}.\n\nIn the room with number $32$, there are $34$ exits and the only room in the corner with $31$ is the room with number $33}.\n\nIn the room with number $33$, there are $35$ exits and the only room in the corner with $32$ is the room with number $34}.\n\nIn the room with number $34$, there are $36$ exits and the only room in the corner with $33$ is the room with number $35}.\n\nIn the room with number $35$, there are $37$ exits and the only room in the corner with $34$ is the room with number $36}.\n\nIn the room with number $36$, there are $38$ exits and the only room in the corner with $35$ is the room with number $37}.\n\nIn the room with number $37$, there are $39$ exits and the only room in the corner with $36$ is the room with number $38}.\n\nIn the room with number $38$, there are $40$ exits and the only room in the corner with $"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"35 39 36 27 29\""
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 4\n1 2\n3 4''') == '''35 39 36 27 29'''\n\nassert solution('''5\n3 4\n1 2\n3 4\n5 2\n4 5''') == '''35 39 36 27 29'''"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '35 39 36 27 29'\nassert solution('''\n5 4\n1 3 1\n1 4 9\n2 3 12\n3 5 4\n4 5 2\nSample Input 2:\n10 4\n1 2 4\n1 3 5\n1 4 9\n2 3 12\n3 5 4\n4 5 2\n5 3 2\nSample Output 2:\n15 14 13 10 3 7 1 4\n''') == '15 14 13 10 3 7 1 4'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('10 10\\n1 2 3\\n1 4 5\\n2 3 4\\n2 5 1\\n3 4 3\\n3 5 4\\n4 5 3\\n5 4 2\\n5 3 1\\n6 4 3\\n6 5 4\\n5 6 1\\n6 6 2\\n7 4 3\\n7 5 4\\n7 6 4\\n7 6 5\\n7 6 6\\n8 4 2\\n8 5 3\\n8 6 2\\n8 7 1\\n8 7 3\\n9 2 1\\n9 3 4\\n9 4 1\\n9 5 2\\n9 5 4\\n9 5 5' == '88 35 39 36 27 29'\nassert solution('10 10\\n1 2 3\\n1 4 5\\n2 3 4\\n2 5 1\\n3 4 3\\n3 5 4\\n4 5 2\\n5 4 1\\n5 3 1\\n6 4 3\\n6 5 4\\n6 5 3\\n7 4 3\\n7 5 4\\n7 6 4\\n7 6 5\\n7 6 6\\n8 4 2\\n8 5 3\\n8 6 2\\n8 7 1\\n8 7 3\\n9 2 1\\n9 3 4\\n9 4 1\\n9 5 2\\n9 5 4\\n9 5 5' == '88 35 39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '35 39 36 27 29'\nassert solution('3 4') == '3 6'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '35 39 36 27 29'\n\n\"\"\""
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\") == \"35 39 36 27 29\"\n\nhttps://www.hackerrank.com/challenges/danger-level/problem"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5 2 3\\n') == '1 2\\n'\nassert solution('4\\n7 8 10\\n') == '0 1248\\n'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '0 672'\nassert solution('2\\n3\\n1') == '0 672'\nassert solution('2\\n3\\n0') == '0 672'\nassert solution('3\\n2\\n1') == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 3') == '0 672'\n\nassert solution('6 1 2') == '0 673'\n\nassert solution('3 3') == '0 765'\n\nassert solution('6 1 3') == '0 765'\n\nassert solution('6 2 2') == '0 762'"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"0 672\"\nassert solution(\"5 5\") == \"0 672\"\nassert solution(\"5 5\") == \"0 672\"\nassert solution(\"10 10\") == \"0 999\"\nassert solution(\"100 5\") == \"1 100\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"0 672\"\nassert solution(\"1 1 4\") == \"0 1 8\"\nassert solution(\"3 3 3\") == \"0 1 3\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 1 1') == '0 672'\nassert solution('3 3 2 1') == '1 10'"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '6 72'\nassert solution('3 3') == '0 672'"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '0 672'\nassert solution('1 2') == '0 2'\nassert solution('2 3') == '1'\n'''\n\nimport math"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 4\n1 1 2\n''') == '0'\nassert solution('''\n2 5\n1 5 1\n''') == '8'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '0 672'\nassert solution('3 2 1') == '1 3'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 'Impossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2.500000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.5000000'\nassert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == 'Impossible'\n\n'''\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000', 'First'\nassert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == 'Impossible', 'Second'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5 100') == '2.500000000000001'\nassert solution('4 5 100') == '2.500000000000001'"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 5 100\\n\"\n    \"0 10 10\\n\"\n    \"1 10 5\\n\"\n    \"1 20 35\\n\"\n    \"2 2 18\\n\"\n    \"2 40 50\"\n    ) == \"2.500000\"\nassert solution(\n    \"5 5 100\\n\"\n    \"0 10 10\\n\"\n    \"1 10 5\\n\"\n    \"1 20 35\\n\"\n    \"2 2 18\\n\"\n    \"2 40 50\"\n    ) == \"Impossible\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == '2.500000'\nassert solution('4 5 10\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == 'Impossible'\nassert solution('4 5 100\\n0 10 10\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == 'Impossible'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == '2.500000'"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\nassert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"Impossible\"\nassert solution(\"6 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 6 15\\n3 2 5\\n3 2 10\\n4 2 15\\n4 3 5\\n4 3 10\\n5 2 5\\n5 2 15\") == \"2.500000\""
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 100') == '2.500000'\nassert solution('1 1 100') == 'Impossible'\nassert solution('4 2 100') == '1.500001'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n-----Input-----\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n\"\"\") == \"2.5\"\n\nassert solution(\"\"\"\n-----Input-----\n1 1 1\n2 4 8\n\"\"\") == \"Impossible\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\nassert solution(\"3\\n5 3 4\\n4 5\") == \"3\"\nassert solution(\"3\\n5 3 4\\n4 5 3\") == \"4\"\nassert solution(\"2\\n2 2\\n2 2\") == \"1\""
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\nassert solution(\"6\\n1 2 4 5 7 9 8\") == \"1\"\nassert solution(\"5\\n9 8 7 6 5 4\") == \"2\"\nassert solution(\"9\\n8 9 8 8 9 8 8 8\") == \"3\""
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 3 4') == '3'\nassert solution('2\\n5 3 4') == '3'\nassert solution('4\\n5 3 4') == '2'\nassert solution('5\\n3 4 5 6') == '4'\nassert solution('5\\n3 5 4') == '4'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n5 3 4') == '3'\nassert solution('2\\n2 2') == '1'\nassert solution('2\\n2 2') == '1'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2 3\") == \"1\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n3 2 4') == '1\\n2'\nassert solution('3\\n1 2 3') == '2'\nassert solution('6\\n1 2 3 4 5') == '1\\n3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n5 3 4\\n') == '3'\nassert solution('4\\n12 3 4\\n') == '4'\nassert solution('5\\n10 10 10 10 10\\n') == '4'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n3 2 4') == '3'\nassert solution('4\\n2 1 4 3') == '4'\nassert solution('5\\n3 1 4 2') == '5'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '2'\nassert solution('2 1 1') == '3'\nassert solution('2 2 1') == '2'\nassert solution('2 2 2') == '2'\nassert solution('3 3 3') == '3'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\nprint(solution(input()))\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1 1\n''') == '2'\nassert solution('''\n5 5 3\n''') == '9'\nassert solution('''\n10 11 15\n''') == '73993750'\nassert solution('''\n23 20 18\n''') == '14'"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == '2'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '2'\nassert solution('2 1 1') == '1'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '2'\nassert solution('3 2 2') == '1'\nassert solution('9 9 9') == '0'\nassert solution('10 10 10') == '0'\n\nn, x, y = stdin.split()\nn, x, y = int(n), int(x), int(y)\nprint((pow(x, n-2, n) * pow(y, n-2, n)) % (10**9 + 7))\n\n[1 2 1]\n[3 2 2]\n[9 9 9]\n[10 10 10]\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"5 7 7\") == \"5\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 5\n''') == '7'''\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 5\n''') == '7'\nassert solution('''1\n1\n1\n''') == '2'\n'''\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('2 3 5') == '5'"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n1 2\"\"\") == \"0\", \"Part 1\"\nassert solution(\"\"\"8\n1 2 3 4 5 6 7 8\n\"\"\") == \"8\", \"Part 2\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('2 2 4 5') == '6'"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n2 1') == '1'\nassert solution('3\\n2 1 1') == '3'\nassert solution('2\\n1 1 1') == '3'\nassert solution('3\\n1 1 2') == '2'\nassert solution('3\\n1 2 2') == '1'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 3 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"10\"\nassert solution(\"\"\"\n9\n2 4 5 6 7 8 1 3\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 3 5\n''') == '7'\nassert solution('''\n4\n4 1 1 1\n''') == '2'\n'''\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 5\nSample Input:\n2\n3 2\nSample Output:\n2\n''') == '2', '3 is a subset of {2,3}'\n\nassert solution('''3\n1 4 3\nSample Input:\n2\n2 1\nSample Output:\n3\n''') == '3', '{2,1} is a subset of {2,3}'\n\nassert solution('''3\n1 2 3\nSample Input:\n1\n1\nSample Output:\n1\n''') == '1', '1 is a subset of {1}'\n\nassert solution('''4\n1 2 3 4\nSample Input:\n1\n5\nSample Output:\n1\n''') == '1', '1 is a subset of {1}'\n\nassert solution('''3\n1 2 3\nSample Input:\n1\n1\nSample Output:\n3\n''') == '3', '{1,2,3} is a subset of {1}'"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 5') == '7'\nassert solution('4\\n1 3 5') == '7'\n'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"Impossible.\"\nassert solution(\"1\") == \"john jets\\n\"\nassert solution(\"2\") == \"john jets\\n\"\nassert solution(\"4\") == \"mary jetsons\\n\"\nassert solution(\"5\") == \"john jetsons\\n\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"john jets\\n\"\nassert solution(\"\"\"\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rocks\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"john jets\\n\"\nassert solution(\"\"\"\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rocks\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"ruth rockets\\n\"\nassert solution(\"\"\"\n3\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2 jets\nruth platypus 1\n\"\"\") == \"john\\n\"\nassert solution(\"\"\"\n1\nfred dinosaur 2\njohn rhinocerous 2\nmary rhinocerous 2\nruth platypus 1\n\"\"\") == \"ruth\\n\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\njohn rhinocerous 2 jets\\nmary rhinocerous 2 jets\\nruth platypus 1 rockets') == 'john jets'\nassert solution('2\\n4\\njohn rhinocerous 2 jets\\nmary rhinocerous 2 jets\\nruth platypus 1 rockets\\nruth platypus 1 rockets') == 'john jets'\nassert solution('3\\n4\\njohn rhinocerous 2 jets\\nmary rhinocerous 2 jets\\nruth platypus 1 rockets') == 'john jets'\nassert solution('4\\n3\\njohn rhinocerous 2 jets\\nmary rhinocerous 2 jets\\nruth platypus 1 rockets') == 'john jets'\nassert solution('5\\n3\\njohn rhinocerous 2 jets\\nmary rhinocerous 2 jets\\nruth platypus 1 rockets') == 'john jets'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"ruth jetsons\"\nassert solution(\"\"\"\n3\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rocks\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"john jets\"\nassert solution(\"\"\"\n1\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rocks\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"john rockets\"\nassert solution(\"\"\"\n2\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rocks\nruth platypus 1 rockets\n\"\"\") == \"ruth jetsons\"\nassert solution(\"\"\"\n2\njohn rhinocerous 2 jets rocks\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"mary jets\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4\njohn rhinocerous 2 jets\nruth platypus 1 rockets\nmary rhinocerous 2 jets\nfred dinosaur 2 jets\n\"\"\") == \"\"\"\njohn jets\nruth rockets\n\"\"\".strip()\nassert solution(\n\"\"\"\n4\njohn rhinocerous 2 jets\nruth platypus 1 rockets\nmary rhinocerous 2 jets\nfred dinosaur 2 jets\n\"\"\") == \"\"\"\njohn jets\nruth rockets\n\"\"\".strip()\nassert solution(\n\"\"\"\n2\njohn rhinocerous 2\nruth platypus 1\n\"\"\") == \"\"\"\njohn jets\nruth rockets\n\"\"\".strip()\nassert solution(\n\"\"\"\n2\njohn rhinocerous 2\nruth platypus 1\n\"\"\") == \"\"\"\njohn jets\nruth rockets\n\"\"\".strip()\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\"\"\") == \"\"\"fred jetsons\njohn jets\nruth rockets\"\"\"\nassert solution(\"\"\"3\n2\njosh play sports 1 dogs\njosh play sports 2 dogs\njosh play sports 1 dogs\njosh play sports 2 dogs\njosh play sports 2 dogs\njosh play sports 3 dogs\njosh play sports 1 dogs\"\"\") == \"\"\"josh play sports 3 dogs\"\"\"\nassert solution(\"\"\"1\n4\nruth platypus 2 rockets\"\"\") == \"\"\"ruth rockets\"\"\"\nassert solution(\"\"\"1\n4\nruth platypus 1 rockets\"\"\") == \"\"\"ruth rockets\"\"\"\nassert solution(\"\"\"2\n4\nruth platypus 2 rockets\"\"\") == \"\"\"ruth rockets\"\"\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == 'john jets\\nruth rockets\\n'\nassert solution('''\n5\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfrank kilnik 4 atoms\n''') == 'frank kilnik\\n'\nassert solution('''\n6\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\nfrank kilnik 4 atoms\nblake walter 3 tweets\n''') == 'frank kilnik\\nblake walter\\n'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Impossible.\"\n\n\"\"\"\nimport math"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\nfred jetsons\njohn jets\nruth rockets\n'''\n\nassert solution('''3\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\nfred jetsons\njohn jets\nruth rockets\n'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Impossible'\nassert solution('2') == 'Impossible'\nassert solution('3') == 'Impossible'\nassert solution('4') == 'john jets'\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n4 3\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n2\n4 3\n-10 9\n-2 3\n''') == '2 1 1'\nassert solution('''\n2\n5 3\n-10 9\n-2 3\n''') == '3 2 1'\n'''\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n4 3') == '1 2 1'\nassert solution('2\\n5 3') == '0 0 0'"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4 3\n-10 9\n-2 3\n''') == '1 2 1'\n'''"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2 3\\n-10 9\\n-2 3') == '1 2 1'\nassert solution('3\\n4 3\\n-10 9\\n-2 3') == '1 2 1'\n\"\"\""
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 4\\n-10 9\\n-2 3\") == \"1 2 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n1\n0\n\"\"\") == \"1 0 1\"\n\nassert solution(\"\"\"\n3\n3\n-10 9\n-2 3\n\"\"\") == \"2 1 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 2 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n4 3\\n-10 9\\n-2 3\\n') == '1 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4 3\\n-10 9\\n-2 3') == '1 2 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 3\\n-10 9\\n-2 3\\n\") == \"1 2 1\""
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 7\n3 2 3\n5 1 4\n6 10 10''') == '2.125'\nassert solution('''10\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n8 3 6\n7 5 4\n9 1 2\n10 2 3\n11 4 8\n12 7 3\n13 5 5\n14 4 6\n15 2 9\n16 2 7\n17 3 4\n18 4 3\n19 7 5\n20 4 5''') == '2.175'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 1 7\n3 2 3\n5 1 4\n6 10 10''') == '2.125'\n\n'''\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2.125'\nassert solution('10') == '2.125'\nassert solution('0') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2.125'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\n\"\"\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n5\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '1.9166666666666667'\nassert solution('''\n10\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\n'''\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == \"2.125\"\nassert solution(\"1 2 3\") == \"2.125\"\nassert solution(\"3 2 3\") == \"2.125\"\nassert solution(\"5 1 4\") == \"2.125\"\nassert solution(\"6 10 10\") == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\nassert solution('2\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '1.125'\nassert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '0.0'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '*.*') =='main.c,a.out,readme'\nassert solution(\n    '*.*.c') =='main.c'\nassert solution(\n    '*.*.out') =='main.out'\nassert solution(\n    '*.c') =='main.c'\nassert solution(\n    '*.c.') =='main.c'\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('*') == ['main.c']\nassert solution('*.*') == ['main.c','readme', 'yacc']\nassert solution('**.c') == ['main.c','readme', 'yacc']\nassert solution('**.*') == ['main.c','readme', 'yacc']\nassert solution('*.[cC]') == ['main.c']\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''*.*''') == ['main.c', 'a.out', 'defs.c','main.h', 'yacc']\n''')\n\nprint('\\033[94m\\033[1m\\033[92m#\\033[0m#\\033[94m\\033[1m\\033[92m#\\033[0m#\\033[94m\\033[1m\\033[92m#\\033[0m#\\033[94m\\033[1m\\033[92m#\\033[0m#\\033[94m\\033[1m\\033[92m#\\033[0m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m\\033[94m#')\nprint('\\033[94m\\033[1m\\033[94m#\\033[1m\\033[94m#\\033[1m"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"*.*\") == [\"main.c\", \"a.out\", \"defs.c\", \"yacc\"]\nassert solution(\"*.c\") == [\"main.c\", \"defs.c\", \"yacc\"]\nassert solution(\"a.c\") == [\"a.c\"]\n\"\"\""
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('*.c') == ['main.c']\n\n\"\"\"\n\nimport re\n\nregex = re.compile(\"(?P<pat>.*)\")\npat = input()\n\nN = int(input())\nfiles = []\nfor i in range(N):\n    files.append(input())\n\nfor file in files:\n    m = regex.search(file)\n    if m:\n        print(m.group(\"pat\"))"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('*.c') == ['main.c','readme', 'yacc']\nassert solution('*.c') == ['main.c','readme', 'yacc']\n\"\"\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('*') == ['main.c', 'a.out', 'yacc']\nassert solution('**.c') == ['main.c', 'a.out','readme']\nassert solution('*.c') == ['main.c','readme']\nassert solution('*.*') == ['main.c', 'a.out','readme']\n\"\"\"\nfrom typing import List\n\nfrom unittest import TestCase\n\nPATTERN = '*.*'\n\n\nclass Solution:\n    def solution(self, filename: str) -> List[str]:\n        return list(filter(lambda x: x.endswith(PATTERN), filename.split('\\n')))\n\n\nclass TestSolution(TestCase):\n    def test_sample_1(self):\n        self.assertEqual(\n            ['main.c', 'a.out','readme'],\n            Solution().solution('*')\n        )\n\n    def test_sample_2(self):\n        self."
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('*.*') == ['main.c', 'a.out']\nassert solution('*') == []\nassert solution('main.c') == ['main.c']\nassert solution('*.c') == ['main.c']\nassert solution('a.out') == ['a.out']\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"a.out\") == \"a.out\"\nassert solution(\"main.c\") == \"main.c\"\nassert solution(\"main.py\") == \"main.py\"\nassert solution(\"hello.txt\") == \"hello.txt\"\nassert solution(\"ab.c\") == \"ab.c\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''*.*''') == ['main.c', 'a.out', 'def']\n\nassert solution('''*''') == []\n\nassert solution('''*.**.c''') == ['a.out','main.c']\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0.500000\"\nassert solution(\"3 3\") == \"0.010000\"\nassert solution(\"3 4\") == \"0.003300\"\nassert solution(\"9 9\") == \"0.000000\"\nassert solution(\"10 10\") == \"0.000000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0.1234') == '0.1234', \"Your function didn't work\"\nassert solution('1.2345') == '1.2345', \"Your function didn't work\"\nassert solution('12.34') == '12.34', \"Your function didn't work\"\nassert solution('1') == '1', \"Your function didn't work\"\nassert solution('1.000001') == '1', \"Your function didn't work\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n0.500000\") == \"0.500000\"\nassert solution(\"1 2\\n0.500001\") == \"0.500001\"\nassert solution(\"1 2\\n0.600001\") == \"0.500001\"\nassert solution(\"1 2\\n0.6000001\") == \"0.4999999\"\nassert solution(\"1 2\\n0.600000001\") == \"0.50000000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0.500000\n0."
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\n0.500001\\n') == '0.500000'\nassert solution('2 2\\n0.050000\\n') == '0.050000'\nassert solution('3 3\\n0.005000\\n') == '0.005000'\nassert solution('4 4\\n0.0200000\\n') == '0.0200000'\nassert solution('5 5\\n0.007500\\n') == '0.007500'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0.500000'\n\n----Input----\n4 3\n0.500000\n0.500000\n0.500000\n0.500000\n----Output----\n0.500000\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1\\n0.500000\\n0.500000\\n0.500000') == '0.500000'\nassert solution('2 1\\n0.8\\n0.8\\n') == '0.8'\nassert solution('4 1\\n0.000\\n0.000\\n0.000\\n') == '0.000'\nassert solution('6 1\\n0.0\\n0.0\\n0.0\\n0.0\\n0.0\\n0.0\\n') == '0.0'\nassert solution('6 1\\n1.0\\n0.1\\n0.0\\n0.1\\n0.1\\n0.1\\n') == '1.0'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('0.500000 1') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('1 1') == '0.500000'\nassert solution('1 1') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0.500000'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"1 98.9\") == \"98.9\"\n\n\"\"\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('20 21.2') == '-11.0'\nassert solution('20 42.3') == '-0.8'\nassert solution('20 1.8') == '-0.6'\nassert solution('20 21.1') == '-0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0.99') == '0.0'\nassert solution('1 0.99') == '-1.0'\nassert solution('-1 0.99') == '0.0'\nassert solution('0 1.99') == '0.0'"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0.5') == '0.0'\n\nInput:\n45.8\n20.8\n\nOutput:\n3.22\n\nInput:\n25.6\n50.5\n\nOutput:\n3.08\n\nInput:\n35.7\n33.5\n\nOutput:\n3.96\n\nInput:\n25.6\n15.5\n\nOutput:\n3.05\n\nInput:\n20.0\n5.0\n\nOutput:\n0.5\n\nInput:\n20.0\n25.0\n\nOutput:\n0.5\n\nInput:\n20.0\n30.0\n\nOutput:\n0.0\n\nInput:\n10.2\n10.2\n\nOutput:\n0.2\n'''"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 50.01\") == \"0.00\""
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('0 6.2') == '0.2'"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('30 50.5') == '3.5'\n'''"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0.0000\"\n\n---Input---\n1 2\n\n---Output---\n1.00\n\n\"\"\"\nimport sys\nimport math\nfrom decimal import Decimal\n\nx = float(input())\np = float(input())\n\nprint(\"%.3f\" % math.ceil(x * 100 * (p / 100)) / 100)\n\n\"\"\"\nx = Decimal('0.1')\np = Decimal('0.1')\nprint(x * 100 * p / 100)\n\"\"\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\n\n\"\"\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('0 2.5') == '0.0'\nassert solution('5 3.7') == '1.8'\nassert solution('5 1.9') == '1.9'\nassert solution('2 9.0') == '0.9'\n\n\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n2 3\n3 1\n4 1''') == '''4 1\n2 1\n3 2\n1 3'''\nassert solution('''4\n1 2\n2 3\n3 1\n4 1\nSample Input:\n6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\nSample Output:\n4 1\n2 1\n3 2\n4 3\n5 4\n6 5\n7 6\n1 3\n2 4\n3 5\n4 6\n5 7''') == '''4 1\n2 1\n3 2\n4 3\n5 4\n6 5\n7 6\n1 3\n2 4\n3 5\n4 6\n5 7'''\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2\n2 3\n3 1\n4 1\n''') == '4 1 2 1 3'\nassert solution('''5\n1 2\n1 3\n3 4\n4 3\n2 3\n''') == '5 1 1 4 2 3'\nassert solution('''6\n1 2\n3 4\n5 3\n5 4\n1 5\n1 6\n2 4\n2 6\n''') == '6 1 3 5 4 1 2 4'\nassert solution('''1\n1\n''') == '1'\nassert solution('''3\n1 2\n2 3\n''') == '3 1 2 3'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2\n2 3\n3 1\n4 1''') == '1 2\\n2 3\\n3 1\\n4 1'''\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 3\") == \"2 3\"\nassert solution(\"3 1\") == \"3 1\"\nassert solution(\"4 1\") == \"4 1\"\n\"\"\""
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3\\n'\nassert solution('10\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n') == '6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n'\nassert solution('1000\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n') == '12 1\\n13 1\\n14 1\\n15 1\\n11 1\\n'\nassert solution('10000\\n1 2\\n2 3\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n') == '9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3\\n'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2\n2 3\n3 1\n4 1''') == '4 1 2 1 3'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3'"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3 4\n1 2\n4 1\n''') == '3 1\\n2 1\\n4 1\\n1 4'\nassert solution('''\n4\n1 2\n2 3\n3 1\n4 1\n''') == '4 1\\n3 2\\n2 1\\n1 3'\nassert solution('''\n3\n1 3\n2 1\n''') == '3 1\\n2 1'\nassert solution('''\n3\n1 4\n2 3\n''') == '3 2\\n1 3\\n1 4'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 1 5 2 6\"\n) == \"3\"\n\nassert solution(\n    \"4 2 4 1 2 5\"\n) == \"2\"\n\nassert solution(\n    \"4 3 2 1 2 5\"\n) == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n2 1 5 3 5\\n1 2 5 3 5') == '4'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n') == '2'\nassert solution('4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '0'\nassert solution('6 5\\n1 1 2 3 3 5\\n1 2 4 5 5 5\\n1 3 6 5 5 5\\n1 4 6 5 5 5\\n1 5 6 5 5 5\\n1 6 6 5 5 5\\n') == '2'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(in1) == \"2\"\nassert solution(in2) == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6') == '1'\nassert solution('2 1 2 3 5') == '2'\nassert solution('2 1 2 4 1 3') == '1'"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n) == \"1\"\nassert solution(\n    \"4 5\\n\"\n    \"3 1 4 3 2\\n\"\n    \"1 3 2 3\\n\"\n) == \"0\"\nassert solution(\n    \"8 5\\n\"\n    \"3 1 5 3 3 2 1 2\\n\"\n    \"1 3 2 3\\n\"\n) == \"2\"\nassert solution(\n    \"100 50\\n\"\n    \"10 1 1 2 1 1 1 2 1 1\\n\"\n    \"1 2 2 1\\n\"\n) == \"6\"\nassert solution(\n    \"4 5\\n\"\n    \"1 2 3 2\\n\"\n    \"3 5 6 3\\n\"\n) == \"2\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5') == '2'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5') == '0'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5') == '0'"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\nassert solution(\"6 5\\n2 1 5 3 3\\n1 2 5 3 5\") == \"0\"\nassert solution(\"6 5\\n1 2 5 3 3\\n1 2 5 3 5\") == \"0\"\nassert solution(\"6 5\\n4 2 5 3 3\\n1 2 5 3 5\") == \"0\"\nassert solution(\"6 5\\n1 2 5 3 3\\n1 2 5 3 5\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5') == '1'\nassert solution('5 1') == '0'\nassert solution('1 2') == '1'\n\"\"\"\nimport heapq\n\nm, k = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\na.sort()\nb.sort(reverse=True)\n\ndp = [[0] * (m + 1) for i in range(k + 1)]\nfor j in range(k + 1):\n    for i in range(m + 1):\n        if j == 0:\n            dp[j][i] = 0\n        elif i == 0:\n            dp[j][i] = 10 ** 5\n        elif a[i - 1] <= j:\n            dp[j][i] = min(dp[j][i], 1 + dp[j - a[i - 1]][i - 1])\n        elif b[i - 1] <= j:\n            dp[j][i] = min(dp[j][i], 1 + dp[j][i - 1])\n\nprint(dp[k][m])\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n1 2 5 3 5') == '1'\nassert solution('3 5\\n1 2 3 5') == '2'\nassert solution('10 5\\n1 2 3 5') == '1'"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\nassert solution(\"1 1 10\\n0 1 1 2 6\") == \"impossible\"\nassert solution(\"2 1 2\\n0 1 2 3 4\") == \"impossible\"\nassert solution(\"2 2\\n0 1 2 3 4\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('3 1 10\\n0 1 1 2 6') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"3\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 10') == '3'\nassert solution('3 1 2 3 1') == 'impossible'\nassert solution('2 1 3 3 1') == '4'\nassert solution('4 1 5 3 2') == 'impossible'\nassert solution('4 1 3 3 2') == '4'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 10\") == \"3\"\nassert solution(\"2 2 1\") == \"impossible\"\nassert solution(\"2 3 1\") == \"impossible\"\nassert solution(\"2 3 3\") == \"impossible\"\n\nstdin = \"\"\"\n4 2 10\n0 1 1 2 5\n0 2 3 5 4\n1 2 2 5 5\n1 3 4 5 3\n\"\"\"\n\nassert solution(stdin) == \"2\""
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 10\\n0 1 1 2 6\") == \"3\"\nassert solution(\"1 1 10\\n0 1 1 2 0\\n\") == \"impossible\"\nassert solution(\"2 1 10\\n1 1 1 2 6\") == \"3\"\nassert solution(\"2 1 10\\n0 1 1 2 0\\n\") == \"impossible\"\nassert solution(\"1 1 10\\n1 1 1 2 6\") == \"impossible\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 10') == '4'\nassert solution('1 1 2 3 4') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1 10\n0 1 1 2 6\n''') == '3'\n\nassert solution('''\n2 1 10\n1 1 4 7\n''') == 'impossible'\n\nassert solution('''\n2 1 10\n0 1 1 2 6\n''') == '5'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 10\n0 1 1 2 6\n''') == '3'\n\nassert solution('''\n2 1 10\n0 1 2 3 4\n''') == 'impossible'\n\nassert solution('''\n2 3 10\n0 1 1 1 1 1 1 2 2 2\n''') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 10\\n0 1 1 2 6') == '3'\nassert solution('1\\n1 1\\n1 2\\n0\\n1 2\\n1 3\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2 3\\n1 2\\n0\\n1 1\\n2"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2'\nassert solution('3 1000\\n800 1234\\n2 800\\n1 800\\n1 2\\n1 1\\n') == '2\\n1 2'"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 10\n1 1\n''') == '1 2'\n\nassert solution('''\n10 10\n9 1\n1 9\n''') == '10 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1\n1 100\n99 1\n1 99\n''') == '1 2'\n\nassert solution('''3 1\n1 99\n1 99\n1 100\n''') == '1 2'\n\nassert solution('''4 1\n99 1\n1 100\n99 1\n1 100\n''') == '1 2'\n\nassert solution('''4 1\n99 1\n1 99\n1 100\n99 1\n1 100\n''') == '1 2'\n\nassert solution('''4 1\n99 1\n1 99\n1 100\n99 1\n1 100\n''') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 100\n99 1\n1 99\n1 8\n''') == '2 1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2'\nassert solution('2\\n99\\n1\\n') == '2'\nassert solution('2\\n99\\n1\\n') == '2'\nassert solution('4\\n2\\n2\\n3\\n2\\n3\\n4\\n3\\n') == '4'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n2 2') == '2'\nassert solution('10 10\\n1 1\\n9 9') == '1 2'\nassert solution('100 100\\n1 1\\n99 99') == '2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '1 2'\nassert solution('10 10\\n10 10\\n100 10\\n10 10\\n10 10\\n100 10\\n10 10\\n100 10\\n10 10\\n10 10\\n100 10\\n10 10\\n10 10\\n100 10\\n10 10\\n10 10\\n100 10\\n10 10\\n10 10\\n100 10') == '2 1 3'"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 100\n99 1\n1 99\n''') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n1 1\n''') == '1 1\nassert solution('''\n1 500\n99 1\n1 99\n''') == '1 1\nassert solution('''\n2 1\n1 99\n2 99\n''') == '2 1\nassert solution('''\n2 100\n99 1\n1 99\n''') == '2 1\nassert solution('''\n2 1000\n99 1\n1 99\n''') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 100\n99 1\n1 99\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n100 5\n5 5\n\"\"\") == \"\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\n\nstdin = \"\"\"\nHT\nHT\n0.99\n\"\"\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Gon\\nT\\n0.5') == '0.5', 'Sample Test 1'\nassert solution('Gon\\nT\\n0.2') == '0.25', 'Sample Test 2'\nassert solution('T\\nGon\\n0.4') == '0.6', 'Sample Test 3'\nassert solution('T\\nT\\n0.7') == '0.8', 'Sample Test 4'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('H') == 'H'\nassert solution('T') == 'T'\nassert solution('0.5') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0.5') == '0.5'\n\nassert solution('H') == '0.5'\n\nassert solution('T') == '0.5'\n\nassert solution('H') == '0.5'\n\nassert solution('T') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nH\nT\n0.5\n''') == '0.5'\n\nassert solution('''\nH\nT\n0.5\n''') == '0.5'\n\nassert solution('''\nH\nH\n0.5\n''') == '0.5'\n\nassert solution('''\nT\nT\n0.5\n''') == '0.5'\n\nassert solution('''\nH\nH\n0.5\n''') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"H\nT\n0.5\"\"\") == \"0.5\"\nassert abs(solution(\"\"\"H\nT\n0.1\"\"\") - 0.5) < 10**-6\nassert solution(\"\"\"H\nT\n0.0\"\"\") == 0.5\nassert solution(\"\"\"H\nT\n0.000001\"\"\") == 0.5\nassert solution(\"\"\"H\nT\n0.1000000000000001\"\"\") == 0.5\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5', \"Error\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"H\") == \"H\"\nassert solution(\"HTH\") == \"T\"\nassert solution(\"HTHT\") == \"H\"\nassert solution(\"HHTH\") == \"T\"\nassert solution(\"THH\") == \"H\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '8'\nassert solution('12') == '1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"8 1 3 5 7 9 11 13 15\"\nassert solution(\"4\") == \"0 1 2 3 4 5 6 7 8\"\nassert solution(\"16\") == \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999'''\nn = int(input())\na = []\nfor i in range(n):\n    a.append(list(map(int, input().split())))\na.sort(key=lambda x: x[0])\na.sort(key=lambda x: x[1])\na.sort(key=lambda x: x[2])\na.sort(key=lambda x: x[3])\na.sort(key=lambda x: x[4])\na.sort(key=lambda x: x[5])\na.sort(key=lambda x: x"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"8 1 3 5 7 9 11 13 15\"\nprint(solution(input()))\n\n----GITHUB PROBLEM----\n---SOLUTION---\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n''') == '8 1 3 5 7 9 11 13 15'\nassert solution('''\n4\n''') == '2 4 6 8'\nassert solution('''\n5\n''') == '4 5 7 8 9 10 13 14'\nassert solution('''\n10\n''') == '9 11 12 13 14 15 16 17 18 19 20 21 22 23 24'\nassert solution('''\n12\n''') == '13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199\n''') == '86 78 77 78 75 74 73 69 68 67 66 65 65 64 63 62 61 61 60 59 58 57 56 55 54 52 51 51 50 49 48 47 47 46 45 44 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43 43"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"2\") == \"1 3\"\nassert solution(\"1\") == \"1\"\n'''\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '1 3 5 7 9 11 13 15'\nassert solution('3') == '1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '8\\n1 3 5 7 9 11 13 15\\n'\nassert solution('6\\n') == '8\\n1 3 5 7 9 11 13\\n'\nassert solution('100\\n') == '8\\n1 3 5 7 9 11 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311331 332333 3343353363373383393434035363738394041\\n' == solution('''100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([6]) == '8 1 3 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3\n1 2\n2 3\n2 4\n1 3\n3 4\n1 4\n4\n1 2\n2 3\n1 3\n''') == '1 3 5 7 9 11 13 15'\n\"\"\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1 3 5 7 9 11 13 15'\nassert solution('6') == '1 3 5 7 9 11 13 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311 311 312 313 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047 2048 2049 2050 2051 2052 2053 2054 2055 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080 2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 2094 2095 2096 2097 2100 2101 0202 0203 0204 0205 0206 0207 0208 0209 0210 0211 0212 0213 0214 0215 0216 0217 0218 0219 0220 0221 0222 0223 0224 0225 0226 0227 0228 0229 0230 0231 0232 0233 0234 0235 0236 0237 0238 0239 0240 0241 0242 0243 0244 0245 0246 0247 0248 0249 0250 0251 0252 0253 0254 0255 0256 0257 0258 0259 0260 0261 0262 0263 0264 0265 0266 0267 0268 0269 0270 0271 0272 0273 0274 0275 0276 0277 0278 0279 0280 0281 0282 0283 0284 0285 0286 0287 0288 0289 0290 0291 0292 0293 0294 0295 0296 0297 0298 0299 3000 3001 3002 3003 3004 3005 3006 3007 3008 3009 3010 3011 3012 3013 3014 3015 3016 3017 3018 3019 3020 3021 3022 3023 3024 3025 3026 3027 3028 3029 3030 3031 3032 3033 3034 3035 3036 3037 3038 3039 3040 3041 3042 3043 3044 3045 3046 3047 3048 3049 3050 3051 3052 3053 3054 3055 3056 3057 3058 3059 3060 3061 3062 3063 3064 3065 3066 3067 3068 3069 3070 3071 3072 3073 3074 3075 3076 3077 3078 3079 3080 3081 3082 3083 3084 3085 3086 3087 3088 3089 3090 3091 3092 3093 3094 3095 3096 3097 3098 3099 3100 3101 3102 3103 3104 3105 3106 3107 3108 3109 3110 3111 3112 3113 3114 3115 3116 3117 3118 31919 31920 31921 31922 31923 31924 31925 31926 31927 31928 31929 31930 31931 31932 31933 31934 31935 31936 31937 31938 31939 31940 31941 31942 31943 31944 31945 31946 31947 31948 31949 31950 3951 31952 31953 31954 31955 31956 31957 31958 31959 31960 3961 3962 3963 31964 31965 31966 31967 31968 31969 31970 31971 31972 31973 31974 31975 31976 31977 31978 31979 31980 31991 31992 31993 31994 31995 31996 31997 31998 31999 32000 32001 32002 32003 32004 32005 32006 32007 32008 32009 32010 32011 32012 32013 32014 32015 32016 32017 32018 32019 31020 31021 31022 31023 31024 31025 31026 31027 31028 31029 31030 31031 31032 31033 31034 31035 31036 31037 31038 31039 31040 31041 31042 31043 31044 31045 31046 31047 31048 31049 31050 31051 31052 31053 31054 31055 31056 31057 31058 31059 31060 31061 31062 31063 31064 31065 31066 31067 31068 31069 31070 31071 31072 31073 31074 31075 31076 31077 31078 31079 31080 31081 31082 31083 31084 31085 31086 31087 31088 31089 31090 31091 31092 31093 31094 31095 31096 31097 31098 31099 31104 31105 31106 31107 31108 31109 31111 31111 1121 31122 3113 3114 3115 3116 3117 3118 31919 31920 31921 31922 31923 31924 31925 31926 31927 31928 31929 31930 31931 31932 31933 31934 31935 31936 31937 31938 31939 31940 31941 31942 31943 31944 31945 31946 31947 31948 31949 31950 3951 31952 31953 31954 31955 31956 31957 31958 31959 31960 3961 3962 3963 31964 31965 31966 31967 31968 31969 31970 31971 31972 31973 31974 31975 31976 31977 31978 31979 31980 31991 31992 31993 31994 31995 31996 31997 31998 31999 32000 32001 32002 32003 32004 32005 32006 32007 32008 32009 32010 32011 32012 32013 32014 32015 32016 32017 32018 32019 31020 31021 31022 31023 31024 31025 31026 31027 31028 31029 31030 31031 31032 31033 31034 31035 31036 31037 31038 31039 31040 31041 31042 31043 31044 31045 31046 31047 31048 31049 31050 31051 31052 31053 31054 31055 31056 31057 31058 31059 31060 31061 31062 31063 31064 31065 31066 31067 31068 31069 31070 31071 31072 31073 31074 31075 31076 31077 31078 31079 31080 31081 31082 31083 31084 31085 31086 31087 31088 31089 31090 31091 31092 31093 31094"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '3\\n1\\n0\\n'''"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n\"\"\") == \"\"\"3\n1\n0\n\"\"\""
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3'\nassert solution('10\\n10 10 10 10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n') == '1'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 5 7\") == \"3\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 5\") == \"1\"\nassert solution(\"1 5\") == \"4\""
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '3'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 5 7') == '3'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 5 7') == '3'\nassert solution('4\\n2 3 5 7') == '0'\nassert solution('4\\n1 3 5 7') == '3'\nassert solution('5\\n1 3 5 7') == '1'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n5\\n4\\n3\\n2\\n1\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1') == '9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1'\nassert solution('4\\n1 3 5 7\\n3\\n2\\n2 5\\n1 5\\n0\\n3\\n5\\n4\\n3\\n2\\n1') == '1\\n1\\n0'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n\"\"\") == \"3\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '0'\nassert solution('2\\n3 4\\n5 6\\n1 3\\n3\\n2 2\\n2 5\\n1 5\\n') == '3'\nassert solution('10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n5\\n3\\n2 4\\n6\\n8\\n') == '2'\nassert solution('50\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n5\\n3\\n2 4\\n6\\n8\\n') == '1'\nassert solution('100\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n5\\n3\\n2 4\\n6\\n8\\n') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '0'\nassert solution('3 1') == '1'"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0'\nassert solution('2 1\\n3 4 0 0') == '1'\n\n'''\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 1 -2 0') == \"0\"\nassert solution('4 5\\n1 1 5 2\\n5 5 -1 -1') == \"3\"\nassert solution('6 6\\n3 -2 4 -2\\n1 -1 1 -1\\n-1 1 -2 -2') == \"4\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 1\n1 1 -2 0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2 4\n3 -1 4 0\n1 2 0 2\n-1 1 0 1\n1 -1 2 -2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10 10\n-10 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\n-1 -1 -1 -1 -1 -1 -1 -1 -"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"1 1 -2 0\") == \"0\"\nassert solution(\"3 1 2 1 2 -1\") == \"3\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('3 1') == '2'\nassert solution('3 2') == '0'\nassert solution('4 1') == '3'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0'\nassert solution('1 2\\n1 0 -1 0') == '2'\nassert solution('1 2\\n1 -1 -1 0') == '1'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\nassert solution('1 1 -2 0') == '0'\nassert solution('2 1\\n1 1 -2 0') == '0'\nassert solution('2 1\\n1 1 -2 0\\n1 1 -2 0') == '0'\nassert solution('2 1\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '0'"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\"\nassert solution(\"2 2\\n1 2 -1 0\\n2 2 -2 0\\n1 2 -2 0\\n2 2 -1 0\") == \"2\""
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '194'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '38'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '194'\nassert solution('10') == '2019 10 25'\nassert solution('5') == '2019 10 25 2020 10 30'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n20190\\n10 21\\n2019 10 30\") == \"194\"\nassert solution(\"3\\n201910\\n10 20\\n2019 10 30\") == \"201910 25\"\nassert solution(\"3\\n201910\\n10 20\\n2019 10 30\") == \"201910 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '194'\nassert solution('2') == '194'\nassert solution('1') == '194'\nassert solution('10') == '194'\nassert solution('10') == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n3\n12 14\n10 20\n30 29\n12\n''') == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '194'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '194'\nassert solution('5') == '2019 10 25'"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n4 5 1\n3 4 4\n1 1 4\n2 2 2\n2 4 3\n''') == '194'\nassert solution('''\n2\n6 6 2\n10 10 10\n10 10 2\n''') == '194'\nassert solution('''\n10\n6 6 5\n6 6 7\n6 6 3\n1 1 4\n2 2 3\n3 3 4\n3 4 5\n4 4 7\n4 5 6\n''') == '133'\nassert solution('''\n2\n4 5 1\n3 4 4\n1 1 4\n2 2 2\n2 4 3\n''') == '194'\nassert solution('''\n5\n5 5 1\n4 4 4\n1 1 4\n3 3 4\n2 2 2\n''') == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '10'\nassert solution('2') == '10'\nassert solution('1') == '10'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"5 10 10 5 10 0\") == \"5 12.5\"\nassert solution(\"6 10 10 10 10 0\") == \"6 12.5\"\n\"\"\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == 'negative-infinity -5'"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\nSample Input:\n0 0 0 0 0\n1 1 0 0\n-1 0 0 0\n3 3 0 0\n-3 3 0 0\n''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity -5\\nnegative-infinity"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 10 10 10 0\\n5 10 10 5 10 0\\n6 10 10 10 10 0\\n') == '5 12.5'\nassert solution('7 3 6 1 1 1 0\\n6 6 1 1 1 1 0\\n7 5 1 1 1 0\\n6 6 1 1 1 0\\n7 7 1 1 1 0\\n6 7 1 1 1 0\\n7 5 1 1 1 0\\n6 6 1 1 1 0') == '6 12.5'\nassert solution('7 3 6 1 1 1 0\\n6 6 1 1 1 1 0\\n7 5 1 1 1 1 0\\n6 6 1 1 1 1 0\\n7 7 1 1 1 1 0\\n6 7 1 1 1 1 0\\n7 5 1 1 1 1 0\\n6 6 1 1 1 1 0') == '6 12.5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"5 10 10 5 10 0\") == \"negative-infinity -5\"\nassert solution(\"6 10 10 10 10 0\") == \"positive-infinity 0\"\nassert solution(\"6 10 10 5 10 0\") == \"positive-infinity -5\"\nassert solution(\"6 10 10 10 10 0\") == \"positive-infinity 0\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity 0\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"5 10 10 5 10 0\") == \"negative-infinity -5\"\nassert solution(\"6 10 10 10 10 0\") == \"negative-infinity -5\"\n\"\"\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 10 10 10 0\\n') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n'\nassert solution('6 10 10 10 10 0\\n') == 'negative-infinity -5\\nnegative-infinity 0\\n'"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"5 10 10 5 10 0\") == \"negative-infinity -5\"\nassert solution(\"6 10 10 10 10 0\") == \"0\""
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '2'\nassert solution('4 5') == '3'\nassert solution('1 2') == 'IMPOSSIBLE'\nassert solution('4 1') == 'IMPOSSIBLE'\nassert solution('1 1') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\") == \"2\"\n\"\"\"\n--- Day 11: Unusual Encounters ---\n\nYou land at the regional airport in time for your next flight.\n\nIn order to win your prize, you need to get from your starting location to the airport in ten minutes.\n\nSince you only have a limited amount of battery, you decide to optimize your flight by starting at the airport and dropping off as soon as you can.\n\nAt each step, you decide to:\n\n    - Wait if the pilot is in range, and\n    - Go to the airport if the pilot is out of range.\n\nAt the airport, you can disembark (the next step is to go to the next stage).\n\n**Note:**\n\nThe first step is to wait if the pilot is in range (your remaining battery is at least 30 minutes, if the pilot is out of range, you won't be able to wait at all).\n\nThe second step is to go to the airport if the pilot is out of range (your remaining battery is at least 30 minutes).\n\nYou need to find the shortest route to the airport that takes you under 3 minutes.\n\nWhat is the fewest number of steps it takes, starting at the airport and going down a staircase to the next flight path?\n\n\"\"\"\n\nimport aoc\nimport collections\n\nimport utils\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 -40000\\n50 10000\\n75 20000\\n400 0') == 'IMPOSSIBLE'\n\n'''\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == \"IMPOSSIBLE\"\nassert solution('5 4') == \"2\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0') == '2'\nassert solution('5 5\\n4 500000\\n50 100000\\n50 10000\\n4 200000') == 'IMPOSSIBLE'\nprint('All tests passed')"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"2\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\") == \"2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2\\n', \"First example test\"\nassert solution('2 2\\n1 1\\n1 2\\n3 1') == '4 2\\nrotS 2 2\\nrotS 2 2\\nrotS 1 3\\nrotS 2 1\\nrotS 2 3\\nrotR 2 3\\nrotR 2 1\\nnegR 2\\nnegR 2\\nrotS 3 4\\nrotS 2 2\\nrotR 1 4\\nnegR 1\\nrotS 2 2\\nrotS 2 1\\nrotR 1 4\\nrotR 2 1\\nrotR 1 2\\nnegR 1\\nrotS 2 1\\nrotS 2 1\\nrotR 1 4\\nnegR 2\\nnegS 3 4\\nrotR 2 2\\nrotR 2 1\\nrotR 2 3\\nrotS 2 2\\nrotS 3 3\\nnegS 2 1\\nnegS 3 2\\nnegS 1 2\\nrotS 2 2\\nnegR 2\\nrotS 1 4\\nrotS 2 2\\nrotS 2 1\\nnegR 2\\nnegR 2\\nnegR 2\\nrotS 2 1\\nnegR 2\\nnegS 1 2\\nrotS 2 2\\nnegR 1\\nrotS 2 1\\nrotR 2 1\\nnegS 2 1\\nrotS 2 2\\nrotS 2 1\\nrotR 1 4\\nnegR 2\\nrotS 2 2\\nrotS 2 1\\nrotR 1 4\\nnegS 2 1\\nnegS 3 2\\nnegS 1 2\\nrotS 2 2\\nrotS 2 1\\nrotR 1 4\\nnegR 2\\nnegS 3 2\\nrotS 2 2\\nrotS 2 1\\nrotS 2 1\\nnegR 2\\nrotS 2 2\\nrotS 2 1\\nrotR 1 4\\nnegS 2 1\\nrotS 2 2\\nrotS 2 1\\nrotS 2 1\\nnegS 2 1\\nrotS 2 2\\nrotS 2 1\\nrotR 1 4\\nnegR 2\\nrotS 2 2\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotR 1 4\\nnegR 2\\nrotS 2 2\\nrotS 2 1\\nrotS 2 1\\nrotR 2 1\\nnegR 2\\nrotS 2 2\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\nrotS 2 1\\"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == \"1 1\\n1 1\"\nassert solution('2 2') == \"2 2\\n2 2\"\nassert solution('4 4') == \"4 4\\n4 4\"\nassert solution('4 3') == \"4 3\\n4 3\\n4 3\"\nassert solution('1 2') == \"2 1\\n2 1\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\"\nassert solution(\"3 3\\n1 2 3\\n4 5 6\\n7 8 9\") == \"22 6\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n4 1\n1 -2\n-8 0\n-10 1\n''') == '299 1'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2\\nrotS 2 1\\nnegR 2'\nprint(solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n''')) == '3 3\\nrotS 1 2\\nrotS 2 3\\nrotS 3 2\\nrotS 2 1\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\nnegR 2\\"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4\\n-8 -4 -10 11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"345 2\"\n\nassert solution(\"\"\"\n3 4\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n\"\"\") == \"109\"\n\nassert solution(\"\"\"\n1\n1\n2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n-1\n3\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n3\n-1\n3\n\"\"\") == \"0\""
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 3\n1 2 3 4\n-5 -6 -7 -8\n9 10 11 12\n\"\"\") == \"345 2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2\\nrotS 2 1\\nnegR 2\\n'''"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n') == '0.5'\nassert solution('2 3\\n1 2\\n2 3\\n') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0.5'\n\"\"\"\nimport math\nn, m = map(int, input().split())\nk = list(map(int, input().split()))\n\ns = 0\nfor i in range(n):\n    s += (k[i] - math.floor(k[i])) ** 2\nprint(s / 2)\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"0.5\"\nassert solution(\"2 2\") == \"0.75\"\nassert solution(\"3 2\") == \"0.25\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n3 1 1') == '0.5'\nassert solution('5 2\\n4 3 3') == '3.0'\nassert solution('5 3\\n2 5 3') == '3.0'\nassert solution('5 4\\n4 4 4') == '4.0'\n\nimport math"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3\\n3 1 1') == '0.5'\nassert solution('2 3\\n3 2 3') == '0'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n3 1 1\n''') == '0.5'\nassert solution('''\n7 7\n8 2 3 4 5 6 7\n''') == '1.85714285714'\nprint('Solution:')\nprint(solution(input))\n\n'''\n--- Part Two ---\nNow, we'll keep adding more photons to the spectrum until we have enough to reach the energy of one of the simulation energies. To choose the simulation energies, we'll choose them at random from the remaining energies in the spectrum.\n\n-----Input-----\nThe input will start with two integers $1\\leq n\\leq 200$ and $1\\leq m \\leq n$ denoting the number of energies in the input spectrum and the number of simulation energies, respectively. This is followed by a line of $n$ integers $0\\leq k_ i\\leq 10^6$, where $k_ i$ ($1\\leq i \\leq n$) is the number of photons with energy $i$ in the x-ray spectrum. Simulation energies $E_ j$ ($1\\leq j \\leq m$) should be selected so as to minimize\\[ \\sum _{i=1}^n k_ i\\min _ j\\left((i-E_ j)^2\\right). \\]\n\n-----Output-----\nOutput one number, the minimum value of the sum above, with a relative or absolute error less than $10^{-4}$.\n\n-----Example-----\nIn sample input 1 we are have $n=3$, $m=2$, $k_1=3$, $k_2=1$, and $k_3=1$. Optimal simulation energies will be $E_1=1$ and $E_2=2.5$, since this will remove the contribution from bin 1 and minimize the contribution from bins 2 and 3. The sum will be $k_1(1-E_1)^2+k_2(2-E_2)^2+k_3(3-E_2)^2=3\\cdot 0^2+1\\cdot 0.5^2+1\\cdot 0.5^2=0.5$.\n\n-----Examples-----\nSample Input:\n3 2\n3 1 1\nSample Output:\n0.5\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n3 1 1\n''') == '0.5'\n'''\n\nfrom typing import List"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0.5'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 8\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5\\n2 6 7\\n2 7 8\\n2 8 9\\n1 5 6\\n3 8 9\\n5 9 8\\n6 7 6\\n6 7 9\\n6 8 6\\n6 8 9\\n6 9 7\\n3 8 9\\n5 8 9\\n8 9 7\\n'''\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9 11') == '1 4 5 2 6 7 3 8 9'\nassert solution('2 10') == '2 10'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5 2 6 7 8 9'\nassert solution('1 2\\n3 4\\n5 6') == '1 4 2 3 5 6'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\") == \"\"\"\n1 4 5\n2 6 7\n\"\"\"\n\nassert solution(\n    \"\"\"\n1 2\n3 4\n5 6\n\"\"\") == \"\"\"\n\"\"\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '2 6 7\\n3 8 9\\n1 5 6\\n1 4 5\\n1 3 4 5\\n2 6 7\\n5 9 8\\n4 6 8\\n5 9 3\\n2 4 6\\n7 8 9\\n'"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7\\n3 8 9\\n2 6 8'\nassert solution('3 4\\n4 5\\n1 2\\n1 3\\n3 2\\n3 4\\n4 5\\n3 5\\n5 4') == '1 2 3 4 5'\nprint(solution('3 4\\n4 5\\n1 2\\n1 3\\n3 2\\n3 4\\n4 5\\n3 5\\n5 4'))\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7\\n3 8 9\\n4 6 8\\n6 9 5\\n7 3 9'\nassert solution('16 10\\n1 6\\n6 6\\n9 8\\n9 9\\n1 7\\n1 2\\n2 7\\n7 5\\n7 5\\n7 3\\n3 7\\n5 3\\n5 1\\n6 6\\n6 7\\n2 2\\n7 2\\n4 6\\n4 9\\n9 3\\n6 4\\n5 2\\n1 5\\n6 5\\n5 6\\n6 3\\n5 4\\n5 3\\n5 5\\n7 1\\n5 4\\n6 4\\n7 3\\n8 2\\n2 7\\n3 8\\n8 4\\n4 8\\n2 5\\n3 2\\n4 6\\n3 4\\n1 4\\n5 4\\n1 7\\n7 1\\n2 7\\n5 3\\n8 5\\n7 7\\n5 5\\n7 6\\n5 5\\n6 1\\n5 2\\n6 5\\n7 4\\n4 7\\n6 2\\n6 5\\n7 5\\n7 5\\n7 5\\n7 2\\n6 6\\n4 5\\n7 2\\n5 3\\n4 4\\n5 6\\n2 4\\n7 3\\n5 5\\n6 7\\n6 8\\n7 2\\n8 6\\n2 4\\n6 4\\n6 5\\n3 8\\n4 4\\n4 8\\n1 6\\n7 3\\n4 4\\n2 6\\n4 6\\n4 8\\n3 7\\n5 2\\n5 7\\n8 1\\n5 7\\n5 3\\n8 6\\n5 5\\n7 6\\n7 2\\n8 6\\n7 5\\n2 8\\n6 8\\n8 6\\n1 3\\n4 3\\n5 7\\n6 5\\n4 8\\n4 5\\n2 6\\n4 1\\n7 4\\n6 4\\n4 3\\n5 5\\n7 5\\n4 8\\n2 3\\n5 5\\n1 6\\n6 3\\n8 5\\n7 5\\n6 7\\n3 8\\n1 5\\n5 3\\n7 7\\n7 7\\n7 4\\n7 2\\n5 5\\n6 2\\n4 3\\n5 7\\n5 8\\n5 7\\n4 8\\n4 4\\n6 7\\n4 8\\n2 5\\n3 5\\n3 7\\n8 3\\n5 7\\n1 6\\n7 7\\n8 3\\n2 6\\n5 7\\n5 3\\n7 8\\n7 4\\n8 2\\n6 2\\n6 5\\n8 6\\n5 2\\n7 1\\n2 1\\n5 3\\n7 7\\n3 8\\n5 4\\n1 5\\n4 1\\n5 2\\n7 7\\n2 4\\n2 4\\n3 5\\n4 5\\n7 4\\n5 2\\n6 3\\n6 4\\n5 7\\n4 4\\n5 4\\n5 1\\n4 1\\n7 6\\n5 3\\n4 4\\n4 6\\n5 7\\n8 5\\n7 6\\n4 5\\n7 5\\n8 6\\n5 7\\n8 7\\n7 1\\n4 6\\n8 4\\n1 6\\n7 4\\n7 3\\n1 7\\n2 2\\n8 4\\n2 5\\n5 3\\n7 5\\n7 6\\n2 6\\n1 7\\n8 4\\n4 6\\n4 7\\n4 3\\n5 4\\n3 4\\n8 8\\n7 6\\n3 4\\n6 3\\n3 7\\n3 4\\n1 7\\n3 2\\n1 4\\n7 5\\n2 4\\n6 2\\n4 8\\n7 3\\n6 3\\n4 5\\n5 5\\n4 8\\n5 5\\n8 5\\n4 8\\n6 4\\n8 5\\n7 5\\n3 3\\n5 6\\n4 2\\n5 7\\n5 3\\n7 3\\n6 6\\n2 5\\n3 2\\n5 3\\n6 2\\n8 7\\n5 2\\n7 6\\n5 2\\n5 7\\n4 5\\n5 5\\n7 5\\n4 5\\n2 4\\n3 6\\n5 4\\n7 7\\n6 5\\n4 8\\n2 5\\n3 2\\n4 5\\n7 4\\n4 8\\n4 4\\n4 6\\n6 4\\n2 6\\n8 4\\n6 5\\n8 4\\n4 6\\n4 8\\n5 1\\n6 6\\n5 1\\n8 1\\n7 6\\n1 5\\n8 5\\n6 6\\n4 8\\n7 6\\n6 5\\n8 5\\n5 6\\n6 2\\n5 7\\n6 3\\n8 3\\n2 7\\n4 7\\n8 7\\n2 7\\n2 5\\n3 7\\n4 4\\n4 8\\n4 6\\n3 8\\n3 7\\n7 3\\n8 4\\n8 7\\n1 5\\n8 7\\n8 7\\n6 4\\n1 5\\n7 3\\n5 3\\n3 3\\n4 5\\n3 3\\n4 4\\n6 5\\n7 5\\n6 3\\n6 3\\n4 6\\n4 5\\n7 8\\n4 7\\n5 3\\n5 7\\n3 4\\n7 3\\n5 2\\n6 6\\n1 7\\n7 3\\"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7\\n3 8 9\\n'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4 5\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n\"\"\") == \"\"\"\n1 4 5\n2 6 7\n3 8 9\n\"\"\""
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '2 6 7'\n\nassert solution('''\n6 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5'"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11 2\") == \"1350\"\nassert solution(\"12000\") == \"1350\"\nassert solution(\"9000\") == \"1250\"\nassert solution(\"4500\") == \"1250\"\nassert solution(\"10000\") == \"1350\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n\"\"\") == \"13500\"\nassert solution(\"\"\"\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n\"\"\") == \"37800\""
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\nassert solution(\"5 5\\n20 20\\n10 10\\n15 15\\n20 20\") == \"25000\"\nassert solution(\"9 9\\n2 2\\n3 3\\n1 1\\n2 2\\n3 3\\n1 1\\n2 2\\n3 3\\n1 1\\n2 2\\n3 3\") == \"26000\"\nassert solution(\"9 9\\n2 2\\n3 3\\n1 1\\n2 2\\n3 3\\n1 1\\n2 2\\n3 3\\n1 1\\n2 2\\n3 3\") == \"0\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"36\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 2') == '13500'\nassert solution('12000') == '13500'\nassert solution('9000') == '13500'\nassert solution('4500') == '13500'\nassert solution('10000') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 2') == '1350'\nassert solution('12000') == '1350'\nassert solution('9000') == '1250'\nassert solution('4500') == '1150'\nassert solution('10000') == '9000'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n\"\"\"\n) == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '13500'\nassert solution_bis(stdin) == '13500'\n\"\"\""
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\"\"\") == \"13500\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\nSample Output:\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 16\\nHot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 2\\nSample Output:\\nHot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\\nHot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 2\\n'\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '2 16\\n'\n    'Hot cross buns! = Hot cross buns! =\\n'\n    '4 4 4 4 4 4 4 4\\n'\n    'One a pen- ny, Two a pen- ny, Hot cross buns! =\\n'\n    '2 2 2 2 2 2 2 2 4 4 4 4\\n'\n    'Sample Output:\\n'\n    'Hot_cross_buns!_=___Hot_cross_buns!_=\\n'\n    '____________________Hot_cross_buns!_=\\n'\n    'One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\n'\n    'Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n) == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 16\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n\\n2 2 2 2 2 2 2 2 4 4 4 4\\nTwo a pen-ny, Hot cross buns! =\\n\"\n\"\"\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 16\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nOne_a_pen-ny,_Two_a_pen-ny,_Hot_cross_buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nOne_a_pen-ny,_Two_a_pen-ny,_Hot_cross_buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 16') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n' \\\n                            '____________________Hot_cross_buns!_=\\n' \\\n                            'One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\n' \\\n                            'Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 4 4 4 4\nSample Output:\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n'+'________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot_cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot_cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot_cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'+'Hot_cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=Hot_cross____buns!_=\\n'\n    )\n    pass"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 16\\n1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 4 4 4 4') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n\"\"\""
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 5\n5 5 5\n7 7 7 7 7\n7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7 7 7 7\n7 7 7 7 7 7 7 7 7 7"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n''') == '33', '''\nUsing the first sample, the program should output $33$.\n'''\n\nassert solution('''\n2\n2\n3\n''') == '60', '''\nUsing the second sample, the program should output $60$.\n'''"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\"\n\nassert solution(\"\"\"\n5 2 1\n1 3 5\n4 1 6\n2 1 3\n1 4 6\n\"\"\") == \"16\"\n\nassert solution(\"\"\"\n8 2 2\n1 3 10\n2 1 3\n4 1 6\n3 1 10\n1 4 6\n4 1 6\n3 1 10\n1 4 6\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n8 2 1\n1 3 10\n2 1 3\n4 1 6\n3 1 10\n1 4 6\n4 1 6\n3 1 10\n1 4 6\n\"\"\") == \"15\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\"\nassert solution(\"\"\"3 4 1\n1 3 10\n1 6 10 3\n1 8 10 4\n2 8 10 6\n3 8 10 2\n2 7 10 1\n3 10 5 3\n4 9 1 5\n5 4 9 1\n5 5 2 4\n4 4 1 3\n3 7 5 2\n4 6 5 5\n6 7 1 2\n5 8 7 2\n3 8 7 5\n3 7 2 5\n5 5 2 1\n4 8 5 5\n3 1 5 2\n1 3 1 1\n3 2 4 5\n4 3 5 4\n3 1 2 5\n3 6 1 6\n1 5 5 5\n3 8 5 2\n3 2 5 5\n1 3 1 1\n3 6 3 3\n3 7 3 3\n3 6 3 4\n1 3 3 2\n3 6 2 5\n5 5 3 1\n1 5 2 4\n2 6 2 2\n4 6 3 4\n4 1 2 2\n3 7 1 4\n3 2 4 4\n4 8 4 4\n4 6 4 2\n4 5 4 2\n3 2 5 2\n5 5 2 1\n5 5 2 1\n4 6 5 5\n4 8 5 5\n3 5 1 5\n1 3 1 5\n3 3 1 5\n1 2 3 3\n3 3 3 3\n2 3 5 5\n3 8 5 2\n3 6 5 5\n5 5 2 1\n3 6 5 5\n4 6 5 3\n4 4 5 5\n4 3 5 4\n4 5 3 4\n3 8 4 2\n3 7 4 1\n3 6 5 1\n2 2 3 1\n5 6 6 6\n4 8 6 6\n4 8 6 2\n3 1 2 2\n1 2 5 5\n3 2 5 2\n1 4 2 5\n3 5 3 5\n3 5 3 4\n3 6 5 5\n2 3 4 5\n2 5 3 2\n2 5 3 2\n2 6 3 4\n2 8 3 2\n5 3 2 1\n4 6 5 4\n4 6 5 4\n5 4 2 1\n5 3 3 5\n2 3 4 5\n4 1 4 4\n4 5 5 4\n4 3 4 4\n3 6 4 4\n3 5 4 4\n3 5 4 3\n4 4 4 4\n4 8 4 4\n4 6 4 2\n3 2 4 4\n3 6 5 4\n3 8 4 4\n4 8 4 4\n4 6 4 4\n3 2 4 3\n3 5 3 4\n2 3 5 2\n3 6 5 2\n3 8 3 4\n2 5 4 4\n2 6 4 2\n2 8 4 2\n2 4 4 3\n2 5 4 3\n3 5 4 4\n3 6 4 4\n3 8 4 4\n4 1 4 4\n4 6 4 4\n3 8 4 4\n3 7 4 4\n3 8 4 4\n3 6 4 4\n3 7 4 4\n2 8 4 4\n2 7 4 4\n1 7 4 4\n1 6 4 4\n1 6 4 4\n1 5 2 2\n1 6 2 2\n1 8 2 2\n2 5 2 2\n3 5 2 2\n1 8 2 2\n2 5 2 2\n3 5 2 2\n3 5 2 2\n1 5 2 2\n2 5 2 2\n3 5 2 2\n1 8 2 2\n1 6 2 2\n2 6 2 2\n3 8 2 2\n2 8 2 2\n3 8 2 2\n3 6 2 2\n3 8 2 2\n2 6 2 2\n1 6 2 2\n1 8 2 2\n1 6 2 2\n2 6 2 2\n2 8 2 2\n1 6 2 2\n1 5 2 2\n1 8 2 2\n1 5 2 2\n1 6 2 2\n1 5 2 2\n1 6 2 2\n2 5 2 2\n2 8 2 2\n2 5 2 2\n1 6 2 2\n1 8 2 2\n1 6 2 2\n2 5 2 2\n2 8 2 2\n1 5 2 2\n1 6 2 2\n1 8 2 2\n2 8 2 2\n2 5 2 2\n1 6 2 2\n1 5 2 2\n1 6 2 2\n1 8 2 2\n1 6 2 2\n1 5 2 2\n1 6 2 2\n1 8 2 2\n2 5 2 2\n2 8 2 2\n2 5 2 2\n1 6 2 2\n1 8 2 2\n1 6 2 2\n2 8 2 2\n2 5 2 2\n1 6 2 2\n1 5 2 2\n1 6 2 2\n1 8 2 2\n1 6 2 2\n1 5 2 2\n1 6 2 2\n1 8 2 2\n2 8 2 2\n2 5 2 2\n1 6 2 2\n1 8 2 2\n1 6 2 2\n2 8 2 2\n2 5 2 2\n1 6 2 2\n1 5 2 2\n1 6 2 2\n1 8 2 2\n1 6 2 2\n1 5 2 2\n1 6 2 2\n1 8 2 2\n2 8 2 2\n2 5 2 2\n1 6 2 2\n1 8 2 2\n1 6 2 2\n2 8 2 2\n2 5 2 2\n1 6 2 2\n1 5 2 2\n1 6 2 2\n1 8 2 2\n1 6 2 2\n1 5 2 2\n1 6 2 2\n1 8 2 2\n3 6 5 4\n4 4 3 4\n4 4 3 4\n4 5 4 4"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nprint('Tests passed')\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '33', f\"Your function is wrong, it should return 33 and your input was {solution()}\""
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1') == '33'\nassert solution('5 5 3 3') == '16'\nassert solution('10 3 2 5 2') == '41'\n\n'''\n\n'''\nimport math\nimport sys"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == '33'\nassert solution('3 2 1') == '33'\nassert solution('3 2 1') == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n2 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '0'\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '0'\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n2 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '0'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'\nassert solution('3\\n20 15 10\\n7 7\\n10 0') == '405'\nassert solution('3\\n20 15 10\\n7 7\\n10 0\\n1 100\\n3 50\\n1 50\\n4 100\\n3 50\\n5 50\\n1 50') == '407'\nassert solution('3\\n20 15 10\\n7 7\\n10 0\\n1 100\\n3 50\\n1 50\\n4 100\\n3 50\\n5 50\\n1 50\\n2 100\\n1 50\\n3 50\\n1 50') == '411'\nassert solution('3\\n20 15 10\\n7 7\\n10 0\\n1 100\\n3 50\\n1 50\\n4 100\\n3 50\\n5 50\\n1 50\\n2 100\\n1 50\\n3 50\\n1 50\\n5 100\\n1 50\\n4 50\\n1 50\\n2 50\\n1 50') == '407'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n\"\n    \"20 15 10\\n\"\n    \"7 7\\n\"\n    \"30 0\\n\"\n) == \"405\"\n\nassert solution(\n    \"5\\n\"\n    \"10 12 20 15\\n\"\n    \"1 5\\n\"\n    \"3 5\\n\"\n    \"0 4\\n\"\n    \"3 4\\n\"\n    \"2 4\\n\"\n    \"5 5\\n\"\n) == \"234\"\n\nassert solution(\n    \"5\\n\"\n    \"3 12 20 15\\n\"\n    \"1 5\\n\"\n    \"3 5\\n\"\n    \"0 4\\n\"\n    \"3 4\\n\"\n    \"2 4\\n\"\n    \"5 5\\n\"\n) == \"234\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1065\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3\\n20 15 10\\n7 7\\n30 0\\n\"\n) == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n10 20 30 40 50\n50 30 40 20\n15 20 30 40\n10 0\n\"\"\") == \"555\"\n\nassert solution(\"\"\"\n5\n15 15 20 20 30\n20 20 30 40 40 50\n30 30 40 20 20\n40 20 20 30 40\n15 0\n\"\"\") == \"130\"\n\nassert solution(\"\"\"\n4\n30 20 20 30\n30 20 20 30\n20 20 30 30\n20 20 30 20\n\"\"\") == \"4200\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n8 3\\n7 0\\n') == '3'\nassert solution('3\\n3 2 5\\n1 0\\n0 1\\n') == '2'\nassert solution('3\\n4 3 3\\n2 3 2\\n') == '4'\nassert solution('4\\n4 4 4\\n3 3 3\\n') == '2'\nassert solution('5\\n6 4 4\\n2 4 2\\n') == '3'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n20 15 10\n7 7\n30 0\n\"\"\") == \"405\"\nassert solution(\"\"\"\n3\n10 15 10\n7 7\n30 0\n\"\"\") == \"505\"\nassert solution(\"\"\"\n3\n10 15 10\n7 7\n30 0\n\"\"\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == '405'\nprint(solution())\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n\"\n    \"20 15 10\\n\"\n    \"7 7\\n\"\n    \"30 0\") == \"405\""
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n20 15 10\n7 7\n30 0\n\"\"\") == \"405\"\nassert solution(\"\"\"3\n20 15 10\n7 7\n30 0\n\"\"\") == \"405\"\nassert solution(\"\"\"5\n20 50 10 20 20\n0 0\n0 0\n30 0\n30 0\n30 0\n\"\"\") == \"270\"\nassert solution(\"\"\"5\n20 50 10 20 20\n0 0\n0 0\n30 0\n30 0\n30 0\n\"\"\") == \"270\"\nassert solution(\"\"\"5\n20 50 10 20 20\n0 0\n0 0\n30 0\n30 0\n30 0\n\"\"\") == \"270\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n10 10 10 10''') == '28 4 21 14.0'''\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2 3') == '28 2'\nassert solution('5\\n3 4 5 4') == '12 2'"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"4\") == \"2 2 2 2\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 2 4 7\n\"\"\") == \"28 4 21 14\"\n\nassert solution(\"\"\"\n3\n1 2 4 5\n\"\"\") == \"8 6 5\"\n\nassert solution(\"\"\"\n2\n2 4\n\"\"\") == \"8 4\"\n\nassert solution(\"\"\"\n1\n5\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"8 4\""
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2 4 7\n\"\"\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n1 2 4 7\n\"\"\") == \"28 4 21 14.0\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"11 10 5.0\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"11 10 5.0\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"25 15 10 5.0\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"25 15 10 5.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n5\n10 20 20\n100''') == '28 4 21 14.0'\nassert solution('''4\n1 2 3 4\n5\n10 20 20\n100\n10''') == '28 4 21 14.0'\nassert solution('''5\n1 2 3 4 5\n5\n10 20 20\n100\n10''') == '28 4 21 14.0'\nassert solution('''1\n1 2 3\n3\n10 20 20\n100''') == '28 4 21 14.0'\nassert solution('''2\n1 2 3\n3\n10 20 20\n100''') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 2 4 7\") == \"28 4 21 14.0\"\nassert solution(\"4\\n1 2 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 4 7\n''') == '28 4 21 14.0'\nassert solution('''\n5\n1 2 3 4 5\n''') == '23 4 14 1.25'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 2 3\\n2 3 4 1\\n3 4 1 2\\n') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\nassert solution('3 5\\n1 2 3 4 5\\n2 4 3 1 5\\n3 5 4 2 1\\n4 5 1 2 3\\n') == 'yes\\n1 2 3 4 5\\n2 4 3 1 5\\n3 5 4 2 1\\n4 5 1 2 3'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes\\n1 2 3 4\\n2 3 4 1'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4\") == \"yes\\n1 2 3 4\"\nassert solution(\"1 2 3 4 5\") == \"no\"\nassert solution(\"2 3 4 1\") == \"yes\\n3 4 1 2\"\nassert solution(\"2 3 4 1 2\") == \"no\"\nassert solution(\"2 3 4 1 3\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3'\n\"\"\"\n--- Day 2: 1202 Program Alarm ---\nSanta is delivering presents to an infinite two-dimensional grid of houses.\n\nHe begins by delivering a present to the house at his starting location, and then an elf at the North Pole calls him via radio and tells him where to move next. Moves are always exactly one house to the north (^), south (v), east (>), or west (<). After each move, he delivers another present to the house at his new location.\n\nHowever, there's a catch: the elf back at the north pole has given Santa a present with a limited amount of ribbon, and his directions are a little confusing. Instead of just telling him to move north, he tells Santa to move 1 house north, then 2 houses east, then back to the starting position (delivering a present to the house at his starting location again).\n\nHow many houses at the North Pole can Santa visit?\n\n--- Part Two ---\nThe final gift he can give is a thank you card, which, even if it sounds like a present, gives you permission to move Santa around the grid again.\n\nThe elf back at the north pole also uses this trick. Instead of just delivering presents like the first time, he or she will deliver presents like this one, to the house one North of the starting position:\n\nThe next northpole presents deliver a present to Santa\u2019s house.\nThe next house delivers a present to Santa\u2019s house.\nThe next house delivers a present to Santa\u2019s house.\nThe next house delivers a present to Santa\u2019s house.\nThe next house delivers a present to Santa\u2019s house.\nThe next house delivers a present to Santa\u2019s house.\n\nSanta takes the thank you card, then delivers another present to his starting house.\nThis trick takes Santa home with only one present. When he visits the house at his next position, he delivers a present to the house at his position in the next house, then delivers another present to the house in the next house, then delivers a present to the house at his position in the next house, then delivers another present to the house in the next house, and so forth.\n\nAfter delivering presents like this, which take away Santa\u2019s reputation as a generous donor, how many houses at the North Pole can Santa visit?\n\"\"\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"yes\\n1 2 3 4\"\n\"\"\"\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\n\n## 649. Design HashMap ##\nclass MyHashMap:\n\n    def __init__(self):\n        \"\"\"\n        Initialize your data structure here.\n        \"\"\"\n        self.size = 1000\n        self.hmap = [-1] * self.size\n\n    def put(self, key: int, value: int) -> None:\n        \"\"\"\n        value will always be non-negative.\n        \"\"\"\n        idx = key % self.size\n        if self.hmap[idx] == -1:\n            self.hmap[idx] = {}\n        if self.hmap[idx] == -1:\n            self.hmap[idx] = {key: value}\n        else:\n            if key in self.hmap[idx]:\n                self.hmap[idx][key] = value\n            else:\n                self.hmap[idx][key] = value\n\n    def get(self, key: int) -> int:\n        \"\"\"\n        Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key\n        \"\"\"\n        idx = key % self.size\n        if self.hmap[idx] == -1:\n            return -1\n        elif key in self.hmap[idx]:\n            return self.hmap[idx][key]\n        else:\n            return -1\n\n    def remove(self, key: int) -> None:\n        \"\"\"\n        Removes the mapping of the specified value key if this map contains a mapping for the key\n        \"\"\"\n        idx = key % self.size\n        if self.hmap[idx] == -1:\n            return\n        elif key in self.hmap[idx]:\n            del self.hmap[idx][key]"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'no\\n'\nassert solution('4 2') == 'yes\\n1 2 3 4\\n'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == 'no'\nassert solution('3 2') == 'yes'\nassert solution('5 5') == 'yes'\n\"\"\""
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n1 1 1''') == 'yes\\n'*3\nassert solution('''3 2\n1 1 1\n1 1 1\n1 1 1''') == 'no\\n'*3\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'\n'''\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n10 10 -10 -4 10\"\n    ) == \"10.000000000\"\nassert solution(\n    \"10\\n10 10 -10 -4 10\"\n    ) == \"0.0\"\nassert solution(\n    \"0\\n10 10 -10 -4 10\"\n    ) == \"0.0\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n10 10 10\n''') == '10.0'\nassert solution('''\n5\n-10 -4 10 10 10\n''') == '10.0'\nassert solution('''\n10\n10 10 10 10 10\n''') == '10.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 10 -10 -4 10\") == \"10.000000000\"\nassert solution(\"4\\n-1 -2 -3 4\") == \"4.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"10.000000000\"\nassert solution(\"10\") == \"0.0\""
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0.0\"\nassert solution(\"1 2\") == \"2.0\"\nassert solution(\"1 2 3\") == \"2.5\"\nassert solution(\"1 2 3 4\") == \"3.25\"\nassert solution(\"1 2 3 4 5\") == \"4.25\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == '10.000000000'\nassert solution('10000\\n10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000 10000"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n10 2\\n20 -10 -4 10\\n\") == \"10.0\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n10 10 -10 -4 10\n''') == '10.0'\n\nassert solution('''\n5\n10 10 10 -4 10\n''') == '10.0'\n\nassert solution('''\n5\n-10 -10 10 10 -4 10\n''') == '10.0'\n\nassert solution('''\n5\n-10 -10 10 10 10\n''') == '10.0'\n\nassert solution('''\n5\n10 10 -10 -4 10\n''') == '10.0'"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"10.000000000\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n30\\n3\\n2\\n45\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n30\n3\n2\n45\n''') == '1'\nassert solution('''\n5\n10\n5\n3\n30\n3\n2\n45\n''') == '4'\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == 1\nassert solution('3') == 0\nassert solution('2') == 0\nassert solution('45') == 0\nassert solution('30') == 1\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"2\"\nassert solution(\"11\") == \"3\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1', \"Wrong!\"\nassert solution('4') == '1', \"Wrong!\"\nassert solution('1') == '1', \"Wrong!\"\nassert solution('2') == '1', \"Wrong!\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('3\\n5\\n10\\n20\\n30') == '3'"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '2'\n\n----\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n30\\n3\\n2\\n45\") == \"1\""
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == 1\nassert solution(\"4\") == 1\nassert solution(\"5\") == 1\nassert solution(\"7\") == 2\nassert solution(\"9\") == 2\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'''\n\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'''\n\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'''\n\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'''\n\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'''"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000'\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.000000000'\nassert solution('''\n4 8 5\n''') == '0.000000000 -1.000000000'\nassert solution('''\n2 4 8\n''') == '0.000000000 0.000000000'\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.000000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897''') == '0.000000000 1.360000000'\n\nassert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\nSample Output:\n0.000000000 1.360000000\n0.000000000 1.000000000\n0.000000000 -1.000000000\n0.000000000 0.360000000\n0.880000000 0.000000000\n-0.880000000 -0.360000000\n1.02037965897''') == '0.000000000 1.360000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\nassert solution('10 4 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\nassert solution('12 4 1.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\nassert solution('12 4 0.66 3.0\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\nassert solution('12 4 0.66 3.0\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000'\n\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.000000000'\n\nassert solution('''\n7 6 3.0 0.66\n1 2 3\n3 5 4\n4 6 5\n2 6 3\n3 5 3\n4 7 7\n5 6 7\n6 7 3\n''') == '0.000000000 -1.000000000'\n\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '1.02000000 1.360000000'\n\nassert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '1.02000000 1.360000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 6 3.0 0.66\") == \"0.000000000 1.360000000\"\nassert solution(\"2 4 8\") == \"0.000000000 1.000000000\"\nassert solution(\"4 6 1\") == \"0.000000000 1.000000000\"\nassert solution(\"3 6 1\") == \"0.000000000 1.000000000\"\nassert solution(\"4 5 5\") == \"0.000000000 0.360000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 6 3.0 0.66\") == \"0.000000000 1.360000000\"\nassert solution(\"2 4 8\") == \"0.000000000 1.000000000\"\nassert solution(\"4 6 1\") == \"0.000000000 1.000000000\"\nassert solution(\"3 6 1\") == \"0.000000000 1.000000000\"\nassert solution(\"4 5 5\") == \"0.000000000 0.360000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897\\n'''\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == '4'\nassert solution('''\n4\n1 -3\n-2 2\n1 3\n-4 0\n2\n1 -1\n-2 -1\n''') == '4'\nassert solution('''\n5\n1 -1\n1 3\n-1 -1\n1 4\n-1 1\n4\n3\n-2 -1\n3 2\n3 2\n''') == '3'\n\n'''\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\n\nassert solution('''4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '1'\n\nassert solution('''2\n1 1\n2 2\nSample Input:\n3\n0 0\n1 1\n2 2\nSample Output:\n1\n''') == '1'\n\nassert solution('''5\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\nSample Output:\n4\n''') == '4'\n\nassert solution('''5\n0 0\n0 1\n0 2\n1 1\n1 2\n0 3\nSample Output:\n3\n''') == '3'"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '3'\n\n\"\"\""
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n0 0\\n0 3\\n3 3\\n3 0\\n2\") == \"4\"\n\n---Input Sample 1---\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n\n---Output Sample 1---\n4\n\n---Input Sample 2---\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n0 1\n2 0\n\n---Output Sample 2---\n2\n\n---Input Sample 3---\n5\n0 1\n0 0\n1 1\n3 3\n2 1\n4 2\n1 0\n3 2\n\n---Output Sample 3---\n3\n\n\"\"\""
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '4'\nassert solution('0 0\\n0 3\\n3 3\\n3 0\\n2') == '2'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == \"4\"\nassert solution('''\n3\n0 0\n0 3\n3 3\n''') == \"2\"\nassert solution('''\n3\n0 0\n0 3\n3 0\n''') == \"1\"\nassert solution('''\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == \"4\""
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4'\n    ) == '4'\n\nassert solution(\n    '4\\n0 0\\n0 3\\n3 3\\n3 0\\n2'\n    ) == '4'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '4'\nassert solution('6') == '2'\nassert solution('10') == '5'\n\nstdin = \"\"\"5\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n\"\"\"\n\nassert solution(stdin) == '5'"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 0\n0 1\n0 2\n0 3\n0 4\n''') == '''\n3\n0 1\n0 2\n'''\nassert solution('''\n3 0\n0 1\n0 2\n''') == '''\n4\n0 1\n0 2\n0 3\n'''\nassert solution('''\n10 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n0 9\n0 10\n''') == '''\n4\n0 10\n0 9\n0 8\n0 7\n'''\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2\n0 1\n1 0\n''') == '1 2'\n\nassert solution('''6\n0 1\n0 2\n1 3\n2 4\n0 5\n3 4\n''') == '3 4 2'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n''') == '2 3 2 1'\nassert solution('''4 0\n0 1\n0 2\n0 3\n''') == '2 3 2 1'\nassert solution('''4 0\n0 1\n0 2\n0 3\n''') == '3 2 3 1'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1 2\"\nassert solution(\"2 3\") == \"1 2\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 0') == '2'\nassert solution('5 0') == '2 3 1'"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 0\") == \"2\"\nassert solution(\"4 0\") == \"3 2\"\nassert solution(\"4 0\") == \"3 1\""
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2 3 2'\nassert solution('1 0\\n0 1') == '1'\n\n---Input---\n1\n4 0\n0 1\n0 2\n0 3\n\n---Output---\n4\n3 1 2\n2 3 1\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '3 1'\nassert solution('4 0') == '3 2'\nassert solution('5 0') == '4 2'\nassert solution('6 0') == '5 2'\nassert solution('10 1') == '7 1'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3') == '2\\n3 2\\n3 1'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 0\\n0 1\\n0 2\\n0 3\\n') == '2\\n3 2\\n3 1\\n'\n\"\"\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"ok\"\nassert solution(\"\"\"\n2\n0 0 0\n0 1.5 0\n\"\"\") == \"ok\"\nassert solution(\"\"\"\n10\n1 1 0\n2 2 1\n3 3 2\n4 4 3\n5 5 4\n6 6 5\n7 7 6\n8 8 7\n9 9 8\n10 10 9\n\"\"\") == \"ok\"\n\nassert solution(\"\"\"\n3\n2 1 0\n2 1 1\n2 2 1\n\"\"\") == \"ok\"\nassert solution(\"\"\"\n3\n2 1 0\n2 1 1\n3 3 2\n\"\"\") == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok'\n\"\"\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 0 0\\n0 1.5 0') == 'ok'\nassert solution('2 0 0\\n0 1.5 0') == 'crash'\nprint(solution('''\n2\n0 0 0\n0 1.5 0\n'''))\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'ok'\n\"\"\""
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n0 1.5 0') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n0 0 0\n0 0 1\n0 0 0\n''') == 'ok'\n\nassert solution('''\n4\n0 0 0\n0 0 1\n0 1 0\n0 1 1\n''') == 'ok'\n\nassert solution('''\n5\n0 0 0\n0 0 1\n0 1 0\n0 1 1\n0 0 0\n''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n0 0 0\n0 1.5 0\n\"\"\") == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '2\\n0 0 0\\n0 1.5 0\\n') == 'ok\\n'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'ok'\n\n'''"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2'\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '1'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n0 1\n0 3\n1 2\n2 4\n0 2''') == '2'\n\nassert solution('''4 3\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3''') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2'\nassert solution('''6 4\n0 0\n0 2\n0 4\n1 3\n1 4\n2 4\n2 2\n2 3\n2 4\n''') == '5'\nassert solution('''100 6\n0 0\n0 2\n0 4\n1 3\n1 4\n2 4\n2 2\n2 3\n2 4\n''') == '10'\nassert solution('''5 6\n0 0\n0 2\n0 4\n1 3\n1 4\n2 4\n2 2\n2 3\n2 4\n''') == '7'"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2\\nR 0\\nR 1\\nR 2\\nR 4\\nG 2\\nG 3\\nG 4\\nG 4'''\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '2'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '2'\nassert solution('''5 5\n0 1\n0 3\n0 4\n1 2\n2 3\n2 4\n3 5\n3 5''') == '2'\nassert solution('''5 2\n0 1\n0 3\n1 2\n2 4\n2 4''') == '1'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''7 3 4 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '0'\nassert solution('''\n5 1 2\nA\n1\n1\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    7 3 3 3\n    A B C\n    D E F\n    3 A E G\n    3 A C E\n    3 B D F\n    \"\"\"\n    ) == \"2\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('8 9 9 9 9\\nA B C\\nD E F\\nG H I J\\nK L M N\\nO P Q R S\\nT U V W X Y\\nZ 0 1 2 3 4\\n') == '4'\nassert solution('20 3 3 3\\nA B C\\nD E F\\nG H I J\\nK L M N\\nO P Q R S\\nT U V W X Y\\nZ 0 1 2 3 4\\n') == '1'\nassert solution('7 2 2 2\\nA B\\nC D\\nE F\\nG H\\nI J\\nK L\\nM N\\nO P\\nQ R\\nS T\\nU V\\nW X\\nY Z\\n') == '0'\nassert solution('1 1 1 1\\nA\\nB\\nC\\nD\\nE\\nF\\nG\\nH\\nI\\nJ\\nK\\nL\\nM\\nN\\nO\\nP\\nQ\\nR\\nS\\nT\\nU\\nV\\nW\\nX\\nY\\nZ\\n') == '0'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 3') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 3 3') == '2'\nassert solution('4 5 2 3') == '1'\nassert solution('8 5 6 3') == '4'\nassert solution('4 1 5 3') == '4'\nassert solution('3 3 3 3') == '3'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3 3 3') == '2'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2 1 2') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution('2 1 3 2 5 3 3') == '1'\nassert solution('5 6 3 2 4') == '0'\nassert solution('8 1 6 2 3 5 3 4') == '1'\nassert solution('8 2 5 3 4 6 5 1') == '3'"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''3 5 3 2\nA B C D E\nF G H I J\nK L M N O\nP Q R S T\nU V W X Y Z\n''') == '1'\nassert solution('''6 3 1 4 3 2\nA B C D E\nF G H I J\nK L M N O\nP Q R S T\nU V W X Y Z\nAA BB BB BB BB BB\n''') == '1'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 3 3 3\") == \"2\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2 1 2'\nassert solution('3\\nYYY\\nNYY\\nYNY') == '3 1 2'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"10\") == \"10\"\nassert solution(\"12\") == \"1 2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nYYY\\nNYY\\nYNY') == '1 2 3'"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2 3 1 2'\nassert solution('''\n2\nYYY\n''') == '1 2'\nassert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2 3 1 2'\nassert solution('''\n7\nYYY\nNYY\nYYY\nYNY\nYNY\nYNY\nYNY\n''') == '1 2 3 3 2 3'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join(['2', 'YYY', 'NYY', 'YNY'])) == '1 2 3'\nassert solution('\\n'.join(['3', 'YYY', 'NYY', 'YNY'])) == '1 2 3'\nassert solution('\\n'.join(['4', 'YYY', 'NYY', 'YNY'])) == '1 2 3 4'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3 1 2\"\n\n'''"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"YYY\") == \"2 1 2\"\nassert solution(\"NYY\") == \"1 1 2\"\nassert solution(\"YNY\") == \"3 1 2\"\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')\nn = int(input())\nA = list(map(int, input().split()))\n\ndp = [[-1 for _ in range(n)] for _ in range(n)]\n\nfor i in range(n):\n    if A[i] == 1:\n        for j in range(n):\n            if j!= i:\n                dp[i][j] = 1\n    else:\n        dp[i][i] = 1\n\nfor i in range(n):\n    for j in range(n):\n        if A[j] == 1:\n            for k in range(n):\n                if k!= j:\n                    dp[i][k] = max(dp[i][k], dp[i][j] + dp[j][k])\n\nprint(max(max(dp[i])))"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\nYYY\nNYY\nYNY\n\"\"\") == \"1 2 3\"\n\nassert solution(\"\"\"\n2\nYYY\nNYY\nYNY\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\nYYY\nNYY\nYNY\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"1 2 3\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\n\nassert solution('3') == '1 3 2'"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nYYY\\nNYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2'\nassert solution('3\\nYYY\\nNYY\\nYNY\\n') == '0\\n'\n\nstdin = \"\"\"3\nYYY\nNYY\nYNY\n\"\"\"\n\nprint(solution(input))\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '4'\nassert solution('x..') == '0'\nassert solution('...') == '5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n'.join(['3 3', 'x..', '...', '...'])) == '4 0 5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10\n2 2\n4 4\n3 3\n3 5\n4 1\n6 5\n6 2\n6 1\n3 3\n4 5\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5\n3 2\n2 3\n3 5\n4 1\n6 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2\n2 3\n1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n1 2\n2 3\n3 5\n\"\"\") == \"0\""
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '4'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\nx.\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4 0 5'\nassert solution('''\n10 20\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx.\nx"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n\"\"\") == \"4\\n0\\n5\\n\"\n\nassert solution(\"\"\"\n3 3\nx.\n.x\n.x\n3\n1 3\n1 1\n3 2\n\"\"\") == \"4\\n0\\n5\\n\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('3 2') == '0'\nassert solution('3 3') == '0'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\nx..\\n...\\n...') == '4\\n0\\n5\\n'\nassert solution('3 3\\nx.x\\n...\\n...') == '4\\n0\\n5\\n'\nassert solution('3 3\\nx.xx\\n...\\n...') == '5\\n0\\n5\\n'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 5\nx.x\n''') == '0'\nassert solution('''\n1 4\nx.x\n''') == '1'\nassert solution('''\n2 4\nx.x\n''') == '2'\nassert solution('''\n3 4\nx.x\n''') == '0'\nassert solution('''\n2 4\nx.x\n''') == '2'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4\\n0\\n5\\n'\n\nassert solution('''\n3 3\nx..\n...\n...\n3\n1 2\n1 1\n2 2\n''') == '10\\n0\\n16\\n'\n\nassert solution('''\n4 4\nx..\n...\n...\n4\n1 2\n1 1\n3 3\n''') == '16\\n0\\n16\\n'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4.114 -2.842\"\nassert solution(\"2\") == \"6.297 -0.784\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n3\\n4\\n5 3\") == \"4.114 -2.842\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n3\\n4\\n5 3\") == \"4.114 -2.842\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n3\\n4\\n5 3\") == \"4.114 -2.842\"\nassert solution(\"3\\n5\\n3\\n4\\n5 3\\n3\\n4\\n5 3\") == \"4.114 -2.842\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.693'\nassert solution('5') == '0.809'\nassert solution('4') == '2.842'\nassert solution('3') == '1.118'\nassert solution('5') == '6.297'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n3\\n5\\n3\\n4\\n5\\n3') == '1.118 2.037\\n6.297 -0.784\\n5.000 3.000'\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1.118 2.037\"\nassert solution(\"2\") == \"4.114 -2.842\"\nassert solution(\"6\") == \"6.297 -0.784\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3.000 3.000'\nassert solution('5') == '4.000 -0.000'\nassert solution('3') == '3.000 3.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n5\\n3') == '4.114 -2.842'\nassert solution('3\\n3\\n3') == '1.118 2.037'\nassert solution('3\\n5\\n4') == '5.000 3.000'\nassert solution('10\\n30\\n20\\n50\\n60\\n40\\n90\\n50\\n60\\n70') == '11.438 -2.842\\n31.828 -0.784'\nassert solution('4\\n-5\\n2\\n0\\n5\\n0\\n10\\n10') == '4.107 -0.074\\n10.000 -0.001'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n3\n4\n5 3''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('''3\n10\n10\n8\n6''') == '10.000 10.000\\n8.000 0.000\\n6.000 10.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5\n3\n4\n5 3\n''') == '4.114 -2.842'\nassert solution('''\n6\n3\n3\n3\n5 3\n4\n4\n4\n5 3\n5 3\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n4\n4\n5 3\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\", \"\"\"\nSample Input:\n3\n4\n3\n1\n5 3\n\nSample Output:\n1.087 -2.982\n5.000 3.000\n5.000 3.000\n\"\"\"\"\n\nassert solution(\"\"\"\n5\n3\n3\n4\n5 3\n\"\"\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\\n\", \"\"\"\nSample Input:\n3\n4\n3\n1\n5 3\n\nSample Output:\n1.087 -2.982\n5.000 3.000\n5.000 3.000\n\"\"\"\"\n\nassert solution(\"\"\"\n3\n4\n3\n1\n5 3\n\nSample Output:\n1.087 -2.982\n5.000 3.000\n5.000 3.000\n\"\"\") == \"1.087 -2.982\\n5.000 3.000\\n5.000 3.000\\n\", \"\"\"\nSample Input:\n3\n4\n3\n1\n5 3\n\nSample Output:\n1.087 -2.982\n5.000 3.000\n5.000 3.000\n\"\"\"\"\n\nassert solution(\"\"\"\n5\n3\n3\n1\n5 3\n\nSample Output:\n1.087 -2.982\n5.000 3.000\n5.000 3.000\n\"\"\") == \"1.087 -2.982\\n5.000 3.000\\n5.000 3.000\\n\", \"\"\"\nSample Input:\n3\n4\n3\n1\n5 3\n\nSample Output:\n1.087 -2.982\n5.000 3.000\n5.000 3.000\n\"\"\"\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"2 3 5 7\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 5') == '8'"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 5\n2 3 5 7\n2\n3\n5\n6\n8''') == '13'\nassert solution('''4 5\n1 2 3 4\n1\n4\n6\n7\n8\n''') == '6'\nassert solution('''4 5\n7 5 3 2\n7\n6\n5\n4\n3\n''') == '6'\n\n\"\"\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n2\n''') == '3'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n3 4 2\\n5\\n6\\n7\\n8\") == \"10\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n7\\n8\") == \"8\"\nassert solution(\"4 5\\n2 3 5 7\\n3\\n5\\n6\\n7\\n8\") == \"13\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2\\n1') == '3'\nassert solution('5\\n2 3 5 7') == '7'\nassert solution('2\\n2') == '5'\nassert solution('5\\n2 3 5 7') == '8'\nassert solution('3\\n1') == '3'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '5'\nassert solution('5') == '8'\nassert solution('10') == '13'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"2 3 5 7\") == \"5\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 5 6 7\") == \"8\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '13'\nassert solution('''4\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '8'\nassert solution('''6\n1 2 3 4 5 6\n1\n2\n3\n4\n5\n6\n''') == '2'\nassert solution('''3\n1 2 3\n1\n2\n3\n''') == '2'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n5 4\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 2\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n\"\"\") == \"0\"\nassert solution(\"\"\"\n10 10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n\"\"\") == \"0\"\nassert solution(\"\"\"\n8 2\n0 1\n1 2\n1 3\n1 4\n1 5\n1 6\n2 3\n2 4\n2 5\n2 6\n3 4\n3 5\n3 6\n4 5\n4 6\n5 6\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n''') == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    6 3\n    0 1\n    1 2\n    2 3\n    2 4\n    1 5\n    1 2 5''') == '0'\nassert solution('''\n    6 3\n    0 1\n    1 2\n    2 3\n    2 4\n    1 5\n    0 1 2''') == '1'\n'''\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 3\") == \"0\""
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 2') == '2'\nassert solution('7 7') == '5'"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n') == '0'\nassert solution('6 10\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n') == '1'\nassert solution('6 1000\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n') == '2'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('1 4\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('2 4\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('5 4\\n0 1\\n1 2\\n2 3\\n3 4') == '1'"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n''') == '0'\nassert solution('''\n6 5\n1 2\n1 3\n3 4\n3 5\n5 6\n''') == '3'\nassert solution('''\n6 4\n1 2\n1 3\n2 4\n2 3\n2 5\n5 6\n''') == '2'\nassert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5 \n''') == '1'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"106\\n107\\n71\\n\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\nSample Input:\n10 1\n10 2 5 C1 L1 C1 U1 C1\n10 3 1 C1\n10 4 2 5 C1 L1 C1 U1 C1\n10 5 1 C1\nSample Output:\n106\n107\n71\n''') == '106'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 5 C1 L1 C1 U1 C1\\n70 3 1 C1\\n') == '107\\n'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '4 6 9 12'\nassert solution('1 1 5 1 1') == '1 1 5 1 1'\nassert solution('1 1 5 1 1') == '1 1 5 1 1'"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 1 5 L1 C1\n10 1 2 C1\n70 3 1 C1\nSample Input:\n1\n2\nSample Output:\n0\n''') == '0'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 5 C1 L1 C1 U1 C1') == '106'\nassert solution('1 1 5 C1 L1 C100 U1 C1') == '107'\nassert solution('70 3 1 C1') == '71'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106\\n107\\n71\\n'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106\\n107\\n71\\n'\nassert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106\\n107\\n71\\n'\nassert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106\\n107\\n71\\n'\nassert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106\\n107\\n71\\n'\nassert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106\\n107\\n71\\n'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"107\"\nassert solution(\"\"\"\n3 2\n30 20 L1 U2 L1 C1\n50 10 U1 L1 C1\n80 L2 U1 L1 C1\n\"\"\") == \"97\"\nassert solution(\"\"\"\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106\""
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"51\"\n\nprint(solution())\n\n\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    AA\n    ''') == '51'\n'''\n\n'''"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AA') == 'A'\nassert solution('AAAB') == 'AAABAABABAB'\nassert solution('AAABBB') == 'AAABAABBAABAA'\nassert solution('AAAAAAAAAA') == 'AAAAAAAAAA'\nassert solution('AAA') == 'AA'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AA\") == \"1\"\nassert solution(\"CC\") == \"0\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AA') == 51\nassert solution('AAB') == 0\nassert solution('AB') == 2\nassert solution('ABA') == 1\nassert solution('ABAB') == 1\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AA') == '2'\n\nfor n in range(2, 201):\n    if is_palindromic(n):\n        print(n)\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A'*2*200) == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"a\") == 1\nassert solution(\"ab\") == 2\nassert solution(\"abc\") == 6\nassert solution(\"aba\") == 5\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AA') == '5'\nassert solution('AAABBCCDD') == '20'\n'''\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABABA\") == \"10\"\nassert solution(\"BAAB\") == \"5\""
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n\") == \"1 2\"\nassert solution(\"1\\n1 9 5 7\\n9 5 7\\n1 2 6\\n\") == \"\""
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'no ties'\nassert solution('3') == 'no ties'\nassert solution('1') == 'no ties'\nassert solution('4') == '1 3'\nassert solution('12') == '1 3'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\\n') == '1 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 3'\nassert solution('''3\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n26 27 28 29 30\n31 32 33 34 35\n36 37 38 39 40\n41 42 43 44 45\n''') == '1 5'\nassert solution('''5\n2\n4 1 3 4\n5 4 1 2\n3 1 4 3\n2 1 5 2\n1 3 5 1\n''') == '1 3'"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1 2\"\nassert solution(\"\"\"\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n3 14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n\"\"\") == \"1 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'no ties'\nassert solution('3') == '1 2'\nassert solution('4') == 'no ties'"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\") == \"1 2\"\nassert solution(\"2\\n3\\n1\\n6\\n4\") == \"6 1\"\nprint('Tests passed')\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'no ties'\nassert solution('3') == '2 1'\nassert solution('4') == 'no ties'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'no ties'\nassert solution('1') == 'no ties'\nassert solution('3') == '1 2'\nassert solution('4') == 'no ties'\nassert solution('2') == 'no ties'"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"no ties\"\nassert solution(\"\\n\".join([\"1 2 3 4\", \"1 2 3 4\", \"1 2 3 4\"])) == \"1 2\"\nassert solution(\"\\n\".join([\"3 4\", \"1 2 3 4\", \"1 2 3 4\"])) == \"1\"\nassert solution(\"\\n\".join([\"5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\", \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\", \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\", \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\", \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"])) == \"1\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 2 1\n1 2 3\n1 2 3\n\"\"\") == \"0\""
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('5') == '0'\nassert solution('2 2 2 2') == '1'\nassert solution('1 1 1 1 1') == '4'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '0'\nassert solution('5 3 1 2 1') == '3'\nprint(solution(input()))\nprint(solution(input()))\nprint(solution(input()))\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n5 5 5\\n1 2 3\\n2 2 1\\n1 2 3') == '1'\nassert solution('3\\n5 5 5\\n1 2 3\\n2 3 3\\n1 2 3') == '2'\nassert solution('3\\n5 5 5\\n1 2 3\\n2 3 2\\n1 2 3') == '3'\nassert solution('3\\n5 5 5\\n1 2 3\\n2 3 3\\n3 2 2\\n1 2 3') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 3\\n1 2 3') == '0'\nassert solution('3\\n2 1\\n1 2 3') == '1'\nassert solution('5\\n5 3 6 1 2\\n1 2 3\\n2 3 3\\n3 3 2\\n3 2 2\\n4 4 1\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 1\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n4 4 1\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n4 4 1\\n1 2 3\\n2 3 3\\n3 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n3 2 2\\n2 3 2\\n3 2 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n2 3 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n3 2 2\\n1 2 3\\n2 3 3\\n3 3 2\\n2 3 2\\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n3 2 1\n1 2 3\n1 2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n2 2 1 3 3\n1 1 3 3\n1 2 2 3\n1 1 3 3\n1 1 3 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n3 2 1\n2 1 2\n1 1 1\n\"\"\") == \"1\""
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3\n    3 2 1\n    1 2 3\n    1 2 3\n    ''') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('4\\n1 5 3 4\\n1 5 3 4\\n1 5 3 4\\n1 5 3 4') == '2'\nassert solution('3\\n1 5 3 4\\n1 5 3 4\\n1 5 3 4\\n1 5 3 4') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n6 2 3\\n10 2 3\\n16 3 4\\n') == '0.2\\n0.171428571429\\n'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 2 3\n2 2 3\n2 2 3\n''') == '0.2\\n0.171428571429\\n'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\\n'''\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n2 5 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.221428571429'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n6 2 3') == '0.4'\nassert solution('5\\n1 2 3\\n10 2 3\\n16 3 4') == '0.2'\nassert solution('8\\n2 3\\n4 3\\n1 4\\n1 4\\n8 3\\n9 2\\n7 4\\n6 3') == '0.2'\nassert solution('100\\n8 4\\n9 4\\n10 4\\n10 4\\n10 4\\n10 4\\n8 4\\n9 4\\n10 4') == '0.25'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n'''\n) == '0.4\\n0'"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.4\\n0.2\\n0.171428571429\\n0.228571428571'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0.2'\nassert solution('2.1') == '0.2'\nassert solution('2.01') == '0.2'\nassert solution('2.1') == '0.2'\nassert solution('1000000000') == '0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\") == \"0.4\\n0\"\nassert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n8 4 6\\n1 4 2\\n3 4 4\\n6 7 7\") == \"0.2\\n0\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n''') == '0.2\\n0\\n0.171428571429\\n0.228571428571'\nprint(solution('''4\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n'''))\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3 = 3'\nassert solution('5') == '5 = 5'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 2\n3 4\n-5 6\n''') == '3 * 4 = 12\\n1 + 5 = 6\\n4 - 5 = -1\\n-1 - -6 = 5\\n'\n\n\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3 * 3 = 9\\n'\nassert solution('2') == '3 * 3 = 9\\n'\nassert solution('4') == '3 * 3 = 9\\n'\nassert solution('3') == '3 * 3 = 9\\n'\nassert solution('5') == '3 * 3 = 9\\n'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\\n\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n-1 2\\n-2 3\\n-3 4\\n-4 5\\n\") == \"1 + 2 = 3\\n3 * 4 = 12\\n5 - 6 = -1\\n-1 - 2 = -3\\n-2 - 3 = -4\\n-3 - 4 = -5\"\nprint('All tests passed!')\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n4\\n-1\\n') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('2\\n4\\n6\\n-1\\n') == '4 * 4 = 16\\n6 + -1 = 5\\n4 - 6 = -2\\n-1 - -1 = 0'\nassert solution('3\\n5\\n7\\n-1\\n') == '5 * 5 = 25\\n7 + -1 = 6\\n5 - 7 = -2\\n-1 - -1 = 0'\nassert solution('4\\n6\\n8\\n-1\\n') == '6 * 6 = 36\\n8 + -1 = 7\\n6 - 8 = -3\\n-1 - -1 = 0'"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\n\nassert solution(\"5\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\nimpossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\""
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 5\n3 3\n4 5\n-1 -6''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 5\n3 3\n4 5\n-1 -6\n''') == '3 * 3 = 9\\n1 + 5 = 6\\n4 - 5 = -1\\n-1 - -6 = 5\\n'''\n\n\"\"\""
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 + 3 = 6\"\nassert solution(\"4\") == \"3 * 3 = 9\"\nassert solution(\"5\") == \"4 - 5 = -1\"\nassert solution(\"6\") == \"5 - -6 = 5\"\nassert solution(\"7\") == \"impossible\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('2\\n2\\n') == '0'\nassert solution('2\\n3\\n') == '1'\nassert solution('3\\n1\\n') == '1'\nassert solution('5\\n5\\n') == '1'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1''') == '4\\n1\\n4\\n6\\n0'\nassert solution('''3 3\n1 2\n2 1\n2 3''') == '1\\n2\\n2\\n3\\n0'\nassert solution('''5 5\n1 2\n1 1\n1 4\n1 6\n1 5\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8''') == '1\\n1\\n1\\n1\\n1\\n2\\n3\\n4\\n4\\n5\\n5\\n6\\n6\\n7\\n7\\n8\\n8\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"4\"\nassert solution(\"5 3\") == \"4\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '4\\n1\\n4\\n6\\n0'\nassert solution('''3 5\n1 8\n1 2\n3 4\n2 4\n2 5\n''') == '1\\n1\\n1\\n1\\n1\\n'\nassert solution('''4 5\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '4\\n1\\n4\\n6\\n0\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4\\n1\\n4\\n6\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"1 8\\n\"\n    \"2 3\\n\"\n    \"2 8\\n\"\n    \"5 8\\n\"\n    \"5 9\\n\"\n    \"3 6 6\\n\"\n    \"1 7 4\\n\"\n    \"1 3 1\\n\"\n) == \"4\\n1\\n4\\n6\\n0\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2\\n1\\n4\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"1\\n2\\n4\""
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '4'\nassert solution('1 8') == '1'\nassert solution('2 3') == '2'\nassert solution('2 8') == '1'\nassert solution('5 8') == '0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '0 1 4 5 6'"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 2 1\n''') == '1'\n\nassert solution('''\n6\n4 2 3 1 5 2\n''') == '4'\n\nassert solution('''\n3\n1 2 3\n''') == '1'\n\nassert solution('''\n4\n5 3 1 2\n''') == '3'\n\nassert solution('''\n5\n4 3 1 2 5\n''') == '5'"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"4\""
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution() == \"0\"\nassert solution() == \"1\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3 3 5') == '2'\n\"\"\""
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 3 1') == '3'\nassert solution('1 2 1 1') == '2'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '4'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('1 2 3 4') == '4'\nassert solution('1 1 2 3 3') == '3'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 5 3 4') == '4'\nassert solution('1 2 3 5 4') == '0'\nassert solution('1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 31 2\n20 60\n50 90''') == '4 3'\n\nassert solution('''1 30 3\n40 90\n50 50\n60 60\n70 70\n80 80\n90 90''') == '3 3'\n\nassert solution('''1 35 5\n45 60\n55 55\n65 65\n70 70\n75 75\n80 80\n90 90''') == '3 3'\n\nassert solution('''1 20 8\n18 40\n10 14\n17 17\n20 20\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55''') == '0 1'\n\nassert solution('''1 23 7\n28 29\n31 32\n36 37\n41 42\n47 43\n51 45\n56 47\n61 47\n65 65\n70 71\n75 74\n80 79\n85 86\n90 90''') == '1 4'"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 31 2\n20 60\n50 90\n20 60\n50 90\n50 90\n20 60\n50 90\n50 90\n50 90\n50 90''') == '3 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2 2'\nassert solution('4 1') == '4 2'\nassert solution('5 1') == '2 3'\nassert solution('9 3') == '2 4'\n\n'''\n\n##############################################################\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 30 2\n10 60\n30 90\n\"\"\") == \"0 2\"\nassert solution(\"\"\"\n1 30 2\n10 90\n30 60\n\"\"\") == \"0 1\"\nassert solution(\"\"\"\n1 50 2\n30 60\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n1 50 2\n20 60\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n1 50 2\n10 60\n30 90\n\"\"\") == \"0 2\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 30 2') == '3 4'\nassert solution('1 2') == '2 2'\nassert solution('1 1') == '1 1'\nassert solution('1 1 1') == '1 1 1'\n\"\"\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1 30 2\\n20 60\\n50 90\\n\") == \"4 3\\n\"\nassert solution(\n    \"2 100 2\\n30 60\\n90 100\\n\") == \"2 4\\n\"\nassert solution(\n    \"2 100 2\\n20 60\\n90 100\\n\") == \"1 2\\n\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2 3'"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 31 2\\n\"\n    \"20 60\\n\"\n    \"50 90\"\n) == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('1 2 3\\n20 21 23\\n50 60 90') == '2 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\\n\") == \"4 3\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 1\n1 2 1''') == '3'\n\nassert solution('''3 2 2\n3 3\n1 1\n1 2''') == '6'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    2 2 1\n''') == '3'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 1\n1 3\n2 4\n''') == '3'\n\nassert solution('''5 3 2\n1 5\n2 4\n3 6\n''') == '4'\n\nassert solution('''2 2 4\n2 3\n3 4\n''') == '0'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 2 2\") == \"6\"\n\"\"\"\n\nred, white, d = map(int, stdin.split())\n\nk = 0"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('2 5 1') == '6'\nassert solution('8 6 1') == '10'\nassert solution('8 1 1') == '9'\nassert solution('4 5 1') == '9'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2 1\n2 1 3''') == '3'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"3\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"2 1 1\") == \"1\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1\\n') == '3'\nassert solution('3 2 2\\n') == '6'\nassert solution('3 3 1\\n') == '6'"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 1''') == '3'\nassert solution('''2 2 2''') == '6'\nassert solution('''2 2 3''') == '8'\nassert solution('''2 5 3''') == '11'\nassert solution('''2 10 3''') == '34'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('1 2 1') == '3'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1341 2412 1200 3112 2391\n''') == '3 1'\n'''\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3 1'\nassert solution('3') == '2 3'\nassert solution('4') == '3 0'\nassert solution('2') == '1 2'\nassert solution('5') == '4 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n1341 2412 1200 3112 2391\"\n) == \"3 1\"\n\nassert solution(\n    \"2\\n3 2 2\"\n) == \"2 2\"\n\nassert solution(\n    \"4\\n4 2 2 4\"\n) == \"4 2\"\n\nassert solution(\n    \"5\\n2 1 1 1 1\"\n) == \"2 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391\\n') == '3 1'\n\n'''\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1341 2412 1200 3112 2391\n6\n21 12 12 23 42\n7\n2 3 4 5 6 8 9\n''') == '3 1'\nassert solution('''\n5\n1341 2412 1200 3112 2391\n3\n2 4 5 6 8 9\n''') == '0 2'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n') == '1 1\\n'\nassert solution('5\\n1231 2124 1231 2124\\n') == '2 1\\n'\nassert solution('5\\n1122 0 2 0 0 0\\n') == '2 0\\n'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('4\\n10 20 30 40') == '0 1'\nassert solution('5\\n1000 1000 1000 1000 1000') == '0 1'\nassert solution('5\\n1000000 1000000 1000000 1000000 1000000') == '0 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 1'\nassert solution('10') == '2 2'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n1\n1\n1\n1\n\"\"\") == \"1 1 1\"\nassert solution(\"\"\"\n2\n1341\n2412\n\"\"\") == \"0 2\"\nassert solution(\"\"\"\n5\n1341 2412 1200 3112 2391\n2391\n\"\"\") == \"3 1\"\nassert solution(\"\"\"\n5\n1\n1341\n2412\n\"\"\") == \"1 1 1\""
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3 1'\nassert solution('4') == '2 1'\n\"\"\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '7'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '10'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '10'\nassert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '20'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\"\nassert solution(\"2 50\\n3 50\\n1 30\\n2 10\\n2 50\\n3 30\\n3 50\\n4 20\\n3 10\\n3 20\\n4 30\\n5 50\\n\") == \"105\"\nassert solution(\"1 1\\n1 1\\n\") == \"1\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 20') == '6'\nassert solution('3 5') == '10'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 20\") == \"6\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"1 3 7\") == \"4\"\nassert solution(\"2 1 1\") == \"2\"\nassert solution(\"2 3 2\") == \"3\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([10, 20]) == '6'\nassert solution([3, 5]) == '9'\nassert solution([1, 3, 7]) == '7'\nassert solution([2, 1, 1]) == '2'\nassert solution([2, 3, 2]) == '5'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\") == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('1\\n2\\n3\\n1\\n2\\n3\\n') == '1'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n3\\n1\\n2\\n3\\n1\\n1\\n') == '2'\nassert solution('1000\\n9999\\n4\\n1\\n1\\n1\\n1\\n1\\n') == '1'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 20') == '6'\nassert solution('3 5') == '12'\nassert solution('3 5') == '12'\nassert solution('5 5') == '12'\nassert solution('5 5') == '12'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\nprint(\"You passed all tests!\")\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 10\") == \"6\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"2 10\") == \"7\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 ab b') == '0 1'\nassert solution('1 b') == '-1 0'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 ab b\n1 b\n''') == '0 1'\nassert solution('''\n1 ab ab\n2 ab b\n''') == '2 1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0 1\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 ab b') == '0 1'\nassert solution('3 ab b') == '0 1 -1'\n\n\"\"\""
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nab b\\n1 b\\n') == '0 1'\nassert solution('2\\nab b\\n1 b\\n') == '-1 -1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 ab b\\n1 b') == '0 1'\n\"\"\"\n\nimport sys\nimport functools\nsys.setrecursionlimit(10**6)"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 ab b') == '0 1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 ab b\\n1 b\"\n) == \"0 1\\n-1 0\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-1 0'\nassert solution('2') == '0 1'\nassert solution('2 ab b') == '1 0 1'\nassert solution('2 aab b') == '1 1 0 1'\nassert solution('2 ab b c') == '2 2 0 1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 ab b\n1 b\n''') == '1 0"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n''') == '3'\nassert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n''') == '1'\nassert solution('''\n1 1 2\n1 1 2\n1 1 2\n2\n''') == '0.25'\n\"\"\"\n    print(int(a[0]) * b)\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3'\nprint(solution(input()))\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\") == \"1\\n3\""
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '3'\nassert solution('2 3\\n1 3 2\\n1') == '2'\nprint(\"You're doing it!\")\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\"\nassert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n1\"\n\"\"\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\\n3\"\nassert solution(\"2 1\\n1\\n\") == \"1\\n1\"\nassert solution(\"3 3\\n1 2 2\\n1 2 2\\n1 2 2\\n\") == \"0.5\\n0.5\\n0.5\\n\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1'\nassert solution('10 9\\n1 1 2\\n2\\n1 1 2\\n2') == '4'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '1\\n3'\n\n\"\"\"\n\nn, q = map(int, input().split())\n\nfor _ in range(q):\n    u, v = map(int, input().split())\n    if (u % 2) + (v % 2) == 0:\n        print(0)\n    else:\n        print(int((1 / 2) * (n - 1) * (n - 1)) + int((1 / 2) * (u + 1) * (v + 1)) % 1000000007)"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\") == \"1\"\nassert solution(\"2 4\\n1 1 2\\n2\") == \"3\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 5 2\n5 0 4\n2 4 0\n''') == '7'"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '7'\nassert solution('2') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 5 2\n5 0 4\n2 4 0\n''') == '7'\nassert solution('''\n4\n1 1 2 4\n5 3\n1 3 5\n1 4\n''') == '7'\n\n'''"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 5 2\n5 0 4\n2 4 0\n''') == '7'\nassert solution('''\n3\n0 5 2\n0 0 4\n2 4 0\n''') == '5'\nassert solution('''\n3\n0 5 2\n2 4 0\n4 0 1\n''') == '2'\n'''\nTime Limit Exceeded\n'''"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n0 5 2\n5 0 4\n2 4 0\n''') == '7'\n\nassert solution('''\n3\n5 0 4\n0 5 2\n2 4 0\n''') == '9'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('8') == '3'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == '7'\n\n\"\"\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5\n1 1 1\n3 3 2\n3 1 1\n1 3 3\n2 3 1\n\"\"\") == \"11\"\nassert solution(\"\"\"\n3\n2 1 2\n1 2 3\n2 3 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3\n0 1 2\n1 0 3\n2 3 0\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n3 1 1\n3 1 3\n2 1 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n1\n3\n4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n6\n10 10 20 50 20\n20 10 20 30 50\n30 20 20 50 20\n30 20 20 50 50\n30 20 20 50 20\n\"\"\") == \"13\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('{[1,2,3,4,5,6,7,8]}') == '1'\nassert solution('{[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100}') == '25'\nassert solution('{[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('13') == '6'"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    2\n    3 5 7\n    1 2 3 4 5 6 7 8\n''') == '8'"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('5000000000000') == '25'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '4\\n2\\n5\\n3\\n6\\n'\n) == '8'\nassert solution(\n    '1000000000000000'\n) == '1000000000000000'\nassert solution(\n    '10000000000000001'\n) == '10000000000000001'\nassert solution(\n    '10000000000000010'\n) == '10000000000000010'\nassert solution(\n    '10000000000000011'\n) == '10000000000000011'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('1099511627776') == '8'\n\n\"\"\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000000000000') == '8'\nassert solution('0') == '1'\nassert solution('1000000000000') == '10'\nassert solution('0') == '1'\nassert solution('1000000000000') == '10'\n\"\"\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('1234') == '4'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"8\"\nassert solution(\"10\") == \"0\"\nassert solution(\"100\") == \"24\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('1099511627776') == '8'"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3\nx..\n.x.\nx.x\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3\nx..\n.x.\nx.x\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4\nx.x\nxx\nx.x\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 4\nxx.\nx.x\nxx.\nx.x\nxx.\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4\nx.x\nx.x\nx.x\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 2 3') == '1'\nassert solution('4 5 6') == '2'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2'\nassert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2'\nassert solution('''\n3 2\nx.x\nx.x\n''') == '1'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2'\nassert solution('''\n4 4\nx.x.\nx.x.\n.x.x\n''') == '2'"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\n\nassert solution('10 10') == '3'\n\nassert solution('2 1') == '0'\n\nassert solution('3 1') == '1'\n\nassert solution('3 2') == '0'"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\nx..\n.x.\nx.x\n''') == \"2\"\nassert solution('''\n4\nxx.\nx..\nxx.\nx.x\n''') == \"0\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\\n5\\n6\\n\"\nassert solution(\"10\\n1 2 3 4 5\\n1 2 3 4 5\") == \"5\\n4\\n5\\n6\\n\"\nassert solution(\"1\\n1 2 3 4 5\\n1 2 3 4 5\") == \"5\\n-1\\n\"\nassert solution(\"1\\n2 2 2 2 2\") == \"2\\n-1\\n\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '9'\nassert solution([\n    '1 2 3',\n    '2 5 2',\n    '3 0 0',\n    '4 2 4',\n    '5 3 0'\n]) == '9'\nassert solution([\n    '2 2',\n    '1 1',\n    '0 0'\n]) == '0'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n''') == '9\\n-1\\n5\\n6\\n'\n\nassert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n''') == '-1\\n5\\n6\\n'\n\nassert solution('''\n5\n0 0 0\n0 0 0\n0 0 0\n1 2 3\n4 5 6\n''') == '15\\n-1\\n5\\n6\\n'\n\nassert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n''') == '9\\n-1\\n5\\n6\\n'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n\") == \"9\\n-1\\n5\\n6\\n\"\nassert solution(\"3\\n5 6\\n3 0 0\\n4 2 4\\n5 3 0\\n\") == \"-1\\n-1\\n6\\n\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '-1'\nassert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('5') == '9'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '9'\nassert solution('3 3 2') == '5'\nassert solution('3 1 2') == '-1'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '9\\n'\nassert solution('10\\n') == '-1\\n'\nassert solution('100\\n') == '5\\n'\nassert solution('101\\n') == '-1\\n'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"9\\n-1\\n5\\n6\\n\", solution.__doc__\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '9'\nassert solution([1, 3, 2]) == '9'\nassert solution([2, 5, 2]) == '6'\nassert solution([3, 0, 0]) == '-1'\nassert solution([4, 2, 4]) == '6'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1 3 2\") == \"9\"\nassert solution(\"2 5 2\") == \"6\"\nassert solution(\"3 0 0\") == \"5\"\nassert solution(\"4 2 4\") == \"6\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20''') == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '91'\nassert solution('1 1 40 30 20 10') == '91'\nassert solution('3 1 95 95 95 10') == '120'\nassert solution('2 1 95 50 30 20') == '37'\nassert solution('5 2 9 94 83 3 7') == '25'"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '117'\nassert solution('''5\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '109'\n''')"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '91'\nassert solution('1') == '0'\nassert solution('10') == '118943248'\nassert solution('3') == '764'\n\"\"\"\n\nfrom math import inf\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"91\"\n\nassert solution(\"\"\"\n4\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"126\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    2\n    1 1 40 30 20 10\n    3 1 95 95 95 10\n    2 1 95 50 30 20\n    \"\"\"\n) == \"91\"\n\"\"\"\n--- Part Two ---\nSeeing the best level possible for you, you move on to the next level by replacing the list of levels by one level too high (with a level number higher than all others).\n\nThe first item in the list is always the shortcut item.\n\nBefore you can start playing the game, you need to replace an item in the list with another item of your choosing. To do this, you need to choose a number, corresponding to an item in the list.\n\nYou can only choose the item in the list that has the shortest completion time.\n\nWhat is the number of items in the list that you need to replace in order to replace the first item in the list with the shortcut item again?\n\n-----Input-----\nThe input consists of:\n - One line containing an integer $n$ ($1 \\le n \\le 2500$), the number of levels.\n - $n$ lines, describing the levels.\n\nThe $i$th such line starts with two integers $x_ i$ and $s_ i$ ($0 \\le x_ i \\le n$, $1 \\le s_ i \\le 10^9$), the shortcut item for level $i$ and the completion time for level $i$ when using the shortcut.\n\nThe remainder of the line has $n+1$ integers $a_{i,0}, \\ldots, a_{i,n}$ ($10^9 \\ge a_{i,0} \\ge a_{i,1} \\ge \\ldots \\ge a_{i,n} \\ge s_ i$), where $a_{i,j}$ is the completion time for level $i$ when playing by the rules using item $j$.\n\n-----Output-----\nOutput the number of items in the list that you need to replace in order to replace the first item in the list with the shortcut item again.\n\n-----Part Two---\nFind the number of items in the list that you need to replace to replace the first item in the list with the shortcut item again.\n\nSample Input:\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\nSample Output:\n2\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '15'\nassert solution('2') == '15'\nassert solution('3') == '15'\n'''"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n0\\n2\\n1 2\\n') == '3'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n15 20\n0\n1 1\n''') == '15'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n3\n1 2 3\n0\n0 1\n''') == '0'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '15'\nassert solution('15 20') == '15'\nassert solution('0') == '0'"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0\n1 1\n''') == '15'\nassert solution('''\n1\n0\n''') == '1'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n') == '15'\nassert solution('2\\n') == '30'\nassert solution('10\\n') == '60'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n15 20\n0\n1 1\n''') == \"15\"\n\nassert solution('''\n2\n10 5\n1 1\n''') == \"20\"\n\nassert solution('''\n3\n10 2\n1 1\n2 2\n''') == \"20\"\n\nassert solution('''\n3\n20 10\n1 1\n2 2\n''') == \"20\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n15 20\n0\n1 1\n''') == '15'\n\nassert solution('''\n2\n8 9\n1 1\n''') == '10'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 1, 375, 2, 5, 283]) == \"impossible\"\nassert solution([5, 4, 3, 1, 375, 2, 5, 283]) == \"3750\"\nprint(solution([\"3\", \"1\", \"375\", \"2\", \"5\", \"283\"]))\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n2 5 283\n3 4 98\n3 4 98\n3 4 98\n''') == 'impossible', 'First'\nassert solution('''\n5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible', 'Second'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n3 1 375') == 'impossible'\nassert solution('2 5 283\\n1 4 716\\n3 4 98') == '225'\nprint('Everything Passed')\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == 'impossible'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '4'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"impossible\"\nassert solution(\"2 5 283\") == \"89\"\nassert solution(\"1 4 716\") == \"101\"\nassert solution(\"3 4 98\") == \"498\""
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"impossible\"\nassert solution(\"5 4\") == \"375\"\n\"\"\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 4\n1 2 3\n2 3 5\n3 4 4\n4 5 5\n5 6 9\"\"\") == \"impossible\"\nassert solution(\"\"\"3 4\n2 4 716\n1 2 5\n3 4 98\n4 5 5\n5 6 9\"\"\") == \"0\"\nassert solution(\"\"\"6 4\n1 2 2\n2 3 1\n2 4 6\n3 4 2\n4 4 1\n5 5 3\"\"\") == \"0\"\nassert solution(\"\"\"2 4\n1 2 1\n2 1 1\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == 'impossible'\nassert solution('2 10\\n4 5\\n1 2 3\\n1 1 2\\n') == '0'\nassert solution('2 6\\n5 6\\n3 2 2\\n3 2 2\\n') == 'impossible'\nassert solution('2 6\\n5 6\\n1 2 3\\n1 1 2\\n') == '0'\nassert solution('2 6\\n5 6\\n3 2 2\\n3 2 2\\n') == 'impossible'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible'\nassert solution('''5 3\n1 2 1\n1 3 1\n1 4 1\n2 4 1\n3 4 1\n''') == '5'\nassert solution('''10 4\n1 2 5\n1 3 6\n1 4 3\n1 5 7\n1 6 3\n1 7 2\n2 5 5\n2 6 6\n2 7 5\n3 3 1\n3 4 7\n3 5 1\n3 6 2\n3 7 2\n4 4 2\n4 5 4\n4 6 2\n4 7 3\n5 5 2\n5 6 1\n5 7 1\n6 6 1\n6 7 1\n7 7 1\n7 8 1\n''') == '9'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '12'\nassert solution('3') == '12'\nassert solution('4') == '14'\nassert solution('5') == '13'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.0'\nassert solution('2') == '1.000000000'\n'''\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('100') == '17.222222222'\n\"\"\"\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('10') == '10.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1.000000000'\n\"\"\""
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '1.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('10') == '1.000000000'\nassert solution('100') == '1.000000000'\nassert solution('1000') == '1.000000000'\nassert solution('10000') == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('100') == '1.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\na\nb\nc\n''') == '1.000000000'\n\nassert solution('''1\na\na\na\n''') == '2.000000000'\n\nassert solution('''10\na\na\nb\nc\nb\na\na\nb\nc\nc\nb\na\na\nb\n''') == '1.000000000'\n\"\"\"\n**************************************************************************\n*   Programaci\u00f3n en Python: Sockets                                       *\n*   ======================================================================= *\n*                                                                         *\n*   Para obtener una soluci\u00f3n al problema del caso,                      *\n*   inicia un server que se encarga de recibir mensajes y que genera una   *\n*   respuesta.                                                            *\n*                                                                         *\n*   Autor: David Armando Rodr\u00edguez                                        *\n*   Fecha: 21/11/2020                                                     *\n*                                                                         *\n**************************************************************************\n\"\"\""
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == \"1.000000000\"\nassert solution('1') == \"0.000000000\"\nassert solution('5') == \"1.000000000\"\nassert solution('10000000') == \"1.000000000\"\nassert solution('1000000000') == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.99999999'\nassert solution('10') == '1.0'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 1\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100 3 10') == '115.000000000'\nassert solution('15 99 98') == '115.000000000'\nassert solution('40 3 2') == '115.000000000'\nassert solution('90 10 9') == '130.000000000'\nassert solution('15 99 98') == '130.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3') == '115.000000000'\nassert solution('5\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\\n4 4 4 4') == '118.999999999'\n\n\"\"\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\n\n'''\n$1. Find the maximum possible time you could live\n$2. Take the appropriate pills to maximize time you can live\n'''\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100 3 10') == '115.000000000'\nassert solution('15 99 98') == '139.500000'\nassert solution('40 3 2') == '80.000000000'\nassert solution('90 10 9') == '100.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n1 3 10\n15 99 98\n40 3 2\n90 10 9\n\"\"\") == '115.000000000'\nassert solution(\n    \"\"\"\n10 1 10\n3 5 3\n1 3 7\n\"\"\") == '3.0000000000'\nassert solution(\n    \"\"\"\n5 2 2\n1 1 1\n\"\"\") == '2.0000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100 3 10') == '115.000000000'\nassert solution('15 99 98') == '91.7'\n\n'''\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n50 50 50\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '2 3 10\\n15 99 98\\n40 3 2'\n    ) == '115.000000000'\nassert solution(\n    '1 1 1'\n    ) == '1.000000000'\n\nprint(solution(*(input().split())))"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('3\\n100 1 1\\n100 1 1.5\\n') == '200.000000'\nassert solution('10\\n100 1 1\\n100 1 1.5\\n') == '202.000000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n100 1 1\n100 1 1.5\n''') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"199.500000\"\nprint(solution(input_string))"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '199.500000'\nassert solution('10') == '199.500000'\nassert solution('100') == '199.500000'\n\"\"\"\nimport numpy as np\nfrom math import sin,cos,pi\nn=int(input())\nt=np.array([list(map(int,input().split())) for _ in range(n)],dtype=np.float)\ns=np.array([list(map(int,input().split())) for _ in range(n)],dtype=np.float)\na=np.array([list(map(float,input().split())) for _ in range(n)],dtype=np.float)\ndistance=0\nfor i in range(n):\n    distance+=max(0,t[i]-s[i]*abs(a[i]-a[i-1])+sin(a[i])*abs(t[i]-t[i-1])*abs(s[i]-s[i-1]))\nprint(distance)\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '199.500000'\nassert solution('2') == '199.500000'\n'''\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '199.5000000'\nassert solution('1') == '199.5000000'\nassert solution('10') == '199.5000000'\nassert solution('100 1 1') == '199.5000000'\nassert solution('100 1 1.5') == '199.5000000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2 1\n2 3 4\n3 4 7.5\n2 4 6\n3 2 1\n1 1 1\n4 4 4\n4 5 8\n5 6 5\n3 7 2\n3 6 6\n4 5 5\n4 2 5\n''') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '199.5'\nassert solution('10') == '199.5'"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('1 2\\n1 2 3 4 5 6 7 8 9 10 11 12') == '2'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 3\"\n    \"1 2 3 4 5 6 7 8 9 10 11 12\"\n) == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 4\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"0\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1'\nassert solution('''\n4 6\n5 6 8 9 10 11\n''') == '3'\n\n'''\nSOLUTION:\nThis is a simple DP problem with two states:\n1. The states are all permutations of the integers from 1 to n\n2. The states are the integers from 1 to n\n\nWe can see from the description that if we can find a solution for this problem with any of the two states,\nthen the minimum number of power outputs between the two chips will be equal to the minimum number of power outputs between the two states,\nbecause the states have the same difference.\n\nIf we take the two states, we can see the transition function of the states,\n\nFirst, we have the states 1 to n,\n\nAnd now the transition function is defined as follows:\n\nState 1:\nTo state 2, we have:\n\n1) If the difference of power outputs between the two chips is equal to the difference of power outputs between the states, then the power outputs between the two chips are equal to the power outputs between the two states.\n2) If the difference of power outputs between the two chips is smaller than the difference of power outputs between the states, then the power outputs between the two chips are equal to the difference of power outputs between the states.\n\nThus, the transition function is:\n\nState 1:\nState 2:\nIf the difference of power outputs between the two chips is equal to the difference of power outputs between the states, then the power outputs between the two chips are equal to the power outputs between the two states.\n\nIf the difference of power outputs between the two chips is smaller than the difference of power outputs between the states, then the power outputs between the two chips are equal to the difference of power outputs between the states.\n\nTo get from one state to another state, we can say that we can move the power outputs from one state to another state\n\nSo, the transition function is\n\nState 1:\nState 2:\nIf the difference of power outputs between the two chips is equal to the difference of power outputs between the states, then the power outputs between the two chips are equal to the power outputs between the two states.\n\nIf the difference of power outputs between the two chips is smaller than the difference of power outputs between the states, then the power outputs between the two chips are equal to the difference of power outputs between the states.\n\nSo, we can take the transition function like this:\n\nState 1:\nState 2:\nState 3:\n\nFor example, if we are in state 1 and state 2 and the difference of power outputs between the two chips is 1,\nwe move the power outputs from state 1 to state 3,\nand then we move the power outputs from state 2 to state 3,\nthe transition function is\n\nState 1:\nState 2:\nState 3:\n\nSo, this transition function corresponds to an optimal solution:\n\nIf we are in state 1 and state 2, then we can move the power outputs from state 1 to state 3,\nand then we can move the power outputs from state 2 to state 3,\nin which case the power outputs between state 1 and state 2 and between state 3 and state 1 are equal.\n\nIf we are in state 1 and state 3, we can move the power outputs from state 1 to state 3,\nand then we can move the power outputs from state 3 to state 1,\nin which case the power outputs between state 1 and state 3 are equal.\n\nIf we are in state 2 and state 3, then we can move the power outputs from state 2 to state 3,\nand then we can move the power outputs from state 3 to state 2,\nin which case the power outputs between state 2 and state 3 are equal.\n\nTherefore, if we are in state 1 and state 3, then we can move the power outputs from state 1 to state 3,\nand then we can move the power outputs from state 3 to state 1,\nin which case the power outputs between state 1 and state 3 are equal.\n\nIf we are in state 2 and state 3, then we can move the power outputs from state 2 to state 3,\nand then we can move the power outputs from state 3 to state 2,\nin which case the power outputs between state 2 and state 3 are equal.\n\nAnd if we are in state 1 and state 2, then we can move the power outputs from state 1 to state 2,\nand then we can move the power outputs from state 2 to state 1,\nin which case the power outputs between state 1 and state 2 are equal.\n\nIf we are in state 2 and state 1, then we can move the power outputs from state 2 to state 1,\nand then we can move the power outputs from state 1 to state 2,\nin which case the power outputs between state 2 and state 1 are equal.\n\nSo, we can easily see that the minimum number of power outputs between the two chips is equal to the minimum number of power outputs between the two states,\nwhich means that we can find the optimal solution with one state.\n\nSo, we can print the minimum number of power outputs between the two chips and exit.\n'''\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 2') == '2'\nassert solution('10 4') == '7'\nassert solution('6 2') == '5'\nassert solution('100 4') == '100'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('5 3\\n
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('3 3\\n2 3 4 5 6 7 8 9 10 11 12') == '1'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1 1') == 'Impossible'\nassert solution('13') == '5'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1 1') == 'Impossible'\nassert solution('10 1 5 1') == '10'\nassert solution('20 1 5 1') == '20'\nassert solution('25 1 5 1') == 'Impossible'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 1 1''') == '5'\nassert solution('''13\n3 2 1 1''') == 'Impossible'\nassert solution('''8\n1 1 1''') == '4'\n''')\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3 2 1 1'\n    ) == '5'\n\nassert solution(\n    '10 2 5 1'\n    ) == '10'\n\nassert solution(\n    '100 3 1 1'\n    ) == '100'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"Impossible\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 5 1 1 1\") == \"5\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1 1\") == \"Impossible\"\nassert solution(\"19 10 0 1\") == \"2\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2 1 1''') == 'Impossible'\n\nassert solution('''5\n2 1 1 1\n''') == '3'\n\nassert solution('''5\n1 1 1 1 1\n''') == '3'\n\nassert solution('''10\n2 1 1 1 1 1 1 1 1\n''') == '2'\n\nassert solution('''50\n2 1 1 1 1 1 1 1 1 1\n''') == '3'"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 1 1') == 'Impossible'\nassert solution('13\\n3 2 1 1') == '2'\nassert solution('10\\n3 2 1 1') == '3'\nassert solution('25\\n3 2 1 1') == '5'\nassert solution('100\\n3 2 1 1') == '1'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 1 1\\n') == 'Impossible'"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Impossible\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"9\") == \"10\"\nassert solution(\"100\") == \"19\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aabcad''') == 'yes'\nassert solution('''aba''') == 'no'\nassert solution('''acd''') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aabcad\naba\nacd\n''') == 'yes'\n\n'''"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\n\n\"\"\"\n\nfrom collections import Counter\n\ns = input()\nl = len(s)"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"yes\"\n\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    aabcad\n    aba\n    acd\n    \"\"\"\n) == \"yes\""
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\n\"\"\"\n>>> solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\n\"\"\"\n\"\"\"\n\n############################\n\"\"\""
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == '5'\nassert solution('3 10\\n1 2\\n3 4\\n2 5\\n3 6\\n4 7\\n2 8\\n3 9\\n') == '2'\nassert solution('3 10\\n5 8\\n2 8\\n1 2\\n3 4\\n2 5\\n3 6\\n4 7\\n2 8\\n3 9\\n') == '0'\nassert solution('4 5 10\\n4 2 8 9\\n3 4 3 5\\n3 4 7 10\\n3 1 1 6\\n3 2 4 7\\n2 4 3 5\\n4 2 8 9\\n') == '4'\nassert solution('4 5 10\\n3 1 1 6\\n3 2 4 7\\n3 4 7 10\\n3 1 1 6\\n3 2 4 7\\n2 4 3 5\\n4 2 8 9\\n') == '1'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n4 5 10\n2 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n5 5 10\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n4 5 10\n3 3\n1 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\n\nassert solution('''\n5 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"7\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 1 5') == '5'\nassert solution('5 5 3 6') == '4'\nassert solution('3 4 3 4') == '2'\nassert solution('4 5 1 2') == '2'\nassert solution('10 10 1 2 4') == '2'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5 10') == '5'\nassert solution('3 2') == '2'\nassert solution('3 1 1 6') == '6'\nassert solution('3 4 7 10') == '7'\nassert solution('2 4 3 5') == '4'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"5\"\n\"\"\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n2 4 same\n3 5 same\n''') == '4'\nassert solution('''\n5 2\n2 4 different\n3 5 different\n''') == '0'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '4'\nassert solution('7 5') == '3'\n\"\"\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n2 4 same\n3 5 same\n''') == '4'\nassert solution('''\n4 4\n1 3 same\n2 4 same\n3 5 same\n''') == '3'\nassert solution('''\n5 1\n2 3 same\n4 6 different\n''') == '2'\nassert solution('''\n5 1\n1 4 same\n2 6 different\n3 5 same\n''') == '0'\nassert solution('''\n100 100\n1000 2\n2 5 5\n''') == '735'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\n3 5 same\\n1 3 5 different\\n2 4 different\\n1 3 4 different\") == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'\nassert solution('5 2\\n2 5 same\\n3 4 same') == '4'\nassert solution('5 2\\n2 5 same\\n3 4 different') == '0'\nassert solution('5 2\\n2 5 same\\n3 4 different') == '1'\nassert solution('5 2\\n2 4 different\\n3 4 same') == '0'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2 4 same\n3 5 same\n''') == '4'\n\nassert solution('''\n3\n2 5 true\n3 4 false\n''') == '2'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n2 4 true\n3 5 true\n4 5 true\n''') == '4'\nassert solution('''\n4 2\n2 4 true\n3 5 same\n4 5 true\n''') == '3'\n'''\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    6 4\n    0 1\n    0 2\n    3 4\n    3 5\n    \"\"\") == \"3\"\nassert solution(\"\"\"\n    1 10\n    1 2\n    2 3\n    3 4\n    3 5\n    \"\"\") == \"4\"\nassert solution(\"\"\"\n    5 2\n    0 1\n    1 2\n    2 3\n    4 5\n    4 6\n    \"\"\") == \"5\"\nassert solution(\"\"\"\n    8 2\n    1 4\n    1 7\n    4 7\n    4 3\n    7 5\n    7 6\n    5 6\n    6 7\n    \"\"\") == \"2\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2\\n3 4\\n1 4\\n4 5\\n') == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 4\n0 1\n0 2\n3 4\n3 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 4\n0 1\n0 2\n3 4\n3 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 4\n0 1\n0 2\n3 4\n3 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6 4\n0 1\n0 2\n3 4\n3 5\n3 6\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    '6 4',\n    '0 1',\n    '0 2',\n    '3 4',\n    '3 5'\n]) == '3'\n\nassert solution([\n    '10 1',\n    '0 1',\n    '0 2',\n    '0 3',\n    '0 4',\n    '0 5',\n    '1 6',\n    '2 6',\n    '2 5',\n    '2 4',\n    '2 3',\n    '2 2',\n    '3 7',\n    '4 7',\n    '5 6',\n    '5 5',\n    '5 4',\n    '5 3',\n    '5 2',\n    '5 1',\n    '6 8',\n    '6 7',\n    '6 6',\n    '7 8',\n    '7 7',\n    '7 5',\n    '7 4',\n    '7 3',\n    '7 2',\n    '7 1',\n    '7 0',\n    '8 9',\n    '8 8',\n    '8 7',\n    '8 6',\n    '8 5',\n    '8 4',\n    '8 3',\n    '8 2',\n    '8 1',\n    '8 0',\n    '9 10'\n]) == '8'"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '3'\nassert solution('1\\n0\\n0\\n3\\n4\\n5') == '1'\nassert solution('1\\n0\\n1\\n3\\n4\\n5') == '1'\nassert solution('1\\n0\\n1\\n3\\n4\\n5') == '1'\nassert solution('1\\n0\\n1\\n3\\n4\\n5') == '1'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n6 4\n0 1\n0 2\n3 4\n3 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n0 2\n0 3\n2 3\n3 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2 1\n2 1\n\"\"\") == \"0\""
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == '3'\nprint(solution(*[*map(int, stdin.strip().split())]))\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 4') == '3'\nassert solution('5 2') == '3'\n\n'''\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '10.0'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"1\") == \"0.5\"\nassert solution(\"2\") == \"1.0\"\nassert solution(\"5\") == \"4.0\"\nassert solution(\"2 1\") == \"1.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n') == '9.0\\n6.5\\n2.5\\n'\nassert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nRUU\\n') == '10.0\\n7.5\\n2.5\\n'\nassert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nUUU\\n') == '10.0\\n7.5\\n2.5\\n'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3') == '9.0\\n6.5\\n2.5\\n'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1.0'\nassert solution('4') == '0.5'\nassert solution('5') == '2.0'\nassert solution('6') == '2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n2\\n4\\n3\\n5\\n5\\nLUR') == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5\\n'''\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0.0\"\nassert solution(\"2\") == \"0.5\"\nassert solution(\"3\") == \"0.75\"\nassert solution(\"4\") == \"1.0\"\nassert solution(\"5\") == \"1.25\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '5.0'\nassert solution('1') == '3.0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n3 4 2\nR 2 3\nB 2 1\nB 3 4\n''') == '0'\nassert solution('''\n3 2 2\nB 1 2\nR 3 1\n''') == '0'"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3 2\nB 1 2\nB 2 3\nR 3 1''') == '1'\n\n'''\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\nassert solution(input_string=\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n\") == \"1\"\nassert solution(input_string=\"2 4 1\\nR 2 1\\nB 1\\n\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3\n1 2\n1 3\n''') == \"0\"\n\nassert solution('''\n5 5 3\nR 2 5\nR 3 4\nB 4 6\nR 1 3\nB 1\n''') == \"1\"\n\nassert solution('''\n7 4 4\nB 1 5\nB 2 6\nR 4 1\nR 5 2\nR 6 3\nR 3 7\n''') == \"1\"\n\nassert solution('''\n7 4 4\nB 5 6\nB 1 2\nB 3 4\nR 6 1\nR 5 2\nR 3 4\nR 2 7\n''') == \"0\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\\nB 1 2\\nB 2 3\\nR 3 1\\n\") == \"1\"\nassert solution(\"3 3 2\\nR 3 1\\nR 2 3\\nR 3 1\\n\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\") == \"1\"\nassert solution(\"3 3 1\") == \"0\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 4 1\nR 1 2\nR 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1 2\nR 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 1 2\nR 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 5 2\nR 1 2\nR 2 3\nB 4 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\") == \"0\"\nassert solution(\"5 5 3\") == \"1\"\nassert solution(\"10 5 2\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n4 4 3\nB 1 2\nR 3 1\nB 3 4\nR 4 1\n''') == '0'\nassert solution('''\n4 4 5\nB 1 2\nR 3 1\nB 3 4\nR 4 1\nB 4 5\nR 4 1\n''') == '1'\nassert solution('''\n7 7 1\nB 1 2\nB 2 3\nR 3 4\nB 3 4\nR 4 5\nR 5 6\nB 6 7\n''') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2 3\nB 1 2\nB 2 3\nR 3 1\n1''') == '1', \"Should be 1\"\nassert solution('''5 2 3\nB 1 2\nB 2 3\nR 3 1\n0''') == '0', \"Should be 0\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5'\nassert solution('5') == '5'\nassert solution('4') == '7'\nassert solution('88') == '88'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n5 0 5\n7 0 7\n4\n88''') == '88'\nassert solution('''5\n0 0 0\n5\n0\n7''') == '7'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().rstrip()\n\"\"\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"88\"\nassert solution(\"3\") == \"5\"\nassert solution(\"2\") == \"88\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1 1\n2\n1''') == '2'\n\nassert solution('''4\n1 1 1 1\n1\n1\n1\n1\nSample Output:\n1\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"88\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 0 5\") == \"88\"\nassert solution(\"4\\n88 88 88\\n7 0 7\") == \"7\""
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '5'\nassert solution('5 0 5') == '88'\nassert solution('4') == '4'\nassert solution('88') == '88'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"88\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 3 1 2\\n\"\n    \"2\\n\"\n    \"1 2 2\\n\"\n    \"1 3 1\\n\"\n    \"2 3 3\"\n    ) == \"5\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('1 3 1 2') == '-1'\nassert solution('2 2 2 2') == '2'\nassert solution('1 2 2 3') == '-1'\nassert solution('1 2 3 2') == '2'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 1 2') == '5'\nassert solution('1 5 1 5') == '-1'\nassert solution('10 2 1 1 3 1') == '10'\nassert solution('1 1 1 2') == '-1'\nassert solution('10 4 1 1 3 1') == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 4\") == \"-1\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('5 3 1 2') == '6'\nassert solution('6 3 1 2') == '6'\nassert solution('7 3 1 2') == '-1'\nassert solution('8 3 1 2') == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('7 3 1 2') == '-1'\nassert solution('2 5 1 2') == '3'\n\"\"\""
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\") == \"5\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1 2 2\") == \"2\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '4', 'First'\nassert solution('''\n3\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '-1', 'Second'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '5'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 1 2') == '5'\nassert solution('3 3 1 2') == '-1'\nassert solution('2 5 3 1') == '2'\nassert solution('8 9 4 8') == '11'\nassert solution('1 1 3 3') == '2'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"mirko1\") == \"mirko1\"\nassert solution(\"mirko\") == \"mirko\"\n\"\"\"\n\nimport sys\nimport re\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''mirkoC4nizCC44\nC4''') =='mirkniz'\nassert solution('''mirkoC4nizCC44\nC4''') =='mirkniz'\nassert solution('''mirkoC4nizCC44\nC4''') == 'FRULA'\n\n''') =='mirkniz'"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkC4nizCC44'\nassert solution('mIRKVc4nizCC44') =='mirkvC4nizCC44'\nassert solution('mIRKVnizCC44') =='mirkvnizCC44'\n\"\"\"\n\nstdin = input()\nstdin = stdin.strip()\nstdin = stdin.split()\n\nN = stdin[0]\nM = stdin[1]\n\nchar_list = list(N)\nexplosion_list = list(M)\nexplosion_list.sort()\n\nexplosion_list = list(set(explosion_list))\n\nexplosion_list.sort()\n\nexplosion_list = list(map(int, explosion_list))\n\nexplosion_list = list(map(str, explosion_list))\nexplosion_list.sort()\n\nexplosion_list = ''.join(explosion_list)\n\nprint(f\"{explosion_list}{N}\")\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkniz'\nassert solution('qwerty123456') == 'qwerty1234'\nassert solution('123456789') == '123456789'\nassert solution('pamigotami') == 'pamigotami'\nassert solution('1234567890') == '123456789'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''mirkovC4nizCC44'''\n) =='mirkovniz'\n\nSample Input:\nmirkovC4nizCC44'''\n) =='mirkovCC44'\n\nSample Output:\nmirkovCC44'''\n) =='mirkovCC44'\n\nSample Input 1:\nmirkovC4nizCC44'''\n) =='mirkovCC44'''\n\nSample Output 1:\nmirkovCC44'''\n) =='mirkovCC44'''\n\nSample Input 2:\nmirkovC4nizCC44'''\n) =='mirkovCC44'''\n\nSample Output 2:\nmirkovCC44'''\n) =='mirkovCC44'''\n\nSample Input 3:\nmirkovC4nizCC44'''\n) =='mirkovCC44'''\n\nSample Output 3:\nmirkovCC44'''\n) =='mirkovCC44'''\n\"\"\""
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''mirkovC4nizCC44''') =='mirkovniz'\nassert solution('''mirkovC2aaaa3''') =='mirkova'\nassert solution('''mirkovC4niz4CC44''') =='mirkovniz'\nassert solution('''mirkovC4niz4CC44''') =='mirkovniz'\nassert solution('''mirkovC4niz4CC44''') =='mirkovniz'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"f42\") == \"FRULA\"\nprint('ok')"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\n\nSample Input:\nmirkovc4nizcc44\ncc44\nSample Output:\nmirkovc4nizcc44'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('mirkoCC44') == 'FRULA'\n\nThe input is fine and Mirko likes to play with strings.\n\"\"\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz', '1'\n\nassert solution('C4') == 'C4', '2'\n\nassert solution('C4nizCC44') == 'C4nizCC44', '3'\n\nassert solution('C4nizCC44C4') == 'C4nizCC44C4', '4'\n\nassert solution('mirkoC44nizCC44') =='mirkoC44nizCC44', '5'"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"32\"\n    "
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'\n\nassert solution('''\n5\n1 100\n2 200\n1 250\n3 300\n4 400\n''') == '200'\n\nassert solution('''\n2\n3 100\n4 300\n5 500\n''') == '200'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '32'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'\n\nassert solution('''\n3\n7 3\n35 8\n6 7\n''') == '42'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 65, 45, 10, 60, 25]) == 32\nprint(solution([3, 65, 45, 10, 60, 25]))\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'\n\nassert solution('''\n1\n1\n10\n''') == '20'\n\nassert solution('''\n2\n5 5\n6 10\n''') == '20'\n\nassert solution('''\n3\n3 6\n45 10\n60 25\n''') == '20'\n\nassert solution('''\n2\n3 5\n4 6\n''') == '6'"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"32\"\nassert solution(\"1\\n2\\n3\") == \"32\"\nassert solution(\"1\\n1\\n2\") == \"1\"\nassert solution(\"1\\n1\\n1\") == \"0\"\nassert solution(\"1\\n2\\n1\") == \"1\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    3\n    3 65\n    45 10\n    60 25\n\"\"\") == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '32'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"2\"\nassert solution(\"1 2 1 2 3\") == \"4\"\nassert solution(\"1 2 3 4 1\") == \"5\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n1 2 0 3 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1\n0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10\\n1 2 0 3 1') == '2 1 2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n1 0 2\\n') == '3\\n2\\n'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n2\n3\n0\n1\n\"\"\") == \"3\n\"\"\"])\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n1 2 3\\n2 3 1\\n3 1 2\\n2 1 3\\n4 1 3\\n2 2 1\\n1 4 3\\n0 0 0\\n0 1 2\\n0 0 0\\n2 1 2\\n1 1 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 1\\n2 1 1\\n1 2 1\\n2 1 1\\n2 1 1\\n0 0 0\\n0 1 2\\n0 0 0\\n2 1 2\\n1 1 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n1 2 1\\n2 1 1\\n1 1 2\\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 0 3 1\\n\") == \"3 2\"\nassert solution(\"3\\n1 2 3\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"3\\n1 2 3\\n\") == \"1\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 0 3 1\\n\") == \"2\"\nassert solution(\"5\\n1 2 0 3 1\\n\") == \"1\"\nassert solution(\"5\\n1 2 0 3 1\\n\") == \"3\"\nassert solution(\"5\\n1 2 0 3 1\\n\") == \"2\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 0 3 1\\n') == '3\\n2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 2 0 3 1\n\"\"\") == \"2\"\nassert solution(\"\"\"10\n0 1 2 3 4 5 6 7 8 9\"\"\") == \"7\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n''') == '0'\n\nassert solution('''\n10 8 4\n+ 1 2\n+ 1 2\n+ 2 1\n+ 1 3\n+ 3 2\n+ 1 1\n- 1 3\n+ 1 1\n- 1 1\n- 1 3\n+ 3 1\n- 1 2\n+ 1 1\n- 2 1\n''') == '8'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n''') == '3'\n\nassert solution('''\n2 4 2\n+ 1 2\n+ 1 2\n- 1 3\n- 1 3\n''') == '2'\n\nassert solution('''\n3 4 4\n+ 1 1\n- 1 1\n+ 1 3\n- 1 2\n''') == '3'\n\nassert solution('''\n1 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n''') == '0'\n\nassert solution('''\n6 4 6\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n+ 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n+ 1 1\n- 1 1\n- 1 1\n+ 1 1\n+ 1 1\n- 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n- 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n- 1 1\n- 1 1\n+ 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n- 1 1\n+ 1 1\n+ 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n- 1 1\n- 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n- 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+ 1 1\n+"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 4') == '2'\nassert solution('2 3 4') == '0'\nassert solution('7 4 7') == '3'\nassert solution('7 4 7') == '-1'\n\nstdin = \"\"\"\n3 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 4 4') == '1'\nassert solution('+ 1 1') == '2'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('2 3 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '5'\nassert solution('2 3 4\\n+ 1 2\\n- 1 4\\n+ 1 3\\n- 1 1') == '1'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\n\n'''\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('5 5 5\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n+ 1 5\\n- 1 6\\n+ 1 7\\n- 1 8\\n+ 1 9\\n- 1 10') == '0'"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"2 3\") == \"5\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"4\"\n\"\"\"\nimport numpy as np"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('3 5 5\\n- 1 3\\n- 1 4\\n- 1 5\\n+ 1 3\\n+ 1 4\\n+ 1 5\\n+ 1 4\\n+ 1 5\\n+ 1 3\\n+ 1 4\\n+ 1 5\\n') == '4'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n+ 1 1') == \"1\"\nassert solution('2\\n4\\n+ 1 1\\n+ 1 3') == \"2\"\nassert solution('3\\n4\\n+ 1 1\\n- 1 2') == \"2\"\nassert solution('3\\n3\\n+ 1 2\\n- 1 1') == \"1\"\nassert solution('4\\n3\\n+ 1 2\\n+ 1 4') == \"0\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1000000000 0\n1000000000 1\n''') == '500000004'\nassert solution('''\n3\n1000000000 0\n2000000000 1\n3000000000 0\n''') == '500000004'\nassert solution('''\n10\n1000000000 0\n0 0 0 0 0 0 0 0 0 0\n1000000000 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n''') == '0.0000001'\nassert solution('''\n15\n1000000000 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1000000000\"\nassert solution() == \"500000004\"\n\"\"\"\n\nfrom math import gcd\nfrom functools import reduce"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1000000000 0\\n1000000000 1\") == \"500000004\"\n\nprint(solution(input))\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n    '5000000000 0 1',\n    '1000000000 1 2',\n])) == '500000004'\nassert solution('\\n'.join([\n    '50000000 0 1',\n    '50000000 1 2',\n])) == '500000004'\nassert solution('\\n'.join([\n    '1000000000 0 1',\n    '1000000000 1 2',\n])) == '100000004'\nassert solution('\\n'.join([\n    '1000000000 0 1',\n    '1000000000 1 2',\n])) == '100000004'\nassert solution('\\n'.join([\n    '1000000000 0 1',\n    '1000000000 1 2',\n])) == '100000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1000000000 0\n1000000000 1\n''') == '500000004', solution.__doc__\nassert solution('''\n3\n5 1000000000 0\n1 1000000001 1\n5 100000002 2\n''') == '40000000000', solution.__doc__"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '500000004'\nassert solution('1000000000 0') == '500000004'\nassert solution('1000000000 1') == '500000004'\n\"\"\""
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('2\\n1 1\\n1\\n') == '500000004'\nassert solution('3\\n1 1\\n2 1\\n2 2\\n') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1000000000 0\n1000000000 1\n''') == '0'\nassert solution('''\n5\n1000000000 0\n1000000000 1\n''') == '500000004'\nassert solution('''\n1\n1000000000 0\n1000000000 1\n''') == '1000000000'"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n2 3\") == \"500000004\"\nassert solution(\"3\\n1 2\\n2 1\\n3 3\") == \"100000004\"\nassert solution(\"3\\n1 2\\n2 3\") == \"100\"\nassert solution(\"3\\n1 2\\n2 1\") == \"90000000\"\nassert solution(\"3\\n1 2\\n2 0\") == \"2\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 3 13 27\\n3 5 23 24\"\n) == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 8') == '12'\nassert solution('10 10') == '0'\nassert solution('5 8') == '16'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100') == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\n'''\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 8') == '12'\nassert solution('1 1') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nassert solution('''\n2 2\n1 1\n1 2\n''') == '0'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 2 3 8\\n4 3 20 21\\n1 3 13 27\\n3 5 23 24') == '12'\nassert solution('10 10 10 10\\n1 1 1 10\\n2 3 3 20\\n3 4 4 20\\n1 3 3 12\\n2 5 5 10\\n5 1 3 11\\n2 2 2 10\\n2 1 5 10\\n3 3 7 10\\n4 5 3 10\\n2 1 1 10') == '9'\nassert solution('4 4 4 4\\n2 4 4 10\\n2 5 5 10\\n3 3 7 10\\n1 1 1 10\\n2 1 2 10\\n1 3 3 10\\n2 3 3 10') == '15'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n15 5 3\\n12 4 4\\n20 10 5\\n') == '3'\nprint('PASSED!')\n\nprint('Problem 10.1:')\n\ns = Solution()\nassert s.solution(\n    ['5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n',\n     '5 5 5\\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3 19\\n15 5 3\\n12 4 4\\n20 10 5'\n) == '3'\nprint(solution(input()))\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 19\\n15 5 3\\n12 4 4\\n20 10 5\\n\") == \"3\"\nassert solution(\"1 100000\\n1 100000\\n1 100000\\n1 100000\\n\") == \"0\"\nassert solution(\"6 12\\n4 2\\n5 8\\n2 5\\n10 5\\n\") == \"2\"\nassert solution(\"6 100000\\n100000\\n100000\\n100000\\n\") == \"0\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n15 5 3\n12 4 4\n20 10 5''') == \"3\"\nassert solution('''\n5\n15 5 3\n12 4 4\n20 10 5\n10 12 12\n''') == \"3\"\nassert solution('''\n10\n15 5 3\n12 4 4\n20 10 5\n7 12 12\n8 12 12\n9 12 12\n10 12 12\n''') == \"4\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 7\n5 3 3\n4 7 7\n6 5 5\n4 5 5\n8 5 5\n1 2 3\n''') == '4'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 19\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n1 10\n5\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n5 5\n1 5 1\n1 2 2\n3 4 4\n4 5 5\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 20 5 3') == '3'\nassert solution('4 12 5 4') == '1'\nassert solution('15 5 3') == '1'\n\"\"\""
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 19\n15 5 3\n12 4 4\n20 10 5\n''') == '3'\n\nassert solution('''\n4 10\n3 6 1 5\n2 6 2 4\n4 7 7\n4 2 4\n3 4 4\n3 4 6\n''') == '2'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n2\n1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n100000\n2\n5\n\"\"\") == \"97\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n3 5 7\n3 1 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n1 1 1\n1 2 1\n2 2 1\n1 2 2\n1 1 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n2 2') == '2'\nassert solution('4\\n1 1 2 1') == '1'\n\n---"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('4 1') == '4'\nassert solution('5 4') == '7'\nassert solution('5 5') == '8'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\n1 1\\n1 2\\n\"\n    ) == \"1\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('2 3') == '1'\nassert solution('3 4') == '0'\nassert solution('5 6') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2\"\nassert solution('3') == \"2\"\nassert solution('4') == \"3\"\nassert solution('5') == \"5\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('1 1') == '2'\nassert solution('1 2') == '2'\nassert solution('2') == '1'\nassert solution('1 1 1') == '3'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1\n1 2\n1 3\n1 4\n2 3''') == \"3\"\n\"\"\"\n\nimport math\nimport sys\nsys.setrecursionlimit(10**6)"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\") == \"4\"\nassert solution(\"GBGB\") == \"4\"\nassert solution(\"BYBY\") == \"4\"\nassert solution(\"YRYR\") == \"4\"\nassert solution(\"R\") == \"1\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''RRRRRRRR\nGGBGBGBB\nYYYYYYYY\nYYYYYYYY\nYYYYYYYY\nYYYYYYYY\nYYYYYYYY\nYYYYYYYY\nYYYYYYYY''') == '8'"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"5\"\nassert solution(\"BYBY\") == \"7\"\nassert solution(\"YRYR\") == \"11\"\n\nimport sys\nimport io\nimport os\nimport re\nimport time\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''R\nG\nB\nY''') == '3'\nassert solution('''G\nB\nR\nY''') == '4'\nassert solution('''B\nY\nR\nG''') == '5'\nassert solution('''R\nG\nB\nY\n''') == '4'\nassert solution('''R\nB\nY\nG\n''') == '4'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RGR') == '1'\nassert solution('GBG') == '3'\nassert solution('BYB') == '5'\nassert solution('YRY') == '3'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"4\"\nassert solution(\"BYBY\") == \"5\"\nassert solution(\"YRYR\") == \"3\"\n\nfrom collections import deque\n\nR = 0\nG = 1\nB = 2\nY = 3"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''R\nG\nB\nY\n''') == '3'\n\nassert solution('''R\nG\nB\nY\n''') == '3'\n\nassert solution('''R\nR\nG\nB\n''') == '5'\n\nassert solution('''R\nG\nB\nY\n''') == '4'\n\nassert solution('''R\nR\nG\nB\n''') == '4'"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"3\"\n\"\"\""
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('RGGR') == 'R'\nassert solution('GBGB') == 'G'\nassert solution('BYBY') == 'Y'\nassert solution('YRYR') == 'R'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"RGGR\") == \"3\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"AAABB\""
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([5,-2,-1,0,1,2]) == \"AAAA\"\nassert solution([2,1,-2,-1]) == \"BB\""
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"ABAAB\""
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n-2 -1 0 1\n2 1 0 -1\n3 -1 -2 2''') == 'BBAAB'\nassert solution('''6\n-2 -1 0 1 2\n2 1 0 -1\n3 1 -2 3\n5 -1 -2 2\n-1 -2 -3 3\n5 -1 -3 -2''') == 'BBBBB'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1\n3 -1 -2 3\n5 -1 -2 -3''') == 'AAAAB'\nassert solution('''1\n1 1\n0 0''') == 'AA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAA'"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"5\", \"-2 -1 0 1 2\", \"2 1 0 -1 -2\"]) == \"AAAAA\"\nassert solution([\"5\", \"0 0 0 0 0\", \"1 1 1 1 1\"]) == \"BAAA\"\nassert solution([\"5\", \"0 0 0 0 0\", \"1 1 1 1 1\", \"0 0 0 0 0\", \"0 0 0 0 0\"]) == \"AAA\"\nassert solution([\"2\", \"0 0 0 0 0\", \"1 1 1 1 1\", \"0 0 0 0 0\", \"0 0 0 0 0\"]) == \"BBBB\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5, -2, 0, 1, 2]) == 'AAAA'\nassert solution([1, 0, -1, -2]) == 'BBBB'\nassert solution([-2, 1, 0, -1, -2]) == 'BBBB'\nassert solution([-2, 1, 0, -1, -2]) == 'BBBB'\nassert solution([-2, 1, 0, -1, -2]) == 'BBBB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\n\nassert solution('''3\n3 -3 0 1\n1 0 1 -3''') == 'AAB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n-1 -2 1\n1 -1 1\n1 -2 -1\n''') == 'AAABB'\nassert solution('''\n3\n-1 -2 1\n1 -1 1\n1 -2 -1\n''') == 'AAABB'\nassert solution('''\n2\n0 1\n1 0\n''') == 'AAAB'\nassert solution('''\n3\n-2 -1 0 1\n2 1 0 -1 -2\n1 -2 -1 1\n''') == 'AAAB'\nassert solution('''\n1\n0 -1\n''') == 'A'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'ABAB'\nassert solution('''4\n-1 1 -1 1\n1 -1 1 1\n-1 -1 1 -1\n-1 -1 1 -1\n''') == 'ABAA'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAABB'"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"IMPOSSIBLE\"\nassert solution(\"4 0\") == \"1\"\nassert solution(\"0 2\") == \"1\"\nassert solution(\"6 1\") == \"2\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\\n0 2\\n1 2\\n\") == \"2\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"6 3\\n\"\n    \"2 3\\n\"\n    \"4 0\\n\"\n    \"0 2\\n\"\n    \"6 1\\n\"\n) == \"IMPOSSIBLE\"\nassert solution(\n    \"10 10\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n\"\n    \"0 2\\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1') == '1'\nassert solution('5 5') == '2'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\nassert solution('10 4\\n1 3\\n8 1\\n8 3\\n1 5\\n1 6\\n0 7\\n0 8\\n9 4\\n0 9\\n') == '0'\nassert solution('4 4\\n0 2\\n1 0\\n2 0\\n0 2\\n') == '0'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n5 5\n2 3\n4 0\n0 2\n6 1\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(r\"\"\"\n2 3\n2 2\n2 5\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n2 3\n0 2\n2 5\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n0 3\\n0 2\\n6 1\\n') == \"IMPOSSIBLE\"\nassert solution('6 3\\n0 3\\n4 0\\n0 2\\n6 1\\n') == \"2\"\nassert solution('10 10\\n0 0\\n9 1\\n9 9\\n') == \"IMPOSSIBLE\"\nassert solution('6 4\\n0 2\\n0 4\\n6 1\\n') == \"4\"\nassert solution('5 5\\n0 3\\n4 0\\n0 2\\n6 1\\n') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"5 3\\n4 0\\n0 2\\n5 1\\n\") == \"1\"\nassert solution(\"5 3\\n4 0\\n0 2\\n4 1\\n\") == \"2\"\nassert solution(\"10 2\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"8 2\\n0 0\\n0 0\\n2 1\\n1 1\\n2 2\\n4 3\\n3 4\\n\") == \"9\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\n2 3\n4 0\n0 2\n6 1\n''') == 'IMPOSSIBLE'\nassert solution('''\n6 3\n1 2\n3 4\n5 6\n7 8\n''') == '5'\nassert solution('''\n10 10\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n''') == '10'\nassert solution('''\n10 10\n0 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == 'IMPOSSIBLE'\nassert solution('''\n12 12\n1 1\n1 3\n1 5\n4 4\n4 7\n4 9\n4 11\n8 8\n8 10\n''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\\n\" +\n\"austria\\n\" +\n\"autocorrect\\n\" +\n\"program\\n\" +\n\"programming\\n\" +\n\"computer\\n\" +\n\"autocorrelation\\n\" +\n\"programming\\n\" +\n\"competition\\n\" +\n\"zyx\") == \"11\\n\"\n\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\na\\na\\n') == '12'\nassert solution('2\\n4\\na\\na\\n') == '4'\nassert solution('3\\n1\\na\\n') == '3'\nassert solution('5\\n5\\nautocorrelation\\n') == '11'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx') == '12\\n4\\n11\\n3\\n2\\n'\n\n=======================\n\nUse DP\n\ndp[i][j] = min(dp[i-1][j], dp[i][j-1]) + 1\n\nTime: O(NM)\nSpace: O(NM)\n\n\"\"\"\n\nclass Solution:\n    def minKeystrokes(self, words: List[str], s: str) -> int:\n        dp = [[0]*(len(s)+1) for _ in range(len(words)+1)]\n        for i in range(1, len(words)+1):\n            word = words[i-1]\n            for j in range(1, len(s)+1):\n                if word[0] == s[j-1]:\n                    dp[i][j] = dp[i-1][j] + 1\n                else:\n                    dp[i][j] = max(dp[i-1][j], dp[i][j-1])\n        return dp[-1][-1]"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n' + 'austria' + '\\n' + 'autocorrect' + '\\n' + 'program' + '\\n' + 'programming' + '\\n' + 'computer' + '\\n' + 'autocorrelation' + '\\n' + 'programming' + '\\n' + 'competition' + '\\n' + 'zyx' + '\\n') == '12'\nassert solution('3 3\\n' + 'austria' + '\\n' + 'autocorrelation' + '\\n' + 'program' + '\\n' + 'competition' + '\\n') == '11'\nassert solution('4 4\\n' + 'austria' + '\\n' + 'program' + '\\n' + 'programming' + '\\n' + 'computer' + '\\n' + 'autocorrelation' + '\\n' + 'competition' + '\\n' + 'zyx' + '\\n') == '10'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '12'\n\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '4'\n\nassert solution('''\n4 4\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '2'\n\nassert solution('''\n4 4\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '1'\n\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '12'"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria') == '12\\n4\\n11\\n3\\n2\\n'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\") == \"12\\n4\\n11\\n3\\n2\\n\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '12'\nassert solution('1 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    10\n    abcd\n    ae\n    b\n    cd\n    ef\n    f\n    g\n    h\n    ij\n    k\n    l\n    m\n    n\n    xyz\n    ''') == '''\n    16\n    12\n    14\n    '''"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == \"12 4 2 1 6 1 2\".strip()\n\nassert solution('''\n3 4\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == \"12 4 2 1 6 1 3\".strip()\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 1 1\n''') == '3'\nassert solution('''\n5\n0 0 0 0 0\n1 0 1 0\n0 1 0 0\n0 0 1 0\n0 0 0 0\n''') == '4'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 2 1\n''') == '3'\n\nassert solution('''\n4\n0 0 0 0\n''') == '4'\n\nassert solution('''\n4\n0 0 1 1\n''') == '5'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 1 1 1\n''') == '2'\n\nassert solution('''\n3\n1 1 1\n''') == '3'\n\nassert solution('''\n5\n1 1 1 1 1\n''') == '3'\n\nassert solution('''\n12\n
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join(['3', '0 1 1'])) == '3'\nassert solution('\\n'.join(['1', '1'])) == '1'\n\n'''\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('5\\n1 2 3 4 5') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '5'\n\"\"\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 1 1\n''') == '3'\nassert solution('''\n4\n0 0 0 0\n''') == '1'\nassert solution('''\n3\n0 1 0\n''') == '2'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0 1 1\\n') == '3'\nassert solution('2\\n0 1 1\\n') == '1'\nassert solution('3\\n0 1 1\\n') == '3'\nassert solution('4\\n0 1 1\\n') == '2'\nassert solution('5\\n0 1 1\\n') == '2'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n4') == '3'\nassert solution('2\\n2\\n4') == '4'\nassert solution('3\\n3\\n3') == '3'\nassert solution('10\\n5\\n5') == '5'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n2 5 3 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n3 0 0 0\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1 1\\n2 2 2') == '4'\nassert solution('4\\n0 1 1\\n1 1 1') == '5'\nassert solution('4\\n0 1 1\\n1 1 1\\n3 3 3') == '10'\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre Post In Post In Pre'\nassert solution('BIGEDCJFAH') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'\n'''"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nHIGH\nFAT\nBIG\nEDC\nJAG\n''') == '''\nPre In Post In Pre\nHIGH\nFAT\nEDC\nJAG\n'''\n\"\"\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\n\nInput:\nHBMIJFHGAKDLC\nFIAHDSJBCHGDBK\nBBIGHDFIECWZAQ\n\nOutput:\nPre Post In Post In Pre\nHBMIJFHGAKDLC\nFIAHDSJBCHGDBK\nBBIGHDFIECWZAQ\n\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"HFBJCDEGIA\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"In Post In Pre\"\nassert solution(\"HFBIGEDCJA\") == \"Pre In Post In Pre\"\nassert solution(\"HFBJCDEGIA\") == \"Pre In Post In Pre\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"BIGEDCJFAH\"\nassert solution(\"BIGEDCJFAH\") == \"BIGEDCJFAH\""
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n  A B C\n  D E\n  F G H\n  I J\n''') == '''\n  A B\n  C D\n  E F\n  G H I\n  J I\n'''\nassert solution('''\n  A B C D E F G H I J\n''') == '''\n  A B C D E F G H I J\n'''\nassert solution('''\n  A B\n  C\n  D\n  E F\n''') == '''\n  A B C\n  D E F\n'''\n\nassert solution('''\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n''') == '''\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n'''\n\nassert solution('''\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n''') == '''\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n  A A A A A\n'''"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BFEDCJA') == 'Pre Post In Pre'\nassert solution('HDEDCJF') == 'Pre In In'\nassert solution('IHDEDCCF') == 'Pre In In'\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nHFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n''') == 'Pre Post In Post In Pre'\n'''"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('HFIEEZDAHFD') == 'Pre In In Pre In In Pre'\n\"\"\"\nimport sys\nsys.setrecursionlimit(10**6)\nfrom collections import deque"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre In Post In Pre'\nassert solution('BIGEDCJFAH') == 'In JHD EFAAH'\nassert solution('BIGEDCJFAH') == 'In JHD EFAAH'\n\nfor _ in range(5):\n    inp = input()\n    print(solution(inp))\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '12'\nassert solution('4') == '10'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '10'\nassert solution('4') == '11'"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '10'\nassert solution('1') == '1'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '2\\n'\nassert solution('2\\n10 0') == '10\\n'\nassert solution('3\\n1 1 1') == '1\\n'\nassert solution('4\\n1 1 0') == '1\\n'\nassert solution('5\\n2 1 1 1 1') == '1\\n'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n3') == '2'\nassert solution('2') == '0'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('3') == '10'\nassert solution('4') == '10'\nassert solution('5') == '11'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"10\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"12\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '2'\nassert solution('2') == '10'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"10\"\nassert solution(\"3\") == \"10\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"10\"\nassert solution(\"1\") == \"10\"\nassert solution(\"4\") == \"11\"\nassert solution(\"4\") == \"10\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"3\\n0 0 100 100\\n30 30 60 60\\n-100 -100\") == \"10.00\"\nassert solution(\"4\\n0 0 100 100\\n30 30 60 60\\n-100 -100\\n-100 -100\") == \"10000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'''\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n0 0 100 100\\n30 30 60 60') == '10000.00'\nassert solution('2\\n0 0 100 100\\n30 30 60 60\\n30 30 60 60') == '100000.00'\nassert solution('2\\n0 0 100 100\\n30 30 60 60\\n30 30 60 60\\n0 0 100 100') == '10.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0 0 100 100\\n30 30 60 60\\n') == \"10000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4\n0 0 100 100\n30 30 60 60\n0 0 100 100\n30 30 60 60\nSample Output:\n10000.00\n\"\"\"\n) == \"10000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n2\n0 0 0 0\n1 1 0 0\n''') == '0.00'\nassert solution('''\n2\n0 0 100 100\n0.1 0.1 0.1 0.1\n''') == '0.10'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0 0 100 100\n30 30 60 60\n''') == \"10000.00\"\nassert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == \"10000.00\"\nassert solution('''\n2\n0 0 100 100\n40 40 40 40\n''') == \"10000.00\"\nassert solution('''\n2\n0 0 100 100\n40 40 40 40\n''') == \"10000.00\"\nassert solution('''\n2\n0 0 100 100\n40 40 40 40\n''') == \"10000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\n\nstdin = '''\n10\n0 0 100 100\n50 50 100 100\n75 75 100 100\n50 50 100 100\n25 25 100 100\n10 10 100 100\n5 5 100 100\n5 5 100 100\n5 5 100 100\n'''"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    '1',\n    '0 0 100 100',\n    '30 30 60 60',\n    ])) == '10000.00'\n\"\"\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 3\n4 5\n2 4\n''') == '5'\n\nassert solution('''\n10 5\n1 3\n4 5\n2 4\n''') == '6'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == '5'\nassert solution('3 3\\n1 3\\n2 4') == '3'\nassert solution('3 3\\n2 3\\n1 4') == '3'\nassert solution('2 2\\n1 4') == '1'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n4 5') == '5'\n\"\"\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 3\n1 3\n4 5\n2 4\"\"\") == \"2\"\nassert solution(\"\"\"20 1\n1 3\n4 5\n2 4\n4 4\"\"\") == \"7\"\nassert solution(\"\"\"10 10\n1 10\n4 4\n1 10\"\"\") == \"10\"\nassert solution(\"\"\"10 5\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\"\"\") == \"1\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '5'\nassert solution('3 3') == '2'\nassert solution('5 5') == '1'\nassert solution('5 4') == '0'\nassert solution('5 3') == '0'\n\"\"\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"10\"\nassert solution(\"1 1 1 1\") == \"7\"\nassert solution(\"1 1 1 1 1\") == \"11\"\nassert solution(\"1 1 1 1 1 1\") == \"12\"\nassert solution(\"1 2 1 1 2 1\") == \"11\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '5'\nassert solution(input(\"\")) == '0'\nassert solution(input(\"\")) == '0'\nassert solution(input(\"\")) == '0'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 3\n4 5\n2 4\n5 1\n1 5''') == '5'\nassert solution('''3 3\n1 2\n1 3\n1 4\n2 4\n3 4''') == '7'\nassert solution('''3 3\n1 2\n1 3\n1 4\n1 5\n2 4\n3 4\n3 5\n4 5''') == '2'\nassert solution('''5 3\n1 2\n1 3\n1 4\n1 5\n1 6''') == '7'\nassert solution('''2 2\n1 1\n1 1''') == '0'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n1 3\n4 5\n2 4\n''') == '5'\nassert solution('''\n7 9\n0 0\n2 2\n4 4\n3 4\n1 1\n0 0\n''') == '7'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '5'\nassert solution('5 4') == '4'\nassert solution('3 4') == '5'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\nassert solution('0\\n0\\n0') == '0'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''11 13 17\n5 2 4\n0 0 0''') == '2095'\nassert solution('''10 1 1\n1 5\n0 0''') == '6'\nassert solution('''10 11 11\n1 1\n0 0''') == '15'\nassert solution('''9 7 7\n1 1\n1 1''') == '21'\nassert solution('''9 8 8\n1 1\n1 2''') == '10'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([11, 13, 17]) == '2095'\nassert solution([5, 2, 4]) == '2095'\nassert solution([0, 0, 0]) == '0'\nassert solution([0, 0, 1]) == '1'\nassert solution([0, 1, 1]) == '2'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nprint(solution(input))\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"11 13 17\n5 2 4\n0 0 0\n\"\"\") == \"2095\"\n\nassert solution(\"\"\"10 7 8\n1 1 1\n0 0 0\n\"\"\") == \"3462\"\n\nassert solution(\"\"\"2 1 7\n1 0 0\n0 0 0\n\"\"\") == \"12\"\n\nassert solution(\"\"\"1 8 2\n3 2 1\n0 0 0\n\"\"\") == \"4\"\n\nassert solution(\"\"\"4 7 3\n3 3 2\n0 0 0\n\"\"\") == \"6\""
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 13 17') == '2095'\nassert solution('1 3 5') == '5'"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 13 17') == '2095'\nassert solution('7 13 17') == '0'\nassert solution('11 13 17 4') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 13 17') == '2095'\nassert solution('5 2 4') == '6'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"11 2 4\") == \"19\"\nassert solution(\"17 14 13\") == \"20\"\nassert solution(\"1 2 4\") == \"6\"\nassert solution(\"11 13 2\") == \"12\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.''') == 'My name is Gon'\n\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.''') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon'\nassert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print `My name is ${b}`; end.') == 'My name is Gon\\nMy name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\\\"\") == \"My name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print `My name is ${b}`; end.\\\"\") == \"My name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print `My name is ${b}`; end.\\\"\") == \"My name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print `My name is ${b}`; end.\\\"\") == \"My name is Gon\"\nassert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print `My name is ${b}`; end.\\\"\") == \"My name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'\nassert solution('print `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon\\nMy name is Gon'"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"My name is Gon\"\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"My name is Gon\"\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint `My name is ${c}`;\nend.\n\"\"\") == \"My name is Gon\"\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint `My name is ${c}`;\nend.\n\"\"\") == \"My name is Gon\"\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint `My name is ${c}`;\nend.\n\"\"\") == \"My name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"var a = 1; var b = 2; var c = a;\") == \"2\"\nassert solution(\"var a = 1; var b = 2; var c = a + b;\") == \"3\"\nassert solution(\"var a = 1; var b = 2; var c = a * b;\") == \"2\"\nassert solution(\"var a = 1; var b = 2; var c = a ** b;\") == \"2\"\nassert solution(\"var a = 1; var b = 2; var c = a % b;\") == \"0\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n'''"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n10\\n20') == 'discard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('2\\n10\\n20') == 'discard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('3\\n10\\n20') == 'discard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('4\\n10\\n20') == 'discard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('5\\n10\\n20') == 'discard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n15\n10\n6\n14\n12\n''') == 'discard 14\\nfill 6\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 0 1\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 1 1\\ntransfer 1 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 1 1\\ntransfer 0 1\\ntransfer 2 1\\ntransfer 1 0\\ntransfer 2 0\\ntransfer 1 1\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 0 1\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 1 1\\ntransfer 1 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 1 1\\ntransfer 0 1\\ntransfer 2 1\\ntransfer 1 0\\ntransfer 2 0\\ntransfer 1 1\\ndiscard 1\n''')\n\nassert solution('''\n2\n5\n10\n''') == 'discard 10\\nfill 5\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 1 1\\ntransfer 1 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 1 1\\ntransfer 0 1\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 1 1\\ntransfer 0 1\\ntransfer 2 1\\ndiscard 1\\n'''\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n3\n2\n\"\"\") == \"discard 1; fill 2; transfer 2 1; discard 1\"\nassert solution(\"\"\"\n3\n4\n2\n\"\"\") == \"discard 1; fill 2; transfer 2 0; discard 1\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n3\\n1\\n1\\n1\\n1\\n1\\n\") == \"discard 1\\nfill 2\\ntransfer 2 0\\n\"\nassert solution(\"2\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"discard 1\\nfill 2\\ntransfer 2 0\\n\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n7 8\n10\n\"\"\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\"\"\".strip()\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"fill 1 fill 2 discard 1 discard 2\"\nassert solution(\"3\") == \"fill 2 fill 1 discard 2 discard 1 transfer 1 1\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n7 8\n10''') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('10 10 10') == '10'\nassert solution('10 10 10') == '10'\n\"\"\""
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1,2,1') == '1'\nassert solution('2,2,3') == '4'\nassert solution('1,2,5') == '5'\nassert solution('10,10,10') == '10'\nassert solution('10,10,10') == '10'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4 3') == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    10 4 3\n    ''') == '27'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 4 3\\n\") == \"27\"\nassert solution(\"100 2 0\\n\") == \"100\"\nassert solution(\"10 2 1\\n\") == \"1\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 4 3\n''') == '27', \"First\"\nassert solution('''\n10 7 5\n''') == '13', \"Second\"\nassert solution('''\n10 10 10\n''') == '100', \"Third\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 3') == '27'\nassert solution('20 30 3') == '110'\nassert solution('40 20 3') == '110'\nassert solution('60 30 3') == '110'\nassert solution('100 50 3') == '100'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 4 3\n''') == '27'\nassert solution('''\n10 10 10\n''') == '0'\n\"\"\""
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 5') == '3'\nassert solution('2 3 1 2') == '-1'\nassert solution('2') == '4'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 5\") == \"3\"\nassert solution(\"4 3 5 1 2\") == \"4\"\nassert solution(\"4 3 5 2\") == \"0\"\nassert solution(\"4 3 5 3 1\") == \"4\"\nassert solution(\"4 3 5 3 2 1\") == \"2\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n\") == \"3\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 5') == '3'\nassert solution('2 2') == '2'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 1 1 1 1 1') == '1'"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"3\"\n\nassert solution(input()) == \"-1\""
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2''') == '3'\nassert solution('''4 3 5\n2 3 1 2\n1 3 3\n2''') == '-1'\nassert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\nSample Input:\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\nSample Output:\n3\n-1\n4\n''') == '3'\nassert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\nSample Output:\n4\n-1\n5\n''') == '-1'\nassert solution('''10 5 10\n5 10 10 5 1 2 10\n1\n4\nSample Input:\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\nSample Output:\n-1\n4\n''') == '-1'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 5') == '3'\nassert solution('2 3 1 2') == '-1'\nassert solution('2') == '4'\nprint('You passed all the tests!')\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n\"\"\") == \"\"\"3\"\"\"\n\nassert solution(\"\"\"\n5 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n\"\"\") == \"\"\"4\"\"\""
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('500 1000 1000') == '483.3333333333'"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1000 3000 1000\n''') == '533.3333333333'\nassert solution('''\n1000000 1000000 1000000\n''') == '999999.9999'\nassert solution('''\n10 10 10\n''') == '7777.7777'\nassert solution('''\n10 1000 1000\n''') == '100000.0'\nassert solution('''\n1000000 1000000 1000000\n''') == '999999.9999'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\nassert solution(\"10 10 10\") == \"100\"\nassert solution(\"100 10 10\") == \"100\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('100000000 100000000 100000000') == '100000000 100000000 100000000'\nassert solution('100000000 1000000000 100000000') == '100000000 1000000000 100000000'\nassert solution('100000000 10000000000 100000000') == '100000000 10000000000 100000000'\nassert solution('100000000 10000000000 100000000') == '100000000 10000000000 100000000'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1000 3000 1000') == '533.3333333333'\nassert solution('1\\n1000 2000 1000') == '0'\nassert solution('1\\n1000 2000 1000') == '533.3333333333'\n\n\"\"\""
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1000 1000') == '533.3333333333'\nassert solution('100 1000 1000') == '531.166666666667'\nassert solution('1000 1000 1000') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('0 1 2') == '0.333333333333333333'\nassert solution('5000000000000000') == '5000000000000000.0'\n\"\"\""
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1000 3000 1000\n\"\"\") == \"533.3333333333\"\n\nassert solution(\"\"\"\n1000 1000 1000\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n200 200 100\n\"\"\") == \"144.66666667\"\n\nassert solution(\"\"\"\n1000 100000 1000\n\"\"\") == \"6788.88888889\"\n\nassert solution(\"\"\"\n10 10 100\n\"\"\") == \"817.77777778\""
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('100 1000 100000') == '100000'\nassert solution('1000 1 100000') == '0.01'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1000 3000 1000''') == '533.3333333333'\nassert solution('''100000 500000 500000''') == '50000.0000'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1\\n2 0\\n10 0\\n10 10\\n') == '14.14'\nassert solution('4 1\\n10 0\\n10 10\\n') == '4.00'\nassert solution('4 0\\n10 0\\n10 10\\n') == '3.50'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0') == '14.14'\nassert solution('10 0') == '11.36'\nassert solution('10 10') == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 0\n10 0\n10 10\n5 5\n3 5\n5 1\n1 1\n2 2\n2 2\n2 2''') == '17.71'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''5 1\n0 0\n2 0\n0 1\n0 0\n1 2\n0 0\n3 4\n''') == '14.14'\nassert solution(\n    '''6 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '0.00'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n') == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'\nassert solution('3 0\\n10 0\\n20 0\\n10 10\\n30 0\\n20 10') == '18.84'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == \"14.14\"\nassert solution('2 0\\n1 0\\n1 0') == \"5.0\"\nassert solution('2 0\\n-1 0\\n-1 0') == \"1.0\"\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 0\n10 0\n10 10''') == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 0\n10 0\n10 10\n10 10\n10 10\n\"\"\") == \"14.14\"\n\nassert solution(\"\"\"\n6 0\n0 0\n0 0\n0 0\n0 0\n\"\"\") == \"0.0\"\n\nassert solution(\"\"\"\n100 0\n100 0\n0 100\n0 100\n0 100\n\"\"\") == \"21.89\""
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 0\n20 0\n30 0\n10 10\n10 10\n\"\"\") == \"14.14\"\n\nassert solution(\"\"\"\n4 0\n10 0\n20 10\n10 20\n\"\"\") == \"15.00\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '0 2'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"0 2\\n0 2\\n0 2\\n\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '0 2\\n0 2\\n0 2\\n'\n\n### Problem Link ###\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 1\\n0 2\\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0 0\"\nassert solution(\"3 3\") == \"0 2 0\"\nassert solution(\"4 5\") == \"0 0 1 1\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nassert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'\n\nassert solution('''\n1 1\n123456\n''') == '123456 0\\n'\n\nassert solution('''\n1 1\n123456\n''') == '123456 1\\n'\n\nassert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n''') == '123457 0\\n0 2\\n123458 1\\n'"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\"\"\") == \"123457 2\"\nassert solution(\"\"\"1\n1\n1\"\"\") == \"1 0\"\nprint(\"All tests passed\")"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == \"\"\"123457 1\n0 2\n\"\"\", \"Should return the list of employees that are the immediate boss of your boss.\"\n\nassert solution(\"\"\"\n5 3\n1234 556 789000\n123 456 586000\n1234 556 789500\n123 456 586000\n123 545 678000\n\"\"\") == \"\"\"\n123 456 586000 0\n1234 556 789500 1\n\"\"\", \"Should return the list of employees that are your subordinates.\"\n\nassert solution(\"\"\"\n5 3\n1234 556 789000\n123 456 586000\n1234 556 789500\n123 456 586000\n123 545 678000\n\"\"\") == \"\"\"\n123 456 586000 0\n1234 556 789500 1\n\"\"\", \"Should return the list of employees that are your subordinates.\"\n\nassert solution(\"\"\"\n4 4\n123456 123456\n123456 123456\n123456 123456\n123456 123456\n\"\"\") == \"\"\"\n123456 1\n0 2\n\"\"\", \"Should return the list of employees that are your subordinates.\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n5\n10001 10001 10001 10001 10001\n10001\n2\n5\n10001 10001\n3\n10001 10001\n4\n10001 10001\n5\n10001 10001\n''') == '''1 0\n0 1\n2 1\n'''\nassert solution('''\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5\n5"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\nassert solution(\n\"\"\"\n4\n1 1 5 10\n2 2 4 3\n\"\"\") == \"55\"\nassert solution(\n\"\"\"\n5\n3 5 10 2 5\n2 4 5 1 3\n1 2 3 4 5\n\"\"\") == \"90\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '90'\nassert solution('5 2 5 10 2') == '95'\nassert solution('2 4 5 1 3') == '90'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 2 4 5\\n1 2 3 4\\n') == '90'\nassert solution('5\\n10 10 10 10 10\\n10 10 10 10 10\\n10 10 10 10 10\\n10 10 10 10 10\\n10 10 10 10 10\\n') == '180'\nassert solution('4\\n10 5 9 2\\n4 5 6 7\\n9 2 3 8\\n2 3 8 9\\n') == '300'\nassert solution('5\\n10 10 10 10 10\\n10 10 10 10 10\\n10 10 10 10 10\\n10 10 10 10 10\\n10 10 10 10 10\\n') == '90'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n2 4 5 1 3') == '90'\nassert solution('1\\n3\\n1 2 3 4 5') == '120'\nassert solution('5\\n10 20 50 10 20 30 20') == '150'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n') == '90'\n\nIn the wild west, robbers are attacking a long train with many coaches. Chaos erupts, and the robbers realize that the amount of chaos equals the number of passengers in the train, rounded up to the nearest multiple of $10$. In order to quench the chaos, they therefore decide to kill some passengers by blowing up one of the coaches.\n\nWhat the robbers failed to realize, however, is that when there are multiple disjoint train segments, then the total amount of chaos is equal to the sum of the chaos of each train segment times the number of train segments!\n\nFrantic to quench the now even worse chaos, the robbers continue blowing up every coach until all passengers are dead. Phew!\n\nThe chaos in a train segment is equal to the number passengers in that train segment rounded up to the nearest multiple of $10$. What was the maximum amount of chaos during the robbery?\n\n-----Input-----\nOn the first line is a single integer $n$, ($3 \\leq n \\leq 100000$), the number of coaches in the train. On the second line follows $n$ integers $p_1, p_2, \\ldots p_ n$, ($0 \\leq p_ i \\leq 100$ for each $i \\in \\{ 1, 2, \\ldots, n\\} $) the number of passengers in each coach. On the third and final line follows a permutation of the numbers from $1$ to $n$ indicating the order in which the robbers blew up the coaches.\n\n-----Output-----\nA single integer, the maximum chaos that occurred during the robbery.\n\n>>> solution('''5\n3 5 10 2 5\n2 4 5 1 3\n''')\n90\n>>> solution('''3\n4 6\n2 3 5 1\n''')\n8\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '90'\nassert solution('2') == '80'\nassert solution('1') == '100'"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3 5 10 2 5\n2 4 5 1 3\n''') == '90'\nassert solution('''\n5\n4 5 1 2 3\n1 2 3 4 5\n''') == '100'\nassert solution('''\n5\n2 5 1 3 4\n1 2 3 4 5\n''') == '150'\nassert solution('''\n5\n3 5 10 2 5\n2 4 5 1 3\n''') == '90'"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\nassert solution('4\\n2 2 3 3\\n4 1 3 1') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('7\\n3 5 10 2 5\\n2 4 5 1 3') == '76'\nassert solution('4\\n3 6 4 5\\n3 3 5 1') == '6'\n\n'''\n\nfrom math import sqrt\nimport heapq\nimport math\nimport sys"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\nassert solution('10\\n20 30 50 60 70 80 90\\n1 3 5 2 4 6 7 8 9') == '83'\n\"\"\"\n\nn = int(input())\ntrain = input()\n\ntrain = train.split()\n\nchaos = 0\n\nfor i in range(n):\n    chaos += int(train[i]) * 10 ** (n - i - 1)\n\nprint(chaos)\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '90'\nassert solution('1 2 3 4 5') == '90'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"6.000000\"\n\nassert solution(\"\"\"\n2 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"10.000000\"\n\nassert solution(\"\"\"\n1 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"9.000000\"\n\nassert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"10.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 10\n1 2 6\n0 4 3\n0 8 2''') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n1 2\n0 4\n1 8\n\"\"\") == \"6.000000\"\nassert solution(\"\"\"\n3\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"8.000000\"\n\n\"\"\"\n-------------------------------------------------------------------------------------------------------------------------\nName:    Question 4.2\n\nDescription:\n\nCreate a function that takes as input a 2D array and returns the sum of all the elements of the array. The elements of the 2D array will be integers.\n\n\nSample Input 1:\n\n[[1, 2, 3],\n[4, 5, 6],\n[7, 8, 9]]\n\nSample Output 1:\n\n55\n\nSample Input 2:\n\n[[1, 2],\n[3, 4],\n[5, 6]]\n\nSample Output 2:\n\n31\n\n\"\"\""
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 2 6\n0 4 3\n0 8 2\n''') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n3\n''') == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '2.000000'\nassert solution('5 7') == '3.000000'\nassert solution('9 9') == '2.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10') == '6.000000'\nassert solution('5 10') == '11.000000'\nassert solution('10 10') == '16.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n0 0\\n1.') == '2.'\nassert solution('8 2\\n0 0\\n1.\\n.\\n0 0\\n0 0\\n1.\\n.\\n.\\n.\\n1.') == '1.'\nassert solution('5 2\\n0 0\\n0 1\\n1.') == '1.\\n1.\\n1.\\n1.\\n1.'\nassert solution('5 2\\n0 0\\n0 1\\n1.\\n.\\n.\\n.\\n1.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n0.\n..\n1.\n\"\"\") == \"\"\"\n.\n..\n.\n\"\"\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.\\n..\\n0\\n') == '1.\\n..\\n1.\\n..\\n'\nassert solution('3\\n2 1\\n0 0\\n2 2\\n1.\\n.\\n1 1\\n0 0\\n1.\\n0 1\\n1.\\n0 1\\n1.\\n.\\n0 1\\n0 0\\n1.\\n0 1\\n1.\\n0 1\\n1.\\n.\\n0 0\\n0 0\\n') == '1.\\n.\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 0\\n0 0\\n1.\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 0\\n0 0\\n1.\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 0\\n0 0\\n'\nassert solution('5\\n2 3\\n0 0\\n0 0\\n0 0\\n1.\\n.\\n1 1\\n0 0\\n1.\\n0 1\\n1.\\n0 1\\n1.\\n.\\n0 1\\n0 0\\n1.\\n0 1\\n1.\\n0 1\\n1.\\n.\\n0 0\\n0 0\\n') == '1.\\n.\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 0\\n0 0\\n1.\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 0\\n0 0\\n1.\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 1\\n0 0\\n1 1\\n1 1\\n1.\\n.\\n0 0\\n0 0\\n'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n0 0\n0 0\n1.\n..\n0\n\n1''') == '1.1.1.1'\n\nassert solution('''2\n0 0\n0 0\n1.\n..\n0\n\n2''') == '1.2.1.1'\n\nassert solution('''2\n0 0\n0 0\n1.\n..\n0\n\n3''') == '1.1.2.2'\n\nassert solution('''2\n0 0\n0 0\n1.\n..\n0\n\n4''') == '1.1.1.1'\n\nassert solution('''2\n0 0\n0 0\n1.\n..\n0\n\n5''') == '1.2.1.1'"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1.\n.\n.\n.\n2\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\") == \"1.\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\nSample Output:\") == \"2.\\n..\\n0.\\n1.\\n0.\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n..\\n0\\nSample Output:\") == \"2.\\n..\\n0.\\n0.\\n1.\\n0.\"\nassert solution(\"5\\n0 0\\n0 0\\n1.\\n..\\n0\\nSample Output:\") == \"2.\\n..\\n0.\\n0.\\n1.\\n0.\"\nassert solution(\"5\\n0 0\\n0 0\\n1.\\n..\\n0\\nSample Output:\") == \"2.\\n..\\n0.\\n0.\\n1.\\n0.\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 0\n0 0\n1.\n..\n0\nSample Output:\n1.\n..\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n2\\n0 0\\n0 0\\n1.\") == \"2.\\n.\\n1.\""
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n0 0\n0 0\n1.\n.\n.\n0\n\"\"\") == \"1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1."
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0 0\n0 0\n1.\n.\n0\n''') == '''\n.\n.\n.\n.\n.\n'''\n\nassert solution('''\n2\n0 0\n0 0\n1.\n1\n.\n.\n1\n.\n''') == '''\n1.\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\n\"\"\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('2') == '4'\nassert solution('6') == '0'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\nhc\nabc\njkl\nzyx\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n1 abc\n2 2\n2 4\n3 3\n3 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n6\nab\nabc\ncba\ncd\njkl\nzyx\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\nnso\nxsz\njrh\nzsx\n\"\"\") == \"1\""
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na\nbc\nabc\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3\\n\") == \"1\"\n\n2nd form:\n\nSample Input:\n5\ncbd\ncd\nabb\nabc\nabc\nSample Output:\n0\n1\n1\n1\n1\nSample Input:\n3\nabc\nabc\nabc\nSample Output:\n0\n0\n1\n\"\"\""
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n) == \"1\"\n\nassert solution(\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"1 abca\"\n) == \"1\"\n\nassert solution(\n    \"3\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"2 1\"\n    \"2 3\"\n) == \"2\""
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1\\n2\\n3'\n\nSample Input:\n5\nabcd\nabc\nabc\nabca\nabcd\n1 abcbc\nSample Output:\n1\n2\n3\n1\n3\nSample Input:\n5\na\na\na\na\na\n1 a\nSample Output:\n1\n2\n3\n1\n3\nSample Input:\n5\nabcd\nabc\nabc\nabca\nabcd\n2 abca\nSample Output:\n1\n2\n3\n1\n3\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n3\naba\nabcd\nabc\n1 abcbc\n2 abc\nSample Output:\n1\n1\n3\n1\n3\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n4\nabcd\nabc\nabc\nabca\nabcd\n2 abca\nSample Output:\n1\n1\n2\n1\n3\n1\nSample Output:\n1\n1\n2\n1\n2\n1\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n5\na\na\na\na\na\n1 abca\n2 abcbc\nSample Output:\n1\n1\n2\n1\n3\n1\nSample Output:\n1\n1\n2\n1\n2\n1\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n6\nabc\nabc\nabc\nabc\nabc\nabca\nSample Output:\n1\n1\n2\n1\n3\n1\nSample Output:\n1\n1\n2\n1\n2\n1\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n7\nabcd\nabc\nabc\nabca\nabcd\n2 abca\nSample Output:\n1\n1\n2\n1\n3\n1\nSample Output:\n1\n1\n2\n1\n3\n1\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n8\nabc\nabc\nabc\nabc\nabc\nabca\nSample Output:\n1\n1\n2\n1\n3\n1\nSample Output:\n1\n1\n2\n1\n2\n1\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n9\na\na\na\na\na\n1 abcbc\nSample Output:\n1\n1\n2\n1\n3\n1\nSample Output:\n1\n1\n2\n1\n2\n1\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n10\na\na\na\na\na\n1 abcbc\n2 abc\nSample Output:\n1\n1\n2\n1\n2\n1\nSample Output:\n1\n1\n2\n1\n2\n1\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n\"\"\""
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nabca\\n2\\n3') == '1\\n1\\n1'\nassert solution('2\\nabc\\n2\\n3') == '2\\n1\\n1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\na\nbc\nabc\nd\nd\nd\ne\ne\ng\ng\nh\nh\ni\ni\nh\nj\nj\nk\nk\nh\nh\nl\nl\nk\nk\n\"\"\") == \"10\"\nassert solution(\"\"\"\n10\na\nbc\nabc\nd\nd\nd\ne\ne\ng\ng\nh\nh\ni\ni\nh\nh\nj\nj\nk\nk\nh\nh\nl\nl\nk\nk\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"5 1 1 1\") == \"NO\"\nassert solution(\"3 1 3 1\") == \"YES\"\nassert solution(\"3 1 2 3\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\n\nassert solution(\"1 2 1 1\") == \"YES\"\n\nassert solution(\"1 1 1 0\") == \"NO\"\n\nassert solution(\"1 1 0 1\") == \"NO\"\n\nassert solution(\"1 1 0 0\") == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"1 1 1 3\") == \"NO\"\nassert solution(\"1 1 2 2\") == \"YES\"\nassert solution(\"1 1 3 3\") == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution(\"1 1 1 1\\n\") == \"YES\"\nassert solution(\"5 7 6 3\\n\") == \"YES\"\nassert solution(\"4 5 3 2\\n\") == \"NO\"\nassert solution(\"4 5 3 2\\n\") == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2 2') == 'YES'\nassert solution('1 1 1 2') == 'NO'\nassert solution('3 4 2 1') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1 1 1\n1 1 1 1''') == 'YES'\nassert solution('''4 5 1 1\n1 1 1 1''') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 3 3 3\") == \"NO\"\nassert solution(\"1 2 2 2\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('1 2 2 1') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1 1') == \"YES\"\nassert solution('1 1 2 1') == \"NO\"\nassert solution('2 3 5 4') == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1 1\n''') == 'YES'\nassert solution('''\n1 1 1 2\n''') == 'NO'\nassert solution('''\n0 1 1 1\n''') == 'YES'\nassert solution('''\n2 2 2 2\n''') == 'NO'\nassert solution('''\n2 3 4 5\n''') == 'YES'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n-2 1 7\n-4 5 -5\n4 -5 0 0\n''') == '80.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('2 24\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '84.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == \"80.5696\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 96 -0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000') == '80.5696000000'\n\"\"\""
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nprint(solution(input()))"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n''') == '80.5696000000'\nassert solution('''\n3 9\n-1.0125 -0.0080 0.0080\n0.0080 0.0080 1.5417\n-0.0080 -0.0080 0.0000\n''') == '0.0080'\n\"\"\"\n--- Day 6: Probably a Fire Hazard ---\n\nThis year's hottest new technology has hit everyone's hubs. The hottest new technology has created many new worldwide problems: fire, global warming, cyberterror, and even (suspicion) alien alien-alien contact.\n\nFire kills: when they spit their way through each other in a video game in their attempt to reduce the spread of disease. The characters don't even notice. It is much worse than most people think they have.\n\nThe other major problem is lack of electricity. Some people say the world needs to be saved, but their parents think that it's too dangerous to blow out their fires.\n\nOther people say that you should be able to speak up about it while you're in the process of reducing the problem, and you haven't even started your fire alarm yet.\n\nIt's only after you've got that in your mind, you can actually start trying to reduce the problem even further. You remember a couple of the world's oldest fire-killing video games: Broccoll, the original arcade game, and Alien, the game that made the space station too powerful.\n\nYou need to be the first to save the world from these problems, so you decide to write a program to do just that. Your code should simulate the game in a terminal and report the maximum score you can achieve.\n\nYour program will have a single integer input: the number of fire kills you need to start suppressing. You can't start the fire until it gets to 10. You also need to keep in mind that you can only afford to suppress a fire once every ten minutes (the timer resets in the middle of each 10 minute interval).\n\nWrite a function called solve(k) that simulates the game given above for a certain number of fire kills, and returns the maximum score you can get.\n\nThe score should be represented as an integer.\n\nFor example:\n\nsolve(4) returns 5 because you can win in the first four minutes, suppressing 4 fires, and starting suppressing 4 fires.\nsolve(5) returns 7 because you can win in the first five minutes, suppressing 5 fires, and starting suppressing 5 fires.\nsolve(6) returns 9 because you can win in the first seven minutes, suppressing 6 fires, and starting suppressing 6 fires.\nsolve(7) returns 13 because you can win in the first nine minutes, suppressing 7 fires, and starting suppressing 7 fires.\nsolve(8) returns 17 because you can win in the first ten minutes, suppressing 8 fires, and starting suppressing 8 fires.\nsolve(9) returns 22 because you can win in the first 12 minutes, suppressing 9 fires, and starting suppressing 9 fires.\nsolve(10) returns 30 because you can win in the first 15 minutes, suppressing 10 fires, and starting suppressing 10 fires.\n\n--- Part Two ---\n\nIt's no use, but you do have to notice how long the timer resets.\n\nBecause you're suppressing fires, you could try to make the game just as fast as possible. But at what point will you notice the timer resets?\n\nGiven the same conditions as above, what will be the maximum score you can get?\n\nThe first example above would require 10 minutes (assuming you start suppressing immediately) to generate the maximum score:\n\n0.1 * 10 = 10\n0.4 * 10 = 20\n0.7 * 10 = 30\n0.9 * 10 = 40\n1.1 * 10 = 50\n1.5 * 10 = 60\n1.8 * 10 = 70\n1.9 * 10 = 80\n1.9 * 10 = 90\n1.9 * 10 = 100\nThe second example above would require 80 minutes:\n\n0.1 * 10 = 10\n0.4 * 10 = 20\n0.7 * 10 = 30\n0.9 * 10 = 40\n1.1 * 10 = 50\n1.5 * 10 = 60\n1.8 * 10 = 70\n1.9 * 10 = 80\n2.1 * 10 = 90\n2.1 * 10 = 100\n\nNote that the timer only resets in the middle of an 10 minute interval. For example, if you start suppressing after 10 minutes, you will never see the timer resets.\n\nHere are some examples to clarify this point:\n\nsolve(4) = 5\nsolve(5) = 7\nsolve(6) = 9\nsolve(7) = 13\nsolve(8) = 17\nsolve(9) = 22\nsolve(10) = 30\n\nGiven the same conditions as above, what will be the maximum score you can get?\n\n0.1 * 10 = 10\n0.4 * 10 = 20\n0.7 * 10 = 30\n0.9 * 10 = 40\n1.1 * 10 = 50\n1.5 * 10 = 60\n1.8 * 10 = 70\n1.9 * 10 = 80\n1.9 * 10 = 90\n1.9 * 10 = 100\n\"\"\"\nimport math\n\nimport unittest"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == \"80.5696000000\"\nassert solution('''5 4\n-0.093 0.8252 0.7537\n0.7335 0.1733 0.5081\n0.1748 0.4162 0.1385\n-0.3037 -0.1886 -0.093\n-0.1169 -0.1417 -0.0368''') == \"91.4764000000\"\nassert solution('''12 12\n-0.0024 -0.1347 -0.0253\n0.1675 0.6167 0.3522\n0.4688 -0.5054 -0.0256\n0.6736 0.1184 0.2462\n-0.0919 0.3481 0.3239\n-0.4765 -0.4353 -0.4149\n0.0066 0.0779 -0.0418\n0.2761 -0.0254 0.6236\n0.5472 0.0396 -0.0234\n0.5768 0.2967 -0.0044\n0.9586 -0.0394 0.0254\n0.7183 0.2463 0.3198\n0.6687 0.3484 0.4834\n-0.3857 0.2594 0.0032\n0.7583 -0.0249 -0.0528\n-0.3629 -0.0778 -0.0428\n0.4199 0.4534 -0.0386\n-0.4157 -0.2615 -0.7189\n-0.0172 -0.0248 0.0053\n-0.1259 0.0171 0.3343\n0.0085 -0.0151 0.3906\n0.1285 -0.2643 0.0514\n0.0199 -0.1806 0.2231\n0.0241 -0.0569 -0.5032\n-0.6012 -0.0282 0.0054\n0.2412 -0.2153 0.0447\n0.2337 -0.2717 0.3383\n-0.3276 -0.1837 -0.2516\n-0.2709 -0.0979 -0.0264\n0.0541 -0.1927 0.0072\n-0.3528 -0.2949 0.0014\n0.1189 -0.3737 0.2945\n-0.1481 0.3083 0.0019\n-0.0685 0.0784 0.2875\n0.1043 0.0486 -0.0057\n-0.3394 -0.0758 -0.0047\n0.0826 -0.5039 -0.0416\n0.0993 -0.0449 -0.0465\n0.6262 -0.1331 0.0085\n-0.1551 0.4039 0.5102\n0.0174 0.5046 0.0196\n0.3073 -0.2928 0.0028\n-0.2484 -0.4847 0.0103\n0.1673 -0.6113 0.4138\n-0.1229 0.2093 0.2753\n-0.1491 0.1366 0.2087\n-0.2263 0.3580 0.0722\n-0.3748 0.5032 0.2048\n0.4789 -0.0171 0.4104\n0.4188 -0.5261 0.2586\n-0.6900 0.1585 0.5818\n0.4343 -0.2645 0.0083\n-0.5103 0.5046 0.3040\n0.4566 -0.3179 0.5157\n0.4747 -0.0065 0.5255\n0.4235 -0.1823 0.2056\n0.5059 -0.5737 0.4393\n-0.2629 0.2023 0.1816\n-0.2060 0.5396 0.2194\n-0.0269 -0.0248 -0.2768\n-0.2571 -0.4469 -0.0088\n0.2055 -0.5926 -0.3038\n-0.2754 -0.1446 -0.1135\n0.5082 -0.3842 0.7402\n0.0661 -0.0076 -0.3242\n0.0196 -0.1020 0.0026\n0.1738 -0.4713 -0.2775\n-0.0971 -0.3418 0.0158\n-0.3682 -0.2565 0.1050\n0.1492 -0.0726 0.2046\n-0.3424 -0.1857 -0.2467\n-0.3726 0.0142 0.2211\n-0.1243 -0.1380 0.4669\n0.3189 -0.4311 0.5445\n0.2122 -0.5312 0.1288\n-0.4656 0.0093 0.4421\n-0.3974 -0.0359 -0.4547\n0.1691 -0.2877 -0.3139\n-0.1494 -0.3496 0.0671\n0.0618 0.0035 -0.3952\n0.0064 -0.1731 -0.9183\n0.5037 -0.4100 0.0253\n0.0255 -0.1168 0.1185\n0.3131 0.1377 0.0093\n-0.2731 0.0228 0.3922\n-0.4555 0.2645 0.1093\n-0.0548 0.5186 0.0209\n0.2548 0.3291 0.4355\n-0.2691 0.6041 0.0457\n-0.1178 0.5241 0.0051\n0.0407 -0.1254 0.3319\n-0.0717 -0.5393 0.0050\n-0.1077 -0.0297 0.1751\n-0.2404 -0.5696 0.1871\n0.0860 -0.1718 0.1447\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n''') == \"80.5696000000\"\n\nassert solution('''\n1\n0.0000\n1\n''') == \"0.0000\"\n\nassert solution('''\n3\n0.0000 1.5417 2.0000\n0.0000 1.5417 2.0000\n0.0000 1.5417 2.0000\n''') == \"1.5417\"\n\nassert solution('''\n4\n-0.0000 -1.5417 -2.0000 -3.0000\n-0.0000 -1.5417 -2.0000 -3.0000\n-0.0000 -1.5417 -2.0000 -3.0000\n-0.0000 -1.5417 -2.0000 -3.0000\n''') == \"0.0000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 96\") == \"80.5696000000\"\nassert solution(\"3 2 1 0.1\") == \"2.3\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 96') == '80.561200000000'\nassert solution('4 4 4') == '49.833300000000'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 0 0 1 1 1 0 0 1') == '2'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1 1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0\n-1 -1\n1 -1\n0 0"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('6 0 0 0 1 1 2 1 1 0') == '2'\nassert solution('2 2 1 1 1 2 2 1 1 2') == '2'\nassert solution('7 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0') == '1'\nassert solution('3 1 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0') == '2'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 0 0 1 1 1 0 0 1''') == '2'\nassert solution('''3 0 0 1 1 1 0 0 1''') == '3'\nassert solution('''6 0 0 1 1 1 0 0 1''') == '2'\nassert solution('''12 0 0 1 1 1 0 0 1 0 0 1 0 1 1 1''') == '3'\nassert solution('''18 0 0 1 1 1 1 0 0 1 0 0 1 1 1 1''') == '4'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 0 0 1 1 1 0 0 1') == '2'\nassert solution('3 0 0 1 1 1 0 0 1 1 0 0 0 1') == '5'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 2 2 3 1') == '4'\nassert solution('3\\n0 1 0\\n1 1 2\\n0 3 3') == '1'\nassert solution('7\\n0 1 1\\n0 0 -1\\n1 2 1\\n1 1 -1\\n1 -1 1\\n1 -1 0') == '3'\nassert solution('4\\n0 0 0\\n-1 -1 -1\\n0 0 -1\\n0 1 0') == '2'\nassert solution('5\\n-1 -1 -1\\n0 -1 -1\\n0 -1 -1\\n-1 -1 -1\\n-1 0 0') == '3'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 1 1 1 0 0 1\") == \"2\"\nassert solution(\"5 0 0 2 3 3 1 0 1\") == \"4\""
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1\\n') == '2'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '2'\n'''\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0 1\n2\n0 1''') == '2'\nassert solution('''\n1\n0 2\n2\n0 2''') == '2'\nassert solution('''\n1\n1 2\n2\n1 2''') == '1'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3\") == \"impossible\"\nassert solution(\"1 1 3\") == \"impossible\"\nassert solution(\"1 1 2\") == \"impossible\"\nassert solution(\"1 1 2\") == \"impossible\"\nassert solution(\"1 1 2\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\"\"\") == \"1400\"\nassert solution(\"\"\"4 2 2\n0 0 100\n100 0 100\n100 100 100\n100 100 100\n1 1\n0 0 100\n100 0 100\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5 5\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n''') == '1400'\n\nassert solution('''\n10 10 10\n0 0 400\n1 1 600\n2 2 100\n3 3 500\n4 4 100\n5 5 400\n6 6 300\n7 7 100\n8 8 100\n9 9 100\n10 10 400\n''') == '10500'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10 10 10\n1 0 200\n2 0 200\n3 0 200\n4 0 200\n5 0 200\n6 0 200\n7 0 200\n8 0 200\n9 0 200\n10 0 200\n\"\"\") == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 3') == 'impossible'\nassert solution('4 1 3') == '1400'\nassert solution('4 1 2') == '10000'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '1400'\nassert solution('3 2 3') == 'impossible'\nassert solution('1 2 2') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 3') == 'impossible'\nassert solution('0 0 400') == 'impossible'\nassert solution('1000 0 400') == '1400'\nassert solution('2000 0 400') == 'impossible'\nassert solution('300 0 150') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    5 5 5\n    0 0 400\n    1000 0 400\n    2000 0 400\n    300 0 150\n    1300 0 150\n''') == '1400'"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3') == '1400'\nassert solution('3 3 3') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\") == \"1400\"\nassert solution(\"3 2 1\") == \"impossible\"\n\n\"\"\"\n\nimport heapq\nfrom collections import deque"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173''') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 15\") == \"3907\"\nassert solution(\"5 5\") == \"101\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"20 5\") == \"1\"\nassert solution(\"20 10\") == \"1\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\nhelsinki\\ndublin\\nreykjavik\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm\\noslo london\\noslo copenhagen\\nstockholm copenhagen\\ncopenhagen berlin\\ncopenhagen amsterdam\\nhelsinki berlin\\nlondon amsterdam\\nberlin amsterdam\\nlondon dublin\\nreykjavik dublin\\nreykjavik oslo\\nlondon brussels\\nbrussels amsterdam\\nstockholm amsterdam') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam''') == '3907'\nprint('All tests passed!')"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam''') == '3907'"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 15') == '3907'\nassert solution('15 15') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\n''') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"10 15\\n\"\n    \"stockholm\\n\"\n    \"amsterdam\\n\"\n    \"london\\n\"\n    \"berlin\\n\"\n    \"copenhagen\\n\"\n    \"oslo\\n\"\n    \"helsinki\\n\"\n    \"dublin\\n\"\n    \"reykjavik\\n\"\n    \"brussels\\n\"\n    \"oslo stockholm 415\\n\"\n    \"stockholm helsinki 396\\n\"\n    \"oslo london 1153\\n\"\n    \"oslo copenhagen 485\\n\"\n    \"stockholm copenhagen 522\\n\"\n    \"copenhagen berlin 354\\n\"\n    \"copenhagen amsterdam 622\\n\"\n    \"helsinki berlin 1107\\n\"\n    \"london amsterdam 356\\n\"\n    \"berlin amsterdam 575\\n\"\n    \"london dublin 463\\n\"\n    \"reykjavik dublin 1498\\n\"\n    \"reykjavik oslo 1748\\n\"\n    \"london brussels 318\\n\"\n    \"brussels amsterdam 173\\n\"\n    \"stockholm amsterdam\\n\"\n    \"oslo london\\n\"\n    \"reykjavik dublin\\n\"\n    \"brussels helsinki\") == \"3907\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3907\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 15\") == \"3907\"\nassert solution(\"10 30\") == \"3837\"\nassert solution(\"10 40\") == \"3835\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '1'\nassert solution('''\n5 4\n1 5 1 5 3\n0 3\n2 3\n1 2\n''') == '2'\nassert solution('''\n5 4\n1 5 2 2 3\n0 3\n2 3\n2 1\n''') == '1'\nassert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '1'\nassert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '2'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n1 0\\n0 1\") == \"2\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n1 1\") == \"1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 2\") == \"1\""
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\nassert solution(\"3 10\\n1 2 3 4 5 6\\n4 2\\n9 3\\n2 2\\n7 2\\n1 9\\n5 7\\n6 2\\n5 4\\n1 6\\n8 3\\n1 3\\n8 7\\n7 9\\n3 5\\n6 5\\n7 2\\n2 7\\n7 8\\n8 3\\n1 9\\n2 5\\n4 8\\n5 1\\n4 6\\n5 5\\n4 9\\n7 1\\n6 4\\n4 3\\n2 8\\n6 4\\n5 3\\n1 5\\n2 5\\n6 5\\n2 9\\n4 5\\n1 2\\n7 2\\n1 9\\n4 1\\n1 5\\n6 8\\n2 1\\n2 2\\n4 5\\n2 2\\n7 2\\n5 4\\n2 3\\n6 2\\n1 3\\n3 3\\n1 8\\n4 9\\n2 4\\n2 3\\n7 2\\n4 4\\n4 8\\n4 8\\n2 9\\n5 3\\n3 5\\n7 3\\n8 3\\n2 2\\n9 3\\n8 8\\n1 5\\n5 2\\n4 3\\n9 8\\n6 7\\n5 7\\n4 5\\n3 5\\n1 8\\n6 2\\n5 2\\n5 2\\n4 6\\n1 6\\n5 1\\n4 9\\n3 2\\n5 4\\n3 2\\n3 2\\n4 5\\n2 1\\n8 5\\n5 1\\n8 4\\n5 5\\n2 6\\n3 5\\n3 8\\n5 5\\n6 6\\n6 4\\n5 7\\n6 6\\n3 8\\n2 5\\n1 6\\n4 3\\n8 8\\n3 3\\n5 5\\n3 4\\n2 3\\n8 4\\n5 6\\n6 5\\n8 5\\n5 1\\n5 6\\n5 6\\n3 1\\n5 2\\n7 3\\n1 9\\n1 3\\n6 7\\n3 5\\n7 3\\n4 7\\n4 5\\n1 2\\n5 3\\n6 4\\n2 3\\n4 2\\n2 2\\n2 2\\n4 9\\n3 7\\n2 5\\n2 5\\n8 4\\n1 3\\n2 9\\n6 2\\n4 9\\n6 5\\n2 8\\n3 2\\n4 5\\n6 3\\n2 4\\n7 7\\n4 1\\n3 2\\n5 1\\n2 6\\n7 6\\n5 2\\n7 5\\n2 7\\n3 5\\n2 4\\n3 4\\n6 6\\n4 3\\n5 5\\n2 4\\n3 7\\n4 4\\n6 5\\n5 5\\n5 2\\n2 4\\n3 5\\n4 3\\n5 1\\n2 6\\n6 6\\n1 5\\n1 5\\n8 4\\n8 5\\n1 2\\n4 7\\n1 4\\n5 7\\n3 8\\n4 8\\n4 4\\n5 4\\n2 5\\n4 6\\n5 4\\n3 8\\n6 5\\n1 4\\n8 2\\n2 7\\n3 7\\n1 1\\n3 4\\n4 4\\n8 2\\n6 7\\n1 1\\n3 4\\n6 5\\n4 4\\n3 2\\n2 7\\n1 7\\n4 4\\n7 2\\n6 4\\n4 1\\n4 2\\n2 4\\n2 6\\n2 6\\n4 2\\n8 8\\n6 7\\n4 4\\n2 2\\n2 6\\n6 8\\n5 6\\n1 1\\n2 2\\n8 6\\n6 5\\n6 6\\n1 1\\n7 4\\n5 3\\n7 4\\n7 3\\n1 2\\n2 2\\n7 7\\n5 2\\n4 6\\n1 8\\n5 1\\n2 5\\n3 5\\n1 6\\n2 2\\n3 3\\n5 3\\n2 4\\n6 3\\n3 4\\n6 2\\n1 6\\n1 6\\n2 7\\n2 8\\n1 3\\n1 3\\n5 5\\n6 3\\n4 3\\n2 7\\n1 2\\n1 1\\n5 5\\n2 6\\n6 4\\n1 4\\n4 6\\n4 4\\n7 4\\n8 2\\n2 6\\n3 4\\n5 7\\n6 2\\n7 1\\n5 2\\n3 4\\n2 2\\n8 6\\n4 2\\n2 6\\n6 8\\n2 7\\n2 4\\n3 1\\n4 5\\n6 5\\n2 5\\n4 6\\n6 4\\n5 5\\n5 4\\n7 2\\n6 2\\n3 4\\n2 1\\n4 5\\n3 4\\n4 3\\n2 5\\n3 1\\n1 5\\n3 4\\n7 3\\n2 2\\n4 1\\n5 4\\n7 3\\n6 1\\n1 1\\n1 3\\n1 3\\n5 6\\n4 4\\n7 1\\n5 5\\n2 6\\n7 4\\n2 2\\n2 4\\n3 5\\n4 6\\n1 3\\n1 4\\n2 2\\n4 8\\n3 6\\n2 8\\n1 1\\n1 2\\n3 6\\n2 5\\n3 6\\n1 1\\n2 4\\n2 3\\n3 7\\n3 4\\n7 2\\n6 6\\n2 5\\n4 3\\n2 1\\n5 7\\n1 5\\n5 6\\n6 5\\n5 4\\n2 4\\n2 5\\n1 4\\n4 3\\n1 4\\n6 6\\n2"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"1\""
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n4 3\n5 2 3 1\n1 0\n2 0\n2 0\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n3 1\n5 4\n2 0\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n3 1 3 4 2') == '2'\nassert solution('4 5\\n0 5\\n0 9\\n4 5\\n2 1') == '1'"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1''') == '1'\nassert solution('''6\n2 6 6 7 3 2\n1 1\n4 2\n3 3\n1 2\n1 3\n1 4\n''') == '3'\nassert solution('''10\n1 2\n2 5\n3 4\n4 7\n4 8\n3 6\n5 6\n5 7\n5 8\n4 7\n5 7\n4 8\n2 8\n1 6\n2 7\n3 6\n3 7\n3 8\n2 7\n2 8\n1 6\n2 7\n''') == '4'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '2'\nassert solution('5 7') == '1'\nassert solution('5 10') == '0'\nassert solution('10 6') == '1'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '2'\nassert solution('''4 3\n4 1 2 2\n2 3\n1 1\n''') == '3'\nassert solution('''2 4\n1 2 3 4\n2 1\n1 3\n''') == '1'\nassert solution('''2 3\n3 4 2\n2 1\n1 2\n''') == '1'\nassert solution('''1 3\n3 4 2\n1 2\n1 2\n''') == '2'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n\") == \"2\"\nassert solution(\"10 7\\n3 3 3 3 3 3 3 1\\n1 3\\n2 2\\n3 2\\n5 2\\n6 2\\n7 1\\n8 3\\n9 1\\n10 2\\n\") == \"3\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n\n10\n00100\n01001\n11100\n10111\n11000\n00100\n10111\n01001\n11000\n00100\n\n''') == '00010'\nassert solution('''\n\n5\n00100\n01001\n11100\n10111\n11000\n00100\n10111\n01001\n11000\n00100\n\n''') == '00010'\nassert solution('''\n\n3\n00100\n01001\n11100\n\n''') == '00010'\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"00010\""
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n11100\n10111\n''') == '00010'\nassert solution('''\n2\n01001\n00111\n''') == '01001'\n'''\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"01001\") == \"00010\"\nassert solution(\"11100\") == \"00010\"\nassert solution(\"10111\") == \"00010\"\nassert solution(\"10111\") == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n01001\n11100\n10111\nSample Input:\n7 7\n00101\n01100\n00111\n01011\n00100\n00011\n11111\nSample Output:\n00101\n''') == '00011'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n01100\\n10111\\n') == '00010'\nassert solution('1 10\\n10001\\n01110\\n') == '00100'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n01001\\n11100\\n10111') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5') == '00010'\n\nstdin = \"\"\"3 5\n01001\n11100\n10111\n\"\"\"\n\nsolution(stdin)"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n6 2\\n0 4\") == \"possible\"\nassert solution(\"1\\n6 2\\n6 2\\n6 2\") == \"impossible\"\nassert solution(\"1\\n6 2\\n5 9\") == \"possible\"\nassert solution(\"1\\n6 2\\n6 2\\n10 10\") == \"impossible\"\nassert solution(\"1\\n6 2\\n5 9\\n6 2\\n10 10\") == \"impossible\"\n\"\"\"\nfrom bisect import bisect_left\nfrom bisect import bisect_right\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 2\n0 4\n6 12\n''') == 'possible', 'First'\nassert solution('''\n4 2\n0 3\n4 5\n''') == 'impossible', 'Second'"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3 2\n3 4\n6\n10 2\n0 0\n6 10\n''') == 'possible'\n\n'''\n## 2 ##\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n4 2\\n6 12') == 'possible'\nassert solution('3\\n2 4\\n2 4\\n4 4\\n7 4\\n6 6\\n3 4\\n1 2\\n1 1\\n5 6\\n6 6\\n2 4\\n2 3\\n7 8\\n5 6\\n5 5\\n8 6\\n3 4\\n4 4\\n6 6\\n6 6\\n1 2\\n3 4\\n7 4\\n2 5\\n4 4\\n6 6\\n6 6\\n2 3\\n2 4\\n5 6\\n1 6\\n4 8\\n7 8\\n1 2\\n1 2\\n2 3\\n4 8\\n6 7\\n3 4\\n5 5\\n6 6\\n4 4\\n7 8\\n2 4\\n2 5\\n7 6\\n3 6\\n5 6\\n1 6\\n6 7\\n7 4\\n2 5\\n7 5\\n7 7\\n6 4\\n2 5\\n2 5\\n2 5\\n2 5\\n2 5\\n6 3\\n3 4\\n4 8\\n4 6\\n6 5\\n1 4\\n3 4\\n6 7\\n4 8\\n2 4\\n1 5\\n6 6\\n6 8\\n5 8\\n1 5\\n5 8\\n1 4\\n1 4\\n3 4\\n3 4\\n2 4\\n4 8\\n5 5\\n7 8\\n6 7\\n5 6\\n7 5\\n6 4\\n1 4\\n1 4\\n5 5\\n7 5\\n5 5\\n1 4\\n2 4\\n1 4\\n3 4\\n6 5\\n6 5\\n2 5\\n6 5\\n5 5\\n7 5\\n3 4\\n7 5\\n6 4\\n2 4\\n2 4\\n2 4\\n2 4\\n1 4\\n6 5\\n5 5\\n3 4\\n5 5\\n2 5\\n1 4\\n2 4\\n3 4\\n1 4\\n1 4\\n6 5\\n5 5\\n2 4\\n6 5\\n2 4\\n6 5\\n6 5\\n5 5\\n1 5\\n5 6\\n5 6\\n2 5\\n1 5\\n6 5\\n2 5\\n1 4\\n6 5\\n2 5\\n2 5\\n6 5\\n6 5\\n2 5\\n6 5\\n1 4\\n6 5\\n1 5\\n2 5\\n6 5\\n1 5\\n6 5\\n6 5\\n5 6\\n5 6\\n5 6\\n2 5\\n2 5\\n6 5\\n2 5\\n6 5\\n1 6\\n6 6\\n1 5\\n5 5\\n5 5\\n2 5\\n2 5\\n1 5\\n1 5\\n1 4\\n1 4\\n1 4\\n5 5\\n1 5\\n1 5\\n6 5\\n1 6\\n6 6\\n6 6\\n6 6\\n1 5\\n6 5\\n1 5\\n6 5\\n6 5\\n5 6\\n1 6\\n6 6\\n1 5\\n1 5\\n6 5\\n6 5\\n6 5\\n5 6\\n1 5\\n2 5\\n1 4\\n1 4\\n1 4\\n1 5\\n1 4\\n6 5\\n1 5\\n6 5\\n6 5\\n1 5\\n1 5\\n6 5\\n1 5\\n6 5\\n2 5\\n1 5\\n1 5\\n6 5\\n6 5\\n1 5\\n1 5\\n1 5\\n5 6\\n1 6\\n1 5\\n1 5\\n6 5\\n1 6\\n1 6\\n1 5\\n1 5\\n2 5\\n6 5\\n6 5\\n6 5\\n6 5\\n1 6\\n6 5\\n1 6\\n1 6\\n1 5\\n1 6\\n6 5\\n6 5\\n6 5\\n2 5\\n6 5\\n1 6\\n6 5\\n1 5\\n5 5\\n1 5\\n1 5\\n5 5\\n1 5\\n5 5\\n5 5\\n2 5\\n1 5\\n1 5\\n5 5\\n1 5\\n2 5\\n6 5\\n1 6\\n2 5\\n1 5\\n1 5\\n2 5\\n1 5\\n1 5\\n6 5\\n6 5\\n2 5\\n1 5\\n1 5\\n2 5\\n1 5\\n1 5\\n1 5\\n6 5\\n6 5\\n2 5\\n1 5\\n6 5\\n1 5\\n6 5\\n1 5\\n1 5\\n2 5\\n1 5\\n1 5\\n6 5\\n1 6\\n1 6\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n6 5\\n1 5\\n1 6\\n1 6\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5\\n1 5"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'possible'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == 'possible'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n0 4') == 'possible'\nassert solution('1\\n2\\n3 4') == 'impossible'\nassert solution('1\\n3\\n5 3') == 'impossible'\nassert solution('1\\n4\\n5 3') == 'possible'\n\nstdin = '''\n2\n3 2\n0 4\n5 3\n4 5\n'''"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n6 2\\n0 4\\n6 12\\n\") == \"possible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 7\\n\") == \"impossible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 7\\n\") == \"impossible\"\nassert solution(\"1\\n6 2\\n0 4\\n6 7\\n\") == \"impossible\"\nassert solution(\"1\\n1 1\\n0 5\\n1 1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'possible'\nassert solution('2') == 'impossible'\n'''"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n5 2\n0 4\n6 12\n''') == 'impossible'\nassert solution('''\n3\n0 2\n0 4\n''') == 'possible'\nassert solution('''\n2\n6 3\n0 4\n''') == 'impossible'\nassert solution('''\n4\n1 2\n0 3\n0 4\n''') == 'possible'\nassert solution('''\n2\n1 3\n0 4\n''') == 'impossible'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"2\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n0 1 2\n-1 0 1\n0 0 1\n0 -1 1\n-1 -1 1\n1 0 1\n''') == '2'\n\n'''\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1''') == '2'\n\n'''"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n3 1\n4 4\n''') == '3'\nassert solution('''3\n-2 -2\n-1 0\n1 1\n''') == '2'\n\nprint('All done!')\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\") == \"2\"\nassert solution(\"3\\n3 -0.005 1\\n0.005 -1\\n-0.005 1\") == \"1\"\nassert solution(\"2\\n10 5 1\\n-10 5 1\") == \"2\"\nassert solution(\"6\\n-10 5 1\\n10 5 1\\n-5 0 1\\n10 0 1\\n5 0 1\") == \"5\"\nassert solution(\"-10 5 1\\n10 5 1\\n-5 0 1\\n10 0 1\\n5 0 1\") == \"4\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('5 0 1') == '2'\nassert solution('10 0 1') == '1'\nassert solution('0 5 1') == '1'\nassert solution('0 -5 1') == '1'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('0') == '1'\nassert solution('1') == '0'\nassert solution('10') == '1'\nassert solution('5 0 1') == '2'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\\n\") == \"Yes\"\nassert solution(\"2\\nD\\nD\\n\") == \"Plot Error\"\nassert solution(\"5\\nD\\nD\\nD\\nD\\n\") == \"Yes\"\nassert solution(\"2\\nD\\nD\\nS 2!bobby_dies\\n\") == \"Yes\"\nassert solution(\"5\\nD\\nD\\nS 2!bobby_dies\\nS 1!bobby_dies\\n\") == \"Yes\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('4\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'Yes'\nassert solution('8') == 'Yes'\nassert solution('0') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('2') == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_dies\\nS 4!bobby_dies\\nS 5!bobby_dies\\nS 6!bobby_dies') == '3 Just A Dream'\nassert solution('10\\nE business_as_usual\\nS 1!bobby_dies\\nS 2!bobby_dies business_as_usual\\nS 3!bobby_dies\\nS 4!bobby_dies\\nS 5!bobby_dies\\nS 6!bobby_dies\\nS 7!bobby_dies\\nS 8!bobby_dies\\nS 9!bobby_dies\\nS 10!bobby_dies\\nS 11!bobby_dies\\nS 12!bobby_dies\\nS 13!bobby_dies\\nS 14!bobby_dies\\nS 15!bobby_dies\\nS 16!bobby_dies\\nS 17!bobby_dies\\nS 18!bobby_dies\\nS 19!bobby_dies\\nS 20!bobby_dies') == 'Yes'\nassert solution('10\\nE business_as_usual\\nS 1!bobby_dies\\nS 2!bobby_dies business_as_usual\\nS 3!bobby_dies\\nS 4!bobby_dies\\nS 5!bobby_dies\\nS 6!bobby_dies\\nS 7!bobby_dies\\nS 8!bobby_dies\\nS 9!bobby_dies\\nS 10!bobby_dies\\nS 11!bobby_dies\\nS 12!bobby_dies\\nS 13!bobby_dies\\nS 14!bobby_dies\\nS 15!bobby_dies\\nS 16!bobby_dies\\nS 17!bobby_dies\\nS 18!bobby_dies\\nS 19!bobby_dies\\nS 20!bobby_dies') == 'Yes'\nassert solution('10\\nE business_as_usual\\nS 1!bobby_dies\\nS 2!bobby_dies business_as_usual\\nS 3!bobby_dies\\nS 4!bobby_dies\\nS 5!bobby_dies\\nS 6!bobby_dies\\nS 7!bobby_dies\\nS 8!bobby_dies\\nS 9!bobby_dies\\nS 10!bobby_dies\\nS 11!bobby_dies\\nS 12!bobby_dies\\nS 13!bobby_dies\\nS 14!bobby_dies\\nS 15!bobby_dies\\nS 16!bobby_dies\\nS 17!bobby_dies\\nS 18!bobby_dies\\nS 19!bobby_dies\\nS 20!bobby_dies') == '3 Just A Dream'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\n\nassert solution('''\n10\nE bobby_dies\nE stuff_happens\nS 1 bobby_died\nS 2!bobby_dies it_goes_on_and_on\nS 3 bobby_dies\nS 4 bobby_dies\nS 5 bobby_dies\nS 6 bobby_dies\nS 7 bobby_dies\nS 8 bobby_dies\nS 9 bobby_dies\nS 10 bobby_dies\nS 11 bobby_dies\nS 12 bobby_dies\nS 13 bobby_dies\nS 14 bobby_dies\nS 15 bobby_dies\nS 16 bobby_dies\nS 17 bobby_dies\nS 18 bobby_dies\nS 19 bobby_dies\nS 20 bobby_dies\n''') == 'Yes'\n\nassert solution('''\n10\nE bobby_dies\nS 1 bobby_died\nS 2!bobby_dies\nS 3 bobby_dies\nS 4 bobby_dies\nS 5 bobby_dies\nS 6 bobby_dies\nS 7 bobby_dies\nS 8 bobby_dies\nS 9 bobby_dies\nS 10 bobby_dies\nS 11 bobby_dies\nS 12 bobby_dies\nS 13 bobby_dies\nS 14 bobby_dies\nS 15 bobby_dies\nS 16 bobby_dies\nS 17 bobby_dies\nS 18 bobby_dies\nS 19 bobby_dies\nS 20 bobby_dies\n''') == 'No'\n\nassert solution('''\n100\nE business_as_usual\nE bobby_dies\nE tucker_strikes\nE jr_does_bad_things\nS 1 bobby_died\nS 2 tucker_strikes business_as_usual\nS 3 tucker_strikes\nS 4 tucker_strikes\nS 5 bobby_died\nS 6 tucker_strikes\nS 7 tucker_strikes\nS 8 tucker_strikes\nS 9 tucker_strikes\nS 10 tucker_strikes\nS 11 tucker_strikes\nS 12 tucker_strikes\nS 13 tucker_strikes\nS 14 tucker_strikes\nS 15 tucker_strikes\nS 16 tucker_strikes\nS 17 tucker_strikes\nS 18 tucker_strikes\nS 19 tucker_strikes\nS 20 tucker_strikes\nS 21 tucker_strikes\nS 22 tucker_strikes\nS 23 tucker_strikes\nS 24 tucker_strikes\nS 25 tucker_strikes\nS 26 tucker_strikes\nS 27 tucker_strikes\nS 28 tucker_strikes\nS 29 tucker_strikes\nS 30 tucker_strikes\nS 31 tucker_strikes\nS 32 tucker_strikes\nS 33 tucker_strikes\nS 34 tucker_strikes\nS 35 tucker_strikes\nS 36 tucker_strikes\nS 37 tucker_strikes\nS 38 tucker_strikes\nS 39 tucker_strikes\nS 40 tucker_strikes\nS 41 tucker_strikes\nS 42 tucker_strikes\nS 43 tucker_strikes\nS 44 tucker_strikes\nS 45 tucker_strikes\nS 46 tucker_strikes\nS 47 tucker_strikes\nS 48 tucker_strikes\nS 49 tucker_strikes\nS 50 tucker_strikes\nS 51 tucker_strikes\nS 52 tucker_strikes\nS 53 tucker_strikes\nS 54 tucker_strikes\nS 55 tucker_strikes\nS 56 tucker_strikes\nS 57 tucker_strikes\nS 58 tucker_strikes\nS 59 tucker_strikes\nS 60 tucker_strikes\nS 61 tucker_strikes\nS 62 tucker_strikes\nS 63 tucker_strikes\nS 64 tucker_strikes\nS 65 tucker_strikes\nS 66 tucker_strikes\nS 67 tucker_strikes\nS 68 tucker_strikes\nS 69 tucker_strikes\nS 70 tucker_strikes\nS 71 tucker_strikes\nS 72 tucker_strikes\nS 73 tucker_strikes\nS 74 tucker"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n1\nE bobby_died\nE stuff_happens\nD 2\n''') == 'Plot Error'\nassert solution('''\n1\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\nS 1!bobby_died\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\nassert solution(input()) == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('1\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_died\\nS 4!bobby_died\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == '3 Just A Dream'\nassert solution('1\\nE business_as_usual\\nS 4!bobby_dies\\nS 3!bobby_died\\nS 2!bobby_died\\nS 1!bobby_dies\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Plot Error'\nassert solution('1\\nE business_as_usual\\nS 4!bobby_dies\\nS 3!bobby_died\\nS 2!bobby_died\\nS 1!bobby_dies\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\nassert solution('1\\nE business_as_usual\\nS 4!bobby_dies\\nS 3!bobby_died\\nS 2!bobby_died\\nS 1!bobby_dies\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\nD 7\nS 1!bobby_dies\nS 2!bobby_dies\nS 3!bobby_dies\nS 4!bobby_dies\nS 5!bobby_dies\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\nD 7\nS 1!bobby_dies\nS 2!bobby_dies\nS 3!bobby_dies\nS 4!bobby_dies\nS 5!bobby_dies\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\nD 7\nS 1!bobby_dies\nS 2!bobby_dies\nS 3!bobby_dies\nS 4!bobby_dies\nS 5!bobby_dies\n\"\"\") == \"No\"\nassert solution(\"\"\"\n5\nS 2!bobby_dies\nS 1!bobby_dies\nS 4!bobby_dies\nS 3!bobby_dies\nS 5!bobby_dies\n\"\"\") == \"Plot Error\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6 2 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\""
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('24 5 8 7') == '+-----------------+'\nassert solution('7 8 7 4 9 7') == '+-----------------+'\nassert solution('3 3 3 5 5 5') == '+-----------------+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"24 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n\nSUBTRACT H FROM L GIVING DENOMINATOR.\nSUBTRACT 3 FROM H.\nMULTIPLY F BY H GIVING NUMERATOR.\nDIVIDE NUMERATOR BY DENOMINATOR GIVING T REMAINDER LEFT-OVER.''') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in | |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n(defun thumb (lines height first) (/ (* (- height 3) first) (- lines height)))'\n\nassert solution('''\n  18 19 18\n  2 2\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3\n  1 1\n  4 4\n  3 1\n  2 2\n  2 1\n  1 3"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n'''\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('24 5 8 7') == '-h+|+^^vv', solution('24 5 8 7')\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('24 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n+------------------------+-+'\nprint(solution('24 5 8 7'))\nprint(solution('2 5 3 4'))\nprint(solution('1 4 3 1'))\nprint(solution('1 3 3 1'))\nprint(solution('1 2 3 4'))\nprint(solution('1 2 3 4'))\nprint(solution('1 2 3 4'))\nprint(solution('1 3 4'))\nprint(solution('1 4'))\nprint(solution('1 4'))\nprint(solution('1 4'))\nprint(solution('1 4'))\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n\"\"\") == \"\"\"\n+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n\"\"\"\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"24 5 8 7\") == \"-^v-^-^v-^+---^v-^-^v-^-^v-^+-^v-^-^v-^+--^v-^+--+-+^v-^+-^v-^+-^+-^v-^+-^v-^+-^+-^+-^v-^+-^+--^v-^+--+-+^v-^+-^v-^+-^+-^v-^+-^v-^+-^+-^+-^+--+^v-^+--^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^v-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+-^v-^+-+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+-^v-^+-^v-^+-^+-^+-^+-^+-^+--+^v-^+-^+-^+-^+"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'impossible'\nassert solution('''4 10\n0 3 2 1\n2 1 0 2\n1 3 2 0\n3 0 1 3\n''') == 'possible'\nassert solution('''0 4\n0 1 2 3\n1 2 3 4\n2 3 4 5\n3 4 5 6\n''') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'\nassert solution('''\n5 10\n0 0 0 0 2\n1 1 2 3 0\n2 2 4 4 0\n0 0 0 3 3\n0 1 1 2 2\n''') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'possible'\nassert solution('2 4\\n2 2 3\\n2 3 2\\n1 1 3\\n3 1 3\\n') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('2 3\\n1 0\\n1 2\\n1 0\\n1 2\\n') == 'impossible'\nassert solution('4\\n3\\n1\\n3\\n2\\n3\\n1\\n2\\n2\\n3\\n3\\n') == 'impossible'\n\"\"\""
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10') == 'impossible'\nassert solution('4 10') == 'impossible'\nassert solution('1 2 1') == 'possible'\nassert solution('3 1 1 3') == 'possible'\nassert solution('2 1 2 1') == 'impossible'\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 10\") == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n\") == \"impossible\"\nassert solution(\"6 5\\n0 1 0 0 0 0\\n3 4 1 0 0\\n3 1 4 0 0\\n0 1 0 0 0\\n3 4 1 0 0\\n3 0 2 0 0\") == \"impossible\"\nassert solution(\"2 6\\n0 1 0 0 0\\n3 4 1 0 0\\n0 1 0 0 0\\n3 4 1 0 0\\n3 0 2 0 0\") == \"possible\"\nassert solution(\"6 5\\n0 1 0 0 0\\n3 4 1 0 0\\n3 1 4 0 0\\n0 1 0 0 0\\n3 4 1 0 0\\n3 0 2 0 0\") == \"impossible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == 'impossible'\nassert solution('4 5') == 'possible'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"1.00000000\"\n\nassert solution(\"2 2 2\") == \"0.50000000000000004\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 2') == '0.5'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\\n1\\n2\") == \"1.0\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 1\\n2 3\\n3') == \"1\"\nassert solution('3 2 4\\n1 2\\n2 3\\n4') == \"1\"\nassert solution('2 1 1\\n1') == \"1\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 1') == '1.00000000'\nassert solution('1 1 1') == '0.99999994'\n\"\"\"\nfrom math import floor, ceil\n\nn, d, c = map(int, stdin.readline().split())"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1 1\n1\n2\n''') == '1.00000000', 'First example'\nassert solution('''\n1 1 1\n2\n1\n''') == '2.00000000', 'Second example'\nassert solution('''\n6 1 1\n1\n2\n''') == '3.00000000', 'Third example'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '1.00000000'\nassert solution('2 1 1') == '1.00000000'\nassert solution('2 2 1') == '0.666666667'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1.00000000'\nassert solution('1\\n2\\n3') == '2.00000000'\nassert solution('1\\n1\\n1') == '1.00000000'\nassert solution('1\\n2\\n1') == '1.00000000'\nassert solution('1\\n1\\n1') == '1.00000000'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1 1\n1\n2\n''') == '1.00000000', \"First\"\nassert solution('''2 1 1\n2\n1\n''') == '0.500000000', \"Second\"\nassert solution('''2 1 1\n1\n2\n''') == '1.00000000', \"Third\"\nassert solution('''2 1 1\n2\n2\n''') == '1.00000000', \"Fourth\"\nassert solution('''2 1 1\n1\n2\n''') == '1.00000000', \"Fifth\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 1\n1\n2\n''') == '1.00000000'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '1 2'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2'\n\nassert solution('''4\n7 4 3 2\n2 5\n1 5\n1 5\n5 1\n''') == '2'\n\nprint('solution() is OK')"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 3 3 2') == '1'\nassert solution('5\\n4 3 3 2\\n1 2') == '1'\nassert solution('5\\n4 3 3 2\\n1 2\\n1 1') == '3'\n\nSample Input:\n1\n10\n1 1\n10\nSample Output:\n0\n\nimport sys\ninput = sys.stdin.readline"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n\") == \"2\\n1\\n3\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 3 3 2') == '3'\nassert solution('1 2 4 3 1') == '2'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '3\\n1\\n3\\n'''\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n4 5 2\\n1 2\\n1 1\\n2 4\\n') == '2'\nassert solution('5\\n4 3 3 2\\n1 2\\n1 1\\n2 4\\n') == '1'\nassert solution('5\\n4 3 3 2\\n1 2\\n1 1\\n2 4\\n') == '3'\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 3 3 2') == '2'\nassert solution('5 4 3 3 2 1 2') == '1'"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n4 3 3 2\n3\n1 2\n1 1\n2 4''') == '3'\nassert solution('''5\n4 3 3 2\n3\n1 2\n1 1\n2 4''') == '1'\nassert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n5''') == '2'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2\\n0 1\\n1 2\\n0 2\\n') == '1\\n'\nassert solution('3 2\\n0 1\\n1 2\\n0 2\\n') == 'never meet\\n'\nassert solution('3 2\\n0 1\\n1 2\\n0 2\\n') == '1\\n'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == '1'\n\nassert solution('''\n3 3\n0 1\n1 2\n0 2\n0 3\n''') == 'never meet'\n\nassert solution('''\n3 4\n0 1\n1 2\n2 3\n0 2\n2 3\n''') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == \"1\"\nassert solution('3 4') == \"1\"\nassert solution('3 2') == \"1\"\nassert solution('3 2') == \"1\"\nassert solution('1 2') == \"0\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == \"1\"\nassert solution('1 1') == \"0.5\"\nassert solution('5 5') == \"1\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n1 0\n2 1\n2 0\n3 1\n''') == '1'\nassert solution('''\n2 2\n1 0\n0 2\n0 1\n''') == '2'\nassert solution('''\n4 2\n1 0\n1 1\n0 1\n0 2\n''') == '5'\nassert solution('''\n5 2\n1 0\n0 2\n1 1\n2 0\n''') == '5'\nassert solution('''\n3 2\n0 0\n0 1\n1 1\n''') == '0'\n''') == 'never meet'\n\n\"\"\"\n\nn, m = map(int, input().split())\n\nneighbour_list = []\nfor _ in range(m):\n    neighbour_list.append(list(map(int, input().split())))\n\nprint(n-len(neighbour_list))"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n0 1\\n1 2\\n0 2') == '1'\nassert solution('2\\n2\\n0 1\\n1 2\\n0 2') == '1'\nassert solution('1\\n3\\n0 1\\n1 2\\n0 2') == '2'\nassert solution('2\\n3\\n0 1\\n1 2\\n0 2') == '2'\nassert solution('2\\n4\\n0 1\\n1 2\\n0 2') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '1'\nassert solution('10 10') == '10'\n\"\"\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\\n0 1\\n1 2\\n0 2\") == \"1\"\nassert solution(\"5 2\\n0 1\\n1 3\\n2 4\\n3 5\") == \"1\"\nprint('Tests passed')\n\"\"\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 3') == '2'\nassert solution('1 1') == '1'\nassert solution('4 5') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 2\n0 1\n1 2\n0 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 4\n1 2\n0 2\n1 3\n0 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 4\n1 2\n2 1\n0 3\n1 4\n0 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n10 10\n0 1\n0 3\n0 5\n2 7\n4 9\n1 4\n8 4\n8 5\n2 8\n8 6\n6 9\n4 7\n6 7\n2 6\n4 8\n8 2\n1 5\n5 7\n3 6\n2 5\n2 8\n8 6\n1 5\n4 6\n3 4\n2 8\n8 3\n7 6\n2 6\n2 9\n8 3\n2 8\n6 3\n4 8\n7 8\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n2 4\n2 5\n4 7\n3 6\n4 5\n7 6\n3 4\n4 7\n2 4\n2 5\n4 8\n7 3\n7 4\n3 2\n3 4\n8 4\n7 5\n4 8\n7 6\n3 6\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4 2\n2 2 1\n1 1 1\n1 1 1\n1 1 1''') == '14500000001'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 4 2\n\"\"\") == \"14500000001\"\nassert solution(\"\"\"\n10 4 2\n\"\"\") == \"7\"\nassert solution(\"\"\"\n6 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 4 2\n''') == '14500000001'\nassert solution('''\n10 2 2\n''') == '405315363837978989760040602039688950391568\nassert solution('''\n10 2 2\n''') == '8205673992590725974717647993958013954131589\nassert solution('''\n10 2 3\n''') == '8205673992590725974717647993958013954131589\nassert solution('''\n5 5 4\n''') == '222027983332691021011616946591295179067609\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 2') == '14500000001'\nassert solution('6 3 4') == '107971'\nassert solution('8 5 5') == '171664'\nassert solution('5 9 5') == '341284'\nassert solution('5 6 5') == '341284'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 2') == '14500000001'\nassert solution('10 10 10') == '20'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4 2\n5 1 1\n5 1 1\n5 2 1\n5 2 1''') == '14500000001'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 2') == '14500000001'"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4 2\n''') == '14500000001'\n\nassert solution('''\n5 4 2\n''') == '14500000001'\n\nassert solution('''\n5 3 4 2\n''') == '15000000000000'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '14500000001'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4 2\n3\n1 1 2\n2 1 2\n2 1 1''') == '14500000001'\nassert solution('''8 4 2\n3\n1 1 2\n2 1 2\n2 1 1\n3\n1 1 1\n3\n1 1 3''') == '14500000001'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('100') == '1'"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n4 4\\n1 6\\n2 6') == '0\\n1\\n1\\n2'\nassert solution('1\\n1 2\\n2 3\\n3 4') == '1\\n1\\n1\\n1'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == '0\\n1\\n2\\n3\\n4\\n'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('100') == '99'\nassert solution('200') == '199'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n5 3 4') == '0\\n1\\n1\\n2'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\") == \"0\\n1\\n1\\n\"\n\"\"\""
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 4') == '0'\nassert solution('3 7') == '1'\nassert solution('1 6') == '1'\nassert solution('2 6') == '2'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 4\n3 7\n1 6\n2 6\n''') == '2'\nassert solution('''\n2\n3\n2\n''') == '0'\nassert solution('''\n4\n1 4\n3 7\n1 6\n2 6\n''') == '1'\nassert solution('''\n10\n1 4\n3 7\n1 6\n2 6\n3 6\n3 7\n2 6\n2 6\n4 5\n2 7\n4 6\n5 7\n1 2\n1 7\n''') == '3'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n3 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2\\n'\nassert solution('4\\n3 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2\\n'\nassert solution('10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10\\n10 10 10 10 10 10 10 10 10 10') == '0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"3100\"\nassert solution(\"5 3\") == \"3100\"\nassert solution(\"5 3\") == \"3100\"\nassert solution(\"5 3\") == \"3100\"\nassert solution(\"5 3\") == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3300'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"3100\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 3\") == \"3600\"\nassert solution(\"3 3\") == \"3600\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"3100\"\nassert solution(\"5 2\") == \"3300\"\nassert solution(\"4 5\") == \"5200\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n'''\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n'''\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 5\n1 2 1\n2 3 1\n4 5 1\n1 4 1\n3 5 1\n''') == '5500'\n'''\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '3100'\nassert solution('5 1') == '1350'\nassert solution('5 2') == '1400'\nassert solution('5 3') == '1400'\nassert solution('5 2') == '1400'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1') == '110'\nassert solution('10 3') == '110'\nassert solution('5 1') == '110'\nassert solution('7 3') == '150'\nassert solution('100 1') == '100'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\\n5 3\\n3 2\\n7 7\") == \"2.4\"\nassert solution(\"1 5\\n2 2\\n3 4\\n5 1\") == \"4.0\"\nassert solution(\"5 7\\n8 5\\n6 5\\n4 5\\n2 6\\n7 5\\n7 5\\n7 6\\n6 5\") == \"3.6\"\nassert solution(\"20 20\\n15 15\\n20 15\\n17 20\\n14 20\\n20 15\\n17 20\\n17 20\\n15 20\\n17 20\\n20 15\\n20 20\\n20 15\\n17 20\\n16 20\\n18 20\\n16 20\\n19 20\\n15 16\\n18 20\\n17 20\\n16 20\\n17 20\\n15 20\\n20 18\\n18 20\\n20 18\\n15 16\\n17 20\\n16 20\\n18 20\\n17 20\\n17 20\\n16 20\\n15 20\\n20 18\\n19 20\\n18 20\\n17 20\\n16 20\\n18 20\\n20 18\\n19 20\\n18 20\\n17 20\\n16 20\\n19 20\\n17 20\\n16 20\\n17 20\\n18 20\\n16 20\\n18 20\\n17 20\\n16 20\\n17 20\\n16 20\\n17 20\\n16 20\\n17 20\\n18 20\\n18 20\\n17 20\\n16 20\\n17 20\\n15 20\\n18 20\\n17 20\\n16 20\\n17 20\\n15 20\\n17 20\\n16 20\\n17 20\\n15 20\\n16 20\\n18 20\\n18 20\\n17 20\\n16 20\\n17 20\\n16 20\\n16 20\\n16 20\\n16 20\\n17 20\\n16 20\\n16 20\\n17 20\\n17 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n16 20\\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n4\\n1 2\\n2 1') == '1.5'\nassert solution('3 3\\n3 2\\n2 1\\n2 1') == '2.5'\nassert solution('3 3\\n4 2\\n2 1\\n2 1') == '2.5'\nassert solution('4 3\\n4 2\\n2 1\\n2 1') == '2.5'\nassert solution('4 3\\n4 4\\n2 1\\n2 1') == '3.5'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n6\\n4 5\\n6 5') == '5.25'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n1\n1\n1\n2\n2\n2\n3\n3\n3\n3\n4\n4\n4\n4''') == '5.250000000'\nassert solution('''1\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n3\n3\n3\n3\n3\n3\n3\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4''') == '5.250000000'\nprint(solution('''2\n1\n2\n3\n3\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '1.500000000000001'\nassert solution('5 1') == '1.0'\nassert solution('20 1') == '8.25000000000'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n2 3\\n3 4') == '2.0'\nassert solution('8 8\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n12 13\\n15 16\\n18 19\\n21 22\\n25 26') == '4.5'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1.5\"\nassert solution(\"1 1\") == \"0.5\"\nassert solution(\"1 2\") == \"0.5\"\nassert solution(\"2 2\") == \"0.25\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 3\\n4 5\\n2 3\\n5 7') == '5.25'\nassert solution('4 5\\n2 3\\n2 5\\n5 3\\n1 3') == '6.25'\nassert solution('5 5\\n2 3\\n2 5\\n5 3\\n1 3') == '6.75'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '5.25'\n\n'''\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1.5'\nassert solution('4 2') == '1.75'\nassert solution('5 2') == '1.5'\nassert solution('6 2') == '1.5'\nassert solution('7 2') == '2.0'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 1 2 1 1''') == '7'\nassert solution('''1 2 3 1 2 1 1''') == '2'\nassert solution('''1 2 3 1 2 1 1''') == '0'\nassert solution('''1 2 3 1 2 1 1''') == '4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2 3 1 2 1 1''') == \"7\"\nassert solution('''1 2 3 1 2 1 1''') == \"2\"\nassert solution('''1 2 3 1 2 1 1''') == \"0\"\n'''"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"7\\n\"\n    \"1 2 3 1 2 1 1\\n\"\n    \"5\\n\"\n    \"1 3 1 2 3\\n\"\n    \"1 2 1 2\\n\"\n    \"2 2 2 3\\n\"\n    \"3 2 1 2\\n\"\n    \"4 2 1 2\\n\"\n) == \"7\\n2\\n2\\n0\\n4\"\n\nassert solution(\n    \"2\\n\"\n    \"1 1\\n\"\n    \"2\\n\"\n) == \"0\\n\"\n\nassert solution(\n    \"8\\n\"\n    \"1 2 3\\n\"\n    \"1 2 2\\n\"\n    \"1 1 1\\n\"\n    \"1 2 2\\n\"\n    \"2 2 1\\n\"\n    \"2 2 2\\n\"\n    \"2 1 2\\n\"\n    \"2 2 2\\n\"\n) == \"5\\n\"\n\nassert solution(\n    \"10\\n\"\n    \"1 3 1 2 3 1 2 1 1 1 2 3\\n\"\n    \"2 2 2 3\\n\"\n    \"3 3 3 3\\n\"\n    \"4 4 4 4\\n\"\n    \"5 5 5 5\\n\"\n    \"6 6 6 6\\n\"\n    \"7 7 7 7\\n\"\n    \"8 8 8 8\\n\"\n    \"9 9 9 9\\n\"\n    \"10 10 10 10\\n\"\n) == \"8\\n\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 1 2 1 1') == '7'\nassert solution('5') == '2'\nassert solution('1 2 3 1 2 1 1') == '7'\nassert solution('4 2 1 2') == '2'\nassert solution('4 2 1 2') == '2'"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4\\n'''\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\nSample Output:\n7\n2\n2\n0\n4\n''') == '2'\nassert solution('''10\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n5 2 1 2\n6 2 1 2\n7 2 1 2\n8 2 1 2\n9 2 1 2\n10 2 1 2\nSample Output:\n7\n2\n2\n0\n4\n''') == '2'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"7\\n2\\n0\\n4\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n\"\"\") == \"\"\"\n7\n2\n0\n4\n\"\"\"\n\nassert solution(\"\"\"\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n\"\"\") == \"\"\"\n2\n2\n2\n1\n\"\"\""
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '7\\n2\\n2\\n0\\n4'"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open('testInput.txt', 'r').read()) == '2\\n1\\n0\\n4\\n2\\n'\nassert solution(open('input.txt', 'r').read()) == '4\\n2\\n0\\n4\\n2\\n'"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"32.6405451448\"\nprint(solution())"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448', 'Should have returned 32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n30 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n40 30 30 40 20 40 50 30 30 50\") == \"32.6405451448\"\nprint(solution(input()))"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448', 'incorrect solution'"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n\"\"\") == \"32.6405451448\"\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2') == '32.6405451448'\nassert solution('5\\n21 18 26 18 18\\n0.0 0.0 0.0 0.0\\n0.0 0.1 0.0 0.0\\n0.0 0.0 0.1 0.0\\n0.0 0.0 0.0 0.1\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0') == '4.0'\nassert solution('5\\n17 16 20 17 16\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0') == '8.0'\nassert solution('5\\n1 2 3 4 5\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0\\n0.0 0.0 0.0 0.0') == '1.0'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448', 'First'\nassert abs(solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') - 32.6405451448) < 1e-4, 'Second'\n\n'''\nSample Input:\n4\n7 1 4 3\n0.0 0.2 0.4 0.5 0.1\n0.0 0.1 0.5 0.2 0.4\n0.2 0.0 0.2 0.2 0.4\n0.4 0.4 0.4 0.4 0.4\n0.5 0.5 0.5 0.5 0.5\n0.3 0.3 0.3 0.3 0.3\n0.4 0.3 0.4 0.4 0.4\n0.4 0.2 0.4 0.2 0.4\n0.3 0.3 0.3 0.3 0.3\nSample Output:\n2.93215862541\n'''\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 1 4 3\n''') == '2 3 4 1'''"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '2 3 1 4'\nassert solution('''\n3\n2 1 3 4\n''') == '2 1 3 4'\n'''\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 4 2 3'\n\nIn the first test case, Gaggler 1 is the only Gaggler left with a mentor, and he can keep it. The next Gaggler is a 2nd-place, and if he wants to change it, he has to leave his current mentor.\n\nIn the second test case, Gaggler 1 and Gaggler 2 are both mentored by Gaggler 3, and Gaggler 2 must be kept if Gaggler 3 is changed. The only Gaggler left has a mentor, so he can keep it.\n\nIn the third test case, Gaggler 1 and Gaggler 2 are both mentored by Gaggler 3, and Gaggler 3 and Gaggler 4 are not mentored by any Gaggler. The lowest Gaggler is Gaggler 2, and he is either Gaggler 1 or Gaggler 3.\n\nIn the fourth test case, Gaggler 1 and Gaggler 2 are both mentored by Gaggler 3, and Gaggler 3 and Gaggler 4 are not mentored by any Gaggler. The lowest Gaggler is Gaggler 1, and he is either Gaggler 1 or Gaggler 2.\n\n'''\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join(['5', '4 3 2 1'])) == '3 1 4 2 5'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4') == '2 3 1 4'\nassert solution('6\\n1 2 3 4 5 6') == '2 3 1 5 6'\nassert solution('1\\n1') == '1'\nassert solution('4\\n1 2 3 4') == '1 2 3 4'\nassert solution('6\\n1 2 3 4 5 6') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '2 3 4 1'\nassert solution('''\n6\n1 2 4 3 5 6\n''') == '1 2 3 4 5 6'\n'''\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '''2 3 4 1'''\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 1 4 3') == '3 3 4 1'\n\nprint(solution('''3\n2 1 4 3\nSample Input:\n7\n1 1 1 1 1 1 1\nSample Output:\n1 1 1 1 1 1 1''') == '1 1 1 1 1 1 1')\n\nprint(solution('''8\n2 1 1 1 1 1 1 1\nSample Input:\n7\n1 1 1 1 1 1 1\nSample Output:\n1 1 1 1 1 1 1 1''') == '1 1 1 1 1 1 1')\n\nprint(solution('''4\n1 1 2 3\nSample Input:\n4\n1 2 3 4''') == '1 2 3 4 1')\n\nprint(solution('''5\n1 2 3 4 5\nSample Input:\n5\n1 2 3 4 5''') == '1 3 4 5 1')\n\nprint(solution('''8\n1 2 4 3 5 7 8\nSample Input:\n6\n1 2 4 3 5 7''') == '1 2 4 3 5 7 8 1')\n\nprint(solution('''3\n1 2 3\nSample Input:\n2\n1 2\nSample Output:\n1 2 1''') == '1 2 1')\n\nprint(solution('''2\n3 1\nSample Input:\n3\n1 2 3\nSample Output:\n1 2 3 1''') == '1 2 3 1')\n\nprint(solution('''6\n1 2 3 4 5 6\nSample Input:\n4\n1 2 3 4 5\nSample Output:\n1 2 3 4 1 5''') == '1 2 3 4 1 5')\n\nprint(solution('''7\n1 2 3 4 5 6 7\nSample Input:\n3\n1 2 3 4 5\nSample Output:\n1 2 3 4 1 5 6''') == '1 2 3 4 1 5 6 7')\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4 1 5 2') == '3 4 1 2 5'\nassert solution('3\\n4 1 5 2') == '1 5 4 2 3'\nassert solution('3\\n4 1 5 2') == '4 1 2 5 3'\nassert solution('3\\n4 1 5 2') == '4 1 2 5 3'\nassert solution('3\\n4 1 5 2') == '4 1 5 2 3'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    '1',\n    '1',\n    '4',\n    '3'\n    ])) == '3 4 1'\n\nassert solution('\\n'.join([\n    '1',\n    '3',\n    '4',\n    '1'\n    ])) == '1 3 4 1'\n\nassert solution('\\n'.join([\n    '4',\n    '1',\n    '3',\n    '4'\n    ])) == '4 1 3 4'\n\nassert solution('\\n'.join([\n    '2',\n    '1',\n    '4',\n    '3'\n    ])) == '1 3 4 2'\n\nassert solution('\\n'.join([\n    '4',\n    '1',\n    '2',\n    '3'\n    ])) == '1 2 3 4'"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2\n1 3\n2 4\n3 3\n3 2\n''') == '7.656854249492381'\nassert solution('''\n4\n2 3\n2 5\n3 2\n2 4\n''') == '7.656854249492381'\nassert solution('''\n4\n1 2\n2 3\n2 4\n''') == '7.656854249492381'\nassert solution('''\n10\n1 2\n2 3\n3 4\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n''') == '12.228205302786495'\nassert solution('''\n10\n1 2\n2 3\n3 4\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n''') == '12.228205302786495'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"7.656854249492381\"\nassert solution(\"6\") == \"7.656854249492381\"\nassert solution(\"1\") == \"7.656854249492381\"\nassert solution(\"4\") == \"7.656854249492381\"\nassert solution(\"9\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"7.656854249492381\"\nassert solution(\"2\") == \"7.656854249492381\"\nassert solution(\"3\") == \"7.656854249492381\"\nassert solution(\"4\") == \"7.656854249492381\"\nassert solution(\"5\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2\n1 3\n2 4\n''') == '7.656854249492381'\nassert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\n'''\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '7.656854249492381'\nassert solution('2') == '7.656854249492381'\nassert solution('3') == '7.656854249492381'\nassert solution('4') == '7.656854249492381'\nassert solution('5') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nprint(solution(input()))"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('3\\n1 2\\n1 3\\n2 4') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '7.656854249492381'\nassert solution('1 3') == '7.656854249492381'\nassert solution('2 4') == '7.656854249492381'\nassert solution('3 3') == '7.656854249492381'\nassert solution('3 2') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n\"\"\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '8.833333333333333'\nassert solution('2') == '8.5'\nassert solution('2') == '8.5'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n3 10 3\n0 1\n1 5\n2 4\n3 5\n3 8\n1 1\n1 2\n2 3\n2 6\n3 8\n1 2\n''') == '6'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 3') == '2'\nassert solution('1 1') == '1'\nassert solution('3 3') == '3'\nassert solution('3 4') == '3'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution([\n    '2',\n    '1 1',\n    '2 2',\n    '1 3',\n    '0 0',\n    '0 3',\n    '1 4',\n    '3 3',\n    '3 0'\n]) == \"2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3 5 3\\n'\n    '1 1\\n'\n    '2 2\\n'\n    '1 3\\n'\n    '0 0\\n'\n    '0 3\\n'\n    '1 4\\n'\n    '3 3\\n'\n    '3 0\\n'\n    ) == '2'\n    \n    \n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 5 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"5 10 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''1 3 5 3\n0 1\n0 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '1'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 3') == '2'\nassert solution('7 5 3') == '1'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '9'\nassert solution('5 3') == '22'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"9\"\nassert solution(\"2 1\") == \"9\"\nassert solution(\"1 3 4\") == \"4\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"8 3\") == \"36\"\nassert solution(\"9 3\") == \"106\"\nassert solution(\"5 3\") == \"12\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"9\""
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"9\"\nassert solution(\"2 2\") == \"9\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"9\"\nassert solution(\"2 2\") == \"9\"\nassert solution(\"10 1\") == \"9\""
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '9'\nassert solution('2 3') == '10'\nassert solution('5 3') == '7'\nassert solution('9 5') == '10'"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '9'\nassert solution('2 1') == '10'\nassert solution('1 2') == '10'\nassert solution('3 1') == '1'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '9'\nassert solution('100 10') == '122'"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n''') == '9'\nassert solution('''\n10 1\n''') == '8'\nassert solution('''\n10 1\n''') == '8'\nassert solution('''\n10 2\n''') == '7'\nassert solution('''\n100 1\n''') == '9326705'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"no solution\"\nassert solution(\"5\") == \"12\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n5\\n7\\n') == '12'\nassert solution('1\\n2\\n3\\n5\\n7\\n10\\n') == '12'\nassert solution('1\\n2\\n3\\n5\\n7\\n14\\n') == '12'\nassert solution('1\\n2\\n3\\n5\\n7\\n15\\n') == '12'\nassert solution('1\\n2\\n3\\n5\\n7\\n16\\n') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == ''\nassert solution('2') == '12'\nassert solution('3') == '12'\nassert solution('5') == '12'\nassert solution('7') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nassert solution('1') == ''"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nassert solution('3\\n5\\n7\\n12') == '12'\nassert solution('3\\n5\\n12\\n7') == '12'\nassert solution('3\\n5\\n12\\n7\\n9') == '12'\nassert solution('3\\n5\\n12\\n7\\n9\\n11') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2\n3\n5\n7\n12\n''') == '12'\nassert solution('''\n5\n2\n3\n5\n7\n12\n''') == '12'\nassert solution('''\n3\n3\n3\n3\n3\n3\n''') == '3'\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '1'\n'''\n<codeup>\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '12'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '5'\nassert solution('7') == '12'\nassert solution('12') == '12'\nassert solution('8') == '9'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == ''\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '12'\nassert solution('7') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"12\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\\n\") == \"12\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n01100101010101100\n0010000101000100001\n000000000101010101\n''') == '11'\n\"\"\""
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111''') == '11'\nassert solution('''20\n00\n01\n10\n110\n111''') == '11'\nassert solution('''30\n00\n01\n10\n110\n111\n101\n100''') == '10'\nassert solution('''30\n00\n01\n10\n110\n111\n101\n100\n''') == '10'"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11'\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '110'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n01\\n10\\n110\\n111\") == \"11\"\n\"\"\"\n\nfrom collections import deque\n\nclass Solution:\n    def solve(self, stdin):\n        taboo = deque(stdin)\n        max_len = 0\n        max_string = \"\"\n        while taboo:\n            string = \"\".join(taboo)\n            if len(string) > max_len:\n                max_len = len(string)\n                max_string = string\n            taboo.rotate(-1)\n        return max_string"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '110'\nassert solution('1') == '1'\nassert solution('11') == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '11'\n\nstdin = input()\nfor _ in range(int(stdin)):\n    if solution() == -1:\n        print(-1)\n    else:\n        print(solution())\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n111\n110\n11''') == '11'\nassert solution('''5\n101\n001\n100\n101\n110''') == '101'\nassert solution('''5\n001\n101\n110\n111''') == '110'\nassert solution('''5\n111\n110\n001\n101''') == '110'\nassert solution('''20\n001\n111\n101\n110\n111\n110\n111\n101\n100\n101\n110\n100\n100\n110''') == '110'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"0\") == '0'\nassert solution(\"01\") == '1'\nassert solution(\"100\") == '01'\nassert solution(\"010110\") == '11'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n5\n1\n2\n3\n4\n3\n''') == '1 2 3 4'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n20 100\\n100 10\\n1\") == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '100 250 320'\nassert solution('2') == '100 250 320'\nassert solution('1') == '100'\nassert solution('50') == '100'\nassert solution('100') == '100'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n20 100\\n100 10') == \"100 250 320\"\nassert solution('3\\n2\\n20 100\\n100 10') == \"100 250 320\"\nassert solution('5\\n1\\n10 50\\n2\\n4\\n3\\n1\\n5') == \"10 10 10 10 10\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n20 100\\n100 10\\n1\\n150 50\\n1') == '100 250 320'\n\nstdin = \"\"\"4\n2\n2 3\n2 4\n1\n1\n3\n3 4\n4 5\n5 6\"\"\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100\\n\") == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n20 100\n100 10\n1\n150 50\n1\n150 100\n\"\"\") == \"\"\"100 250 320\"\"\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"100 250 320\"\nassert solution(\"10\") == \"200 500 800\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '100 250 320'\nassert solution('1') == '1'\n'''"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n10\n''') == '3 7 4 6 5 7 2 15 2'''\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n\"\"\""
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nprint(solution(input()))\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\"\nassert solution(\"100 50\") == \"2 3 7 4 5 6 7 15 15 2\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n20\n100\n''') == '7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n100') == '3 7 4 6 5 7 2 15 2'\nassert solution('10\\n250') == '9 7 3 5 7 6 2 15 2'\nassert solution('10\\n750') == '9 7 3 5 7 6 2 15 2'\nassert solution('100\\n50') == '3 7 4 6 5 7 2 15 2'\nassert solution('50\\n100') == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n50 100\n''') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n\"\"\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n4 5\\n3 4\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\nassert solution('5\\n0 0\\n1 2\\n2 4\\n3 2\\n3 4\\n4 4\\n4 0\\n5 0') == '40.0000000000'\nassert solution('5\\n1 1\\n0 0\\n3 3\\n2 2\\n2 3\\n3 3\\n4 4\\n4 0\\n5 0') == '0.0000000000'"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n0 0\n0 14\n15 14\n15 0\n\"\"\") == \"40.0000000000\"\nassert solution(\"\"\"\n2\n0 0\n0 14\n15 14\n15 0\n\"\"\") == \"20.0000000000\"\n\nassert solution(\"\"\"\n2\n0 0\n0 14\n15 14\n15 0\n\"\"\") == \"0.0000000000\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\") == \"40.0000000000\"\nassert solution(\"10\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"46.0000000000\"\nassert solution(\"5\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"46.0000000000\"\nassert solution(\"10\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"46.0000000000\"\nassert solution(\"4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\") == \"45.0000000000\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000', \"First\"\nassert solution('''\n10\n2 8\n9 8\n5 8\n7 4\n8 8\n4 7\n8 8\n7 6\n9 8\n9 8\n4 7\n5 8\n6 8\n5 8\n4 7\n3 8\n8 8\n8 5\n8 6\n4 7\n3 8\n5 8\n7 4\n7 4\n5 8\n5 8\n7 5\n7 4\n3 8\n6 8\n5 8\n7 4\n''') == '73.063496765625', \"Second\"\nassert solution('''\n10\n2 8\n9 8\n5 8\n7 4\n8 8\n4 7\n8 8\n7 6\n9 8\n9 8\n4 7\n5 8\n6 8\n5 8\n4 7\n3 8\n8 8\n8 5\n8 6\n4 7\n3 8\n5 8\n7 4\n''') == '77.3376425390625', \"Third\"\nassert solution('''\n10\n2 8\n9 8\n5 8\n7 4\n8 8\n4 7\n8 8\n7 6\n9 8\n9 8\n4 7\n5 8\n6 8\n5 8\n4 7\n3 8\n8 8\n8 5\n8 6\n4 7\n3 8\n5 8\n7 4\n''') == '90.0', \"Fourth\"\nassert solution('''\n10\n2 8\n9 8\n5 8\n7 4\n8 8\n4 7\n8 8\n7 6\n9 8\n9 8\n4 7\n5 8\n6 8\n5 8\n4 7\n3 8\n8 8\n8 5\n8 6\n4 7\n3 8\n5 8\n7 4\n''') == '120.0', \"Fifth\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\nassert solution('5\\n0 0\\n0 14\\n15 14\\n15 0') == '80.0000000000'\nassert solution('5\\n0 0\\n0 14\\n15 14\\n15 0') == '80.0000000000'\nassert solution('5\\n0 0\\n0 14\\n15 14\\n15 0') == '80.0000000000'\nassert solution('5\\n0 0\\n0 14\\n15 14\\n15 0') == '80.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n0 1\n1 1\n0 1\n1 2\n1 4\n0 4\n1 5\n0 5\n\"\"\") == \"40.0\"\n\nassert solution(\"\"\"\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n\"\"\") == \"44.0\"\n\nassert solution(\"\"\"\n1\n0 1\n1 1\n0 1\n1 2\n1 4\n0 4\n1 5\n0 5\n\"\"\") == \"39.999999999\"\n\nassert solution(\"\"\"\n5\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n\"\"\") == \"44.0\""
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n0\n0\n14\n15\n15\n0\n4\n8 3\n4 6\n7 10\n11 7\n\"\"\") == \"40.0000000000\"\nassert solution(\"\"\"\n0\n0\n7 0\n8 2\n6 6\n0\n\"\"\") == \"10.0000000000\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 2\\n3 4\\n5 5\\n') == '40.0000000000'\nassert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n') == '28.0000000000'\nassert solution('2\\n0 0\\n0 14\\n15 14\\n15 0\\n') == '37.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\nassert solution('8\\n8 3\\n4 6\\n7 10\\n11 7\\n') == '41.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0\\n0 15\\n15 14\\n15 0') == '40.0000000000'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3\n2 1 3\n''') == '1'\nassert solution('''\n3\n5\n1 2 2 3\n''') == '2'\nassert solution('''\n3\n7\n1 2 2 3\n''') == '1 2 3'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\n2 1 3\") == \"2\"\nassert solution(\"1\\n3\\n2 3 2\") == \"0\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n4 2 1 3\n4 2 1 3\n1 1 2 2\n''') == '2'\n\nassert solution('''\n2\n3 4\n1 1 1 1\n''') == '1'\n\nassert solution('''\n1\n7\n2 3\n1 2\n3 2 3 2\n4 1 2\n5 3\n''') == '5'"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n3\n2 1 3\n''') == '2'\n\nassert solution('''\n1\n4\n2 1 2 3\n''') == '1'\n\nassert solution('''\n8\n5\n1 2 2 3 3 4 3 5\n''') == '8'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\n\n----Challenge-----\nUsing BatcApex Photo Classifier, determine how many photos you could potentially find in a group of $k$ people.\n\n-----Hint-----\nUse the following algorithm:"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n2 1 3') == '1\\n1\\n1'\nassert solution('1\\n3\\n1 2 2') == '1\\n1\\n1'\nassert solution('5\\n8 4 3 2 1') == '4\\n0\\n1\\n2\\n3'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2 1 3\n''') == '2'\nassert solution('''\n4\n4 1 3 1\n''') == '0'\nassert solution('''\n10\n3 2 1\n2 2 2 1 1 1 2\n''') == '5'\nassert solution('''\n100\n3 2 1 1 2 2 1 1 1 1 2 2\n''') == '99'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '1\\n3\\n2 1 3') == '1'\nassert solution(\n    '2\\n2\\n1 1 2') == '2'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('75.85 1.71 2.38') == '199 162'"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('825.85 1.71 2.38') == '199 162'\nprint('all tests passed')"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 7 25.7 1.71 2.38') == '199 162'\nassert solution('5 1 10.75 2.55 3.45 4.20 5.99 7.45') == '3 10.75 2.55 4.20'\nassert solution('0 0 0 0') == 'none'\nassert solution('1 5 1.75 1.75') == 'none'\nassert solution('3 3 3.75 3.75 3.75') == '1 4.25'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '199 162'\nassert solution(\n    '7.35 1.71 2.38'\n) == '199 162'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0.00 1.71 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '199 162'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"45.50 1.75 1.74\") == \"199 162\"\nassert solution(\"78.32 1.89 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n75.00 1.71 2.38\n''') == '199 162'\nassert solution('''\n75.00 1.71 2.38\n''') == '199 162'\nassert solution('''\n75.00 1.71 2.38\n''') == '199 162'\nassert solution('''\n75.00 1.71 2.38\n''') == '199 162'\nassert solution('''\n75.00 1.71 2.38\n''') == '199 162'\n''') == 'None'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n  25.00 1.71 2.38\n''') == '199 162'\nassert solution('''\n  30.00 1.71 2.38\n''') == 'None'\nassert solution('''\n  120.00 1.71 2.38\n''') == '199 162'\nassert solution('''\n  56.00 1.71 2.38\n''') == 'None'\nassert solution('''\n  120.00 1.71 2.38\n''') == 'None'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1000.95 1.71 2.38\n''') == '199 162'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"10 10\\n2 2 2\\n3 5 -1\\n4 2 5\\n4 0 0\\n5 3 3\\n5 2 5\\n4 0 0\\n3 4 0\\n6 2 -1\\n1 4 -1\\n0 4 2\\n0 0 2\\n3 1 2\\n2 0 0\") == \"17\"\nassert solution(\"15 10\\n2 3 2\\n2 5 1\\n2 3 1\\n3 4 1\\n4 3 1\\n5 3 1\\n5 3 1\\n5 4 1\\n4 4 1\\n5 4 1\\n5 5 1\\n4 5 1\\n5 4 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n4 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5 5 1\\n5"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 3 2\\n0 2 3') == '16'\nassert solution('10 10\\n4 4 4\\n1 4 5\\n3 3 3\\n4 4 4\\n5 5 5\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n11 11 11\\n12 12 12\\n13 13 13\\n14 14 14\\n15 15 15') == '24'\nassert solution('1 1\\n3 3 2\\n5 5 4\\n4 4 4\\n2 2 2\\n1 1 1\\n0 0 0\\n6 6 6\\n5 5 5\\n3 3 3\\n2 2 2\\n4 4 4\\n5 5 5\\n0 0 0\\n1 1 1\\n6 6 6\\n3 3 3\\n4 4 4\\n5 5 5\\n1 1 1\\n2 2 2\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n11 11 11\\n12 12 12\\n13 13 13\\n14 14 14\\n15 15 15') == '6'\nassert solution('10 10\\n5 5 4\\n1 4 5\\n3 3 3\\n4 4 4\\n5 5 5\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n11 11 11\\n12 12 12\\n13 13 13\\n14 14 14\\n15 15 15') == '10'\nassert solution('1 1\\n3 3 2\\n5 5 4\\n4 4 4\\n2 2 2\\n1 1 1\\n0 0 0\\n6 6 6\\n5 5 5\\n3 3 3\\n2 2 2\\n4 4 4\\n5 5 5\\n0 0 0\\n1 1 1\\n6 6 6\\n3 3 3\\n4 4 4\\n5 5 5\\n1 1 1\\n2 2 2\\n7 7 7\\n8 8 8\\n9 9 9\\n10 10 10\\n11 11 11\\n12 12 12\\n13 13 13\\n14 14 14\\n15 15 15') == '8'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nassert solution('3 3\\n2 2 2\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '12'\nassert solution('3 2\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1') == '9'\nassert solution('3 2\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1') == '0'\nassert solution('3 2\\n1 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1') == '0'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0''') == '16'\nassert solution('''7 5\n2 -1 -2 1 -3 0 1\n2 0 1\n-1 -1 -3\n1 -3\n2 3 1\n1 -2\n2 1 1\n-2 1 -1\n-3 -2 0''') == '34'\nassert solution('''20 4\n
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 2\") == \"2\\n2 1\"\nassert solution(\"4\\n1 2 -1\\n-1 -1 2 1\\n2 1 1\\n1 1 3\") == \"5\\n3 1\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nassert solution('10 3\\n1 5 -2\\n-1 1 2\\n1 1 3\\n-1 5 6\\n1 6 3\\n-1 8 7\\n1 9 5\\n2 6 9\\n-1 1 2\\n0 -3 4\\n0 7 -2') == '45'\nassert solution('100 50\\n1 2 1\\n1 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0\n''') == '16'"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"2 1 -1\\n\"\n    \"1 3 2\\n\"\n    \"0 2 3\\n\"\n    \"2 1 1\\n\"\n    \"3 3 0\\n\"\n) == \"16\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 1 1'\nassert solution('''O 1\nO 1\nO 2\nE 1\nE 1\nI 1''') == '2 2 2'\n\"\"\""
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nO 5\nO 4\nO 4\nE 5\nE 4\nE 4\nI 5\nE 4\nI 4\n''') == '2 1 4'\n\nassert solution('''\nO 5\nO 4\nO 4\nE 5\nE 4\nE 4\nI 5\nE 4\nI 4\n''') == '3 1 4'\n\nassert solution('''\nO 5\nO 4\nO 4\nE 5\nE 4\nE 4\nI 5\nE 4\nI 4\n''') == '4 2 4'\n\nassert solution('''\nO 5\nO 4\nO 4\nE 5\nE 4\nE 4\nI 5\nE 4\nI 4\n''') == '4 3 4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0 1 2\"\nassert solution(\"O 2\") == \"1 2\"\nassert solution(\"E 1\") == \"2 1\"\nassert solution(\"I 1\") == \"1 1\"\nassert solution(\"O 2 I 1\") == \"1 1 1\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nO 4') == '2 1 4'\nassert solution('2\\nO 3 E 2\\nI 5 E 1') == '2 1 3 1'\n\n\"\"\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2 1 4'\nassert solution('2') == '1 1 2'\nassert solution('3') == '1 2 1'\nassert solution('4') == '1 2 2'\nassert solution('5') == '1 2 3'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 1\\n2 2 1\\n3 3 1\") == \"2 3 1\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1 1 1\"\nassert solution(\"1\") == \"1 1 1\"\nassert solution(\"2\") == \"2 1 1\"\nassert solution(\"5\") == \"2 1 1 1 1\"\nassert solution(\"4\") == \"2 1 2 1\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1 4'\nassert solution('3') == '3 1 1'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\nO 4\\n') == '2 1 4'\nassert solution('3\\nO 3\\nI 2\\n') == '3 3 2'\nassert solution('4\\nO 4\\nI 2\\nI 4\\n') == '4 1 4 2'\nassert solution('5\\nO 4\\nI 2\\nI 4\\nI 4\\n') == '3 1 4 2 4'\nassert solution('6\\nO 4\\nI 2\\nI 4\\nI 4\\nI 4\\n') == '4 1 4 2 4 3'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\nO 4\n\"\"\") == \"2 1 4\"\nassert solution(\"\"\"\n2\nO 5\nO 8\nE 4\nO 3\n\"\"\") == \"1 3 1 4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"5 1 2 3\") == \"4\"\nassert solution(\"5 1 4 2\") == \"4\"\nassert solution(\"5 5 4 6\") == \"3\"\nassert solution(\"5 1 6 4\") == \"3\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 8') == '4'\nassert solution('5 1 12 4') == '4'\nassert solution('5 5 9 10') == '4'\nassert solution('1 6 4 10') == '3'\nassert solution('2 11 7 14') == '2'\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution('5 6\\n7 6\\n12 6\\n6 7\\n7 12\\n12 7\\n6 13\\n7 13\\n13 6\\n6 7') == '6'\nassert solution('4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n') == '5'\nassert solution('5\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n') == '6'\nassert solution('6\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n') == '7'\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == '4'\nassert solution('5 1 12 4') == '6'\nassert solution('5 5 9 10') == '6'\nassert solution('1 6 4 10') == '6'\nassert solution('2 11 7 14') == '4'\n\"\"\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(\"4 5 1 2\") == \"3\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n') == '4'\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution('2 9 2 8') == '3'\nassert solution('5 10 4 9 8') == '1'\nassert solution('10 10 5 9 8') == '0'\nassert solution('4 4 4') == '0'\n\n\"\"\"\n\nimport math\n\nroom = {}\nx_set = set()\ny_set = set()"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n''') == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '4'\nassert solution('10 10') == '10'\nassert solution('1 1') == '1'\nassert solution('5 1 5 1') == '5'\nassert solution('5 2 3 1') == '3'\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 6') == '2'\nassert solution('8 8') == '5'\nassert solution('16 16') == '2'\nassert solution('13 9') == '4'"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"99.99 99.99 9999.99\"\n    \"99 9 999 9999\"\n    \"9 99 9 99 9\"\n) == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"-99.99 99.99 9999.99\"\"\") == \"9.585073\"\nassert solution(\"\"\"99 9 999 9999\"\"\") == \"1.69444444444444444444444444444444555555555555\"\nassert solution(\"\"\"9 99 9 999 9\"\"\") == \"1.6111111111111111111111111111111111\"\nassert solution
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\n\nassert solution(\n'''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.590039'\n\nassert solution(\n'''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.590039'\n\nassert solution(\n'''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('9 99 9 99 9') == '9.585073'\nassert solution('99 99 9 9 9') == '9.585073'\nassert solution('99 9 9 9 9') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '2.9083811'\nassert solution('-99.99 99.99 9999.99') == '6.6645583'\nassert solution('99 9 999 9999') == '5.8731864'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('-99.99 99.99 9999.99') == \"9.585073\"\nassert solution('99 9 999 9999') == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.619721'\nassert solution('9 99 9 99 9') == '9.619721'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('99 99 9999 9') == '9.585073'\nassert solution('99 9 999 999') == '9.585073'\nassert solution('99 99 9 999 9999') == '9.585073'\n\"\"\"\n\na, b, c, t1, t2, t3, t4, n, k, r, s, l = list(map(float, input().split()))"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.603325\"\nassert solution(\"9 99 9 999 9\") == \"9.553035\"\nprint(solution(*list(map(int, list(stdin.strip())))))\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('9 99 9 99 9') == '9.585073'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 30\\n2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nassert solution(\"12.74 127.83\\n12.74 127.83\") == \"impossible\"\nassert solution(\"12.74 127.83\\n12.74 127.83\") == \"impossible\"\nassert solution(\"12.74 127.83\\n12.74 127.83\") == \"impossible\"\nassert solution(\"12.74 127.83\\n12.74 127.83\") == \"impossible\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\nassert solution('''2 20\n2 4 8\n''') == 'impossible'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10 10 2\") == \"impossible\"\nassert solution(\"4 10 10 2\") == \"12.74 127.83\"\n\n---Input---\nThe input for this problem is two lines. The first line contains two positive integers $w$ $l$, the width and length of the pool table, where $w, l \\leq 120$. The second line contains 8 positive integers $r$ $x_1$ $y_1$ $x_2$ $y_2$ $x_3$ $y_3$ $h$, where $r \\leq 5$ is the radius of all the balls (including the cue ball), $x_ i$ $y_ i$ is the location of ball $i,1 \\leq i \\leq 3$, and $h$ is the distance the dashed line is from the front of the pool table (see the figure above, where $r \\leq h \\leq (1/2)l$). No two balls will ever overlap, though they may touch at a point, and all balls will lie between the dashed line and the back of the table. All balls will lie between the dashed line and the back of the table. The cue ball must also lie completely on the table (otherwise the shot is impossible).\n\n--Output--\nFor each test case, display the distance $d$ to place the ball on the dashed line and the angle $\\theta $ to shoot the ball, or the word \u201cimpossible\u201d if the trick shot cannot be done. Output $\\theta $ in degrees, and round both $d$ and $\\theta $ to the nearest hundredth. Always show two digits after the decimal point, even if the digits are zero.\n\n-----Example-----\nSample Input:\n5 10 10 2\n2 10 20 2 24 18 28 10\nSample Output:\n12.74 127.83\n'''\n\nimport math"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 20') == '12.74'\nassert solution('2 30') == '12.74'"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 4') == '12.74 127.83'\nassert solution('20 30') == '12.74 127.83'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 10 20 2 24 18 28 10') == '12.75 127.8'\nassert solution('1 10 20 2 24 18 28 10') == '12.75 127.8'\nassert solution('1 10 20 2 24 18 28 10') == '12.75 127.8'\nassert solution('1 10 20 2 24 18 28 10') == '12.75 127.8'\nassert solution('1 10 20 2 24 18 28 10') == '12.75 127.8'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\n\nassert solution('''\n20 30\n10 10 20 2 24 18 28 10\n''') == 'impossible'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '12.74 127.83'\nassert solution('3') == '12.74 127.83'\nassert solution('4') == 'impossible'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\nassert solution('''\n10 50\n2 4 9 1 3 2 1\n''') == '1.49 1.59'\n'''\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 30') == '12.74 127.83'\n\nassert solution('1 30') == 'impossible'\n\nassert solution('0 30') == 'impossible'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n110\\n6') == '0116'\nassert solution('3\\n0011\\n9\\n9\\n') == '0009'\nassert solution('10\\n011101\\n111101\\n011101\\n011101\\n011101\\n011101\\n011101\\n011101\\n') == '011101'\n\n\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n----------------------------------------------------------------"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == None\nassert solution('1\\n6') == '0116'\nassert solution('100\\n1') == '01100'\nassert solution('100\\n1\\n2\\n3') == '01100321'\nassert solution('6\\n110') == '1011106'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n110\\n6\\n') == '0116'\nassert solution('3\\n011\\n110\\n111\\n101\\n') == '0101'\nassert solution('5\\n00100\\n100001\\n110110\\n011101\\n110111') == '110111'\nassert solution('8\\n8\\n8\\n8\\n8\\n8\\n8\\n') == '100000'\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n\"\"\") == \"0116\"\nassert solution(\"\"\"\n2\n\"\"\") == \"0216\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0116\"\n\"\"\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2\\n110\\n6\"\n) == \"0116\"\nassert solution(\n    \"2\\n20\\n9\\n2\\n30\\n11\\n1\\n30\\n31\"\n) == \"110931\"\nassert solution(\n    \"2\\n20\\n9\\n2\\n30\\n11\\n1\\n30\\n31\\n1\\n30\\n1\"\n) == \"11093101\"\nassert solution(\n    \"2\\n30\\n9\\n1\\n2\\n30\\n11\\n1\\n30\\n31\"\n) == \"01181131\"\nassert solution(\n    \"2\\n30\\n9\\n1\\n2\\n30\\n11\\n1\\n30\\n31\\n1\\n30\\n1\"\n) == \"0118113101\""
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n00\n''') == '000116'\nassert solution('''\n4\n1\n''') == '101'\nassert solution('''\n5\n1\n1\n''') == '1101'\nassert solution('''\n8\n0\n0\n0\n0\n''') == '0001101'\nassert solution('''\n4\n0\n0\n0\n''') == '0011'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1234') == '1234'\nassert solution('0') == '0'\nassert solution('011') == '11'\nassert solution('1106') == '611'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    1\n    10\n    \"\"\") == \"0110\"\n\nassert solution(\"\"\"\n    1\n    111\n    \"\"\") == \"0111\"\n\nassert solution(\"\"\"\n    1\n    10\n    \"\"\") == \"0110\"\n\nassert solution(\"\"\"\n    1\n    100\n    \"\"\") == \"100\"\n\nassert solution(\"\"\"\n    1\n    1\n    \"\"\") == \"01\""
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()[:-1]\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1 1 1'\nassert solution('8 3') == '0 2 3'\n\n'''\n\nstdin = '8 3'\nn, t, *a = list(map(int, stdin.split()))\n\ncnt = 0\na_set = set(a)\nfor i in range(n):\n    if a[i] in a_set:\n        cnt += a[i]\n    else:\n        a_set.add(a[i])\n        cnt += a[i]\n\nprint(cnt)"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8 3\n4 4 4\n''') == '0 2 4'\nassert solution('''\n10 2\n0 0\n''') == '0 2'\n''')\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"8 3\\n\"\n    \"4 4 4\\n\") == \"0 2 4\\n\"\nassert solution(\n    \"8 3\\n\"\n    \"1 2 3\\n\") == \"2 2 2\\n\"\nassert solution(\n    \"8 3\\n\"\n    \"1 2 3\\n\") == \"2 0 1\\n\"\nassert solution(\n    \"8 3\\n\"\n    \"1 2 3\\n\") == \"0 0 0\\n\"\nassert solution(\n    \"8 3\\n\"\n    \"1 2 3\\n\") == \"0 0 0\\n\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '0 1 2'\nassert solution('2 3 1') == '0 1 2'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3') == '0 2'\nassert solution('1 1 1\\n2 2 1') == '0 0 1'\nassert solution('4 3\\n5 2 2\\n1 1 3') == '0 0 2'\nassert solution('2 2\\n3 3 1\\n4 3 2') == '0 0 0'"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0 2 4'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '8 3\\n'\n    '4 4 4\\n'\n) == '0 2 4'\nassert solution(\n    '5 1\\n'\n    '2 3 4 5\\n'\n) == '0 1 2 3 4'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n1 2 3\n''') == '0 1 2'\nassert solution('''\n5 6\n1 2 3 5 7\n''') == '0 2 1 4 3'\n'''"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 3\") == \"0 2 4\"\nassert solution(\"8 2\") == \"0 1 2\"\nassert solution(\"8 2\") == \"0 1 2\"\nassert solution(\"8 3\") == \"0 1 2\""
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"0 1\"\nassert solution(\"2 5 5\") == \"0 1 2 3 4\""
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 6 5\\n2 5 7\") == \"possible\"\nassert solution(\"5\\n10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5\\n1 2 3 5\\n1 2 3\\n1 4 5\\n1 2\\n1 5\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"impossible\", \"Empty\"\nassert solution(\"1\") == \"impossible\", \"Only 1\"\nassert solution(\"2\") == \"possible\", \"2\"\nassert solution(\"3\") == \"impossible\", \"3\"\nassert solution(\"4\") == \"possible\", \"4\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''5\n6\n1 1 1 1 2 2\n2 3 3\n1 1 1\n1 2 2\n3 3\n1 1 1\n2 2 2\n''') == 'impossible'"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n2\n2\n2\n1\n1\n''') == 'impossible'\nassert solution('''\n2\n1\n2\n3\n1\n''') == 'impossible'\nassert solution('''\n5\n2\n1 3 2 4\n3 1 2 5\n2 3 4\n3 1 4\n''') == 'possible'\nassert solution('''\n8\n1\n2 3\n3 2\n3 4\n4 1\n4 3\n4 2\n5 1\n5 2\n''') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2') == 'impossible'\nassert solution('4\\n7\\n3 2 2\\n3 1 3 5\\n1 2') == 'possible'\nassert solution('4\\n7\\n1 2\\n2 1 5\\n4 2 6 4 7') == 'impossible'\nassert solution('4\\n7\\n1 2\\n2 1 5\\n4 2 6 4 7') == 'possible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"impossible\"\nassert solution(\"5\") == \"impossible\"\nassert solution(\"10\") == \"impossible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'possible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'possible'\nassert solution('7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution('7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution('7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == 'impossible'\nassert solution('4 10') == 'impossible'\nassert solution('4 10 0') == 'impossible'\nassert solution('4 5') == 'possible'\nassert solution('1 2 1 2 2') == 'possible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\nassert solution('''\n1\n10\n10\n1\n''') == 'Impossible'\n'''\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\n\nassert solution('''\n5\n0 0\n0 10\n2\n4 10\n4 0\n''') == 'impossible'\n\nassert solution('''\n5\n0 0\n0 10\n2\n4 10\n3 0\n''') == '3.00000'\n\nassert solution('''\n5\n1 1\n3 0\n1 1\n3 1\n1 0\n''') == '1.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n1 0\n1 10\n2\n0 0\n0 10\n\"\"\") == \"5.00000\"\nassert solution(\"\"\"\n2\n0 0\n0 10\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\nassert solution('''\n5\n0 0\n0 10\n2\n4 10\n4 0\n''') == 'Impossible'\n'''\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Impossible'\nassert solution('0 0') == '0.00000'\nassert solution('0 10') == '0.00000'\nassert solution('2') == 'Impossible'\nassert solution('4 10') == '3.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0\\n') == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('1\\n0 0') == 'Impossible'\nassert solution('2\\n0 10') == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2\\n0 0\\n0 10\\n2') == '4.00000'\nassert solution(\n    '10\\n0 0\\n0 10\\n10 0\\n10 10\\n10 10\\n10 0\\n10 10\\n10 10') == 'inf'\nassert solution(\n    '1\\n0 0\\n10 10\\n') == 'inf'\nassert solution(\n    '1\\n0 0\\n0 10\\n') == 'inf'\nassert solution(\n    '10\\n1 0\\n2 2\\n') == 'inf'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n') == 'impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0\\n0 10') == '1.00000'\nassert solution('2\\n0 10\\n4 10') == 'Impossible'"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '0'\nassert solution('4\\n2\\n4') == '1'\nassert solution('4\\n4\\n4') == '1'"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('3 2 5') == '1'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 4 2\n1 1\n2 2\n1 1\n4 4\n2 3\n3 3\n3 3\n3 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4 4 5\n1 2\n2 3\n4 4\n5 5\n1 5\n1 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4 4 1\n1 2\n1 4\n3 3\n1 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5 5 1\n1 5\n1 4\n4 4\n2 2\n1 5\n\"\"\") == \"1\""
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 5') == '1'\nassert solution('3 3 5') == '0'\n\"\"\"\n\n\nimport sys\nfrom typing import List\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1', \"3 lamps in a row can only be illuminated by their row\"\nassert solution('''\n3 3 4\n0 0\n0 1\n0 2\n0 3\n1 0\n1 1\n1 2\n1 3\n2 0\n2 1\n2 2\n2 3\n3 0\n3 1\n3 2\n3 3\n''') == '0', \"1 lamp in a column can only be illuminated by its column\"\nassert solution('''\n4 3 5\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n3 0\n3 1\n3 2\n3 3\n4 0\n4 1\n4 2\n4 3\n''') == '0', \"3 lamps in a row can only be illuminated by their row\"\nassert solution('''\n4 4 3\n0 0 0\n0 1 1\n0 2 2\n1 0 0\n1 1 1\n1 2 2\n2 0 0\n2 1 1\n2 2 2\n3 0 0\n3 1 1\n3 2 2\n3 3 3\n''') == '1', \"2 lamps in a column can only be illuminated by their column\"\n'''"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5 7\n3 4\n1 3\n1 4\n1 5\n2 2\n2 3\n''') == '1'\nassert solution('''\n3 3 3\n1 3\n2 3\n1 4\n2 4\n''') == '0'\nassert solution('''\n4 6 7\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\n'''\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1'\n\"\"\""
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1', \"First\"\nassert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '0', \"Second\"\nassert solution('''7 7 6\n1 1\n2 2\n3 2\n4 3\n5 5\n6 5\n7 6\n''') == '0', \"Third\"\n\n\"\"\""
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n\") == \"5 3\\n1 0\\n2 4\"\nassert solution(\"5 3\\n1 0\\n2 4\\n3 4\\n4 2\\n\") == \"impossible\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '1 0\\n2 4\\n'\n\nassert solution('''\n2 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '3 2\\n1 0\\n4 3\\n'\n\nassert solution('''\n2 3\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == 'impossible'\n'''\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n\"\"\"\n) == \"\"\"\n5 3\n1 0\n2 4\n\"\"\"\nassert solution(\n\"\"\"\n5 5\n0 1\n2 3\n1 3\n2 4\n4 4\n\"\"\"\n) == \"\"\"\n5 4\n1 2\n0 3\n4 3\n\"\"\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5 6\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    \"\"\"\n) == \"\"\"\n5 3\n1 0\n2 4\n\"\"\"\n\nassert solution(\n    \"\"\"\n    10 20\n    0 1\n    0 2\n    1 3\n    2 3\n    1 2\n    4 3\n    5 6\n    5 4\n    5 3\n    4 2\n    6 4\n    6 2\n    3 0\n    3 2\n    3 1\n    3 4\n    3 5\n    5 0\n    5 3\n    5 2\n    5 4\n    5 6\n    4 0\n    4 1\n    4 2\n    4 3\n    4 5\n    6 0\n    6 1\n    6 2\n    6 3\n    6 4\n    \"\"\"\n) == \"\"\"\n1 2\n5 3\n1 0\n3 4\n\"\"\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '3 1'\nassert solution('''10 10\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n4 5\n5 3\n5 4\n5 2\n4 4\n4 3\n3 2\n2 4\n2 3\n3 4\n4 5\n''') == '2 2'\nassert solution('''10 10\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n4 5\n5 3\n5 4\n5 2\n4 4\n4 3\n3 2\n2 4\n2 3\n3 4\n4 5\n''') == 'impossible'\nassert solution('''10 10\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n4 5\n5 3\n5 4\n5 2\n4 4\n4 3\n3 2\n2 4\n2 3\n3 4\n4 5\n''') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '3 2 1 0 4'\nassert solution('5 7') == 'impossible'\n\n\"\"\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '5 3\\n1 0\\n2 4'\n\nassert solution('''\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == 'impossible'\n\nassert solution('''\n8 4\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n5 3\n6 3\n''') == '5 3\\n1 0\\n2 4'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5 3\\n1 0\\n2 4'\n'''\n\nn, m = map(int, input().split())\nn_l = [[] for i in range(n)]\nfor i in range(m):\n    a, b = map(int, input().split())\n    n_l[a].append(b)\n    n_l[b].append(a)\nfor i in range(n):\n    n_l[i].sort()\nfor i in range(m):\n    n_l[n_l[i][0]].remove(i)\n    n_l[n_l[i][0]].sort()\nfor i in range(n):\n    for j in range(len(n_l[i])):\n        if j == 0 and n_l[i][j]!= n_l[i][j+1]:\n            print(n_l[i][0], n_l[i][j])\n            break\n        if n_l[i][j]!= n_l[i][j+1]:\n            print(n_l[i][j], n_l[i][j+1])\n            break\nfor i in range(m):\n    n_l[n_l[i][0]].remove(i)\n    n_l[n_l[i][0]].sort()\nfor i in range(n):\n    for j in range(len(n_l[i])):\n        if j == 0 and n_l[i][j]!= n_l[i][j+1]:\n            print(n_l[i][0], n_l[i][j])\n            break\n        if n_l[i][j]!= n_l[i][j+1]:\n            print(n_l[i][j], n_l[i][j+1])\n            break\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '1 0\\n2 4'\nassert solution('''\n10 10\n0 1\n0 2\n0 3\n1 4\n0 5\n1 5\n2 6\n3 6\n3 7\n4 8\n4 9\n5 10\n6 11\n6 12\n7 13\n7 14\n8 15\n8 16\n9 17\n9 18\n10 19\n''') == '3 7\\n4 9\\n1 0\\n2 4\\n8 17\\n9 18\\n'\nassert solution('''\n11 10\n0 1\n0 2\n0 3\n0 4\n1 5\n0 6\n1 7\n2 8\n2 9\n3 10\n3 11\n4 12\n4 13\n5 14\n5 15\n6 16\n6 17\n7 18\n7 19\n8 20\n8 21\n9 22\n9 23\n10 24\n10 25\n11 26\n11 27\n12 28\n12 29\n13 30\n13 31\n14 32\n14 33\n15 34\n15 35\n16 36\n16 37\n17 38\n17 39\n18 40\n18 41\n19 42\n19 43\n20 44\n20 45\n21 46\n21 47\n22 48\n22 49\n23 50\n23 51\n24 52\n24 53\n25 54\n25 55\n26 56\n26 57\n27 58\n27 59\n28 60\n28 61\n29 62\n29 63\n30 64\n30 65\n31 66\n31 67\n32 68\n32 69\n33 70\n33 71\n34 72\n34 73\n35 74\n35 75\n36 76\n36 77\n37 78\n37 79\n38 80\n38 81\n39 82\n39 83\n40 84\n40 85\n41 86\n41 87\n42 88\n42 89\n43 90\n43 91\n44 92\n44 93\n45 94\n45 95\n46 96\n46 97\n47 98\n47 99\n48 100\n48 101\n''') == '8 23\\n7 17\\n5 21\\n4 20\\n27 29\\n16 32\\n0 33\\n2 34\\n6 36\\n'\nassert solution('''\n100 100\n0 1\n0 2\n0 3\n0 4\n1 5\n1 6\n2 7\n2 8\n3 9\n3 10\n4 11\n4 12\n5 13\n5 14\n6 15\n6 16\n7 17\n7 18\n8 19\n8 20\n9 21\n9 22\n10 23\n10 24\n11 25\n11 26\n12 27\n12 28\n13 29\n13 30\n14 31\n14 32\n15 33\n15 34\n16 35\n16 36\n17 37\n17 38\n18 39\n18 40\n19 41\n19 42\n20 43\n20 44\n21 45\n21 46\n22 47\n22 48\n23 49\n23 50\n24 51\n24 52\n25 53\n25 54\n26 55\n26 56\n27 57\n27 58\n28 59\n28 60\n29 61\n29 62\n30 63\n30 64\n31 65\n31 66\n32 67\n32 68\n33 69\n33 70\n34 71\n34 72\n35 73\n35 74\n36 75\n36 76\n37 77\n37 78\n38 79\n38 80\n39 81\n39 82\n40 83\n40 84\n41 85\n41 86\n42 87\n42 88\n43 89\n43 90\n44 91\n44 92\n45 93\n45 94\n46 95\n46 96\n47 97\n47 98\n48 99\n48 100\n49 101\n49 102\n50 103\n50 104\n51 105\n51 106\n52 107\n52 108\n53 109\n53 110\n54 111\n54 112\n55 113\n55 114\n56 115\n56 116\n57 117\n57 118\n58 119\n58 120\n59 121\n59 122\n60 123\n60 124\n61 125\n61 126\n62 127\n62 128\n63 129\n63 130\n64 131\n64 132\n65 133\n65 134\n66 135\n66 136\n67 137\n67 138\n68 139\n68 140\n69 141\n69 142\n70 143\n70 144\n71 145\n71 146\n72 147\n72 148\n73 149\n73 150\n74 151\n74 152\n75 153\n75 154\n76 155\n76 156\n77 157\n77 158\n78 159\n78 160\n79 161\n79 162\n80 163\n80 164\n81 165\n81 166\n82 167\n82 168\n83 169\n83 170\n84 171\n84 172\n85 173\n85 174\n86 175\n86 176\n87 177\n87 178\n88 179\n88 180\n89 181\n89 182\n90 183\n90 184\n91 185\n91 186\n92 187\n92 188\n93 189\n93 190\n94 191\n94 192\n95 193\n95 194\n96 195\n96 196\n97 197\n97 198\n98 199\n98 200\n99 201\n99 202\n''') == '83 187\\n86 180\\n99 200\\n'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '1 2\\n2 3\\n3 4\\n'\nassert solution('''\n3 5\n0 1\n0 2\n1 3\n2 3\n3 4\n''') == '4 2\\n'\nassert solution('''\n20 20\n0 1\n0 2\n1 3\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n''') == '10 6\\n'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n0 0\n0 1\n1 0\n1 1\n''') == '2'\n'''\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n0 0\\n0 1\\n1 0\") == \"2\"\nassert solution(\"3 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"5 1\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\") == \"4\"\nassert solution(\"3 1\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\") == \"3\"\nassert solution(\"5 1\\n0 0\\n0 1\\n0 2\\n1 0\\n1 1\") == \"4\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == \"0\"\nassert solution('2') == \"1\"\nassert solution('3') == \"1\"\nassert solution('4') == \"0\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 1\n0 0\n0 1\n1 0\n1 1\n''') == '2'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 1\n0 0\n0 1\n1 0\n1 1\n''') == '2'\n\nassert solution('''\n4 2\n0 0\n0 1\n1 0\n1 1\n''') == '2'\n\nassert solution('''\n8 3\n0 0\n0 1\n0 2\n0 3\n1 0\n1 1\n1 2\n1 3\n2 0\n2 1\n''') == '2'\n\nassert solution('''\n8 5\n0 0\n0 1\n0 2\n0 3\n0 4\n1 0\n1 1\n1 2\n1 3\n1 4\n2 0\n2 1\n''') == '5'\n\nassert solution('''\n16 2\n0 0\n0 1\n0 2\n0 3\n0 4\n0 5\n1 0\n1 1\n1 2\n1 3\n1 4\n1 5\n2 0\n2 1\n2 2\n2 3\n2 4\n2 5\n3 0\n3 1\n3 2\n3 3\n3 4\n3 5\n4 0\n4 1\n4 2\n4 3\n4 4\n4 5\n5 0\n5 1\n5 2\n5 3\n5 4\n5 5\n''') == '5'"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n0 0\n0 1\n1 0\n1 1\nSample Input:\n5 1\n1 0\n3 3\n1 4\n1 5\nSample Output:\n5\n1 2 3 4 5''') == '5'\n\nassert solution('''\n5 2\n0 0\n0 1\n1 0\n1 1\nSample Input:\n5 1\n1 0\n0 0\n0 1\nSample Output:\n4\n1 2 3 4''') == '4'\n\nassert solution('''\n5 2\n0 0\n1 0\n1 1\n0 1\nSample Output:\n4\n1 2 3''') == '3'\n\nassert solution('''\n5 1\n1 0\n2 1\n3 3\n4 4\nSample Output:\n1 2 3 4''') == '1 2 3'\n\nassert solution('''\n10 1\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n3 0\n3 1\n4 0\n4 1\n5 0\n5 1\n6 0\n6 1\n7 0\n7 1\n8 0\n8 1\n9 0\n9 1\n10 0\n10 1''') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"10 10\") == \"1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n0 0\\n0 1\\n1 0\\n1 1') == '2\\n1 2\\n'\nassert solution('2 1\\n0 0\\n0 1\\n1 1\\n1 2') == '2\\n1 2\\n'\nassert solution('2 1\\n0 0\\n1 1\\n1 2') == '1\\n1 2\\n'\nassert solution('2 1\\n0 0\\n1 0\\n1 1') == '1\\n1 2\\n'\nassert solution('2 1\\n0 0\\n1 1\\n1 2') == '1\\n1 2\\n'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4 1\n0 0\n0 1\n1 0\n1 1\n\"\"\"\n) == \"\"\"2\n1 2\n\"\"\""
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\") == \"2\\n1 2\"\nassert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n0 0\") == \"2\\n1 2\"\nassert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n0 0\") == \"2\\n1 2\"\nassert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n0 0\") == \"2\\n1 2\"\nassert solution(\"4 1\\n0 0\\n0 1\\n1 0\\n1 1\\n0 0\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    10 2\n    1 3 5 7 9 11 13 15 17 16\n    ''') == '1'\nassert solution('''\n    10 3\n    1 3 5 7 9 11 13 15 17 16\n    ''') == '1'\nassert solution('''\n    10 5\n    1 2 3 4 5 6 7 8 9 10\n    ''') == '0'\nassert solution('''\n    10 6\n    1 2 3 4 5 6 7 8 9 10\n    ''') == '0'\nassert solution('''\n    10 7\n    1 2 3 4 5 6 7 8 9 10\n    ''') == '0'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n50 50\n
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"5 3\") == \"3\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\n'''"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"10 2\") == \"1\"\nassert solution(\"10 5\") == \"2\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1', \"error\"\nassert solution('10 2') == '1', \"error\"\nprint('All Tests Passed!')"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    5 2\n    1 3 5 7 9 11 13 15 17 16\n    ''') == '1'\n    assert solution('''\n    10 4\n    1 3 5 7 9 11 13 15 17 16\n    ''') == '1'\n    assert solution('''\n    20 12\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n    ''') == '0'\n''')\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 2\\n1 3 5 7 9 11 13 15 17 16') == '1'\nassert solution('20 2\\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 3 5 7 9 11 13 15 17 16') == '1'\nassert solution('20 10\\n1 1 1 2 2 1 2 2 3 3 3 3 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\n\nassert solution('''\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\n\nassert solution('''\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\n\nassert solution('''\n3 3\nABB\n1 1\n''') == '1 2'\n\nassert solution('''\n3 3\nABB\n1 1\n''') == '1 2'"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([7, 5, 'A', 'C', 'B', 'B', 'D', 'D']) == '7 4'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n5 3\n7 6\n3 1\n2 2\n''') == '7 5'\nassert solution('''\n5 5\n5 2\n7 4\n3 4\n2 5\n''') == '5 3'\n'''\n    pass\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '7 4'\nassert solution('2') == '7 10'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 5\\nBBABC') == '3 7'\nassert solution('1 5\\nABABA') == '1 5'\nassert solution('5 2\\nCBABA') == '5 2'\nassert solution('2 3\\nCBABA') == '1 3'\nassert solution('2 4\\nCBABA') == '5 4'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([7,5,1,10,6,9,3,4]) == \"7 4\"\nprint(solution([7,5,1,10,6,9,3,4]))\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '7 4'\nassert solution(input_data='6 5\\nACDBB\\n6 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"7 4\"\n\nSample Input:\n7 5\nBCDDD\n10 6\n7 4\n11 13\n3 8\n5 7\n9 12\nSample Output:\n10 6\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\nAADB') == '6 4'\nassert solution('6\\nADBA') == '4 6'\nassert solution('10\\nABAB') == '8 10'\nassert solution('8\\nABCD') == '10 12'\nassert solution('5\\nABC') == '4 8'"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 5\") == \"7 4\"\nassert solution(\"10 5\") == \"10 9\"\nassert solution(\"5 6\") == \"8 9\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 LET A = 1') == 'HELLO THERE 1\\n'\nassert solution('20 PRINT \"HELLO THERE \"') == 'HELLO THERE 1\\n'\nassert solution('30 PRINTLN A') == 'HELLO THERE 2\\n'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 LET A = 1') == \"HELLO THERE 1\"\nassert solution('20 PRINT \"HELLO THERE \"') == \"HELLO THERE 1\"\nassert solution('30 PRINTLN A') == \"HELLO THERE 1\"\nassert solution('40 LET A = A + 1') == \"HELLO THERE 2\"\nassert solution('50 IF A <= 5 THEN GOTO 20') == \"HELLO THERE 2\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nprint('Success')\nassert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nprint('Success')"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE'\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('''10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\nassert solution('''10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"''') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \"\n                \"\\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"\n                \"\\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '3'\n    '0 1'\n    ) == '3'\n\nassert solution(\n    '2'\n    '1 1'\n    ) == '0'\n\nassert solution(\n    '2'\n    '1 2'\n    ) == '1'\n\nassert solution(\n    '1'\n    '1 1'\n    ) == '0'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('3 0 1') == '3'\nassert solution('0 1') == '3'\n'''\n\nimport sys\nsys.setrecursionlimit(10**6)\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 1\n1 2\"\"\") == \"6\""
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 0\n1 1''') == '3'\n\nassert solution('''4\n3 0 1\n0 1\n1 1\n1 0''') == '4'\n\nassert solution('''5\n3 0 1\n0 1\n1 1\n0 2\n1 0''') == '5'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\nassert solution(stdin='2 0 1') == '4'\nassert solution(stdin='2 1 1') == '4'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 1\") == \"3\"\n\nassert solution(\"10\\n1 2 1 1 1 2 1 1 2 2 1\") == \"9\"\n\nassert solution(\"100\\n20 0 40 0 40 0 20 20 0 40 0 0\") == \"99\""
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 0 1\\n0 1') == '3'\nassert solution('3\\n3 1 1\\n0 1') == '3'"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 0 1\n0 1\n3 2 1\n''') == '6'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n0 1\\n0 1') == '1\\n'\nassert solution('6\\n0 1 2 3 4 5\\n0 1 2 3 4 5') == '5\\n'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"1\\n2\") == \"impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'RLRRLRLR'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'impossible'\nassert solution('6\\n3 4\\n2 2\\n1 2\\n4 4\\n1 3\\n1 4\\n3 3') == 'LR'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 4\n''') == 'RRLLRRRRLL'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 4\n''') == 'RRLLRRRRLL'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 4\n''') == 'impossible'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRLRLLRLLRRRRLL'\nassert solution('10\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n5 4\\n5 4\\n5 4') == 'RLLRRRLRLLRRRRLL'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'impossible'\nassert solution('10\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n5 4\\n5 4\\n5 4') == 'RLLRRRLRLLRRRRLL'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'impossible'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'RLRLRLRL'\n\n'''\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRLRRLR\"\nassert solution(\"8\\n1 2\\n3 4\\n2 6\\n4 5\\n6 7\\n4 5\\n6 7\\n5 8\\n\") == \"impossible\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'LLRRRRLL'\nassert solution('2') == 'LLRLRRLR'\nassert solution('2 1 3') == 'LLRLRRLR'\nassert solution('2 1 3 2 1 4') == 'LLRRRRLL'\nassert solution('3') == 'impossible'\n\"\"\"\nimport collections\nimport itertools\nfrom typing import List"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == \"LLRRRRLL\"\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == \"impossible\"\nprint(solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n'''))\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRLRLLRRLLLLRRRLRLLRRLLLLLLRRLLRLRLRRRRRRLLRRLLRRRRRLRRLLRRLLRLRRLLRLRLRRRRRRLLRLRLRRRLRLRRLLRLRRRRRLRLRRLLRLRLRRRLRLRRRLRRRRRRLLRLRLRRRLRLRLRRLLRLRLRRRLRLRLRLRLRLRLRRRLRLRLRLRLRLRRRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRRRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRLRL"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'\nassert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'impossible'"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == '1'"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1009 2011\\n1017 2011') == '2011'"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1\\n2011'"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011') == '1\\n2011'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1 1\") == \"3\"\nassert solution(\"1 1 2\") == \"3\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\") == \"1\\n2011\"\nassert solution(\"2\\n1001 1234\\n1234 1001\") == \"1\\n1234\"\nassert solution(\"1\\n1001 1234\\n1234 1001\") == \"1\\n1234\"\nassert solution(\"1\\n1001 1234\\n1234 1002\") == \"1\\n1234\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('2\\n1019 2011\\n') == '2011'\nassert solution('3\\n2001 2011 2001\\n2011 2001 2001\\n') == '1'\nassert solution('5\\n2001 2002 2001 2002 2001\\n2001 2002 2001 2002 2001\\n') == '0'\nassert solution('4\\n2001 2002 2001 2002 2001\\n2001 2002 2001 2002 2001\\n') == '3'\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0 3\"\n\nstdin = '''3 2\n0 1 100\n0 2 100\n1 3 100\n2 3 100'''\n\nassert solution(stdin) == \"0 3\"\n\nstdin = '''10 7\n0 1 1\n1 1 1\n1 2 1\n2 2 1\n2 3 1\n3 3 1\n4 4 1\n4 5 1\n5 5 1\n5 6 1\n6 6 1\n6 7 1\n7 7 1\n7 8 1\n8 8 1\n8 9 1\n9 9 1\n9 10 1\n10 10 1'''\n\nassert solution(stdin) == \"0 2 4 9\"\n\nstdin = '''20 20\n0 1 1\n0 2 1\n0 3 1\n0 4 1\n0 5 1\n0 6 1\n0 7 1\n0 8 1\n0 9 1\n0 10 1\n0 11 1\n0 12 1\n0 13 1\n0 14 1\n0 15 1\n0 16 1\n0 17 1\n0 18 1\n0 19 1\n1 1 1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n1 11 1\n1 12 1\n1 13 1\n1 14 1\n1 15 1\n1 16 1\n1 17 1\n1 18 1\n1 19 1\n2 1 1\n2 2 1\n2 3 1\n2 4 1\n2 5 1\n2 6 1\n2 7 1\n2 8 1\n2 9 1\n2 10 1\n2 11 1\n2 12 1\n2 13 1\n2 14 1\n2 15 1\n2 16 1\n2 17 1\n2 18 1\n2 19 1\n3 1 1\n3 2 1\n3 3 1\n3 4 1\n3 5 1\n3 6 1\n3 7 1\n3 8 1\n3 9 1\n3 10 1\n3 11 1\n3 12 1\n3 13 1\n3 14 1\n3 15 1\n3 16 1\n3 17 1\n3 18 1\n3 19 1\n4 1 1\n4 2 1\n4 3 1\n4 4 1\n4 5 1\n4 6 1\n4 7 1\n4 8 1\n4 9 1\n4 10 1\n4 11 1\n4 12 1\n4 13 1\n4 14 1\n4 15 1\n4 16 1\n4 17 1\n4 18 1\n4 19 1\n5 1 1\n5 2 1\n5 3 1\n5 4 1\n5 5 1\n5 6 1\n5 7 1\n5 8 1\n5 9 1\n5 10 1\n5 11 1\n5 12 1\n5 13 1\n5 14 1\n5 15 1\n5 16 1\n5 17 1\n5 18 1\n5 19 1\n6 1 1\n6 2 1\n6 3 1\n6 4 1\n6 5 1\n6 6 1\n6 7 1\n6 8 1\n6 9 1\n6 10 1\n6 11 1\n6 12 1\n6 13 1\n6 14 1\n6 15 1\n6 16 1\n6 17 1\n6 18 1\n6 19 1\n7 1 1\n7 2 1\n7 3 1\n7 4 1\n7 5 1\n7 6 1\n7 7 1\n7 8 1\n7 9 1\n7 10 1\n7 11 1\n7 12 1\n7 13 1\n7 14 1\n7 15 1\n7 16 1\n7 17 1\n7 18 1\n7 19 1\n8 1 1\n8 2 1\n8 3 1\n8 4 1\n8 5 1\n8 6 1\n8 7 1\n8 8 1\n8 9 1\n8 10 1\n8 11 1\n8 12 1\n8 13 1\n8 14 1\n8 15 1\n8 16 1\n8 17 1\n8 18 1\n8 19 1\n9 1 1\n9 2 1\n9 3 1\n9 4 1\n9 5 1\n9 6 1\n9 7 1\n9 8 1\n9 9 1\n9 10 1\n9 11 1\n9 12 1\n9 13 1\n9 14 1\n9 15 1\n9 16 1\n9 17 1\n9 18 1\n9 19 1\n10 1 1\n10 2 1\n10 3 1\n10 4 1\n10 5 1\n10 6 1\n10 7 1\n10 8 1\n10 9 1\n10 10 1\n10 11 1\n10 12 1\n10 13 1\n10 14 1\n10 15 1\n10 16 1\n10 17 1\n10 18 1\n10 19 1\n11 1 1\n11 2 1\n11 3 1\n11 4 1\n11 5 1\n11 6 1\n11 7 1\n11 8 1\n11 9 1\n11 10 1\n11 11 1\n11 12 1\n11 13 1\n11 14 1\n11 15 1\n11 16 1\n11 17 1\n11 18 1\n11 19 1\n12 1 1\n12 2 1\n12 3 1\n12 4 1\n12 5 1\n12 6 1\n12 7 1\n12 8 1\n12 9 1\n12 10 1\n12 11 1\n12 12 1\n12 13 1\n12 14 1\n12 15 1\n12 16 1\n12 17 1\n12 18 1\n12 19 1\n13 1 1\n13 2 1\n13 3 1\n13 4 1\n13 5 1\n13 6 1\n13 7 1\n13 8 1\n13 9 1\n13 10 1\n13 11 1\n13 12 1\n13 13 1\n13 14 1\n13 15 1\n13 16 1\n13 17 1\n13 18 1\n13 19 1\n14 1 1\n14 2 1\n14 3 1\n14 4 1\n14 5 1\n14 6 1\n14 7 1\n14 8 1\n14 9 1\n14 10 1\n14 11 1\n14 12 1\n14 13 1\n14 14 1\n14 15 1\n14 16 1\n14 17 1\n14 18 1\n14 19 1\n15 1 1\n15 2 1\n15 3 1\n15 4 1\n15 5 1\n15 6 1\n15 7 1\n15 8 1\n15 9 1\n15 10 1\n15 11 1\n15 12 1\n15 13 1\n15 14 1\n15 15 1\n15 16 1\n15 17 1\n15 18 1\n15 19 1\n16 1 1\n16 2 1\n16 3 1\n16 4 1\n16 5 1\n16 6 1\n16 7 1\n16 8 1\n16 9 1\n16 10 1\n16 11 1\n16 12 1\n16 13 1\n16 14 1\n16 15 1\n16 16 1\n16 17 1\n16 18 1\n16 19 1\n17 1 1\n17 2 1\n17 3 1\n17 4 1\n17 5 1\n17 6 1\n17 7 1\n17 8 1\n17 9 1\n17 10 1\n17 11 1\n17 12 1\n17 13 1\n17 14 1\n17 15 1\n17 16 1\n17 17 1\n17 18 1\n17 19 1\n18 1 1\n18 2 1\n18 3 1\n18 4 1\n18 5 1\n18 6 1\n18 7 1\n18 8 1\n18 9 1\n18 10 1\n18 11 1\n18 12 1\n18 13 1\n18 14 1\n18 15 1\n18 16 1\n18 17 1\n18 18 1\n18 19 1\n19 1 1\n19 2 1\n19 3 1\n19 4 1\n19 5 1\n19 6 1\n19 7 1\n19 8 1\n19 9 1\n19 10 1\n19 11 1\n19 12 1\n19 13 1\n19 14 1\n19 15 1\n19 16 1"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4 4\\n\"\n    \"0 1 100\\n\"\n    \"0 2 100\\n\"\n    \"1 3 100\\n\"\n    \"2 3 100\\n\"\n    \"0 3\") == \"0 3\"\nassert solution(\n    \"10 11\\n\"\n    \"1 3 100\\n\"\n    \"2 3 100\\n\"\n    \"3 4 100\\n\"\n    \"4 5 100\\n\"\n    \"6 7 100\\n\"\n    \"8 9 100\\n\"\n    \"9 10 100\\n\"\n    \"10 11 100\\n\"\n    \"11 12 100\\n\"\n    \"12 13 100\\n\"\n    \"13 14 100\\n\"\n    \"14 15 100\\n\"\n    \"15 16 100\\n\"\n    \"16 17 100\\n\"\n    \"17 18 100\\n\"\n    \"18 19 100\\n\"\n    \"19 20 100\\n\"\n    \"20 21 100\\n\"\n    \"21 22 100\\n\"\n    \"22 23 100\\n\"\n    \"23 24 100\\n\"\n    \"24 25 100\\n\"\n    \"25 26 100\\n\"\n    \"26 27 100\\n\"\n    \"27 28 100\\n\"\n    \"28 29 100\\n\"\n    \"29 30 100\\n\"\n    \"30 31 100\\n\"\n    \"31 32 100\\n\"\n    \"32 33 100\\n\"\n    \"33 34 100\\n\"\n    \"34 35 100\\n\"\n    \"35 36 100\\n\"\n    \"36 37 100\\n\"\n    \"37 38 100\\n\"\n    \"38 39 100\\n\"\n    \"39 40 100\\n\"\n    \"40 41 100\\n\"\n    \"41 42 100\\n\"\n    \"42 43 100\\n\"\n    \"43 44 100\\n\"\n    \"44 45 100\\n\"\n    \"45 46 100\\n\"\n    \"46 47 100\\n\"\n    \"47 48 100\\n\"\n    \"48 49 100\\n\"\n    \"49 50 100\\n\"\n    \"50 51 100\\n\"\n    \"51 52 100\\n\"\n    \"52 53 100\\n\"\n    \"53 54 100\\n\"\n    \"54 55 100\\n\"\n    \"55 56 100\\n\"\n    \"56 57 100\\n\"\n    \"57 58 100\\n\"\n    \"58 59 100\\n\"\n    \"59 60 100\\n\"\n    \"60 61 100\\n\"\n    \"61 62 100\\n\"\n    \"62 63 100\\n\"\n    \"63 64 100\\n\"\n    \"64 65 100\\n\"\n    \"65 66 100\\n\"\n    \"66 67 100\\n\"\n    \"67 68 100\\n\"\n    \"68 69 100\\n\"\n    \"69 70 100\\n\"\n    \"70 71 100\\n\"\n    \"71 72 100\\n\"\n    \"72 73 100\\n\"\n    \"73 74 100\\n\"\n    \"74 75 100\\n\"\n    \"75 76 100\\n\"\n    \"76 77 100\\n\"\n    \"77 78 100\\n\"\n    \"78 79 100\\n\"\n    \"79 80 100\\n\"\n    \"80 81 100\\n\"\n    \"81 82 100\\n\"\n    \"82 83 100\\n\"\n    \"83 84 100\\n\"\n    \"84 85 100\\n\"\n    \"85 86 100\\n\"\n    \"86 87 100\\n\"\n    \"87 88 100\\n\"\n    \"88 89 100\\n\"\n    \"89 90 100\\n\"\n    \"90 91 100\\n\"\n    \"91 92 100\\n\"\n    \"92 93 100\\n\"\n    \"93 94 100\\n\"\n    \"94 95 100\\n\"\n    \"95 96 100\\n\"\n    \"96 97 100\\n\"\n    \"97 98 100\\n\"\n    \"98 99 100\\n\"\n    \"99 100\\n\"\n    \"100 101 100\\n\"\n    \"101 102 100\\n\"\n    \"102 103 100\\n\"\n    \"103 104 100\\n\"\n    \"104 105 100\\n\"\n    \"105 106 100\\n\"\n    \"106 107 100\\n\"\n    \"107 108 100\\n\"\n    \"108 109 100\\n\"\n    \"109 110 100\\n\"\n    \"110 111 100\\n\"\n    \"111 112 100\\n\"\n    \"112 113 100\\n\"\n    \"113 114 100\\n\"\n    \"114 115 100\\n\"\n    \"115 116 100\\n\"\n    \"116 117 100\\n\"\n    \"117 118 100\\n\"\n    \"118 119 100\\n\"\n    \"119 120 100\\n\"\n    \"120 121 100\\n\"\n    \"121 122 100\\n\"\n    \"122 123 100\\n\"\n    \"123 124 100\\n\"\n    \"124 125 100\\n\"\n    \"125 126 100\\n\"\n    \"126 127 100\\n\"\n    \"127 128 100\\n\"\n    \"128 129 100\\n\"\n    \"129 130 100\\n\"\n    \"130 131 100\\n\"\n    \"131 132 100\\n\"\n    \"132 133 100\\n\"\n    \"133 134 100\\n\"\n    \"134 135 100\\n\"\n    \"135 136 100\\n\"\n    \"136 137 100\\n\"\n    \"137 138 100\\n\"\n    \"138 139 100\\n\"\n    \"139 140 100\\n\"\n    \"140 141 100\\n\"\n    \"141 142 100\\n\"\n    \"142 143 100\\n\"\n    \"143 144 100\\n\"\n    \"144 145 100\\n\"\n    \"145 146 100\\n\"\n    \"146 147 100\\n\"\n    \"147 148 100\\n\"\n    \"148 149 100\\n\"\n    \"149 150 100\\n\"\n    \"150 151 100\\n\"\n    \"151 152 100\\n\"\n    \"152 153 100\\n\"\n    \"153 154 100\\n\"\n    \"154 155 100\\n\"\n    \"155 156 100\\n\"\n    \"156 157 100\\n\"\n    \"157 158 100\\n\"\n    \"158 159 100\\n\"\n    \"159 160 100\\n\"\n    \"160 161 100\\n\"\n    \"161 162 100\\n\"\n    \"162 163 100\\n\"\n    \"163 164 100\\n\"\n    \"164 165 100\\n\"\n    \"165 166 100\\n\"\n    \"166 167 100\\n\"\n    \"167 168 100\\n\"\n    \"168 169 100\\n\"\n    \"169 170 100\\n\"\n    \"170 171 100\\n\"\n    \"171 172 100\\n\"\n    \"172 173 100\\n\"\n    \"173 174 100\\n\"\n    \"174 175 100\\n\"\n    \"175 176 100\\n\"\n    \"176 177 100\\n\"\n    \"177 178 100\\n\"\n    \"178 179 100\\n\"\n    \"179 180 100\\n\"\n    \"180 181"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"0 3\"\nassert solution(\"4 3\") == \"1 0\""
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4') == '0 3'\nprint(solution(input()))\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == '0 3'\nassert solution('2 2') == '0 2'\nassert solution('1 1') == '0 1'\n\n'''"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"0 2 1\"\nassert solution(\"5 5\") == \"0 1 4 2 3\"\nassert solution(\"10 10\") == \"0 1 4 2 3 4 5 6 7 8 9 10\""
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 4\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\n\n\"\"\""
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0 3\""
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2.0 10.0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0') == '20'\nassert solution('3.0 5.0\\n7 8 5 0\\n0 0 0\\n0 0 0') == '0.000000'"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n4 3 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\") == \"20\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nprint(solution(*tuple(map(float, input().split()))))\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == \"20\"\nprint(solution(s))\n\n-----Hints-----\n* Numpy\n\n\"\"\"\n\nfrom math import cos, sqrt, pi\n\nimport numpy as np"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\nassert solution('''2.0 10.0\n2 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\"\"\") == \"20\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0 2 3 4 5 6\") == \"4\"\nassert solution(\"1\\n0 1 3 4 5 6\") == \"4\"\nassert solution(\"1\\n1 1 2 3 4 5\") == \"3\"\nassert solution(\"1\\n2 2 2 1 2 3 4 5 6\") == \"3\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n1 1 2 3 4 5 6\") == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n0 1 2 3 4\n0 1 2 3 4\n1 2 3 4 5\n2 1 2 3 4 5\n1 1 2 3 4 5\n''') == '4'\n\nassert solution('''6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n''') == '5'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n0 1 3 4 5 6') == '4\\n1 6 5 4 2 1'\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6') == '3\\n2 6 5 4 1 3'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(input_string=\"\"\"\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\nSample Input 2:\n8\n0 2 3 4 5 6 7 8\n0 1 3 4 5 6 7 8\n1 6 5 4 2 1 2 3\n2 6 5 3 2 1 2 3\n1 1 2 3 4 6 7 8\n2 1 2 3 4 5 6 7\n3 1 4 5 6 7 8 2\n4 1 4 5 6 7 8 2\nSample Output 2:\n5\n\n\"\"\"\n) == \"5\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n0 1 3 4 5 6') == '1'\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\nSample Input:\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\nSample Output:\n1\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"6\"\n    \"0 2 3 4 5 6\"\n    \"0 1 3 4 5 6\"\n    \"1 6 5 4 2 1\"\n    \"2 6 5 3 2 1\"\n    \"1 1 2 3 4 6\"\n    \"2 1 2 3 4 5\"\n    ) == \"4\""
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '4'\nassert solution('15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n') == '5'\nassert solution('15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n') == '5'"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\") == \"4\"\nassert solution(\"5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 5 6 7 8\\n6 6 7 8 9\\n7 7 8 9 10\\n8 8 9 10 11\\n9 9 10 11 12\") == \"13\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 1 2 3 4') == '5'\nassert solution('1 1 2 3 4 5') == '6'\nassert solution('1 1 2 3 4 5 6') == '7'\nassert solution('2 3 4 5 6 7 8') == '10'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6') == '4', 'Error'\nassert solution('6\\n5 2 7 1 6\\n3 5 6 5 9\\n1 3 5 2 2 1\\n5 2 1 7 5\\n4 5 1 9 2') == '10', 'Error'\nassert solution('5\\n1 2 3 4 5\\n2 3 4 5 6\\n3 4 5 6 7\\n4 5 6 7 8\\n5 6 7 8 9') == '9', 'Error'\nassert solution('3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2') == '2', 'Error'\nassert solution('5\\n5 2 1 7 5\\n3 4 5 6 9\\n1 3 5 2 2 1\\n5 2 1 7 5\\n4 5 1 9 2') == '5', 'Error'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n1 2 3 4') == '4'\n\nassert solution('6\\n3 3 3 3 3 3\\n4 4 4 4 4 4') == '8'\n\nassert solution('10000\\n1 1\\n1 2 3 4') == '2'\n\"\"\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7''') == '4'\nprint('Solution is correct')\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\"\n) == \"6\"\nassert solution(\n    \"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\"\n) == \"7\"\nassert solution(\n    \"4\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\"\n) == \"6\"\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6'\nprint('solution() complete')\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1''') == '6', 'Should be 6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('2\\n0.1 0.1\\n0.2 0.2\\n0.3 0.3\\n1.0 1.0') == '2'\nassert solution('3\\n1.1 1.0\\n1.1 1.0\\n1.1 1.0\\n1.1 1.0\\n1.1 1.0\\n1.1 1.0') == '5'\nassert solution('6\\n0.5 0.5\\n0.5 0.5\\n0.5 0.5\\n0.5 0.5\\n0.5 0.5\\n0.5 0.5') == '6'\nassert solution('10000\\n' + '\\n'.join([f'{i} {i+1}' for i in range(1000)])) == '4999999'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '7'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('1\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '5'\nassert solution('100\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '4'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1''') == '6'\nassert solution('''4\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1''') == '4'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6'\nassert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '4'\nassert solution('''\n8\n-1.0 1.0\n2.5 1.0\n-1.0 1.0\n2.5 1.0\n-1.0 1.0\n1.0 2.5\n-1.0 1.0\n1.0 2.5\n''') == '1'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n0.3 0.3\n0.2 0.2\n0.1 0.1\n0.2 0.3\n0.3 0.3\n0.4 0.3\n0.3 0.2\n0.4 0.2\n0.2 0.1\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.3 0.3\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.2 0.3\n0.3 0.3\n0.1 0.2\n0.1 0.2\n0.3 0.2\n0.4 0.2\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.3 0.1\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.2 0.3\n0.3 0.3\n0.1 0.3\n0.1 0.3\n0.3 0.3\n0.1 0.2\n0.1 0.2\n0.3 0.2\n0.3 0.3\n0.2 0.3\n0.2 0.2\n0.2 0.3\n0.3 0.2\n0.3 0.3\n0.2 0.2\n0.2 0.3\n0.1 0.2\n0.1 0.2\n0.3 0.2\n0.4 0.2\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.3 0.1\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.3 0.3\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.3 0.1\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.2 0.3\n0.3 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.3 0.3\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.3 0.1\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.2 0.3\n0.3 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.2 0.3\n0.2 0.2\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.3 0.1\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.3\n0.2 0.2\n0.2 0.3\n0.3 0.2\n0.3 0.3\n0.2 0.3\n0.1 0.2\n0.1 0.2\n0.3 0.2\n0.4 0.2\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.2 0.3\n0.3 0.2\n0.2 0.1\n0.2 0.3\n0.3 0.2\n0.2 0.1\n0.3 0.1\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.2\n0.2 0.3\n0.2 0.2\n0.2 0.3\n0.2 0.2\n0.2 0.3\n0.3 0.2\n0.3 0.3\n0.2 0.2\n0.2 0.3\n0.2 0.2\n0.2 0.3\n0.2 0.2\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.3 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.3 0.2\n0.3 0.3\n0.3 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.1 0.2\n0.1 0.2\n0.3 0.2\n0.4 0.2\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.2 0.1\n0.2 0.3\n0.2 0.2\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.3 0.3\n0.2 0.3\n0.3 0.3\n0.3 0.3\n0.2 0.2\n0.2 0.3\n0.1 0.3\n0.3 0.3\n0.2 0.3\n0.1 0.3\n0.2 0.3\n0.3 0.3\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.3 0.3\n0.2 0.3\n0.3 0.3\n0.2 0.3\n0.2 0.2\n0.3 0.2\n0.3 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3\n0.3 0.3\n0.2 0.3\n0.2 0.3\n0.2 0.3"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n2\\n2\\n\") == \"5\"\nassert solution(\n    \"3\\n2\\n2\\n\") == \"5\"\nassert solution(\n    \"2\\n3\\n2\\n\") == \"4\"\nassert solution(\n    \"3\\n3\\n2\\n\") == \"3\"\nassert solution(\n    \"4\\n2\\n2\\n\") == \"3\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2\n2\n''') == \"5\"\nassert solution('''\n4\n2\n3\n3\n''') == \"7\"\nassert solution('''\n5\n2\n3\n3\n4\n3\n''') == \"10\""
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n2\\n') == '4'\nassert solution('5\\n7\\n10\\n15\\n') == '5'\nassert solution('1\\n20\\n15\\n') == '1'\nassert solution('4\\n8\\n11\\n') == '2'\nassert solution('4\\n7\\n10\\n') == '4'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n2\n2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n4\n3\n2\n1\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n2\\n') == '5'\nassert solution('3\\n1\\n1\\n') == '4'\nassert solution('3\\n2\\n1\\n') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n2\n2\n2\"\"\") == \"5\"\nassert solution(\"\"\"6\n3\n1\n5\n6\n3\n2\n\"\"\") == \"7\"\nassert solution(\"\"\"4\n1\n1\n5\n6\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n2') == '5'\nassert solution('4\\n1\\n1\\n1') == '4'\nassert solution('3\\n2\\n1\\n1') == '3'\nassert solution('1\\n2\\n2\\n2') == '2'\nassert solution('1\\n2\\n3\\n3') == '3'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n1\\n2\\n') == '5'\nassert solution('4\\n1\\n4\\n2\\n') == '2'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n10\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n2\n4\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n3\n3\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '1 1'\nassert solution('2 2 2 1') == '1 1'\n\n'''\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '1 1'\nassert solution('1 1') == '0 0'\nassert solution('2 3') == '1 2'\n'''"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"1 10\\n2 4 1 2\") == \"1 2\"\nassert solution(\"1 10\\n2 4 1 2\\n2 1 2 3\\n3 3 2 1\\n4 5 2 2\\n2 5 3 3\\n1 1 2 2\\n3 1 4 3\\n1 5 5 1\\n2 1 5 1\\n3 1 2 1\\n4 1 4 2\\n5 1 3 2\\n5 2 1 1\\n1 4 2 1\\n2 5 1 2\\n3 2 4 1\\n1 5 5 1\\n2 2 3 1\\n3 1 2 1\\n4 1 5 3\\n1 2 4 1\\n1 1 3 2\\n2 3 1 1\\n4 1 2 1\\n5 1 5 3\\n4 2 3 2\\n1 1 5 1\\n2 3 2 3\\n1 2 5 1\\n3 4 3 3\\n4 3 2 2\\n1 5 4 1\\n2 1 4 1\\n3 1 5 1\\n4 1 3 1\\n5 1 2 1\\n1 1 3 3\\n2 3 3 2\\n2 5 3 3\\n3 1 5 2\\n4 5 1 2\\n5 2 1 3\\n5 3 2 2\\n2 5 3 1\\n2 3 4 1\\n3 1 2 3\\n4 2 2 2\\n4 4 1 4\\n1 4 4 4\\n2 4 1 4\\n4 1 4 3\\n4 3 4 3\\n3 4 3 2\\n4 2 5 1\\n5 2 4 4\\n2 5 1 2\\n4 5 2 4\\n5 1 2 3\\n2 4 2 3\\n2 3 1 3\\n3 3 5 1\\n1 2 3 2\\n2 4 3 3\\n2 2 2 3\\n2 2 3 2\\n5 3 5 3\\n1 3 2 2\\n3 2 5 3\\n2 4 5 1\\n1 5 4 1\\n3 4 4 2\\n3 5 5 3\\n2 1 3 2\\n4 1 3 1\\n4 1 4 3\\n3 5 5 4\\n5 1 4 4\\n1 5 5 4\\n2 1 4 3\\n3 3 5 2\\n3 5 5 2\\n1 5 5 3\\n3 1 3 3\\n5 4 1 2\\n1 5 1 3\\n2 5 2 3\\n2 1 4 3\\n5 4 2 2\\n2 4 5 2\\n1 5 3 4\\n5 4 3 2\\n2 5 2 1\\n1 4 5 3\\n5 5 3 2\\n1 5 2 4\\n4 5 4 2\\n2 3 5 1\\n1 3 5 1\\n1 5 4 4\\n1 4 3 2\\n3 5 3 2\\n2 1 5 1\\n4 5 1 3\\n4 1 5 2\\n5 1 3 3\\n1 5 3 3\\n5 3 5 3\\n1 5 4 2\\n1 3 4 1\\n4 5 1 1\\n1 4 4 4\\n1 5 5 3\\n2 5 4 4\\n2 4 4 4\\n1 3 2 1\\n3 5 5 3\\n1 5 5 3\\n5 5 5 4\\n5 4 1 3\\n2 1 4 1\\n2 5 4 1\\n1 1 5 1\\n3 5 2 1\\n5 4 5 4\\n4 3 5 3\\n4 5 5 2\\n5 3 4 3\\n2 4 5 2\\n3 5 4 5\\n2 1 5 2\\n4 3 1 2\\n3 1 1 1\\n5 3 3 2\\n4 5 2 1\\n5 5 3 2\\n4 3 5 2\\n2 1 5 3\\n2 4 1 1\\n3 5 2 3\\n1 3 5 2\\n4 5 5 3\\n1 5 1 2\\n2 4 2 1\\n4 5 4 1\\n4 5 1 1\\n3 5 2 1\\n1 3 5 1\\n5 5 4 2\\n1 4 1 4\\n3 4 2 3\\n5 4 4 3\\n5 1 5 4\\n4 5 5 3\\n5 1 1 5\\n4 5 2 5\\n3 4 4 2\\n2 3 4 4\\n1 3 2 4\\n3 5 5 4\\n5 5 5 4\\n3 5 4 2\\n5 4 5 2\\n2 5 5 5\\n2 5 5 2\\n2 5 5 5\\n1 3 4 5\\n1 4 5 4\\n1 2 5 4\\n4 1 5 2\\n4 2 1 5\\n5 1 1 5\\n1 3 3 4\\n1 1 4 1\\n5 3 1 5\\n4 3 3 3\\n4 3 3 3\\n2 4 1 5\\n4 5 3 4\\n3 4 5 4\\n5 4 3 4\\n1 5 5 5\\n5 4 1 4\\n5 1 4 4\\n2 1 3 3\\n3 4 5 3\\n5 2 1 4\\n3 4 5 4\\n3 1 5 3\\n4 5 2 3\\n5 5 2 2\\n2 3 1 5\\n3 1 3 5\\n3 5 2 4\\n2 1 4 5\\n3 5 2 4\\n1 1 5 3\\n4 1 5 3\\n1 1 1 4\\n3 1 4 2\\n1 2 4 3\\n5 2 4 5\\n1 1 5 2\\n2 3 4 4\\n1 5 4 4\\n3 5 2 1\\n5 2 3 4\\n1 3 4 4\\n1 4 5 4\\"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n2 2 2 1\\n') == '1 1'\nassert solution('2 5\\n1 2 1 3 2\\n') == '3 1'\nassert solution('100 10\\n5 2 1 3 2\\n') == '1 5'\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1 3\n2 2 2 1\"\"\") == \"1 1\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '0 0'\nassert solution('1 2 2 1') == '1 1'\nprint(solution([[1, 2, 2, 1]]))\n\"\"\""
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 3\n2 2 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n1 4\n1 5 3 1\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n1 1\n4 4 2 1\n\"\"\") == \"4 1\"\n\nassert solution(\"\"\"\n1 2\n1 1 1 1\n\"\"\") == \"0 0\"\n\nassert solution(\"\"\"\n1 1\n1 2 3 4\n\"\"\") == \"1 1\""
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"2 3\"\n\"\"\""
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 3\n2 2 2 1\"\"\") == \"1 1\"\nassert solution(\"\"\"0 0 0 1\n3 2 2 1\"\"\") == \"0 0\"\nassert solution(\"\"\"0 1\n1 0 2 1\"\"\") == \"0 0\"\nassert solution(\"\"\"4 1\n2 2 1\n3 3 1\n5 2\n2 5\"\"\") == \"2 0\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '1 3\\n2 2 2 1'\n) == '1 1'\n'''"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"1,1\") == \"11\"\nassert solution(\"5,3\") == \"2\"\nassert solution(\"1,2,1\") == \"4\"\nassert solution(\"1,3,2,1\") == \"4\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '8'\nassert solution('3') == '23'\nassert solution('4') == '40'\nassert solution('5') == '53'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '10'\nassert solution('3') == '10'\nassert solution('4') == '10'\nassert solution('5') == '10'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3''') == '10'\n\nassert solution('''0\n1\n2''') == '10'\n\nassert solution('''2\n1\n2''') == '5'\n\nassert solution('''1\n2\n1''') == '6'\n\nassert solution('''3\n1\n2\n1''') == '7'"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '10'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '10\\n'\nassert solution('2\\n') == '11\\n'\nassert solution('3\\n') == '11\\n'\nassert solution('4\\n') == '11\\n'\nassert solution('5\\n') == '11\\n'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '10'\n\nassert solution('15') == '60'\n\nassert solution('1000') == '10000'\n\nassert solution('1000000') == '10000001'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '10'\nassert solution('2\\n') == '6'\nassert solution('3\\n') == '7'\nassert solution('4\\n') == '6'\nassert solution('5\\n') == '4'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n1000 1 0\n1 1000 1\n''') == '0.000'\nassert solution('''\n3 2\n1000 1 0\n1 1000 1\n1 1000 1\n''') == '0.003'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"0.000\"\nassert solution(\"1 1\") == \"0.000\"\nassert solution(\"1 1 1\") == \"0.000\"\nassert solution(\"1 1 1 1\") == \"0.000\"\nassert solution(\"1 1 1 1 1\") == \"0.000\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"0.001\"\nassert solution(\"1 1 2\") == \"0.500\"\nassert solution(\"1 1 1 1\") == \"0.500\"\nassert solution(\"1 2 2\") == \"0.500\"\nassert solution(\"1 2 1 1\") == \"0.500\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n1000 1 0\n1 1000 1\n\"\"\") == \"0.001\"\nassert solution(\"\"\"\n1 1\n1 1\n\"\"\") == \"0.0\"\nassert solution(\"\"\"\n1 1\n1000 1 0\n1 1000 1\n\"\"\") == \"0.0\""
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == \"0.001\"\nassert solution('2 4\\n300 1 0\\n1 1000 1\\n1 100 0\\n2 1000 1') == \"0.666\"\nassert solution('2 2\\n1000 1 0\\n1 1000 1\\n1 1000 1') == \"0.333\"\n\"\"\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n1000 1 0\n1 1000 1\n1 1000 1\n''') == \"0.001\"\nassert solution('''\n3 2\n1000 1 0\n1 1000 1\n1 1000 1\n''') == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1000 1 0') == '0.001'\nassert solution('1 1000 1') == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1 2') == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0.001\"\nassert solution(\"1 2\") == \"0.001\"\nassert solution(\"1 2\") == \"0.001\"\nassert solution(\"1 2\") == \"0.001\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\") == \"0\"\nassert solution(\"5 5 4 10000\\n1 2\\n2 3\\n3 4\\n4 5\") == \"1\"\nassert solution(\"10 10 10 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n6 7\\n7 8\\n8 9\\n9 10\") == \"0\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n') == '0'\nassert solution('3 4 5 6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '5'\nassert solution('7 11 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '9'\nassert solution('6 7 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '1'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n') == '0'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 2 10000\n1 2\n2 3\n3 1\n''') == '0'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n') == '0'\nassert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n3 2\\n') == '2'\nassert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n3 2\\n3 3\\n') == '1'\nassert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n3 2\\n3 3\\n3 3\\n') == '0'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3') == '0'\nassert solution('5 4 2 10000\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '1'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3 2 10000\n1 2\n2 3\n3 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5 5 2 100000\n1 2\n2 3\n3 4\n4 5\n5 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5 5 2 10000\n1 2\n2 3\n3 4\n4 5\n5 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 2 10000') == '0'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 0\n''') == '26'\nassert solution('''\n10\n0 1 1 1 1 1 1 1 1 1\n1 0 2 2 2 2 2 2 2 2\n1 2 0 3 3 3 3 3 3 3\n1 2 3 0 0 0 0 0 0 0\n1 3 0 0 0 0 0 0 0 0\n''') == '56'\nassert solution('''\n2\n1 0\n0 0\n''') == '2'\nassert solution('''\n6\n0 1 1 1 1 1\n1 0 2 2 2 2\n1 2 0 3 3 3\n1 2 3 0 0 0\n1 3 0 0 0 0\n''') == '36'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '26'\nassert solution('''\n10\n0 1 1 1 1 1 1 1 1 1\n1 0 2 2 2 2 2 2 2 2\n1 2 0 3 3 3 3 3 3 3\n1 2 3 0 4 4 4 4 4 4\n1 2 3 4 0 5 5 5 5 5\n1 2 3 4 5 0 6 6 6 6\n1 2 3 4 5 6 0 7 7 7\n1 2 3 4 5 6 7 0 8 8\n1 2 3 4 5 6 7 8 0 9\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2 3 4 5 6 7 8 9 0\n1 2"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '26'\nassert solution('''\n8\n0 1 1 1 1 1 1\n1 0 2 2 2 2 2\n1 2 0 3 3 3 2\n1 2 3 0 4 4 1\n1 2 3 4 0 4 3\n1 2 3 4 1 0 3\n1 2 4 2 4 2 4\n1 3 2 4 3 2 4\n1 3 4 2 4 2 4\n''') == '94'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2 3\\n1 2 3') == '26'\nassert solution('2\\n1 2 3\\n1 2 3\\n3 1') == '28'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '26'"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == '26'\nassert solution('8\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 3 0 2\\n1 3 2 0\\n1 3 2 3\\n1 3 3 0\\n1 3 3 3') == '0'\nassert solution('16\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 2 4 3\\n1 2 4 4\\n1 4 0 3\\n1 4 2 3\\n1 4 2 4\\n1 4 3 0\\n1 4 3 2\\n1 4 3 4\\n1 4 4 0\\n1 4 4 2\\n1 4 4 4\\n1 5 0 1\\n1 5 2 1\\n1 5 3 1\\n1 5 4 1\\n1 5 6 1\\n1 5 6 2\\n1 5 6 4\\n1 6 0 2\\n1 6 2 1\\n1 6 2 3\\n1 6 4 1\\n1 6 6 1\\n1 6 6 2\\n1 6 6 4\\n2 0 1 2\\n2 0 2 1\\n2 0 1 1\\n2 0 2 2\\n2 0 1 3\\n2 0 1 4\\n2 1 0 3\\n2 1 2 0\\n2 1 2 1\\n2 1 3 0\\n2 1 4 0\\n2 2 0 3\\n2 2 1 0\\n2 2 3 0\\n2 2 4 0\\n2 3 0 4\\n2 3 1 0\\n2 3 2 0\\n2 3 4 0\\n2 3 4 1\\n2 3 4 2\\n2 3 4 3\\n2 3 4 4\\n2 4 0 3\\n2 4 2 0\\n2 4 3 0\\n2 4 4 0\\n2 4 4 1\\n2 4 4 2\\n2 4 4 3\\n2 4 4 4\\n3 0 0 2\\n3 1 0 2\\n3 1 2 0\\n3 1 2 1\\n3 1 3 0\\n3 1 4 0\\n3 1 4 1\\n3 2 0 0\\n3 2 1 0\\n3 2 2 0\\n3 2 3 0\\n3 2 4 0\\n3 3 0 2\\n3 3 2 0\\n3 3 3 0\\n3 3 4 0\\n3 4 0 4\\n3 4 2 0\\n3 4 3 0\\n3 4 4 0\\n4 0 2 3\\n4 1 0 3\\n4 1 2 3\\n4 1 3 0\\n4 2 0 4\\n4 2 3 0\\n4 2 4 0\\n4 2 4 1\\n4 2 4 2\\n4 3 0 4\\n4 3 2 0\\n4 3 4 0\\n4 3 4 1\\n4 3 4 2\\n4 3 4 3\\n4 3 4 4\\n4 4 0 2\\n4 4 2 1\\n4 4 3 0\\n4 4 4 1\\n5 0 1 1\\n5 1 0 2\\n5 1 2 0\\n5 1 2 1\\n5 1 2 2\\n5 1 2 3\\n5 1 2 4\\n5 1 2 5\\n5 1 2 6\\n5 1 2 7\\n5 1 2 8\\n5 1 2 9\\n5 2 0 1\\n5 2 1 0\\n5 2 2 1\\n5 2 2 2\\n5 2 3 0\\n5 2 4 0\\n5 3 0 2\\n5 3 1 0\\n5 3 2 0\\n5 3 4 0\\n5 3 4 1\\n5 3 4 2\\n5 3 4 3\\n5 3 4 4\\n5 4 0 3\\n5 4 1 0\\n5 4 2 0\\n5 4 3 0\\n5 4 4 1\\n5 4 4 2\\n5 4 4 3\\n5 4 4 4\\n6 0 3 2\\n6 1 0 3\\n6 1 3 0\\n6 1 4 0\\n6 2 0 2\\n6 2 3 0\\n6 2 4 0\\n6 3 0 3\\n6 3 4 0\\n6 4 0 4\\n6 4 2 0\\n6 4 3 0\\n6 4 4 1\\n6 5 0 2\\n6 5 2 0\\n6 5 3 0\\n6 5 4 0\\n6 5 5 0\\n6 5 5 1\\n6 5 6 0\\n6 5 6 1\\n6 5 6 2\\n6 5 6 3\\n6 5 6 4\\n6 6 0 3\\n6 6 2 0\\n6 6 3 0\\n6 6 4 0\\n6 6 5 0\\n6 6 6 0\\n7 0 1 2\\n7 1 0 1\\n7 1 1 0\\n7 1 2 1\\n7 1 3 0\\n7 1 4 0\\n7 1 5 0\\n7 2 0 1\\n7 2 1 0\\n7 2 2 0\\n7 2 3 0\\n7 2 4 0\\n7 2 5 0\\n7 3 0 2\\n7 3 1 0\\n7 3 2 0\\n7 3 3 0\\n7 3 4 0\\n7 3 5 0\\n7 3 6 0\\n7 3 7 0\\n7 3 8 0\\n7 4 0 1\\n7 4 2 0\\n7 4 3 0\\n7 4 4 0\\n7 4 5 0\\n7 4 6 0\\n7 4 7 0\\n7 5 0 2\\n7 5 1 0\\n7 5 2 0\\n7 5 3 0\\n7 5 4 0\\n7 5 5 0\\n7 5 6 0\\n7 5 7 0\\n7 5 8 0\\n7 6 0 2\\n7 6 1 0\\n7 6 2 0\\n7 6 3 0\\n7 6 4 0\\n7 6 5 0\\n7 6 6 0\\n7 6 7 0\\n7 6 8 0\\n7 6 9 0\\n7 6 10 0\\n7 7 0 3\\n7 7 1 0\\n7 7 2 0\\n7 7 3 0\\n7 7 4 0\\n7 7 5 0\\n7 7 6 0\\n7 7 7 0\\n7 7 8 0\\n7 7 9 0\\n7 7 10 0\\n7 8 0 2\\n7 8 1 0\\n7 8 2 0\\n7 8 3 0\\n7 8 4 0\\n7 8 5 0\\n7 8 6 0\\n7 8 7 0\\n7 8 8 0\\n7 8 9 0\\n7 8 10 0\\n7 9 0 3\\n7 9 1 0\\n7 9 2 0\\n7 9 3 0\\n7 9 4 0\\n7 9 5 0\\n7 9"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == '26'\nassert solution('3\\n1 2 3 0\\n1 2 3 0\\n1 2 3 0') == '18'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\n\nprint(solution('''\n2\n1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n'''))\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.666666667'\nassert solution('''\n4 3\n1 1 1 1\n.X.\nX.T\nX.T\n''') == '0.25'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.333333333\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 20 20 40\nX.X\nT.T\n''') == '0.3333333333333333'\nassert solution('''10 10 10 40\nX.X\nT.T\n''') == '0.3333333333333333'\nassert solution('''2 2 2 40\n.X.\n.T\n''') == '0.3333333333333333'\nassert solution('''8 8 8 40\n.X.\n.T\n.X\n''') == '0.3333333333333333'\nassert solution('''5 5 5 40\nT.T\n.X\n.T\n.X\n''') == '0.3333333333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2\n20 20 20 40\nT.T\nT.T\n\"\"\") == \"0.666666667\"\nassert solution(\"\"\"\n5 10\n.X.\n.T.\n.X.\nT.X\n.X.\n.X.\nX.T\n.X.\nX.T\n\"\"\") == \"0.333333333\"\n\"\"\"\nfor l in range(2, 1000):\n    if solution(\"\"\"\n{} {}\n{}\n{}\n{}\n\"\"\".format(l, l, l, l, l)) == \"0.33333333\":\n        print(l)\n        exit()\n\"\"\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n20 20 20 40\n.X.\n.T.''') == '0.166666666667'\nprint(solution('''3 2\n20 20 20 40\n.X.\n.T.'''))\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3 2\n    20 20 20 40\n    X.X\n    T.T\n    ''') == '0.3333333333333333'\nassert solution('''\n    3 2\n    20 20 20 40\n    X.X\n    T.T\n    ''') == '0.6666666666666666'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.666666667\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.333333333'\nassert solution('''\n3 2\n20 20 20 20\nX.X\nX.X\nT.T\n''') == '0.33333333'\nassert solution('''\n3 2\n20 20 20 20\nX.X\nX.X\nX.X\nT.T\n''') == '0.33333333'"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n20 20 20 40\") == \"0.3333333333333333\"\nassert solution(\"3 2\\n20 20 20 40\\n.X.\\n.T.\\n.X.\\nT.T\") == \"0.3333333333333333\""
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.3333333333333333'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('15 15 0 0') == '0.75'\nassert solution('45 45 0 0.9') == '0.9'\nassert solution('15 15 0 0.9') == '0.9'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4\\n') == '0.75'\nassert solution('45 45 0 0\\n') == '0.75'\nassert solution('1 2 3 4\\n') == '0.75'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('60 12 33 0') == '0.25'\nassert solution('39 38 10 30') == '0.1666666666666667'\nassert solution('46 19 33 19') == '0.1666666666666667'"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0.75'"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0 45 45 0 0\n''') == '0.75'\n\nassert solution('''\n9 45 45 0 0\n''') == '1.0'\n\nassert solution('''\n90 45 45 0 0\n''') == '1.0'\n\nassert solution('''\n6 90 45 45 0 0\n''') == '0.0'\n\nassert solution('''\n35 90 45 45 0 0\n''') == '0.0'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''45 45 0 0''') == '0.75'\nassert solution('''5.2 5.2 0 0''') == '0.80'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 45 45\") == \"0.75\"\nassert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"0 45 0 0\") == \"0.75\"\nassert solution(\"45 0 0 0\") == \"0.75\"\nassert solution(\"0 0 45 45\") == \"0.75\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"0 0 45 45\") == \"0.75\"\nassert solution(\"1 1 1 1\") == \"0.5\"\nassert solution(\"0 1 1 1\") == \"0.5\"\nassert solution(\"0.5 0.5 0.5 0.5\") == \"1\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0.00 4.00 0.00 0.00\") == \"0.00\"\nassert solution(\"0.00 0.00 0.00 0.00\") == \"0.00\"\nassert solution(\"0.00 0.00 0.00 0.00\") == \"0.00\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('0.0 0.0 0.0') == '0.0'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n') == '4'\n\nassert solution('5 3\\n1 2\\n3 4\\n2 5\\n4 5\\n') == '0'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '4'\nassert solution('3 4') == '-1'\nassert solution('5 5') == '0'"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 4\n0 1 2\n0 3 5\n1 2 3\n2 3 4\n\"\"\") == \"2\""
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n10\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n5 3 9\n6 3 9\n7 3 9\n8 2 9\n9 2 9\n10 3 9\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n10\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n5 3 9\n6 3 9\n7 3 9\n8 2 9\n9 2 9\n10 3 9\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n10\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n5 3 9\n6 3 9\n7 3 9\n8 2 9\n9 2 9\n10 3 9\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('10\\n3 5\\n5 3\\n2 8\\n2 4\\n4 2\\n1 2\\n8 2\\n2 7\\n1 8\\n5 2\\n2 2\\n1 8\\n8 2\\n2 5\\n2 5\\n2 7\\n1 4\\n8 7\\n2 6\\n1 6\\n6 1\\n1 4\\n5 1\\n7 1\\n1 5\\n7 2\\n1 6\\n5 3\\n5 1\\n2 5\\n1 7\\n2 4\\n1 6\\n6 5\\n3 1\\n5 4\\n3 4\\n1 1\\n2 6\\n2 1\\n5 3\\n4 5\\n4 7\\n2 2\\n1 2\\n5 2\\n4 5\\n5 7\\n6 1\\n2 3\\n6 4\\n5 2\\n1 6\\n7 3\\n2 3\\n8 4\\n4 6\\n1 7\\n1 7\\n1 2\\n2 7\\n2 8\\n1 7\\n3 4\\n1 6\\n3 3\\n1 3\\n4 5\\n4 7\\n5 5\\n1 6\\n2 3\\n2 7\\n1 4\\n1 5\\n3 7\\n2 3\\n4 1\\n4 5\\n1 2\\n3 1\\n4 7\\n2 5\\n1 3\\n4 2\\n3 3\\n1 3\\n2 1\\n1 1\\n1 1\\n3 7\\n1 3\\n1 3\\n1 6\\n1 1\\n5 4\\n3 4\\n4 7\\n1 6\\n1 4\\n1 4\\n3 2\\n2 7\\n1 1\\n2 2\\n2 5\\n1 4\\n5 3\\n1 4\\n1 4\\n4 5\\n3 4\\n1 4\\n1 4\\n1 4\\n4 2\\n3 2\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1 4\\n1"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == '4'\nprint('solution() finished successfully!')"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n') == '4'\nprint('SUCCESS: ', solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n'))"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"0 1 2\") == \"0\"\nassert solution(\"0 3 8\") == \"12\"\nassert solution(\"1 2 11\") == \"20\"\nassert solution(\"2 3 5\") == \"10\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"100\"\n\n\"\"\""
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"100\"\n\nSample Input:\n3\n10 10 0 5\n10 10 0 0\n10 10 0 0\nSample Output:\n200\n\"\"\""
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 10 0 5\n''') == '100'\nassert solution('''\n100 10 0 5\n''') == '1000'\nassert solution('''\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"100\"\n\"\"\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5\n10 10 0 5"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10 10 0 5\\n') == '100'\nassert solution('2\\n1 1 0 5\\n1 1 0 5\\n') == '10000'\nassert solution('3\\n1 2 0 2\\n1 2 0 2\\n1 2 0 2\\n') == '20000'\nassert solution('4\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n') == '0'\nassert solution('5\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n') == '0'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n10 0 5\n1\n10 0 5\n1\n10 0 5\n1\n10 0 5\n1\n10 0 5\n1\n10 0 5\n1\n10 0 5\n1\n10 0 5\n1\n''') == '100'\nassert solution('''\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10 10 10\n1\n10 10"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n10 10 0 5\n''') == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 1 1 1\n1 1 1 1\n''') == '2'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\nassert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\n'''\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n0 0 2 2\n1 1 3 4\n5 7 6 8\n5 7 8 10\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1\n1 1 3 4\n0 0 2 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '0'\nassert solution('1') == '0'\n'''\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\nassert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '0'\n\nimport sys\nfrom io import BytesIO\nimport unittest\n\n\nclass TestPractice(unittest.TestCase):\n    def test_equal(self):\n        pass\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\n\nassert solution('''\n7\n10 20 10 20 10 20 10\n30 30 30 30 30 30 30\n40 40 40 40 40 40 40\n50 50 50 50 50 50 50\n60 60 60 60 60 60 60\n70 70 70 70 70 70 70\n80 80 80 80 80 80 80\n90 90 90 90 90 90 90\n''') == '0'\n\nassert solution('''\n3\n0 0 1 1\n1 1 3 3\n4 4 4 4\n''') == '1'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\n\nassert solution('''\n4\n-1 -1 3 2\n4 -2 3 2\n3 2 3 3\n-1 3 2\n''') == '0'\n\nassert solution('''\n5\n-1 -1 1 0\n1 1 3 2\n3 3 1 2\n2 3 2 3\n-1 3 2\n''') == '1'\n\nassert solution('''\n4\n1 1 3 2\n1 3 2 3\n3 3 1 2\n-1 3 2\n''') == '0'\n\nassert solution('''\n8\n0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n''') == '1'"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n8\n0 0 0 0 0 0 0 0\n1 1 3 4 5 6 7\n8 9 9 8 8 8 7\n6 7 6 9 8 9 6\n8 8 8 8 8 8 8\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('-10') == '0'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\n\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\n\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '15'\n\nassert solution('''4 4\nE E E E\n1 2 3 4\n5 4 3 2\n-2 -2 -2 -2\n8 8 8 8\n9 9 9 9\nS S S S''') == '16'\n\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '16'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'\n\n'''"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\") == \"17\"\nassert solution(\"10 10\") == \"41\"\nassert solution(\"4 3\") == \"12\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\nassert solution('''4 4\nE E E E E\n1 2 3 4\n5 4 3 2\n-2 -2 -2 -2\n8 8 8 8\n9 9 9 9\nS S S S S''') == '28'\nassert solution('''3 4\nE E E E E\n1 2 3 4\n5 4 3 2\n-2 -2 -2 -2\n8 8 8 8\n9 9 9 9\nS S S S S''') == '24'\nassert solution('''2 2\nE E E E E\n1 2 3 4\n5 4 3 2\n-2 -2 -2 -2\n8 8 8 8\n9 9 9 9\nS S S S S''') == '22'\nassert solution('''4 4\nE E E E E\n1 2 3 4\n5 4 3 2\n-2 -2 -2 -2\n8 8 8 8\n9 9 9 9\nS S S S S''') == '22'\n''') == '24'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"3 2\\n0 0\\n0 0\\n0 0\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n\") == \"16\"\nassert solution(\"3 3\\n0 0\\n0 0\\n0 0\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n\") == \"16\"\nassert solution(\"3 4\\n0 0\\n0 0\\n0 0\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n\") == \"16\"\nassert solution(\"2 2\\n0 0\\n0 0\\n0 0\\n4 4\\n4 4\\n4 4\\n4 4\\n4 4\\n\") == \"16\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == '17'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == '7'\nassert solution('''8 8\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n''') == '8'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n\"\"\"\n) == \"17\"\n\nassert solution(\n\"\"\"3 3\nE E E\n1 2 3\n4 5 6\nS S S S\nSample Output:\n-1\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3\\nE E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"5\\n3\\nE E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"13\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '17'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('4') == 'impossible'\nassert solution('8') == 'impossible'\nassert solution('20') == 'impossible'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5\n3 2 3 1 1\n\"\"\"\n) == \"1 4 3 5 2\"\nassert solution(\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\nassert solution(\n\"\"\"\n2\n2 2\n\"\"\"\n) == \"2 2\"\n\"\"\"\n\n4\n3 1 2 3\n\"\"\"\n) == \"1 2 3\"\n\"\"\"\n3\n5 1 3 4 2\n\"\"\"\n) == \"3 1 4 2\"\n\"\"\"\n2\n3 5 3 1\n\"\"\"\n) == \"3 5 3 1\"\n\"\"\"\n5\n4 1 4 2 3\n\"\"\"\n) == \"4 1 4 2 3\"\n\"\"\"\n3\n5 1 4 3 2\n\"\"\"\n) == \"3 1 4 2 5\"\n\"\"\"\n3\n5 1 5 4 2\n\"\"\"\n) == \"3 1 5 4 2\"\n\"\"\"\n5\n3 2 3 1 1\n\"\"\"\n) == \"1 4 3 5 2\"\n\"\"\"\n2\n3 5 3 1\n\"\"\"\n) == \"1 3 5 3 1\"\n\"\"\"\n2\n2 1\n\"\"\"\n) == \"1 2\"\n\"\"\"\n4\n1 3 4\n\"\"\"\n) == \"1 4\"\n\"\"\"\n4\n4 4\n\"\"\"\n) == \"4\"\n\"\"\"\n3\n1 1\n\"\"\"\n) == \"1 1\"\n\"\"\"\n5\n1 3 4 2 5\n\"\"\"\n) == \"1 2 5 3 4\"\n\"\"\"\n2\n1 4\n\"\"\"\n) == \"1 4\"\n\"\"\"\n2\n3 5 3 1\n\"\"\"\n) == \"3 1 4 2 5\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n2\n1 4\n\"\"\"\n) == \"1 4\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n3\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n2\n1 4\n\"\"\"\n) == \"1 4\"\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"1 2\"\n\"\"\"\n2\n3 2\n\"\"\"\n) == \"3 2\"\n\"\"\"\n3\n1 3\n\"\"\"\n) == \"1 3\"\n\"\"\"\n4\n1 3 2 4\n\"\"\"\n) == \"1 2 4 3\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 3 4 5 2\"\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"1 2\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n3\n2 1 2\n\"\"\"\n) == \"2 1 2\"\n\"\"\"\n4\n1 3 2 4\n\"\"\"\n) == \"1 2 4 3\"\n\"\"\"\n3\n1 3 2 4\n\"\"\"\n) == \"1 3 2 4\"\n\"\"\"\n4\n1 3 2 4\n\"\"\"\n) == \"1 2 4 3\"\n\"\"\"\n4\n1 3 2 4\n\"\"\"\n) == \"1 2 4 3\"\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"1 2\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"1 2\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n2\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n2\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n3\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n3\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n3\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n3\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n3\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n5\n1 3 2 4\n\"\"\"\n) == \"1 3 2 4\"\n\"\"\"\n4\n1 3 2 4\n\"\"\"\n) == \"1 3 2 4\"\n\"\"\"\n5\n1 3 2 4 5\n\"\"\"\n) == \"1 3 2 4 5\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n3\n1 3 2 4\n\"\"\"\n) == \"1 3 2 4\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4\"\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"1 2 3 4 5\"\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"1 2\"\n\"\"\"\n4\n1 2 3 4\n\"\"\"\n) == \"1 2 3 4"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1 4 3 5 2\"\nassert solution(\"5 1 1 1\") == \"1 4 3 5 2\"\n\n'''\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\"\nassert solution(\"5\\n4 2 2 1 1\") == \"1 3 4 2 5\"\nassert solution(\"5\\n5 2 1 2 1\") == \"1 5 2 4 3\""
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == \"impossible\"\nassert solution('5') == \"1 4 3 5 2\"\nassert solution('5') == \"1 4 3 5 2\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 4 3 5 2'\n\"\"\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 4 3 5 2\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 2 3 1 1\n''') == '1 4 3 5 2'\nassert solution('''\n5\n5 4 5 2 1 2 3\n''') == '2 3 5 4 5 1'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3 2 3 1 1\nSample Output:\n1 4 3 5 2''') == '1 4 3 5 2'\nassert solution('''10\n1 3 1 5 3 4 2 1 5 4 1''') == '1 5 2 4 3 4 5 3 1'\nassert solution('''10\n2 2 2 2 2 1 1 1 1''') == '1 1 1 1 2 2 2 2'\n'''"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '1 4 5 2 3'\nassert solution('5') == '1 2 4 3 5'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('2') == '0.76781138'\nassert solution('3') == '0.76817089'\nassert solution('4') == '0.76856982'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('2') == '0.03167389'\nassert solution('3') == '0.23333333'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('2') == '0.00'\nassert solution('3') == '0.00'\nassert solution('4') == '0.00'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n0 1\n0 2\n''') == '0.76772047'\nassert solution('''\n10\n0 0 1\n1 4\n10 2\n10 2\n4 2\n1 2\n1 1\n''') == '0.45732748'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0.76956522'\nassert solution('2') == '0.86206897'\nassert solution('3') == '0.86967742'\nassert solution('4') == '0.94736842'\nassert solution('5') == '0.94736842'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 0 1\n1 4\n''') == '0.76772047'\n\nassert solution('''\n1 0 1\n1 4\n''') == '0.78125'\n\nassert solution('''\n3\n3 1 0\n3 4\n''') == '0.25'\n\nassert solution('''\n10\n2 4 0\n9 0 1\n1 4\n3 4\n8 5 0\n2 4 0\n5 6 0\n7 8 0\n0 4 1\n4 8 0\n1 6 0\n6 7 0\n4 1 0\n3 8 0\n6 7 0\n4 1 0\n2 2 0\n0 3 0\n7 2 0\n''') == '0.5625'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0.40625', \"3rd\"\nassert solution('3') == '0.25', \"1st\"\nassert solution('4') == '0.24999999999999999', \"2nd\"\nassert solution('5') == '0.249999999999999995', \"3rd\"\nassert solution('6') == '0.25', \"4th\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('1,1,1,1,1,1,1,1,1,1') == '0.14285714'"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('2') == '0.358974358'\nassert solution('3') == '0.169434853'\nassert solution('4') == '0.09256843'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 0 1\n1 4\n''') == '0.76772047'\nassert solution('''\n5 4 2\n0 0 0 0 0\n0 1 1 0 0\n0 0 0 1 0\n0 1 1 0 0\n0 0 0 1 0\nSample Input:\n1\n5 4 2\n3 4\nSample Output:\n1.0\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"teams hello\") == \"27\"\n\nn = int(input())\ns1 = input()\ns2 = input()\n\ncounter = 0\n\nfor i in range(n):\n    if s1[i]!= s2[i]:\n        if s1[i] == 'z':\n            counter += 1\n        else:\n            counter += 2\n        \nprint(counter)\n\"\"\"\n\nn = int(input())\ns1 = input()\ns2 = input()\n\ncounter = 0"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('hello teams') == '27'\nassert solution('helmp') == '1'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello hai!') == '1'"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('hello teams') == '27'\nassert solution('helmp') == '8'\nassert solution('bbdddbbbb') == '5'\nassert solution('dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello teams') == '27'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"hi hi hi hi hi\") == \"3\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello helmp') == '27'\nassert solution('hello helmp ddd') == '27'\nassert solution('helmp helmp helmp helmp') == '27'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('hello teams') == '27'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello people') == '3'"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''hello teams\n        teams''') == '27'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 4') == '2'\nassert solution('5 5') == '2'\n\"\"\""
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution(\"\"\"\n1 5\n4 3\n7 8\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 5\n4 3\n7 8\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('6 3') == '2'\nassert solution('6 2') == '1'\nassert solution('2 7') == '1'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n1 8\n5 4\n7 7\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n2\n1 8\n5 4\n7 7\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution('1\\n3\\n') == '1'\nassert solution('1\\n8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == '1'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2\n1 3\n2 4\n2 3\n3 4\n''') == '2'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == '2'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\nab\\neca\") == \"26\""
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\\n3\\n3\\n2\") == \"2\"\nprint('\"Run\" is the best')\n\nimport sys\nfrom collections import deque\nfrom typing import Deque, Dict, List, Optional, Set, Tuple\n\nimport unittest\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n') == '26'\nassert solution('10 10\\n') == '933'\nassert solution('6 5\\n') == '331'\nassert solution('20 20\\n') == '9550'\nassert solution('6 10\\n') == '9395'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\na\nb\nc\nd\ne\ncad\n''') == \"26\"\nassert solution('''\n5 4\na\nb\nc\nd\ne\ncad\n''') == \"31\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"26\"\nassert solution(\"10 3\") == \"26\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"26\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\n20\\n') == '20'\n\"\"\""
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3\na\nb\nc\n''') == '26'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\na\\nb\\nc\\n') == '26'\n\ninput = '''\n2\nbab\nabc\n'''\n\ninput = '''\n2\na\nb\n'''\n\ninput = '''\n1\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"10 10 30\\n5 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"15 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"20 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\nassert solution(\"5 10 30\\n10 5 3 1 3\") == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('3 2 1') == '3 1'\nassert solution('100 200 200') == '2 1'\nassert solution('1 1 1') == '1'\nassert solution('100 1') == '1'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 5 3 1 3') == '3 5 2 1 4'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('10 5 3 1 3') == '3 5 2 1 4'\nassert solution('1000000000 999999999 999 9 999 1 9') == '1 9 999 999 1 9 9 9 9'"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 10 30\n10 5 3 1 3\n''') == '3 5 2 1 4'\nassert solution('''\n1\n1 1\n''') == '1 1 1 1'\n'''\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('5 10 30') == '4 2 3 5 1'"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 4 1') == '1 2 3 4'\nassert solution('1 2 3 4') == '1 2 3 4'\nassert solution('5 10 30') == '3 5 2 1 4'\nassert solution('10 5 3 1 3') == '3 5 2 1 4'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('1 10 30') == '1 1 1 1 1'\nassert solution('1 1 1 1 1 1') == '1 1 1 1 1'"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4', \"Wrong!\"\nassert solution('5 2 3 1 4') == '1 4 2 3 5', \"Wrong!\"\nassert solution('10 10 30') == '10 5 3 1 4', \"Wrong!\"\nassert solution('5 10 30') == '3 5 2 1 4', \"Wrong!\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 2 20\n5 1 5 2 1 5 4 2\n''') == '1 2 4 5 1 5 2'\nassert solution('''\n10 4 1\n10 9 8 7 2 8 4 1\n''') == '2 1 4 1 8 7 8 9 9'\nassert solution('''\n5 3\n2 2 2 1 2 2\n''') == '1 2 2'\n'''\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"shovel time!\"\nassert solution(\"3\") == \"shovel time!\"\nassert solution(\"2 1\") == \"shovel time!\"\nassert solution(\"2 3\") == \"shovel time!\"\nassert solution(\"2 3\") == \"shovel time!\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n1 1\\n2 3\\n2 3\\n\"\n) == \"2\"\n\nassert solution(\n    \"10\\n1 5\\n2 7\\n3 7\\n4 7\\n5 7\\n6 7\\n7 7\\n8 7\\n9 7\\n10 7\\n\"\n) == \"shovel time!\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n2\\n3') =='shovel time!'\nassert solution('1\\n1\\n2\\n2') =='shovel time!'\nassert solution('3\\n1\\n2\\n3') =='shovel time!'"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n2 3\n2 3\nSample Input:\n4\n2 1\n2 2\n2 2\nSample Output:\n3\n''') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') =='shovel time!'\nassert solution('4') =='shovel time!'\nassert solution('10') =='shovel time!'\n\nstdin = \"\"\"\n3\n2 1\n2 3\n2 3\"\"\""
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1\n2 3\n2 3\n''') =='shovel time!'\n\nassert solution('''\n1\n1\n''') =='shovel time!'\n\nassert solution('''\n2\n1 1\n2 3\n''') =='shovel time!'\n\nassert solution('''\n1\n2 2\n''') =='shovel time!'\n\nassert solution('''\n2\n1 1\n2 3\n''') =='shovel time!'"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n3\n1 1\n2 3\n2 3\n\"\"\") == \"shovel time!\"\nprint(solution(r\"\"\"\n4\n1 2\n1 2\n2 1\n2 3\n3 2\n3 2\n3 2\n4 3\n3 2\n3 2\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n2 3\n2 3\n''') =='shovel time!'\nassert solution('''\n1 3\n1 4\n''') =='shovel time!'\nassert solution('''\n7 8\n9 10\n8 5\n7 5\n6 4\n4 5\n3 7\n2 6\n''') =='shovel time!'\nassert solution('''\n100 100\n-100 -100\n''') =='shovel time!'\nassert solution('''\n30 30\n-30 -30\n''') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3\\n2 3') == '2'\nassert solution('1\\n2 3\\n3 3') == '1'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"4\\n1 2 1 2\\n\") == \"3\""
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 5\\n') == \"3\"\nassert solution('3\\n1 2 3\\n') == \"2\"\nassert solution('1\\n1\\n') == \"1\"\nassert solution('1\\n1\\n') == \"1\"\nassert solution('1\\n1\\n') == \"1\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\\n3 3 3\") == \"1\\n1 3\\n1 3\\n1 3\\n2\\n2 1\\n2 1 1\\n\"\nassert solution(\"1\\n1 1 1\") == \"2\\n2 1\\n2 1 1\"\nassert solution(\"2\\n2 2 2\") == \"2\\n2 1\\n2 1 1\"\nassert solution(\"3\\n3 3 3\") == \"1\\n1 3\\n1 3\\n1 3\\n2\\n2 1\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\"\nassert solution(\"4\\n4 4 4 4\") == \"1\\n1 3\\n1 3\\n1 3\\n2\\n2 1\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\\n\""
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 1\n2 1\n''') == '3'\nassert solution('''\n3\n1 2 1\n1 3\n2 4\n''') == '2'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution() == '4'\nassert solution() == '5'\nassert solution() == '6'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 1 2\\n') == '3'\nassert solution('4\\n1 2 1 2\\n') == '2'\nassert solution('4\\n1 2 1 2\\n') == '1'\nassert solution('4\\n1 2 1 2\\n') == '1'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == '3'\n\nassert solution('''\n4\n1 1 1 2\n''') == '2'\n\nprint('ALL DONE')"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2 1 2\\n') == '3'\nassert solution('3\\n1 2 5 2\\n') == '4'\n\n\"\"\""
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1 4 1 2') == '3'\nassert solution('5 5 4 4 2') == '3'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5\\n1 2 1 2\\n1\\n2\\n3\\n\"\n    ) == \"3\"\n\nassert solution(\n    \"4\\n1 2 2\\n1\\n2\\n3\\n\"\n    ) == \"4\"\n\nassert solution(\n    \"4\\n2 3\\n1\\n2\\n3\\n\"\n    ) == \"4\"\n\nassert solution(\n    \"7\\n1 1 1 1 1 1 1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"\n    ) == \"5\"\n\nassert solution(\n    \"7\\n2 2 1 1 1 1 1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"\n    ) == \"6\""
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 999999937\") == \"79\"\nassert solution(\"2 999999937 4\") == \"1\"\nassert solution(\"4 999999937 4\") == \"1\"\nassert solution(\"2 5 5 999999937\") == \"1\"\nassert solution(\"4 4 999999937\") == \"1\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\n\"\"\""
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4 999999937') == '79'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4 999999937') == '79'"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4 999999937') == '79'\nassert solution('4 4 999999937') == '44'\nassert solution('4 4 999999937') == '16'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4 999999937') == '79'\nassert solution('0 0 0') == '1'\nassert solution('0 2 0') == '0'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 999999937') == '79'\nassert solution('2 3 999999937') == '4'\nassert solution('2 3 3 4 999999937') == '4'\nassert solution('2 3 4 4 5 999999937') == '5'\nassert solution('3 5 7 999999937') == '8'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\n\nassert solution(\"1 1 799999937\") == \"7\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4 999999937') == '79'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\nassert solution(\"4 3 800000002\") == \"95\"\nassert solution(\"3 4 900000003\") == \"5\"\nassert solution(\"7 7 900000004\") == \"29\""
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\n'\nassert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\n'\nassert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\n'\n\nassert solution('4\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\n'\nassert solution('4\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\n'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'zucchini\\nmushrooms\\nartichoke\\nmozzarella'\nassert solution('2') == 'zucchini\\nmozzarella'\nassert solution('3') == 'zucchini\\nmozzarella\\nmushrooms'"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\nartichoke'\nprint('Congratulations! All test cases passed.')\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\nzucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\nassert solution('''\n3\nzucchini +mozzarella +mushrooms -artichoke\n+zucchini -mozzarella\n''') == 'zucchini'\nassert solution('''\n1\nzucchini +mozzarella +mushrooms -artichoke\n+zucchini -mozzarella\n+zucchini -mozzarella -mushrooms\n''') == 'zucchini'\nassert solution('''\n2\nzucchini +mozzarella +mushrooms -artichoke\n+zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\nassert solution('''\n3\nzucchini +mozzarella +mushrooms -artichoke\n+zucchini -mozzarella\n+zucchini -mozzarella -mushrooms\n+zucchini -mozzarella -mushrooms -artichoke\n''') == 'zucchini'\n'''\n\nfrom collections import Counter\nimport re\nfrom itertools import product"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"zucchini\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'zucchini'\nassert solution('2') == 'zucchini mozzarella'\nassert solution('3') == 'zucchini mozzarella mushrooms artichoke'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1 +zucchini\n2 +mozzarella\n3 -zucchini\n4 -mozzarella\n5 +mushrooms\n6 -zucchini\n7 -mozzarella\n8 +zucchini\n9 -zucchini\n10 -mozzarella\n11 +mushrooms\n12 -zucchini\n13 -mozzarella\n14 +zucchini\n15 +mozzarella\n''') == 'zucchini\\nmozzarella\\nmushrooms\\nmushrooms\\nartichoke\\nmushrooms\\nartichoke\\nmushrooms\\nartichoke\\nartichoke\\nartichoke\\nmushrooms\\nzucchini\\nmushrooms\\nmushrooms\\nzucchini\\nzucchini\\nmushrooms\\nmushrooms\\nartichoke\\nmushrooms\\nmushrooms\\nmushrooms\\nmushrooms\\nmushrooms\\nzucchini\\nmushrooms\\nmushrooms\\nmushrooms\\nmushrooms\\nzucchini\\nzucchini\\nmushrooms\\nartichoke\\nmushrooms\\nmushrooms\\nzucchini\\nartichoke\\nmushrooms\\nartichoke\\nmushrooms\\nmushrooms\\nzucchini\\nartichoke\\nmushrooms\\nmushrooms\\nzucchini\\nzucchini\\nmushrooms\\nartichoke\\nartichoke\\nmushrooms\\nmushrooms\\nzucchini\\nzucchini\\nmushrooms\\nartichoke\\nmushrooms\\nartichoke\\nmushrooms\\nzucchini\\nmushrooms\\nartichoke\\nmushrooms\\nmushrooms\\n'''\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini'\nprint('The local tests passed')\n'''\n\nfrom functools import reduce"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == ''\nassert solution('2') =='mushrooms'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"zucchini\"\nassert solution(\"2\") == \"zucchini\"\nassert solution(\"3\") == \"zucchini\"\nassert solution(\"4\") == \"zucchini\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'PP'\nassert solution('3') == 'RR'\nassert solution('4') == 'PS'\nassert solution('5') == 'SS'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'PS'\nassert solution('2') == 'PP'\nassert solution('3') == 'RR'\nassert solution('4') == 'SS'\nprint(solution(input()))\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nPP\\nPP\\nPP\\nRR\\n') == 'PP'\nassert solution('2\\nPP\\nPP\\nPS\\nRR\\n') == 'PS'\nassert solution('2\\nPP\\nPP\\nSS\\nRR\\n') == 'SS'\nassert solution('1\\nR\\n') == 'R'\nassert solution('1\\nR\\n') == 'R'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'PP'\nassert solution('1 2') == '11'\nassert solution('3 1') == 'P'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'PP'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\nPP\nRR\nPS''') == 'PS'\nassert solution('''2 4\nPS''') == 'PS'\nassert solution('''2 2\nRR\nPP''') == 'RR'\nassert solution('''1 1\nRR''') == 'RR'\nassert solution('''1 1\nPS''') == 'PS'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\nPP\nRR\nPS\nSS\n''') == 'PS'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'PP'\nassert solution('2') == 'RR'\nassert solution('3') == 'SS'\nassert solution
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '4\\n'\n    'RR\\n'\n    'PP\\n'\n    'RR\\n'\n    'RPS\\n'\n    'PP\\n'\n    'RPS\\n'\n    'PPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n'\n    'RPS\\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nR\nR\nP\nR''') == 'PS'\nassert solution('''2\nR\nR\nR''') == 'RRP'\nassert solution('''5\nR\nR\nR\nR\nR''') == 'RRSR'\nassert solution('''3\nR\nR\nP''') == 'RRP'\nassert solution('''10\nR\nP\nR\nS\nS\nR\nR\nR\nP\nR\nR\nP''') == 'RRPPSRP'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n0.5 1.0\\n0\\n1\\n0') == '278.2'\nassert solution('10\\n0.5 1.0\\n0\\n1\\n0\\n0\\n1\\n0\\n0\\n1\\n0') == '322.2'\nassert solution('15\\n0.5 1.0\\n0\\n1\\n0\\n0\\n1\\n0\\n0\\n1\\n0') == '311.2'\nassert solution('20\\n0.5 1.0\\n0\\n1\\n0\\n0\\n1\\n0\\n0\\n1\\n0') == '310.2'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0.5 1.0 0.1\\n1 1 1 1\\n1\\n1\\n1\\n0\") == \"323\"\nassert solution(\"2\\n0.5 1.0 0.1\\n1 1 1 1\\n0\\n0\\n0\\n0\") == \"0.0\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0''') == '288'\n\nassert solution('''10\n1.0 2.0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0''') == '338.9'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '288.0'\nassert solution('5.1') == '288.0'\nassert solution('5.1 2.0') == '288.0'\nassert solution('0.1 2.0') == '288.0'\nassert solution('0.1 2.0 0.1') == '288.0'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n'\n    ) == '288'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '5'\n    ) == '288'\nassert solution(\n    '0.1 2.0'\n    ) == '288'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\") == \"288.0\"\nassert solution(\"20\\n0.1 2.0\\n0\\n0\\n0\\n0\") == \"314.1\"\n\"\"\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1.5\n0\n1.2\n1.2\n0''') == '0.240000'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n0.1 2.0\n0\n0\n0\n0\n0''') == '288.0'\nassert solution('''2\n0.1 2.0\n0\n0\n0\n0\n0''') == '0.0'\nassert solution('''3\n0.1 2.0\n0\n0\n0\n0\n0''') == '416.0'\nassert solution('''3\n0.1 2.0\n0\n0\n0\n0\n0''') == '0.0'\nassert solution('''3\n0.1 2.0\n0\n0\n0\n0\n0''') == '416.0'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n') == '288.0'\nassert solution('20\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('pastimeofwhimsy') == '1'\nassert solution('catcher') == '2'\nassert solution('cat') == '3'\nassert solution('hello') == '2'\nassert solution('hello1') == '3'\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('pastimeofwhimsy') == '1'\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('a') == 1\nassert solution('aabc') == 1\nassert solution('abcc') == 1\nassert solution('abcd') == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\n\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('pastimeofwhimsy') == '1'\n\n\"\"\""
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('pastimeofwhimsy') == '1'\nassert solution('test') == '2'\nassert solution('paddington') == '4'\n'''"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"happiness\") == \"1\"\nassert solution(\"meow\") == \"2\"\nassert solution(\"mew\") == \"2\"\nassert solution(\"yarn\") == \"5\"\nassert solution(\"aabcccaaa\") == \"3\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('pastimeofwhimsy') == 1\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('pastimeofwhimsy') == '1'\nassert solution('pastimeofbob') == '4'\nassert solution('wile') == '10'\nassert solution('meow') == '6'\nassert solution('meowmeow') == '9'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"5 4\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"3 3 4 3 4\") == \"NO\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 4\\n\"\n    \"1 2 2 1\\n\"\n    ) == \"YES\"\n\nassert solution(\n    \"1 2 2 1\\n\"\n    \"1 2 2 1\\n\"\n    ) == \"NO\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n'''"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 2 2 1\n''') == 'YES'\nassert solution('''1 2 3\n''') == 'NO'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n3 2 1') == 'YES'\nassert solution('2 4\\n2 2 1 1') == 'NO'"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n1 2 2 1 \n''') == 'YES'\n''')\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2 2 1') == 'YES'\nassert solution('3 5\\n1 2 3 4 5') == 'NO'"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n1 2 2 1 \n''') == 'YES'\nassert solution('''\n3 5\n1 2 2 3 4\n''') == 'NO'\n'''\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 2 2 1\n''') == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\n1 2 2 1') == 'YES'\n\"\"\"\n\nn, k = map(int, input().split())\nlst = list(map(int, input().split()))"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n\n\"\"\") == \"3/1\""
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n1 2\n3\n4 5\n''') == '5/4'\n\nassert solution('''\n1\n2\n3\n''') == '1/2'\n\nassert solution('''\n1\n2\n3\n''') == '1/2'\n\nassert solution('''\n3\n1 2\n3\n4 5\n''') == '3/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3') == '3/1'\nassert solution('10\\n100') == '1/4'\nassert solution('4 5\\n7\\n6 8') == '13/27'\nassert solution('1000\\n10000') == '8/5'\n\n'''\nfrom math import gcd"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n5\n\"\"\") == \"3/1\"\n\nassert solution(\"\"\"\n2\n3\n\"\"\") == \"2/3\"\n\nassert solution(\"\"\"\n2\n3\n\"\"\") == \"1/3\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2\n3\n4\n2\n1\n''') == \"2/1\"\nassert solution('''\n3\n1 2\n3\n4\n2\n1\n''') == \"3/1\"\nassert solution('''\n5\n1 2\n3\n4\n2\n1\n''') == \"4/1\"\n'''\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2\") == \"3/1\"\nassert solution(\"3\\n1 2\\n2 1\") == \"1/2\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2\\n\"\n    \"1 2\\n\"\n    \"3\\n\"\n) == \"3/1\"\n\nassert solution(\n    \"1\\n\"\n    \"2\\n\"\n) == \"2/1\"\n\nassert solution(\n    \"2\\n\"\n    \"1 2\\n\"\n    \"3\\n\"\n) == \"2/1\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3\\n4') == '3/1'\nassert solution('1\\n2') == '1/2'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == \"1.114672365\"\nassert solution('3') == \"4.0464883487\""
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1.2 10.2\n2.2 15.2''') == '1.114672365', \"First\"\nassert solution('''1\n1.2 10.2\n2.2 15.2''') == '1.114672365', \"Second\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1.114672365'\nassert solution('3') == '0.77671403'\nassert solution('4') == '0.86949088'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0.0'\nassert solution('2') == '0.02'\nassert solution('12') == '0.18'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\nprint(solution(*tuple(map(float, input().split()))))\nassert abs(solution(*tuple(map(float, input().split()))) - 14) < 10**-4\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.2 10.2\\n2.2 15.2') == '1.114672365'\n\nfrom math import pi, ceil\nfrom random import uniform"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1.2 10.2\n2.2 15.2''') == \"1.114672365\"\nassert solution('''2\n2.2 10.2\n1.2 15.2''') == \"0.114672365\"\nassert solution('''2\n1.2 10.2\n2.2 15.2''') == \"0.114672365\"\nassert solution('''2\n2.2 10.2\n1.2 15.2''') == \"0.114672365\"\nassert solution('''2\n2.2 10.2\n1.2 15.2''') == \"0.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nassert solution('1\\n1\\n2') == '0'\n\nassert solution('1\\n1\\n2') == '0.000000000'\n'''\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 3\n2 2\n1 1\n0 0\n4 5\n3 4\n''') == '4\\n1 2 3 2'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n0\n1\n1\n1\n''') == '1'\nassert solution('''\n10\n0 0\n1 0\n0 1\n1 0\n0 0\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n''') == '3'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3\\n1 2 3 2'\nassert solution('5\\n1 3\\n2 1\\n2 0\\n3 0') == '5\\n1 2 3 2'\nassert solution('3\\n2 2\\n1 1\\n2 0') == '1'\nassert solution('3\\n1 2\\n3 0') == '3'\nassert solution('2\\n2 2\\n1 1\\n2 0') == '2'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '2 1 3'\nassert solution('4') == '1 2 2 3'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '3 1 2 3'\nassert solution('1') == '1 1'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 3\\n2 1\\n2 1\\n\") == \"3 2 1 3\"\n\nassert solution(\"1\\n1\\n1\\n\") == \"1\"\n\nassert solution(\"4\\n0 3\\n1 1\\n2 1\\n2 0\\n\") == \"3 1 2 3\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '3 1 2 3'\nassert solution('3') == '1 2 3'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 1\n2 1\n2 0\n''') == '1 2 3 2'\n\nassert solution('''10\n1 1\n3 1\n2 1\n4 1\n5 1\n4 1\n6 1\n5 1\n4 1\n3 1\n2 1\n1 1\n''') == '1 2 3 2 4 5 6 5 4 3 2 1'\n\nassert solution('''100\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n8 1\n9 1\n10 1\n''') == '1 2 3 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 2\n1 1\n3\n''') == '3 1 2'\nassert solution('''\n2\n0 3\n1 1\n3\n''') == '3 1 2'\nassert solution('''\n10\n0 3\n1 1\n3 4\n1 2\n3 3\n4 1\n2 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n0 3\n1 1\n2 1\n2 0\nSample Input 2:\n9\n0 2\n1 1\n2 1\n2 0\nSample Output 2:\n3\n0 1 2''') == '3\\n0 1 2 2 3 1 1\\n'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 3\n1 1\n2 1\n2 0\n''') == '''1 2 3 2'''\nassert solution('''\n3\n0 1\n0 1\n1 0\n''') == '''0 1 2'''\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'none'"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\"\nassert solution(\"3\\n1 1 2\") == \"1\"\nassert solution(\"4\\n1 1 2 1\") == \"none\"\nassert solution(\"5\\n1 2 3 4 5\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('3\\n1 1 2') == 'none'\nassert solution('4\\n1 1 2 3') == 'none'\n\n\"\"\""
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1 2 1 3') == 'none'\nassert solution('3\\n1 2 3') == '1 2 3'\nassert solution('10\\n1 2 5 1 9 1 2 3 6 5 4') == '1 2 3'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"none\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2 1 2 1 3\") == \"1\""
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2 3\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"4\\n1 2 1 3\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"3\\n1 2 3\") == \"none\"\nassert solution(\"3\\n1 1 2\") == \"none\""
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"none\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 1 2\") == \"none\"\nassert solution(\"4\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3') == '1\\n2\\n3\\n'\nassert solution('3\\n1 1 2') == 'none'\nassert solution('4\\n1 1 2 1 3') == '1\\n2\\n3'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('3\\n1 1 2') == 'none'\nassert solution('4\\n1 1 2 3') == 'none'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n1\n1\n''') == '1'\n\nassert solution('''\n5\n2 1 0 1 2 3 3\n''') == '4'\n\nassert solution('''\n1\n2\n2\n2\n2\n2\n2\n''') == '5'\n\nassert solution('''\n6\n2 1 0 1 2 3 3\n''') == '5'\n\nassert solution('''\n11\n0 1 2 3 4 5 6 7 8 9 10\n''') == '10'"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 0 1 2 3 3') == '5'\nassert solution('1') == '1'\nassert solution('1 1 1 1') == '2'\nassert solution('1 1 2 2') == '4'\nassert solution('1 1 2 3') == '3'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\n\nstdin = \"\"\"8\n0 1 0 1 2 3 0\n\"\"\"\n\nassert solution(stdin) == \"3\"\n\nstdin = \"\"\"50\n
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\nassert solution('20') == '13'\nassert solution('7') == '6'\nassert solution('10') == '9'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 1 0 1 2 3 3') == '5'"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == ''\nassert solution('2 1 0 1 2 3 3') == '5'\nassert solution('4') == '10'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\n2 1 0 1 2 3 3\") == \"5\"\nassert solution(\"100\\n1 2 3\") == \"97\"\nassert solution(\"3\\n2 1\") == \"3\"\nassert solution(\"1\\n0\") == \"1\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 1 0 1 2 3\n''') == '6'\n\nassert solution('''\n6\n3 3 2 2 1 1\n''') == '8'\n\nassert solution('''\n6\n2 1 2 3 4 5\n''') == '7'\n\nassert solution('''\n8\n1 5 2 2 2 5 4 1\n''') == '5'\n\nassert solution('''\n10\n4 2 4 5 4 5 4 4 4 5\n''') == '9'"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '-1 -1 -1 -1 -1'\nassert solution('2 3') == '-1'\nassert solution('2 4') == '0 0'\nassert solution('5 5') == '0 0'\nassert solution('3 4') == '3 1 2'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"1 2 3 4 5\"\nassert solution(\"5 5\") == \"0 0 1 2 3 4\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '-1'\nassert solution('2\\n') == '-1 -1'\nassert solution('3\\n') == '-1 -1 -1 -1'\nassert solution('4\\n') == '-1 -1 -1 -1 -1'\nassert solution('5\\n') == '-1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"4 4 5 6 -1\"\nassert solution(\"5 5\") == \"4 5 0 1 -1\"\nassert solution(\"3 3\") == \"-1 -1 -1 -1 -1\"\n\nassert solution(\"5 4\") == \"4 4 5 6 -1\"\nassert solution(\"2 3\") == \"4 1 3 2 -1\""
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\nM\\n\") == \"-1\"\nassert solution(\"1 1\\n.\\n\") == \"1\"\nassert solution(\"2 3\\n.##\\n...#\\n##.\") == \"-1\"\nassert solution(\"5 6\\n#####\\n#...#\\n_###\\n_M.#\\n__.#\") == \"-1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '-1 4 5 6 -1'\nassert solution('3 3') == '-1 4 5 6 -1'\nassert solution('10 10') == '-1 4 5 6 -1'\nassert solution('4 5') == '-1 4 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"-1 -1 -1 -1 -1\"\nassert solution(\"4 2\") == \"-1 3 1 2 -1\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 4') == '6'\nassert solution('5 2 7 3') == '8'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"impossible\""
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\n\nprint(solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n'''))\n\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'Impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 7 1\n1 2 2\n1 3 3\n1 4 2\n2 3 1\n2 4 2\n3 4 1\n3 5 5''') == '5'\nassert solution('''5 8 1\n1 2 1\n1 3 2\n1 4 2\n2 3 1\n2 4 1\n3 4 1\n3 5 2\n3 6 3\n4 6 2\n5 6 3''') == '11'\nassert solution('''2 9 3\n1 2 2\n1 3 2\n1 4 2\n2 3 1\n2 4 1\n3 4 1\n3 5 1\n3 6 1\n4 5 2\n4 6 1\n5 6 1\n6 7 2''') == '10'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 6 1') == '6'\nassert solution('4 6 1') == 'impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\") == \"impossible\"\nassert solution(\"2 1 3\") == \"impossible\"\nassert solution(\"2 3\") == \"impossible\"\n\"\"\"\n\nimport sys\nfrom collections import deque\n\nclass Solution:\n    def solution(self, stdin):\n        pass\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\n\nprint(solution('''4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n'''))\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"6\"\nassert solution(\"4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\") == \"Impossible\""
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n3\n2\n3 1\n1 2\n0\n\n\"\"\") == \"8\"\n\nassert solution(\n    \"\"\"\n3\n3\n5 1\n1 4 1\n0\n\n\"\"\") == \"10\"\n\nassert solution(\n    \"\"\"\n5\n5\n4 1\n1 5 1\n0\n\n\"\"\") == \"10\"\n\nassert solution(\n    \"\"\"\n10\n10\n8 1\n4 2\n4 1\n1 8 1\n2 3 2\n1 6 2\n4 7 2\n1 8 1\n2 9 1\n1 7 1\n1 8 1\n3 4 3\n1 2 1\n4 6 3\n1 3 1\n1 8 2\n1 9 2\n3 6 2\n2 9 2\n2 7 2\n1 4 2\n4 5 2\n1 7 1\n1 8 2\n2 9 2\n2 8 2\n3 4 2\n2 9 2\n\n\"\"\") == \"20\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 6 1') == '6'\nassert solution('4 6 1') == 'impossible'\nassert solution('4 6 1') == 'impossible'\nassert solution('2 2 5') == '2'\nassert solution('2 2 5') == 'impossible'\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"3 4 2 2\") == \"10100\"\nassert solution(\"3 4 1 2\") == \"10100\"\nassert solution(\"3 4 3 2\") == \"10100\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('6 9 6 4 3') == '101010'\nassert solution('0 0 0 0 0') == '0'\nassert solution('0 0 0 0 1') == '1'\n\n'''"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'impossible'\nassert solution('0') == '0'\nassert solution('000') == '0'\nassert solution('00') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4 2 1''') == '01001'\nassert solution('''5 3 2 1''') == '01001'\n\n\"\"\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 1 2') == '00100'\nassert solution('5 2 1 3') == '00101'\nassert solution('10 2 1 3') == '01100'\nassert solution('1 1 1 1') == '00001'"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 2 1') == '01001'\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 2 1') == '01001'\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 2 1') == '01001'\nassert solution('3 4 2 1') == '10101'\nassert solution('100000 5 1 3') == '111011'\nassert solution('100000 1 1 3') == '1'"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"00\") == \"0\"\nassert solution(\"010\") == \"0\"\nassert solution(\"01\") == \"00\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'possible'\nassert solution('2 1') == 'impossible'\nassert solution('1 2') == 'impossible'\nassert solution('2 2') == 'possible'\nassert solution('2 3') == 'possible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'possible'\nassert solution(r\"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == 'possible'\nassert solution(r\"\"\"\n1 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == 'impossible'\nassert solution(r\"\"\"\n3 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == 'impossible'\nassert solution(r\"\"\"\n3 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == 'impossible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 6') == 'possible'\nassert solution('3 3 4') == 'impossible'\nassert solution('1 1') == 'impossible'\nassert solution('3 4') == 'impossible'\n'''\n\nimport collections"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\n'''\nSample Input:\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\nSample Output:\npossible\n< 1\n^ 2\n< 2\n^ 3\n< 3\n^ 4\n< 4\n^ 5\n< 5\n^ 6\n< 6\n^ 7\n< 7\n^ 8\n< 8\n^ 9\n< 9\n^ 10\n< 10\n^ 11\n< 11\n^ 12\n< 12\n^ 13\n< 13\n^ 14\n< 14\n^ 15\n< 15\n^ 16\n< 16\n^ 17\n< 17\n^ 18\n< 18\n^ 19\n< 19\n^ 20\n< 20\n^ 21\n< 21\n^ 22\n< 22\n^ 23\n< 23\n^ 24\n< 24\n^ 25\n< 25\n^ 26\n< 26\n^ 27\n< 27\n^ 28\n< 28\n^ 29\n< 29\n^ 30\n< 30\n^ 31\n< 31\n^ 32\n< 32\n^ 33\n< 33\n^ 34\n< 34\n^ 35\n< 35\n^ 36\n< 36\n^ 37\n< 37\n^ 38\n< 38\n^ 39\n< 39\n^ 40\n< 40\n^ 41\n< 41\n^ 42\n< 42\n^ 43\n< 43\n^ 44\n< 44\n^ 45\n< 45\n^ 46\n< 46\n^ 47\n< 47\n^ 48\n< 48\n^ 49\n< 49\n^ 50\n< 50\n^ 51\n< 51\n^ 52\n< 52\n^ 53\n< 53\n^ 54\n< 54\n^ 55\n< 55\n^ 56\n< 56\n^ 57\n< 57\n^ 58\n< 58\n^ 59\n< 59\n^ 60\n< 60\n^ 61\n< 61\n^ 62\n< 62\n^ 63\n< 63\n^ 64\n< 64\n^ 65\n< 65\n^ 66\n< 66\n^ 67\n< 67\n^ 68\n< 68\n^ 69\n< 69\n^ 70\n< 70\n^ 71\n< 71\n^ 72\n< 72\n^ 73\n< 73\n^ 74\n< 74\n^ 75\n< 75\n^ 76\n< 76\n^ 77\n< 77\n^ 78\n< 78\n^ 79\n< 79\n^ 80\n< 80\n^ 81\n< 81\n^ 82\n< 82\n^ 83\n< 83\n^ 84\n< 84\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\\n< 1\\n^ 2\\n< 2\\n^ 3\\n< 3\\n\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n3 5\\n\") == \"impossible\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"impossible\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n\") == \"possible\"\nassert solution(\"5 5 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4\\n5 5\\n\") == \"impossible\"\n\"\"\"\nimport itertools"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('3 4 6') == 'impossible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 6') == \"possible\"\nassert solution('5 5 3') == \"impossible\"\nassert solution('3 4 3') == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == \"possible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 6') == 'possible'\nassert solution('1 1') == 'impossible'\nassert solution('3 3') == 'impossible'\nassert solution('10 10') == 'impossible'\nassert solution('5 5') == 'impossible'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n''') == '2.0'\nprint(solution('''\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n'''))\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2.0\"\nprint(solution())\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2.0\"\nassert solution(\"3\") == \"3.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3.0\""
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n10\n1 2 3\n1 2 3\n3 4 5\n3 4 5\n4 6 7\n4 6 7\n5 7 8\n5 7 8\n6 9 10\n6 9 10\n7 11 12\n7 11 12\n8 13 14\n8 13 14\n9 15 16\n9 15 16\n10 17 18\n10 17 18\n\"\"\") == \"10.0\"\nassert solution(\"\"\"\n100\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n\"\"\") == \"0.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '3.904761904761905'\nassert solution([0, 0, 1,\n                  0, 1, 1,\n                  2, 0, 3,\n                  2, 1, 3]) == '7.142857142857143'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n''') == '2.0'\n\nassert solution('''\n3\n0 0 1\n1 0 1\n2 0 1\n0 1 0\n''') == '3.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n0 1 1\\n0 2 3\\n2 0 3\") == \"1.0\"\nassert solution(\"3\\n1 0 1\\n0 2 3\\n2 1 3\") == \"1.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'infinity'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2''') == '4'\nassert solution('''5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n1 2 4 3 6 5 7''') == '1'\nassert solution('''3 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n1 2 4 3 6 5 7''') == '1'\nassert solution('''3 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n1 2 4 3 6 5 7''') == '1'\nassert solution('''5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n1 2 4 3 6 5 7\n5 6 7 1 4 3 2 1''') == '1'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n') == '4'\nprint('Everything is fine')"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\n\nassert solution(\n'''\n10\n2 4 7 9 5 3 1 6 8 5\n9 1 6 3 4 8 5 2 7 5\n5 6 7 8 5 9 4 3 2 1\n''') == '2'\n'''\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4'\nprint(solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2'))\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4'\nassert solution('10\\n10 10 10 10 10 10 10\\n9 9 9 9 9 9 9\\n8 8 8 8 8 8 8\\n7 7 7 7 7 7 7\\n6 6 6 6 6 6 6\\n5 5 5 5 5 5 5\\n4 4 4 4 4 4 4\\n3 3 3 3 3 3 3\\n2 2 2 2 2 2 2\\n1 1 1 1 1 1 1') == '8'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6 7\") == \"4\", 'Test 1 Failed'\nassert solution(\"3 4 2 5 1 6 7\") == \"3\", 'Test 2 Failed'\nassert solution(\"7 5 4 3 2 1 6 7\") == \"4\", 'Test 3 Failed'"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('7') == '3'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4 3 2 1 6 7\") == \"4\"\nassert solution(\"5 5 1 1 3 4 7\") == \"3\"\nassert solution(\"3 7 1 4 5 6 2\") == \"4\""
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4 3 2 1 6 7') == '4'\nassert solution('5\\n5 5 1 1 3 4 7') == '4'\nassert solution('3\\n7 1 4 5 6 2') == '3'"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '4'\nassert solution('5') == '3'\nassert solution('8') == '6'"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\""
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('6') == '4'\n\"\"\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n-10 0\n-10 10\n''') == '2'\nassert solution('''\n5\n-100 0\n0 -100\n''') == '1'\nassert solution('''\n10\n-100 0\n0 -100\n''') == '5'\nassert solution('''\n12\n-100 0\n-100 -100\n''') == '6'\n\n''') == '2'\n\nprint(solution('''\n4\n-10 0\n-10 10\n'''))"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('-1') == '1'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n-10 0\n-10 10''') == '2'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n-10 0\n-10 10\n''') == '2'\nassert solution('''\n-100000 0\n-100000 10\n''') == '0'\n''')\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '3'\nassert solution('10') == '6'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n-10 0\n-10 10\n''') == '2'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'\nassert solution(f'1 2') == '2'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n\nassert solution('1 5') == '0'\n\nassert solution('100 200') == '1'\n\nassert solution('100 200 2') == '1'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 5\n''') == '0'\nassert solution('''2 1\n''') == '1'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5') == '0'\nassert solution('2 10') == '1'\nassert solution('3 6') == '3'\nassert solution('4 8') == '2'\nassert solution('5 9') == '2'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"3 5\") == \"6\"\nassert solution(\"4 10\") == \"34\"\nassert solution(\"4 20\") == \"1044\"\nassert solution(\"100 100\") == \"100\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == '0'\nassert solution('2 5') == '4'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('1 10') == '10'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 5\n''') == '0'\nassert solution('''\n2 3\n''') == '2'\nassert solution('''\n0 4\n''') == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '0'\nassert solution('2 5') == '1'\nassert solution('3 5') == '2'\nassert solution('4 5') == '3'\nassert solution('5 5') == '4'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0 0\\n1 1\\n'\n\"\"\"\n\nfrom math import floor"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0 0\\n1 1\"\n\nassert solution(\"\"\"\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0 0\\n1 1\\n1 2\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '0 0\\n1 1\\n'''\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1''') == '0 0\\n1 1\\n'''\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '0 0'\nassert solution('1 0') == '1 1'\nassert solution('0 1') == '0 0'\nassert solution('3 3') == '0 0'\nassert solution('1 0 0 0 0 1') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\n\nassert solution(\"2 2\\n1 1\\n0 0\\n1 1\\n0 0\\n0 1\") == \"1 1\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '0 0\\n1 1\\n'\nassert solution('4 2') == '1 2\\n2 2\\n2 1\\n3 1\\n'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0 0'\n\n\"\"\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5 0.950000\n0.700000 50''') == '44.975'\nassert solution('''2 10 1.0\n0.700000 50''') == '44.8133333333333333333'\nassert solution('''2 10 1.0\n0.700000 50''') == '44.8133333333333333333'\nassert solution('''1 1 1.0\n0.700000 50''') == '500.000000'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == \"44.975\"\nassert solution('1 1 0.950000\\n0.700000 50') == \"50.0\""
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 2, 0.950000]) == \"44.975\"\nassert solution([0.700000, 50]) == \"47.3498\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == \"44.975\"\nassert solution('2 3 1\\n1 2 3\\n2 3 4') == \"17.0\""
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 2, 0.950000]) == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2 0.950000\n0.700000 50\n''') == '44.975'\n'''\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 0.950000\n0.700000 50\n''') == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\nprint(solution(*map(float, stdin.strip().split())))\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 0.950000\n0.700000 50\n''') == '44.975'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 3') == 'IMPOSSIBLE', \"Not possible\"\nassert solution('1 1') == 'IMPOSSIBLE', \"Not possible\"\nassert solution('5 2') == '2', \"Slowest\"\nassert solution('1 3') == '3', \"Fastest\"\nassert solution('3') == 'IMPOSSIBLE', \"Not possible\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('3 5 5') == '10'\nassert solution('6 3 3') == 'IMPOSSIBLE'\n'''\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\") == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n5\\n1 3\\n3\\n') == '2'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 3\") == \"2\"\nassert solution(\"3\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('5 2') == '3'\nassert solution('1 3') == 'IMPOSSIBLE'\nassert solution('3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3') == 'IMPOSSIBLE'\nassert solution('3 2 3') == '2'"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    3 2 3\n    1 1\n    5 2\n    1 3\n    3\n    3\n    2\n    1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '0.0 6.0'\nassert solution('5 1') == '0.0 3.0'\nassert solution('10 5') == '0.5 3.5'\nassert solution('10 10') == '0.5 0.5'\n\n\"\"\"\n\nclass Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n    def __repr__(self):\n        return f\"Point({self.x}, {self.y})\"\n    def __eq__(self, other):\n        return self.x == other.x and self.y == other.y\n    def __hash__(self):\n        return hash((self.x, self.y))"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('5 5') == '12.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\"\n) == \"4.0\"\nassert solution(\n    \"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n-4.0 4.0\\n10.0 4.0\\n4.0 10.0\"\n) == \"8.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\n0.0 0.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n') == '4.0'\nprint(solution('''3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0\n'''))\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '0.375'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0') == '4.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == '1.0'\n\"\"\"\nfrom math import sqrt, acos\nfrom typing import List\nimport re\nfrom collections import namedtuple\n\nTree = namedtuple(\"Tree\", \"x y\")\nAsp = namedtuple(\"Asp\", \"x y\")\n\nclass Edge:\n    def __init__(self, x1: float, y1: float, x2: float, y2: float):\n        self.x1, self.y1 = x1, y1\n        self.x2, self.y2 = x2, y2\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '2.0'\nassert solution('5 4') == '3.0'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"18000\"\nassert solution(\"\"\"\n2\n10\n20\n\"\"\") == \"10000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n220 30\n195 20\n180 30\n''') == '18000'\n\nassert solution('''\n5\n300 280 500 944 89\n400 296 696 624 789\n340 85 180 774 393 912\n225 340 897 695 915\n323 392 996 574 788\n''') == '66000'\n\nassert solution('''\n7\n300 280 500 944 89\n400 296 696 624 789\n340 85 180 774 393 912\n225 340 897 695 915\n323 392 996 574 788\n180 200 200 200 200\n300 300 300 300 300\n''') == '90000'"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"5\\n18 3\\n7 2\\n16 6\\n19 1\") == \"93\"\n\"\"\""
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n220 20\n195 20\n200 9\n180 30\n120 10\n\"\"\") == \"7800\"\nprint(solution(\"\"\"\n4\n220 29\n195 20\n200 9\n180 30\n\"\"\"))\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1000'\nassert solution('2') == '10000'\nassert solution('3') == '1000000'\nassert solution('4') == '180000'\nassert solution('5') == '1800000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n220 30\n195 20\n200 9\n180 30\n170 29\n180 29\n''') == '18000'\nassert solution('''\n1\n10\n''') == '10000'\n\nassert solution('''\n2\n10\n''') == '2000'\n\nassert solution('''\n5\n2\n4\n5\n3\n''') == '2000'\n\nassert solution('''\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n''') == '4000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\n\nassert solution('''\n5\n10 10\n5 5\n5 5\n5 5\n5 5\n''') == '25000'\n\nassert solution('''\n3\n100 10\n150 20\n200 30\n''') == '10000'\n\nassert solution('''\n3\n50 10\n150 20\n100 30\n''') == '18000'"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n220 29\\n195 20\\n200 9\\n180 30\\n') == '18000'\nassert solution('2\\n375 22\\n381 18\\n205 27\\n300 23\\n') == '38000'\nassert solution('3\\n530 20\\n420 10\\n435 12\\n') == '43600'\nassert solution('4\\n22 12\\n17 17\\n12 18\\n') == '1800000'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BUYSTICKERS') == \"28\"\nassert solution('STICKY') == \"Impossible\"\nassert solution('ERS') == \"Impossible\"\nassert solution('BUYER') == \"Impossible\"\nassert solution('TICKERS') == \"28\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nBUYER\n10\nSTICKY\nERS\n8\nTICKERS\n''') == '28', 'Should be 28'\n\nassert solution('''\nSTICKY\n10\nBUYER\nERS\n8\nTICKERS\n''') == 'IMPOSSIBLE', 'Should be IMPOSSIBLE'\n\nassert solution('''\nERS\n8\nBUYER\nTICKERS\n''') == '28', 'Should be 28'\n\nassert solution('''\nBUYER\n10\nERS\n8\nTICKERS\n''') == '28', 'Should be 28'\n\nassert solution('''\nSTICKY\n10\nERS\n8\nTICKERS\n''') == '28', 'Should be 28'"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\nassert solution('''CATCAT\n2\nCAT\nBOUBA\nABABA\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('BUYSTICKERS') == '28'\nassert solution('TICKERS') == 'IMPOSSIBLE'\nassert solution('STICKY') == 'IMPOSSIBLE'\nassert solution('ERS') == '28'\nassert solution('BUYER') == '28'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\nassert solution('''BUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == 'IMPOSSIBLE'\nassert solution('''BUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYSTICKERS\n4\nBUYER 10\nTICKERS 2\nERS 8''') == '28'\nassert solution('''BUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYSTICKERS\n4\nBUYER 10\nTICKERS 2\nERS 8''') == 'IMPOSSIBLE'\nassert solution('''BUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\nBUYSTICKERS\n4\nBUYER 10\nTICKERS 2\nERS 8\nBUYSTICKERS\n4\nBUYER 10\nTICKERS 2\nERS 8''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == \"28\"\n\nassert solution(\"A TICKERS STICKER SAVES SAVES FOO BAR BAR BAR BAR BAZ ALALALA\\n5\\nA 3\\nB 3\\nC 3\\nD 5\\nE 5\\nF 5\\nG 4\\nH 5\\nI 5\\nJ 5\\nK 5\\nL 5\\nM 5\\nN 5\\nO 5\\nP 5\\nQ 5\\nR 5\\nS 5\\nT 5\\nU 5\\nV 5\\nW 5\\nX 5\\nY 5\\nZ 5\\n\\n4\\nA 6\\nB 6\\nC 6\\nD 6\\nE 6\\nF 6\\nG 6\\nH 6\\nI 6\\nJ 6\\nK 6\\nL 6\\nM 6\\nN 6\\nO 6\\nP 6\\nQ 6\\nR 6\\nS 6\\nT 6\\nU 6\\nV 6\\nW 6\\nX 6\\nY 6\\nZ 6\\n\\n4\\nA 1\\nB 6\\nC 2\\nD 6\\nE 2\\nF 2\\nG 2\\nH 2\\nI 2\\nJ 2\\nK 2\\nL 2\\nM 2\\nN 2\\nO 2\\nP 2\\nQ 2\\nR 2\\nS 2\\nT 2\\nU 2\\nV 2\\nW 2\\nX 2\\nY 2\\nZ 2\\n\\n4\\nA 1\\nB 1\\nC 1\\nD 1\\nE 1\\nF 1\\nG 1\\nH 1\\nI 1\\nJ 1\\nK 1\\nL 1\\nM 1\\nN 1\\nO 1\\nP 1\\nQ 1\\nR 1\\nS 1\\nT 1\\nU 1\\nV 1\\nW 1\\nX 1\\nY 1\\nZ 1\\n\") == \"28\"\n\nassert solution(\"BUYSTICKERS\\n5\\nBUYER 4\\nSTICKY 1\\nTICKERS 2\\nERS 8\\nSample Output:\nIMPOSSIBLE\\n\") == \"IMPOSSIBLE\"\n\"\"\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('BUYSTICKERS') == '28'\nassert solution('TICKERS') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nBUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\n''') == '28', 'Should print 28'\nassert solution('''\nBUYSTICKERS\n4\nBUYER 1\nSTICKY 10\nTICKERS 1\nERS 10\n''') == 'IMPOSSIBLE', 'Should print IMPOSSIBLE'\n'''\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 7') == 'INDV 2\\nINDV 3\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 5\\n'\nassert solution('6 7 4') == 'CORP 1\\nCORP 2\\nCORP 3\\nINDV 1\\nINDV 2\\nINDV 3\\nINDV 4\\nINDV 5\\n'\nassert solution('1 2 7') == 'CORP 2\\nINDV 2\\nCORP 3\\nINDV 3\\nCORP 1\\nINDV 1\\n'\nassert solution('5 8 10') == 'CORP 2\\nCORP 3\\nINDV 5\\nCORP 1\\nCORP 4\\nINDV 4\\nCORP 5\\nINDV 3\\nCORP 6\\nINDV 2\\nCORP 7\\nINDV 1\\nCORP 8\\nINDV 4\\n'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3''') == 'CORP 1\\nINDV 1\\nCORP 1\\nCORP 2\\nINDV 2\\nINDV 1\\nCORP 3\\nCORP 3\\nINDV 4\\nINDV 3\\nCORP 1'''\nassert solution('''5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3''') == 'CORP 1\\nCORP 2\\nCORP 1\\nINDV 2\\nINDV 3\\nCORP 3\\nCORP 2\\nCORP 2\\nINDV 3\\nINDV 1\\nCORP 1'''\nassert solution('''5 3 8\n3 3\n3 3\n3 3\n3 3\n5 3\n3 3\n3 3\n3 3\n5 3''') == 'CORP 3\\nCORP 2\\nCORP 2\\nCORP 2\\nCORP 2\\nCORP 1\\nCORP 1\\nCORP 1\\nCORP 1\\nINDV 2\\nINDV 2\\nINDV 2\\nINDV 2\\nINDV 3\\nINDV 3\\nINDV 3\\nINDV 3\\nINDV 3'''\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 8') == 'INDV 1'\nassert solution('1 1') == 'INDV 1'\nassert solution('2 1') == 'INDV 1'\nassert solution('3 1') == 'INDV 1'\nassert solution('4 2') == 'CORP 1'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 8') == 'INDV 4'\nassert solution('5 1 1') == 'INDV 1'\n\"\"\"\nimport sys\n\ninput = lambda: sys.stdin.readline().rstrip()\n\nR, S, L = map(int, input().split())\n\nindiv_win = []\ncorp_win = []\n\nfor i in range(R):\n    indiv_win.append(1)\n\nfor i in range(S):\n    corp_win.append(1)\n\nfor i in range(L):\n    a, b = map(int, input().split())\n    if a < b:\n        indiv_win[a - 1] = 2\n        corp_win[b - 1] = 2\n    else:\n        indiv_win[a - 1] = 2\n        corp_win[b - 1] = 2\n\nindiv_win = sorted(indiv_win)\ncorp_win = sorted(corp_win)\n\nindiv_index = 1\ncorp_index = 1\n\nfor i in range(L):\n    if indiv_win[i] == indiv_index:\n        indiv_index += 1\n    if corp_win[i] == corp_index:\n        corp_index += 1\n    if indiv_index == corp_index:\n        print(indiv_win[i], end='')\n        indiv_index += 1\n        corp_index += 1\n\n\"\"\"\nR = 5\nS = 3\nL = 8\n\nINDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == 'INDV 2'\nassert solution('3 1') == 'INDV 3'\nassert solution('4 2') == 'INDV 4'\nassert solution('5 2') == 'CORP 1'\nassert solution('3 3') == 'CORP 3'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5'\nassert solution('6 6 3\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3\\n2 2\\n3 3\\n4 3\\n5 3\\n3 3\\n4 3\\n5 3') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 5\\nCORP 3\\nINDV 3\\nCORP 3\\nINDV 3'\nassert solution('6 2 4\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3') == 'CORP 1\\nCORP 2\\nINDV 3'\nassert solution('0 0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 'INDV 1'\nassert solution('0 2 1\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == 'CORP 1'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2') == 'INDV 1'\nassert solution('5 5 4') == 'INDV 3'\nassert solution('5 5 4') == 'CORP 5'\nassert solution('5 5 4') == 'INDV 4'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n\"\"\") == \"\"\"INDV 1\nINDV 2\nCORP 1\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\"\"\".strip()\n\nassert solution(\"\"\"\n3 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n\"\"\") == \"\"\"INDV 1\nINDV 2\nINDV 3\"\"\".strip()\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\") == \"INDV 2\\nINDV 2\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 3\\nCORP 3\"\nassert solution(\"5 3 1\") == \"INDV 1\"\nassert solution(\"1 1\") == \"INDV 1\"\nassert solution(\"2 1\") == \"INDV 1\"\nassert solution(\"3 1\") == \"INDV 1\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 8') == 'INDV 2'\nassert solution('2 3') == 'INDV 2'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\") == \"2.4142135624\"\nassert solution(\"\"\"\n3\n2 2\n1\n2\n3\n1\n\"\"\") == \"2.236067977\"\nassert solution(\"\"\"\n7\n3 1\n5\n5 6\n6\n3\n2\n7\n1\n\"\"\") == \"5.13743855\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2.5'\nassert solution('10') == '2.9'\nassert solution('1') == '2.0'\nassert solution('10 10') == '2.5'\nassert solution('5 10') == '2.5'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 1\\n2 3\\n3 4\\n') == '1.0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n10 1\n1\n0\n10\n10''') == '2.4142135624'\nassert solution('''100\n7 6\n3\n0\n4\n5\n2\n0''') == '1.4142135624'\nassert solution('''10\n100\n99\n97\n98\n100\n97\n100\n98\n97\n100\n100\n100\n100\n100''') == '0.0000000000'\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n10 1\\n1\\n0\\n10\\n10\\n') == '2.4142135624'\nassert solution('4\\n20 1\\n1\\n0\\n20\\n20\\n') == '10.0000'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n10 1\\n0\\n10\\n10') == '2.4142135624'\nassert solution('3\\n9 1\\n9 1\\n10') == '0.0'\nassert solution('3\\n9 1\\n10 1\\n10') == '1.4142135624'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1.4142135624'\nassert solution('10') == '8.5'\nassert solution('9') == '8.5'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n6\n10 1\n1\n0\n10\n10\n1\n''') == '3.1622776601'\nassert solution('''\n10\n10 1\n1\n0\n10\n10\n1\n1\n1\n''') == '5.0'\nassert solution('''\n12\n10 1\n1\n0\n10\n10\n1\n0\n0\n0\n1\n''') == '5.2'\nassert solution('''\n12\n20 1\n1\n0\n20\n20\n1\n0\n0\n0\n1\n''') == '10.2'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\") == \"2.4142135624\"\nassert solution(\"8\\n10 1\\n1\\n0\\n10\\n20\\n10\\n20\") == \"7.777777777777\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n\") == \"15\"\nassert solution(\"4\\n1 2 4\\n2 1\\n3 2\\n4 1\\n1 3\\n\") == \"11\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\nassert solution(\n\"\"\"\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\nassert solution(\n\"\"\"\n3\n2 1\n1 2\n1 1\n\"\"\") == \"15\"\nassert solution(\n\"\"\"\n5\n0 0\n1 2\n3 4\n3 5\n4 5\n\"\"\") == \"30\"\nassert solution(\n\"\"\"\n4\n1 0\n2 2\n3 3\n4 1\n\"\"\") == \"15\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2 5\") == \"7\"\nassert solution(\"3 1 5\") == \"5\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n    ''') == '15'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n2\n1 2\n1 1\n''') == '4'\nassert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\n'''\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '3\\n'\n    '1 2 5\\n'\n    '3 1 5\\n'\n    '2 1\\n'\n    '5 0\\n'\n    '1 3\\n'\n) == '15\\n', 'First'\n\nassert solution(\n    '2\\n'\n    '1 2\\n'\n    '2 1\\n'\n) == '-1\\n', 'Second'\n\nassert solution(\n    '3\\n'\n    '1 2 5\\n'\n    '3 1 5\\n'\n    '2 1\\n'\n    '5 0\\n'\n    '1 3\\n'\n) == '15\\n', 'Third'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n5 2\n3 1\n2 1\n2 3\n3 1\n''') == '20'\nassert solution('''\n8\n1 2 2\n3 1 2\n2 3 1\n4 1 3\n2 4 1\n4 5 2\n2 5 1\n3 5 1\n''') == '16'\nassert solution('''\n2\n0 2\n1 2\n''') == '0'\nassert solution('''\n5\n1 2\n3 1\n2 3\n2 4\n2 5\n3 4\n4 5\n5 5\n''') == '14'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2 5\\n3 1 5\\n2 1') == '15'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 5') == \"15\"\nassert solution('3 1 5') == \"15\"\nassert solution('2 1') == \"10\"\nassert solution('5 0') == \"10\"\nassert solution('1 3') == \"10\""
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 5') == '15'\nassert solution('3 1 5') == '5'\nassert solution('2 1') == '2'\nassert solution('5 0') == '10'\nassert solution('1 3') == '3'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 5, 3, 4]) == \"...ABCD\\n...C.D\\n....DC\\n....D.\\n...\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1\") == \"..ABCD@..\"\nassert solution(\"2 2 2 2\") == \"..ABBC@..\"\nassert solution(\"3 3 3 3\") == \"....BCDDD@\"\nassert solution(\"4 4 4 4\") == \"ABABABABABABABAB@\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5 3 3 4\n''') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n'\nassert solution('''\n5 5 3 3 4\n5 4 3 2 3\n''') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n.B..C\\n.A.C\\nB.B.C\\n.C.C\\nC.C\\nC.C\\n@DDDD\\n'\nassert solution('''\n5 5 3 3 4\n5 4 2 1 3\n''') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n.B..C\\n.A.C\\nB.B.C\\n.C.C\\nC.C\\nC.C\\n@DDDD\\n'\n\n''') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n.B..C\\n.A.C\\nB.B.C\\n.C.C\\nC.C\\nC.C\\n@DDDD\\n'\nassert solution('''\n5 5 3 3 4\n5 4 2 1 3\n3 4 3 1 3\n''') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n.B..C\\n.A.C\\nB.B.C\\n.C.C\\nC.C\\nC.C\\n@DDDD\\n'\nassert solution('''\n5 5 3 3 4\n5 4 2 1 3\n5 3 2 1 3\n''') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n.B..C\\n.A.C\\nB.B.C\\n.C.C\\nC.C\\nC.C\\n@DDDD\\n'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\"\n\nSample Input:\n3 1 3 2\nSample Output:\n.a.\n@.c.\nA.A."
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5 3 3 4') == '@BC.C'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5 3 3 4\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\"\n\"\"\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 3 3 4\") == \"....C\"\n\"\"\"\n\nr, c, i, j, n = list(map(int, stdin.strip().split()))"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5 3 3 4''') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD'\nassert solution('''5 5 2 2 4''') == '.....\\n..BB\\n.AC\\n....C\\n@DDDD'\nassert solution('''5 5 0 0 4''') == '.....\\n.....\\n.....\\n....C\\n@DDDD'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2 2 5\n3 4 5\n''') == '..ABC.'\nassert solution('''\n4 3 3 4\n3 4 5\n''') == '@DDDD'\nassert solution('''\n4 3 4 5\n5 3 2\n''') == '@DDDD'\nassert solution('''\n4 3 4 5\n5 3 2\n''') == '@DDDD'\nassert solution('''\n5 5 1 3\n5 2 3\n''') == '@DDDD'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 3 3 4') == '......\\n.....A.\\n....A..\\n...A...\\n.D.D.D'\nassert solution('1 1 1 1 1') == 'A.A.A'\nassert solution('1 1 1 1 1 1 1 1 1') == 'A.A.A.A.A'\nassert solution('1 1 2 2 4 4') == '......\\n.......\\n...###'\nassert solution('5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"001\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"001\"\nassert solution(\"10 2\") == \"002\"\nassert solution(\"15 4\") == \"004\"\nassert solution(\"20 8\") == \"008\"\nassert solution(\"25 7\") == \"007\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '001'\nassert solution('6 3') == '100'\nassert solution('11 3') == '000'\nassert solution('1 3') == '000'\nassert solution('2 3') == '000'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"001\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n1 1\\n2 2\\n1 1\\n1 1\\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '001'\nassert solution('1 4') == '100'\nassert solution('2 4') == '010'\nassert solution('3 4') == '001'\nassert solution('4 4') == '001'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n111\n001\n000\n111\n000\nSample Input:\n5 3\n111\n001\n000\n111\n000\nSample Output:\n001\n001\n111\n111\n200\n''') == '00101111'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '001'\nassert solution('1000000000 3') == '0123456789'\n\n'''"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '001'"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n111\\n001\\n111\\n000') == '001\\n001\\n001\\n111\\n200\\n'\nassert solution('5 3\\n001\\n001\\n001\\n111\\n200\\n') == '001\\n001\\n001\\n111\\n200\\n'\nassert solution('5 3\\n001\\n001\\n001\\n111\\n200\\n') == '001\\n001\\n001\\n111\\n200\\n'\nassert solution('5 3\\n000\\n001\\n001\\n111\\n200\\n') == '001\\n001\\n001\\n111\\n200\\n'\nassert solution('5 3\\n000\\n001\\n001\\n111\\n200\\n') == '001\\n001\\n001\\n111\\n200\\n'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('19/13') == '19 20'\nassert solution('10/1') == '10 20'\nassert solution('19/14') == '19 20'\nassert solution('4/3') == '4 6 5 4 3 3'\nassert solution('20/7') == '20 22 7'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('19/13') == '19 20'\nassert solution('10/1') == '10 20'\nassert solution('19/14') == '19 14'\nassert solution('4/3') == '4 3'\nassert solution('20/7') == '20 7'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17\n''') == '15 14 13 7 2 17'\nassert solution('''0/1\n0/2\n1/2\n2/3\n''') == '0 0 0 0'\nassert solution('''20/5\n20/4\n20/3\n20/2\n''') == '0 0 0 0'\nassert solution('''4/3\n5/4\n5/5\n6/7\n''') == '0 0 0 0 0'\n''')\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('19/13\\n10/1') == '19 20'\nassert solution('19/14\\n4/3') == '10 15 14 13 7 2'\nassert solution('19/15\\n20/7') == '17 15 14 13 7 2'\nassert solution('19/2\\n19/17') == '19 20'\nassert solution('4/3\\n20/7') == '17 15 14 13 7 2'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '19/13'\n) == '19 20'\n\nassert solution(\n    '10/1'\n) == '10 20'\n\nassert solution(\n    '19/14'\n) == '19 20'\n\nassert solution(\n    '4/3'\n) == '4 7 9'\n\nassert solution(\n    '20/7'\n) == '20 15 17'"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"19/13\") == \"19 20\"\nassert solution(\"10/1\") == \"10\"\nassert solution(\"19/14\") == \"19 20\"\nassert solution(\"4/3\") == \"4 6 3\"\nassert solution(\"20/7\") == \"20 7\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"19/13\\n10/1\\n\") == \"19 20\"\nassert solution(\"19/14\\n4/3\\n20/7\\n\") == \"19 20\"\nassert solution(\"4/3\\n20/7\\n19/13\\n10/1\\n\") == \"20 19\"\nassert solution(\"19/2\\n19/17\\n\") == \"impossible\"\nassert solution(\"10/7\\n20/13\\n19/15\\n10/1\\n\") == \"20 15 14 13 7 2\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"19/13\") == \"19 20\"\nassert solution(\"10/1\") == \"10 20\"\nassert solution(\"19/14\") == \"13 14\"\nassert solution(\"4/3\") == \"4 7 3\"\nassert solution(\"20/7\") == \"7 20\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\") == \"19 20\"\n\n\"\"\"\nimport math\nimport sys"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"19/13\n10/1\"\"\") == \"10 20\"\nassert solution(\"\"\"19/14\n10/1\"\"\") == \"10 20\"\nassert solution(\"\"\"19/15\n10/1\"\"\") == \"10 20\"\nassert solution(\"\"\"19/16\n10/1\"\"\") == \"10 20\"\nassert solution(\"\"\"19/17\n10/1\"\"\") == \"10 20\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == \"impossible\"\nassert solution('2') == \"possible\"\n\"\"\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == 'possible'\nassert solution('3 3') == 'impossible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3''') == 'possible'\n\nassert solution('''5 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\nSample Output:\nimpossible''') == 'impossible'\n\nassert solution('''5 1\n0 0\n0 1\n1 0\n1 1 3\n2 0 2\nSample Output:\npossible''') == 'possible'"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'impossible'\nassert solution('''1\n0 0\n0 2\n1 2 3\n2 2 2\n3 0 3\n''') == 'possible'\nassert solution('''0\n0 0\n0 2\n1 2 3\n2 2 2\n3 0 3\n''') == 'impossible'\n'''\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"possible\"\nassert solution(\"\"\"\n3 3\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"impossible\"\n\"\"\""
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'possible'\nassert solution('1 1') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 0') == 'impossible'\nassert solution('0 3') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'impossible'\nassert solution('3 1\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'impossible'\nassert solution('1 1') == 'possible'\n'''\n\nfrom collections import defaultdict\nfrom collections import deque\nimport unittest\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == \"possible\"\nassert solution('1 2 3') == \"impossible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"1 1\\n-10000 -10000\\n-10000 -10000\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1\n2\n3\n1\n2\n''') == '4'\nassert solution('''\n1\n2\n3\n''') == '2'\n\nSample Input:\n1\n5\n5\nSample Output:\n4\n'''"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"3\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"4\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"2 2 3\") == \"1\"\n\nn, m = map(int, input().split())\na = int(input())"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n2\n3\n2\n2\n\"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n5\n2\n3\n2\n2\n\"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n5\n3\n2\n3\n3\n\"\"\"\n) == \"6\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n4 2\n2\n2\n4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n2\n2\n''') == '4'\nassert solution('''\n4 2\n2\n1\n''') == '2'\nassert solution('''\n4 2\n2\n1\n''') == '1'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n2\n2\n2\n2''') == '4'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 2]) == \"4\"\nassert solution([1, 2]) == \"2\"\nassert solution([1, 3]) == \"3\"\nassert solution([5, 2]) == \"3\"\nassert solution([5, 1]) == \"5\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == \"Mirko\", \"4\"\nassert solution('1') == \"Slavko\", \"1\"\nassert solution('2') == \"Slavko\", \"2\"\nassert solution('3') == \"Slavko\", \"3\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 2\\n1 3\") == \"Mirko\"\nassert solution(\"3\\n1 2\\n1 3\") == \"Slavko\"\nassert solution(\"1 1\\n1 2\\n1 3\") == \"Slavko\"\nassert solution(\"4\\n1 2\\n1 3\\n1 4\") == \"Slavko\"\nassert solution(\"3\\n1 2\\n1 2\") == \"Slavko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Mirko\"\nassert solution(\"2\") == \"Slavko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3\n''') == 'Mirko', 'wrong answer'\nassert solution('''10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == 'Slavko', 'wrong answer'\n\n'''\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\n1 1\\n1 2\\n1 3\\n\"\n) == \"Mirko\"\nassert solution(\n    \"5\\n2 3\\n1 3\\n5 3\\n5 3\\n\"\n) == \"Slavko\"\nassert solution(\n    \"4\\n2 3\\n3 2\\n3 2\\n\"\n) == \"Slavko\"\nassert solution(\n    \"5\\n2 3\\n3 2\\n4 2\\n5 3\\n\"\n) == \"Slavko\"\nassert solution(\n    \"4\\n2 3\\n3 2\\n3 2\\n\"\n) == \"Mirko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Mirko\"\nassert solution() == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Slavko'\nassert solution('1 1') == 'Mirko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == 'Slavko'\nassert solution('5\\n2 2\\n1 1\\n1 3\\n1 2\\n2 2') == 'Slavko'\nassert solution('5\\n1 2\\n3 4\\n2 3\\n4 5\\n5 4') == 'Slavko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Mirko'\nassert solution('5') == 'Slavko'\nassert solution('10') == 'Slavko'\nassert solution('12') == 'Mirko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Slavko'\nassert solution('4') == 'Mirko'\nassert solution('5') == 'Slavko'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n6\\n34\\n38') == '2 4'\nassert solution('5\\n2\\n4\\n5\\n7') == '2 4 5 7'\nassert solution('1000000000\\n1000000000\\n1000000000\\n1000000000') == '1000000000'\nassert solution('7\\n10000000\\n99999999\\n99999999') == '99999999'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2 4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n6\n34\n38\n\"\"\") == \"2 4\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1\\n10\\n100\\n1000\\n10000\\n100000\\n1000000') == '2 4'\nprint('Tests finished')\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2 4'"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2 4'\nassert solution('3') == '2 4'\nassert solution('34') == '4 6'\nassert solution('38') == '4 6'\n'''\nfrom itertools import combinations\nimport math"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == ''\nassert solution('2') == '2'\nassert solution('4') == '2 4'\nassert solution('5') == '2 4'\nassert solution('6') == '2 4'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 4\"\nassert solution(\"4\") == \"2 4 6 8\"\nassert solution(\"5\") == \"2 4 6 8 10\"\nassert solution(\"10\") == \"2 4 6 8 10 12 14 16 18 20\"\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2 4'\nassert solution('6') == '2 4'\nassert solution('34') == '2 4'\nassert solution('38') == '2 4'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '12'\nassert solution('10') == '12'"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '12'\nassert solution('5') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '4'\nassert solution('6') == '4'\nassert solution('7') == '5'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''5\n8 10 2 1000000 30556926000\n''') == '12'\nprint('Tests passed')"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"12\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\nassert solution('''\n10\n0 10000000 20000000 30000000\n''') == '5'\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '12'\nassert solution('5') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '12'"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'NO'\nassert solution('5 2') == 'YES'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\nassert solution('''\n8 5\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'NO'\nassert solution('''\n8 9\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'NO'\nassert solution('''\n8 5\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\n'''\n    return 'YES'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 8\") == \"YES\", \"Test 1 failed\"\nassert solution(\"1 8\") == \"NO\", \"Test 2 failed\"\nassert solution(\"3 3\") == \"YES\", \"Test 3 failed\"\nassert solution(\"1 4\") == \"NO\", \"Test 4 failed\"\nassert solution(\"2 2\") == \"YES\", \"Test 5 failed\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 6') == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 8\") == \"YES\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"3 10\") == \"YES\"\nassert solution(\"10 20\") == \"NO\"\nassert solution(\"1\") == \"NO\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == \"YES\"\nassert solution(\n'''\n4 4\n1\n2 3 0\n3 2 4 0\n2 4 0\n4 3 7 0\n1 6 0\n3 6 0\n''') == \"NO\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 8') == 'YES'\nassert solution('1 8 0') == 'NO'\nassert solution('8 5 0') == 'YES'\nassert solution('4 3 7 0') == 'YES'\nassert solution('5 2 6 0') == 'YES'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\nassert solution('''\n2 2\n2 2\n''') == 'Impossible'\n'''\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 2\n3 4 5 6 1 2''') == '5 6 1 2 3 4'\n\n-------SOLUTION-------"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4'"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n4 3\n1 2\n5 6\n4 3\n''') == '5 6 1 2 3 4'\n\nassert solution(\n'''\n4 1\n1 2\n2 3\n2 4\n3 4\n''') == '4 6 1 2 3 4'\n\nassert solution(\n'''\n4 3\n2 1\n2 4\n1 3\n''') == 'Impossible'\n\nassert solution(\n'''\n6 6\n1 2 1 3 1 5 2\n1 4 3 2 1 3 4\n1 5 1 2 4 3 4\n4 1 1 2 1 3 4\n1 2 1 3 1 5 2\n1 3 1 5 2 4 3 4\n''') == '5 6 1 3 4 1 2 4 3'\n\nassert solution(\n'''\n6 6\n1 1\n1 3\n1 5\n2 3\n2 5\n3 3\n3 5\n5 1\n5 3\n5 5\n''') == '5 6 1 3 4 1 2 4 3'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"2 3 4 5 1 2\") == \"5 6 1 2 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n4 5 6 1 2\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n6 1 2') == '5 6 1 2 3 4', \"Wrong Answer\"\nassert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4', \"Wrong Answer\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"4\\n1 2 3 4 5\") == \"5 6 1 2 3 4\"\nassert solution(\"9\\n5 8 3 1 4 6 7 2\") == \"2 5 1 6 7 8 3 4\""
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6 1 2 3 4\\n\") == \"5 6 1 2 3 4\\n\"\nassert solution(\"3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\\n\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 8 4\n\n''') == '20512'\nassert solution('''8 3 2 5\n\n''') == 'impossible'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 8 6 2\n''') == 'PQX'\n\nassert solution('''\n12 9 18 2\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n15 8 9 2\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n20 8 9 2\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('3 2 8 4') == 'IMPOSSIBLE'\nassert solution('1 1 2 1') == '2'"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 8 4') == '20512'\nassert solution('15 19 20 21 27') == 'IMPOSSIBLE'\nassert solution('101 17 35 79') == 'IMPOSSIBLE'\n\"\"\"\nimport math\nfrom itertools import product\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 8 4\n''') == '20512'\nassert solution('''4 3 7 9\n''') == 'IMPOSSIBLE'\nassert solution('''6 2 8 4\n''') == 'IMPOSSIBLE'\nassert solution('''4 4 6 2\n''') == '4'\nassert solution('''4 4 4 4\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('3 2 6 4') == '1834'\nassert solution('9 9 9 9 9') == 'IMPOSSIBLE'\n\n'''"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('1 3 4 4') == 'IMPOSSIBLE'"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    5 2 8 4\n    ''') == '20512'\n\"\"\"\n\nm, n, p, q = map(int, stdin.split())\n\nfor i in range(n, m + 1):\n    if len(str(i)) == n:\n        if p * i % q == 0:\n            return str(i)\nprint('IMPOSSIBLE')"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    5 2 8 4\n''') == '20512'\nassert solution('''\n    3 2 9 4\n''') == 'IMPOSSIBLE'\nassert solution('''\n    5 2 9 4\n''') == '20512'\n''')\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 5 1') == '1'\nassert solution('4 2 7 3') == 'IMPOSSIBLE'\nassert solution('3 4 8 2') == '2'\nassert solution('5 6 2 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 8') == '3'"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == 2\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == 3\nassert solution('''\n3 3\nABC\nABD\nBCD\n''') == 2\nassert solution('''\n1 1\nA\n''') == 1\nassert solution('''\n2 1\nA\n''') == 1\n'''\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == 2\n\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == 3"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 8') == '3'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == '2'\n\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == '3'\n\nassert solution('''\n5 4\nLLHFLLFH\nHLCL\n''') == '4'\n\nassert solution('''\n100000 4\nLLHFLLFH\nHLCL\n''') == '4'\n\nassert solution('''\n5 4\nLLHFLLFH\nHLCL\n''') == '4'"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\nBAC\nABC''') == '2'\nassert solution('''3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE''') == '3'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\nBAC\nABC\n''') == '2'\nassert solution('''3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == '3'\nassert solution('''4 5\nGRLNRKZ\nWRMAAT\nRLEKZN\nAEGNRM\n''') == '5'\nassert solution('''6 4\nGRLNRKZ\nWRMAAT\nRLEKZN\nAEGNRM\nNGLORZ\n''') == '4'"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n\n'''\nimport string\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == 2\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == 3\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '3'\nassert solution('1 1') == '3'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1,2]) == \"3\"\nassert solution([3,3]) == \"6\"\nassert solution([2,2]) == \"5\"\nassert solution([2,3]) == \"3\"\nassert solution([3,2]) == \"3\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 1') == '2'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 3') == '3'\nassert solution('2 1') == '3'\nassert solution('3 1') == '3'\nassert solution('4 1') == '4'"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 2\n2 1\n''') == '6'\n\nassert solution('''\n3 1\n2 3\n3 1\n''') == '4'\n\nassert solution('''\n4 4\n2 2\n3 3\n3 2\n''') == '14'\n\nassert solution('''\n1 1\n1 1\n''') == '1'\n\nassert solution('''\n2 1\n1 2\n''') == '3'"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 2]) == '3'"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '3'\nassert solution('5 4') == '13'\nassert solution('10 10') == '83'\nassert solution('100 100') == '610'\nassert solution('10 100') == '68'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '3'\nassert solution('5 5') == '1'\nassert solution('5 2') == '2'\nassert solution('5 6') == '2'\nassert solution('10 10') == '2'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '3'\nassert solution('5 4') == '0'\nassert solution('10 10') == '0'\nassert solution('10 20') == '1'\nassert solution('10 21') == '1'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == \"3\"\nassert solution('10 1') == \"10\"\nassert solution('2 2') == \"2\"\nassert solution('100 1') == \"100\"\nassert solution('2 2 3') == \"3\""
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\nprint(solution(input()))"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('5\\n3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\n\nassert solution('2 5\\n0 0 0 0 0\\n0 0 1 2 3\\n3 2 1 0 0\\n0 0 1 0 0') == '3'\n\nassert solution('5 3\\n4 2 2 1 2\\n3 1 3 2 4\\n3 1 1 2 2\\n4 1 2 1 4\\n0 1 3 4') == '1'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n') == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '3'\nassert solution('20 20') == '1'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3\") == 'YES'\nassert solution(\"2\\n1 2\") == 'NO'\nassert solution(\"2\\n3 2\") == 'NO'\nassert solution(\"2\\n1 1\") == 'YES'\nassert solution(\"2\\n3 1\") == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1') == 'YES'\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1') == 'YES'\nassert solution('2\\n7\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1') == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution(input_string=\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == \"NO\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"5\") == \"YES\""
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\n\nassert solution([2,1,1,3,2,3,2,3]) == \"NO\""
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('10') == '9.999999999'\nassert solution('100') == '99.99999999'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n') == '3.000000000'\nassert solution('2\\n') == '2.000000000'\n'''\n\nimport math"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('1') == '3.000000000'\nassert solution('3') == '3.000000000'\n\"\"\"\nimport math\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3.000000000\"\nassert solution(\"1\") == \"2.000000000\""
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n''') == '3.0'\nassert solution('''5\n''') == '1.5000000000000002'\nassert solution('''10\n''') == '1.55'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('2') == '3.000000000'\n\"\"\"\n\nimport math\n\nstdin_lines = []\nwhile True:\n    try:\n        stdin_lines.append(input())\n    except EOFError:\n        break\n\nn = int(stdin_lines[0])"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3.000000000\"\nassert solution(\"2\") == \"3.000000000\"\nassert solution(\"1\") == \"3.000000000\"\n\"\"\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3.000000000'\nassert solution('5') == '7.00000000'\nassert solution('4') == '6.400000000'\nassert solution('100') == '10.0'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.0'\nassert solution('2') == '3.0'\n\"\"\"\nimport math\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('3') == '5.000000000'\nassert solution('6') == '10.000000000'\n\"\"\""
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '1'\nassert solution('8 3') == '2'\nassert solution('6 3') == '2'\nassert solution('10 5') == '3'\nassert solution('12 4') == '4'\n\n\"\"\"\n\nimport math\n\nK, N = map(int, input().split())\np = list(map(int, input().split()))\n\na, b, c, d = 0, 0, 1, 2\n\nwhile b <= N:\n    for i in range(c, d):\n        if sum(p[a:i]) >= N:\n            b = i\n            break\n        a += 1\n    c = d\n    d = b + 2\n\nprint(b - 1)\n\n\"\"\"\n1 2\n4\n\"\"\""
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n8\n2\n6\n''') == '1'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2\n3\n''') == '1'\nassert solution('''1 2\n3\n''') == '2'\nassert solution('''1 2\n3\n''') == '2'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '3'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('3') == '2'\nassert solution('3 2') == '2'\nassert solution('4 5') == '1'\nassert solution('7 8') == '3'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '1'\n'''\nfrom math import log\nfrom math import ceil\n\nn, k = [int(x) for x in input().split()]\n\npoles = sorted([int(x) for x in input().split()])"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n3\n''') == \"1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n3\n''') == '1'\nassert solution('''1\n10\n''') == '2'\nassert solution('''1\n10\n''') == '1'\nassert solution('''3\n12\n''') == '0'\nassert solution('''1\n3\n''') == '1'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3\n4\n5\n10\n''') == '2'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n\nassert solution('''\n1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == \"3\"\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == \"2\"\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == \"3\"\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == \"1\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '1'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"3\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"2\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"3\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"3\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"2\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2') == '3'\nassert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 1 4\\n1 3 2') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"3\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"2\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '3'\nassert solution(sys.stdin.read()) == '2'\nassert solution(sys.stdin.read()) == '3'\nassert solution(sys.stdin.read()) == '1'\nassert solution(sys.stdin.read()) == '3'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 5') == '3'\nassert solution('1 3 4') == '3'\nassert solution('0 2 2 3 2') == '3'\nassert solution('1 3 2') == '2'\nassert solution('1 2 4') == '2'\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    Add.c\n    int Main() {\n        for (int i=0; i<10; i++)\n            sum += i;\n        printf(\"SUM %d\", sum);\n    }\n''') == '1 Add.c\\ndef solution(stdin: str) -> str:\\\\n  pass'\n\nassert solution('''\n    HelloWorld.c\n    int Main() {\n        printf(\"Hello %d\\n\",i);\n        printf(\"THE END\\n\");\n    }\n''') == '0 HelloWorld.c\\ndef solution(stdin: str) -> str:\\\\n  pass'\n\nassert solution('''\n    2\n    HelloWorld.c\n    int Main() {\n        printf(\"Hello %d\\n\",i);\n        printf(\"THE END\\n\");\n    }\n''') == '1 HelloWorld.c\\ndef solution(stdin: str) -> str:\\\\n  pass'\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nHelloWorld.c\\nint Main() { \\nsum += i; \\nprintf(\"SUM %d\", sum); \\n}\\n***END***') == '2 HelloWorld.c def solution(stdin: str) -> str: pass'\nassert solution('2\\nAdd.c\\nint Main() { \\nsum += i; \\nprintf(\"SUM %d\", sum); \\n}\\n***END***') == '2 Add.c def solution(stdin: str) -> str: pass'\nassert solution('1\\nHelloWorld.c\\nint Main() { \\nsum += i; \\nprintf(\"SUM %d\", sum); \\n}\\n***END***') == '1 HelloWorld.c def solution(stdin: str) -> str: pass'\n\nSample Input:\n5\nIt's a bad idea to use a Unix system as a basis for developing Windows applications; to build Windows applications, use a more secure operating system as the base system for building applications and drivers.\n\n***END***\nit.py\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1 1\"\nassert solution(\"2\") == \"1 1\"\n\"\"\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 HelloWorld.c\\nint Main() {printf(\"Hello %d\\n\",i);}\\n***END***\\nAdd.c\\nint Main() {for (int i=0; i<10; i++) sum += i;\\nprintf(\"SUM %d\", sum);}') == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\\n\""
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\nHelloWorld.c\\nint Main() {') == 'HelloWorld.c\\nint Main() {'\nassert solution('2\\nAdd.c\\nint Main() {') == 'Add.c\\nint Main() {'\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 HelloWorld.c\\nint Main() {\\n    printf(\"Hello %d\\n\",i);\\n}\\n***END***\\nint Main() {\\n  for (int i=0; i<10; i++) \\nsum += i;\\n  printf(\"SUM %d\", sum);\\n}\\n***END***') == '2 HelloWorld.c add.c\\ndef solution(stdin: str) -> str: \\n  pass'"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\nHelloWorld.c\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n''') == '2 def solution(stdin: str) -> str':\n    pass\n\nassert solution('''2\nHelloWorld.c\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n''') == '2 HelloWorld.c Add.c':\n    pass\n\nassert solution('''2\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nHelloWorld.c\nint Main() {\n  printf(\"Hello %d\\n\",i);\n}\n***END***\n5\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nHelloWorld.c\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n''') == '5 Add.c HelloWorld.c 5':\n    pass"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***''') == '2 HelloWorld.c def solution(stdin: str) -> str':\n    print('YOUR CODE IS CORRECT!')\n\nelse:\n    print(\"\\n***ERROR: Failed to import module. Make sure you run command 'python3 -m pip install -U pip' (or 'python3 -m pip3 install -U pip') and try again!')\n    sys.exit(1)"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n''') == \"2 HelloWorld.c def solution(stdin: str) -> str: pass assert solution('''\\n2\\nHelloWorld.c\\nint Main() {printf(\"Hello %d\\n\",i);}\\n***END***\\nAdd.c\\nint Main() {for (int i=0; i<10; i++) sum += i; printf(\"SUM %d\", sum);}\\n***END***\\nint Main() {printf(\"Hello %d\\n\",i); printf(\"THE END\\n\");}\\n\"\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***''') == '2 HelloWorld.c\\n2 Add.c\\n'\nassert solution('''5\n1\nabc\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n2 2 2\n4 2 1\n4 4 1''') == '1 2 2'\nassert solution('''3 3\n2 2 2\n4 2 1\n4 4 1''') == '2 1 2'\nassert solution('''3 3\n2 2 2\n4 2 1\n4 4 1''') == '1 2 2'\nassert solution('''3 5\n3 2 2\n4 2 1\n4 5 1\n4 3 1\n4 5 1''') == '2 1 2'\nassert solution('''1 1\n0''') == '0'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '1'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()[:-1]\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n2 2 2\n4 2 1\n4 4 1\n''') == '1\\n2\\n2\\n2'"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '1 2'\nassert solution('''\n1 5\n6 6\n5 2\n4 4\n2 4\n''') == '3 4'\nprint('SUCCESS!')"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n') == '1'\nassert solution('3\\n2\\n3\\n') == '2'\nassert solution('5\\n4\\n5\\n') == '2'\nassert solution('4\\n4\\n4\\n') == '1'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n2 2 2\n4 2 1\n4 4 1''') == '1\\n2\\n2\\n'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 1') == '2'\nassert solution('2 2') == '1'\nassert solution('3 1') == '2'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '2'\nassert solution('''\n1\n2\n3\n''') == '3'\nassert solution('''\n2\n4\n3\n''') == '2'\nassert solution('''\n2\n2\n2\n''') == '2'\nassert solution('''\n10\n10\n10\n''') == '1'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '1\n''')\nassert solution('''\n5 3\n1 1 1\n2 1 1\n3 1 2\n4 2 3\n5 2 2\nSample Output:\n1\n2\n3\n4\n5\n''') == '1 2 3 4 5'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1\n4\n1\n2\n3\"\"\") == \"1\"\n\nassert solution(\"\"\"2\n1\n0\n1\n2\"\"\") == \"0\"\n\nassert solution(\"\"\"3\n1\n1\n2\"\"\") == \"1\"\n\nassert solution(\"\"\"4\n1\n1\n1\n1\"\"\") == \"2\"\n\nassert solution(\"\"\"5\n1\n1\n1\n1\n1\"\"\") == \"3\""
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '5'\nassert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '3'\nassert solution('4\\n') == '4'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 20') == '5'\nassert solution('3 10') == '6'\nassert solution('3 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 20') == '5'\nassert solution('3 20') == '5'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == \"5\"\nassert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == \"5\"\nassert solution('''\n4 10\n50 70 10\n100 110 4\n150 190 16\n''') == \"3\"\nassert solution('''\n4 20\n50 70 10\n100 110 4\n150 190 16\n''') == \"3\"\nassert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == \"3\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 2\\n50 70 10\\n100 110 4\\n150 190 16\") == \"5\"\nassert solution(\"3 10\\n50 70 10\\n100 110 4\\n150 190 16\") == \"8\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 20\n50 70 10\n100 110 4\n150 190 16''') == '5'\nassert solution('''3 1\n50 50\n100 100\n150 150''') == '1'\nassert solution('''5 5\n4 4\n100 100\n100 100\n100 100''') == '2'\nassert solution('''10 10\n100 100\n100 100\n100 100''') == '10'\nassert solution('''100 100\n100 100\n100 100\n100 100''') == '100'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'\nassert solution('1 5\\n3 1\\n9 1') == '9'\nassert solution('2 3\\n5 2\\n1 2') == '1'\nassert solution('5 2\\n5 4\\n4 5\\n5 2\\n3 3\\n6 6') == '3'"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n(2 5)\\n.....\\n.#.#.\\n.#.#.\\n....#\\n.#.##\\n1\\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)') == \"26\"\nassert solution('3 2\\n(1 2)\\n...#\\n...#\\n.....\\n(1 1)') == \"IMPOSSIBLE\"\nassert solution('5 5\\n(2 3)\\n(1 4)\\n(2 3)\\n(3 2)\\n(4 1)\\n.....\\n.....\\n.....\\n(1 2)') == \"26\"\nassert solution('5 5\\n(2 3)\\n(1 4)\\n(2 3)\\n(3 2)\\n(4 1)\\n.....\\n.....\\n.....\\n(1 2)') == \"IMPOSSIBLE\"\nassert solution('5 5\\n(2 5)\\n(1 5)\\n(1 4)\\n(2 5)\\n(3 4)\\n.....\\n.....\\n.....\\n(1 2)') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'IMPOSSIBLE'\nassert solution('1 3') == 'IMPOSSIBLE'\nassert solution('3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)''') == '26'\nprint(solution('''4 4\n.....\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n...#.\n.#..#\n...##\n.##.#\n''') == 'IMPOSSIBLE'\nassert solution('''\n5 5\n...#.\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"26\"\nassert solution(\"1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)''') == '26'\nassert solution('''3 3\n###.\n.#.\n.##.\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"26\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n\"\"\") == \"26\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'\n\nassert solution('''\n4 3\n.....\n.#.#.\n.#.#.\n....#\n.##.#\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"(2 5)\\n\"\n    \"(5 3)\\n\"\n    \".....\\n\"\n    \".#.#.\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\"\n    \"....#\\n\""
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure', 'Should fail as one of the targets is not lineable by the laser beam'\n\nassert solution('''\n3\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') =='success', 'Should succeed as all the targets are lineable by the laser beam'\n\nassert solution('''\n4\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure', 'Should fail as one of the targets is not lineable by the laser beam'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') =='success'\nassert solution('''\n8\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n-1 -1\n0 -2\n1 -1\n''') == 'failure'\nassert solution('''\n8\n1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n-1 -1\n0 -2\n1 -1\n''') == 'failure'\nassert solution('''\n5\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') =='success'\nassert solution('''\n2\n1 1\n1 1\n''') =='success'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"failure\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n-1 0\n0 0\n1 0\n-1 1\n0 2''') == 'failure'"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n-1 -1\n0 2\n1 2\n-1 1\n0 3\n1 2\n''') == 'failure'\nassert solution('''\n10\n1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n-1 -1\n0 2\n1 2\n-1 1\n0 3\n1 2\n''') =='success'\n'''\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') =='success', \"You are a robot\"\nassert solution('''\n5\n-2 1\n-2 -1\n-1 -2\n1 -2\n2 1\n''') == 'failure', \"No clear line\"\nassert solution('''\n20\n-23 -40\n-19 -23\n-36 -29\n-16 -10\n-8 -7\n1 -8\n12 -9\n-23 13\n-16 -2\n-17 -7\n10 -4\n2 -16\n8 -8\n2 -9\n-19 -4\n-12 -2\n-15 -6\n-10 -16\n-7 -12\n-5 -11\n-4 -8\n-3 -2\n3 8\n''') == 'failure', \"Not clear enough\"\nassert solution('''\n10\n-5 -2\n-5 -2\n-4 -1\n-4 -1\n-3 -1\n-3 -1\n-2 -1\n-2 -1\n-1 -1\n-1 -1\n0 1\n1 1\n1 1\n''') == 'failure', \"Clear but too many targets\"\nassert solution('''\n4\n-2 -4\n-2 -2\n-4 -2\n-4 -4\n''') =='success', \"Clear enough, but too many targets\"\n\n'''\nfor _ in range(int(input())):\n    n = int(input())\n    lst = []\n    for i in range(n):\n        lst.append(list(map(int,input().split())))\n    # print(lst)\n    for i in range(len(lst)):\n        for j in range(i,len(lst)):\n            if (lst[i][0]-lst[j][0])**2 + (lst[i][1]-lst[j][1])**2 < 10000 and (lst[i][0]-lst[j][0])**2 + (lst[i][1]-lst[j][1])**2 > 0:\n                # print(i,j)\n                # print(lst[i][0],lst[i][1],lst[j][0],lst[j][1])\n                if i!= j:\n                    # print('here')\n                    # print(lst[i][0],lst[i][1],lst[j][0],lst[j][1])\n                    if (lst[i][0]-lst[j][0])**2 + (lst[i][1]-lst[j][1])**2 < 10000:\n                        # print('here too')\n                        print('failure')\n                        exit()\n    print('success')\n'''\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n\") == \"failure\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'failure'\nassert solution(\"6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\") =='success'\nassert solution(\"10\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\") == 'failure'\nassert solution(\"5\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n-1 2\\n0 3\\n1 4\\n1 5\") =='success'\n\"\"\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n') == 'failure'"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('3 3') == 'possible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n3\n1\n''') == 'impossible'\n\nassert solution('''\n1\n3\n3\n''') == 'possible'\n\nassert solution('''\n2\n3\n3\n''') == 'possible'\n\nassert solution('''\n2\n3\n2\n''') == 'possible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2\n3 4\n5 2''') == 'impossible'\nassert solution('''3 5\n2 4\n4 6\n1 3\n1 4''') == 'possible'\nassert solution('''1 2\n1 2\n1 2''') == 'impossible'\nassert solution('''1 4\n2 3\n1 4\n2 3''') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('3 3') == 'impossible'\nassert solution('5 2 2') == 'impossible'\nassert solution('5 2 2') == 'impossible'\n\n'''\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\n''') == 'possible'\nassert solution('''\n1 2\n3 4\n5 2\n5 2\n''') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('3 3') == 'possible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('3 3') == 'impossible'\nassert solution('5 2 2') == 'possible'\nassert solution('5 2 2') == 'impossible'\n'''\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3') == 'possible'\nassert solution('2 2 2\\n1 2\\n3 3') == 'impossible'\nassert solution('2 2 2\\n3 2') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\n\"\"\""
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\n''') == 'impossible'\nassert solution('''\n1 1\n1 2\n1 3\n''') == 'possible'"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3\n1 1 1\n1 2 2\n1 3 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 1\n1 1\n1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 1\n1 1\n1 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3\n1 1 1\n1 2 2\n1 3 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '0'\ninput_ = \"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 1 2\n1 2 1\n-1 1 2\n''') == '0'\n'''\nThe number of vertical moves is not needed, we can just remove the horizontal moves and just write"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 5') == '4'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 3') == '1'\nassert solution('10 10') == '1'\nassert solution('10 20') == '2'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1 2') == '0'\nassert solution('1 2\\n1 2 1') == '1'\nassert solution('1 1 2\\n1 2 1') == '0'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '0'\nassert solution('1 1 2') == '0'\nassert solution('1 2 1') == '1'\n\n---\n\nSample Input:\n10\n2 1 1 2 1 2\n2 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n-1 1 1 2 1\n\nSample Output:\n1\n\n'''\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n3 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n4 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1\n4 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1\n5 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1\n5 1 2\n1 2 3\n-1 1 2\n\"\"\") == \"3\""
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 1 2\n1 2 1\n-1 1 2\n''') == '0'\nassert solution('''\n3 2\n1 1 2\n1 2 1\n-1 1 2\n''') == '2'\nassert solution('''\n3 3\n1 1 3\n1 2 2\n1 3 1\n''') == '3'\n'''\n    mall_count, size = [int(i) for i in stdin.split(' ')]\n    min_vertical = 0\n    for i in range(mall_count):\n        x, y, t = [int(j) for j in stdin.split(' ')]\n        min_vertical = max(min_vertical, abs(x - 0) + abs(y - 0))\n    min_vertical += mall_count - 1\n    return str(min_vertical)\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '4'\nassert solution('5 2') == '5'\nassert solution('0 1') == '0'\nassert solution('1') == '1'"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 2') == '4'\nassert solution('5 2') == '5'\nassert solution('10 2') == '10'"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"3 4\") == \"4\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"4\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n123\\n') == '3\\n123\\n'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n353''') == '3'\nassert solution('''4 2\n1234''') == '4'"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 2') == '4'\nassert solution('5 2') == '5'\nassert solution('6 2') == '6'\nassert solution('7 2') == '7'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(input) == \"3\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\\\n3 2\n353\n\n\"\"\") == \"\"\"3\"\"\"\n\nassert solution(\"\"\"\\\n4 2\n1234\n\n\"\"\") == \"\"\"4\"\"\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('3 47 0 4 9') == 'YES'\n\n\"\"\"\n\nimport math\nfrom itertools import combinations\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(samples[0]) == \"YES\"\nassert solution(samples[1]) == \"YES\"\nassert solution(samples[2]) == \"YES\"\nassert solution(samples[3]) == \"NO\"\nassert solution(samples[4]) == \"YES\"\nprint(\"All tests passed\")\n'''"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12 30 45 3 11') == \"NO\"\nassert solution('12 0 1 12 1') == \"YES\"\nassert solution('3 47 0 4 9') == \"YES\"\n\"\"\""
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\nassert solution(\"4 9 5 6 10\") == \"NO\""
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"12 30 45 3 11\"\n) == \"NO\"\n\nassert solution(\n    \"12 0 1 12 1\"\n) == \"YES\"\n\nassert solution(\n    \"3 47 0 4 9\"\n) == \"YES\"\n\"\"\"\n\nh, m, s, t_1, t_2 = [int(i) for i in stdin.strip().split()]"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 2 3 1 0\n2 4 20''') == '3'\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '2'\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 1 2 3 1 0\n2 4 20\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n15 27 26\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n2 2 1\"\"\") == \"0\""
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"3\"\nassert solution(input_2) == \"0\"\nassert solution(input_3) == \"2\"\n\n\n'''"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1 2 3 1 0\n2 4 20\n''') == '3'\nassert solution('''\n1 1 2 3 1 0\n15 27 26\n''') == '2'\nassert solution('''\n1 1 2 3 1 0\n2 2 1\n''') == '0'\nassert solution('''\n1 1 2 3 1 0\n2 2 1\n''') == '0'\nprint(\"You're a smart cookie! All test cases are correct!\")\n\n\nhttps://leetcode.com/problems/max-number-of-k-satisfying-equations/\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n3 0 2\n\nIf we don't count the $1$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n3 1 2\n\nIf we don't count the $1$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n2 2 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 2 1\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n\n5 3\n-5 0 0\n-1 1 1\n0 0 2\n2 0 3\n3 0 1\n\n15 27 26\n1 1 2\n\nIf we don't count the $0$ as a valid point, the time costs $2$\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 1 2 3 1 0\n2 4 20\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n1 1 2 3 1 0\n15 27 26\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n1 1 2 3 1 0\n2 2 1\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n1 1 2 3 1 0\n15 27 26\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n1 1 2 3 1 0\n15 27 26\n\"\"\") == \"0\"\n\n\"\"\"\nSample test 1\n\nInput\n1 1 2 3 1 0\n2 4 20\n\nOutput\n3\n\nSample test 2\n\nInput\n1 1 2 3 1 0\n15 27 26\n\nOutput\n0\n\nSample test 3\n\nInput\n1 1 2 3 1 0\n2 2 1\n\nOutput\n0\n\nSample test 4\n\nInput\n1 1 2 3 1 0\n15 27 26\n\nOutput\n0\n\nSample test 5\n\nInput\n1 1 2 3 1 0\n15 27 26\n\nOutput\n0\n\"\"\""
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3 1 0\\n2 4 20\") == \"3\"\nassert solution(\"1 1 2 3 1 0\\n15 27 26\") == \"2\"\nassert solution(\"1 1 2 3 1 0\\n1 1 2\") == \"0\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 2 3 1 0\n2 4 20\n''') == '3'\nassert solution('''\n1 1 2 3 1 0\n2 2 1\n''') == '0'\nassert solution('''\n1 1 2 3 1 0\n15 27 26\n''') == '2'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 2 3 1 0') == '3'\nassert solution('15 27 26') == '2'\nassert solution('1 1 2 3 1 0') == '0'\nassert solution('15 25 26') == '1'\nassert solution('1 1 2 3 1') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '3'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 1 2 3 1 0\n2 4 20\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n2 2 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n2 2 1\n\"\"\") == \"0\"\n\"\"\""
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('\\n'.join([\n    '3',\n    '0 0 1',\n    '2 0 1',\n    '4 0 1',\n    ])) == '4', 'First example'\n\nassert solution('\\n'.join([\n    '3',\n    '0 0 2',\n    '3 0 2',\n    '6 0 2',\n    ])) == '8', 'Second example'\n\nassert solution('\\n'.join([\n    '3',\n    '0 0 2',\n    '2 0 2',\n    '1 1 2',\n    ])) == '6', 'Third example'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n''') == '4'\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n''') == '8'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0 0 1\n2 0 1\n4 0 1\n''') == '4'\nassert solution('''3\n0 0 2\n3 0 2\n6 0 2\n''') == '8'\nassert solution('''3\n0 0 1\n2 0 1\n1 1 2\n''') == '6'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '6'\nassert solution('3') == '8'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\\\n3\n0 0 1\n2 0 1\n4 0 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n0 0 1\n2 0 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n3\n0 0 1\n2 0 1\n4 0 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n3\n0 0 2\n2 0 2\n1 1 2\n\"\"\") == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0 0 1\n2 0 1\n4 0 1\n''') == '4', 'First'\nassert solution('''\n0 0 2\n3 0 2\n6 0 2\n''') == '8', 'Second'\nassert solution('''\n0 0 2\n2 0 2\n1 1 2\n''') == '10', 'Third'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n''') == '4'\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n''') == '6'\nassert solution('''\n3\n0 0 2\n2 0 2\n1 1 2\n''') == '8'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n\n''') == '4'"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 4 4 7 7 10 10 7\") == \"NO\"\n\n'''\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'YES\\n'\n\nassert solution([\n    '0 0 6 0 6 6 0 6',\n    '1 3 3 5 5 3 3 1']) == 'YES\\n'\n\nassert solution([\n    '6 0 6 6 0 6 0 0',\n    '7 4 4 7 7 10 10 7']) == 'NO\\n'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"Yes\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"Yes\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\") == \"Yes\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"YES\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"NO\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\", \"First\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"YES\", \"Second\"\nassert solution(\"6 0 6 6 0 6 0 0\") == \"YES\", \"Third\"\nassert solution(\"7 4 4 7 7 10 10 7\") == \"NO\", \"Fourth\"\nassert solution(\"0 0 6 0 6 6 0 6\") == \"NO\", \"Fifth\""
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"YES\"\nassert solution(input_2) == \"NO\"\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES', 'First'\nassert solution('''\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO', 'Second'\n\n'''\n--- Day 10: Adapter Array ---\nStarting with a one-dimensional list of numbers,\nit's possible to connect a few of the numbers in a row\nwith other numbers, but the numbers in the middle of those\nconnections must be spaced at least as far apart.\n\nThis is not the only condition; the condition is that\nconnections must be made from adjacent numbers as well.\n\nFor example, consider the following list:\n\n0\n3\n7\n2\n5\n1\n\nIn this list, the minimal distance between adjacent numbers is 3;\nbetween numbers 3 and 5, the minimal distance is 2; and between\nnumbers 3 and 1, the distance is 5.\n\nMore generally, the minimal distance between adjacent numbers in any list\nwill be between the min and max of its numbers, inclusive.\n(In the example above, this distance is 3; between number 3 and 5, the distance\nis 2; between number 3 and 1, the distance is 5.)\n\nGiven a list of numbers, create a function that returns\nthe smallest distance between adjacent numbers.\n\nFor example, given the following list:\n\n2\n4\n6\n8\n10\n12\n14\n15\n17\n20\n22\n24\n26\n28\n30\n32\n34\n36\n38\n40\n42\n44\n46\n48\n50\n52\n54\n56\n58\n60\n62\n64\n66\n68\n70\n72\n74\n76\n78\n80\n82\n84\n86\n88\n90\n92\n94\n96\n98\n100\n102\n104\n106\n108\n110\n112\n114\n116\n118\n120\n122\n124\n126\n128\n130\n132\n134\n136\n138\n140\n142\n144\n146\n148\n150\n152\n154\n156\n158\n160\n162\n164\n166\n168\n170\n172\n174\n176\n178\n180\n182\n184\n186\n188\n190\n192\n194\n196\n198\n200\n202\n204\n206\n208\n210\n212\n214\n216\n218\n220\n222\n224\n226\n228\n230\n232\n234\n236\n238\n240\n242\n244\n246\n248\n250\n252\n254\n256\n258\n260\n262\n264\n266\n268\n270\n272\n274\n276\n278\n280\n282\n284\n286\n288\n290\n292\n294\n296\n298\n300\n302\n304\n306\n308\n310\n312\n314\n316\n318\n320\n322\n324\n326\n328\n330\n332\n334\n336\n338\n340\n342\n344\n346\n348\n350\n352\n354\n356\n358\n360\n362\n364\n366\n368\n370\n372\n374\n376\n378\n380\n382\n384\n386\n388\n390\n392\n394\n396\n398\n400\n402\n404\n406\n408\n410\n412\n414\n416\n418\n420\n422\n424\n426\n428\n430\n432\n434\n436\n438\n440\n442\n444\n446\n448\n450\n452\n454\n456\n458\n460\n462\n464\n466\n468\n470\n472\n474\n476\n478\n480\n482\n484\n486\n488\n490\n492\n494\n496\n498\n500\n502\n504\n506\n508\n510\n512\n514\n516\n518\n520\n522\n524\n526\n528\n530\n532\n534\n536\n538\n540\n542\n544\n546\n548\n550\n552\n554\n556\n558\n560\n562\n564\n566\n568\n570\n572\n574\n576\n578\n580\n582\n584\n586\n588\n590\n592\n594\n596\n598\n600\n602\n604\n606\n608\n610\n612\n614\n616\n618\n620\n622\n624\n626\n628\n630\n632\n634\n636\n638\n640\n642\n644\n646\n648\n650\n652\n654\n656\n658\n660\n662\n664\n666\n668\n670\n672\n674\n676\n678\n680\n682\n684\n686\n688\n690\n692\n694\n696\n698\n700\n702\n704\n706\n708\n710\n712\n714\n716\n718\n720\n722\n724\n726\n728\n730\n732\n734\n736\n738\n740\n742\n744\n746\n748\n750\n752\n754\n756\n758\n760\n762\n764\n766\n768\n770\n772\n774\n776\n778\n780\n782\n784\n786\n788\n790\n792\n794\n796\n798\n800\n802\n804\n806\n808\n810\n812\n814\n816\n818\n820\n822\n824\n826\n828\n830\n832\n834\n836\n838\n840\n842\n844\n846\n848\n850\n852\n854\n856\n858\n860\n862\n864\n866\n868\n870\n872\n874\n876\n878\n880\n882\n884\n886\n888\n890\n892\n894\n896\n898\n900\n902\n904\n906\n908\n910\n912\n914\n916\n918\n920\n922\n924\n926\n928\n930\n932\n934\n936\n938\n940\n942\n944\n946\n948\n950\n952\n954\n956\n958\n960\n962\n964\n966\n968\n970\n972\n974\n976\n978\n980\n982\n984\n986\n988\n990\n992\n994\n996\n998\n1000\n1002\n1004\n1006\n1008\n1010\n1012\n1014\n1016\n1018\n1020\n1022\n1024\n1026\n1028\n1030\n1032\n1034\n1036\n1038\n1040\n1042\n1044\n1046\n1048\n1050\n1052\n1054\n1056\n1058\n1060\n1062\n1064\n1066\n1068\n1070\n1072\n1074\n1076\n1078\n1080\n1082\n1084\n1086\n1088\n1090\n1092\n1094\n1096\n1098\n1100\n1102\n1104\n1106\n1108\n1110\n1122\n1114\n1116\n1118\n1120\n1122\n1124\n1126\n1128\n1130\n1132\n1134\n1136\n1138\n1140\n1142\n1144\n1146\n1148\n1150\n1152\n1154\n1156\n1158\n1160\n1162\n1164\n1166\n1168\n1170\n1172"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 6 0 6 6 0 6') == 'YES'\nassert solution('1 3 3 5 5 3 3 1') == 'NO'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 4 4 7 7 10 10 7\") == \"NO\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n0\n''') == 'cslnb'\nassert solution('''2\n1 0\n''') == 'cslnb'\nassert solution('''2\n2 2\n''') =='sjfnb'\nassert solution('''3\n2 3 1\n''') =='sjfnb'"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n0\n\n1\n2\n\n2\n2''') =='sjfnb'\nassert solution('''3\n2 3 1\n\n2\n2''') == 'cslnb'\nassert solution('''3\n2 2\n\n2\n2''') =='sjfnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) in [\"sjfnb\", \"cslnb\"]"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2 3 1\") == \"sjfnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\"\nassert solution(\"4\\n1 1 1 1\") == \"cslnb\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0\\n') =='sjfnb'\nassert solution('2\\n1 0\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'\nassert solution('4\\n2 3 1\\n') == 'cslnb'\nassert solution('5\\n2 2 2 1\\n') == 'cslnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"sjfnb\"\nassert solution() == \"cslnb\"\n\"\"\"\nimport collections\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'cslnb'\nassert solution('2') == 'cslnb'\nassert solution('2') == 'cslnb'\nassert solution('3') =='sjfnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n0\\n') == 'cslnb'\nassert solution('2\\n1 0\\n') == 'cslnb'\nassert solution('2\\n2 2\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"sjfnb\"\nassert solution(\"2\") == \"cslnb\"\nassert solution(\"3\") == \"sjfnb\"\nassert solution(\"4\") == \"cslnb\"\nassert solution(\"5\") == \"cslnb\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1\n1\n1\n1\n1\n''') == '2'\nassert solution('''1 1\n1\n1\n1\n1\n1\n''') == '1'\nassert solution('''1 1\n1\n1\n1\n1\n1\n''') == '0'\nassert solution('''5 5\n1 1\n2 5\n5 4\n5 3\n4 2\n3 1\n''') == '2'\nassert solution('''5 5\n1 1\n2 5\n5 4\n5 3\n4 2\n3 1\n''') == '1'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == output_string\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 5\n1 5 3\n\n''') == '2'\nassert solution('''\n1 1\n1\n\n''') == '1'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 5\n1 5 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 2\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 1\n1\n\"\"\") == \"0\"\n\n\n\"\"\"\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u043e\u0436\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e\na \u0438 \u0446\u0435\u043b\u043e\u0435 \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e b, \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u044f\n((a + b)/2)**2 - (a - b)**2.\n\n\u0421\u0442\u0440\u0430\u043d\u043d\u043e, \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u0438\u043d\u044f\u0442\u043e \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0432\u0435\u0449\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430, \u043e\u043d\u0438 \u0432\u0435\u0434\u044c\u043c\u0430\u043a \u043f\u0435\u0440\u0435\u043f\u043e\u043b\u043d\u0438\u043b \u0434\u043e \u0442\u0438\u0440\u0430\u0436\u0430 \u043d\u0430\u0434\u043e \u0438\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u043e\u043c \u0432\u0438\u0434\u0435. \u041f\u0440\u0438 \u0432\u044b\u0432\u043e\u0434\u0435 \u0447\u0438\u0441\u043b\u0430 \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0434\u0430\u0436\u0435 \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0442\u0438\u0440\u0430\u0436, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u0431\u044b\u043b\u0438 \u0431\u0435\u0437\u043e\u0448\u0438\u0431\u043e\u0447\u043d\u043e \u0440\u0430\u0437\u043d\u044b\u043c\u0438.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435. \u0415\u0441\u043b\u0438 \u0444\u043e\u0440\u043c\u0443\u043b\u0430 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u0431\u0435\u0437 \u043a\u0430\u0432\u044b\u0447\u0435\u043a, \u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0441\u0435\u0433\u0434\u0430 \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043a\u0430\u0432\u044b\u0447\u043a\u0438 \u043f\u0435\u0440\u0435\u0434 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c.\n\nSample Input 1:\n\n5 -4\n\nSample Output 1:\n\n49.5\n\nSample Input 2:\n\n-10 -4\n\nSample Output 2:\n\n49.5\n\n\n\n\"\"\"\n\na, b = map(int, input().split())\nprint((a + b) / 2, (a - b) ** 2)\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5, 4, 3, 2, 1]) == 2\nassert solution([5, 5, 5, 2, 1]) == 2\nassert solution([5, 5, 2, 2, 1]) == 1\nassert solution([5, 5, 2, 1, 1]) == 2\nassert solution([5, 1, 1, 1, 1]) == 1\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"2\""
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '1\\n0 1\\n0'\nassert solution('2\\n') == '2\\n-1 0 1\\n1'"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"1 0 1\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n0 1\n0\n1''') == '2 1'\nassert solution('''2\n-1 0 1\n1\n0 1''') == '2 1'\nassert solution('''5\n0 1\n0\n1\n1\n0''') == '5 -1 0 1 1 0'\nassert solution('''5\n0 -1\n0\n1\n1\n0''') == '5 -1 0 1 1 0'\nassert solution('''4\n0 1\n0\n1\n1\n0''') == '4 1 0 1 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1 0 1'\nassert solution('2') == '-1 0 1'\n\n'''\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '-1 0 1'\nassert solution('2') == '1'\n\n'''\n\nn = int(input())\nfor i in range(n):\n    s = solution(input())\n    print(s)\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2 0 1' or solution() == '-1 0 1', \"Wrong answer\"\n\n'''\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\n\n'''\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\n\"\"\""
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 5 4') == '1 3 3'\nassert solution('3 1 5 3') == '1 3 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 5 4\") == \"1 3 3\"\nassert solution(\"3 1 5 3\") == \"1 3 1\""
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 5 4') == '1 3 3'\nassert solution('3 1 5 3') == '2 3 2'\nassert solution('3 2 5 3') == '2 3 2'\nassert solution('3 2 5 3') == '3 2 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 1 5 4\n1 2 1 3\n\n\"\"\") == \"1 3 3\"\nassert solution(\"\"\"\n4 1 5 3\n1 3 1\n\n\"\"\") == \"1 2 2\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 5 4') == '1 3 3'\nassert solution('3 1 5 3') == '1 2 2'\nassert solution('3 2 5 3') == '2 3 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1 5 3''') == '1 3 3'\nassert solution('''3 1 5 3''') == '1 2 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 3 3\\n2 3 2\\n1 2 1\\n3 3 1\\n3 3 1\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 5 4') == '1 3 3', \"Wrong!\"\nassert solution('3 1 5 3') == '1 3 2', \"Wrong!\"\nassert solution('3 2 5 3') == '2 3 1', \"Wrong!\"\nassert solution('4 5 10 5') == '1 1 1 1', \"Wrong!\"\nassert solution('3 2 5 3') == '1 2 2', \"Wrong!\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 3 3\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 2 1'"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\nassert solution('2') == '0'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\nassert solution('1111111111') == '193'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"110\") == \"3\"\nassert solution(\"111111011\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"3\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('1101_10') == '167'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"110\") == \"3\"\nassert solution(\"111111011\") == \"169\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2\\n') == '1'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1 1 2 0 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n''') == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1 1 2 0 0''') == '11.084259940083'\nassert solution('''5 0 4 2 2 0''') == '33.121375178000'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n0 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n\"\"\") == \"11.084259940083\"\nassert solution(\"\"\"\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n\"\"\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 1 2 0 0') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'\nassert solution('5 1 1 2 2 2 0') == '1.7922999628563'\n\n\"\"\"\nimport math"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 1 2 0 0') == \"11.084259940083\"\nassert solution('5 0 4 2 2 0') == \"33.121375178000\"\nprint(solution(input()))\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1 2 0 0\") == \"11.084259940083\"\nassert solution(\"5 0 4 2 2 0\") == \"33.121375178000\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 1, 1, 2, 0, 0]) == 11.084259940083\nassert solution([5, 0, 4, 2, 2, 0]) == 33.121375178000\n\n\"\"\""
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1\n1 1\"\"\") == \"11.084259940083\"\nassert solution(\"\"\"\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n\"\"\") == \"33.121375178000\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n''') == '11.084259940083'\nassert solution('''\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n''') == '33.121375178000'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n1 1\n1 1\n''') == '11.084259940083'\nassert solution('''\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n''') == '33.121375178000'\nprint('All tests passed!')"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 5\n''') == '2'\nassert solution('''\n8 15\n''') == '1'\nassert solution('''\n7 20\n''') == '0'\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\n\n\"\"\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 5\n''') == '2'\nassert solution('''8 15\n''') == '1'\nassert solution('''7 20\n''') == '0'\nassert solution('''1000000000000 1000000000001\n''') == '500000000000'\nprint('\"Run\" is good. Great job!')\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 5\") == \"2\"\nassert solution(\"8 15\") == \"1\"\nassert solution(\"7 20\") == \"0\"\nassert solution(\"1000000000000 1000000000001\") == \"500000000000\"\n\n\n'''"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 5\n3\n5\n''') == '2'\nassert solution('''8 15\n1\n5\n''') == '1'\nassert solution('''7 20\n2\n5\n''') == '0'\nassert solution('''1000000000000 1000000000001\n2\n5\n''') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 5\n''') == '2'\nassert solution('''\n8 15\n''') == '1'\nassert solution('''\n7 20\n''') == '0'\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 5\n''') == '2'\n\nassert solution('''\n8 15\n''') == '1'\n\nassert solution('''\n7 20\n''') == '0'\n\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n8 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n7 20\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1000000000000 1000000000001\n\"\"\") == \"500000000000\"\nassert solution(\"\"\"\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 10') == '11'\nassert solution('5 10 1') == '2'\nassert solution('7 2 3') == '0'\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3 2') == '1'\nassert solution('7 2 3') == '0'\nassert solution('5 10 1') == '11'"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 10') == '11'\nassert solution('5 10 1') == '2'\nassert solution('7 2 3') == '0'\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"11\"\n\"\"\"\n\nn, x, y = list(map(int, stdin.split()))"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1 10\n01000''') == '11'\n\nassert solution('''5 10 1\n01000''') == '2'\n\nassert solution('''7 2 3\n1111111''') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10\") == \"11\"\nassert solution(\"5 10 1\") == \"2\"\nassert solution(\"7 2 3\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1 10\") == \"11\"\nassert solution(\"5 10 1\") == \"2\"\nassert solution(\"7 2 3\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 1 10\n01000\n''') == '11'\nassert solution('''5 10 1\n01000\n''') == '2'\nassert solution('''7 2 3\n1111111\n''') == '0'\nassert solution('''20 50 2\n
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == '11'\nassert solution(input_string_2) == '0'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1 1\n''') == '2 1'\nassert solution('''5 1 2\n''') == '19 5'\nassert solution('''3 1 1\n''') == '2 1'\nassert solution('''5 1 2\n''') == '19 5'\nassert solution('''7 1 2\n''') == '4181'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1 1\n''') == '2 1'\nassert solution('''5 1 2\n''') == '19 5'"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"0 2 3\") == \"-1\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nassert solution('8 5 5') == '8 7'"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1 1\n''') == '2 1'\nassert solution('''\n5 1 2\n''') == '19 5'"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n\n\n\n-----Hints-----\nUsing default arguments in Python is a nice way to pass value by reference.\nUse a tuple in the `in` keyword, and pass it to a function as the first argument.\nMake sure to read the solution description carefully and understand the pattern.\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n\n\"\"\"\n\nfrom itertools import count"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '6'\nassert solution('10 2') == '4'\n\n\n\"\"\"\n\nstdin = \"\"\"3 1\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\n\nprint(solution())"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 1\\n') == '6'\nassert solution('10 2\\n') == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution('-149.154.167.99') == '0.0.0.0/0'\nassert solution('+149.154.167.100/30') == '149.154.167.100/30'\nassert solution('+149.154.167.128/25') == '149.154.167.128/25'\nassert solution('-149.154.167.120/29') == '149.154.167.120/29'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('2') == '195.0.0.0/8'\nassert solution('3') == '-1'"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n-149.154.167.99\n\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\n6\n+127.0.0.1/32\n-127.0.0.1\n''') == '0.0.0.0/0\\n195.0.0.0/8\\n-127.0.0.4/30\\n-127.0.0.6/31'\nassert solution('''\n2\n+127.0.0.1/32\n-127.0.0.1\n''') == '0.0.0.0/0\\n-127.0.0.1'\nassert solution('''\n1\n-149.154.167.99\n+127.0.0.1\n''') == '-149.154.167.99\\n-127.0.0.1'\nassert solution('''\n4\n-149.154.167.99\n+127.0.0.1\n+127.0.0.1\n-149.154.167.100/30\n-149.154.167.128/25\n-149.154.167.120/29\n\n''') == '-149.154.167.99\\n-127.0.0.1\\n-149.154.167.100/30\\n-149.154.167.120/29'\nassert solution('''\n5\n-127.0.0.4/31\n+127.0.0"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n-149.154.167.99\n\n2\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\n3\n-127.0.0.1/32\n+127.0.0.1\n''') == '1\\n0.0.0.0/0\\n'\nassert solution('''\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\n6\n-127.0.0.1/32\n+127.0.0.1\n''') == '2\\n149.154.167.99\\n'\nassert solution('''\n7\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\n8\n-127.0.0.1/32\n+127.0.0.1\n''') == '3\\n-127.0.0.4/31\\n'\nassert solution('''\n9\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\n10\n-127.0"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('0.1.2.3/32') == '1'\nassert solution('0.1.2.3/33') == '-1'\nassert solution('0.1.2.3/30') == '0.1.2.3/30'\nassert solution('0.1.2.3/31') == '0.1.2.3/31'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n-149.154.167.99\n\nOutput\n1\n0.0.0.0/0\n\nInput\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\nOutput\n2\n149.154.167.99\n149.154.167.120/29\n\nInput\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\nOutput\n2\n195.0.0.0/8\n127.0.0.4/30\n\nInput\n2\n+127.0.0.1/32\n-127.0.0.1\n\nOutput\n-1\n''') == '1\\n0.0.0.0/0\\n'\n\nassert solution('''1\n+149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\nOutput\n2\n149.154.167.99\n149.154.167.120/29\n\nInput\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\nOutput\n2\n195.0.0.0/8\n127.0.0.4/30\n\nInput\n2\n+127.0.0.1/32\n-127.0.0.1\n\nOutput\n-1\n''') == '1\\n0.0.0.0"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n-149.154.167.99\\n') == '1\\n0.0.0.0/0'\nassert solution('4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n-149.154.167.99\n\n2\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\n3\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\n4\n+127.0.0.1/32\n-127.0.0.1\n''') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('2') == '199.0.0.0/8'\n\n\"\"\"\n\nip_black_list = []\nip_whit_list = []\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 1\nassert solution(input()) == 0\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n11\n00000000008\n''') == \"1\"\nassert solution('''\n22\n0011223344556677889988\n''') == \"2\"\nassert solution('''\n11\n31415926535\n''') == \"0\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n000000000\n0123456789\n0123456789\n''') == '2'\nassert solution('''\n3\n3\n3\n''') == '0'\nassert solution('''\n10\n00000000000\n000000000000000\n''') == '1'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n11\n00000000008\n\n''') == '1'\nassert solution('''\n22\n0011223344556677889988\n\n''') == '2'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\"\nassert solution(\"31415926535\") == \"0\"\nassert solution(\"0123456789\") == \"1\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input(\"4\\n99999\")) == \"0\"\nassert solution(input(\"4\\n9999\")) == \"1\"\nassert solution(input(\"4\\n12345\")) == \"2\"\nassert solution(input(\"11\\n00000000008\")) == \"1\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n00000000008\n\n''') == '1'\nassert solution('''4\n31415926535\n\n''') == '0'\nassert solution('''5\n31415926535\n\n''') == '0'\nassert solution('''7\n31415926535\n\n''') == '0'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"3 1\") == \"3\""
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '3'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == \"4\"\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == \"3\"\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == \"3\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\nassert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '3'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n\nOutput\n4\nrow 1\nrow 1\ncol 4\nrow 3\n''') == 'row 3'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n\nOutput\n3\nrow 1\nrow 2\nrow 3''') == 'row 2'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n\nOutput\n-1''') == '-1'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n\n''') == '4', \"First\"\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n\n''') == '3', \"Second\"\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n\n''') == '-1', \"Third\""
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution() == \"3\"\nassert solution() == \"4\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '4'\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '-1'\nassert solution('''\n3 3\n2 2 2\n2 2 2\n2 2 2\n''') == '3'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'row 2'\nassert solution() == 'row 3'\nassert solution() == 'row 3'\n\n\"\"\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n\n\"\"\") == \"4\"\n\nassert solution(\"\"\"3 3\n1 1 1\n1 1 1\n1 1 1\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"3 3\n1 1 1\n1 1 1\n1 1 1\n\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"3 3\n1 1 1\n1 2 1\n1 1 1\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"3 3\n1 1 1\n1 1 1\n1 1 2\n\n\"\"\") == \"3\""
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 6 4 5\n''') == 'YES'\nassert solution('''\n8 6 4 6\n''') == 'NO'\nassert solution('''\n10 3 11 4\n''') == 'YES'\nassert solution('''\n4 2 1 4\n''') == 'YES'"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'YES'\nassert solution('4 2 1 4') == 'YES'"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8 6 4 5\n''') == 'YES', solution.__doc__\nassert solution('''\n10 3 11 4\n''') == 'NO', solution.__doc__\nassert solution('''\n4 2 1 4\n''') == 'YES', solution.__doc__\nprint('All tests passed')"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'YES'\nassert solution('4 2 1 4') == 'YES'\nassert solution('4 2 1 2') == 'NO'"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"10 3 11 4\") == \"NO\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'YES'\nassert solution('4 2 1 4') == 'YES'\nassert solution('7 2 3 4') == 'NO'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 6 4 5') == 'YES'\nassert solution('8 6 4 6') == 'NO'\nassert solution('10 3 11 4') == 'YES'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\"\nassert solution(\"4 2 1 4\") == \"NO\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 6 4 5\n''') == 'YES'\nassert solution('''8 6 4 6\n''') == 'NO'\nassert solution('''10 3 11 4\n''') == 'YES'"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n'''\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n1 3\n1 4\n\n''') == '6', 'Should be 6'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '12', solution('2 2')\nassert solution('7 8') == '12', solution('7 8')\nassert solution('4 2') == '6', solution('4 2')\n\nstdin = open('input.txt')\nn, m = stdin.readline().split()\nn = int(n)\nm = int(m)\n\nmatrix = []\nfor _ in range(n):\n    line = stdin.readline().split()\n    matrix.append(line)\n\nprint(solution(matrix))"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '6'\nassert solution('7 8') == '12'\nassert solution('2 2') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2\n1 3\n1 4\n\n''') == '6'\nassert solution('''7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\n''') == '12'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '12'\nassert solution('7 8') == '12'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4 2\n1 3\n1 4\n\n\"\"\"\n) == \"6\"\nassert solution(\n\"\"\"\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\n\"\"\"\n) == \"12\"\nassert solution(\n\"\"\"\n2 2\n1 2\n2 1\n\n\"\"\"\n) == \"-1\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"7 8\") == \"12\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"4 4\") == \"12\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 2\\n2 1') == '12'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3') == '12'\nassert solution('2 2\\n1 2') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '6'\nassert solution('7 8') == '12'\nassert solution('2 2') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '12'\nassert solution('7 8') == '12'"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n''') == 'NO'\nassert solution('''3 2\n1 0\n1 1\n0 1\n\n''') == 'YES'\nassert solution('''9 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0\n1 1 0\n1 1 0\n1 0 0\n\n''') == 'YES'\nassert solution('''7 6\n1 0 0 1\n1 1 0 0\n1 0 0 1\n1 1 0 1\n1 0 0 1\n1 1 0 0\n1 0 0 0\n''') == 'NO'\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0''') == \"NO\"\nassert solution('''3 2\n1 0\n1 1\n0 1''') == \"YES\"\nassert solution('''2 2\n1 1\n1 1\n0 1''') == \"YES\"\nassert solution('''3 1\n1 1\n1 1\n0 1''') == \"YES\"\nassert solution('''3 4\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n''') == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n\n''') == 'NO'\n\nassert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n\n''') == 'YES'\n\nassert solution('''10 10\n0 0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0\n0 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0\n0 0 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0\n0 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n\n''') == 'YES'\n\nassert solution('''3 3\n1 0 1\n1 1 0\n0 0 0\n\n''') == 'NO'\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 0\n1 1\n0 1\n''') == 'NO'\nassert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n\n''') == 'YES'\nassert solution('''5 5\n0 0 0 0 0\n0 0 0 0 1\n0 1 0 0 0\n0 0 0 0 0\n0 0 0 1 0\n\n''') == 'NO'\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"NO\"\n'''\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == 'NO'\nassert solution('3 2') == 'YES'\n\n\n\"\"\"\nfrom collections import defaultdict\nimport itertools\n\nn, k = map(int, input().split())\n\nP = [list(map(int, input().split())) for _ in range(n)]\n\nteams = defaultdict(set)\n\nfor i in range(n):\n    for j in range(k):\n        if P[i][j]:\n            teams[j].add(i)\n\ncount = defaultdict(int)\n\nfor p in range(n):\n    for t in range(k):\n        if teams[t]:\n            for i in teams[t]:\n                count[i] += 1\n\nprint(\n    'YES' if max(count.values()) < k // 2 else 'NO'\n)\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n''') == 'NO'\nassert solution('''\n3 2\n1 0\n1 1\n0 1\n\n''') == 'YES'\n'''\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n''') == 'YES', 'First Example'\n\nassert solution('''\n3 2\n1 0\n1 1\n0 1\n''') == 'YES', 'Second Example'\n\nassert solution('''\n7 3\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 0 1 1 1 1 1\n1 0 1 1 1 1 1\n1 0 1 1 1 1 1\n1 0 1 1 1 1 1\n1 0 1 1 1 1 1\n''') == 'NO', 'Third Example'\n\nassert solution('''\n7 3\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 0 1 1 1 1 1\n1 0 1 1 1 1 1\n1 0 1 1 1 1 1\n1 0 1 1 1 1 1\n1 0 1 1 1 1 1\n''') == 'YES', 'Fourth Example'\n\nassert solution('''\n3 2\n1 0\n1 1\n0 1\n''') == 'YES', 'Fifth Example'\n''')"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"5 3\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == 'Yes'\nassert solution('2 7') == 'No'\nassert solution('1 0') == 'No'"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5') == 'Yes'\nassert solution('2 7') == 'No'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n2 3\\n') == 'Yes'\nassert solution('2 7\\n2 3\\n') == 'No'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 5\n2 3 5 12\n''') == 'Yes'\n\nassert solution('''2 7\n2 3\n''') == 'No'"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5\\n2 3 5 12') == 'Yes'\nassert solution('2 7\\n2 3') == 'No'\n\n\n\"\"\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == 'Yes'\nassert solution('2 7') == 'No'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'Yes'\nassert solution() == 'No'"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"\nprint(solution(input()))\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 7') == 'No'\nassert solution('1 3') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"Yes\"\nassert solution(\"2 7\") == \"No\""
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 1\n''') == '6'\nassert solution('''6 4 2\n''') == '8'\nassert solution('''2 3 4\n''') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '6'\n\"\"\""
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"3 3 4\") == \"-1\"\n\n\n\"\"\"\n\n\n\nn, m, k = map(int, input().split())"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4 1\n''') == '6'\nassert solution('''6 4 2\n''') == '8'\nassert solution('''2 3 4\n''') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n\nimport sys\nimport io\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 4\") == \"8\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\nassert solution(\"3 3 4\") == \"6\""
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('5') == '2'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '2'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n3 4 5''') == '2'\nassert solution('''3\n1 1 3\n2 2 2''') == '-1'\nassert solution('''4\n4 3 2 3\n1 1 1 1\n1 2 3 4\n1 3 1 2\n2 4 2 2\n2 3 1 1''') == '1'\nassert solution('''5\n4 3 2 2 1\n1 2 1 2 1\n1 2 2 3 1\n2 3 2 2 1\n3 4 1 2 2''') == '3'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 2 4 3\") == \"2\"\nassert solution(\"3\\n4 1 1\") == \"0\"\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2 4 3') == '2'\nassert solution('5 1 1') == '-1'\nassert solution('4 1 1') == '2'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 2 4 3') == '2'\nassert solution('3\\n0 3 0 4') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '0'\nassert solution('4') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '-1'\nassert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('0 3 0 4') == '0'\n\n'''\nfrom collections import defaultdict\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example1) == 5\nassert solution(example2) == 2\nassert solution(example3) == 7\nassert solution(example4) == 5\nassert solution(example5) == 5"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n10011010\n''') == '5'\nassert solution('''5\n10000011\n''') == '5'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '10'\nassert solution('10011011') == '5'\nassert solution('10000011') == '5'\nassert solution('01') == '2'\nassert solution('00') == '0'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 2\nassert solution(input()) == 5"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 2\nassert solution('10011011') == 5\nassert solution('10000011') == 5\nassert solution('101101') == 4\nassert solution('010101') == 3"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 1\nassert solution('0') == 0\nassert solution('0') == 0\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1''') == '1'\nassert solution('''11''') == '2'\nassert solution('''10000000''') == '2'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(inp) == out\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == 5\nassert solution('2') == 2"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 3 1 4\n''') == '3'\nassert solution('''\n4\n4 4 4 4\n''') == '-1'\nassert solution('''\n4\n2 1 4 3\n''') == '1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2 3 1 4\\n') == '3'\nassert solution('4\\n4 4 4 4\\n') == '-1'\nassert solution('4\\n2 1 4 3\\n') == '1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '3'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n2 3 1 4\n''') == '3'\nassert solution('''4\n4 4 4 4\n''') == '-1'\nassert solution('''2\n1 2 1 4\n''') == '1'\nassert solution('''4\n4 4 4 4\n''') == '-1'\nassert solution('''4\n2 2 1 4\n''') == '1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution() == \"1\"\nassert solution() == \"-1\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n2 3 1 4') == '3'\nassert solution('4\\n4 4 4 4') == '-1'\nassert solution('4\\n2 1 4 3') == '1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '1'\nassert solution('5') == '-1'\n\n\n------SOLUTION-------"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n2 3 1 4\n''') == '3'\nassert solution('''4\n4 4 4 4\n''') == '-1'\nassert solution('''4\n2 1 4 3\n''') == '1'\n\n\n'''"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution(stdin='''\n4\n2 3 1 4\n''') == '3'\nassert solution(stdin='''\n4\n4 4 4 4\n''') == '-1'\nassert solution(stdin='''\n4\n2 1 4 3\n''') == '1'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 2 0') == '2'\nassert solution('7\\n1 3 3 2 1 2 3') == '0'\nassert solution('2\\n2 2') == '1'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 2 2 0\n\n''') == '2'\nassert solution('''\n7\n1 3 3 2 1 2 3\n\n''') == '0'\nassert solution('''\n2\n2 2\n\n''') == '1'\nassert solution('''\n6\n1 3 3 2 1 2 3\n\n''') == '0'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(inp) == '1'\n\nassert solution(inp) == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('5') == '0'\nassert solution('9') == '0'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n\n1 3 2 0\n\n''') == '2'\nassert solution('''\n7\n\n1 3 3 2 1 2 3\n\n''') == '0'\nassert solution('''\n2\n\n2 2\n\n''') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n\n2 3 2\n\n1 2 3''') == '2'\nassert solution('''\n4\n\n1 3 2 0\n\n1 3 2 0''') == '1'\nassert solution('''\n7\n\n1 3 3 2 1 2 3\n\n1 2 3''') == '0'\nassert solution('''\n2\n\n2 2''') == '1'\nprint('Ok')"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('7') == '0'\nassert solution('2') == '1'\n\nfrom math import prod"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"2\""
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n\n1 3 2 0\n''') == '2'\n\nassert solution('''\n7\n\n1 3 3 2 1 2 3\n''') == '0'\n\nassert solution('''\n2\n\n2 2\n''') == '1'"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 1\nassert solution(\"3\") == 1\nassert solution(\"5\") == 1\nassert solution(\"6\") == 1\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '210'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n3\n''') == '6'\nassert solution('''\n1\n2\n''') == '1'\nassert solution('''\n1\n1\n''') == '2'\nassert solution('''\n2\n2\n''') == '2'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n4\n4\n''') == '40'\nassert solution('''10\n3\n6\n''') == '60'\nassert solution('''1000\n144\n1088\n''') == '3197'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '36'\nassert solution('7') == '210'\nassert solution('8') == '360'\n'''\n\n\nn = int(input())\nm = 3\nfor i in range(1, n + 1):\n    if n % i == 0:\n        m = max(m, i)\nprint(m)\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n\") == \"504\"\nassert solution(\"7\\n\") == \"210\"\nassert solution(\"3\\n\") == \"6\""
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\nassert solution('10') == '10'\n\n\n\nimport math"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\n''') == '1 1'\n\nassert solution('''\n3\n0 0 1 1\n0 1 1 2\n1 0 2 1\n\n''') == '1 1'\n\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\n''') == '1 1'\n\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\n''') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 1'\nassert solution('3') == '1 1'\nassert solution('3') == '1 1'\nassert solution('4') == '1 1'\nassert solution('5') == '3 4'"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"3 4\"\nassert solution(\"3\") == \"1 1\""
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1 1'\nassert solution('3') == '1 1'\nassert solution('4') == '1 1'\nassert solution('5') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\n''') == '1 1', 'First sample'\nassert solution('''\n3\n0 0 1 1\n0 1 1 2\n1 0 2 1\n\n''') == '1 1', 'Second sample'\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\n''') == '3 4', 'Third sample'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\n''') == '3 4', 'Fourth sample'\n\n\n\n\n'''\n1\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\n1 1\n\n2\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\n3 4\n'''\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\n''') == '1 1'\nassert solution('''\n3\n0 0 1 1\n0 1 1 2\n1 0 2 1\n\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\n''') == '1 1'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\n''') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 1\"\nassert solution() == \"1 1\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '1 1'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '1 1'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n4\n0 0 5 5\n0 1 4 4\n1 0 4 4\n1 1 4 4\n\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\n\"\"\") == \"3 4\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"8\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n18 55 16 17\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n6\n40 41 43 44 44 44\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n8\n5 972 3 4 1 4 970 971\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'YES'\nassert solution('6') == 'NO'\nassert solution('8') == 'YES'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n18 55 16 17\n''') == 'YES'\nassert solution('''8\n5 972 3 4 1 4 970 971\n''') == 'YES'\nassert solution('''6\n40 41 43 44 44 44\n''') == 'NO'\n\n--------------------------------------------------------------\n\n-------SOLUTION-------\n\nn = int(input())\ns = [int(x) for x in input().split()]\nfor i in range(len(s)-2):\n    for j in range(i+1, len(s)-1):\n        for k in range(j+1, len(s)):\n            if s[i] == s[j] and s[j] == s[k] or abs(s[i]-s[j]) <= 2 and abs(s[i]-s[k]) <= 2:\n                print(\"YES\")\n                exit()\nprint(\"NO\")\n---------------------------------------------\n\n---------------------------------------------\n\n---------------------------------------------\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n18 55 16 17') == 'YES'\nassert solution('6\\n40 41 43 44 44 44') == 'NO'\nassert solution('8\\n5 972 3 4 1 4 970 971') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == 'YES'\nassert solution('6') == 'NO'\nassert solution('8') == 'YES'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n18 55 16 17\n''') == 'YES', solution\nassert solution('''6\n40 41 43 44 44 44\n''') == 'NO', solution\nassert solution('''8\n5 972 3 4 1 4 970 971\n''') == 'YES', solution\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n18 55 16 17\\n') == \"YES\"\nassert solution('6\\n40 41 43 44 44 44\\n') == \"NO\"\nassert solution('8\\n5 972 3 4 1 4 970 971\\n') == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n18 55 16 17\n''') == \"YES\"\nassert solution('''6\n40 41 43 44 44 44\n''') == \"NO\"\nassert solution('''8\n5 972 3 4 1 4 970 971\n''') == \"YES\""
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\nassert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 9') == '9'\nassert solution('5 5') == '10'"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5''') == '10'\nassert solution('''1\n0''') == '1'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"10\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 2 3\") == \"3\"\nassert solution(\"2 2 3 5\") == \"2\"\nassert solution(\"2 5 5 5 5 2 2 2 2 2 5 5\") == \"2\""
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n\n''') == '10'"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\n\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\n\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5''') == '10'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5''') == '10'\nassert solution('''3 5\n1 2 3 4 5\n1 2 3 4 5''') == '9'\nassert solution('''4 5\n1 2 3 4 5\n1 2 3 4 5''') == '8'\nassert solution('''3 3\n1 2 3\n1 2 3\n1 2 3''') == '7'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'Petya'\nassert solution('8') == 'Vasya'"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'Petya'\nassert solution('8') == 'Petya'\nassert solution('1') == 'Vasya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n4\n7''') == 'Petya'\nassert solution('''5\n8\n10''') == 'Vasya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Petya'\nassert solution('8') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"Vasya\"\nassert solution(\"2\\n\") == \"Petya\"\nassert solution(\"8\\n\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Vasya\""
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3') == '0'\nassert solution('4 3 6') == '1'\nassert solution('5 3 6') == '2'\nassert solution('2 3 2') == '2'\nassert solution('1 5 3') == '1'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 2\\n1 1') == '0'\nassert solution('5 2 6\\n1 3\\n2 2\\n2 3') == '1'\nassert solution('1 1\\n3 2\\n2 3') == '2'\nassert solution('3 2\\n1 3\\n2 2') == '1'\n\n---\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3\\n1 2\\n2 2\\n2 1\\n\") == \"0\"\nassert solution(\"5 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\"\nassert solution(\"10 10 6\\n1 2\\n3 2\\n3 2\\n3 2\\n1 2\\n1 2\\n1 2\\n1 2\\n\") == \"6\"\nassert solution(\"3 6 6\\n1 2\\n3 2\\n1 2\\n1 2\\n2 2\\n1 2\\n1 2\\n\") == \"5\"\nassert solution(\"12 12 12\\n1 2\\n3 2\\n1 2\\n1 2\\n3 2\\n1 2\\n1 2\\n\") == \"3\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 3\n1 2\n2 2\n2 1\n''') == '0'\n\nassert solution('''1 5 3\n1 3\n1 1\n1 5\n''') == '2'\n\nassert solution('''4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n''') == '1'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 6\n1 2\n2 2\n2 1\n''') == \"2\"\nassert solution('''\n1 5 3\n1 3\n1 1\n1 5\n''') == \"1\"\nassert solution('''\n4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n''') == \"1\"\nassert solution('''\n4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n''') == \"1\"\nassert solution('''\n4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n''') == \"2\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 6 3\n1 2\n2 2\n2 1\n1 5\n1 3\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2 5 3\n1 2\n2 2\n2 1\n1 5\n1 3\n\n\"\"\") == \"0\""
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 5 3') == '2'\nassert solution('4 3 6') == '1'"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"4 3 6\") == \"1\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 3') == '0'\nassert solution('1 5 3') == '2'\nassert solution('4 3 6') == '1'"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 2\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nA\\nA\\nB\\nA') == '2'\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\nA\nB\nA\n''') == '2'\nassert solution('''\n2\nA\nB\nA\n''') == '3'\nassert solution('''\n3\nA\nB\nA\n''') == '0'\n\nsolution('''\n4\nA\nB\nB\nA\n''') == '2'"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\nA\\nB\\nB\\nA\") == \"2\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '', 'AssertionError'\nassert solution('4') == '', 'AssertionError'\n\nsolution('1')\n\n------class Snuke:------\nfrom collections import defaultdict\nclass Snuke(object):\n    def __init__(self):\n        pass\n    def build(self, N, c_AA, c_AB, c_BA, c_BB):\n        self.N = N\n        self.s = 'AB'\n        self.c_AA = c_AA\n        self.c_AB = c_AB\n        self.c_BA = c_BA\n        self.c_BB = c_BB\n    def set(self, i, s_i, s_i_plus_1, c_i):\n        if c_i == 'A':\n            self.s = self.s[:i]+c_i+self.s[i+1:]\n        elif c_i == 'B':\n            self.s = self.s[:i]+c_i+self.s[i+1:]\n    def execute_one_operation(self):\n        i = 0\n        while i < len(self.s)-1:\n            self.set(i, self.s[i], self.s[i+1], self.c_AA)\n            if i+2 < len(self.s):\n                self.set(i+1, self.s[i], self.s[i+2], self.c_AB)\n            if i+3 < len(self.s):\n                self.set(i+2, self.s[i+1], self.s[i+3], self.c_BA)\n            if i+4 < len(self.s):\n                self.set(i+3, self.s[i+2], self.s[i+4], self.c_BB)\n            i += 4\n        return self.s\n    def get_string_from_snuke(self):\n        s = self.execute_one_operation()\n        return s[:len(self.s)-1]\n    def get_number_of_strings_from_snuke(self):\n        # make all strings with self.s\n        # then check if all the strings can be made by self.execute_one_operation\n        # if yes, then take out the first self.s string and multiply by 2, and so on\n        # if not, then just multiply by 2, and so on\n        # keep doing that till the result is N\n        return len(set(self.execute_one_operation()))\n\n---\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == 2\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 2\nprint(solution(None))\nprint(solution(__import__('sys').stdin.read()))\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 4') == '2'\nassert solution('5 3 4 6 7') == '3'"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n2 3 4 6 7''') == '3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '9'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 4\\n') == '2'\nassert solution('5\\n2 3 4 6 7\\n') == '3'\nassert solution('10\\n5 1 5 6 5 4 4 5 5 7 7 9 9 7 7 6\\n') == '9'\nassert solution('10\\n10 4 4 5 5 4 4 5 5 6 6 5 5 4 4 4 4 4 5 5 6 6 5 5 5 4 4 4 5 5 5 6 6 5 5 5 4\\n') == '7'\nassert solution('2\\n8 2 5 2 6\\n') == '1'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 3 4\n''') == '2'\nassert solution('''\n5\n2 3 4 6 7\n''') == '3'\nassert solution('''\n6\n1 3 5 7 4 8\n''') == '4'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2 3 4''') == '2'\nassert solution('''5\n2 3 4 6 7''') == '3'\nprint('all tests passed')"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3 4''') == '2'\nassert solution('''5\n2 3 4 6 7''') == '3'"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n2 3 4\\n\") == \"2\"\nassert solution(\n    \"5\\n2 3 4 6 7\\n\") == \"3\"\nassert solution(\n    \"10\\n2 3 4 5 6 7 8 9 10\\n\") == \"11\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2 3 4\n''') == \"2\"\nassert solution('''\n5\n2 3 4 6 7\n''') == \"3\"\nassert solution('''\n2\n2 3 4\n''') == \"2\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\nABAAC\") == \"11\"\nassert solution(\"5\\nABAAC\") == \"11\"\nassert solution(\"7\\nABAAC\") == \"10\"\nassert solution(\"8\\nABAAC\") == \"10\"\nassert solution(\"5\\nABABB\") == \"4\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\nABAAC\\n\") == \"11\"\nassert solution(\"2\\nABAAC\\n\") == \"12\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nABAAC\") == \"1\"\nassert solution(\"2\\nABAAC\") == \"0\""
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nABAAC\n\n''') == '11'\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nABAC') == '11'\nassert solution('10\\nCATCBA') == '9'"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"11\"\nassert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nB') == '2'\n\"\"\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"1023 1 2\") == \"-1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2\n1 1\n0 1\n2 3''') == '3'"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4 2\n1 1\n0 1\n2 3\n''') == '3'\nassert solution('''5\n1 2\n1 0\n1 2\n1 1\n''') == '-1'\nassert solution('''1023\n1 2\n1 0\n1 2\n1 1\n''') == '-1'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"5\", \"4 2\", \"1 1\", \"0 1\", \"2 3\"]) == \"3\"\nassert solution([\"1023\", \"1 2\", \"1 0\", \"1 2\", \"1 1\"]) == \"-1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n4 2\n1 1\n0 1\n2 3\n''') == '3', solution('''\n5\n4 2\n1 1\n0 1\n2 3\n''')\nassert solution('''\n1023\n1 2\n1 0\n1 2\n1 1\n''') == '-1', solution('''\n1023\n1 2\n1 0\n1 2\n1 1\n''')"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1\\n0 1\\n2 3\") == \"3\"\nassert solution(\"1023 1 2\\n1 0\\n1 1\\n1 2\") == \"-1\"\nassert solution(\"1 2\\n1 0\\n1 1\\n1 2\") == \"2\"\nassert solution(\"2 1\\n1 1\\n1 1\\n1 2\") == \"1\"\nassert solution(\"2 2\\n1 1\\n1 1\\n1 2\") == \"1\"\n\n\n\n\n\n'''\n\n\n\n\n\n'''\n2\n5 2\n1 1\n0 1\n2 3\n\nOutput\n3\n'''"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\", \"Your solution is not correct.\"\nassert solution(\"1023\") == \"8\", \"Your solution is not correct.\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n4 2\n1 1\n0 1\n2 3''') == '3'\nassert solution('''1023\n1 2\n1 0\n1 2''') == '-1'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4 2') == '3'\nassert solution('1023\\n1 2') == '-1'\nassert solution('10\\n1 1') == '4'\nassert solution('10\\n1 2') == '4'\nassert solution('5\\n4 2') == '3'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '3'\nassert solution('1023 1 2') == '-1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"2\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('4 5') == '2'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n4 5\\n\") == \"2\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution(\"2 4 5\") == \"2\"\nassert solution(\"2 3 5\") == \"2\"\nassert solution(\"2 4 5\") == \"2\"\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '2'\nassert solution('1') == '0'"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '1'\n'''"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 2 3\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"YES\"\nassert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 3 4\") == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 1\n''') == 'NO'\nassert solution('''\n1 3 3\n''') == 'NO'\n\nassert solution('''\n3 1 2\n''') == 'NO'\n\nassert solution('''\n2 2 2 1\n''') == 'YES'\nassert solution('''\n1 2 3 4\n''') == 'YES'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2 3') == 'NO'\nassert solution('2 2 2 3') == 'YES'\nassert solution('3 2 2 3') == 'YES'\nassert solution('4 2 2 3') == 'NO'\nassert solution('5 2 2 3') == 'NO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 3\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\nassert solution(\"3 3 3\") == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4\n1 3 2 4\n1 3 4 2\n''') == 'YES'\nassert solution('''\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'YES'\nassert solution('''\n3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n''') == 'YES'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2\\n') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == 'YES'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\\n\") == \"YES\"\nassert solution(\"4 4\\n1 2 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\") == \"YES\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4\n1 3 2 4\n1 3 4 2\n''') == 'YES'\nassert solution('''3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n''') == 'NO'"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\") == \"NO\"\nassert solution(\"2 4\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2\\n') == 'YES'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == 'NO'\nassert solution('5 7\\n4 5 3 2 1\\n3 2 1 4 5\\n5 4 3 2 1\\n4 2 1 3 5\\n3 2 1 4 5\\n2 1 4 3 5\\n') == 'NO'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n1 2 3 4\n2 3 4 1\n3 4 1 2''') == 'NO'\nassert solution('''4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3''') == 'YES'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"3 6\") == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\\n\") == \"YES\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\") == \"YES\"\nassert solution(\"3 4\\n1 2 3 4\\n1 2 3 4\\n1 2 3 4\\n\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n1 3 2 4\n1 3 4 2\n3 4 1 2\n''') == 'NO'\nassert solution('''\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'YES'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\nassert solution('1 2 2') == '1'"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1\\n') == '0\\n', \"1st example\"\nassert solution('1 2 1\\n') == '666666672\\n', \"2nd example\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1 1''') == '0'\nassert solution('''1 2 1''') == '666666672'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1 1\n''') == '0'\n\nassert solution('''\n1 2 1\n''') == '666666672'"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()[:-1]"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\""
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1\\n') == '0\\n'\nassert solution('1 2 1\\n') == '666666672\\n'\n\nassert solution('1 3 1\\n') == '1\\n'"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n\"\"\"\n\nfrom math import factorial\n\nf, w, h = (int(i) for i in stdin.split())\n\nsum = 0\n\nfor h_food in range(f, h + 1):\n    for h_wine in range(w, h + 1):\n        if h_wine < h_food:\n            sum += factorial(h_wine) / (factorial(h_wine) * factorial(h_food - h_wine))\n\nprint(sum % 1000000007)\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('7\\n2 3 1 5 6') == '5'\nassert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('6\\n7 2 3 1 5 6') == '5'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n3 2 3 1 5 6\n''') == '5'\nassert solution('''\n2\n3 1\n''') == '1'\n'''\n3\n''') == '1'\n'''\n4\n''') == '1'\n'''\n4\n''') == '1'\n'''\n5\n''') == '1'\n'''\n5\n''') == '1'\n'''\n6\n''') == '1'\n'''\n6\n''') == '1'\n'''\n7\n''') == '1'\n'''\n7\n''') == '1'\n'''\n8\n''') == '1'\n'''\n8\n''') == '1'\n'''\n9\n''') == '1'\n'''\n9\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10\n''') == '1'\n'''\n10"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n7 2 3 1 5 6') == '4'\nassert solution('4\\n1 2 3 4') == '3'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('6\\n7 2 3 1 5 6') == '5'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('6') == '5'\nassert solution('7') == '6'\nassert solution('7') == '6'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('12\\n12 12 13 11 14 7 6 4') == '7'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '5'\nassert solution('10') == '9'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n7 2 3 1 5 6\n''') == '5'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 1 8''') == '2'\nassert solution('''4 2 2 6''') == '3'\nassert solution('''3 7 4 6''') == '1'"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1 1 8''') == '2'\nassert solution('''4 2 2 6''') == '3'\nassert solution('''3 7 4 6''') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '2'\nassert solution(input) == '3'\nassert solution(input) == '1'"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\nprint(solution(input()))\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 1 8''') == \"2\"\nassert solution('''4 2 2 6''') == \"3\"\nassert solution('''3 7 4 6''') == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1 8') == \"2\"\nassert solution('4 2 2 6') == \"3\"\nassert solution('3 7 4 6') == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == str(-1)"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 -1 5\") == \"4\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"-1 -4 15\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 5\n''') == '2'\nassert solution('''\n-1 4 15\n''') == '4'\nassert solution('''\n0 -1 5\n''') == '-1'\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n\n\n\"\"\"\n\n\nx,y,m = map(int, input().split())\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_sample_1) == \"2\"\nassert solution(input_sample_2) == \"4\"\nassert solution(input_sample_3) == \"4\"\nassert solution(input_sample_4) == \"-1\"\nassert solution(input_sample_5) == \"4\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 5''') == '2'\nassert solution('''-1 4 15''') == '4'\nassert solution('''0 -1 5''') == '-1'\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 1\n2 1 2 3 4 3''') == '2'\nassert solution('''6 1\n2 1 2 3 4 3\n\n''') == '0'\nassert solution('''6 1\n2 1 2 3 4 3\n\n''') == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 1\n2 1 2 3 4 3\n''') == '2'\n\nassert solution('''\n6 2\n2 1 2 3 4 3\n''') == '0'\n\nassert solution('''\n6 1\n1 1 2 2 3 3\n''') == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1\\n2 1 2 3 4 3') == '2'\nassert solution('6 2\\n1 1 2 2 3 3') == '0'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 1 2 3 4 3\") == \"2\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == str(2)"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 2 3 4 3\") == \"2\"\nassert solution(\"1 1 2 2 3 3\") == \"0\"\nassert solution(\"6 1\") == \"2\"\n\n\"\"\"\n\nfrom math import log2, log"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('monday\\ntuesday') == 'NO'\nassert solution('saturday\\ntuesday') == 'YES'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('monday\\ntuesday') == 'NO'\nassert solution('saturday\\ntuesday') == 'YES'\nassert solution('saturday\\nsunday') == 'YES'\nassert solution('sunday\\nsunday') == 'YES'\nassert solution('sunday\\ntuesday') == 'YES'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''monday\ntuesday''') == 'NO'\nassert solution('''saturday\nsunday''') == 'YES'\nassert solution('''saturday\ntuesday''') == 'YES'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('saturday\\ntuesday') == 'YES'\nassert solution('sunday\\nsunday') == 'NO'"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"monday\\ntuesday\\n\") == \"YES\"\nassert solution(\"saturday\\ntuesday\\n\") == \"YES\"\nassert solution(\"sunday\\ntuesday\\n\") == \"NO\"\nassert solution(\"saturday\\nsunday\\n\") == \"NO\"\nassert solution(\"saturday\\ntuesday\\n\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"saturday\") == \"YES\"\nassert solution(\"sunday\") == \"NO\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"monday\\ntuesday\\n\"\n    ) == \"NO\"\nassert solution(\n    \"sunday\\nsunday\\n\"\n    ) == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('monday') == 'YES'\nassert solution('tuesday') == 'NO'\nassert solution('saturday') == 'YES'\nassert solution('sunday') == 'NO'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"monday\", \"tuesday\"]) == \"NO\"\nassert solution([\"saturday\", \"sunday\"]) == \"YES\"\nassert solution([\"saturday\", \"monday\"]) == \"YES\"\nassert solution([\"sunday\", \"saturday\"]) == \"YES\"\nassert solution([\"sunday\", \"tuesday\"]) == \"NO\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"monday\\ntuesday\") == \"YES\"\nassert solution(\"saturday\\ntuesday\") == \"YES\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10000000000') == '17'\nassert solution('10000000001') == '91'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"12345\") == \"1\"\nassert solution(\"123456\") == \"2\"\nassert solution(\"1234567\") == \"1\"\nassert solution(\"12345678\") == \"1\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'\n\n'''"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '4'\nassert solution('6') == '4'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n10000000000\n''') == '17'\nassert solution('''\n10000000000\n''') == '91'\nprint(\"AoC 2020 Day 10, part 1 = {}\".format(solution(open(\"d10_in.txt\"))))\nprint(\"AoC 2020 Day 10, part 2 = {}\".format(solution(open(\"d10_in.txt\"))))\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '0'\nassert solution('10') == '1'\nassert solution('100') == '99'\nassert solution('1000') == '999'\nassert solution('10000') == '9999'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n35\n''') == '17'\nassert solution('''\n10000000000\n''') == '91'\n\nprint(solution(open(\"input.txt\")))\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n\n'''\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    ABCDEFGHI JKLMNOPQRSTUVWXYZ\n''') == 'YES'\nassert solution('''\n    XO\n''') == 'NO'\nassert solution('''\n    Z\n''') == 'NO'\n\n'''\nSample Test Cases\nTest Case 1\n\nInput\n    ABCDEFGHI JKLMNOPQRSTUVWXYZ\n\nOutput\n    YES\n\nTest Case 2\n\nInput\n    XO\n\nOutput\n    NO\n\nTest Case 3\n\nInput\n    Z\n\nOutput\n    NO\n'''\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 5\n''') == '0'\nassert solution('''3\n1 2 5\n''') == '1'\nassert solution('''4\n1 2 3\n''') == '1'\nassert solution('''5\n1 2 3 4\n''') == '2'\nassert solution('''6\n1 2 3 4 5\n''') == '2'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 5\n''') == '1'\nassert solution('''\n3\n1 2 5\n''') == '1'\nassert solution('''\n4\n1 2 5 3\n''') == '2'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 5\\n') == '1'\nassert solution('3\\n1 2 5\\n') == '2'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n5\n''') == '1'\nassert solution('''\n2\n5\n''') == '0'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution('3\\n1 2 5') == '1'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 5\n''') == '0'\nassert solution('''3\n1 2 5\n''') == '1'\nassert solution('''4\n1 2 3\n''') == '2'\nassert solution('''5\n1 2 3 4\n''') == '4'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 5\n''') == '0'\nassert solution('''\n2 2\n''') == '1'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 5\n''') == '0'\nassert solution('''\n3\n1 5 2\n''') == '1'\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\"\nassert solution(\"R\") == \"Yes\"\nassert solution(\"L\") == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'Yes'\nassert solution(\"0 0\") == 'Yes'\nassert solution(\"-1 1000000000\") == 'No'\nassert solution(\"1 2\") == 'No'\nassert solution(\"-1 -1\") == 'Yes'\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\nRU\n''') == 'Yes'\nassert solution('''1 2\nRU\n''') == 'No'\nassert solution('''-1 1000000000\nLRRLU\n''') == 'Yes'\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\nassert solution('U') == 'Yes'\nassert solution('UUDD') == 'Yes'\nassert solution('UULR') == 'No'\nassert solution('RUL') == 'Yes'\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('-1 1000000000') == 'Yes'\nassert solution('0 0') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\nRU\") == \"Yes\"\nassert solution(\"1 2\\nRU\") == \"No\"\nassert solution(\"-1 1000000000\\nLRRLU\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\nRU') == 'Yes'\nassert solution('0 0\\nD') == 'Yes'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\n\n'''"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'Yes'\nassert solution('-1 1000000000') == 'Yes'\nassert solution('0 0') == 'Yes'\nassert solution('2 2') == 'No'"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"-1 1000000000\") == \"No\"\nassert solution(\"0 0\") == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\"\nassert solution(\"-1 1000000000\") == \"No\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\nassert solution('60') == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\") == \"1\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10 3 7\n10   3   7\n141592653589793\n42''') == '1'\nassert solution('''10   3   7\n10   3   7\n141592653589793\n42''') == '1'\nassert solution('''314\n159 265\n358\nSample Output 3:\n0\n''') == '0'\nassert solution('''60\n  \n29\n  \n      31\n          \n          \n          \n          \nSample Output 4:\n1\n''') == '1'\nassert solution('''22 19 3\nSample Output 5:\n1\n''') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\nassert solution('60') == '1'\n\"\"\"\n\nfrom typing import List\nimport sys\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        if not stdin:\n            return '0'\n        result = 0\n        for line in stdin.split('\\n'):\n            if line and line.split()[0].isdigit() and line.split()[1].isdigit():\n                n, a, b = map(int, line.split())\n                if (n - a) % 2 == 0 and (n - b) % 2 == 0:\n                    result = 1\n        return str(result)"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\") == \"1\"\nprint(\"Congratulations! You are the judge of a programming contest!\")\nprint(\"You\u2019ve been put in charge of a problem, and since your problem may not have unique correct output, you\u2019ve got to write an output checker for it.\")\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '9'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '11'\nassert solution('3') == '13'\nassert solution('4') == '11'\nassert solution('5') == '19'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '9'\nassert solution('12345') == '18'\n\n'''\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('1') == '9'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '9'\nassert solution('2\\n') == '8'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '9'\nassert solution('1') == '9'\nassert solution('1\\n1') == '1'\nassert solution('2\\n4') == '9'\nassert solution('3\\n6') == '2'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '9'\nassert solution('3') == '10'\nassert solution('4') == '9'\nassert solution('5') == '8'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"5\") == \"7\"\n\n\"\"\""
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"8\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n\"\n    \"3 6 28 9\\n\"\n) == \"4\"\nassert solution(\n    \"5\\n\"\n    \"5 12 9 16 48\\n\"\n) == \"3\"\nassert solution(\n    \"4\\n\"\n    \"1 2 4 8\\n\"\n) == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n5 12 9 16 48''') == '3'\nassert solution('''4\n3 6 28 9''') == '4'\nassert solution('''4\n1 2 4 8''') == '-1'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n12 34\") == \"3\"\nassert solution(\"4\\n3 6 28 9\") == \"4\"\nassert solution(\"4\\n5 12 9 16 48\") == \"3\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution(\"\") == \"-1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n3 6 28 9') == '4'\nassert solution('5\\n5 12 9 16 48') == '3'\nassert solution('4\\n1 2 4 8') == '-1'\nprint('All tests passed')\n\n\n--------------------------------------------------------------------------------\n\n\n\n2. Longest Cycle\nMedium\n\n2469\n\n903\n\nAdd to List\n\nShare\nGiven an undirected graph and an integer k, return the length of the longest sub-cycle of this graph with length at least k.\nIf the given graph does not contain a cycle with length at least k, return 0.\n\nThe graph is given as an array of edges where edges[i] = [fromi, toi] is a connection between nodes fromi and toi.\u00a0 Each node has no more than k\u00a0connections.\n\n\n\n-----Input-----\n\nThe first line contains two integers n and k, 1 \\le n \\le 10^5, 1 \\le k \\le 10^4.\n\nThe second line contains n spaced integers where each integer is the node label.\n\nThe third line contains n space-separated integers where each integer is the directed connection between the ith and jth nodes.\n\nThe fourth line contains one integer k, where 0 <= k <= 10^4.\n\n\n\n-----Output-----\n\nOutput one integer, the length of the longest cycle in the graph. If the graph does not contain a cycle with length at least k, output 0.\n\n\n\n-----Examples-----\nInput\n6 6\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n3\n\nInput\n6 5\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n4\n\nInput\n4 4\n1 2\n2 3\n3 4\n\nOutput\n0\n\nInput\n1\n1 2\n1 3\nInput\n2\n1 2\n1 3\n\nOutput\n0\n\nInput\n2\n1 2\n1 3\n\nOutput\n0\n\nInput\n1\n1 2\n1 3\n\nOutput\n1\n\nInput\n2\n1 2\n1 3\n\nOutput\n1\n\nInput\n6 3\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n4\n\nInput\n6 5\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n4\n\nInput\n4 5\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n1\n1 2\n1 3\n\nOutput\n1\n\nInput\n2\n1 2\n1 3\n\nOutput\n1\n\nInput\n3\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n3\n\nInput\n2\n1 2\n1 3\n\nOutput\n1\n\nInput\n3\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n6 1\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n1\n\nInput\n6 0\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n6 4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n1\n\nInput\n6 3\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n4\n\nInput\n1\n1 2\n1 3\nInput\n2\n1 2\n1 3\n\nOutput\n1\n\nInput\n2\n1 2\n1 3\n\nOutput\n1\n\nInput\n3\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n6 4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n1\n\nInput\n6 1\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n1\n\nInput\n3 4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n3\n\nInput\n5 2\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n4\n\nInput\n5 4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n1\n1 2\n1 3\n\nOutput\n1\n\nInput\n3\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n2\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n6 4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n1\n\nInput\n6 1\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n1\n1 2\n1 3\n\nOutput\n1\n\nInput\n2\n1 2\n1 3\n\nOutput\n1\n\nInput\n3\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n6 4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n1\n\nInput\n6 1\n1 2\n1 3\n\nOutput\n1\n\nInput\n3\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n2\n1 2\n1 3\n\nOutput\n1\n\nInput\n3\n1 2\n1 3\n\nOutput\n1\n\nInput\n5 4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n1\n1 2\n1 3\n\nOutput\n1\n\nInput\n2\n1 2\n1 3\n\nOutput\n1\n\nInput\n3\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n0\n\nInput\n6 4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n\nOutput\n1\n\nInput\n6 1\n1 2\n1 3\n\nOutput\n1\n\nInput\n3\n1 2\n1 3\n\nOutput\n1\n\nInput\n4\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3 6 28 9\n''') == '4'\nassert solution('''\n5\n5 12 9 16 48\n''') == '3'\nassert solution('''\n4\n1 2 4 8\n''') == '-1'\n\"\"\""
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"-1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\nassert solution(\"3 6 28 9\") == \"4\"\nassert solution(\"5 12 9 16 48\") == \"3\"\nassert solution(\"1 2 4 8\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3 6 28 9\n\n''') == '4', 'Shortest cycle'\nassert solution('''\n5\n5 12 9 16 48\n\n''') == '3', 'Shortest cycle'\nassert solution('''\n4\n1 2 4 8\n\n''') == '-1', 'Shortest cycle'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"-1\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5\\n0 5 0 2 3\"\n) == \"2\"\n\nassert solution(\n    \"7\\n1 0 0 5 0 0 2\"\n) == \"1 7 3 5 6 4 2\""
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"1 7 3 5 6 4 2\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\""
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n0 5 0 2 3\\n') == '2'\nassert solution('7\\n1 0 0 5 0 0 2\\n') == '1 7 3 5 6 4 2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution([0, 5, 0, 2, 3]) == \"2\"\nassert solution([0, 1, 0, 5, 0, 0, 2]) == \"1\""
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n0 5 0 2 3\n''') == '2'\nassert solution('''7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1 0 0 5 0 0 2\") == \"1\"\nassert solution(\"7 1 0 0 5 0 0 2\") == \"1\"\nassert solution(\"3 1 0 0 5 0 0 2\") == \"2\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0 5 0 2 3\n''') == '2'\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\nassert solution('''\n8\n0 0 0 2 0 0 5 0\n''') == '2'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\n\n\"\"\"\nimport math"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '5'\nassert solution('5') == '5'\n\n\"\"\"\n\n\nfrom math import sqrt\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('4') == '5'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '5'\nassert solution('4') == '4'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n\") == \"2\"\nassert solution(\"5\\n\") == \"5\"\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('8') == '8'\nassert solution('6') == '6'\nassert solution('4') == '5'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n') == '2'\nassert solution('5\\n') == '5'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n''') == '5'\n\nassert solution('''\n5\n''') == '4'\n\nassert solution('''\n6\n''') == '4'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n') == '2'\nassert solution('5\\n') == '5'\n\n---\n\nNotes:\n\nThe first sample is special case of the second one.\n\nCan you solve the problem in O(n) time?\n\nYou can solve the problem in O(n) time with just constant space.\n\nDid you find a solution?\n\nYes, if I have just sorted the tiles and checked the divisors, it will be done in O(n) time.\n\nCan you solve the problem in O(n log n) time?\n\nYes, if I have just built the graph and sorted them by number, it will be done in O(n) time.\n\"\"\""
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"2\\n\"\nassert solution(\"5\\n\") == \"5\\n\"\n\"\"\"\n\nfrom itertools import combinations, permutations\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2 2\") == \"18\"\nassert solution(\"4 2 2\") == \"23\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('5 3 1') == '1 3 5'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 2\") == \"18\"\nassert solution(\"10 8 8 3\") == \"31\"\nassert solution(\"4 2 2\") == \"23\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('5 3 1') == '1 3 5'\nassert solution('6 3 1 6 3') == '23'"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18'\nassert solution('''4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('5 3 1') == '1 3 5'"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('4 2 2') == '31'\nassert solution('5 3 1') == '1 3 5'\nassert solution('6 3 1 6 3') == '4'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('4 2 2') == '31'\nassert solution('5 3 1') == '1 3 5'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''5 2 2\n    1 3 4 5 2\n    5 3 2 1 4\n    ''') == '18'\n\nassert solution(\n    '''4 2 2\n    10 8 8 3\n    10 7 9 4\n    ''') == '31'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18'\nassert solution('''4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31'\nassert solution('''3 3 1\n5 2 5 1 7\n6 3 1 6 3\n''') == '1 3 5 '\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1\n1 2''') == 'Yes'\nassert solution('''4 3\n1 2\n1 3\n1 4''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n1 2\n1 3\n\n2 3''') == 'Yes'\n\nassert solution('''4 3\n1 2\n1 3\n1 4\n\n2 3''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == \"Yes\"\nassert solution(s2) == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"Yes\"\n\nimport re"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'No'\nassert solution('''\n5 2\n1 2\n1 3\n1 4\n1 5\n''') == 'Yes'\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('4 3') == 'No'\n'''\nfrom itertools import combinations"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n\"\"\"\nimport sys"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n1 2\\n\") == \"Yes\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\\n\""
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('4 3') == 'No'\nassert solution('3 3') == 'Yes'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1\n1 2\n''') == 'Yes'\nassert solution('''4 3\n1 2\n1 3\n1 4\n''') == 'No'\nassert solution('''4 3\n1 2\n1 3\n1 4\n''') == 'Yes'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 1\n1 0 1\n1 2 0\n3\n''') == '7'\n\nassert solution('''\n0 2 1\n1 0 100\n1 2 0\n3\n''') == '19'\n\nassert solution('''\n0 1 1\n1 0 1\n1 2 0\n3\n''') == '7'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('0 2 1') == '19'\nassert solution('0 1') == '7'\nassert solution('0 2') == '19'\nassert solution('0 1 1 1') == '19'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 1\\n1 0 1\\n1 1 0\\n3') == '7'\nassert solution('0 2 1\\n1 0 100\\n1 2 0\\n5') == '87'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('1 0 1') == '7'\nassert solution('1 2 0') == '19'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('1 0 1') == '7'\nassert solution('1 2 0') == '9'\nassert solution('2 1 0') == '12'\nassert solution('2 2 0') == '18'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 1 1\n1 0 1\n1 1 0\n3\n''') == '7'\nassert solution('''\n0 2 1\n1 0 100\n1 2 0\n5\n''') == '87'\nassert solution('''\n0 1 1\n1 0 1\n1 2 0\n3\n''') == '19'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('1 0 1') == '7'\nassert solution('1 2 0') == '7'\nassert solution('3') == '19'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 1 1\") == \"7\"\nassert solution(\"0 2 2\") == \"19\"\nassert solution(\"0 3 1\") == \"87\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 1 1\n1 0 1\n1 1 0\n3\n''') == '7'\nassert solution('''\n0 2 1\n1 0 100\n1 2 0\n5\n''') == '87'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('1 0 1') == '7'\nassert solution('1 1 0') == '7'\nassert solution('3') == '19'\nassert solution('0 2 1') == '19'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(open(0).read()) == '1'\nassert solution(open(1).read()) == '2'\nassert solution(open(2).read()) == '0'\n\"\"\""
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\nassert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\nassert solution(\"F\") == \"0\""
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\naBddulbasaurrgndgbualdBdsagaurrgndbb\n''') == '2'\n\nassert solution('''\nBulbbasaur\n''') == '1'\n\nassert solution('''\nF\n''') == '0'\n\nassert solution('''\naBddulbasaurrgndgbualdBdsagaurrgndbb\n''') == '0'"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n\nBash wants to become a Pokemon master one day. Although he liked a lot of Pokemon, he has always been fascinated by Bulbasaur the most. Soon, things started getting serious and his fascination turned into an obsession. Since he is too young to go out and catch Bulbasaur, he came up with his own way of catching a Bulbasaur.\n\nEach day, he takes the front page of the newspaper. He cuts out the letters one at a time, from anywhere on the front page of the newspaper to form the word \"Bulbasaur\" (without quotes) and sticks it on his wall. Bash is very particular about case\u00a0\u2014 the first letter of \"Bulbasaur\" must be upper case and the rest must be lower case. By doing this he thinks he has caught one Bulbasaur. He then repeats this step on the left over part of the newspaper. He keeps doing this until it is not possible to form the word \"Bulbasaur\" from the newspaper.\n\nGiven the text on the front page of the newspaper, can you tell how many Bulbasaurs he will catch today?\n\nNote: uppercase and lowercase letters are considered different.\n\n''') == '1':\n    print('Test passed')\nelse:\n    print('Test failed')"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    5 6\n    abc\n    def\n    ghi\n    jkl\n    mno\n    pqr\n    stu\n    ''') == \"YES\"\n\nassert solution('''\n    5 4\n    a z\n    bc d\n    gh i\n    jkl m\n    nop q\n    ''') == \"NO\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 5\nraa\nyoo\ngd\n\"\"\") == \"YES\", \"Should be YES\"\nassert solution(\"\"\"\n3 5\narc\nrac\n\"\"\") == \"NO\", \"Should be NO\"\nassert solution(\"\"\"\n3 4\nacb\nabe\n\"\"\") == \"YES\", \"Should be YES\"\n\"\"\"\n\n// This is marked as PAINLESS on Codewars. :-)\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"YES\"\n\"\"\""
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == 'YES'"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\n\nThe second and third rows from the bottom (rows 1 and 2) are swapped, as shown in the image below:\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\narc\nrac\n\n''') == 'YES', 'Try again'\nassert solution('''2 4\nabcd\nefgh\n\n''') == 'NO', 'Try again'\n\"\"\""
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\narc\\nrac\\n') == 'NO'\n\"\"\""
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES', \"Not quite right\"\n\"\"\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    2 3\n    arc\n    rac\n    ''') == 'YES'\nassert solution('''\n    4 5\n    arc\n    rac\n    rac\n    rac\n    ''') == 'YES'\nassert solution('''\n    1 1\n    arc\n    ''') == 'NO'\nassert solution('''\n    2 4\n    arc\n    rac\n    rac\n    ''') == 'NO'\nassert solution('''\n    1 4\n    arc\n    rac\n    ''') == 'NO'\n''')\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"6 111\") == \"4\"\nassert solution(\"5 10010\") == \"3\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 111\n1111\n10111\n10010\n\"\"\") == \"4\"\n\n\"\"\"\n--- Day 4: Perfectly Spherical Houses in a Vacuum ---\nLet's represent a house by 4 points: (x1, y1), (x2, y2), (x3, y3), (x4, y4).\n\nEach point is represented by a pair of integers (xi, yi).\n\nThe four points are given in the order (x1, y1), (x2, y2), (x3, y3), (x4, y4).\n\nThe points are connected if they are adjacent to each other.\n\nHouses can be moved around during the game and are not allowed to land on them.\n\nFor example, it is possible to place the houses on a 10 by 10 board, with four houses in the middle and two outside the perimeter of the board, like this:\n\n- House (1, 2)\n- House (2, 2)\n- House (3, 2)\n- House (4, 2)\n- House (1, 3)\n- House (2, 3)\n- House (3, 3)\n- House (4, 3)\n- House (1, 4)\n- House (2, 4)\n- House (3, 4)\n\nGiven the coordinates of the houses and a point, determine whether or not the point can be reached from the houses.\n\nFor example, given the following houses:\n\n(1, 2)\n(2, 2)\n(3, 2)\n(4, 2)\n(1, 3)\n(2, 3)\n(3, 3)\n(4, 3)\n(1, 4)\n(2, 4)\n(3, 4)\n\nand the point (1, 1), you should return true, since the point can be reached from the houses at the positions (2, 2), (3, 2), and (4, 2).\n\n(Your program should preferably use a recursive algorithm, since this challenge will test your ability to handle large input arrays.)\n\"\"\"\n\nclass Solution:\n    def rec(self, x1, y1, x2, y2, x3, y3, x4, y4, curr, i, visited, count):\n        curr += 1\n        if curr > 2**31 - 1:\n            return -1\n        if i > 4:\n            return count\n        if (x1, y1) in visited:\n            return count\n        visited.add((x1, y1))\n        count = self.rec(x2, y2, x3, y3, x4, y4, curr, i, visited, count)\n        count = self.rec(x1, y1, x2, y2, x4, y4, curr, i, visited, count)\n        count = self.rec(x1, y1, x3, y3, x4, y4, curr, i, visited, count)\n        count = self.rec(x1, y1, x4, y4, x2, y2, curr, i, visited, count)\n        return count\n    \n    def can_reach(self, x1, y1, x2, y2, x3, y3, x4, y4):\n        curr = 0\n        visited = set()\n        return self.rec(x1, y1, x2, y2, x3, y3, x4, y4, curr, 0, visited, 0)"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 111\") == \"4\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1\n11111\n10011\n111011\n111010\n11010\n''') == '4'\nassert solution('''3 1\n1111\n10111\n10010\n''') == '4'\nassert solution('''7 1\n1111\n10111\n10011\n111011\n111010\n11010\n''') == '5'\n'''"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 111\n1111\n10111\n10010\n''') == '4'\nassert solution('''\n4\n1111\n10111\n10010\n''') == '5'\nassert solution('''\n6\n1111\n10111\n10010\n''') == '0'\nassert solution('''\n5\n1111\n10111\n10010\n''') == '3'\nassert solution('''\n7\n1111\n10111\n10010\n''') == '2'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 111') == '4'\n\ninput() == stdin.readline()\n\ninput() == stdin.readline()\n\ninput() == stdin.readline()\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 111\n1111\n10111\n10010\n''') == '4'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '3 111\\n1111\\n10111\\n10010\\n') == '4'\nassert solution(\n    '5 7\\n7\\n7\\n7\\n7\\n') == '1'\nassert solution(\n    '9 0\\n0\\n0\\n0\\n0\\n') == '0'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 111\"\n    \"1111\"\n    \"10111\"\n    \"10010\"\n) == \"4\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4'\n\"\"\"\n\nstdin = input()\nN, X = list(map(int, stdin.split()))\n\ndict_ = {}\ncount = 0\n\nfor i in range(N):\n    for j in range(X + 1):\n        if str(j) not in dict_:\n            dict_[str(j)] = 0\n        dict_[str(j)] += 1\n\nprint(len(dict_))"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1, 1, 1, 1, 1]) == \"1\"\nassert solution([1, 1, 1, 1, 1, 1]) == \"1\"\nassert solution([1, 1, 1, 1, 2]) == \"1\"\nassert solution([1, 1, 1, 1, 2, 3]) == \"1\"\nassert solution([1, 1, 1, 1, 2, 3, 3, 2]) == \"1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11 11 5\") == \"1\", \"First\"\nassert solution(\"11 2 3\") == \"-1\", \"Second\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == 1\nassert solution(\"1 2 2\") == 2\nassert solution(\"1 3 4\") == -1"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1 1\n2 1\n3 2''') == '1'\nassert solution('''5 10 3\n3 1\n1 2\n2 3\n2 4\n4 5\n3 6\n1 7\n1 8\n2 9\n1 10\n2 11\n3 12\n3 13\n1 14\n3 15\n1 16\n1 17\n2 18\n1 19\n1 20\n2 21\n3 22\n3 23\n1 24\n3 25\n2 26\n1 27\n2 28\n3 29\n1 30\n1 31\n1 32\n3 33\n1 34\n2 35\n1 36\n1 37''') == '4'\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''11 11 5''') == '1'\nassert solution('''11 2 3''') == '-1'\nassert solution('''9 12 9''') == '-1'\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 11 5') == '1', \"example 1\"\nassert solution('11 2 3') == '-1', \"example 2\"\nassert solution('1 1 2 1') == '3', \"example 3\"\nassert solution('1 10 5') == '1', \"example 4\"\nassert solution('1 10 1') == '-1', \"example 5\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 11 5') == 1\nassert solution('11 2 3') == -1\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == 1\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''abacaba''') == 'YES'\nassert solution('''jinotega''') == 'NO'\nassert solution('''aabacaba''') == 'NO'\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"abacaba\") == \"YES\"\nassert solution(\n    \"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abacaba') == \"YES\"\nassert solution('jinotega') == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abacaba') == 'NO'\nassert solution('jinotega') == 'YES'\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\na\nb\nc\n''') == 'YES'\nassert solution('''\n1\n2\n3\n''') == 'NO'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"YES\"\n\n\"\"\"\nimport re\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\nassert solution(\"10 3 12\") == \"10.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2 6''') == '6.5'\nassert solution('''4 2 20''') == '20.0'\nassert solution('''''') == '0.0'\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2 6''') == '6.5', 'test #1'\nassert solution('''4 2 20''') == '20.0', 'test #2'\nassert solution('''1 2 3''') == '2.0', 'test #3'\nprint('all tests passed')\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2 6\n''') == '6.5'\nassert solution('''4 2 20\n''') == '20.0'\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'\n\n\n'''\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n..\n..\n''') == '2'\nassert solution('''4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n..\n..\n\n''') == '2'\nassert solution('''4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 4') == '2'\n\n'''\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '2'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n....\n....\n\n''') == '1'\n\nassert solution('''\n3 4\n....\n.##.\n....\n\n''') == '2'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == '2'\nassert solution('''\n3 4\n....\n.##.\n....\n''') == '1'\nassert solution('''\n4 4\n....\n.##.\n....\n''') == '2'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n....\n.##.\n....\n\n''') == '1', 'First Test Case'\nassert solution('''3 4\n....\n.##.\n....\n\n''') == '2', 'Second Test Case'\n\n'''\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n..\n..\n\nOutput\n2''') == '2'\n\nassert solution('''3 4\n.##.\n....\n.#..\n\nOutput\n1''') == '1'\n\nassert solution('''3 4\n.##.\n...#\n.#..\n\nOutput\n2''') == '2'\n\nprint(solution('''5 6\n...#.\n..##.\n....#\n...##\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"3 4\") == \"2\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"3 4\") == \"2\"\n\"\"\"\n\nn, m = (int(i) for i in stdin.split())\n\nl = []\nl.append([False] * m)\nl.append([False] * m)\n\nfor i in range(1, n + 1):\n    l[0][i - 1] = True\n    l[1][i - 1] = True\n\nfor i in range(1, m + 1):\n    l[0][i - 1] = True\n    l[1][i - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[1][j - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[1][j - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True:\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[1][j - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[1][j - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j - 1] = True\n\nfor i in range(1, n + 1):\n    for j in range(1, m + 1):\n        if l[0][j - 1] == True and l[1][i - 1] == True:\n            l[0][j - 1] = True\n            l[1][j"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n\n'''\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '8'\nassert solution('6') == '7'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('1 1 3') == '6'\n\"\"\"\n\nN = int(stdin())\nd = list(map(int, stdin().split()))\n\nfrom collections import defaultdict\nd_freq = defaultdict(int)\n\nfor i in range(1, N+1):\n    d_freq[i] += d[i-1]\n    d_freq[i-1] += d[i-1]\n\nres = 0\nfor i in range(1, N):\n    res += d_freq[i]\n    res += d_freq[i-1]\n\nprint(res % 998244353)\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 1, 3]) == '6'\nassert solution([3, 1, 3]) == '6'\nassert solution([3, 1, 3]) == '6'\nassert solution([3, 1, 3]) == '6'\nassert solution([3, 1, 3]) == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"13\"\nassert solution(\"8\") == \"1095\"\n\nfrom sys import setrecursionlimit\n\nsetrecursionlimit(10 ** 6)\n\nprint(solution(\"5\"))"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6'\nassert solution('1') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 1 3\n''') == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 3') == '6'\nassert solution('3\\n1 2 3') == '0'\nassert solution('3\\n1 3 3') == '3'\n\n(8-2-1)\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 1 3\n''') == '6'\nassert solution('''\n3\n1 1 3\n''') == '1'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 1 3\n''') == '6'\nassert solution('''\n5\n1 1 3\n''') == '4'\nassert solution('''\n10\n3 2 4 2 5 1 4 4 3\n''') == '36'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11'\nassert solution('5\\n2 3 7') == '2'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4 3 7 5\\n') == '11'\nassert solution('10\\n1 4 3 2 5 1\\n') == '11'\nassert solution('5\\n1 3 4 5\\n') == '11'\nassert solution('5\\n1 2 3 4\\n') == '1'\nassert solution('5\\n1 2 3 4\\n') == '0'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '11'\nassert solution('4') == '4'\nassert solution('3') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11'\nassert solution('5\\n1 2 5 7') == '9'\nassert solution('5\\n3 4 7 5') == '8'\nassert solution('5\\n4 1 3 7 5') == '3'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"11\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 4 3 7 5\\n') == '11\\n3\\n1\\n4\\n2'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3') == '1'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '11'\nassert solution('3') == '4'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1.1'\nassert solution('1 1') == '1.1'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 1\") == \"10.25\"\nassert solution(\"6 2\") == \"10.3\"\nassert solution(\"3 100\") == \"9.2\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1.5\"\nassert solution(\"1 2\") == \"1.5\"\nassert solution(\"10.2\") == \"10.5\"\nassert solution(\"10.0\") == \"10.0\"\nassert solution(\"10.2\") == \"10.2\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 1\n10.245''') == '10.25'\n\nassert solution('''6 2\n10.245''') == '10.3'\n\nassert solution('''3 100\n9.2''') == '9.2'\n\n'''\nThe task is just to find out how the maximum grade can be obtained in t seconds, but the easiest way to get this is to work with the rules:\n\nIf there is one digit after the decimal place, it stays unchanged.\nIf the next digit is greater than 5, it should be increased by 1.\nIf the next digit is less than 5, it should be unchanged.\nAfter the operation, all trailing zeroes are thrown away.\nThis simple process can be used to find out the maximum grade in t seconds, but in this case, we need to perform some rounding operations.\n\nThus, we can use the same algorithm as before, with one additional step:"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\nassert solution('7 1') == '10.0'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25'\nassert solution('6 2\\n10.245\\n') == '10.3'\nassert solution('3 100\\n9.2\\n') == '9.2'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '10.2'\nassert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\n\n\"\"\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1\\n10.245\\n') == '10.25'\nassert solution('6 2\\n10.245\\n') == '10.3'\nassert solution('3 100\\n9.2\\n') == '9.2'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'Impossible'\nassert solution('0') == 'Impossible'\nassert solution('0 0 1') == '0 1'\nassert solution('0 0 0 1') == '1'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == 'Impossible'\nassert solution('1 2 2 1') == '0110'\n\n\n\n---\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '0110'\nassert solution('1 2 2 1') == '0110'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '0110'\nassert solution('1 2 2 1') == 'Impossible'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2 2 1''') == '0110'\nassert solution('''2 2 2 0''') == 'Impossible'\nassert solution('''1 2 3 4''') == 'Impossible'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3 4\") == \"0110\"\nassert solution(\"1 2 2 1\") == \"100\"\n\"\"\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 4''') == \"0110\"\nassert solution('''1 2 2 1''') == \"0110\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"2\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\n*.**PP.*P.*\") == \"3\"\nassert solution(\"10\\n*.PPPPPP*\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '3'\nassert solution('10') == '2'"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n*PPP*\n''') == '1'\nassert solution('''\n10\n*PPPPPPPPPPP*\n''') == '3'\nassert solution('''\n12\n*P*PPPPPPP*PPP*\n''') == '8'\nassert solution('''\n3\n*PP*P*\n''') == '0'"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nP..PP') == '3'\nassert solution('6\\n*..P*P*') == '2'"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '3'\nassert solution('10') == '2'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n.*P*P*\") == \"3\"\nassert solution(\"2\\n*P*.P*\") == \"2\"\nassert solution(\"3\\n..PP.P.*\") == \"1\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '3'\nassert solution('10') == '2'"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n*.P*.\n\n5\n*..P*\n*.*P*\n\n3\n*.P*.\n\n10\n.**PP.*P.*''') == \"2\"\nassert solution('''10\n..P*PP*.\n\n6\n.P**P**P*P*\n\n10\n.**PP**.\n\n2\n.P**P**P*P*''') == \"3\"\nassert solution('''10\n..P*P*P*.\n\n6\n.P**P**P*P*\n\n10\n.**PP**.\n\n2\n.P**P**P*P*''') == \"5\""
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n.**PP.*P.*\\n') == '3'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1\n2''') == '8'\nassert solution('''3\n1\n2''') == '16'\nassert solution('''4\n1\n2''') == '4'\nassert solution('''5\n1\n2''') == '4'\nassert solution('''6\n1\n2''') == '4'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n') == '4'\nassert solution('6\\n') == '8'\nassert solution('10\\n') == '16'\nassert solution('20\\n') == '32'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '8'\nassert solution('4') == '16'\nassert solution('1000000') == '4'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"16\""
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1\n1''') == '4'\nassert solution('''3\n1\n2\n2''') == '16'\nassert solution('''4\n1\n1\n1\n1\n1''') == '10'\nassert solution('''5\n1\n2\n2\n2\n2''') == '18'\nassert solution('''100\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == '98'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n''') == '8'\nassert solution('''\n3\n''') == '4'\nassert solution('''\n3\n''') == '4'\nassert solution('''\n''') == '0'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 5 2 1\n1 3 9 7\n''') == '1 3 9 7'\nassert solution('''100 100 52 50 46 56\n''') == '17 8 86 92'\nassert solution('''1 1 1 1 1 1\n''') == '0 0 0 0'\nassert solution('''5 5 2 1\n1 3 9 7\n''') == '1 3 9 7'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4 2 0 0\n0 0 4 0\n0 0 4 0\n0 0 4 0\n0 0 4 0\n''') == '1 3 9 7'\nassert solution('''\n3 3 4 0 0\n0 0 3 4\n0 0 3 4\n0 0 3 4\n0 0 3 4\n''') == '1 3 9 7'\nassert solution('''\n4 5 7 5\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n''') == '1 3 7'\nassert solution('''\n8 5 8 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n''') == '1 3 8'\nassert solution('''\n8 8 8 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n''') == '1 3 8'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 1 2') == '3 2'\nassert solution('5 5 5 2') == '1 5'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '1 3 5'\nassert solution('4 8 2 6 3') == '3 5'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\") == \"0 0\"\nassert solution(\"1 2 2\") == \"0 1\"\nassert solution(\"1 1 1\") == \"1 1\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\""
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 5 6 7') == '2 4'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'\nassert solution('10 5 4 10 4 4') == '1 4'"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 5 5 2 1') == '1 3 9 7'\nassert solution('3 5 2 1') == '2 1 5 3'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 3\") == \"2 2\"\nassert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\n\nstdin = \"\"\"\n30 40\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"FTTTTTTFF\") == \"Yes\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"Yes\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\", \"Should be Yes\"\nassert solution(\"FTFTTFTF\") == \"No\", \"Should be No\"\nassert solution(\"FTTTFTTT\") == \"Yes\", \"Should be Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('TTTFFTTT') == 'No'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"F\") == \"Yes\"\nassert solution(\"TTT\") == \"No\"\n\"\"\"\n\nfrom collections import deque\nimport re"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\n\"\"\"\n\nstdin: str = input()\n\ns = stdin.split()\n\nx = int(s[0])\ny = int(s[1])"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('FTFFF') == 'No'\nassert solution('TTTT') == 'No'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"FTFFF\") == \"No\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('FTFFTFFF') == 'Yes', 'Example test case failed'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('FTFFTFFF') == 'Yes','sample'\nassert solution('FTFFTFFF') == 'No','real'"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '2'\nassert solution('2\\n') == '3'\nassert solution('3\\n') == '5'\nassert solution('4\\n') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '6'\n\n\n\"\"\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n''') == '2'\nassert solution('''\n3\n''') == '5'\nassert solution('''\n4\n''') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n''') == '2'\nassert solution('''2\n''') == '3'\nassert solution('''3\n''') == '5'\nassert solution('''4\n''') == '6'\nassert solution('''5\n''') == '8'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('5') == '10'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '2\\n'\nassert solution('2\\n') == '3\\n'\nassert solution('3\\n') == '5\\n'\nassert solution('4\\n') == '6\\n'"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1.3333333333\"\nassert solution(\"4\") == \"2.0\"\nassert solution(\"10\") == \"2.0\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3\n3\n''') == \"1.3333333333\"\nassert solution('''5\n10 9 8 7 6\n6\n''') == \"7.0\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1.3333333333'\nassert solution('1') == '1.0'\nassert solution('2') == '0.5'\nassert solution('4') == '0.66666666666'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3\n3\n''') == '1.3333333333', '3.5'\nassert solution('''\n4\n3 2 1\n1\n''') == '0.25', '0.2'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 3\n3\n''') == '1.3333333333'\nassert solution('''3\n1 2 3\n2\n''') == '0.3333333333'\nassert solution('''3\n1 2 3\n3\n''') == '0.3333333333'\nassert solution('''3\n2 4 8\n3\n''') == '1.11111111111'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n3\n\n1\n3\n5''') == '1.3330000000000001'\nassert solution('''3\n1 2 3\n3\n\n1\n3\n5''') == '1.3333333333333333'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n3\n\n''') == '1.3333333333', solution"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1.3333333333'\nassert solution('4') == '1.3333333333'\nassert solution('5') == '1.3333333333'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n3 2 1\\n2\\n') == '0.66666666666'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n1 3 2\\n') == '0.5'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n2\\n') == '0.5'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"13 7\"\nprint(solution())\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '13 7'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 2') == '8 1\\n2 5'\nassert solution('3\\n5 2') == '2 3\\n1 4\\n2 1'"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 1 2\n9 7 11 15 5\"\"\") == \"13 7\"\nassert solution(\"\"\"2 100000 569\"\"\") == \"986 605\"\"\".strip())\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '13 7'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('100000 569') == '686 569'"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 2') == '13 7'\nassert solution('5 1 3') == '13 9'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '13 7\\n986 605'\nassert solution('5 1 2') == '13 7\\n986 605'"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\") == \"986 605\"\nassert solution(\"10\\n20 20 10 10 20 20 10 20 20 20\") == \"29 29\"\nassert solution(\"100000\\n1112131415161718192021222324252627282930\") == \"13 13\""
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1 2\n9 7 11 15 5\n''') == '13 7'\nassert solution('''\n2 100000 569\n''') == '986 605'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"3\"\nassert solution(\"3 4 1 1 3\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"-1\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"0\"\nassert solution(\"3 4 1 1 3\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '0'\nassert solution('3 4 1 1 3') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == \"0\"\nassert solution(input_2) == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5 1 2 3') == '0'\nassert solution('3 3 3 3 5') == '1'\nassert solution('3 4 1 1 3') == '0'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"1\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 2 4 4\n2 5 4 10''') == '1'\nassert solution('''3 3 3 3 5\n2 3 5 4 2''') == '0'\nassert solution('''5 5 1 2 3\n2 3 5 4 2''') == '3'\nassert solution('''5 5 2 4 3\n2 3 5 4 2''') == '-1'\nassert solution('''3 4 1 1 3\n2 3 5 4 2''') == '3'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '0'\nassert solution('3 4 1 1 3') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3 3 2 4 4\n2 5 4 10\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n5 5 1 2 3\n2 3 5 4 2\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n3 3 3 3 5\n2 3 5 4 2\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 3 2 4 4\n2 5 4 10\"\"\") == \"1\"\n\nassert solution(\"\"\"3 3 3 3 5\n2 3 5 4 2\"\"\") == \"0\"\n\nassert solution(\"\"\"5 5 1 2 3\n2 3 5 4 2\"\"\") == \"3\"\n\nassert solution(\"\"\"7 7 1 1 3\n2 3 5 4 2\"\"\") == \"3\""
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '4'\nassert solution('5') == '4'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nG3 G3\n''') == '0'\nassert solution('''4\nG4 R4 R3 B3\n''') == '2'\nassert solution('''5\nB1 Y1 W1 G1 R1\n''') == '4'\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nB1 Y1 W1 G1 R1') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1') == '4'\nassert solution('10\\nB2 Y2 W2 G2 R2') == '8'\nassert solution('15\\nB3 Y3 W3 G3 R3') == '13'\nassert solution('25\\nB1 Y1 W1 G1 R1') == '7'\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\nG3 G3\n\n''') == 0\nassert solution('''\n4\nG4 R4 R3 B3\n\n''') == 2\nassert solution('''\n5\nB1 Y1 W1 G1 R1\n\n''') == 4\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"2\", \"G3 G3\"]) == \"0\"\nassert solution([\"2\", \"B1 Y1 W1 G1 R1\"]) == \"4\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '5'\nassert solution('15') == '5'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nG3 G3\n''') == '0'\nassert solution('''4\nG4 R4 R3 B3\n''') == '2'\nassert solution('''5\nB1 Y1 W1 G1 R1\n''') == '4'\nassert solution('''10\nG4 R4 R3 G4 G3 Y4 R4 G4 R4\n''') == '4'\nassert solution('''20\nG4 R4 R3 R4 R3 G4 G3 Y4 R4 G4 R4 G4\n''') == '5'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '0'\nassert solution('4') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\nG3 G3') == '0'\nassert solution('4\\nB1 Y1 W1 G1 R1') == '4'\nassert solution('5\\nB1 Y1 W1 G1 R1') == '0'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 4 3\n4 7 6 5\n''') == \"2 6\"\nassert solution('''\n5 10 30 5 6 24\n10 41 7 8 24\n''') == \"3 11\"\nassert solution('''\n6 6 9 9 1\n1 2 3 2 2\n''') == \"2 3\"\n\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2 6\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"2 6\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"5\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2 6\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"5\") == \"3 11\"\nassert solution(\"3\") == \"2 5\""
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 6\"\nassert solution(stdin=\"3 3 4 3\") == \"2 6\"\nassert solution(stdin=\"4 7 6 5\") == \"3 11\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3 4 3') == '2 6'\nassert solution('5 10 30 5 6 24') == '3 11'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n10 30 5 6 24\\n10 41 7 8 24') == '3 11'\nassert solution('4\\n3 3 4 3\\n4 7 6 5') == '2 6'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 3 4 3\\n4 7 6 5\\n') == '2 6'\nassert solution('2\\n1 1\\n100 100\\n') == '1 1'\n\n\"\"\"\nimport sys\nfrom itertools import permutations"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"4\") == \"2 6\"\nassert solution(\"5\") == \"3 11\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 3 4 3\\n4 7 6 5\") == \"2 6\"\nassert solution(\"5\\n10 30 5 6 24\\n10 41 7 8 24\") == \"3 11\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 4\n    ''') == '3B'\nassert solution('''2 2\n    ''') == 'Impossible'\nassert solution('''3 2\n    ''') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\nprint(solution(input()))\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 4\n\n''') == '3B'\n\nassert solution('''2 2\n\n''') == 'Impossible'\n\nassert solution('''3 2\n\n''') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 4\n\n''') == 'Impossible'\n\nassert solution('''\n1 4\n\n''') == '3B'\n\nassert solution('''\n2 2\n\n''') == 'Impossible'\n\nassert solution('''\n3 2\n\n''') == '1A1B'\n\nassert solution('''\n3 1\n\n''') == '1A1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"3B\"\n\n\"\"\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '25'\nassert solution('3 2') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4') == '3'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n''') == '3'\nassert solution('''5 4\n''') == '25'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\nassert solution('1 10') == '101'"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\n\"\"\"\n\nimport math\nfrom math import sqrt"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n''') == '3'\n\nassert solution('''3 4\n''') == '25'\n\n'''"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '3'\nassert solution('3 4') == '25'\nassert solution('5 4') == '25'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\nassert solution('100 8') == '2'\n\n\"\"\"\n\nimport math\n\np,k = map(int, input().split())"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"4 4\n    4 1 2 3\n    0 2 -3 1\n    1 2\n    2 3\n    3 4\n    4 2\n    \"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n''') == '1'\nassert solution('''\n3 3\n1 1 2\n-1 -2\n0 2\n1 1\n1 2\n''') == '2'\nassert solution('''\n8 9\n8 1 2 3 4 5 6 7 8\n-8 -8 -2 -4 -4 -2 -4 -2 -4 -2\n-7 -2 -4 -4 -2 -4 -2 -4 -2\n-6 -4 -4 -2 -4 -2 -2 -2 -2\n-5 -4 -4 -2 -2 -2 -2 -2 -2\n-4 -4 -4 -2 -2 -2 -2 -2 -2\n-3 -4 -4 -2 -2 -2 -2 -2 -2\n-1 -4 -4 -2 -2 -2 -2 -2 -2\n''') == '4'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nassert solution('1 10\\n2 3\\n3 4') == '10'\nprint(solution('''1 10\n2 3\n3 4'''))\nprint(solution('''1 10\n2 3\n3 4'''))"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2''') == '1'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n''') == '1'\nassert solution('''4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n''') == '1'\nassert solution('''2 1\n0 1\n1 1\n''') == '0'\nassert solution('''2 1\n0 1\n1 0\n''') == '0'\nassert solution('''5 2\n1 1 -1 1\n1 1\n1 1\n1 1\n1 1\n''') == '0'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\"\nassert solution(\"5 5\\n4 2 4 3\\n0 2 -1 3\\n1 2 3\\n2 2\\n3 4\\n4 3\\n\") == \"3\"\nassert solution(\"6 6\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n\") == \"1\"\nassert solution(\"5 5\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\\n\") == \"1\"\nassert solution(\"3 5\\n1 1 2\\n1 1\\n1 2\\n2 3\\n3 4\\n\") == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"10 10\") == \"0\""
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n.o.\\no.T\") == \"2\"\nassert solution(\"3 3\\nS.o\\n.o.\\no.T\") == \"3\"\nassert solution(\"3 4\\nS.o\\n.o.\\no.T\") == \"1\""
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 3\n.o\n.o.\no.T\"\"\") == \"2\"\nassert solution(\"\"\"10 3\nS.o\nS.o\no.T\nS.o\nS.o\nS.o\n.o\nS.o\no.T\nS.o\no.T\"\"\") == \"7\"\nassert solution(\"\"\"10 3\nS.o\nS.o\no.T\nS.o\nS.o\nS.o\n.o\nS.o\no.T\nS.o\no.T\"\"\") == \"9\"\nassert solution(\"\"\"50 5\n.S.o\no.S.o\n.o.o\nS.S.o\no.S.o\nS.S.o\n.o.o\nS.o.o\no.S.o\no.S.o\nS.S.o\n.o.o\nS.S.o\nS.S.o\no.S.o\nS.S.o\nS.o.o\nS.o.o\nS.S.o\n.o.o\nS.S.o\no.S.o\nS.o.o\nS.S.o\nS.o.o\nS.S.o\n.o.o\nS.o.o\nS.S.o\no.S.o\nS.S.o\nS.o.o\nS.o.o\nS.S.o\n.o.o\nS.o.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S.o\nS.S"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 2\") == \"-1\"\n\n------------------\nhttps://www.hackerrank.com/challenges/sorting-containers-with-multiple-values/problem\n'''"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '2'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n.o\n.o\no.T''') == '2'\nassert solution('''5 5\n.o\n.o\no.S\no.o\n.o''') == '1'\nassert solution('''3 4\n.S\n.o\no.T''') == '0'\n''')\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\nS.o\\n.o.\\no.T') == '2'\nassert solution('3 3\\nS.o\\n.o.\\no.T') == '-1'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"8 6\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''3 2''') == '3'\nassert solution('''199 200''') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n\nOutput\n1''') == '1'\n\nassert solution('''3 2\n\nOutput\n3''') == '3'\n\nassert solution('''199 200\n\nOutput\n200''') == '200'"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n\n\"\"\"\n\na, b = map(int, stdin.split())\n\nprint(round(a / (a + b) * b) / a)\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n\n\n'''\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1\n''') == '1'\nassert solution('''3 2\n''') == '3'\nassert solution('''199 200\n''') == '200'"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\"\"\"\nimport collections"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n5 2\n3 3''') == 'Aoki'\n\nassert solution('''2\n4 1\n3 1''') == 'Takahashi'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Takahashi'\nassert solution('2') == 'Aoki'"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki'\nassert solution('2\\n5 2\\n2 3') == 'Takahashi'\nassert solution('5\\n8 4\\n3 6') == 'Takahashi'\nassert solution('5\\n8 2\\n3 6') == 'Aoki'\n\"\"\"\n\nn = int(input())\na, b = [int(i) for i in input().split()]\nwhile (a % b!= 0 or b % a!= 0):\n    a, b = sorted([a, b])\nprint('Takahashi' if a > b else 'Aoki')\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'Aoki'\nassert solution('2 2') == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n5 2') == 'Aoki'\nassert solution('2\\n2 3') == 'Takahashi'\n\"\"\"\n\nn = int(input())\n\na, k = [int(i) for i in input().split()]"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'Aoki'\nassert solution('1') == 'Takahashi'\nassert solution('5 2') == 'Aoki'\nassert solution('2') == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"2\\n3 2\\n3 3\") == \"Takahashi\"\nassert solution(\"2\\n3 2\\n4 4\") == \"Takahashi\"\nassert solution(\"2\\n3 2\\n4 4\") == \"Takahashi\"\nassert solution(\"2\\n1 1\\n3 3\") == \"Takahashi\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"1\\n2 2\") == \"Takahashi\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 2\") == \"Aoki\"\nassert solution(\"3\\n2 3\") == \"Takahashi\"\n\"\"\"\nfrom math import ceil\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n5 2') == 'Aoki', 'Expected: Aoki, Actual: {}'.format(solution('2\\n5 2'))\nassert solution('3\\n3 3') == 'Takahashi', 'Expected: Takahashi, Actual: {}'.format(solution('3\\n3 3'))\nassert solution('1\\n2 2') == 'Takahashi', 'Expected: Takahashi, Actual: {}'.format(solution('1\\n2 2'))\nassert solution('1\\n2 2') == 'Takahashi', 'Expected: Takahashi, Actual: {}'.format(solution('1\\n2 2'))"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '8'\nassert solution('''\n3 3\n''') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\n\"\"\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 2\n''') == '0'\nassert solution('''3 3\n1 2\n3 4\n5 6\n7 8\n''') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n''') == '0'\nassert solution('''3 3\n''') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n''') == '0\nassert solution('''3 3\n''') == '8\n\n'''\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\nprint(solution(input))\n\n\n\"\"\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\n\n'''\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n3 3''') == '8'\nassert solution('''3 3\n2 2\n1 3\n3 1''') == '6'\nassert solution('''3 5\n3 3\n5 2\n4 1\n4 3\n2 4''') == '10'\nprint('\"Run\" is good. Great job!')"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 4\") == \"0\""
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"2 3 1\") == \"1\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == \"1\"\nassert solution(s) == \"0\"\nassert solution(s) == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 3') == '0'"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 3') == '0'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('1 1') == '0'"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"0\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"1\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '-1'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '-1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"1\"\nassert solution(input_) == \"0\"\nassert solution(input_) == \"-1\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == solution.__doc__\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '17:00'\nassert solution('24') == '17:30'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n24\n17:30\n''') == '17:30'\nassert solution('''\n12\n17:30\n''') == '17:30'\nassert solution('''\n24\n99:99\n''') == '09:09'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"24\") == \"09:09\"\nassert solution(\"12\") == \"17:30\"\nassert solution(\"12\") == \"17:30\""
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(24, \"99:99\") == \"07:09\"\nassert solution(12, \"17:30\") == \"17:30\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('24') == '09:09'\nassert solution('12') == '17:30'\nassert solution('24') == '07:09'\nprint(solution(input()))\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"12:00\"\nassert solution(\"24\") == \"00:00\"\nassert solution(\"99\") == \"09:00\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"00:00\"\nassert solution(\"24\") == \"00:00\"\nassert solution(\"00:99\") == \"00:09\"\nassert solution(\"24:00\") == \"00:00\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('24') == '09:09'\nassert solution('12') == '07:09'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"24\") == \"09:09\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '6'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '6'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6'\nassert solution('4 4\\n1 2 1\\n2 3 1\\n3 1 1\\n4 1 1') == '5'\nassert solution('2 1\\n2 1\\n3 1') == '3'\nassert solution('1 1') == '2'"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3\n2\n1 2 1\n2 3 1\n3 1 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 3\n2\n1 2 1\n2 3 1\n3 1 1\n\"\"\") == \"8\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"2\""
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '6'\nassert solution('5 3') == '4'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"10\"\nassert solution(\"4 5\") == \"9\"\nassert solution(\"3 5\") == \"10\"\nassert solution(\"7 3\") == \"10\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == '6'"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '6'"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '5'\nassert solution('3') == '2 2'\nassert solution('4') == '1 2'\nassert solution('5') == '4 4'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '1\\n0\\n'\n) == '0\\n'\nassert solution(\n    '6\\n2 0 3 0 1 1\\n'\n) == '5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"1\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 5 5 7 7 1 2 3\") == \"5 7\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '-1'\nassert solution('6') == '5'\nassert solution('6 5') == '2 1'\nassert solution('6 5 6') == '2 1 3 3'\nassert solution('6 5 6 6') == '2 1 3 3 6'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n0\n\n''') == '0'\n\nassert solution('''\n4\n2 2 2 2 1 1\n\n''') == '-1'\n\nassert solution('''\n6\n3 2 2 2 1 1\n\n''') == '5'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"6\") == \"0\"\nassert solution(\"10\") == \"2\"\nassert solution(\"15\") == \"4\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n2 0 3 0 1 1\n''') == '5\nassert solution('''\n1\n0\n''') == '0\nassert solution('''\n6\n3 2 2 2 1 1\n''') == '-1\n'''\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '5 2 1'\n\nassert solution(input) == '-1'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 0 2\n1 2 0\n1 0 3\n1 1 0''') == '-1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 8\\n12 20\") == \"2\"\nassert solution(\"3 10\\n10 20 30\") == \"1\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10\\n10 20 30') == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 8\n12 20\n''') == \"2\"\n\nassert solution('''\n3 10\n10 20 30\n''') == \"1\""
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 8\n12 20''') == '2'\nassert solution('''3 10\n10 20 30''') == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 8') == '2'\nassert solution('3 10') == '1'\nassert solution('4 10') == '1'\n\n\n\"\"\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 8') == '2'\nassert solution('3 10') == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 8\n12 20''') == '2'\nassert solution('''3 10\n10 20 30''') == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 8\") == \"2\"\nassert solution(\"3 10\") == \"1\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '2'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"2\"\nassert solution(input_) == \"1\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('0 0 100 1000') == '11.547005383792516398'\nassert solution('-1 -1') == '0.000000000000000'\nassert solution('-1 0') == '1.000000000000000'\nassert solution('0 0 0') == '0.000000000000000'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('3 2') == '0.00999999'\nassert solution('-1 -1') == '1.0'\nassert solution('-1 0') == '1.5000000000000002'\nassert solution('0 0 0') == '0.000000000'"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '11.547005383792516398'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 5 5\") == \"3.729935587093555327\"\nassert solution(\"3 2\") == \"1.249999999999999998\"\nassert solution(\"100 1000\") == \"11.547005383792516398\"\nassert solution(\"-50 0\") == \"7.93162659339980685\"\nassert solution(\"50 0\") == \"1.141666666665906676\""
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('0 0 1000 1000') == '14.1627071409505427'"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 5 5\") == \"3.729935587093555327\"\nassert solution(\"100 1000\") == \"11.547005383792516398\""
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == '3.729935587093555327'\nassert solution('''0 0 0 1000\n100 1000\n-50 0\n50 0\n''') == '11.547005383792516398'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 5 5\") == \"3.729935587093555327\"\nassert solution(\"100 1000\") == \"11.547005383792516398\"\nassert solution(\"-50 0\") == \"3.729935587093555327\"\nassert solution(\"50 0\") == \"11.547005383792516398\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('3 2') == '3.729935587093555327'\nassert solution('100 1000') == '11.547005383792516398'\n\nassert solution('0 0 1000') == '11.547005383792516398'\nassert solution('1000 1000') == '11.547005383792516398'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('0 0 0 1000') == '11.547005383792516398'"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'First'\nassert solution('2') == 'Second'\nassert solution('3') == 'Second'\nassert solution('4') == 'First'\nassert solution('5') == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"Second\"\nassert solution(\"1\") == \"First\"\nassert solution(\"2\") == \"Second\"\nassert solution(\"21\") == \"First\"\nassert solution(\"476523737\") == \"First\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1\n10\n2\n1 2''') == 'Second'\nassert solution('''2\n1\n10\n2\n1 2''') == 'First'\nassert solution('''3\n1\n10\n2\n1 2''') == 'First'\nassert solution('''4\n1\n2\n1\n2''') == 'First'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Second\"\nassert solution(\"10\") == \"First\"\nassert solution(\"2\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2\n1 2\n''') == 'Second'\nassert solution('''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n10\n2\n1 2''') == 'Second'\nassert solution('''5\n1\n5\n2\n3\n5\n6''') == 'First'\nassert solution('''6\n1\n5\n2\n3\n5\n6''') == 'First'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    3\n    1\n    10\n    2\n    1 2\n    21\n    476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second'\nassert solution('''\n    3\n    1\n    10\n    2\n    1 2\n    21\n    476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'First'\nassert solution('''\n    3\n    1\n    10\n    2\n    1 2\n    21\n    476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second'\n'''\n\nimport sys\n\nsys.setrecursionlimit(10**6)\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"Second\"\nassert solution(\"2\") == \"First\"\nassert solution(\"3\") == \"Second\"\nassert solution(\"4\") == \"Second\"\nassert solution(\"5\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Second\\nFirst\\nSecond'\nassert solution('5') == 'Second\\nFirst\\nSecond'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"First\"\nassert solution(\"2\") == \"Second\"\nassert solution(\"3\") == \"First\"\nassert solution(\"4\") == \"Second\"\nassert solution(\"5\") == \"First\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 2') == '1'\nassert solution('6 4 2') == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 2') == '1'\nassert solution('10 4 2') == '0'\nassert solution('10 0 4 2') == '0'\nassert solution('10 5 3 2') == '0'\nassert solution('10 5 3 2 1') == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 2') == '1'\nassert solution('4 3 1 5 2') == '1'\n\"\"\"\nimport math\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"4 3 1 5 2\") == \"1\"\nassert solution(\"6 3 2\") == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\\n4 3 1 5 2\") == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\") == \"1\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"24\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"12\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    1 1\n    ''') == '1'\nassert solution('''\n    3 2\n    ''') == '24'"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 1\"\n) == \"1\"\n\nassert solution(\n    \"3 2\"\n) == \"24\"\n\nassert solution(\n    \"4 2\"\n) == \"55\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3') == '1196'\nassert solution('31 8') == '64921457'\n\n\n\n\n\n\n########################\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('31 8') == '64921457'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\n\nassert solution(\"31 8\") == \"64921457\"\n\n\"\"\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 1\n1 2\n2 3\n3 2\n2 4\n''') == '3'\nassert solution('''10 5\n1 1\n1 2\n2 1\n1 4\n1 5\n2 1\n3 2\n1 1\n4 1\n5 2\n3 3\n2 1\n5 2\n3 1\n1 5\n2 4\n1 4\n1 4\n2 5\n4 4\n4 4\n2 4\n1 4\n1 5\n1 4\n2 5\n3 2\n4 2\n5 1\n3 1\n3 1\n3 1\n1 4\n1 5\n4 3\n4 3\n3 3\n3 3\n3 3\n3 4\n3 4\n3 5\n2 5\n5 3\n2 4\n3 2\n4 2\n3 4\n4 2\n3 3\n5 2\n3 2\n5 3\n3 4\n3 4\n3 4\n''') == '10'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\"\n'''\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2''') == '6'\nassert solution('''4 4''') == '3'\nassert solution('''7 3''') == '1196'\nassert solution('''31 8''') == '64921457'\n\n\"\"\""
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\nassert solution('31 8') == '64921457'\nassert solution('55 55') == '0'\n\n\n\n'''\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == '6'\nassert solution(\"4 4\") == '3'\nassert solution(\"7 3\") == '1196'\nassert solution(\"31 8\") == '64921457'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3,2]) == \"6\"\nassert solution([4,4]) == \"3\"\nassert solution([7,3]) == \"1196\"\nassert solution([31,8]) == \"64921457\"\nassert solution([0,0]) == \"1\""
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 2') == '#.X#'\nassert solution('5 4 5') == '#X#.X'\nassert solution('5 4 10') == 'X#.XXX'\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2\") == \"##.#\"\nassert solution(\"5 4 5\") == \"##.#\"\nassert solution(\"5 5 5\") == \"##.#\"\nassert solution(\"5 5 5\") == \"##.#\"\nassert solution(\"5 5 5\") == \"##.#\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 2') == '#.X#\\nX.#.\\n#...\\n'\nassert solution('5 4 5') == '#XXX\\n#X#.\\nX#..\\n...#\\n#.#.'\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4 5\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 2') == '#.X#'\nassert solution('5 4 5') == '#XXX'\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2\") == \"#.X#\"\nassert solution(\"5 4 5\") == \"#X#.X\"\nassert solution(\"5 5 5\") == \"X#.X#\"\nassert solution(\"10 10 10\") == \"XXX\"\n\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0432\u043e\u0434\u0430\n\n\u041d\u0430 \u043f\u0435\u0440\u0432\u044b\u0445 \u0434\u0432\u0443\u0445 \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u0434\u0430\u043d\u043e \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 n \u0438 m (1 \u2264 n, m \u2264 500), \u043a\u0430\u0436\u0434\u043e\u0435 \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 n \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u0434\u0430\u043d\u043e n \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043d\u0435\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0441\u0442\u0440\u043e\u043a, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435 \u043f\u0443\u0441\u0442\u0430\u044f \u0438 \u043d\u0435 \u0440\u0430\u0432\u043d\u0430 \u0441\u0438\u043c\u0432\u043e\u043b\u0443 \".\" \u0438\u043b\u0438 \"#\".\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442\u0441\u044f \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e k (1 \u2264 k \u2264 n).\n\n\u041d\u0430 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 s (1 \u2264 s \u2264 500). \u0415\u0441\u043b\u0438 s = \"k\", \u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0445\u043e\u0447\u0435\u0442 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u043a\u0430\u0436\u0434\u043e\u0435 \u043f\u0443\u0441\u0442\u043e\u0435 \u043f\u043e\u043b\u0435 \u0432 \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0439 \u043c\u0430\u0442\u0440\u0438\u0446\u0435, \u0430 \u0435\u0441\u043b\u0438 s = \"#\", \u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0445\u043e\u0447\u0435\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u043e \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0445 \u043f\u0443\u0441\u0442\u044b\u0445 \u043c\u0435\u0441\u0442.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0432\u043e\u0434\u0430\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0443 \"X\".\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 n \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u0435\u0439 \u0432 \u043c\u0430\u0442\u0440\u0438\u0446\u0435 \u0438 n \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043e\u0447\u043d\u044b\u0445 \u043f\u0443\u0441\u0442\u044b\u0445 \u043f\u043e\u043b\u0435\u0439.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 n \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0443 \"X\".\n\n\u0412 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u0440\u043e\u043a\u0443 \"X\".\n\nSample Input 1\n\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\") == \"###\"\nassert solution(\"5 4 5\") == \"#X##\"\nassert solution
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 4 2\"\"\") == \"\"\"#.X#\nX.#.\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 1\n''') == '1'\nassert solution('''\n5\n1 2 2 2\n''') == '3'\nassert solution('''\n18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '4'"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1') == '1'\nassert solution('5\\n1 2 2 2 2') == '3'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4') == '4'"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n1 2 2 2\\n\"\n) == \"3\"\nprint(solution(\n    \"5\\n1 2 2 2\\n\"\n))\n\n\"\"\""
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '1'\n\"\"\"\n\nfrom collections import deque\nn = int(input())"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2\n''') == '4'\nassert solution('''\n18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '4'"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 2 2 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n10 5 2 2 3 5 3 6 6 2 6 6 2 2 2 2 3 4 4 4 3 2 2 3 4\n\"\"\") == \"7\"\nassert solution(\"\"\"\n10\n10 5 2 2 3 5 3 6 6 2 6 6 2 2 2 2 2 2 2 2 3 4 4 4 3 2 2 2 2 3 4 4 4 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n1 1\n''') == '1'\n\nassert solution('''\n5\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '3'\n\nassert solution('''\n18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '4'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2\n''') == '1'\nassert solution('''18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '4'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1\n''') == '1'\nassert solution('''\n5\n1 2 2 2\n''') == '3'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5, 3, 2, 4, 1]) == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 3 2\\n\"\n    ) == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 2') == '4 3 1 2 5'\nassert solution('3 3 2') == '3 3 1 2'\nassert solution('3 2 1') == '3 1 2'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\",'sample case 1'\nassert solution(\"4 4 2\") == \"4 3 2 4\",'sample case 2'\nassert solution(\"5 1 2 3 4 5\") == \"5 1 2 3 4 5\",'sample case 3'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"10 5 4 3 2 1\") == \"1 2 3 4 5\""
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2\") == \"1 2\"\nassert solution(\"5 3 2\") == \"2 3 1\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"5 5 5\") == \"5\"\nassert solution(\"2 3 4\") == \"2 3 4\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3', \"Wrong solution\"\nassert solution('4 3 2') == '2 3 4 1', \"Wrong solution\""
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"4 5 2 1\") == \"2 4 1 5\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\""
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n6 9 18 36 108\n''') == 'Yes'\n\nassert solution('''\n2\n7 17\n''') == 'No'\n\nassert solution('''\n9\n4 8 10 12 15 18 33 44 81\n''') == 'Yes'\n'''\n\n\n## Solution"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'Yes'\nassert solution('7') == 'No'\nassert solution('9') == 'Yes'\n\nSolution:\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n3 6 9 18 36 108\n''') == 'Yes'\nassert solution('''2\n7 17\n''') == 'No'\nassert solution('''9\n4 8 10 12 15 18 33 44 81\n''') == 'Yes'\nprint(solution(input()))\n\n##\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n8 5 10 12 15 18 33 44 81''') == 'Yes'\nassert solution('''4\n8 5 10 12 15 18 33 44 81''') == 'No'\nassert solution('''3\n6 9 18 36 108''') == 'Yes'\nassert solution('''3\n6 9 18 36 108''') == 'No'"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n3 6 9 18 36 108\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n2\n7 17\n\"\"\") == \"No\"\nassert solution(\"\"\"\n9\n4 8 10 12 15 18 33 44 81\n\"\"\") == \"No\""
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n3 6 9 18 36 108\\n') == \"Yes\"\nassert solution('2\\n7 17\\n') == \"No\"\nassert solution('9\\n4 8 10 12 15 18 33 44 81\\n') == \"Yes\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n3 6 9 18 36 108\n\n''') == 'Yes'\nassert solution('''\n2\n7 17\n\n''') == 'No'\nassert solution('''\n9\n4 8 10 12 15 18 33 44 81\n\n''') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n6 9 18 36 108\n''') == 'Yes'\nassert solution('''2\n7 17\n''') == 'No'\nassert solution('''9\n4 8 10 12 15 18 33 44 81\n''') == 'Yes'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2') == '1'\nassert solution('3\\n1 2 4') == '6'\nassert solution('3\\n-1 1 1') == '5'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5 6\") == \"10\"\nassert solution(\"1 -2 3 4 5 6\") == \"5\"\nassert solution(\"5 1 2 3 4 6\") == \"5\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '6\\n1 2 -6 4 5 3\\n') == '12'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '12'\nassert solution(input()) == '12'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '12'\nassert solution('10') == '19'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2 -6 4 5 3') == '12'\nassert solution('11\\n1 2 5 3') == '33'"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 -6 4 5 3\") == \"12\"\nassert solution(\"7 1 2 -3 4 5 6\") == \"14\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"21\""
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4'\nassert solution('6') == '7'\nassert solution('100') == '200'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n1 2 -6 4 5 3') == '12'\n\"\"\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '5'\nassert solution('4 10') == '6'"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '5'\nassert solution('5 1 4 2') == '5'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n3 1 4 2') == '5'\nassert solution('4 3\\n3 1 4 2') == '5'\nassert solution('4 3\\n1 2 3 4') == '4'"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3\\n3 1 4 2') == '5'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '5'\nassert solution('4 3') == '4'\nassert solution('7 3') == '8'"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"4 3\n3 1 4 2\n\"\"\") == \"5\"\nassert solution(\"\"\"3 1\n2 4 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 1, 4, 2]) == 5\nassert solution([3, 2, 1, 4, 2]) == 4\nassert solution([2, 3, 4]) == 4\nassert solution([10, 9, 8, 7, 6, 5, 4, 3, 2, 1]) == 9\nassert solution([20, 5, 10, 7, 8, 9]) == 5\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 1, 4, 2]) == 5"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"5\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"100 500\") == \"1000\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '5'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3 2 1') == '0 1'\nassert solution('3\\n2 3 1') == '0 1'\nassert solution('3\\n3 2 1') == '2 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"0 0\"\nassert solution(\"2 3 1\") == \"0 1\"\nassert solution(\"3 2 1\") == \"2 1\"\n\nstdin = \"3\"\nstdin = \"4\"\nstdin = \"2 1\"\nstdin = \"3 2 1\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3]) == '0 0'\nassert solution([3, 1, 2]) == '0 1'\nassert solution([3, 1, 2, 4, 5]) == '1 1'\nassert solution([3, 1, 2, 4, 5, 6, 7]) == '1 2'\nassert solution([3, 1, 2, 4, 5, 6, 7, 8]) == '2 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0 0'\nassert solution('3') == '0 1'\nassert solution('1 2 3') == '0 0'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 3\n\n''') == '0 0'\n\nassert solution('''3\n2 3 1\n\n''') == '0 1'\n\nassert solution('''3\n3 2 1\n\n''') == '2 1'\n\n\"\"\"\n\nn = int(input())\np = list(map(int, input().split()))\n\np_max = max(p)\np_min = min(p)"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0 0'\nassert solution('3') == '0 1'\nassert solution('4') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0 0'\nassert solution('3') == '0 1'\nassert solution('3') == '0 2'\nassert solution('3') == '0 0'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3''') == '0 0'\nassert solution('''3\n2 3 1''') == '0 1'\nassert solution('''3\n3 2 1''') == '2 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n') == '0 0'\nassert solution('3\\n3 2 1\\n') == '0 1'\nassert solution('3\\n3 2 1\\n') == '2 1'\nassert solution('3\\n1 2 3\\n') == '0 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 2 3\n''') == '0 0'\nassert solution('''3\n3 2 1\n''') == '2 1'\nassert solution('''3\n3 2 1\n''') == '2 1'\nassert solution('''3\n2 3 1\n''') == '0 1'"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'\n\nassert solution(input()) == '8'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\na\nb\nb\n''') == '6'\nassert solution('''\n4 5\naba\nbba\n''') == '8'"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(['4 5', 'aba', 'bba']) == '8'\nassert solution(['1', 'a', 'a']) == '1'\nassert solution(['2', 'aa', 'b']) == '3'\nassert solution(['3', 'aba', 'bba']) == '8'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"6\"\nassert solution(\"3 3\") == \"8\"\nassert solution(\"4 5\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == 6\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == input()\n\n\n\"\"\"\n\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\"\n\"\"\"\nsolution(input())\n\"\"\""
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '6'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 4\") == \"6\"\nassert solution(\"3 3\") == \"8\"\nassert solution(\"4 5\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 4\naa\nbb\n''') == '6'\nassert solution('''3 3\naba\nbba\n''') == '8'\nassert solution('''4 5\nabbb\nbaaa\n\n''') == '8'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 0') == 'YES'\nassert solution('0 0 1') == 'YES'\nassert solution('0 0 1') == 'YES'\nassert solution('0 0 1') == 'YES'\nassert solution('0 1 1') == 'YES'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 0') == 'YES'\nassert solution('0 0 1') == 'YES'\nassert solution('0 0 1') == 'YES'\nassert solution('0 0 1') == 'YES'\nassert solution('0 1 1') == 'YES'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'YES'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 0 0\n0 0 1\n0 0 1\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"YES\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n') == 'YES'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2 3\") == \"YES\", solution(\"1\\n2 3\")\nassert solution(\"5\\n6 15 35 77 22\") == \"YES\", solution(\"5\\n6 15 35 77 22\")\nassert solution(\"5\\n100 100\") == \"NO\", solution(\"5\\n100 100\")\nassert solution(\"5\\n100 11\") == \"NO\", solution(\"5\\n100 11\")"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n2 3 6 7\n''') == 'YES'\nassert solution('''5\n6 15 35 77 22\n''') == 'YES'\nassert solution('''5\n6 10 15 1000 75\n''') == 'NO'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 3 6 7\n''') == 'YES'\nassert solution('''\n5\n6 15 35 77 22\n''') == 'YES'\nassert solution('''\n5\n6 10 15 1000 75\n''') == 'NO'\nassert solution('''\n0\n''') == 'NO'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('6') == 'YES'\nassert solution('7') == 'NO'\nassert solution('15') == 'YES'\nassert solution('35') == 'YES'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 6 7') == 'YES'\nassert solution('4\\n2 3 6 7') == 'NO'\nassert solution('4\\n6 10 15 1000 75') == 'YES'\nassert solution('4\\n2 3 6 7') == 'NO'\nassert solution('4\\n6 10 15 1000 75') == 'NO'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'NO'\nassert solution('2') == 'YES'\nassert solution('4') == 'YES'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\", \"You failed the task!\""
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"10\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 6 7') == 'YES'\nassert solution('5\\n6 15 35 77 22') == 'YES'\nassert solution('5\\n6 10 15 1000 75') == 'NO'\n\n\"\"\"\nimport itertools"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'NO'"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''100\n60\n70\n''') == '40'\nassert solution('''410\n55\n70\n''') == '5'\nassert solution('''600\n60\n70\n''') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '40'\nassert solution('100\\n60\\n70') == '5'\nassert solution('500\\n60\\n70') == '0'\nassert solution('1000\\n60\\n70') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '100\\n60\\n70\\n') == '40'\nassert solution(\n    '410\\n55\\n70\\n') == '5'\nassert solution(\n    '600\\n60\\n70\\n') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100\\n60\\n70') == '40'\nassert solution('410\\n55\\n70') == '5'\nassert solution('600\\n60\\n70') == '0'\n\nstdin = \"\"\"10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n60\n70''') == '40'\n\nassert solution('''10\n55\n70''') == '5'\n\nassert solution('''412\n60\n70''') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"40\"\nassert solution(\"410\") == \"5\"\nassert solution(\"600\") == \"0\"\nassert solution(\"50\") == \"5\"\nassert solution(\"20\") == \"2\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''100\n60\n70''') == '40'\nassert solution('''410\n55\n70''') == '5'\nassert solution('''600\n60\n70''') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == stdout_, print(\"WRONG!!!\")\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\n60\\n70') == '40'\nassert solution('100\\n60\\n70') == '5'\nassert solution('410\\n55\\n70') == '0'\nassert solution('600\\n60\\n70') == '0'\nprint('Congratulations! Your solution is correct.')"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\nassert solution(\"100\\n60\\n70\") == \"40\"\nassert solution(\"400\\n55\\n70\") == \"5\"\nassert solution(\"600\\n60\\n70\") == \"0\"\nassert solution(\"100\\n60\\n70\\n5\\n10\") == \"5\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 1 1 1\") == \"1\\n1 1\\n1\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 1 1\n1\n1''') == '1'\nassert solution('''10\n3 1 2 4 5 6 7 8 9 10\n3\n1 5 4\n1 2 3 4''') == '7'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['1', '2', '3']) == '2'\nassert solution(['1', '2', '3', '4']) == '3'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"3 4\"\nassert solution(\"5\") == \"1 2 3 5\"\n\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\n6. Write a function:"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == '12'\nassert solution('5') == '1 2 3 4'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n12\n3 1 4 1 5 9 2 6 5 3 5 8\n\n''') == '''3 4\n1 2 3 5\n3 1 5 4\n5 6 8 9\n'''"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input().strip()) == '1 3'\nassert solution(input().strip()) == '1 4'\nassert solution(input().strip()) == '2 2'\nassert solution(input().strip()) == '1 2'\nassert solution(input().strip()) == '4 4'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '6'\n\"\"\"\n\n\nimport collections\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"6\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"3 4\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"6 2\") == \"6\"\nassert solution(\"5 6\") == \"10\"\n\"\"\""
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"5 3\") == \"12\"\nassert solution(\"10 3\") == \"77\"\nassert solution(\"20 3\") == \"19360\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '6'\nassert solution('3 1') == '6'\nassert solution('3 3') == '12'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"3 2\") == \"0\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"4 2\") == \"7\"\nassert solution(\"5 3\") == \"6\"\nassert solution(\"6 3\") == \"4\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '6'\nassert solution('3 1') == '6'\nassert solution('5 1') == '10'\nassert solution('4 4') == '100000'\nassert solution('4 4') == '100000'\n'''\n\n'''\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '6'\nassert solution('7 2') == '7'\nassert solution('7 1') == '7'\nassert solution('5 2') == '4'\nassert solution('5 1') == '5'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"4 4\") == \"36\"\nassert solution(\"4 5\") == \"54\"\nassert solution(\"10 5\") == \"60\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('10') == '10'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\n30') == '10'\nassert solution('50\\n18') == '-1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"10\"\n\n\"\"\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3') == '-1'\nassert solution('1\\n1') == '-1'\nassert solution('10\\n99') == '10'\nassert solution('2\\n3') == '10'\nassert solution('10\\n85') == '-1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('87654') == '10'\nassert solution('30') == '-1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n30') == '10'\nassert solution('1\\n20') == '-1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n6\") == \"10\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"100\\n-1\") == \"100\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\") == \"10\"\nassert solution(\"10\\n50\") == \"-1\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\") == \"1\"\nassert solution(\"3\\n7\") == \"1\"\nassert solution(\"5\\n7\") == \"1\"\nassert solution(\"5\\n10\") == \"2\"\nassert solution(\"2\\n7\") == \"1\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '10'\nassert solution('3') == '10'\nassert solution('5') == '10'\nassert solution('10') == '10'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aba') == 'Second'\nassert solution('abc') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aba') == 'Second'\nassert solution('aab') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    'aba') == 'Second'\nassert solution(\n    'bca') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aba') == 'Second'\nassert solution('aabb') == 'Second'\nassert solution('aabba') == 'Second'\nassert solution('baba') == 'First'\nassert solution('abcd') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aba') == 'Second'\nassert solution('efgh') == 'First'\nassert solution('aaba') == 'Second'\n\"\"\"\n\n\nclass Solution:\n\n    def solve(self):\n        # Write your code here\n        chars = stdin.readline().strip()\n        if chars[0] == chars[-1]:\n            return \"First\"\n        else:\n            return \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aba') == 'Second'\nassert solution('aabb') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aba') == 'Second'\nassert solution('pwwkew') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''aba''') == 'Second'\nassert solution('''abc''') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"Second\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '6'\nassert solution('16') == '40'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\n12345\\n\") == \"6\"\nassert solution(\"16\\n439873893693495623498263984765\\n\") == \"40\"\nassert solution(\"1\\n2\\n\") == \"3\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12345\") == '6'\nassert solution(\"439873893693495623498263984765\") == '40'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '40'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('16') == '40'\nassert solution('12345') == '6'\nassert solution('4') == '4'\n\n'''\n\na, b = input(), input()"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n56789''') == '40'\nassert solution('''9\n8910101234567890''') == '21'\nassert solution('''3\n439873893693495623498263984765''') == '41'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''12\n22\n33\n44\n55\n66\n77\n88\n99\n100''') == '7'\n\nassert solution('''40\n34\n42\n49\n77\n13\n14\n15\n42''') == '6'\n\nassert solution('''32\n41\n33\n51\n56\n77\n88\n89\n90\n92\n94\n97\n98''') == '10'\n\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '15'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"6\", 'wrong answer'\n\nassert solution(\"10\") == \"10\", 'wrong answer'\n\nassert solution(\"16\") == \"40\", 'wrong answer'\n\nassert solution(\"12345\") == \"6\", 'wrong answer'\n\nassert solution(\"39873893693495623498263984765\") == \"40\", 'wrong answer'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('10') == '9'\nassert solution('100') == '10'\nassert solution('1000') == '9'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"332748119\"\nassert solution(\"1 2\") == \"332748119\"\nassert solution(\"3 3\") == \"160955686\"\nassert solution(\"4 3 5\") == \"974061117\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n1\n1\n\n''') == '332748119'\n\nassert solution('''\n1 2\n1\n1\n\n''') == '160955686'\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n\n''') == '974061117'\n\nassert solution('''\n1 2\n1\n1\n\n''') == '3'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '332748119'\nassert solution('1 2') == '165'"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''3 3\n0 1 1\n4 3 5\n''') == '160955686'\nassert solution('''2 2\n0 0\n0 0\n''') == '0'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''1 2\n1\n1\n''') == '3'\nassert solution('''3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(test_input_1) == '332748119'\nassert solution(test_input_2) == '185138929'"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '3'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n0 1\\n2 1\\n') == '332748119'\nassert solution('1 2\\n1\\n2 1\\n') == '185138929'\nassert solution('1 2\\n0 0\\n2 1\\n') == '974061117'\n\nstdin = '{0} {1} {2}'.format(n, m, *map(int, stdin.split('\\n')))\nassert solution(stdin) == str(int(f'{int(n * (f\"{int(m)} {1} 1\" +'+'* n) // 1e9)}'))\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(test_input_1) == '332748119'\nassert solution(test_input_2) == '185138929'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\"\nassert solution(\"OZ\") == \"0\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\"\nassert solution(\"OZ\") == \"0\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABCDEF') == 'ABCDEF'\nassert solution('BCDFE') == 'BCDFE'\nassert solution('AB') == 'AB'\nassert solution('') == ''\nassert solution('ABCDEFGH') == 'ABCDEFGH'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"0\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"./tests/test1.txt\") == \"ORZ\"\nassert solution(\"./tests/test2.txt\") == \"ORZ\"\nassert solution(\"./tests/test3.txt\") == \"ORZ\"\nassert solution(\"./tests/test4.txt\") == \"ORZ\"\nassert solution(\"./tests/test5.txt\") == \"ORZ\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'ORZ'\nassert solution('OZ') == 0\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABDEFGH\") == \"ABCDEFGH\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\nassert solution(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"\nassert solution(\"AA\") == \"AA\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''AJKEQSLOBSROFGZ\nOVGURWZLWVLUXTH\nOZ''') == 'ORZ'\nassert solution('''AA\nA\nA\n\n''') == '0'\n\n'''\nI like that this code, it's cool!\n'''"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'ORZ'\nassert solution('OZ') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('1 100 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'\n\ninput_stream = FileStream(\"./input.txt\")\nprint(input_stream.read_input())"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\\n\") == \"99\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100\\n') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1\\n') == '0'\nprint(solution(*([])))\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\\n\") == \"99\"\nassert solution(\"1 2 1\\n1 100 1\\n1 100 100\\n\") == \"0\"\nassert solution(\"1 2 1\\n1 100 100\\n1 1 1\\n1 1 1\\n\") == \"0\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"0\"\nassert solution(\"1 2 1\\n1 100 1\\n1 100 100\\n1 1 1\\n1 1 1\\n\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100\\n') == '99\\n'\nassert solution('100 100 100\\n1 1 1\\n1 1 1\\n') == '0\\n'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 1\n1 100 1\n1 100 100\n''') == '99'\nassert solution('''\n100 100 100\n1 1 1\n1 1 1\n''') == '0'\nassert solution('''\n1 2 1\n1 100 1\n1 100 100\n''') == '99'\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100\\n') == '99'\nassert solution('1 2 1\\n100 100 1\\n100 100 100\\n') == '0'\nprint('All tests passed')"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1,2,1]) == 99\nassert solution([100,1,1]) == 0"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n\n''') == '1'\nassert solution('''\n1000000000000 1048576\n\n''') == '0'\nassert solution('''\n11 1\n\n''') == '1'\nassert solution('''\n1100001\n\n''') == '1'\nassert solution('''\n11000011\n\n''') == '0'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 2\n''') == '1'\nassert solution('''\n3 3\n''') == '0'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('1000000000000 1048576') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == str(__solution(int(stdin.split()[0]), int(stdin.split()[1])))\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(input) == \"1\"\nassert solution(input, True) == \"1\"\n\"\"\"\n\nn,t = map(int,input().split())"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n\nprint(solution())\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n\n1\n\n3\n\n4\n\n1000000000000\n\n''') == '1'\nassert solution('''\n3\n\n2\n\n2\n\n4\n\n1000000000000\n\n''') == '0'\nassert solution('''\n100\n\n200\n\n100\n\n''') == '0'\nassert solution('''\n100\n\n200\n\n100\n\n''') == '0'\nassert solution('''\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n\n10\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+-') == 'No'\nassert solution('++') == 'Yes'\nassert solution('-+') == 'No'\nassert solution('--+') == 'Yes'"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"+-++-\") == \"Yes\"\nassert solution(\"+-+++\") == \"No\"\nassert solution(\"-++-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''+-\n-++''') == 'No'\nassert solution('''+-\n+-''') == 'Yes'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''+-''') == 'No'\nassert solution('''-''') == 'No'\nassert solution('''++''') == 'Yes'\nassert solution('''+-''') == 'Yes'\nassert solution('''-''') == 'Yes'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-') == \"Yes\"\nassert solution('++') == \"Yes\"\nassert solution('-+') == \"No\"\nassert solution('--') == \"No\"\nassert solution('+--') == \"Yes\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+-\") == \"No\"\nassert solution(\"++-\") == \"Yes\"\nassert solution(\"+-\") == \"No\"\nassert solution(\"-++\") == \"Yes\"\nassert solution(\"-+\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+-') == 'No'\nassert solution('++') == 'Yes'\nassert solution('+') == 'Yes'\nassert solution('--') == 'No'\n\n\n\n'''\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('+--') == 'No'\nassert solution('+-+') == 'Yes'\nassert solution('+--+') == 'No'\nassert solution('+--+') == 'Yes'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n-\n\n''') == 'No'\nassert solution('''\n-++-\n\n''') == 'Yes'\nassert solution('''\n+-\n\n''') == 'Yes'\nassert solution('''\n++\n\n''') == 'Yes'\nassert solution('''\n++-++-\n\n''') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('++-') == 'Yes'\nassert solution('+-') == 'No'\nassert solution('++') == 'Yes'\nassert solution('--') == 'No'\nassert solution('-+') == 'No'\n\n\n\"\"\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 0 0') == '12.566370614359172464'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 0 0\\n0 1\\n-1 2\") == '12.566370614359172464'\n\n\"\"\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 0 0') == '12.566370614359172464'\nassert solution('4 1 -1') == '21.991148575128551812'\n\n'''"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1 -1') == '21.991148575128551812'\nassert solution('3 0 0') == '12.566370614359172464'\n\n'''\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 0 0\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\") == \"21.991148575128551812\"\n\n\"\"\"\nimport math"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 0 0\\n0 1\\n-1 2') == '12.566370614359172464'\nassert solution('4 1 -1\\n0 0\\n1 2\\n2 0\\n1 1\\n') == '21.991148575128551812'\nassert solution('0 0\\n0 0\\n0 0\\n') == '0.0'\nassert solution('0 1\\n0 0\\n0 0\\n') == '0.0'\nassert solution('3 0 0\\n1 2\\n0 0\\n') == '12.566370614359172464'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 0 0\n0 1\n-1 2\n1 2''') == '12.566370614359172464'\n\nassert solution('''4 1 -1\n0 0\n1 2\n2 0\n1 1''') == '21.991148575128551812'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 0 0\n0 1\n-1 2''') == '12.566370614359172464'\n\nassert solution('''4 1 -1\n0 0\n1 2\n2 0\n1 1''') == '21.991148575128551812'''\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 0 0') == '12.566370614359172464'\nassert solution('4 1 -1') == '21.991148575128551812'\n\n'''\n\nfrom typing import List, Dict\nimport sys\n\n\nclass Polygon:\n    def __init__(self, vertices: List[int]):\n        self.vertices = vertices\n        self.area = self.area()\n\n    def area(self) -> float:\n        x = 0\n        for i in range(1, len(self.vertices)):\n            x += self.vertices[i - 1] * self.vertices[i]\n        return 0.5 * x\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 0 0\n0 1\n-1 2\n1 2\n''') == '12.566370614359172464'\n\nassert solution('''\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n''') == '21.991148575128551812'\n\n\nfrom functools import reduce"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"6 6\"\nassert solution(\"48\") == \"9 42\""
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"2 2\"\nassert solution(\"2\") == \"2 2\"\nassert solution(\"0\") == \"0 0\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '9 42'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1 1'\nassert solution('3') == '2 2'\nassert solution('5') == '3 3'"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '6 6'\nassert solution('48') == '9 42'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('48') == '9 42'\nassert solution('6') == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"48\") == \"9 42\"\nassert solution(\"6\") == \"6 6\"\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1 1'\nassert solution('6') == '6 6'\nassert solution('48') == '9 42'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1 1'\nassert solution('6\\n') == '6 6'\n\nprint(solution(open(0).read()))\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n(())\") == \"Yes\"\nassert solution(\"3\\n(()\") == \"No\"\nassert solution(\"2\\n())\") == \"Yes\"\nassert solution(\"10\\n))))((((\") == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n(()\n\n''') == 'Yes'\nassert solution('''3\n(()\n\n''') == 'No'\nassert solution('''10\n)))\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'No', solution('1')\nassert solution('2') == 'Yes', solution('2')\nassert solution('3') == 'No', solution('3')\nassert solution('4') == 'No', solution('4')\nassert solution('5') == 'Yes', solution('5')\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'Yes'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"10\") == \"No\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\""
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'Yes'\n'''"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\nassert solution(input()) == \"No\"\n\n\n'''"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'Yes'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 50\") == \"1\"\nassert solution(\"3 100\") == \"5\"\nassert solution(\"2 50\") == \"2\"\nassert solution(\"2 50\") == \"0\"\nassert solution(\"2 50\") == \"0\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1 50\n50 50 100\n\"\"\") == \"1\"\nassert solution(\"\"\"2 50\n50 50\n\"\"\") == \"-1\"\nassert solution(\"\"\"3 100\n50 50 100\n\"\"\") == \"5\"\nassert solution(\"\"\"2 50\n50 50\n\"\"\") == \"2\"\nassert solution(\"\"\"1 50\n50 50\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"1\"\nassert solution(input_2) == \"5\"\n\n\"\"\""
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 50\n50 50 100\n''') == '1'\n\nassert solution('''2 50\n50 50\n''') == '-1'\n\nassert solution('''3 100\n50 50 100\n''') == '5'\n\nassert solution('''4 50\n50 50\n50 50\n''') == '2'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 50\n50 50\n''') == '1'\nassert solution('''2 50\n50 50\n''') == '2'\nassert solution('''3 50\n50 50 100\n''') == '5'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 50\n50\n1''') == '1'\nassert solution('''3 100\n50 50 100\n''') == '5'\nassert solution('''2 50\n50 50\n''') == '-1'\nassert solution('''2 50\n50 50\n''') == '0'\nprint(solution('''100 10000\n10000 100\n10000 10000\n100 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000\n10000 10000"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 100\n50 50 100\n\n1 50\n50 50''') == '1'\nassert solution('''2 50\n50 50\n\n1 50\n50 50''') == '5'\nassert solution('''3 100\n50 50 100\n\n1 50\n50 50''') == '1'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 50') == '1'\nassert solution('3 100') == '5'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 50\\n50 50 100\\n\") == \"1\"\nassert solution(\"2 50\\n50 50\\n\") == \"5\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"2\"\nassert solution(\"4 100\\n50 50 100\\n\") == \"3\"\nassert solution(\"5 100\\n50 50 100\\n\") == \"3\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 50\\n50 50\\n') == '1'\nassert solution('2 50\\n50 50\\n') == '5'\nassert solution('3 100\\n50 50 100\\n') == '5'\nassert solution('4 100\\n50 50\\n') == '2'\nassert solution('5 100\\n50 50\\n') == '0'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'\nassert solution('8\\n0 1 2 3 4 5 6 7 8\\n') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 6 8\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n5 7 2 9\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n2 3 4 9 12\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n6\n7 8 9 5 2 8\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n7\n1 1 1 1 1 1 1 1\n\"\"\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 6 8\\n') == '2\\n'\nassert solution('4\\n5 7 2 9\\n') == '1\\n'\nassert solution('5\\n3 4 9 12\\n') == '4\\n'\nassert solution('4\\n5 7 2 9\\n') == '1\\n'"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 6 8\\n') == '2'\nassert solution('5\\n2 3 4 9 12\\n') == '4'\nassert solution('4\\n5 7 2 9\\n') == '1'\nassert solution('5\\n9 10 12\\n') == '1'\nassert solution('4\\n5 7 2 9\\n') == '0'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"2\""
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n2 6 8\n\n4\n5 7 2 9\n\n5\n6 4 7 2 9''') == '4'\nassert solution('''5\n3 1 4 2 7\n\n3\n4 2 6 5 7''') == '4'\nassert solution('''4\n3 5 2 4 7\n\n3\n4 2 6 5 7''') == '1'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3\n2 6 8\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n4\n5 7 2 9\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5\n2 3 4 9 12\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n6\n2 3 4 9 12 1\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n6\n2 3 4 9 12 1\n\"\"\") == \"2\""
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\nassert solution(\"2\\n10 16\\n7 17\") == \"5\""
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '-1'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n10 16\n7 17''') == '6'\nassert solution('''5\n90 108\n45 105\n75 40''') == '5'\nassert solution('''3\n17 18\n15 24\n12 15''') == '6'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6'\n\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6'\nassert solution('5') == '5'"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\\n\") == \"6\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n\") == \"5\"\nassert solution(\"2\\n10 16\\n7 17\\n\") == \"-1\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 17, 18, 15, 24, 12, 15, 24, 12, 15, 24]) == 6\nassert solution([5, 90, 108, 45, 105, 75, 40]) == 5\nassert solution([2, 10, 16, 7, 17, 33, 30]) == 5\nassert solution([3, 10, 16, 7, 17]) == -1\nassert solution([1, 1, 2, 1]) == -1"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n17 18\n15 24\n12 15\n''') == '6', \"First\"\nassert solution('''2\n10 16\n7 17\n''') == '-1', \"Second\"\nassert solution('''5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5', \"Third\"\nassert solution('''6\n12 50\n15 70\n9 90\n20 90\n60 50\n''') == '5', \"Fourth\"\nassert solution('''2\n3 2\n5 5\n4 4\n''') == '1', \"Fifth\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n17 18\\n15 24\\n12 15\\n') == '6'\nassert solution('5\\n90 108\\n45 105\\n75 40\\n') == '5'\nassert solution('5\\n') == '-1'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    5\n    90 108\n    45 105\n    75 40\n''') == '5'\nassert solution('''\n    2\n    10 16\n    7 17\n''') == '6'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"1 0\"\nassert solution(\"bbbb\") == \"0\"\nassert solution(\"aaa\") == \"1 3\"\n\n\"\"\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bbbb') == '0'\nassert solution('aaa') == '1 3'\nassert solution('bbbbb') == '0'\nassert solution('aabbbb') == '2 3 0 1'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('aaaa') == 1\nassert solution('bbbb') == 2\nassert solution('bbbb') == 2\nassert solution('aaa') == 2\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bab\\nbb\\n\") == \"0\"\nassert solution(\"bbbb\\naaa\\n\") == \"1 0 3\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"1 0\"\nassert solution(\"bb\") == \"1 3\"\nassert solution(\"bbbb\") == \"0\"\nassert solution(\"aaa\") == \"0\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"bab\\nbb\") == \"0\"\nassert solution(\"bbbb\\naaa\") == \"0\"\nassert solution(\"aaab\\naba\") == \"1 0 1 3\"\nassert solution(\"baaa\\nbaa\") == \"2 1 3 1\""
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bab\\nbb') == '0\\n0\\n1 0\\n1 3'\nassert solution('aaa\\nbbb') == '0\\n0\\n1 0\\n1 3'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''bab\nbb''') == '2 1 0'\nassert solution('''bbbb\naaa''') == '0'\nassert solution('''abaa\nabbb''') == '3 1 2'\nassert solution('''bbaa\nbbbb''') == '0'"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2 0 1 3\""
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bab\\nbb') == '2 0 1 3'\nassert solution('bbbb\\naaa') == '0'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"IMPOSSIBLE\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\"\nassert solution(\"4\") == \"POSSIBLE\"\nassert solution(\"1 1\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 2\\n2 3\\n1 4\\n4 2\\n4 3\\n1 5\\n5 2\\n4 1\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'POSSIBLE'\nassert solution('5') == 'POSSIBLE'\nassert solution('1') == 'IMPOSSIBLE'\n\n'''\n\nclass TreeNode:\n    def __init__(self,val):\n        self.val = val\n        self.left = None\n        self.right = None\n    def addNode(self,val):\n        if self.val:\n            if val < self.val:\n                if self.left:\n                    self.left.addNode(val)\n                else:\n                    self.left = TreeNode(val)\n            else:\n                if self.right:\n                    self.right.addNode(val)\n                else:\n                    self.right = TreeNode(val)\n        else:\n            self.val = val\n    def printTree(self):\n        if self.val:\n            print(self.val)\n            if self.left:\n                self.left.printTree()\n            if self.right:\n                self.right.printTree()"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1\n4 3 2\n''') == 'POSSIBLE'\nassert solution('''3\n1 1\n4 3 2\n''') == 'IMPOSSIBLE'\nassert solution('''3\n3 2\n3 3 1\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('10\\n1 1 2 3 1 4 3 5 1 6 5 8 5 9 5 10\\n7 3 5 7 5 9') == 'IMPOSSIBLE'\nassert solution('8\\n1 1\\n4 3 2\\n7 3\\n8 1\\n9 1\\n10 5\\n11 4\\n12 6\\n13 2\\n14 3\\n15 1\\n16 1\\n17 2\\n18 5\\n19 6\\n20 6\\n21 2\\n22 1\\n23 4\\n24 2\\n25 3\\n26 4') == 'IMPOSSIBLE'\n\nNote: This problem is about coloring of a tree and not about coloring a graph.\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"5\\n1 1 1 1 1\\n2 2 2 3 3 3\\n4 4 2 4 4\") == \"IMPOSSIBLE\"\n\n\"\"\""
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"3\\n1 1\\n4 3 2\\n1 1\") == \"IMPOSSIBLE\"\nassert solution(\"3\\n3 1\\n1 1\\n4 3 2\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"POSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 1\n4 3 2\n''') == 'POSSIBLE'\nassert solution('''\n2\n1 3\n4 1\n''') == 'IMPOSSIBLE'\n'''"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'POSSIBLE'\nassert solution('4') == 'POSSIBLE'\nassert solution('5') == 'IMPOSSIBLE'\nassert solution('10') == 'IMPOSSIBLE'\nassert solution('100') == 'IMPOSSIBLE'"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1000000007''') == '2'\nassert solution('''5 1000000007''') == '5'\nassert solution('''1 1000000007''') == '0'\nassert solution('''10 1000000007''') == '9'\nassert solution('''100 1000000007''') == '99'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"4\"\nassert solution(\"1 2\") == \"7\"\nassert solution(\"1 3\") == \"16\"\nassert solution(\"2 1\") == \"5\"\nassert solution(\"2 2\") == \"12\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"100000000001\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"1000000000000000\") == \"2\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1000000007\\n') == '2'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"10 1000000007\") == \"0\"\n\ninput:\n    1\n    10 7\noutput:\n    0\n    1\n\ninput:\n    5\n    23 56443 25555 5555\noutput:\n    2\n    3\n\ninput:\n    1\n    1000 10\noutput:\n    0\n    1\n\ninput:\n    2\n    10 2\noutput:\n    0\n    1\n\ninput:\n    3\n    10 2\noutput:\n    2\n\ninput:\n    4\n    1 9\noutput:\n    0\n    1\n\ninput:\n    5\n    10 3\noutput:\n    0\n    1\n\ninput:\n    6\n    10 7\noutput:\n    2\n    3\n\ninput:\n    7\n    10 5\noutput:\n    2\n\ninput:\n    8\n    10 5\noutput:\n    3\n\ninput:\n    9\n    10 5\noutput:\n    4\n\ninput:\n    10\n    10 5\noutput:\n    5\n\ninput:\n    11\n    10 5\noutput:\n    6\n\ninput:\n    12\n    10 5\noutput:\n    7\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1000000007\") == \"4\"\nassert solution(\"3 20\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"100 7\") == \"12\"\nassert solution(\"100 10\") == \"17\""
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1000000007') == '2'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1 5 1''') == '999999228'\nassert solution('''2 2 3 3''') == '7'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 3 3\n+-+''') == '7'\n\nassert solution('''4 1 5 1\n-''') == '999999228'\n\nassert solution('''3 3 4 4\n+-''') == '999999228'\n\nassert solution('''4 1 5 1\n-''') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '7'\nassert solution() == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"7\""
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3 3\\n+-+\\n') == '7'\nassert solution('4 1 5 1\\n-\\n') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 3 3') == '7'\nassert solution('4 1 5 1') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2 3 3''') == '7'\nassert solution('''4 1 5 1''') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 3 3\n+-+\n''') == '7'\nassert solution('''\n4 1 5 1\n-\n''') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 1 5 1\n+-'''') == '999999228'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 2\") == '4'\nassert solution(\"1 2 3 1\") == '2'\nassert solution(\"10 2 1 7\") == '0'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0\n\n\n\"\"\""
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'\nassert solution('1 1 1 1') == '0'\nassert solution('1 2 3 1') == '2'\n\n'''\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\""
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n\nprint(solution(*tuple(map(int, input().split()))))\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__) == \"4\"\nassert solution(__) == \"2\"\n\n---\n\nfrom math import factorial"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 1 2\n''') == '4'\n\nassert solution('''1 2 3 1\n''') == '2'\n\nassert solution('''10 2 1 7\n''') == '0'"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 1, 1, 2]) == 4\nassert solution([1, 2, 3, 1]) == 2\nassert solution([10, 2, 1, 7]) == 0\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"3 5\") == \"38\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '6'\nprint('solution()')\n\n\"\"\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 3') == '6'\nassert solution('5 5') == '15'\nassert solution('100 100') == '26'\nassert solution('100 101') == '26'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n''') == '6'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"3 0\") == \"0\"\nassert solution(\"5 0\") == \"1\"\nassert solution(\"5 1\") == \"0\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '6'\nassert solution('3 2') == '6'\nassert solution('10 20') == '0'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '6'\nassert solution('1 2') == '6'\nassert solution('3 4') == '12'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '6'"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2\n''') == '2'\nassert solution('''\n2\n1 2\n''') == '3'"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 2\n\n''') == '2'\nassert solution('''\n3\n1 2\n1 3\n\n''') == '0'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('1 2') == '1'\nassert solution('2 3') == '0'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n1 2\n\"\"\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1 1\") == \"0\"\n\"\"\"\nfrom functools import reduce"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''1\n1 2\n''') == '0'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 1\") == \"1\"\nassert solution(\"2\\n3 2\") == \"0\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    4\n    0 2 0\n    3 0 1\n    ''') == '2'\nassert solution('''\n    5\n    0 2 0\n    3 0 1\n    2 1 0\n    1 0 3\n    ''') == '4'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n0 2 0\n3 0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n\"\"\") == \"18\"\nassert solution(\"\"\"\n10\n0 0 0 0 5 0 0 0 0 4 0 0 0 0 0 0\n1 0 3\n\"\"\") == \"19\"\nassert solution(\"\"\"\n10\n0 0 0 0 0 5 0 0 0 0 4 0 0 0 0 0\n1 0 3\n\"\"\") == \"12\"\nassert solution(\"\"\"\n10\n0 0 0 0 0 0 5 0 0 0 4 0 0 0 0 0\n1 0 3\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0 2 0\n3 0 1\n''') == '2'\nassert solution('''11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == '18'\nassert solution('''8\n0 1 2 0 1 2 0 1\n1 3 2 1 3 1 1 1\n''') == '5'\nassert solution('''7\n0 0 1 0 1 2 0\n1 3 2 1 3 1 1\n''') == '3'\nassert solution('''3\n0 1 0\n1 3 2\n''') == '0'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 2 0\n3 0 1\n''') == '2'\n\nassert solution('''\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == '18'\n\nassert solution('''\n1\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == '4'\n\nassert solution('''\n20\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n0 2 0 0 0 7 0 0 4 0 0 11\n7 0 0 0 1 0 8 0 0 5 0 0 10\n7 0 0 0 1 0 0 8 0 0 5 0 0 11\n3 0 0 0 0 7 0 0 4 0 0 11\n0 1 0 0 0 0 8 0 0 5 0 0 10\n0 1 0 0 0 0 0 8 0 0 5 0 0 11\n0 0 0 0 0 0 0 5 0 0 4 0 0 10\n0 0 0 0 0 0 0 5 0 0 4 0 0 11\n''') == '28'\n\nassert solution('''\n40\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n0 2 0 0 0 7 0 0 4 0 0 11\n7 0 0 0 1 0 8 0 0 5 0 0 10\n7 0 0 0 1 0 0 8 0 0 5 0 0 11\n3 0 0 0 0 7 0 0 4 0 0 11\n0 1 0 0 0 0 8 0 0 5 0 0 10\n0 1 0 0 0 0 0 8 0 0 5 0 0 11\n0 0 0 0 0 0 0 5 0 0 4 0 0 10\n0 0 0 0 0 0 0 5 0 0 4 0 0 11\n''') == '83'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('11') == '18'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"4\"\n\nassert solution(\"11\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n4\n0 2 0\n3 0 1\n\n''') == '2'\n\nassert solution(\n'''\n10\n0 1 2 3 4 5 6 7 8 9 10\n0 0 0 0 0 0 0 0 0 0\n\n''') == '11'\n\nassert solution(\n'''\n11\n0 0 0 0 0 0 0 0 0 0 0 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1\n\n''') == '33'\n\nassert solution(\n'''\n11\n0 0 0 0 0 0 0 0 0 0 0 0 0 1\n1 1 0 0 0 0 0 0 0 0 0 0 0 1\n\n''') == '34'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\n\n\n'''\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('11') == '18'\n\"\"\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 10\ncode*s\ncodeforces\n''') == 'YES'\n\nassert solution('''\n1 1\nv\nk\n''') == 'NO'\n\nassert solution('''\n9 6\ngfgf*gfgf\ngfgfgf\n''') == 'YES'"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution_test_1) == 'YES'\nassert solution(solution_test_2) == 'YES'\nassert solution(solution_test_3) == 'NO'\nassert solution(solution_test_4) == 'YES'\nassert solution(solution_test_5) == 'YES'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == \"YES\"\nprint(\"solution() done. result is '{}'\".format(solution()))"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"YES\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"YES\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == 'YES'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"YES\""
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"6 10\\n\"\n    \"code*s\\n\"\n    \"codeforces\") == \"YES\"\nassert solution(\n    \"6 5\\n\"\n    \"vk*cup\\n\"\n    \"vkcup\") == \"YES\"\nassert solution(\n    \"1 1\\n\"\n    \"v\\n\"\n    \"k\") == \"NO\"\nassert solution(\n    \"9 6\\n\"\n    \"gfgf*gfgf\\n\"\n    \"gfgfgf\") == \"NO\""
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == output_string\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'\nassert solution('5\\n0.1 0.2 0.3 0.4 0.5') == '0.260000000000'\nassert solution('10\\n0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9') == '0.260000000000'\nassert solution('100\\n0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9') == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'\nprint(solution(input()))\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\\n\") == \"0.260000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0.8'\nassert solution('4') == '0.800000000000'\nassert solution('2') == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0.1000000000000\"\nassert solution(\"2\") == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\n0.1 0.2 0.3 0.8\\n\"\n) == \"0.800000000000\"\n\nassert solution(\n    \"2\\n0.1 0.2\\n\"\n) == \"0.260000000000\""
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\") == \"0.800000000000\"\nassert solution(\"2\\n0.1 0.2\") == \"0.260000000000\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 1 2 5\\n') == '5.0000000000'\nassert solution('3 6 1 2 1\\n') == '4.7142857143'\n\n\"\"\"\n\nfrom math import inf\nfrom typing import List\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 1 2 5\\n') == '5.0000000000'\nassert solution('3 6 1 2 1\\n') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"\n\"\"\"\nimport math"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10 1 2 5\\n\") == \"5.0\"\nassert solution(\"3 6 1 2 1\\n\") == \"4.7142857143\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 10 1 2 5\\n\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\\n\") == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\nassert solution('100 500 1 2 3') == '0.016666666666'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\nassert solution('100 100 1 1 1') == '200.0000000000'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.250'\nassert solution('10') == '0.279'\nassert solution('21') == '0.324'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.250'\nassert solution('3') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'\nprint(solution(input()))\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0.250'\nassert solution('4') == '0.279'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0.250'\nassert solution('4') == '0.279'\nassert solution('5') == '0.299'\nassert solution('6') == '0.339'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0.250'\nassert solution('4') == '0.279'\nassert solution('5') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '0.250'\nassert solution('4') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0.250'\nassert solution('5') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0.250'\nassert solution('4') == '0.279'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5\\n5 2') == '18'\nassert solution('0 1\\n0 0') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"18\"\nassert solution(\"0 1\") == \"8\"\n\nassert solution(input) == solution(input)\n\n'''"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 5\n5 2\n''') == '18'\nassert solution('''\n0 1\n0 0\n''') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\nx_1,y_1\n5,2\n\nx_2,y_2\n0,0\n\"\"\") == \"18\"\n\nassert solution(\"\"\"\nx_1,y_1\n0,0\n\nx_2,y_2\n5,2\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\\n5 2\") == \"18\"\nassert solution(\"0 1\\n0 0\") == \"8\"\nassert solution(\"0 1\\n0 0\\n\") == \"8\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == '18'\nassert solution('0 1') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0') == '8'\nassert solution('0 1') == '3'\nassert solution('1 0') == '3'\nassert solution('1 1') == '4'\nassert solution('2 1') == '3'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example_input_0) == \"18\"\nassert solution(example_input_1) == \"8\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('0 1') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 5\n5 2\n\"\"\") == \"18\"\n\nassert solution(\"\"\"\n0 1\n0 0\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n0 0\n0 0\n\"\"\") == \"0\""
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1''') == '4'\nassert solution('''3\n''') == '10'\nassert solution('''1\n''') == '4'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n''') == '4'\nassert solution('''\n10\n''') == '244'\nassert solution('''\n20\n''') == '11'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\"\nassert solution(\"1\") == \"4\"\nassert solution(\"10\") == \"244\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '4'\nassert solution('2\\n') == '10'\nassert solution('10\\n') == '244'"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1\n\"\"\") == \"4\"\nassert solution(\"\"\"2\n\"\"\") == \"10\""
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n''') == '4'\nassert solution('''2\n''') == '10'\nassert solution('''10\n''') == '244'"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\n\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        roman = {\"M\": 1000, \"D\": 500, \"C\": 100, \"L\": 50, \"X\": 10, \"V\": 5, \"I\": 1}\n        value = 0\n        for c in stdin:\n            value += roman[c]\n        return value\n\nprint(Solution().solution(\"II\"))"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n''') == \"4\"\nassert solution('''10\n''') == \"244\"\n\nimport sys\ninput_lines = sys.stdin.readlines()\nn = int(input_lines[0])\nprint(solution(input_lines[1:]))"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\nassert solution('10') == '244'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3\\n') == '0'\nassert solution('4\\n1 4 1 4 9\\n') == '2'\nassert solution('5\\n1 4 1 4 9\\n') == '2'\nassert solution('6\\n1 2 2 2 2 2\\n') == '1'\nassert solution('7\\n1 1 1 1 2 2 2\\n') == '1'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '2'\nassert solution('3') == '0'\nassert solution('2') == '0'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('4 1 4 9') == '2'\nassert solution('5 1 4 1 4 9') == '2'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0'\n\nassert solution('''\n4\n1 4 1 4 9\n''') == '2'\n\nassert solution('''\n5\n1 4 1 4 9\n''') == '2'\n\nassert solution('''\n2\n1 4 1 4 9\n''') == '1'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n''') == '0'\n\nassert solution('''4\n1 1 2 2\n''') == '2'\n\nassert solution('''5\n1 4 1 4 9\n''') == '2'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('4 1 4 9') == '2'\nassert solution('5') == '2'\n\n\n\"\"\"\nfrom typing import List"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('4 1 4 9') == '2'\nassert solution('5 1 4 1 4 9') == '2'\nassert solution('5 1 1 1 4 9') == '1'"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aabc') == 'YES', 'First example is wrong'\nassert solution('bbacc') == 'NO', 'Second example is wrong'\nassert solution('aabc') == 'YES', 'Third example is wrong'\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aaabccc''') == 'YES'\nassert solution('''bbacc''') == 'NO'\nassert solution('''aabc''') == 'YES'\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) in [\"YES\", \"NO\"]"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''aabc\nbacd''') == 'YES'\nassert solution('''aaabccc\nbbacc''') == 'NO'\nassert solution('''aabc\nbacd''') == 'YES'\nassert solution('''aaabc\nbbac''') == 'NO'\nassert solution('''aaabc\nbbac''') == 'YES'\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaabccc') == 'YES', \"Wrong answer\"\nassert solution('bbacc') == 'NO', \"Wrong answer\"\nassert solution('aabc') == 'YES', \"Wrong answer\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n4 1 2 5 3') == \"2\"\nassert solution('4\\n4 1 3 2') == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n4 1 2 5 3\n''') == '2'\nassert solution('''\n4\n4 1 3 2\n''') == '2'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n4 1 2 5 3''') == '2'\nassert solution('''4\n4 1 2 5 3''') == '2'"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n4 1 2 5 3\n''') == '2'\nassert solution('''4\n4 1 3 2\n''') == '2'\nassert solution('''5\n10\n''') == '2'\nassert solution('''20\n''') == '2'\nassert solution('''100\n''') == '5'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n4 1 2 5 3\") == \"2\"\nassert solution(\"4\\n4 1 3 2\") == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"2\"\n\n\n'''\nfrom itertools import permutations"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 1''') == '3.500000000000'\nassert solution('''6 3''') == '4.958333333333'\nassert solution('''2 2''') == '1.750000000000'''"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 1\n''') == '3.500000000000'\nassert solution('''\n6 3\n''') == '4.958333333333'\nassert solution('''\n2 2\n''') == '1.750000000000'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 1\n''') == '3.500000000000'\nassert solution('''6 3\n''') == '4.958333333333'\nassert solution('''2 2\n''') == '1.750000000000'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n\") == '3.500000000000'\nassert solution(\"6 3\\n\") == '4.958333333333'\nassert solution(\"2 2\\n\") == '1.750000000000'\n\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"3.500000000000\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 1\n6 3\n2 2''') == '4.958333333333'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"3.500000000000\"\n\n\"\"\"\n\nfrom math import factorial"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"3.500000000000\"\nassert solution(\"6 1\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\"\n\n'''\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"3.500000000000\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '3'\n\n'''"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution() == '5'\nassert solution() == '3'\nassert solution() == '0'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3'\nassert solution('3\\n3\\n<->') == '0'\nassert solution('1\\n1\\n->->') == '1'\nassert solution('2\\n2\\n->-') == '0'\nassert solution('5\\n5\\n>->') == '3'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution() == '5'\nassert solution() == '3'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '5'\n\nassert solution('''\n3\n<--\n2\n<>\n''') == '0'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n-><-\n5\n>>>\n3\n<--\n2\n<>\n\n''') == \"3\"\nassert solution('''\n5\n<->\n>-\n<-\n<->\n\n''') == \"5\"\nassert solution('''\n4\n<->\n-><-\n>-\n\n''') == \"3\"\nassert solution('''\n4\n<->\n<-\n>-\n\n''') == \"4\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\nassert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '3'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n\n''') == '3'\nassert solution('''\n3\n<->\n<-\n->\n\n''') == '0'\n\nclass Solution:\n    def solution(self,stdin: str) -> str:\n        n=int(stdin.strip())\n        c=0\n        if n==0:\n            return c\n        for i in range(n):\n            if stdin[i]=='>':\n                c+=1\n            elif stdin[i]=='<':\n                c-=1\n            else:\n                c=c\n        return c\nassert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n\n''')=='3'\nassert solution('''\n3\n<->\n<-\n->\n\n''')=='0'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>\\n3\\n<--\\n2\\n<>') == '3\\n5\\n3'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n>-><-\n5\n>--<\n3\n<<->\n''') == '5'\nassert solution('''1\n>--<\n''') == '0'\nassert solution('''4\n>-><-\n5\n>-<\n3\n<-<\n''') == '3'\nassert solution('''3\n<->\n''') == '0'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 100\n100 1\n1 100\n100 1\n''') == '202', 'First example'\nassert solution('''3\n1 1\n100 100\n1 1\n''') == '101 101 101 101 \nassert solution('''3\n1 1\n100 100\n1 1\n''') == '101 101 101 101 \n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n4 5\n4 5\n4 10\n\"\"\") == \"16\"\nassert solution(\"\"\"\n3\n1 1\n100 100\n1 1\n\"\"\") == \"101 101 101 101 \nassert solution(\"\"\"\n2\n1 1\n100 100\n\"\"\") == \"202\"\nassert solution(\"\"\"\n3\n1 1\n100 100\n1 1\n\"\"\") == \"101 101 101 101 \n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\nassert solution('4') == '202'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '16'\nassert solution('2') == '-1'\nassert solution('4') == '202'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    4\n    1 100\n    100 1\n    1 100\n    100 1\n''') == '202'\n\nassert solution('''\n    3\n    1 1\n    100 100\n    1 1\n''') == '101 101 101 101'\n\nassert solution('''\n    3\n    10 5\n    5 10\n    10 5\n''') == '16 9 9 10'\n\nprint(solution('''\n    4\n    1 100\n    100 1\n    1 100\n    100 1\n'''))\nprint(solution('''\n    3\n    1 1\n    100 100\n    1 1\n'''))\nprint(solution('''\n    3\n    10 5\n    5 10\n    10 5\n'''))\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\nassert solution('5') == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n4 5\n4 5\n4 10\n\"\"\") == \"16\"\n\nassert solution(\"\"\"\n4\n1 100\n100 1\n1 100\n100 1\n\"\"\") == \"101 101 101 101\""
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1 2 3 2 2\"\nassert solution(\"3\") == \"0 2\""
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1 2 2'\nassert solution('3') == '0 2'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2 3\") == \"1 1 3\"\nassert solution(\"3\\n1 2 3\") == \"0 2\"\nassert solution(\"4\\n1 2 3 4\") == \"0 1 3\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([5]) == \"1 2 3\"\nassert solution([3]) == \"0 2\"\nassert solution([1]) == \"0 2\"\nassert solution([4, 5, 4, 3, 5, 3, 3, 2, 2, 2, 2, 3, 5, 4, 4, 3, 4]) == \"2 3\""
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('10') == '0'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 2 3 2 2'\nassert solution('3') == '0 1 3'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1 2 3 2 2\"\nassert solution(\"3\") == \"0 1 3\""
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 1 1 1 1\n''') == '1 2 2 '\nassert solution('''5\n1 2 3 2 2\n''') == '0 2 '\nassert solution('''5\n1 2 3 2 2\n''') == '0 1 3 '\nassert solution('''5\n1 2 3 4 5\n''') == '0 2 '"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 3 2 2\n''') == '0 2'\nassert solution('''\n5\n1 2 3 2 2\n''') == '0 1 3'\nassert solution('''\n3\n1 2 3\n''') == '0 1 2'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1 2 3'\nassert solution('''\n5\n1 2 3 2 2\n''') == '0 2'\nassert solution('''\n5\n1 2 3 2 2\n''') == '0 1 3'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"11100\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101101') == '110110'\nassert solution('110') == '01100011'\nassert solution('10') == '01'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"01\"\nassert solution(input()) == \"01\"\nassert solution(input()) == \"00\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101101') == '110110'\nassert solution('110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1111\"\n\n\"\"\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'\n\"\"\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''101101\n110''') == '110110'\nassert solution('''10010110\n100011''') == '01100011'\nassert solution('''10''') == '01'\nassert solution('''11100''') == '11100'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('101101') == '110110'\nassert solution('110') == '01100011'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 2\") == \"1\", \"first\"\nassert solution(\"3 4 1\") == \"0\", \"second\"\nassert solution(\"5 5 2\") == \"1\", \"third\""
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\nOutput\n0''') == '0'\nassert solution('''2 3 1\n1 1 1\n1 1 0\n\nOutput\n1''') == '1'\nassert solution('''1 2 1\n1 0 0\n\nOutput\n-1''') == '-1'\nassert solution('''5 5 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '-1'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''5 5 2\n1 0 0 0 1\n0 1 1 1 0\n1 0 0 1 1\n1 1 1 0 1\n1 1 1 1 1''') == '0'\nassert solution('''5 5 2\n1 0 0 0 1\n0 1 1 1 0\n1 0 0 1 1\n1 1 1 0 1\n1 1 1 1 1''') == '-1'\nassert solution('''5 5 2\n1 0 0 0 1\n0 1 1 1 0\n1 0 0 1 1\n1 1 1 0 1\n1 1 1 1 1''') == '0'\nassert solution('''5 5 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1''') == '1'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 1') == '1'\nassert solution('5 5 2') == '-1'\nassert solution('1 2 3 4') == '1'\nassert solution('5 5 2') == '-1'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\n\nassert solution('''3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\nOutput\n0''') == '-1'\n\nassert solution('''5 5 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n\nOutput\n-1''') == '-1'\n\nassert solution('''3 4 1\n1 0 0 1\n0 1 1 0\n1 0 0 1\n\nOutput\n0''') == '0'\n\nassert solution('''3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\nOutput\n-1''') == '-1'"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 2\") == \"1\"\nassert solution(\"3 4 1\") == \"0\""
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'\nassert solution('10 10 1') == '-1'"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n\"\"\") == \"2 2 3 1 2\", \"First\"\nassert solution(\"\"\"\n6\n90000100 99970000\n99970000 99980000 0\n99970000 99980000 0\n99980000 99980000 0\n99990000 99980000 0\n99990000 99980000 0\n\n\"\"\") == \"9999 10000 9998\", \"Second\"\n\nprint(solution(input()))"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0\\n\") == \"2 2 3 1 2\"\nassert solution(\"6\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2 2 3 1 2'\nassert solution('3') == '9999 10000 9998'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2 2 3 1 2'\nassert solution('3') == '2 2 3 1'"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0''') == '2 2 3 1 2'\n\nassert solution('''5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0''') == '2 2 3 1 2'\n\nassert solution('''3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0\n\nOutput\n9999 10000 9998''') == '9999 10000 9998'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2 2 3 1 2', 'check for range'\nassert solution('4') == '2 4 6 2 4', 'check for range'\nassert solution('3') == '2 3 1 2', 'check for range'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n0 4 6 2 4\\n4 0 6 2 4\\n6 6 0 3 6\\n2 2 3 0 2\\n4 4 6 2 0') == '2 2 3 1 2'\nassert solution('3\\n0 99990000 99970002\\n99990000 0 99980000\\n99970002 99980000 0\\n') == '9999 10000 9998'"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '2 2 3 1 2'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0 4 6 2 4\n    4 0 6 2 4\n    6 6 0 3 6\n    2 2 3 0 2\n    4 4 6 2 0\n    \"\"\"\n) == \"2 2 3 1 2\"\n\nassert solution(\n    \"\"\"\n    6\n    0 99990000 99970002\n    99990000 0 99980000\n    99970002 99980000 0\n    2 2 3 0 2\n    4 4 6 2 0\n    4 4 6 2 0\n    \"\"\"\n) == \"9999 10000 9998\"\n\nassert solution(\n    \"\"\"\n    10\n    0 99990000 99970002\n    99990000 0 99980000\n    99970002 99980000 0\n    2 2 3 0 2\n    4 4 6 2 0\n    4 4 6 2 0\n    4 4 6 2 0\n    4 4 6 2 0\n    4 4 6 2 0\n    4 4 6 2 0\n    \"\"\"\n) == \"9999 10000 9998\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n''') == '2 2 3 1 2'\nassert solution('''1\n0\n''') == '0'\nassert solution('''0\n1\n''') == '0'\nassert solution('''7\n1 2 3 4 5 6\n7 8 9 10 11 12\n13 14 15 16 17 18\n19 20 21 22 23 24\n25 26 27 28 29 30\n31 32 33 34 35 36\n37 38 39 40 41 42\n43 44 45 46 47 48\n49 50 51 52 53 54\n55 56 57 58 59 60\n61 62 63 64 65 66\n67 68 69 70 71 72\n73 74 75 76 77 78\n79 80 81 82 83 84\n85 86 87 88 89 90\n91 92 93 94 95 96\n97 98 99 100 101 102\n103 104 105 106 107 108\n109 110 111 112 113 114\n115 116 117 118 119 120\n121 122 123 124 125 126\n127 128 129 130 131 132\n133 134 135 136 137 138\n139 140 141 142 143 144\n145 146 147 148 149 150\n151 152 153 154 155 156\n157 158 159 160 161 162 162\n163 164 165 166 167 168 169\n170 171 172 173 174 175 176\n177 178 179 180 181 182 183\n184 185 186 187 188 189 190\n191 192 193 194 195 196 197\n198 199 200 201 202 203 204\n205 206 207 208 209 210 211\n212 213 214 215 216 217 218 219\n220 221 222 223 224 225 226\n227 228 229 230 231 232 233\n234 235 236 237 238 239 240 241\n242 243 244 245 246 247 248 249\n250 251 252 253 254 255 256 257\n258 259 260 261 262 263 264 265\n266 267 268 269 270 271 272 273\n274 275 276 277 278 279 280 281\n282 283 284 285 286 287 288 289\n290 291 292 293 294 295 296 297\n298 299 300 301 302 303 304 305 306\n307 308 309 310 311 312 313 314 315\n316 317 318 319 320 321 322 323 324\n325 326 327 328 329 330 331 332 333\n334 335 336 337 338 339 340 341 342 343\n344 345 346 347 348 349 350 351 352 353\n354 355 356 357 358 359 360 361 362 363 364\n365 366 367 368 369 370 371 372 373 374\n375 376 377 378 379 380 381 382 383 384\n385 386 387 388 389 390 391 392 393 394 395\n396 397 398 399 400 401 402 403 404 405\n406 407 408 409 410 411 412 413 414 415\n416 417 418 419 420 421 422 423 424 425\n426 427 428 429 430 431 432 433 434 435\n436 437 438 439 440 441 442 443 444 445 446\n447 449 450 451 452 453 454 456 457 458 459\n460 461 462 463 464 465 466 467 468 469 470\n471 472 473 474 475 476 477 478 479 480 481\n482 483 484 485 486 487 488 489 490 491 492 493\n494 494 497 499 500 501 502 503 504 505 506\n507 508 509 510 511 512 513 514 515 516 517 518\n519 520 521 522 523 524 525 526 527 528 529 530\n531 532 533 534 535 536 537 538 539 540 541 542\n543 544 545 546 547 548 549 550 551 552 553 554\n555 556 557 558 559 560 561 562 563 564 565 566 567\n568 569 570 571 572 573 574 575 576 577 578 579 580\n581 582 583 584 585 586 587 588 589 590 591 592 593\n594 595 596 597 598 599 600 601 602 603 604 605 606\n607 608 609 610 611 612 613 614 615 616 617 618 619\n620 621 622 623 624 625 626 627 628 629 630 631 632 633\n634 635 636 637 638 639 640 641 642 643 644 645 646 647\n648 649 650 651 652 653 654 655 656 657 658 659 660 661\n662 663 664 665 666 667 668 669 670 671 672 673 674 675\n676 677 678 679 680 681 682 683 684 685 686 687 688 689\n690 691 692 693 694 695 696 697 698 699 700 701 702 703\n704 705 706 707 708 709 710 711 712 713 714 715 716 717\n718 719 720 721 722 723 724 725 726 727 728 729 730 731\n732 733 734 735 736 737 738 739 740 741 742 743 744 745\n746 747 747 748 749 750 751 752 753 754 755 756 757 758\n759 760 761 762 763 764 765 766 767 768 769 770 771 772 773\n774 775 776 777 778 779 780 781 782 783 784 785 786 787 788\n789 790 791 792 793 794 795 796 797 798 799 800 801 802 803\n804 805 806 807 808 809 810 811 812 813 814 815 816 817 818\n819 820 821 822 823 824 825 826 827 828 829 830 831 832 833\n834 835 836 837 838 839 840 841 842 843 844 845 846 847 848\n849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864\n866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881\n882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897\n898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913\n914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929\n930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945\n946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962\n963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978\n979 980 981"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n''') == '22'\nassert solution('''5\n11 1\n01 1\n00 100\n10 1\n01 1\n''') == '105'\nassert solution('''6\n11 19\n10 22\n00 18\n00 29\n11 29\n10 28\n''') == '105'\nassert solution('''3\n00 5000\n00 5000\n00 5000\n''') == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n'+\"11 6\\n\"+\"10 4\\n\"+\"01 3\\n\"+\"00 3\\n\"+\"00 7\\n\"+\"00 9\") == \"22\"\nassert solution('5\\n'+\"11 19\\n\"+\"10 22\\n\"+\"00 18\\n\"+\"00 29\\n\"+\"11 29\") == \"105\"\nassert solution('4\\n'+\"00 5000\\n\"+\"00 5000\\n\"+\"00 5000\\n\"+\"\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n\n''') == '22'\nassert solution('''\n6\n11 19\n10 22\n00 18\n00 29\n11 29\n10 28\n\n''') == '105'\nassert solution('''\n3\n00 5000\n00 5000\n00 5000\n\n''') == '0'\nassert solution('''\n4\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n\n''') == '22'\nassert solution('''\n5\n11 1\n01 1\n00 100\n10 1\n01 1\n\n''') == '103'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '22'\nassert solution('6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9') == '105'\nassert solution('5\\n11 1\\n01 1\\n00 100\\n10 1\\n01 1') == '103'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6\\n\"\n    \"11 6\\n\"\n    \"10 4\\n\"\n    \"01 3\\n\"\n    \"00 3\\n\"\n    \"00 7\\n\"\n    \"00 9\\n\"\n) == \"22\"\n\nassert solution(\n    \"5\\n\"\n    \"11 19\\n\"\n    \"10 22\\n\"\n    \"00 18\\n\"\n    \"00 29\\n\"\n    \"11 29\\n\"\n    \"10 28\\n\"\n) == \"105\"\n\nassert solution(\n    \"4\\n\"\n    \"00 5000\\n\"\n    \"00 5000\\n\"\n    \"00 5000\\n\"\n) == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n11 1\n01 4\n00 5\n10 3\n10 2\n01 4\n10 2\n\n''') == '22'\n\nassert solution('''\n5\n11 1\n01 1\n00 100\n10 1\n01 1\n\n''') == '105'\n\nassert solution('''\n6\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n\n''') == '103'\n\nprint('Aufgabe 1: DONE')"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"22\"\nassert solution(\"8\") == \"105\"\nassert solution(\"4\") == \"105\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"22\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n11 6\\n10 4\\n01 3\\n00 3\\n00 7\\n00 9\\n\") == \"22\"\nassert solution(\"5\\n11 19\\n10 22\\n00 18\\n00 29\\n11 29\\n10 28\\n\") == \"105\"\nassert solution(\"3\\n00 5000\\n00 5000\\n00 5000\\n\") == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"22\"\nassert solution(input_data) == \"103\"\nassert solution(input_data_1) == \"0\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\n\nassert solution(\"3 4 9\") == \"YES\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9\") == \"YES\", \"TEST 1\"\nassert solution(\"3 4 9\") == \"YES\", \"TEST 2\"\nassert solution(\"3 4 10\") == \"YES\", \"TEST 3\"\nassert solution(\"3 4 10\") == \"NO\", \"TEST 4\"\nassert solution(\"3 4 9\") == \"NO\", \"TEST 5\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'YES'\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 5') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"NO\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4 9\n1 3 1 2\n2 1 3\n4 3 6\n''') == 'YES'\nassert solution('''3 4 10\n2 3 1 2\n2 1 3\n4 3 6\n''') == 'YES'\nassert solution('''3 4 9\n2 3 1 2\n2 1 3\n4 3 6\n''') == 'NO'\nassert solution('''3 4 5\n1 3 1 2\n2 1 3\n5 3 6\n''') == 'YES'\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4 9\n1 3 1 2\n2 1 3\n4 3 6\n''') == 'YES'\n\nassert solution('''\n3 4 9\n2 3 1 2\n2 1 3\n4 3 6\n''') == 'YES'\n\nassert solution('''\n3 4 5\n1 3 1 2\n2 1 3\n5 3 6\n''') == 'NO'\n\n'''\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'NO'\n\n'''\n\nfrom itertools import combinations\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'NO'\nassert solution('3 4 10') == 'NO'\n\n\n'''\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"NO\"\nassert solution(\"3 4 10\") == \"NO\"\nassert solution(\"3 4 9\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1\") == \"NO\"\nassert solution(\"4 1\") == \"YES\"\nassert solution(\"4 1\") == \"YES\"\nassert solution(\"4 1\") == \"NO\"\nassert solution(\"4 1\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\") == \"YES\"\nassert solution(\"4 1\") == \"NO\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"4 3\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == 'YES'\nassert solution('4 1') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('4 1') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 1\n2 3 4 1\n1 2 3 4\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3 1\n4 3 1 2\n3 4 2 1\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4 1\n4 3 1 2\n2 1 4 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4 1\n4 3 1 2\n2 1 4 3\n\"\"\") == \"NO\""
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'NO'\nassert solution('4 1') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('4 2') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1\n2 3 4 1\n1 2 3 4''') == 'YES'\nassert solution('''4 1\n4 3 1 2\n3 4 2 1''') == 'YES'\nassert solution('''4 3\n4 3 1 2\n2 1 4 3''') == 'YES'\nassert solution('''4 2\n4 3 1 2\n2 1 4 3''') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 4 1') == 'NO'\nassert solution('4 3 1 2') == 'YES'\nassert solution('4 1 2 3') == 'YES'\nassert solution('4 2 1 3') == 'NO'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 1\\n2 3 4 1\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n2 1 4 3\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n2 1 4 3\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 1\\n4 3 1 2\\n3 4 2 1\\n2 1 4 3\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 1\n2 3 4 1\n1 2 3 4\n''') == 'NO'\nassert solution('''4 1\n4 3 1 2\n3 4 2 1\n''') == 'YES'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n2 1\n3 1\n1 5\n4 4\n''') == '''1 1\n3 1\n1 5\n4 4\n'''\n\nassert solution('''7\n7\n2 2\n1 5\n3 1\n4 1\n5 2\n6 2\n5 7\n6 6\n''') == '''2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n'''"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1 1'\nassert solution('7') == '2 1\\n3 1\\n4 1\\n5 2\\n6 6\\n7 6'\nassert solution('10') == '2 1\\n3 1\\n4 1\\n5 2\\n6 6\\n7 6\\n8 8\\n9 9\\n10 10'\nassert solution('8') == '2 1\\n3 1\\n4 1\\n5 2\\n6 6\\n7 6\\n8 8\\n9 9\\n10 10'\n\n\"\"\"\n\nimport math\nfrom typing import List, Set\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7\\n') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n\n===========================================\n\nProblem\n\nIvan places knights on infinite chessboard. Initially there are $n$ knights. If there is free cell which is under attack of at least $4$ knights then he places new knight in this cell. Ivan repeats this until there are no such free cells. One can prove that this process is finite. One can also prove that position in the end does not depend on the order in which new knights are placed.\n\nIvan asked you to find initial placement of exactly $n$ knights such that in the end there will be at least $\\lfloor \\frac{n^{2}}{10} \\rfloor$ knights.\n\n\n\n-----Input-----\n\nThe only line of input contains one integer $n$ ($1 \\le n \\le 10^{3}$)\u00a0\u2014 number of knights in the initial placement.\n\n-----Output-----\n\nPrint $n$ lines. Each line should contain $2$ numbers $x_{i}$ and $y_{i}$ ($-10^{9} \\le x_{i}, \\,\\, y_{i} \\le 10^{9}$)\u00a0\u2014 coordinates of $i$-th knight. For all $i \\ne j$, $(x_{i}, \\,\\, y_{i}) \\ne (x_{j}, \\,\\, y_{j})$ should hold. In other words, all knights should be in different cells.\n\nIt is guaranteed that the solution exists.\n\n\n-----Examples-----\nInput\n4\n\nOutput\n1 1\n3 1\n1 5\n4 4\n\nInput\n7\n\nOutput\n2 1\n3 1\n4 1\n5 2\n2 6\n5 7\n6 6\n\n\n\n-----Note-----\n\nLet's look at second example:\n\n$\\left. \\begin{array}{|l|l|l|l|l|l|l|l|l|} \\hline 7 & {} & {} & {} & {} & {0} & {} & {} \\\\ \\hline 6 & {} & {0} & {} & {} & {} & {0} & {} \\\\ \\hline 5 & {} & {} & {} & {2} & {} & {} & {0} \\\\ \\hline 4 & {} & {} & {} & {} & {} & {} & {} \\\\ \\hline 3 & {} & {} & {1} & {} & {} & {} & {} \\\\ \\hline 2 & {0} & {} & {} & {0} & {} & {} & {} \\\\ \\hline 1 & {} & {0} & {} & {0} & {} & {} & {} \\\\ \\hline & {1} & {2} & {3} & {4} & {5} & {6} & {7} \\\\ \\hline \\end{array} \\right.$\n\nGreen zeroes are initial knights. Cell $(3, \\,\\, 3)$ is under attack of $4$ knights in cells $(1, \\,\\, 2)$, $(2, \\,\\, 1)$, $(4, \\,\\, 1)$ and $(5, \\,\\, 2)$, therefore Ivan will place a knight in this cell. Cell $(4, \\,\\, 5)$ is initially attacked by only $3$ knights in cells $(2, \\,\\, 6)$, $(5, \\,\\, 7)$ and $(6, \\,\\, 6)$, therefore it is attacked by $4$ knights and Ivan will place another knight in this cell. There are no more free cells which are attacked by $4$ or more knights, so the process stops. There are $9$ knights in the end, which is not less than $\\lfloor \\frac{7^{2}}{10} \\rfloor = 4$.\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"4\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1 1'\nassert solution('7') == '2 1\\n3 1\\n4 1\\n5 2\\n6 2\\n7 6'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1 1\"\nassert solution(\"7\") == \"2 1\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1 1'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n''') == '3'\nassert solution('''\n3\n1 2 3\n''') == '4'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8''') == \"3\"\nassert solution('''3\n1\n2\n3\n4\n5\n6\n7\n8''') == \"4\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == '3'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '3'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '-1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('3\\n1 2 3\\n') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '-1'\nassert solution('3') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == -1\nassert solution(\"3\") == 3"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"46 2\") == \"7\"\nassert solution(\"2018 214\") == \"92 205 1\"\nassert solution(\"2020413\") == \"-1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '3'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2018 214\") == \"92 205 1\"\nassert solution(\"46 2\") == \"7\""
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"46 2\") == \"7\"\nassert solution(\"2018 214\") == \"93 14\""
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 1 1''') == '0 1 0 0 1 1 1'\nassert solution('''\n1000000000\n1110111111''') == '-1'\nassert solution('''\n3\n3 1 1''') == '3'\nassert solution('''\n3\n3 1 1''') == '-1'\nassert solution('''\n10\n2\n''') == '4 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"7 0 1 1 1 1 1\"\n\n\"\"\""
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"46 2\") == \"7\"\nassert solution(\"2018 214\") == \"92 205 1\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"46 2\") == \"7\"\nassert solution(\"2018 214\") == \"93 205 1\""
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''46 2''') == '7'\nassert solution('''2018 214''') == '92 205 1'"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 20 20\") == \"5.000000000000000\"\nassert solution(\"4 1 1\") == \"0.400000000000000\"\n\n\"\"\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == \"0.400000000000000\"\nassert solution(\"4 1 1\") == \"0.400000000000000\"\nassert solution(\"2 5 2\") == \"0.800000000000000\"\n\"\"\""
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('5 1 1') == '0.00000000000000'\n\n\n\"\"\""
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 20 20\n6 2\n1 3\n2 6\n\"\"\") == \"5.000000000000000\"\nassert solution(\"\"\"\n5 1 1\n2 3\n3 2\n2 3\n3 2\n\"\"\") == \"0.400000000000000\"\n\"\"\")"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('4 3 1') == '1.6'\nassert solution('4 3 2') == '2.666666666666666'\nassert solution('4 1 2') == '1.5'\n\n\n'''"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\") == \"0.400000000000000\"\nassert solution(\"3 20 20\") == \"5.000000000000000\"\nassert solution(\"4 1 1\") == \"0.400000000000000\"\nassert solution(\"4 100 100\") == \"0.400000000000000\"\nassert solution(\"4 10 10\") == \"0.400000000000000\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('5 4 4') == '5.000000000000000'\n\nIn the above sample, the answer for the given input was 5.000000000000000.\n'''\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('5 1 1') == '0.400000000000000'\nassert solution('6 1 1') == '1.00000000000000'\nassert solution('7 1 1') == '2.00000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '0.400000000000000'\nassert solution('2 2 1') == '0.800000000000000'\nassert solution('2 2 2') == '1.500000000000000'\nassert solution('3 3 3') == '1.500000000000000'\nassert solution('3 2 2') == '0.800000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\n\n\n\"\"\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '4'\n\n\"\"\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n''') == '4'\nassert solution('''\n8 2\n''') == '5'\n\n'''\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"4\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3''') == '4'\nassert solution('''8 2''') == '5'\nassert solution('''0 0''') == '1'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 3]) == 4\nassert solution([8, 2]) == 5\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n''') == '4'\nassert solution('''\n8 2\n''') == '5'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n5 5 8 7 3 2\n''') == 'Conan'\n\nassert solution('''\n2\n1 1\n''') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 1\\n\") == \"Agasa\"\nassert solution(\"3\\n4 5 7\\n\") == \"Conan\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n4 5 7\n\n2\n1 1\n\n''') == 'Conan'\nassert solution('''3\n7 8 6\n\n1 2\n\n''') == 'Agasa'\nassert solution('''1\n1\n\n''') == 'Agasa'\nassert solution('''2\n1\n\n''') == 'Conan'\nassert solution('''6\n1 2 3 4 5\n\n1\n\n''') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 2') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n4 5 7') == 'Conan', \"First\"\nassert solution('2\\n1 1') == 'Agasa', \"Second\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"Agasa\"\nassert solution(\"3\") == \"Conan\"\nassert solution(\"4\") == \"Agasa\"\nassert solution(\"5\") == \"Conan\"\nassert solution(\"6\") == \"Conan\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Agasa'\nassert solution('3') == 'Conan'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 1\n\n''') == 'Agasa'\nassert solution('''\n3\n4 5 7\n\n''') == 'Conan'\nassert solution('''\n4\n2 2 2 2\n\n''') == 'Conan'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n2\n1 2''') == 'Agasa'\nassert solution('''4\n2\n1 2 3 4''') == 'Conan'\n\nprint(solution('''5\n1 1 1 1 1\n\nInput'''))\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n4 5 7\") == \"Conan\"\nassert solution(\"2\\n1 1\") == \"Agasa\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3 3\"\nassert solution(\"4 5\") == \"2 5\"\n\"\"\"\nfrom collections import deque\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == '##.\\n.#.'\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n\") == \"##.\\n..#\\n#.#\"\nassert solution(\"2 2\\n\") == \"##.\\n###\\n###\"\n\n----Hints----\n* Remember: This puzzle can be solved with just one line of code!\n'''"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"\"\"1\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3 3'\nassert solution('2 3') == '3 3'\nassert solution('2 2') == '2 2'"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n1 3\n1 2''') == '''3 3\n###\n###\n'''\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '4 4\\n#####\\n#####\\n##.\\n'\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\\n1\""
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n2 3\") == \"3 3\"\nassert solution(\"1 2\\n1 2\") == \"1 1\""
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n.\n.''') == '''3 3\n###\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n\") == \"4\"\nassert solution(\"3 2\\n\") == \"3\"\nassert solution(\"2 4\\n\") == \"0\"\n\nassert solution(\"5 6\\n\") == \"3\"\nassert solution(\"2 4\\n\") == \"2 3 5\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n+ 1\n+ 2\n- 2\n- 1\n''') == '4'\nassert solution('''\n3 2\n+ 1\n- 2\n+ 2\n- 1\n''') == '1'\nassert solution('''\n2 4\n+ 1\n- 1\n+ 2\n- 2\n''') == '0'\nassert solution('''\n2 5\n+ 1\n- 1\n+ 3\n- 3\n+ 4\n- 4\n+ 5\n- 5\n''') == '4'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '2'\nassert solution('2 4') == '1'\nassert solution('0') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"3\"\nassert solution(\"5 6\") == \"2 3 5\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"5 6\") == \"0\"\nassert solution(\"6 4\") == \"0\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1\n\n''') == \"4\"\n\nassert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1\n\n''') == \"0\"\n\nassert solution('''5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\n''') == \"3\"\n\nassert solution('''2 4\n+ 1\n- 2\n+ 2\n- 1\n\n''') == \"0\""
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\n+ 1\n+ 2\n- 2\n- 1\n\n''') == '4'\nassert solution('''\n3 2\n+ 1\n- 2\n\n''') == '1'\nassert solution('''\n2 4\n+ 1\n- 1\n+ 2\n- 2\n\n''') == '0'\nassert solution('''\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\n''') == '3'\nassert solution('''\n2 4\n+ 1\n- 2\n+ 2\n- 1\n\n''') == '0'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n') == '4'\nassert solution('3 2\\n') == '1 3'\nassert solution('2 4\\n') == '0'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n+ 1\\n- 2\\n- 1\\n\") == \"4\"\nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"3\""
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n') == '4\\n1 3 4 5\\n'\nassert solution('3 2\\n') == '1 3\\n'\nassert solution('2 4\\n') == '0\\n'\nassert solution('5 6\\n') == '3\\n2 3 5\\n'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''5 4\n+ 1\n+ 2\n- 2\n- 1\n'''\n    ) == '4'\n\nassert solution(\n'''3 2\n+ 1\n- 2\n+ 2\n- 1\n'''\n    ) == '3'\n\nassert solution(\n'''5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\n'''\n    ) == '3'"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 5 5 4 5\") == \"1\"\nassert solution(\"5 5 5 4 5 9\") == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1\\n5 4 2 4 5\\n2\") == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 2 3\n1 2 3\n9''') == '4'\nassert solution('''5 1\n5 4 2 4 5\n2\n5\n\n''') == '1'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 3\n1 2 3\n9\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5 1\n5 4 2 4 5\n2\n5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10\n10 8 9 6 7 7 8 8 9 7\n2\n10\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n2\n10 2\n10\n\"\"\") == \"0\"\n\nprint(\"Tests passed\")"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1\n5 4 2 4 5\n2''') == \"1\"\nassert solution('''\n3 3\n1 2 3\n1 2 3\n9\n''') == \"4\"\nassert solution('''\n3 3\n1 2 3\n1 2 3\n12\n''') == \"0\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"0\""
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n1 2 3\\n9\\n') == '4'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 2\n3\n8\n''') == '4'\nassert solution('''3 3\n1 2 3\n1 2 3\n9\n''') == '4'\nassert solution('''5 1\n5 4 2 4 5\n2\n5\n''') == '1'\n\n\"\"\"\n\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\nx = int(input())\n\nb.sort(reverse=True)"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'abda'\nassert solution('4 4') == 'abda'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 3\ncba\"\"\") == \"cbd\"\nassert solution(\"\"\"4 4\nabcd\"\"\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3 3\\n'\n    'cba\\n'\n    ) == 'cbd'\nassert solution(\n    '4 4\\n'\n    'abcd\\n'\n    ) == 'abda'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"cbd\"\n\nassert solution(\"5 3\") == \"cbd\"\n\nassert solution(\"10 10\") == \"NO\"\n\nassert solution(\"3 3\") == \"cbd\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'NO'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\ncba\n\n''') == \"NO\"\nassert solution('''3 4\ncba\n\n''') == \"cbd\"\nassert solution('''4 4\nabcd\n\n''') == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'abda'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('1 2 3') == 'NO'\nassert solution('1 2 3') == 'NO'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"3 4\\ncba\") == \"cbd\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'cbd'\nassert solution('4 4') == 'abda'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == 'tokitsukaze'\nassert solution('6 1') == 'quailty'\nassert solution('6 5') == 'once again'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"3\", \"1\"]) == \"tokitsukaze\"\nassert solution([\"2\", \"1\"]) == \"quailty\"\nassert solution([\"3\", \"2\"]) == \"once again\"\nassert solution([\"3\", \"3\"]) == \"once again\"\nassert solution([\"3\", \"4\"]) == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == \"tokitsukaze\"\nassert solution('6 1') == \"once again\"\nassert solution('6 5') == \"tokitsukaze\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == 'tokitsukaze'\nassert solution('6 1') == 'quailty'\nassert solution('6 5') == 'once again'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"tokitsukaze\"\nassert solution(\"6 1\") == \"quailty\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open(0).read()) == \"once again\"\nassert solution(open(1).read()) == \"tokitsukaze\"\nassert solution(open(2).read()) == \"quailty\"\nassert solution(open(3).read()) == \"once again\"\n\"\"\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1\\n0101') == 'quailty'\nassert solution('6 1\\n010101') == 'once again'\nassert solution('6 5\\n010101') == 'tokitsukaze'"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n0101\\n\") == \"quailty\"\nassert solution(\"6 1\\n010101\\n\") == \"tokitsukaze\"\nassert solution(\"6 5\\n010101\\n\") == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2\\n0101') == \"quailty\"\nassert solution('6 1\\n010101') == \"tokitsukaze\"\nassert solution('6 5\\n010101') == \"once again\""
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '50'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80\\n') == '50'\nassert solution('1 2 10\\n11\\n15 7\\n') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 50\") == \"50\"\nassert solution(\"1 2 10\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 4 50\n20 100\n60 10 40 80\n''') == '50'\nassert solution('''\n1 2 10\n11\n15 7\n''') == '7'\n'''\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50'\nassert solution('1 2 10\\n11\\n15 7\\n') == '7'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 50\") == \"50\"\nassert solution(\"1 2 10\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 10') == '7'\nassert solution('1 2 50') == '50'"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 50\n20 100\n60 10 40 80\n''') == '50'\nassert solution('''2 2 10\n11\n15 7\n''') == '7'\nassert solution('''1 2 10\n11\n15 7\n''') == '7'\nprint(solution('''5 3 100\n20 20 20 20 20\n50 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n100 100 100 100 100\n'''))\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    2 4 50\n    20 100\n    60 10 40 80\n\"\"\") == \"50\"\nassert solution(\"\"\"\n    1 2 10\n    11\n    15 7\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 50') == '50'\nassert solution('1 2 10') == '7'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n0 0\n''') == '1 6'\nassert solution('''\n3 2\n1 1\n''') == '1 6'\nassert solution('''\n3 3\n0 0\n''') == '1 6'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1 6'\nassert solution('3 2') == '1 3'\nassert solution('1 10') == '5 5'\nassert solution('2 10') == '5 5'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1 6\"\nassert solution(\"3 2\") == \"1 3\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1 6'\nassert solution('3 2') == '1 3'\nassert solution('1 10') == '5 5'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '1 6'\nassert solution('3 2') == '1 3'\nassert solution('1 10') == '5 5'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"1 6\"\nassert solution(\"2 3\") == \"1 3\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n1 1\n\n''') == '1 6'\nassert solution('''\n3 2\n0 0\n\n''') == '1 3'\n\nassert solution('''\n1 10\n5 3\n\n''') == '5 5'\n\nassert solution('''\n4 4\n2 4\n2 4\n2 5\n4 3\n\n''') == '4 4'\n\nassert solution('''\n1 6\n3 4\n\n''') == '1 6'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1 6\"\nassert solution(\"3 2\") == \"1 3\"\nassert solution(\"1 10\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1 6'\nassert solution('3 2') == '1 3'\nassert solution('1 10') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1 6\"\nassert solution(\"3 2\") == \"1 3\"\nassert solution(\"1 10\") == \"5 5\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"2 3\""
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''3\n-2 5 -1\n''') == '2 2 3'\n\"\"\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2 2 2'\nassert solution('5') == '3 3 3 3 3'\nassert solution('10') == '7 7 7 7 7 7'\nassert solution
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('7') == '2'\nassert solution('11') == '3'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n-2 5 -1\\n\") == \"2\\n3\\n3\", \"Wrong output\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '2 3'\nassert solution('6') == '2 3 4'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n-2 5 -1\n\"\"\") == \"2 3\"\n\nassert solution(\"\"\"\n6\n-8 -1 -3 -2 3 -4\n\"\"\") == \"3 4\"\n\nassert solution(\"\"\"\n20\n-2 -3 5 -1 -1 -4 -5 -6 -7 -8 -9 -10 -11 -12 -13 -14 -15 -16 -17 -18 -19 -20\n\"\"\") == \"8 12\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n-2 5 -1\"\"\") == \"\"\"2\n2 3\"\"\"\nassert solution(\"\"\"5\n-2 5 -1\"\"\") == \"\"\"3\n3 3 3 3\"\"\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n-2 5 -1\n''') == '2 2 3'\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 3') == '3'\nassert solution('1\\n0 4') == '4'\nassert solution('2\\n1 10') == '3'\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 3') == '3'\nassert solution('1 5') == '1'\nassert solution('2 1') == '1'\n\n\"\"\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\n\n\"\"\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 10\") == \"4\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution('''\n2\n0 3\n1 5\n''') == '3'\nassert solution('''\n1\n0 4\n''') == '1'\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('2') == '3'\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n0 3\n1 5\n''') == '3'\nassert solution('''\n1\n0 4\n''') == '1'\n\nassert solution('''\n4\n1 4\n3 2\n5 2\n7 2\n''') == '4'\n\nassert solution('''\n5\n1 6\n5 2\n3 4\n5 2\n7 3\n''') == '7'"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6 1 10 12 2\\n') == '16'\nassert solution('3 50\\n') == '3 0 25 50'\nprint(solution(input()))\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '16 0 25 50'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 10 6 5 4 2 1\"\n    ) == \"3 0 1 2 3 4 5 6 7 8 10 11 12 13 14 15 16 17 18\"\n\nassert solution(\n    \"3 50\"\n    ) == \"3 0 50\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 6 1 10 12 2\n''') == '16'\nassert solution('''\n3 50\n''') == '3'\nassert solution('''\n5 2 1 2 6\n''') == '2 1 2 6'\nassert solution('''\n1 2\n''') == '0'\nassert solution('''\n1\n''') == '1'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '16'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2') == '16'\nassert solution('3 50\\n25 25 50') == '3 0 25 50'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(test_input_1) == test_output_1\nassert solution(test_input_2) == test_output_2\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 18\n5 6 1 10 12 2\n''') == '16'\nassert solution('''\n3 50\n25 25 50\n''') == '3'\nassert solution('''\n8 30\n2 4 10 8 20 5 15\n''') == '1 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199\n''') == '14'\nprint('Tests done')"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"6 18\\n5 6 1 10 12 2\\n\"\n    ) == \"16 0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\n\nassert solution(\n    \"3 50\\n25 25 50\\n\"\n    ) == \"3\""
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == '0 1 2'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"6\\n\") == \"3\"\nassert solution(\"2\\n\") == \"2\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n\") == \"3\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"10\\n\") == \"10\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"2\") == \"2\"\n\"\"\""
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n') == '3'\nassert solution('2\\n') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'\n\n\"\"\""
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"5\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INP) == OUT"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5 10\\n') == '50'\nassert solution('3\\n10 1\\n20 2\\n30 3\\n') == '180'\nassert solution('4\\n5 10\\n6 12\\n3 14\\n') == '150'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '180'\nassert solution('1') == '50'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"180\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '50'\nassert solution('1') == '6'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10\") == \"50\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n10 1\n20 2\n30 3\n''') == '180', \"First\"\nassert solution('''\n3\n3 1\n2 2\n4 3\n''') == '21', \"Second\"\nassert solution('''\n1\n5 10\n''') == '50', \"Third\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n10 1\n20 2\n30 3\n5 10\n\"\"\") == \"180\"\nassert solution(\"\"\"\n3\n10 1\n20 2\n30 3\n\"\"\") == \"21\"\nassert solution(\"\"\"\n1\n5 10\n\"\"\") == \"50\""
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n10 1\n20 2\n30 3\n''') == '180'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '180'\nassert solution('3') == '21'\nassert solution('10 1') == '180'\nassert solution('10 1 2') == '180'\nassert solution('10 1 2 3') == '180'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1 2 3 4') == '1'\nassert solution('9\\n0 1 2 3 4 5 6 7 8') == '4'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"9\") == \"3\"\nassert solution(\"1 1 1 1 1 1 1 1 1 10\") == \"1\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0 10') == '1'\nassert solution('5\\n0 1 2 3 4') == '1'\nassert solution('4\\n0 0 0 0') == '4'\nassert solution('9\\n0 1 2 3 4') == '3'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 0 10\n''') == '2'\nassert solution('''\n5\n0 1 2 3 4\n''') == '1'\nassert solution('''\n4\n0 0 0 0\n''') == '4'\nassert solution('''\n9\n0 1 2 3 4 5 6 7 8\n''') == '3'\nprint(\"Hurray!! All tests are successful.\")"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('9') == '4'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == \"1\"\nassert solution('9') == \"4\"\nassert solution('10') == \"1\""
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0 0 0\") == \"1\"\nassert solution(\"9\\n0 1 2 3 4 5 6 7 8\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\") == \"1\"\nassert solution(\"6\\n0 1 2 3 4 5\") == \"1\"\nassert solution(\"7\\n0 1 2 3 4 5 6\") == \"1\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('9') == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0 0 10\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n0 1 2 3 4\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n9\n0 1 0 2 0 1 1 2 10\n\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n0 0\n0 1\n1 0\n1 1\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n4\n0 0\n0 1\n1 0\n1 1\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n10\n0 0\n0 1\n1 0\n1 1\n1 0\n0 0\n0 1\n1 0\n0 1\n1 0\n1 1\n1 0\n1 1\n1 0\n0 0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '2'\nassert solution('100') == '3'\nassert solution('1000000') == '3'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '1'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\nassert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\nassert solution(\"5\\n0 0\\n0 1\\n1 0\\n1 1\") == \"1\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1\n''') == '5'\nassert solution('''4\n1 1\n2 2\n3 3\n''') == '4'"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n0 0\n0 1\n1 0\n1 1\n\n\"\"\") == \"5\"\nprint(solution(input()))\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\"\nassert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\\n\") == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == \"4\"\nassert solution('5') == \"5\"\nassert solution('12') == \"13\"\n\"\"\""
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '6'\nassert solution('4') == '0'\n'''\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"3\"\nassert solution(\"7\") == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\n\nassert solution(\n    \"8\\nW 7\\nW 8\\nW 3\\nW 4\\nB 4\\nB 2\\nW 5\\nW 6\\nW 9\\nW 1\\nW 2\\nB 2\\nB 5\\nB 9\\nW 6\\nW 4\\nW 3\\nW 7\\nW 5\\nW 2\\nW 9\\nW 8\\nW 6\\nW 5\\nW 1\\nW 4\\nW 9\\nW 8\\nW 7\\nW 6\\nW 1\\nB 7\\nB 3\\nW 4\\nW 1\\nW 2\\nW 3\\nW 6\\nW 5\\nW 7\\nB 7\\nB 9\\nB 5\\nB 8\\nB 2\\nB 1\\nW 3\\nW 2\\nW 4\\nW 9\\nW 5\\nW 1\\nB 8\\nB 6\\nB 3\\nB 4\\nB 5\\nB 9\\nW 8\\nW 9\\nW 5\\nW 6\\nW 2\\nW 3\\nW 7\\nW 4\\nW 5\\nW 9\\nW 1\\nB 4\\nB 6\\nB 5\\nB 7\\nB 1\\nB 2\\nB 9\\nW 9\\nW 6\\nW 2\\nW 8\\nW 4\\nW 5\\nW 7\\nB 6\\nB 2\\nB 4\\nB 5\\nB 9\\nW 7\\nW 4\\nW 8\\nW 1\\nW 9\\nB 3\\nB 1\\nB 4\\nB 2\\nB 8\\nB 9\\nW 8\\nW 5\\nW 2\\nW 3\\nW 7\\nW 6\\nW 9\\nB 9\\nW 1\\nW 2\\nW 6\\nW 8\\nW 5\\nW 3\\nW 7\\nW 4\\nW 9\\nW 8\\nW 1\\nW 2\\nB 2\\nB 3\\nW 8\\nW 3\\nW 4\\nW 2\\nW 6\\nW 1\\nB 1\\nW 5\\nW 9\\nB 9\\nW 2\\nB 9\\nW 4\\nW 1\\nW 3\\nW 8\\nW 5\\nW 6\\nW 2\\nW 9\\nB 1\\nB 2\\nB 3\\nB 4\\nB 5\\nB 6\\nB 7\\nB 8\\nB 9\\nW 1\\nW 2\\nW 5\\nW 3\\nW 4\\nW 7\\nW 8\\nW 9\\nB 4\\nB 3\\nW 7\\nW 2\\nW 5\\nW 1\\nB 2\\nB 6\\nB 4\\nB 5\\nB 8\\nB 9\\nW 3\\nW 6\\nW 9\\nW 8\\nW 4\\nW 7\\nW 6\\nW 5\\nW 9\\nW 8\\nW 9\\nB 1\\nB 5\\nB 8\\nB 2\\nB 7\\nB 9\\nB 8\\nB 9\\nW 4\\nW 8\\nW 5\\nW 3\\nW 7\\nW 8\\nW 6\\nW 9\\nB 5\\nB 6\\nB 7\\nB 9\\nB 4\\nB 3\\nW 3\\nW 7\\nW 1\\nW 6\\nW 5\\nW 2\\nW 9\\nB 6\\nB 7\\nB 9\\nW 1\\nW 8\\nW 2\\nW 3\\nW 5\\nW 4\\nW 9\\nW 2\\nW 3\\nW 7\\nW 6\\nW 5\\nW 9\\nW 1\\nB 5\\nB 7\\nB 4\\nB 8\\nB 7\\nB 9\\nB 6\\nB 3\\nW 8\\nW 3\\nW 2\\nW 4\\nW 2\\nW 5\\nW 3\\nW 7\\nW 6\\nW 9\\nW 1\\nB 2\\nB 4\\nB 5\\nB 9\\nB 3\\nW 7\\nW 4\\nW 9\\nW 8\\nW 1\\nW 2\\nW 3\\nW 5\\nW 6\\nW 8\\nW 1\\nW 2\\nW 3\\nW 7\\nW 6\\nW 5\\nW 9\\nB 1\\nB 2\\nB 5\\nB 3\\nB 4\\nB 5\\nB 6\\nB 7\\nB 8\\nB 9\\nW 5\\nW 6\\nW 8\\nW 2\\nW 1\\nW 6\\nW 9\\nW 3\\nW 7\\nW 4\\nW 9\\nW 8\\nW 5\\nW 2\\nW 1\\nB 3\\nB 5\\nB 7\\nB 9\\nB 8\\nB 9\\nW 3\\nW 4\\nW 5\\nW 1\\nW 5\\nW 2\\nW 6\\nW 3\\nW 7\\nW 4\\nW 9\\nW 8\\nW 9\\nB 4\\nB 5\\nB 7\\nB 9\\nB 8\\nB 9\\nW 7\\nW 2\\nW 4\\nW 5\\nW 3\\nW 7\\nW 8\\nW 1\\nW 9\\nB 8\\nB 2\\nB 6\\nB 5\\nB 7\\nB 9\\nB 6\\nB 3\\nW 3\\nW 2\\nW 5\\nW 7\\nW 4\\nW 9\\nW 5\\nW 6\\nW 1\\nW 8\\nW 2\\nB 9\\nB 5\\nB 8\\nB 4\\nB 2\\nB 1\\nB 3\\nW 8\\nW 4\\nW 7\\nW 6\\nW 9\\nW 3\\nW 9\\nW 4\\nW 7\\nW 2\\nW 3\\nW 1\\nW 8\\nW 6\\nW 9\\nW 5\\nW 2\\nW 4\\nW 9\\nW 1\\nW 3\\nB 5\\"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '4'\nassert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '1'\nassert solution('5\\nW 2\\nW 1\\nB 1\\nB 3\\nW 3') == '2'\nassert solution('6\\nW 2\\nW 1\\nB 1\\nB 3\\nW 3') == '1'\nassert solution('4\\nB 1\\nW 2\\nB 3\\nW 1') == '2'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4'\nassert solution('5\\nW 1\\nW 2\\nW 3\\nW 4\\nW 5\\nB 1\\nB 2\\nB 3\\nB 4\\nB 5\\n') == '6'\nassert solution('9\\nW 1\\nW 2\\nW 3\\nW 4\\nW 5\\nB 1\\nB 2\\nB 3\\nB 4\\nB 5\\n') == '8'\nassert solution('15\\nB 1\\nB 2\\nB 3\\nB 4\\nB 5\\nB 6\\nB 7\\nB 8\\nB 9\\nB 10\\nB 11\\nB 12\\nB 13\\nB 14\\nB 15\\nW 1\\nW 2\\nW 3\\nW 4\\nW 5\\nW 6\\nW 7\\nW 8\\nW 9\\nW 10\\nW 11\\nW 12\\nW 13\\nW 14\\nW 15\\nW 16\\nW 17\\nW 18\\nW 19\\nW 20\\nW 21\\nW 22\\nW 23\\nW 24\\nW 25\\nW 26\\nW 27\\nW 28\\nW 29\\nW 30\\nW 31\\nW 32\\nW 33\\nW 34\\nW 35\\nW 36\\nW 37\\nW 38\\nW 39\\nW 40\\nW 41\\nW 42\\nW 43\\nW 44\\nW 45\\nW 46\\nW 47\\nW 48\\nW 49\\nW 50\\nW 51\\nW 52\\nW 53\\nW 54\\nW 55\\nW 56\\nW 57\\nW 58\\nW 59\\nW 60\\nW 61\\nW 62\\nW 63\\nW 64\\nW 65\\nW 66\\nW 67\\nW 68\\nW 69\\nW 70\\nW 71\\nW 72\\nW 73\\nW 74\\nW 75\\nW 76\\nW 77\\nW 78\\nW 79\\nW 80\\nW 81\\nW 82\\nW 83\\nW 84\\nW 85\\nW 86\\nW 87\\nW 88\\nW 89\\nW 90\\nW 91\\nW 92\\nW 93\\nW 94\\nW 95\\nW 96\\nW 97\\nW 98\\nW 99\\nW 100\\nW 101\\nW 102\\nW 103\\nW 104\\nW 105\\nW 106\\nW 107\\nW 108\\nW 109\\nW 110\\nW 111\\nW 112\\nW 113\\nW 114\\nW 115\\nW 116\\nW 117\\nW 118\\nW 119\\nW 120\\nW 121\\nW 122\\nW 123\\nW 124\\nW 125\\nW 126\\nW 127\\nW 128\\nW 129\\nW 130\\nW 131\\nW 132\\nW 133\\nW 134\\nW 135\\nW 136\\nW 137\\nW 138\\nW 139\\nW 140\\nW 141\\nW 142\\nW 143\\nW 144\\nW 145\\nW 146\\nW 147\\nW 148\\nW 149\\nW 150\\nW 151\\nW 152\\nW 153\\nW 154\\nW 155\\nW 156\\nW 157\\nW 158\\nW 159\\nW 160\\nW 161\\nW 162\\nW 163\\nW 164\\nW 165\\nW 166\\nW 167\\nW 168\\nW 169\\nW 170\\nW 171\\nW 172\\nW 173\\nW 174\\nW 175\\nW 176\\nW 177\\nW 178\\nW 179\\nW 180\\nW 181\\nW 182\\nW 183\\nW 184\\nW 185\\nW 186\\nW 187\\nW 188\\nW 189\\nW 190\\nW 191\\nW 192\\nW 193\\nW 194\\nW 195\\nW 196\\nW 197\\nW 198\\nW 199\\nW 200\\nW 201\\nW 202\\nW 203\\nW 204\\nW 205\\nW 206\\nW 207\\nW 208\\nW 209\\nW 210\\nW 211\\nW 212\\nW 213\\nW 214\\nW 215\\nW 216\\nW 217\\nW 218\\nW 219\\nW 220\\nW 221\\nW 222\\nW 223\\nW 224\\nW 225\\nW 226\\nW 227\\nW 228\\nW 229\\nW 230\\nW 231\\nW 232\\nW 233\\nW 234\\nW 235\\nW 236\\nW 237\\nW 238\\nW 239\\nW 240\\nW 241\\nW 242\\nW 243\\nW 244\\nW 245\\nW 246\\nW 247\\nW 248\\nW 249\\nW 250\\nW 251\\nW 252\\nW 253\\nW 254\\nW 255\\nW 256\\nW 257\\nW 258\\nW 259\\nW 260\\nW 261\\nW 262\\nW 263\\nW 264\\nW 265\\nW 266\\nW 267\\nW 268\\nW 269\\nW 270\\nW 271\\nW 272\\nW 273\\nW 274\\nW 275\\nW 276\\nW 277\\nW 278\\nW 279\\nW 280\\nW 281\\nW 282\\nW 283\\nW 284\\nW 285\\nW 286\\nW 287\\nW 288\\nW 289\\nW 290\\nW 291\\nW 292\\nW 293\\nW 294\\nW 295\\nW 296\\nW 297\\nW 298\\nW 299\\nW 300\\nW 301\\nW 302\\nW 303\\nW 304\\nW 305\\nW 306\\nW 307\\nW 308\\nW 309\\nW 310\\nW 311\\nW 312\\nW 313\\nW 314\\nW 315\\nW 316\\nW 317\\nW 318\\nW 319\\nW 320\\nW 321\\nW 322\\nW 323\\nW 324\\nW 325\\nW 326\\nW 327\\nW 328\\nW 329\\nW 330\\nW 331\\nW 332\\nW 333\\nW 334\\nW 335\\nW 336"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '4'\nassert solution('4\\nW 2\\nB 3\\nB 1\\nW 3') == '3'\nassert solution('3\\nW 3\\nB 1\\nB 2\\nB 3') == '0'\nassert solution('6\\nW 1\\nW 2\\nB 3\\nW 3\\nB 1\\nB 2') == '2'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3]) == '4'\nassert solution([3,1,2]) == '3'\nassert solution([3,1,2,3]) == '4'\nassert solution([3,1,2,3,2,3]) == '7'\nassert solution([3,1,2,3,2,3,1,3]) == '6'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\nB 1\") == \"1\"\nassert solution(\"2\\nW 2\") == \"1\"\nassert solution(\"3\\nB 3\") == \"1\"\nassert solution(\"4\\nW 1\\nW 3\") == \"4\"\nassert solution(\"5\\nB 2\\nW 1\\nW 3\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n6\n3\n''') == '4'\nassert solution('''\n5\n3\n5\n''') == '4'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\nassert solution(\"3\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n6\\n3\\n') == '4'\nassert solution('5\\n3\\n5\\n') == '4'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n6\\n3') == '4'\nassert solution('5\\n3\\n5') == '4'\nassert solution('5\\n3\\n4') == '5'\nassert solution('5\\n3\\n5') == '5'\nassert solution('5\\n3\\n5') == '5'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 3, 5]) == 4\nassert solution([5, 3, 1]) == 4\nassert solution([3, 5, 4]) == 3"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('3') == '4'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6\\n3\") == \"4\"\nassert solution(\"5\\n3\\n5\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"3\""
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n6\n3\n''') == '4'\n\nassert solution('''\n5\n3\n5\n''') == '4'\n\nprint(solution('''\n5\n3\n5\n'''))\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('8') == '32'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\n1 2 4 8 16 32 64 576''') == '32'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '18'\nassert solution('''20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16''') == '22'\nassert solution('''30\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18''') == '25'\nassert solution('''40\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20''') == '26'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('8') == '32'\nassert solution('4') == '4'"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"32\""
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '32'\nassert solution(input(stdin=True)) == '32'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('8') == '32'"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 1 1\n''') == '1'\nassert solution('''\n10\n35 10 23 20 14 29 36 25 22 33\n''') == '35'\nprint(solution('''\n1\n4 1\n'''))\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n''') == '2'\nassert solution('''\n8 1 2 4 8 16 32 64 576\n''') == '32'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == 2\nassert solution(\"4\") == 4\nassert solution(\"8\") == 32\n\n\n\"\"\""
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('8') == '32'\n\"\"\"\n\nimport math\nimport time\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '2'"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''400 4\n100 300 450 500\n''') == '2'\nassert solution('''50 2\n100 25\n''') == '3'\n\nassert solution('''400 4\n100 300\n400 500\n''') == '-1'\nassert solution('''50 2\n100 25\n''') == '-1'"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n100 300 450 500\n''') == '2'\nassert solution('''5 3\n100 300 450 500\n100 200 300 500\n100 100 200 300\n100 200 200 300\n100 300 200 300\n''') == '3'\nassert solution('''6 2\n100 300 450 500\n100 200 300 500\n100 100 200 300\n100 200 100 300\n100 300 200 300\n100 300 100 300\n100 200 100 300\n''') == '3'\nassert solution('''1 1\n100 100\n''') == '-1'\nassert solution('''1 2\n100 100\n''') == '-1'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''400 4\n100 300 450 500\n''') == '2'\nassert solution('''50 2\n100 25\n''') == '3'\nassert solution('''100 15\n200 50\n600 100\n''') == '2'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n400 4\n100 300 450 500\n''') == \"2\"\n\nassert solution('''\n50 2\n100 25\n''') == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"400 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n100 300 450 500\\n') == '2'\nassert solution('10 5\\n100 75 100 150\\n') == '3'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"100 300 550 700 500\") == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n100 300 450 500\\n50 2\\n100 25') == '2'\nassert solution('5 5\\n100 300 450 500\\n50 2\\n100 25') == '3'\nassert solution('4 5\\n100 300 450 500\\n50 2\\n100 25') == '-1'"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2'\nassert solution('5\\n5\\n4\\n4\\n3\\n1') == '2'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '6'\nassert solution('4 2') == '6'\nassert solution('3 2') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"10 2\") == \"18\"\nassert solution(\"1 10\") == \"10\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '6'\nassert solution('5 3') == '8'\n\"\"\"\n\nimport math\n\nN, K = map(int, input().split())\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 2 2 1') == '6'\nassert solution('2 2 3 4 4') == '10'\nassert solution('1 2 3 4 3') == '5'\nassert solution('2 2 2 3 3') == '5'\nassert solution('3 3 3 3 3') == '5'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"6 3\") == \"6\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n''') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"1 1\") == \"4\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 1\") == \"3\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\n''') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"6\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"1 4\") == \"0\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '6'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '499122178'\nassert solution('6') == '499122178'\nassert solution('10') == '499122178'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3\n1\n2\n1\n''') == '499122178'\nassert solution('''8\n2\n1\n1\n1\n1\n1\n1\n1\n''') == '499122178'\nassert solution('''1\n5\n1\n1\n1\n1\n''') == '499122178'\nassert solution('''7\n1\n1\n1\n1\n1\n1\n1\n''') == '499122178'\nassert solution('''12\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '499122178'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"499122178\"\nassert solution(\"2\") == \"499122178\"\nassert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\nassert solution(\"5\") == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3/2 = 1.5 = 1.5 = 1.5 = 1.5 = 1.5 = 1.5 = 1.5'\nassert solution('4') == '3/2 = 2.5 = 2.5 = 2.5 = 2.5 = 2.5 = 2.5 = 2.5 = 2.5'\nassert solution('1') == '1.0 = 1.0 = 1.0 = 1.0 = 1.0 = 1.0 = 1.0 = 1.0 = 1.0'\nassert solution('100') == '1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6'\nassert solution('1000000') == '1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6 = 1023.6'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n''') == '499122178'\nassert solution('''5\n''') == '499122178'\nassert solution('''1\n''') == '499122178'\nassert solution('''3\n''') == '499122178'\nassert solution('''4\n''') == '499122178'"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '499122178'\nassert solution('5') == '499122178'\nassert solution('10') == '499122178'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '499122178'\nassert solution('100') == '988434156'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '499122178'\nassert solution('2') == '499122178'\nassert solution('1') == '499122178'\n'''"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 6\nassert solution('3') == 6669\nassert solution('10') == -1"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n3\n10''') == '-1', 'First'\nassert solution('''2\n3\n10''') == '6', 'Second'\nassert solution('''1\n4\n10''') == '-1', 'Third'\nassert solution('''1\n5\n10''') == '6669', 'Fourth'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '6'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '6'\nassert solution('3') == '6669'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10''') == '6'\n\nassert solution('''1\n-2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10''') == '6669'\n\nassert solution('''2\n\n-2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10''') == '6'\n\nassert solution('''2\n\n1\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10''') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 4 3 2 0\n1 0 2 4 3\n2 4 0 1 3''') == '1 4 3 2 0'\nassert solution('''2\n2 4 0 1 3''') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n''') == '-1'\nassert solution('''2\n''') == '2 4 0 1 3'\nassert solution('''5\n2 4 0 1 3\n''') == '1 4 3 2 0'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\"\nassert solution(\"2\") == \"-1\"\n\n\"\"\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '1 4 3 2 0'\nassert solution('2\\n') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1 4 3 2 0\"\nassert solution(\"2\") == \"-1\"\n\n\n\"\"\""
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\"\nassert solution(\"2\") == \"-1\"\n\n\n'''\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 4 3 2 0'\nassert solution('5') == '1 4 3 2 0'"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n2 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"No\"\n\n--------------------------------------------\n\nYou may see that in the test case above, the ordering of vertices 1, 2 and 3 comes out as $1, 3, 2$. This is because:\n\nThe first node in the graph is vertex 1,\nthe second node in the graph is vertex 2, and\nthe third node is vertex 3.\n\nHence, that the BFS path would be:\n\n1 \u2192 2 \u2192 3 \u2192 None\n\nwhich is the correct ordering. But the second path is not correct because it is not following the expected ordering, that is, it does not start from vertex 1 and instead starts from vertex 3.\n\nWhat is the correct ordering of vertices 1, 2, 3 and 4?\n\n\n-----Input-----\n\nThe first line contains a single integer $n$ ($1 \\le n \\le 2 \\cdot 10^5$) which denotes the number of nodes in the tree. \n\nThe following $n - 1$ lines contain a pair of integers $x$ and $y$ ($1 \\le x, y \\le n$) which represent the endpoints of the edges between vertices $x$ and $y$ in the tree. \n\nThe following line contains $n$ integers which represent the sequence of vertices to check.\n\nThe last line contains $n$ integers which represent the sequence to check.\n\n\n-----Output-----\n\nPrint \"Yes\" (quotes for clarity) if the sequence corresponds to some valid BFS traversal of the given tree and \"No\" (quotes for clarity) otherwise.\n\n\n\n-----Examples-----\nInput\n4\n1 2\n1 3\n2 4\n1 2 3 4\n\nOutput\nYes\nInput\n4\n1 2\n1 3\n2 4\n1 3 2 4\n\nOutput\nNo\nInput\n4\n1 2\n1 3\n2 4\n1 2 4 3\n\nOutput\nNo\n\n\"\"\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"5\\n1 2\\n1 3\\n2 4\\n1 5\") == \"No\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\\n1 3\") == \"Yes\"\nassert solution(\"5\\n1 2 3 4\\n1 3 2 4\") == \"No\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n1 3 2 4 5 7 6\") == \"Yes\"\nassert solution(\"9\\n1 2 3 4 5 6 7 8 9\\n1 3 2 4 5 7 8 9\") == \"No\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10\\n1 3 2 4 5 7 8 9 10\") == \"Yes\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == \"Yes\"\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == \"No\"\nassert solution('''\n2\n4\n1 2\n1 3\n''') == \"Yes\"\nassert solution('''\n2\n4\n1 2\n1 3\n''') == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n1 3\n2 4\n''') == \"Yes\"\nassert solution('''6\n1 2\n1 3\n2 4\n3 5\n4 6\n5 7\n''') == \"No\"\nassert solution('''5\n1 2\n1 3\n2 4\n3 5\n4 6\n5 7\n''') == \"No\"\nassert solution('''8\n1 2\n1 3\n2 4\n3 5\n4 6\n5 7\n6 8\n''') == \"Yes\"\nassert solution('''10\n1 2\n1 3\n2 4\n3 5\n4 6\n5 7\n6 8\n7 9\n''') == \"Yes\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 4 3') == 'No'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2\n1 3\n2 4\n1 2 3 4\n\n4\n1 2\n1 3\n2 4\n1 2 3 4\n\n''') == \"Yes\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 6 5') == \"24500\"\nassert solution('2 4 5') == \"-1\"\nassert solution('3 2 0 5500') == \"25500\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n\") == \"-1\"\nassert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 7000\\n\") == \"-1\"\nassert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n') == '24500'\nassert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n') == '-1'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n''') == '24500'\nassert solution('''\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n''') == '-1'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 0 5000\") == \"24500\"\nassert solution(\"2 4 5\") == \"-1\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 6 5') == '24500'\nassert solution('2 4 5') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n''') == '24500', 'First sample'\nassert solution('''\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n''') == '-1', 'Second sample'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n''') == '24500'\nassert solution('''\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n''') == '-1'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 6 5') == '24500'\nassert solution('2 4 5') == '-1'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 6 5') == '24500'\nassert solution('2 4 5') == '-1'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 4 30''') == '19.668384925'\nprint(solution('''1 1 45'''))\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1 45\n''') == '0.828427125'\nassert solution('''\n6 4 30\n''') == '19.668384925'\n''')"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 5 45\n''') == '0.828427125'\nassert solution('''\n6 4 30\n''') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\nassert solution('1 1 45') == '0.828427125'"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 4 30') == '19.668384925'\nassert solution('1 1 45') == '0.828427125'\nassert solution('5 7 45') == '19.668384925'\nassert solution('9 9 45') == '18.566536416'"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 30') == '0.828427125'\nassert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 45\\n') == '0.828427125'\nassert solution('6 4 30\\n') == '19.668384925'"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\n\n\nfrom math import pi\n\nw, h, \u03b1 = map(int, input().split())"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3000\"\nassert solution([\"ATK 2000\", \"DEF 1700\", \"2500\", \"2500\", \"2500\", \"0\", \"1\", \"11\"]) == \"992\"\nassert solution([\"ATK 10\", \"ATK 100\", \"ATK 1000\", \"1\", \"11\", \"101\", \"1001\", \"0\"]) == \"992\"\nassert solution([\"DEF 0\", \"ATK 0\", \"0\", \"0\", \"1\", \"1\", \"1\", \"1\"]) == \"1\"\nassert solution([\"ATK 0\", \"ATK 0\", \"1\"]) == \"1\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n\n''') == '3000'\nassert solution('''3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n''') == '1'\nassert solution('''2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n''') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n''') == '3000'\nassert solution('''\n3 4\nATK 10\nATK 100\nATK 1000\n1\n11\n101\n1001\n''') == '992'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n\n''') == '3000'\nassert solution('''\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n''') == '1'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 4\nATK 10\nATK 100\nATK 1000\n1\n11\n101\n1001\n\n\"\"\"\n) == \"992\"\n\nassert solution(\n\"\"\"\n2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n\n\"\"\"\n) == \"3000\"\n\nassert solution(\n\"\"\"\n2 2\nATK 1000\nDEF 1000\n\n\"\"\"\n) == \"1000\"\n\nassert solution(\n\"\"\"\n2 4\nATK 0\nATK 0\nATK 0\n1\n11\n101\n1001\n\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n\n''') == '3000', 'First test'\nassert solution('''\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n''') == '1', 'Second test'\n''')\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n''') == '3000'\nassert solution('''3 4\nDEF 0\nATK 0\n0\n0\n1\n1\n''') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 3, 'ATK', 2000, 'DEF', 1700, '2500', 2500, '2500', '2500', '2500', '2500', '1'],) == '3000'\nassert solution([2, 4, 'DEF', 0, 'ATK', 0, 0, 1, '1'],) == '1'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3000\"\nassert solution() == \"992\"\nassert solution() == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3000\"\nassert solution() == \"992\""
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n\"\"\") == \"6\"\nassert solution(\"\"\"\n2 2\n1 2\n0 0\n2 1 -100 -100\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n\"\"\") == \"62\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('5 4') == '6'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4\n4 3 2 1 1\n0 2 6 7 4\n''') == '6'\nassert solution('''\n5 4\n4 3 2 1 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '62'\n\nassert solution('''\n1 1\n1 1\n1 2\n1 3\n1 4\n1 5\n''') == '7'\n\nassert solution('''\n5 4\n4 3 2 1 1\n0 2 6 7 4\n1 2 3 4 5 6 7 8 9\n''') == '7'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"6 4\") == \"2\""
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"6\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"5 4\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\nassert solution('''5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62'\nassert solution('''5 4\n4 3 2 1 1\n0 2 6 7 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n1 2 2 3 4\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n\"\"\") == '6'\nassert solution(\"\"\"\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n\"\"\") == '62'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"6\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"5 4\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"6\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"5 4\") == \"62\""
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '6'\nassert solution('2 2') == '2'\nassert solution('5 4') == '62'"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"aabbb\") == \"NO\"\nassert solution(\"abbbaa\") == \"NO\"\nassert solution(\"a\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('bbaa') == 'YES'"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'YES'\nassert solution(input_2) == 'NO'\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"YES\", \"First example\"\nassert solution(\"abaa\") == \"YES\", \"Second example\"\n\nstdin = \"\"\nprint(solution(stdin))"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"bbaa\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('aabb') == 'NO'\n\nassert solution('aaaa') == 'YES'\nassert solution('abab') == 'NO'\n\nassert solution('a') == 'YES'\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_line) == 'YES'"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaba') == 'YES', \"Result is not correct\"\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('abab') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 3 1 6 5\n''') == 'YES'\nassert solution('''\n3\n1 2 1\n''') == 'NO'\nassert solution('''\n1\n1\n''') == 'NO'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"YES\\n2 2\\n4 4\\n7 7\\n\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution(input) == \"NO\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n2 1 3 4 6 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('5 3') == 'Yes'\nassert solution('6 3') == 'No'\nassert solution('4 4') == 'No'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == 'Yes', 'Should match the pattern for one filename'\nassert solution('2 2') == 'No', 'Should not match the pattern for two filenames'\nassert solution('6 2') == 'Yes', 'Should match the pattern for six filenames'\nassert solution('3 3') == 'Yes', 'Should match the pattern for three filenames'\n\n\n\"\"\"\n\nimport re\nimport sys"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\nab\nac\ncd\n1 2\n''') == 'Yes', \"Should be Yes\"\nassert solution('''5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n''') == 'Yes', \"Should be Yes\"\nassert solution('''6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == 'No', \"Should be No\"\nassert solution('''6 4\na\nb\nc\ndd\n1 2 3\n''') == 'No', \"Should be No\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1 2\nab\nac\ncd\n1 2\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n6 4\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\"\"\"\n) == \"No\"\n\nassert solution(\n\"\"\"\n4 3\na\nb\nc\ndd\n1 2 3\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n1 5\ntest.\n.est\ntes.\n1 2 3 4 5\n\"\"\"\n) == \"Yes\""
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 'Yes'\nassert solution(input) == 'No'\n\n'''\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    1\n    2\n    3\n''') == 'Yes'\nassert solution('''\n    1\n    2\n    3\n''') == 'No'\nassert solution('''\n    3\n    2\n    1\n''') == 'Yes'\nassert solution('''\n    5\n    6\n    8\n''') == 'No'\nassert solution('''\n    5\n    1\n    5\n''') == 'Yes'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3\") == \"No\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"4 4\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\nassert solution(\"5 5\") == \"Yes\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\nab\nac\ncd\n1 2\n''') == \"Yes\", \"First\"\nassert solution('''\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n''') == \"Yes\", \"Second\"\nassert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == \"No\", \"Third\"\n'''\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('5 3') == 'Yes'\nassert solution('4 4') == 'No'\nassert solution('6 3') == 'No'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == \"Yes\"\nassert solution('''\n5 3\na\nb\nc\ndd\n1 2 3\n''') == \"Yes\"\nassert solution('''\n3 2\nab\nac\ncd\n1 2\n''') == \"No\"\n'''\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n3\n1 2 3\n    \"\"\") == \"2\"\nassert solution(\n    \"\"\"\n3\n1 2 3\n    \"\"\") == \"3\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\"\nassert solution(\"2\\n1 2\\n\") == \"1\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('2\\n1 2 3') == '2'\nassert solution('5\\n1 2 3 4 5') == '2'"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '3'\nassert solution('1000000000') == '1000000007'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"4\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n''') == '2'\nassert solution('''5\n1 2 3 4 5\n''') == '2'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n''') == '2'\n\nassert solution('''6\n3 4 2 1 1 5\n''') == '3'\n\nassert solution('''5\n1 1 1 2 2\n''') == '3'\n\nassert solution('''5\n1 1 1 2 2\n''') == '4'\n\nassert solution('''8\n5 1 2 1 1 2 3 1 1\n''') == '1'"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"2 2 2\") == \"2\"\nassert solution(\"3 3 3\") == \"3\"\nassert solution(\"4 4 4\") == \"4\"\nassert solution(\"5 5 5\") == \"5\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\n\"\"\"\nfrom itertools import permutations"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n2 3\\n3 4') == '2'\nassert solution('4\\n1 2\\n2 3\\n3 4') == '1'"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('10') == '4'\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([4, 1, 2, 3]) == \"2\"\nassert solution([2, 3, 4, 1]) == \"1\"\nassert solution([5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5,"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '2'\n\nassert solution('''\n7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '4'\n\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '1'"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n') == '1'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\n\"\"\""
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == 2\nassert solution(\"1 2\") == 2\nassert solution(\"4\") == 1\n\"\"\"\n\nfrom collections import Counter\nfrom itertools import combinations\nimport collections\n\nn = int(input())\n\ntree = collections.defaultdict(list)\n\nfor _ in range(n - 1):\n    a, b = map(int, input().split())\n    tree[a].append(b)\n    tree[b].append(a)\n\nc = Counter()\nfor v in tree.values():\n    c.update(v)\n\nc = c.most_common()\n\nc = [x[0] for x in c if x[1] % 2 == 0]\n\nprint(len(c))"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5') == '3'\nassert solution('10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10') == '4'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''4\n1 2\n2 3\n3 4\n''') == '1'\n'''\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"1 0 1 0 1 1 0 1 1 1\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'\nprint(\"You're all set!\")"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5 1\n''') == \"4\", solution('''\n3 4 5\n''')\nassert solution('''\n10 2 10\n''') == \"5\", solution('''\n10 3 10\n''')\nassert solution('''\n5 3 1\n''') == \"4\", solution('''\n10 3 1\n''')"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 2 5\n''') == '4'\n\nassert solution('''\n10 3 10\n''') == '5'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\\n') == '1\\n2 3\\n3 4\\n1 2\\n1 5'\n\"\"\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"4 4\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5''') == \"1 2 3 4 5\"\n\nassert solution('''4 4\n1 2\n1 3\n1 4\n3 4\n\nOutput\n1\n1 \n\n\n-----Hint-----\n\nAn easy way to think of this problem is to consider the graph as a graph with edges representing friendship and nodes representing people. In a graph without vertices, there is no such edge. So in the example above, we can see that 1, 2, 3 and 4 are friends of each other. To see how it can be done, we need to think of how many possible edges exist between a person and his friends. To see this, we need to know how many people are connected to the person.\n\nFor this, we can simply count the number of edges connected to the person using the BFS approach. In the code, let's see an example:"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5, 6]) == \"2\"\nassert solution([4, 4]) == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5''') == '2'\nassert solution('''4 4\n1 2\n1 3\n1 4\n3 4''') == '1'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '2'\n\nassert solution('''\n5 4\n1 2\n1 3\n1 4\n3 4\n4 5\n''') == '1'\n\nassert solution('''\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '1'\n\nassert solution('''\n5 6\n1 2\n1 3\n1 4\n2 3\n2 5\n3 4\n4 5\n''') == '1'\n\nassert solution('''\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '1'"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"0 0\") == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '2'\nassert solution('4 4') == '1'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n25 5\\n1\\n2 2\\n2 2\\n2 2\\n4 1\\n4 2\\n5 3\\n') == 'Yes'\n\nassert solution('2\\n30 20 40 50\\n5 3\\n1 3\\n2 3\\n3 3\\n4 2\\n5 3\\n6 2\\n7 3\\n') == 'No'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == 'Yes'\nassert solution('3') == 'No'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n\n\n\"\"\""
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n75 150 75 50\n''') == 'Yes'\nassert solution('''3\n100 150 250\n''') == 'No'\n'''\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n75 150 75 50') == 'Yes'\nassert solution('3\\n100 150 250') == 'No'\n\"\"\"\n\nn = int(input())\nplayers = list(map(int, input().split()))\n\nplayers.sort()\n\nfirst = players[0]\nsecond = players[1]\nthird = players[2]"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n75 150 75 50\n3\n100 150 250''') == \"No\"\nassert solution('''4\n75 150 75 50\n2\n100 150''') == \"Yes\"\nassert solution('''3\n100 150 250\n2\n100 150''') == \"Yes\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n75 150 75 50') == 'Yes'\nassert solution('3\\n100 150 250') == 'No'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n75 150 75 50\n''') == 'Yes'\nassert solution('''3\n100 150 250\n''') == 'No'\nassert solution('''2\n60 120\n''') == 'Yes'\nassert solution('''2\n50 100\n''') == 'No'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\"\nassert solution([5, 5, 5, 5]) == \"Yes\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"No\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '150'\nassert solution('2') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n50 50 50\n''') == '150'\nassert solution('''2\n-1 -100 -1\n''') == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\">5\") == \"0\"\nassert solution(\">1\") == \"1\"\nassert solution(\">7\") == \"15\"\nassert solution(\">5\") == \"0\"\nassert solution(\">1\") == \"1\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n-100\n''') == '100'\nassert solution('''\n2\n50 50 50\n''') == '150'\nassert solution('''\n2\n-1 -100 -1\n''') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '150'\nassert solution('2') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([50, 50, 50]) == 150\nassert solution([-1, -100, -1]) == 100\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"150\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n50 50 50\n''') == '150'\nassert solution('''2\n-1 -100 -1\n''') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '150'\nassert solution('2') == '100'"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\nab a\\n\") == \"1\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"2\""
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 5\nab a\ncc c\nca a\nee c\nff d\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n6 2\nbb a\nba a\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n6 1\ncc\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nc a\\nee c\\nff d') == '4'\nassert solution('2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c') == '1'\nassert solution('6 2\\nbb a\\nba a') == '0'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"2 8\") == \"1\"\nassert solution(\"6 2\") == \"0\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '4'\nassert solution('2 8') == '1'\nassert solution('6 2') == '0'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5\nab a\ncc c\nca a\nee c\nff d\n\n''') == '4'\nassert solution('''\n2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n\n''') == '1'\nassert solution('''\n6 2\nbb a\nba a\n\n''') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == 4\nassert solution('2 8') == 1\nassert solution('6 2') == 0\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n') == '4'\nassert solution('6 2\\nbb a\\nba a\\n') == '1'\nassert solution('5 1\\naa bb c\\nab aa bb') == '0'\nassert solution('6 2\\naa aa bb\\nab aa bb') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '4', solution('3 5')\nassert solution('2 8') == '1', solution('2 8')\nassert solution('6 2') == '0', solution('6 2')"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3\n4''') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\"\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"10\""
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1.000000000000\"\nassert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"4 1\") == \"1.250000000000\"\nassert solution(\"1 2\") == \"-1\"\n\nassert solution(\"3 1\") == \"1.000000000000\"\n\n\n'''\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1''') == '1.000000000000'\nassert solution('''1 3''') == '-1'\nassert solution('''4 1''') == '1.250000000000'\nassert solution('''1 1''') == '0.000000000000'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n''') == '1.000000000000'\nassert solution('''\n1 3\n''') == '-1'\nassert solution('''\n4 1\n''') == '1.250000000000'\nassert solution('''\n5 2\n''') == '-1'\n'''"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1.000000000000\"\n\nassert solution(sys.stdin.read()) == \"-1\"\n\nassert solution(sys.stdin.read()) == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"1.250000000000\"\nassert solution(\"4 1\") == \"-1\"\nassert solution(\"1 4\") == \"1.250000000000\"\n\n\n\"\"\"\n\n\nimport math"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '1.5'\nassert solution('2 4') == '1'\nassert solution('3 3') == '1.250000000000'\nassert solution('4 1') == '1.000000000000'\nassert solution('2 1') == '-1'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1.000000000000\"\nassert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"4 1\") == \"1.250000000000\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"1.000000000000\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"4 2\") == \"1.250000000000\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == '1.000000000000'\nassert solution(\"1 3\") == '-1'\nassert solution(\"4 1\") == '1.250000000000'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n12\\n11 8\\n\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\\n\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"10.0000000000\"\nassert solution(\"3\") == \"85.4800000000\"\nassert solution(\"6\") == \"-1\""
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n2\n12\n11 8\n7 5\n    '''\n    ) == '10.0000000000'\n\nassert solution(\n    '''\n3\n1\n1 4 1\n2 5 3\n    '''\n    ) == '-1'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '10.0000000000'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '10.0000000000'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n12\n11 8\n7 5\n''') == '10.0000000000'\nassert solution('''3\n1\n1 4 1\n2 5 3\n''') == '-1'\nassert solution('''6\n2\n4 6 3 3 5 6\n2 6 3 6 5 3\n''') == '85.4800000000'"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2\"\n) == \"10.0000000000\"\n\nassert solution(\n    \"3\"\n) == \"-1\""
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open(\"sample.in\").read()) == \"10.0000000000\"\n\nprint(solution(open(\"sample.in\").read()))\n\nassert solution(open(\"sample.in\").read()) == \"10.0000000000\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n12\n11 8\n''') == \"10.0000000000\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"10.0000000000\"\nassert solution(\"3\") == \"-1\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n\n''') == '0'\nassert solution('''\n10\n\n''') == '4'\n''')\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == 0\nassert solution(\"10\") == 4\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 0\n\n\"\"\""
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nInput\n10\n\nOutput\n0\n''') == '4'\nassert solution('''\nInput\n10\n\nOutput\n0\n''') == '4'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 0\nassert solution('10') == 4\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n\") == \"0\"\nassert solution(\"10\\n\") == \"4\""
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Wh.'"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'Wh'\nassert solution('5') == 'abdef'\n\n\n--- Day 3: Toboggan Trajectory ---\n\nYou start on the open slope of a one-dimensional, directed line (your puzzle input).\n\nThe line has unknown slope (a float between -90 and 90) and unknown number of units (an integer between 2 and 99).\n\nThe line is horizontal (i.e., its orientation does not matter) and so the only units on the line are rightward (the positive direction) and downward (the negative direction).\n\nYou can only move rightward or downward at any point in time.\n\nDetermine the number of times you can move right or down until you walk a total distance of 100.\n\nFor example, suppose you are on cell 2, and you can move right 2 times, down 1 time, and back up one time. The line looks like this:\n\n.##.\n..#.\n...#\n.###\n\nIn this example, you need to find the answer in cell 1 (in the middle), so your answer will be 2.\n\nAnother example, if you start at cell 1, the line looks like this:\n\n......\n.#####\n.#....\n.#####\n....#.\n.#####\n\nThe cell at 2 (i.e., the cell to your right) has unknown slope, so your line has unknown length and you can't reach cell 2 in this way.\n\nThe cell at 2 can be reached in exactly one way:\n\n1. Downward right one unit, then right one unit, and so on.\n\n2. Downward left one unit, then left one unit, and so on.\n\n3. Downward right one unit, then right one unit, and so on.\n\n4. Upward one unit, then right one unit, and so on.\n\n5. Upward one unit, then left one unit, and so on.\n\n6. Upward right one unit, then right one unit, and so on.\n\n7. Upward left one unit, then left one unit, and so on.\n\n8. (start at cell 1, 2)\n\nWhile you can still reach cell 2, it is not the cell to your right, so your answer will be 1.\n\nHowever, now the line is much longer, and your answer is now 3.\n\n\nInput\n\nTwo lines of numeric input:\n\nThe first line contains two integers q and n (1 \u2264 q \u2264 100) \u2014 the number of queries and the line length.\n\nThe second line contains n space-separated integers, each of which is either 1 or 2.\n\nOutput\n\nA single integer \u2014 the answer to your query.\n\n\nExample\nInput\n\n3\n3 2\n1 1 1 2\n\nOutput\n\n6\n\n\n-----Solution-----"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Wh.'\nassert solution('1 2') == 'abdef'\nassert solution('1 111111111111') == 'Areyoubusy'\nassert solution('5 4') == 'Areyoubusy'\nassert solution('10 3') == 'abdef'\n\n----\n\nn = int(input())\ndic = {}\nfor i in range(n):\n    s = input()\n    for j in range(1,len(s)+1):\n        if s[j-1] not in dic:\n            dic[s[j-1]] = 1\n        else:\n            dic[s[j-1]] += 1\n\nprint(dic)\n\nfor i in range(1,len(s)+1):\n    if s[i-1] not in dic:\n        print('.', end='')\n    else:\n        print(s[i-1],end='')"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Wh\") == \"Wh.\"\nassert solution(\"abdef\") == \"Areyoubusy\"\nassert solution(\"Wh. Wh\") == \"Wh Wh.\"\nassert solution(\"Wh Wh.\") == \"Wh Wh Wh.\"\nassert solution(\"Wh Wh. Wh\") == \"Wh Wh Wh.\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1') == 'Wh'\nassert solution('5 0') == 'abdef'\nassert solution('6 0') == 'Areyoubusy'\n\"\"\"\nimport collections"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'Areyoubusy'\nassert solution('1 111111111111') == 'Wh'\n\n\"\"\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n1 2\n1 111111111111\n''') == 'Wh.'\nassert solution('''\n5 0\n0 69\n1 194\n1 139\n0 47\n1 66\n''') == 'abdef'\nassert solution('''\n10 1\n4 1825\n3 75\n3 530\n4 1829\n4 1651\n3 187\n4 584\n4 255\n4 774\n2 474\n''') == 'Areyoubusy'\n\n\n\n\"\"\""
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Wh\"\n\nassert solution(input()) == \"Areyoubusy\"\n\n\"\"\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"Wh\"\nassert solution(\"5 0\") == \"abdef\"\nassert solution(\"5 1\") == \"Areyoubusy\"\nassert solution(\"5 2\") == \"Areyoubusy\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n1 2\n1 111111111111\n\n''') == 'Wh.'\nassert solution('''5 0\n0 69\n1 194\n1 139\n0 47\n1 66\n\n''') == 'abdef'\nassert solution('''10 4\n4 1825\n3 75\n3 530\n4 1829\n4 1651\n3 187\n4 584\n4 255\n4 774\n2 474\n\n''') == 'Areyoubusy'\n'''\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?+?') == 'Possible'\nassert solution('?+?-?') == 'Impossible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Possible\"\nassert solution(input()) == \"Impossible\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Possible\"\nassert solution(input()) == \"Impossible\""
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == 'Possible'\nprint(solution(s))\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"? +? -? +? +? = 42\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\""
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? +? -? +? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'Impossible'\nassert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\nprint(solution(input()))\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 0 2\n0\n0\n0\n''') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2 0 2\n0\n0\n0\n\n''') == '7 4 5', \"First Test Case\"\nassert solution('''\n5\n1 2 0 2 1\n0 1 2 0\n0 2 0 1\n0 1 2 0\n1 2 0 2\n\n''') == '5 5 4 4 4', \"Second Test Case\"\nassert solution('''\n10\n1 2 0 2 1 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0 2 1 2 0"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input) == '7 4 5'\nassert solution(input) == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"7 4 5\"\nassert solution(\"100\") == \"85 30 45\"\nassert solution(\"10\") == \"10 10 10\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"5 4 3\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"4\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '7 4 5'\nassert solution('3') == '7 4 5'\nassert solution('2') == '7 4 5'\nassert solution('1') == '7 4 5'\nassert solution('4') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2 2 0 0\"\nassert solution(\"3\") == \"0 1 1 0\"\nassert solution(\"5\") == \"1 0 1 0 0\"\nassert solution(\"6\") == \"0 0 0 1 1\"\nassert solution(\"7\") == \"0 0 0 0 1 1\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '7 4 5'"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"7 4 5\"\nassert solution(\"10\") == \"10 9 8 7 6 5 4 3 2 1\""
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '7 4 5'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"6\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"3\",\"aaaaaab\",\"bbbbbbb\",\"c\"]) == \"Yes\"\nassert solution([\"3\",\"ccc\",\"ac\",\"bd\"]) == \"No\"\nassert solution([\"3\",\"ab\",\"ba\",\"ba\"]) == \"Yes\"\nassert solution([\"3\",\"ab\",\"ba\",\"bb\"]) == \"No\"\nassert solution([\"3\",\"aa\",\"aa\",\"aa\"]) == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nabcd\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\"\n\"\"\""
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"6\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '6') == 'Yes', 'First example'\nassert solution(\n    '3') == 'No', 'Second example'\nassert solution(\n    '3') == 'Yes', 'Third example'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\naabddc\n\n4\nababcb\n\n1\nba''') == 'Yes'\nassert solution('''6\naabddc\n\n5\naaaaaaa''') == 'Yes'\nassert solution('''3\nabc\n\n4\naaaaaa''') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\naabddc\n\n5\njjj\n\n6\naaa''') == 'Yes'\nassert solution('''1\nabcd\n\n2\nabcd\n\n3\nabcd\n\n4\nabcd\n\n5\nabcd\n\n6\nabcd\n\n7\nabcd\n\n8\nabcd\n\n9\nabcd\n\n10\nabcd''') == 'Yes'\nassert solution('''5\na\n\n6\naaa\n\n7\naaa\n\n8\naaa\n\n9\naaa\n\n10\naaa''') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\nabcd\") == \"Yes\"\nassert solution(\"3\\nabc\") == \"No\"\nassert solution(\"3\\njjj\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '531406'\n\n\u0412 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0435 \u0435\u0441\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0430\u044f \u0444\u043e\u0440\u043c\u0443\u043b\u0430:\n\nS = (1/x) - (1/1) + (1/2) - (1/3) +... + (1/n)\n\n\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 \u0435\u043c\u0443 \u0440\u0435\u0448\u0438\u0442\u044c \u044d\u0442\u0443 \u0437\u0430\u0434\u0430\u0447\u0443.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435 \u043f\u043e\u0434\u0430\u0451\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e n (n\u22641000). \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u2014 \u0435\u0433\u043e \u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 1000000007.\n\n\u0424\u043e\u0440\u043c\u0430\u0442 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 \u043e\u0442\u0440\u0435\u0437\u043a\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043e\u0442 \u0438 \u0434\u043e.\n\n\u041f\u0440\u0438\u043c\u0435\u0440 1\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n5\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n531406\n\n\"\"\"\n\n\"\"\"\nn = int(input())\np = 1\n\nfor i in range(1, n+1):\n    p *= i\n\np = p // 1000000007\n\nprint(p)\n\"\"\"\n\n\"\"\"\nn = int(input())\n\nm = int(n)\n\nwhile n > 0:\n    if n > 0:\n        n -= 1\n        m *= 1\n    else:\n        n = int(input())\n        m *= 1\n\nprint(m)\n\"\"\"\n\nn = int(input())\n\np = 1\n\nfor i in range(1, n+1):\n    p *= i\n\np = p // 1000000007\n\nprint(p)\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0'\nassert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 2') == '54'\nassert solution('7 4') == '1728'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n''') == '54'\nassert solution('''\n7 4\n''') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"54\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n\n''') == '54'\nassert solution('''\n7 4\n\n''') == '1728'\nassert solution('''\n8 3\n\n''') == '1272'"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n\n2 4\n''') == '2 1'\nassert solution('''3 3\nWWW\nBWW\nWWW\n\n1 1\n''') == '1 1'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n\"\"\") == \"2 4\"\nassert solution(\"\"\"\n3 3\nWWW\nBWW\nWWW\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n9 5\nWWWWWBBBBBWWWWWWWW\nWWWWWBBBBBWWWWWWWW\nWWWWWBBBBBWWWWWWWW\nWWWWWBBBBBWWWWWWWW\nWWWWWBBBBBWWWWWWWW\nWWWWWBBBBBWWWWWWWW\nWWWWWBBBBBBWWWWWWW\nWWWWWBBBBBBWWWWWWW\nWWWWWBBBBBBWWWWWWW\nWWWWWBBBBBBWWWWWWW\nWWWWWBBBBBBWWWWWWW\n\"\"\") == \"7 4\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\nassert solution('''5 5\nWWWWW\nWWWWW\nWWWWW\nWWWWW\nWWWWW\n''') == '2 3'\nassert solution('''8 2\nBBB BBB\nBBB BBB\nBBB BBB\nBBB BBB\nBBB BBB\nBBB BBB\nBBB BBB\nBBB BBB\nBBB BBB\n''') == '1 4'"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"\\n\") == \"\"\nassert solution(\"\\n\\n\") == \"\"\nassert solution(\"\\n\\n\\n\") == \"\"\nassert solution(\"\\nW\\n\") == \"\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '2 4'\nassert solution('3 3') == '2 1'"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW') == '2 4'\nassert solution('3 3\\nWWW\\nBWW\\nWWW') == '2 1'\nprint(solution(input()))\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\nWW\nW\n''') == '2 1'\nassert solution('''\n5 2\nWWWW\n''') == '2 1'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2 1\"\nassert solution(\"5 6\") == \"2 4\"\nassert solution(\"12 13\") == \"2 5\"\nassert solution(\"11\") == \"1 2\"\nassert solution(\"10\") == \"1 1\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\nassert solution('''5 2\nWW\nB\n''') == '2 1'\nassert solution('''5 4\nBBBWW\nBBBBW\nBBBBB\nBBBBBB\nBBBBBB\n''') == '4 3'\nassert solution('''7 4\nBBBBWB\nBBBBBWB\nBBBBBWB\nBBBBBBWB\nBBBBBBWB\nBBBBBWB\nBBBBBBWB\nBBBBBBWB\n''') == '7 3'\nprint('A')\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\nassert solution('''\n3 3\nWWW\nBWW\nWWW\n''') == '2 1'\nassert solution('''\n5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\nassert solution('''\n5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\nassert solution('''\n5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7\") == \"10 9 10 10 9\"\nassert solution(\"2 3\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"10 9 10 10 9\"\nassert solution(['5', '7', '2', '4']) == \"10 9 10 10 9\"\nassert solution(['2', '3', '1', '2']) == \"5 6 7 6\"\nassert solution(['2', '3', '1', '2']) == \"5 6 7 6\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'\nassert solution('''2 3\n1 2\n1 2\n1 2\n''') == '5 6'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10 9 10 10 9\""
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5''') == '10 9 10 10 9'\nassert solution('''2 3\n1 2\n1 2\n1 2\n''') == '5 6'\nassert solution('''5 5\n2 4\n1 2\n3 2\n1 3\n3 2\n''') == '13 10 13 10 13'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7\") == \"10 9 10 10 9\"\nassert solution(\"2 3\") == \"5 6\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"5 6\"\nassert solution(\"5 7\") == \"10 9 10 10 9\""
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7') == '10 9 10 10 9'\nassert solution('2 3') == '5 6'"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7\") == \"10 9 10 10 9\"\nassert solution(\"2 3\") == \"5 6\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '2'\nassert solution('-1 -1') == '2'\nassert solution('2') == '2'\nassert solution('0 1') == '2'\nassert solution('1 0') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 1') == '2'\nassert solution('1 1') == '2'\nassert solution('1 1') == '2'\nassert solution('-1 -1') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1\n-1 -1\n2\n0 1 0\n1 0 0\n\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3''') == '2'\nassert solution('''1 1\n-1 -1\n2\n0 1 0\n1 0 0\n\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3''') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n1 0 0\\n1 1 -3') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n-1 -1\n2\n0 1 0\n1 0 0\n''') == '2'\n\nassert solution('''\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3\n''') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2\", \"1 1\"\nassert solution(\"-1 -1\") == \"2\", \"-1 -1\"\nassert solution(\"2\") == \"2\", \"2\"\nassert solution(\"0 1 0\") == \"2\", \"0 1 0\"\nassert solution(\"1 0 0\") == \"2\", \"1 0 0\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\n-1 -1\\n2') == '2'\nassert solution('1 1\\n-1 -1\\n3') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3') == '1'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n0 1 0') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n-1 -1\n2\n0 1 0\n1 0 0\n''') == '2'\nassert solution('''\n1 1\n-1 -1\n3\n0 1 0\n0 1 0\n1 1 -3\n''') == '2'\nassert solution('''\n1 1\n-1 -1\n3\n0 1 0\n0 1 0\n1 1 -3\n1 2 -4\n''') == '4'\n\n'''\nclass Solution:\n    def solution(self, x, y, roads):\n        intersections = []\n        for i in range(len(roads)):\n            if (x == roads[i][0] and y == roads[i][1]) or (x == roads[i][1] and y == roads[i][0]):\n                intersections.append(roads[i])\n        return len(intersections)\n'''"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n0 0 0\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n0 0 0\\n1 0 0\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n0 0 0\\n1 0 0\\n2 3 5\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n0 0 0\\n1 0 0\\n2 3 5\\n5 4 -7\") == \"2\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n') == '2'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == 'Kevin'\nassert solution('1 2') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == 'Kevin'\nassert solution('3 4') == 'Nicky'\nassert solution('1 2') == 'Kevin'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Kevin\"\nassert solution(\"1 3\") == \"Nicky\"\nassert solution(\"2 2\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"Kevin\"\nassert solution(\"1 2\") == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'\nassert solution('5 5\\n12 10') == 'Kevin'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == 'Kevin'\nassert solution('1 2') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"Nicky\"\nprint(solution(input))\nprint(\"Success\")"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Kevin'\nassert solution('1 2') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1\n3 4''') == 'Kevin'\nassert solution('''1 2\n3''') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == 'Kevin'\nassert solution('1 2') == 'Nicky'"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 3\\n') == '2 1 3'\nassert solution('2\\n2 2\\n') == '1'\nassert solution('3\\n1 2 3\\n') == '2 1 3'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 3\n\n''') == '3'\nassert solution('''\n3\n2 2 2\n\n''') == '1'\nassert solution('''\n2\n1\n\n''') == '2'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n') == '3 1 2'\nassert solution('2 2 2\\n') == '1 1 1'"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1 1 1'\nassert solution('2 2') == '2 2'\nassert solution('3 4') == '4 4 4'\nassert solution('8 8') == '8 8'\nassert solution('4 4') == '-1'"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n3 2 3 3 3 2 2 2 3\n5\n
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1 1'\nassert solution('3 2') == '1 2 3'\nassert solution('4 4') == '2 2 2'\nassert solution('5 5') == '1 1 1 1 1'\nassert solution('6 6') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 1 1'\nassert solution('3') == '1 2 3'\nassert solution('1') == '1 1 1'\nassert solution('2') == '1 2 3'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1 2'\nassert solution('3 1') == '1 2 3'\nassert solution('4 1') == '1 2 3 4'\nassert solution('5 1') == '1 2 3 4 5'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"3\\n1 2 3\\n1 2 3\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\n1 1 1\\n2\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('1 2 3') == '1 2 3'\nassert solution('2 2 2') == '1 2 3'\nassert solution('2 1') == '2 2 2'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"0\") == \"1\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\""
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n11\n''') == '6'\nassert solution('''\n01\n''') == '2'\nassert solution('''\n01\n''') == '1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1011') == '5'\nassert solution('01') == '1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''00\n01''') == '1'\nassert solution('''11\n''') == '6'\nassert solution('''11\n11''') == '0'\nassert solution('''1\n1''') == '0'\nassert solution('''11\n00''') == '5'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'\nassert solution('5 7') == '4'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\"\n    ) == \"1\"\n\nassert solution(\n    \"3\"\n    ) == \"3\"\n\nassert solution(\n    \"2\"\n    ) == \"4\"\n\nassert solution(\n    \"1 1 2\"\n    ) == \"3\"\n\nassert solution(\n    \"3\"\n    ) == \"4\""
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 2') == '4', solution('5 1 2')\nassert solution('3 1 2') == '2', solution('3 1 2')\nassert solution('2 3') == '2', solution('2 3')\nassert solution('4 5 6 7') == '4', solution('4 5 6 7')\nassert solution('10000 1 2 3') == '5', solution('10000 1 2 3')\nprint('\"Run\" is good. It is the end of this kata.')"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 2\n''') == '3'\n\nassert solution('''\n2\n5 7\n''') == '4'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '3'\nassert solution('5 7') == '4'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n15''') == '1'\nassert solution('''3\n1 1 2\n''') == '3'\nassert solution('''2\n5 7\n''') == '4'\nprint(solution('''3\n1 1 2\n'''))"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('2\\n1 0\\n0 1\\n') == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 0 2\n2 0 1\n''') == 'YES'\nassert solution('''4\n1 2 3 0\n0 3 2 1\n''') == 'NO'\nassert solution('''5\n1 0 2 3 0\n0 3 2 1 4\n''') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('2\\n1 0\\n0 1\\n') == 'NO'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n') == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'YES'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'YES'\nassert solution('4') == 'NO'\nassert solution('3') == 'YES'\n\n\n\"\"\""
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 0 2\n2 0 1\n''') == 'YES'\nassert solution('''2\n1 0\n0 1\n''') == 'YES'\nassert solution('''4\n1 2 3 0\n0 3 2 1\n''') == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 0 2\n2 0 1\n\n''') == 'YES'\nassert solution('''4\n1 2 3 0\n0 3 2 1\n\n''') == 'NO'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n8 10 9 9 8 10\n1 1 1 1 1 1\n''') == '9000'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '9000'\nassert solution('6') == '1160'"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"6\\n\"\n    \"8 10 9 9 8 10\\n\"\n    \"1 1 1 1 1 1\\n\"\n    ) == \"9000\"\n\nassert solution(\n    \"6\\n\"\n    \"8 10 9 9 8 10\\n\"\n    \"1 10 5 5 1 10\\n\"\n    ) == \"1160\""
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '1160'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '9000'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '9000'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '1160'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == '9000'\nassert solution(input_string_2) == '1160'\n\"\"\"\nfrom itertools import combinations\nimport math"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 10 9 9 8 10\n1 10 5 5 1 10''') == '1160'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '9000'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"9000\"\nassert solution(\"6\") == \"1160\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == \"1160\"\n\n\"\"\"\n\nn = int(input())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\n\np = sorted(p)\nq = sorted(q)\n\nn = len(p)"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"9000\"\nassert solution(\"6\") == \"1160\"\nassert solution(\"6\") == \"9000\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n8 10 9 9 8 10\n1 1 1 1 1 1\n''') == '1160'\nassert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\nassert solution('''\n6\n1 2 3 4 5\n1 1 1 1 1\n''') == '0'\nassert solution('''\n4\n1 1 2 3\n2 3 1 2\n3 1 2 3\n''') == '2'\nassert solution('''\n5\n1 1 1 1 1\n1 2 2 2 2\n1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '6'\nassert solution('8 6') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4''') == '1'\nassert solution('''8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4''') == '0'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n2 3\n1 4\n1 4\n2 1\n''') == '6'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 2') == '1'\nassert solution('3 3') == '12'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2 3\n1 4\n1 4''') == '6'\nassert solution('''8\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4''') == '1'\nassert solution('''2\n2 2\n1 1''') == '1'\nassert solution('''2\n1 2\n1 1''') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4 2'\n    '2 3'\n    '1 4'\n    '1 4'\n    '2 1'\n    ) == '6'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution(stdin) == '6'\n\"\"\"\n\nn,p = int(input()),int(input())\na = [[int(input()),int(input())] for i in range(n)]\nprint(pow(2,n,p))"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n2 3\n1 4\n1 4\n2 1''') == '6'\nassert solution('''8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4''') == '1'\nassert solution('''5 8\n1 2\n1 3\n1 4\n1 5\n2 1\n2 2\n2 3\n3 1\n3 2\n3 4\n4 1\n4 2''') == '0'\nassert solution('''7 8\n1 2\n1 3\n1 4\n1 5\n2 1\n2 2\n2 3\n2 4\n3 1\n3 2\n3 4\n4 1\n4 2\n4 3\n4 4''') == '7'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2\\n2 3\\n1 4\\n1 4\\n2 1') == '6'\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4\\n') == '1'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '6'\nassert solution('8 6') == '1'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 2 3 4 6') == '5'\nassert solution('4\\n2 4 6 8') == '-1'"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n2 2 3 4 6\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n4\n2 4 6 8\n\"\"\") == -1\n\nassert solution(\"\"\"\n3\n2 6 9\n\"\"\") == \"4\""
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5, 2, 2, 3, 4, 6]) == 5\nassert solution([4, 2, 4, 6, 8, 9]) == -1"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '-1'\nassert solution('5') == '5'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '-1'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 2 3 4 6') == '5'\nassert solution('4\\n2 4 6 8') == '-1'\nassert solution('3\\n2 6 9') == '4'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 1, 2, 4]) == \"4\"\nassert solution([2, 1, 3, 4, 6]) == \"-1\"\nassert solution([2, 4, 6, 8]) == \"5\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3 4 6') == '5'\nassert solution('4') == '-1'\nassert solution('3') == '4'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '5'\nassert solution() == '-1'"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"3\\naca\\nba\\nca\"\nassert solution(input) == \"0\\n\"\n\n'''\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nabacabaca\n''') == '3'\n\nassert solution('''\nabaca\n''') == '0'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\nassert solution('abaca') == '0'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\n\n\"\"\""
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''aba\n    ''') == '3'\nassert solution('''aba\n    ''') == '0'\nassert solution('''aba\n    ''') == '0'\nassert solution('''aba\n    ''') == '0'\n\n'''\n    pass\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\n\n'''"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\n\n\"\"\""
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abacabaca') == \"3\"\nassert solution('abaca') == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '4 5\\n'\n    '11..2\\n'\n    '#..22\\n'\n    '#.323\\n'\n    '.#333') == '2'\nassert solution(\n    '3 3\\n'\n    '111\\n'\n    '122\\n'\n    '211\\n'\n    '222') == '-1'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5\n11..2\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5\n11..2\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323') == '2'\nassert solution('5 5\\n##........\\n##........\\n##........\\n##........\\n##........\\n##........\\n') == '-1'\nassert solution('3 5\\n#######\\n#######\\n#######\\n') == '-1'"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 3\n3.5 2.5\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\n1#2#3\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\\n11.2\\n#.2.3\\n#.3\\n1.1\\n\") == \"2\"\nassert solution(\"4 5\\n11.2\\n#..22\\n#.323\\n.#333\\n\") == \"3\"\n\nstdin = \"\"\"\n5 2\n1.1.2\n1.2.3\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n') == '1\\n', 'Test #1 fail'\nassert solution('3\\n') == '0\\n', 'Test #2 fail'\nassert solution('10\\n') == '0\\n', 'Test #3 fail'\nassert solution('10\\n') == '0\\n', 'Test #4 fail'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == '2'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n3.32\n13.23\n3.23\n1.2\n2.4\n2.1\n4.2\n4.2\n4.1\n2.3\n''') == '5'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '6'\nassert solution('3') == '6'\nassert solution('4') == '4'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '-1'\nassert solution('8') == '6'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\n))((())(\n\n''') == '6'\n\nassert solution('''3\n(()\n\n''') == '-1'\n\nprint(solution(input()))"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"-1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"8\") == \"0\""
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"2\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '-1'\nassert solution('7') == '6'\nassert solution('10') == '9'"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-\"1\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"-1\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 5\n4 4 0\n1 3\n3 2\n3 1\n\nOutput\n1\n3 \nInput\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\nOutput\n4\n1 2 3 4''') == '4'\nprint('All tests passed!')"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1') == '1\\n3\\n', 'Wrong answer'\n\nassert solution('4 5 4\\n2 1 0 3\\n4 3\\n3 2\\n1 2\\n1 4\\n1 3') == '4\\n1 2 3 4\\n', 'Wrong answer'"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\"\"\") == \"1 2 3 4\"\n\nassert solution(\"\"\"\n3 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\"\"\") == \"2 3 4\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('4 5 4') == '1 2 3 4'\nassert solution('2 1 0 3') == '3 2 1'\nassert solution('4 3') == '4'\n\n\"\"\"\n\nimport itertools"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 5') == '1', 'Sample test'\nassert solution('4 5 4') == '4', 'Sample test'\nassert solution('5 3 5') == '4', 'Sample test'\nassert solution('10 10 4') == '10', 'Sample test'\nassert solution('5 10 2') == '5', 'Sample test'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3 5\n4 4 0\n1 3\n3 2\n3 1\n''') == '1\nassert solution('''4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4\nassert solution('''3 3 5\n4 4 0\n1 3\n3 2\n3 1\n''') == '3\nassert solution('''4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4''')\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 5\n4 4 0\n1 3\n3 2\n3 1\n''') == '1'\nassert solution('''4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"4 5 4\") == \"3\"\nassert solution(\"3 5 4\") == \"4\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 3 5\n4 4 0\n1 3\n3 2\n3 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 3 5\n4 4 0\n1 3\n3 2\n3 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('4 5 4') == '4'"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5\\n2 2\\n2 3\\n4 4\\n4 5\\n3 3\\n5 5\\n6 6\\n7 7\\n') == '8'\n\n\"\"\"\n\nimport math\n\nn, m = map(int, input().split())\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '8'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"8\"\nassert solution(\"12 12\") == \"12\"\n\"\"\"\n\nn, m = map(int, input().split())\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '8'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n\n2 2\n\n3 2\n\n2 1\n\n2 2\n\n3 2\n\n1 1\n\n2 2\n\n2 1\n\n''') == '12'\n\nassert solution('''\n2 3\n\n3 2\n\n2 2\n\n1 1\n\n2 1\n\n3 2\n\n2 3\n\n''') == '8'\n\nassert solution('''\n2 3\n\n2 2\n\n2 2\n\n2 2\n\n2 2\n\n2 2\n\n''') == '2'\n\nassert solution('''\n2 3\n\n3 2\n\n2 2\n\n1 1\n\n2 1\n\n3 2\n\n2 2\n\n''') == '0'\n\nassert solution('''\n2 3\n\n3 2\n\n2 2\n\n1 1\n\n2 1\n\n3 2\n\n2 2\n\n''') == '0'\n\n'''\n\n\"\"\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n''') == 8, 'First puzzle test'\nassert solution('''\n1 1\n''') == 1, 'Second puzzle test'\nassert solution('''\n2 3\n''') == 8, 'Third puzzle test'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 8\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n') == '8'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n\n''') == 8\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 2\n2 3''') == '5'\nassert solution('''100 3\n1 2\n2 1\n3 1''') == '100'\nassert solution('''1 2\n1 1\n2 100''') == '100'\nassert solution('''1 1\n2 100''') == '100'\nassert solution('''2 2\n1 1\n2 100''') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution('1 2') == '1'\nassert solution('100 2') == '100'\nassert solution('1 2') == '2'"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 2\\n2 3') == '5'\nassert solution('100 3\\n1 2\\n2 1\\n3 1') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([5, 2, 1, 2, 1]) == '5'\nassert solution([1, 2, 1, 2, 2]) == '100'\n\n'''\nfrom itertools import combinations\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5, 2]) == '5'\nassert solution([100, 3]) == '100'\nassert solution([1, 2]) == '1'"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"100 3\") == \"100\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n''') == '5'\n\nassert solution('''\n1 2\n2 1\n3 1\n''') == '4'\n\nassert solution('''\n100 3\n1 2\n2 1\n3 1\n''') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"100 3\") == \"100\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n\n\"\"\"\n\nn, m = list(map(int, input().split()))\n\narr = []\n\nfor i in range(m):\n    arr.append(list(map(int, input().split())))\n\narr = sorted(arr, key=lambda x: x[0] + x[1])\n\nmoney = 0\n\nfor i in range(m):\n    money += arr[i][1]\n\nprint(money)"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '5'\nassert solution('1 2') == '2'\nassert solution('100 3') == '100'\n\n\"\"\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n') == '5'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n') == '100'\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aab\") == \"6\"\nassert solution(\"usaco\") == \"2\"\nassert solution(\"lol\") == \"1\""
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '1'\n\nassert solution(input) == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaabb') == '6'\nassert solution('usaco') == '1'\nassert solution('lol') == '2'\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('usaco') == '1'\nassert solution('aaabb') == '6'\nassert solution('lol') == '2'\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaabb\") == \"6\"\n\nassert solution(\"usaco\") == \"1\"\n\nassert solution(\"lol\") == \"2\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    usaco\n''') == '1'\nassert solution('''\n    aaabb\n''') == '6'\nassert solution('''\n    lol\n''') == '2'\n'''\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"hello\") == \"h\"\nassert solution(\"usaco\") == \"u\"\nassert solution(\"lol\") == \"l\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n''') == '2'\nassert solution('''20\n''') == '3'\nassert solution('''4\n''') == '3'\nassert solution('''1\n''') == '1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution() == '2'\nassert solution() == '1'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n4\n1\n''') == '2'\nassert solution('''2\n8\n1\n''') == '3'\nassert solution('''5\n2\n3\n''') == '4'\nassert solution('''10\n12\n2\n''') == '9'"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"2\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('''4\n''') == '2'\nassert solution('''4\n''') == '2'\n\n'''"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4''') == '2'\nassert solution('''6''') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n''') == '1'\n\nassert solution('''\n4\n''') == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n4\n5\n''') == '2'"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n\n3\n1 4\n2 5\n3 6\n\n\"\"\") == \"\"\"1 2\n2 1\n1 2\n\"\"\".strip(), \"3\"\nassert solution(\"\"\"\n\n5\n1 4\n2 5\n3 6\n4 7\n5 8\n\n\"\"\") == \"\"\"1 2\n2 1\n1 2\n4 3\n5 6\n\n\"\"\".strip(), \"5\"\n\nprint(solution(*map(str, input().split())))\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '1 2'\nassert solution('3\\n2 1') == '2 1'\nassert solution('10\\n3 4 1 2 5 6 4 7 8 1') == '1 2 1 2 2 1 1 1 1 1'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    4\n    1 2\n    2 1\n    2 1\n    ''') == '1 2'\nassert solution('''\n    4\n    2 3\n    3 2\n    1 3\n    ''') == '1 3 2'\nassert solution('''\n    5\n    2 3\n    3 1\n    4 1\n    1 4\n    ''') == '1 3 2 1'\nassert solution('''\n    5\n    1 4\n    3 1\n    4 2\n    2 3\n    ''') == '1 4 2 2 3'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 3\n2 4''') == \"2 1\"\nassert solution('''2\n1 1\n2 2''') == \"1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1 2\\n'\nassert solution('2 3') == '2 1\\n'\nassert solution('3 4') == '2 1\\n'\nassert solution('5 2') == '2 1\\n'\nassert solution('4 5') == '1 1\\n'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1 2\""
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 4\\n2 5\\n3 6') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"-1\"\nassert solution(\"3 4\") == \"1 2\"\nassert solution(\"3 5 6\") == \"2 1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"3 2 4\") == \"1 2\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 4\n2 5\n3 6\n4 3\n''') == '1 2'\nassert solution('''\n5\n1 4\n2 5\n3 6\n4 2\n5 3\n''') == '2 1'\n\n\"\"\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 4\n2 5\n3 6\n''') == '1 2'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1\n2\n1\n3\n3 1\n3 2\n3 2 1\n4''') == '2 1 1 2 1 1 3 1 3 1 4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n''') == '2'\nassert solution('''\n5\n''') == '2 1'\nassert solution('''\n8\n''') == '4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '2 1 1'\nassert solution('8') == '4'\nassert solution('9') == '4 1 1 1 1 1'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n''') == '1 1'\nassert solution('''3\n''') == '2 1 1'\nassert solution('''8\n''') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'\nassert solution('123456789') == '4 2 3 1 1 3 2 1'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2 1\"\nassert solution('3') == \"2 1 1\"\nassert solution('8') == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"2 1\\n\"\nassert solution(\"8\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2 1\"\nassert solution(\"4\") == \"2 2 1\"\nassert solution(\"6\") == \"2 3 1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\nab A\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '1'\nassert solution('2') == '2'\nassert solution('0rTrT022') == '1'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\nabd') == '2'\nassert solution('8\\n0rTrT022') == '1'\nassert solution('2\\nabA') == '2'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 a A\""
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '2\\n02 Trr T20'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2 2'\nassert solution('3') == '2 2 2'\nassert solution('4') == '2 2 2 2'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\naabccdd\n\n4\ntaccb\n''') == '1 aa bb cc dd'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '1'\nassert solution('aabaac') == '2'\nassert solution('0rTrT022') == '1'\nassert solution('02TrrT20') == '2'\nassert solution('a aA') == '2'"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2\\n02TrrT20'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\naaa\nbbbb\n****\n\n2\na*a\na****\n\n5\nlo*er\n2\nlover\nloser\n''') == '1'\nassert solution('''\n4\na**d\n2\nabcd\nacbd\n\n3\na*a\n2\naaa\naba\n\n5\nlo*er\n2\nlover\nloser\n''') == '0'\nassert solution('''\n5\nlo*er\n2\nlover\nloser\n''') == '0'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '0'\nassert solution('3') == '1'\n\"\"\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nad\\n2\\nabcd') == '2'\nassert solution('5\\nlo*er\\n2\\naaa\\naba') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nabcd\\n2\\na*a\\nb*b\\nc*c') == '2'\nassert solution('5\\nlo*er\\n2\\naba\\naca\\n') == '0'\nassert solution('3\\na*a\\n2\\naaa\\naba\\n') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('3') == '0'\n\nstdin = \"\"\"3\na**d\n2\nabcd\nacbd\n\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n\" +\n                \"a**d\\n\" +\n                \"2\\n\" +\n                \"abcd\\n\") == \"2\"\nassert solution(\"5\\n\" +\n                \"lo*er\\n\" +\n                \"2\\n\" +\n                \"lover\\n\" +\n                \"loser\\n\") == \"0\"\nassert solution(\"3\\n\" +\n                \"a*a\\n\" +\n                \"2\\n\" +\n                \"aaa\\n\" +\n                \"aba\\n\") == \"1\""
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\naa\naa''') == '0'\nassert solution('''5\na*a\naaaa\na*a\naaaaa\naa*a\naaa\naa''') == '1'\nassert solution('''4\na**d\n2\nabcd\nacbd\n''') == '0'\nassert solution('''3\na*a\n2\naaa\naba\n''') == '1'"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution(input) == '1'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 1\n1 0 0 0 4''') == '1'\nassert solution('''6 1 2\n3 8 0 1 0 0''') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 1\") == \"1\"\nassert solution(\"6 1 2\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 1') == '1'\nassert solution('6 1 2') == '2'\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1 2\") == \"2\"\nassert solution(\"5 1 1\") == \"1\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 1') == '1'\nassert solution('6 1 2') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 1') == '1'\nassert solution('6 1 2') == '2'\nassert solution('4 6 1') == '2'"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n\n''') == '40'\nassert solution('''1 42\n\n''') == '1'\nassert solution('''6 4\n\n''') == '172'"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\\n\") == \"40\"\nassert solution(\"1 42\\n\") == \"1\"\nassert solution(\"6 4\\n\") == \"172\"\nprint(solution(input()))\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\n') == '40\\n', \"first\"\nassert solution('1 42\\n') == '1\\n', \"second\"\nassert solution('6 4\\n') == '172\\n', \"third\"\nassert solution('1 2\\n') == '1\\n', \"fourth\"\nassert solution('1 2\\n') == '1\\n', \"fifth\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n1 42''') == '40'\nassert solution('''1 4\n4 1''') == '1'\nassert solution('''6 4\n4 1''') == '172'\nassert solution('''1 1\n1 2''') == '2'\nassert solution('''1 2\n2 1''') == '2'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n2\n''') == '40'\nassert solution('''1 42\n3\n''') == '172'\nassert solution('''6 4\n7\n''') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 1 4\\n') == '5'\nassert solution('4\\n3 1 4 1\\n') == '6'\nassert solution('5\\n3 1 4 1 5\\n') == '11'\nassert solution('1000000000000') == '507675400075'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 1 4\n''') == '5'\nassert solution('''\n4\n3 1 4 1\n''') == '11'\nassert solution('''\n5\n3 1 4 1 5\n''') == '11'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"6\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n3 1 4 3 4\n''') == '11'\nassert solution('''\n5\n3 1 4 1 5\n''') == '11'\nassert solution('''\n4\n3 1 4 1 5\n''') == '11'\nassert solution('''\n5\n3 1 4 1 2\n''') == '6'"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('5') == '11'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n2 1 4\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n4\n3 1 4 1\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n5\n3 1 4 1 5\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3 1 4 1') == '5'\nassert solution('4\\n3 1 4 1 5') == '11'\nassert solution('5\\n3 1 4 1 5') == '6'\n\n\n'''\n\n\nfrom functools import reduce\nfrom math import factorial"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2 1 4\n\"\"\") == \"5\"\nassert solution(\"\"\"\n4\n3 1 4 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5\n3 1 4 1 5\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == \"5\"\nassert solution('4') == \"11\"\nassert solution('5') == \"21\"\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '11'\nassert solution('5') == '6'\nassert solution('6') == '12'\nassert solution('7') == '18'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '1'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 0 0 -1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 -1\n\"\"\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1 0 -1\") == \"1\"\nassert solution(\"2 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0 0 -1') == '1'\nassert solution('2 -1') == '2'\nassert solution('3 -1') == '3'\nassert solution('4 -1') == '2'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 0 0 -1\") == \"1\"\nassert solution(\"-1 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1 2\n''') == '1'\n\nassert solution('''\n2\n-1 2\n''') == '1'\n\nassert solution('''\n3\n1 2 3\n''') == '1'\n\nassert solution('''\n4\n1 -2 1 -3\n''') == '3'\n\nassert solution('''\n5\n1 2 1 -2 -3\n''') == '0'"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n-1 -2 -3 -4 -5\n\n''') == \"2\"\nassert solution('''\n3\n1 -1 -1\n\n''') == \"1\"\nassert solution('''\n1\n-1\n\n''') == \"0\"\nassert solution('''\n6\n1 -1 0 1 0 -1\n\n''') == \"3\"\nassert solution('''\n1\n0\n\n''') == \"1\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n\nprint(solution())\n\nassert max(1, 2) == 2\n\nprint(max(1, 2))"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2'\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0'\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 0 0\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n) == \"2\"\n\nassert solution(\n    \"2 1 0\\n\"\n    \"1 2\\n\"\n    \"2 2\\n\"\n) == \"0\"\n\nassert solution(\n    \"2 5 7\\n\"\n    \"3 4\\n\"\n    \"14 4\\n\"\n) == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 0 0\\n1 2\\n2 3') == '2'\nassert solution('2 1 0\\n1 2\\n2 2') == '1'\nassert solution('2 5 7\\n3 4\\n14 4') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"2 1 0\") == \"0\"\nassert solution(\"2 5 7\") == \"1\"\nassert solution(\"2 1 0\") == \"1\"\nassert solution(\"2 5 7\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2 0 0'\n    '1 2'\n    '2 3') == '2'\nassert solution(\n    '2 1 0'\n    '1 2'\n    '2 2') == '0'\nassert solution(\n    '2 5 7'\n    '3 4'\n    '14 4') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('2 1 0') == '0'\nassert solution('2 5 7') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0 0\") == \"2\"\nassert solution(\"2 1 0\") == \"0\"\nassert solution(\"2 5 7\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('2 1 0') == '0'\nassert solution('2 5 7') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"2 1 0\") == \"1\"\nassert solution(\"2 5 7\") == \"1\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('2 1 0') == '1'\nassert solution('2 5 7') == '1'\n\nstdin = \"\"\"\n2 1 0\n1 2\n2 2\n\"\"\"\n\nassert solution(stdin) == '0'\n\nstdin = \"\"\"\n2 1 0\n1 2\n2 3\n\"\"\"\n\nassert solution(stdin) == '1'"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '6'\nassert solution('10 1') == '0'\nassert solution('6 1000000') == '6'\nassert solution('100000 100000') == '1'\nassert solution('100000 100000 0') == '0'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"5 3\") == \"7\"\nassert solution(\"8 4\") == \"22\"\nassert solution(\"7 7\") == \"21\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '6'\nassert solution('3 5') == '18'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"6\"\n\"\"\"\nfrom math import factorial as fact\nimport sys\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '6'\n\n\"\"\"\n\nfrom math import factorial as fact"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '6'\nassert solution('2 4') == '4'\nassert solution('3 5') == '7'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '6'\nassert solution('5 3') == '7'\nassert solution('2 4') == '6'"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '6'\nassert solution('1 2') == '5'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == '6'\nassert solution('''\n1 2 1 2 1 2\n''') == '13'\nassert solution('''\n2 2 2 2 1 2\n''') == '12'\nassert solution('''\n4 4 4 4 4 4\n''') == '24'\nassert solution('''\n3 2 3 2 2\n''') == '12'\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == '6'\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == '6'\n'''\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 2 1 2 1 2') == '13'\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == '6'\n'''\n\nfor the first sample:\n\n$\\theta$\n\nAnd that's what it looks like in the second sample:\n\n$A$\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == '6'\nassert solution('''\n1 2 1 2 1 2\n''') == '13'\n\"\"\""
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"6\""
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1 1 1 1 1\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n1 2 1 2 1 2\n\"\"\") == \"13\"\n\nassert solution(\"\"\"\n1 1 1 1 1 1\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n1 2 1 2 1 2\n\"\"\") == \"13\"\n\nassert solution(\"\"\"\n1 1 1 1 1 1\n\"\"\") == \"6\""
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 1 1 1 1 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1 2 1 2 1 2\n\"\"\") == \"13\"\nassert solution(\"\"\"\n3 3 2 3 3 2\n\"\"\") == \"18\"\nassert solution(\"\"\"\n6 7 6 7 6 7 6\n\"\"\") == \"120\"\nassert solution(\"\"\"\n2 2 2 2 2 2 2\n\"\"\") == \"360\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 2 1 2 1 2') == '13'"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 3 4 6 9''') == '4'\nassert solution('''9\n1 2 3 5 6 7 8 9 10''') == '4'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '5'"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n4 3 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'\nassert solution('5\\n2 3 4 6 9') == '4'\nassert solution('10\\n1 2 3 5 6 7 8 9 10') == '4'\nassert solution('30\\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30') == '5'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 3 4 6 9\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\") == \"4\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\"\nassert solution(\"10\\n1 2 3 5 6 7 8 9 10\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 3 4 6 9\n''') == '4'\nassert solution('''\n9\n1 2 3 5 6 7 8 9 10\n''') == '4'\nassert solution('''\n10\n2 5 8 5 3 1 5 6 1\n''') == '6'\nassert solution('''\n8\n2 3 4 7 5 6 5 5\n''') == '7'\nassert solution('''\n15\n1 2 3 4 5 7 9 10 11 2 4 6 5 5\n''') == '7'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 3 4\") == \"2\"\nassert solution(\"1\\n2 2\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"4\"\nassert solution(\"10\\n3 2 1\") == \"2\"\nassert solution(\"100\\n100 100\") == \"2\""
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"9\") == \"4\"\nassert solution(\"10\") == \"5\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == '4'"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 3 4 6 9') == \"4\"\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == \"4\""
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '3\\n'\n    '1 2 3 5 6 E 7\\n'\n    '8 9 10 4 11 12 13\\n'\n    '11\\n'\n    '34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\n'\n    'E 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n'\n) == 'SURGERY COMPLETE'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE'\nassert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\nIR\\n') == 'SURGERY FAILED'\nassert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\nS rr\\n') == 'SURGERY FAILED'\nassert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\nIR\\nR\\n') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''4\n1 2 3 4 5 6 E\n11 12 13 14 15 16\n17 18 19 20 21 22\n23 24 25 26 27 28\n29 30 31 32 33 34 35 36\n37 38 39 40 41 42 43 44 45 46 47\n48 49 50 51 52 53 54 55 56 57\n58 59 60 61 62 63 64 65 66 67 68 69\n70 71 72 73 74 75 76 77 78 79 80 81\n82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nE 1 2 3 4 5 6 E\n11 12 13 14 15 16\n17 18 19 20 21 22\n23 24 25 26 27 28\n29 30 31 32 33 34 35 36\n37 38 39 40 41 42 43 44 45 46 47\n48 49 50 51 52 53 54 55 56 57\n58 59 60 61 62 63 64 65 66 67 68 69\n70 71 72 73 74 75 76 77 78 79 80 81\n82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\nassert solution('''4\n1 2 3 4 5 6 E\n11 12 13 14 15 16\n17 18 19 20 21 22\n23 24 25 26 27 28\n29 30 31 32 33 34 35 36\n37 38 39 40 41 42 43 44 45 46 47\n48 49 50 51 52 53 54 55 56 57\n58 59 60 61 62 63 64 65 66 67 68 69\n70 71 72 73 74 75 76 77 78 79 80 81\n82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nE 1 2 3 4 5 6 E\n11 12 13 14 15 16\n17 18 19 20 21 22\n23 24 25 26 27 28\n29 30 31 32 33 34 35 36\n37 38 39 40 41 42 43 44 45 46 47\n48 49 50 51 52 53 54 55 56 57\n58 59 60 61 62 63 64 65 66 67 68 69\n70 71 72 73 74 75 76 77 78 79 80 81\n82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\nSrS  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S  S"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'SURGERY COMPLETE'\nassert solution('4') == 'SURGERY FAILED'\nassert solution('5') == 'SURGERY FAILED'\n\nstdin = \"\"\"3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\"\nassert solution(stdin) == 'SURGERY COMPLETE'\n\nstdin = \"\"\"5\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\"\nassert solution(stdin) == 'SURGERY FAILED'\n\nstdin = \"\"\"3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE\\n'\nassert solution('2\\n4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n4 4 4 4 4 4 4\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY FAILED\\n'\n\n\"\"\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"SURGERY COMPLETE\"\nassert solution(input()) == \"SURGERY FAILED\"\n\n\n\"\"\"\n\n\nimport sys\nimport io\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == \"SURGERY COMPLETE\\nIR\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\nassert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == \"SURGERY COMPLETE\\nS rr\\nI lldll\\nDONE\\nSURGERY FAILED\"\n'''"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'IR'\n\nassert solution('''3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\n\nassert solution('''5\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n\nassert solution('''3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\n\nassert solution('''5\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE\\nSURGERY FAILED'\nassert solution('''5\n3\n3 4 5 1 2\n5 1 3 2 4\n3 4 5 1 2\n5 1 3 2 4\n5 1 3 2 4\n''') == 'SURGERY COMPLETE'\nassert solution('''1\n2\nE\n''') == 'SURGERY FAILED'\nassert solution('''1\n2\nS\n''') == 'SURGERY FAILED'\nassert solution('''2\n3\nE\nE\nS\n''') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 5\n    3 2 1''') == '6 5 8 3 4 1 9 2 7'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'\nassert solution('''9 2 5''') == '6 5 8 3 4 1 9 2 7'\nassert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 2, 1]) == \"1 2 3\""
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example1) == \"1 2 3\"\nassert solution(example2) == \"1 2 3\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\n\nimport io\nimport sys\n\nsys.stdin = io.StringIO(\"\"\"\n3 2 1\n3 5 9 3 5\n5 8 9 3 5\n4 2 4 4 3\n4 2 1 1 4\n5 8 4 3 4\n\"\"\")\n\nimport sys\n\n_stdin = sys.stdin\nsys.stdin = open('input.txt')"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 2 5\n''') == '6 5 8 3 4 1 9 2 7'\n\nassert solution('''\n3 2 1\n''') == '1 2 3'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('3 2 1') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 2 1\n2 2 5''') == '6 2 5 3 1 4'\n\nassert solution('''3 2 1\n1 2 3''') == '1 2 3 2'\n\nassert solution('''9 2 5\n6 5 8 3 4 1 9 2 7''') == '6 5 8 3 4 1 9 2 7 3 5 2 1'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2 3 4 5 6\"\n) == \"10\"\n\nassert solution(\n    \"4 5 6 7 8\"\n) == \"14\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '3'\nassert solution('3 2') == '3'\nassert solution('5 1') == '5'\nassert solution('1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n3 2 1\n''') == '3'\nassert solution('''\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\nassert solution('''\n3 2\n1 0 1\n''') == '2'\nassert solution('''\n3 2\n1 0 1\n''') == '1'\nassert solution('''\n3 2\n1 0 1\n''') == '1'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3 2\n3 2 1\n\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\n\"\"\") == \"5000000000\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n3 2 1\n\n''') == '3'\nassert solution('''\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\n''') == '5000000000'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n3 2 1\n''') == '3'\nassert solution('''5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\nassert solution('''3 2\n1 0 1\n''') == '2'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '4'\nassert solution('1 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n\n1\n1\n1\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n\n2\n0\n1\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\n\n10\n0\n1\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n\n5\n1000000000 1000000000 1000000000 1000000000 1000000000\n\n\"\"\") == \"5000000000\"\nassert solution(\"\"\"\n\n10\n0\n1000000000 1000000000 1000000000 1000000000 1000000000\n\n\"\"\") == \"5000000000\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 2 1\n''') == '3'\nassert solution('''\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\nassert solution('''\n3 2\n1 0 1\n''') == '2'\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'\n\"\"\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'\nassert solution('bwwbwbb') == '3'\nassert solution('bbbw') == '1'\n\nfor _ in range(TESTS):\n    print(solution(input()))\n\"\"\""
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example1) == '5'\nassert solution(example2) == '3'\n\n\n\"\"\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''bwwwbwwbw\nbwwbwwb''') == '5'\nassert solution('''bwwwbwwb\nbw''') == '2'\nassert solution('''bwwbwwb\nbwwwwww''') == '3'\nassert solution('''bwwwbwwb\nbw''') == '2'\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == str(n)\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'\nassert solution('bwwwbwwbb') == '5'\nassert solution('bwwwwww') == '0'\nassert solution('bwwbwwbbw') == '1'\n\n\n[Notes]\n\n[Question]\nWhat is a zebra?\nA zebra is a sequence of alternating colors. For example a zebra with alternating red and white stripes could be represented as \"bwbbw\" or \"bwwbb\".\n\n[Criterion]\nCalculate the maximum possible length of a zebra that can be produced by Grisha.\n\n[Solution]\nFind the maximum possible length of a zebra.\n\nFind the longest substring with alternating colors.\n\nTo solve this task we need to use two pointer approach.\n\n1. Start with a pointer pointing to the first character of the string.\n2. While the string still contains alternating colors, move the pointer forward.\n3. If we have reached the end of the string, we have found the longest zebra.\n4. Return the length of the longest zebra.\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n\"\"\") == \"10\"\nassert solution(\"\"\"\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n\"\"\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\n'''"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"10\"\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"10\"\nassert solution(\"4 4\") == \"7\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"0 1\") == \"0\"\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....') == '10'\nassert solution('4 4\\n2 2\\n0 1\\n....\\n..*.\\n....\\n....') == '7'"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n2 2\n0 1\n***\n*++*\n''') == '7'\nassert solution('''\n3 3\n*.*\n*.*\n***\n''') == '4'\nassert solution('''\n8 8\n*......\n*..*.*.\n....*.*\n*.*.*.**\n**.*.*.\n*.*.*.*.\n*..*.*.\n*......\n''') == '33'"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"10\"\n\n\"\"\"\n\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....''') == '10'\nassert solution('''4 4\n2 2\n0 1\n....\n..*.\n....\n....''') == '7'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '10'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4 2 2') == '2'\nassert solution('6') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n1 2 4 4 4 9') == '2'\nassert solution('4\\n1 4 2 2') == '2'\nassert solution('5\\n1 4 2 4') == '3'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4 2 2') == '2'\nassert solution('6') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 4 2 2\\n') == '2'\nassert solution('6\\n1 2 4 4 4 9\\n') == '2'\nassert solution('20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '11'"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 4 2 2') == '2'\nassert solution('6\\n1 2 4 4 4 9') == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 4 2 2\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n6\n1 2 4 4 4 9\n\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 4 2 2') == '2'\nassert solution('6\\n1 2 4 4 4 9') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 1\\naba') == '7'\nassert solution('4 1 1\\nabcd') == '12'\n\n\n\"\"\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''3 3 1\naba\n''') == '7'\n\nassert solution(\n'''4 1 1\naaaa\n''') == '12'\n\nassert solution(\n'''4 10 1\naaaa\n''') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 1') == '7'\nassert solution('4 1 1') == '4'\nassert solution('4 10 1') == '12'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_\n\n\n\"\"\"\n\nn, a, b = list(map(int, stdin().split()))\nx = stdin()"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\") == \"7\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"4 10 1\") == \"12\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1') == '7'\nassert solution('4 1 1') == '4'\nassert solution('4 10 1') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 1\naba\n\n''') == '7'\n\nassert solution('''\n4 1 1\nabcd\n\n''') == '4'\n\nassert solution('''\n4 10 1\naaaa\n\n''') == '12'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1\") == \"7\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"4 10 1\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 1\") == '7'\nassert solution(\"4 1 1\") == '4'\nassert solution(\"4 10 1\") == '12'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\"\nassert solution(\"4 10 1\\naaaa\") == \"12\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1') == '2'\nassert solution('4 1') == '2'"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n\") == \"1\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\n'''"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2 1') == '1'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\n\"\"\"\n\nn, k = list(map(int, input().split()))\n\nprint(((k-1)*(n-1)+(k-1)*(n-2)) % 1000000007)"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n6 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n10 1\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n2 2 2 2\n''') == '8'\nassert solution('''\n4 -3\n3 -6 -3 12\n''') == '3'\nassert solution('''\n10 -3\n3 -6 -3 12 14 -5 -8 -9 -12 -9 -2 -1\n''') == '10'\nassert solution('''\n10 8\n9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -8 9 -"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"8\""
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"8\"\nassert solution(\"3 4\") == \"6\""
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n2 2 2 2\n''') == '8'\nassert solution('''4 -3\n3 -6 -3 12\n''') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '8'\nassert solution('4 -3') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '8'\nassert solution('4 -3') == '3'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '8'\nassert solution('4 -3') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n2 2 2 2\n''') == '8'\nassert solution('''4 -3\n3 -6 -3 12\n''') == '3'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '8'\nassert solution('4 -3') == '3'\nprint('all test cases passed')\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 3 1 8\") == \"11\"\nassert solution(\"4 2 1 300 1000\") == \"5\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 3 1 8') == '11'\nassert solution('4 2 1 300 1000') == '5'"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(['3', '5', '3', '1', '8']) == '11'\nassert solution(['4', '2', '1', '300', '1000']) == '5'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5 3 1 8\n    a A\n    A aa\n    aa AA\n    AA a''') == '11'"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5 3 1 8\na A\nA aa\naa AA\nAA a''') == '11'\nassert solution('''4 2 1 300 1000\na A\nA aa\naa AA\nAA a''') == '5'\nassert solution('''4 3 1 300 1000\na A\nA aa\naa AA\nAA a''') == '5'\nassert solution('''10 3 1 300 1000\na A\nA aa\naa AA\nAA a\naa A\nAA a\naa A\nAA a\nAA a\naa AA\nAA a\na A\nA aa\naa AA\nAA a''') == '55'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n\"\"\") == \"11\"\nassert solution(\"\"\"\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n\"\"\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 3 1 8') == '11'\nassert solution('4 2 1 300 1000') == '5'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 3 1 8\") == \"11\"\nassert solution(\"4 6 1 1 8\") == \"1\"\nassert solution(\"4 3 1 1 8\") == \"1\"\nassert solution(\"4 7 1 1 8\") == \"1\"\nassert solution(\"4 5 1 1 8\") == \"1\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5 3 1 8\nA A\nA aa\naa AA\nAA a\n\n3 2 1 300 1000\na A\nA aa\naa AA\nAA a\n\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a''') == '11'\nassert solution('''6 4 1 2 3 5 6\nA A\nB B\nC C\nD D\nE E\nF F\nG G\nH H\nI I\nJ J\nK K''') == '4'\nassert solution('''1 2 4 1 3 2 1\nA A\nA A\nB A\nC D\nD D\nE E\nF F\nG F\n''') == '6'\nassert solution('''2 3 5 6\nA A\nA B\nB A\nC A\nC B\nD A\nD B\nD C\nD D\nE E\nE E''') == '6'\nassert solution('''5 3 4 1\nA A\nB A\nA A\nB A\nA A\nA A\nA A\n''') == '4'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n''') == '11'\nassert solution('''\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n''') == '5'\nprint(solution('''\n3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n'''))"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 1 1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n1 1 5 2 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n10\n5 2 1 3 2 1 2 1 2 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n15\n3 3 3 4 5 5 4 5 4 6 1 4 3 4 4 5 5 4 5 5 4 5 4 5 4 5 5 4 5 4 5 5 4 5 5 5\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1 4') == \"YES\"\nassert solution('5 1 5 2 1') == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1 1 4\\n') == 'YES'\nassert solution('5\\n1 1 5 2 1\\n') == 'NO'"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 1 1 4\\n\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\\n\") == \"NO\"\nassert solution(\"8\\n1 1 1 1 1 1 1 1 1\\n\") == \"NO\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1\\n\") == \"YES\""
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 5 2 1') == 'YES'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1') == 'NO'\nassert solution('12\\n
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 1 5 2 1') == 'YES'\nassert solution('1 1 1 4') == 'YES'\nassert solution('2 1 1 4') == 'NO'"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1 1 4\n''') == \"YES\"\nassert solution('''\n5 1 5 2 1\n''') == \"NO\"\nassert solution('''\n6 1 2 3 1 1 1\n''') == \"NO\"\nassert solution('''\n8 1 6 5 1 1 1 1\n''') == \"YES\"\nassert solution('''\n8 1 6 5 1 1 1 1\n''') == \"YES\"\n''')\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1 4') == 'YES'\nassert solution('5 1 5 2 1') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"1 1 1 4\") == \"YES\"\nassert solution(\"1 1 5 2 1\") == \"YES\""
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''5\n10 5 0 -5 -10\n'''\n    ) == '-15'\nassert solution(\n'''4\n1 1 1 1\n'''\n    ) == '1'\nassert solution(\n'''2\n900 1000\n'''\n    ) == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('2') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 1, -5, 4]) == '1'\nassert solution([5, 1, -5, -2]) == '1'\nassert solution([5, 1, -5, -2, 0]) == '0'\nassert solution([1, 1, 1, 1]) == '0'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"-15\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"-5\"\nassert solution(\"2\") == \"1100\"\nassert solution(\"5\") == \"900\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('3') == '-5'\nassert solution('2') == '1100'"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5,1,-5]) == -15\nassert solution([4,1,-5]) == -5\nassert solution([2,900,1000]) == 1100\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == \"-15\"\nassert solution('4') == \"1\"\nassert solution('2') == \"1100\"\nassert solution('3') == \"903\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '-5'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == \"-15\"\nassert solution('4') == \"1\"\nassert solution('2') == \"1100\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\n''') == 'YES'\nassert solution('''\n3\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\nassert solution('''\n5\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'\n''')\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n2 3\n''') == 'YES'\nassert solution('''\n5\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\n\n\n'''\n\n--- Day 10: Adapter Array ---\nhttps://adventofcode.com/2015/day/10\n\n--- Part Two ---\nhttps://adventofcode.com/2015/day/10\n\n\n\n-----Sample-----\n\nInput\n6\n10 1\n18 1\n17 1\n13 1\n19 1\n\nOutput\nYES\n\nInput\n11\n17 1\n10 1\n10 1\n13 1\n19 1\n\nOutput\nYES\n\nInput\n26\n19 1\n9 1\n8 1\n8 1\n14 1\n22 1\n26 1\n\nOutput\nYES\n\nInput\n16\n9 1\n6 1\n6 1\n11 1\n13 1\n\nOutput\nYES\n\n\n\"\"\"\n\nfrom aocd import get_data\nfrom pprint import pprint\nimport copy\nimport math\n\ndata = get_data(day=10).split(\"\\n\")\n\nn = int(data[0])"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('2 3') == 'NO'\nassert solution('1 3') == 'NO'\nassert solution('1 4') == 'NO'\nassert solution('2 5') == 'YES'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2\n\n2 3\n1 3\n1 4\n2 5\n2 6''') == 'YES', \"First example\"\nassert solution('''5\n1 2\n1 3\n1 4\n2 5\n2 6''') == 'NO', \"Second example\""
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"8\") == \"YES\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == 'YES'\nassert solution('1\\n2\\n') == 'NO'\nassert solution('1\\n2\\n') == 'YES'\nassert solution('1\\n2\\n') == 'NO'\nassert solution('3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n') == 'YES'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 2\n\n''') == 'NO'\n\nassert solution('''\n5\n1 2\n1 3\n1 4\n2 5\n2 6\n\n''') == 'YES'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n\nIf there are no valid solutions, print \"NO\"."
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1 2'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n2\n2 6\n''') == '0'\nassert solution('''\n5\n1 2 1 1 2 \n''') == '3'\nassert solution('''\n5\n0 1 2 1 2\n''') == '2'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 6') == '0'\nassert solution('0') == '1'"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n') == '1'\nassert solution('2\\n2 6\\n') == '0'\nassert solution('5\\n1 2 5 3 8\\n') == '4'"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '0'"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n3''') == '1'\nassert solution('''3\n4\n5''') == '1'\nassert solution('''5\n4\n3''') == '0'"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 2\") == \"2\"\nassert solution(\"3 0 2\") == \"2\"\nassert solution(\"3 3 3\") == \"0\"\nassert solution(\"3 3 3\") == \"0\""
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 6\") == \"0\"\nassert solution(\"1 3 2\") == \"0\"\nassert solution(\"3 5 7 8 2 4\") == \"0\"\nassert solution(\"3 7 2 5 8 4\") == \"0\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\n\"\"\"\nfrom itertools import permutations\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 6\nassert solution('2') == 1\nassert solution('5') == 3\nassert solution('100') == 1\n'''\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"12\"\n\"\"\"\n\nn = int(input())\ns1 = input()\ns2 = input()\n\nunique_dominos = []"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '6'\n'''\n\nimport math"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 0\nassert solution(\"a\") == 1\nassert solution(\"b\") == 1\nassert solution(\"bb\") == 2\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\n\n\"\"\""
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == 6\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys\nfrom itertools import combinations_with_replacement\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"6\""
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\naab\nccb\n''') == '6'\n\"\"\"\nfrom collections import Counter\n\nn = int(input())\narr = input().split(' ')\n\narr1 = []\narr2 = []\n\nfor i in range(n):\n    if arr[i] == \"a\":\n        arr1.append(\"red\")\n        arr2.append(\"green\")\n    elif arr[i] == \"c\":\n        arr1.append(\"blue\")\n        arr2.append(\"cyan\")\n    elif arr[i] == \"b\":\n        arr1.append(\"yellow\")\n        arr2.append(\"cyan\")\n\nc1 = Counter(arr1)\nc2 = Counter(arr2)\n\ncount = 0\nfor i in c1:\n    if i in c2:\n        count += c1[i] * c2[i]\n\nprint(count)"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '6'\nassert solution('10') == '6'\n\nNote: This problem is equivalent to the second one from the above.\n'''\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"100 100 5\") == \"YES\"\nassert solution(\"100 8 5\") == \"NO\"\nassert solution(\"100 100 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'YES'\nassert solution('1 2 3 4 5 6 7') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100 100 5') == 'YES'\nassert solution('100 8 5') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 5 2 1 2 1 2 1\") == \"YES\"\nassert solution(\"2 2 5 2 1 2 1 2 1\") == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == 'YES'\nassert solution(input_) == 'NO'\n\nstdin = '''\n100 100 5\n5 2 1 2 1\n'''\nstdin_ = stdin.split()\n\nn, m, k = int(stdin_[0]), int(stdin_[1]), int(stdin_[2])\na = list(map(int, stdin_[3:]))\n\nfor i in range(1, n+1):\n    for j in range(i+1, m+1):\n        for k in range(i+1, j+1):\n            gcd = gcd(i, j)\n            if gcd in a:\n                break\n        else:\n            continue\n        break\n    else:\n        continue\n    break\n\nprint('''YES''') if i == j else print('''NO''')\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 100 5\\n2 2 1 2 1') == 'YES'\nassert solution('1 100 7\\n5 2 1 2 1') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '100 100 5\\n'\n    '5 2 1 2 1\\n'\n) == 'YES\\n'\n\n\nassert solution(\n    '100 8 5\\n'\n    '5 2 1 2 1\\n'\n) == 'NO\\n'\n\nassert solution(\n    '100 100 7\\n'\n    '1 2 3 4 5 6 7\\n'\n) == 'YES\\n'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 5 1 2 1 2 1') == 'YES'\nassert solution('100 8 5 1 2 1 2 1') == 'NO'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\") == \"NO\"\n\"\"\"\n\nn, m, k = list(map(int, input().split()))\na = list(map(int, input().split()))"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\nassert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == '4'\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '4'\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 2') == 4\nassert solution('7 6') == 3"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 2') == '4'\nassert solution('7 6') == '3'\n'''\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution('''\n8 2\n1 2 1 2 1 2 1\n5 1 5 1 5 5 5\n6 1 6 1 6 6 6\n''') == \"3\"\nassert solution('''\n8 2\n1 2 1 2 1 2 1\n5 1 5 1 5 5 5\n6 1 6 1 6 6 6\n''') == \"4\"\nassert solution('''\n6 2\n1 1 3 3 1 3\n2 2 2 2 2 2\n''') == \"6\"\nassert solution('''\n7 7\n5 1 5 1 5 1 5 1\n5 5 5 5 5 5 5 5\n6 6 6 6 6 6 6 6\n''') == \"7\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 2\") == \"4\"\nassert solution(\"7 6\") == \"3\"\n\n\"\"\"\nfrom bisect import bisect_left\nfrom collections import deque"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 4 10\\n3 2 5 3\\n2 5 2 5\") == \"4\"\nassert solution(\"6 2\\n1 1 1 1 1 1\\n1 1 1 1 1 1\\n1 1 1 1 1 1\") == \"0\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n1 4 10\n2 4 10 5\n4 5 3 3\n3 5 2 5\n2 2 2 3''') == '4'\nassert solution('''10 5\n1 4 5 2 3\n2 3 3 5 4\n3 4 4 5 2\n5 4 5 5 5\n5 4 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n''') == '8'\nassert solution('''5 6\n1 1 5 2 2 3\n4 2 4 5 3 3\n3 1 5 2 3 3\n4 4 4 5 2 2\n5 4 5 5 2 2\n6 5 5 5 5 5\n6 5 5 5 5 5\n''') == '10'\nassert solution('''3 4\n1 2 1\n2 3 2\n1 2 1\n3 3 2\n''') == '7'\nassert solution('''10 7\n1 2 2 2 2 2 2 2 2 2\n3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2\n''') == '13'\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\n1 2 5 10\n1 4 10 5\n\n''') == \"4\"\nassert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n\n''') == \"4\"\nassert solution('''\n3 2\n2 1 2\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\n''') == \"5\"\nassert solution('''\n10 10\n1 1 2 3\n2 2 2 2\n3 3 3 2\n4 4 4 2\n5 5 5 2\n6 6 6 2\n7 7 7 2\n8 8 8 2\n9 9 9 2\n10 10 10 1\n\n''') == \"10\""
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\n\n'''\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'no'\nassert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'yes'\nassert solution('''\n5 1\n2 3\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'no'\nassert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'yes'\n''')\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'yes'\nassert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'yes'\nassert solution('''\n1 3\n2 1 2\n1 2\n2 1\n''') == 'no'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'yes\\n'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'no'\nassert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'yes'\nassert solution('''\n5 2\n1 2\n3 4\n5 6\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\n'\nassert solution('''5 2\n1 2 3\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no\\n'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\n'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no\\n'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\n'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == 'no'\nassert solution('5 3') == 'yes'\nassert solution('5 3') == 'yes'\nassert solution('5 3') == 'no'\nassert solution('5 3') == 'yes'"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"4 2\") == \"3 2 0 1\"\nassert solution(\"5 2\") == \"5 2 0 1\"\n\n\n\"\"\"\n\n\"\"\"\ninput:  3 3\noutput: 2\n\ninput:  4 2\noutput: 3 2 0 1\n\ninput:  5 2\noutput: 5 2 0 1\n\"\"\""
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\""
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n2 5\") == \"2\"\nassert solution(\"4 2\\n1 4\") == \"3\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1 0 2 1 0\""
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n1 3') == '2'\nassert solution('4 2\\n1 4') == '3'\nassert solution('5 4\\n2 4') == '3'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5 3\\n'\n    '1 3\\n'\n    '2 5\\n'\n    '4 5\\n'\n    ) == '2'\n\nassert solution(\n    '4 2\\n'\n    '1 4\\n'\n    '2 4\\n'\n    ) == '3'\n\nassert solution(\n    '2 3\\n'\n    '0 3\\n'\n    '1 3\\n'\n    ) == '3'\n\nassert solution(\n    '1 2\\n'\n    '1 2\\n'\n    ) == '2'\n\n\n\n\"\"\"\n\n\nfrom typing import List\nfrom math import ceil\nfrom functools import reduce\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\""
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 3') == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 3') == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n1 0 1\\n2 1 3 3') == \"NO\"\nassert solution('1 3\\n1 0 1\\n2 1 2 3') == \"YES\"\nassert solution('5 3\\n1 0 1\\n3 1 2 3 3\\n1 2 3\\n3 4') == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('3 3') == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 0 1\\n2 1 3\\n2 1 2\\n2 2 3') == 'NO'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n') == 'YES'\nassert solution('3 3\\n1 0 1\\n2 1 2 3\\n2 1 2\\n1 3\\n') == 'NO'\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n2 1 2\\n1 3\\n') == 'NO'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3') == 'NO'\n\nassert solution('3 3\\n1 0 1\\n3 1 2 3\\n1 2\\n2 1 3') == 'YES'\n\"\"\"\n\nfrom functools import reduce\n\nn, m = map(int, input().split())\nrooms = []\nfor i in range(n):\n    rooms.append(list(map(int, input().split())))"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == \"NO\"\n\nassert solution('''3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == \"YES\"\n\nassert solution('''4 4\n1 0 1 1\n2 1 2 3\n2 1 2 2\n1 3\n''') == \"NO\""
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == -1\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''(()((#)((#(#((#(#(#(#(#(#(#(#((#(#(#((#(#(#((#(#((#(#((((#(((((((((#(((((((((((((((((((((((((#(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"(((#)((#)\") == \"1\"\nassert solution(\"()((#((#(#()\") == \"2\"\nassert solution(\"(((((#))\") == \"1\"\nassert solution(\"((((#))\") == \"-1\"\nassert solution(\"(((((#))\") == \"2\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''(((#)((#)\n''') == '1')\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('(((#)((#)') == '1'\nassert solution('()((#((#(#()') == '2'\nassert solution('((()))') == '-1'\nassert solution('#') == '-1'\nassert solution('(())(#)') == '2'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"(())((#(#))\") == \"(()())((#(#))\"\nassert solution(\"((((#)))(((#)#(#))((#)(#))((#)#((((((#))((#))))))(((((((#)#(#)))#(#)))))\") == \"(((((((#)#(#)))#(#)))))#((((((((#)#(#)))#(#)))))((((((#)#(#)))#(#)))))#(((((((#)#(#)))#(#)))))#((((((((#)#(#)))#(#)))))#(()())((())))((())((((((((#)#(#)))#(#)))))#(())))\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"(\") == \"1\"\nassert solution(\"(())\") == \"1\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"(((#)((#)\") == \"1\"\nassert solution(\"()((#((#(#)\") == \"2\"\nassert solution(\"(#)\") == \"-1\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"\") == \"-1\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"(((#)((#)\") == \"1\"\nassert solution(\"()((#((#(#)\") == \"2\"\nassert solution(\"(#)\") == \"-1\"\nassert solution
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('(((#)((#)') == '1'\nassert solution('()((#((#(#())') == '2'\nassert solution('#') == '-1'\nassert solution('(#') == '-1'\nassert solution('(((#))') == '-1'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"(((#)((#)\") == \"1\"\nassert solution(\"()((#((#(#()\") == \"2\"\nassert solution(\"#\") == \"-1\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n\nOutput\n-1\nxoxox\n''') == '-1'\nassert solution('''4 0\n\nOutput\n16\noooo\n''') == '16'\nassert solution('''0 4\n\nOutput\n16\nxxxx\n''') == '16'\nassert solution('''2 5\n\nOutput\n100\nxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxoxox"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"4 0\") == \"-1\"\nassert solution(\"0 4\") == \"-16\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '-1'\nassert solution('0 4') == '16'\nassert solution('2 3') == '-1'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '-16'\nassert solution('0 4') == '-16'\n\n\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f v = 2^2 - 1^2 + 3^2 - 2^2 + 1^2, \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u044f v \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043a\u0430\u0436\u0434\u0430\u044f \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u0430\u044f \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u044f \u0432 \u0434\u0435\u043a\u0430\u0440\u0442\u043e\u0432\u043e\u0439 \u043a\u043e\u043c\u0431\u0438\u043d\u0430\u0446\u0438\u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u0435\u0442 \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435.\n\n\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u0432\u043e\u0434\u0438\u0442 \u0446\u0435\u043b\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 a \u0438 b (a + b \u2265 1).\n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2014 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f.\n\n\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 \u043d\u0430 \u043b\u044e\u0431\u043e\u043c \u044f\u0437\u044b\u043a\u0435, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0432\u044b\u0431\u0440\u0430\u043b\u0438 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u0437\u0430\u0434\u0430\u043d\u0438\u0438.\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\nInput\n2 3\n\nOutput\n-1\nxoxox\n\nInput\n4 0\n\nOutput\n16\noooo\nInput\n0 4\n\nOutput\n-16\nxxxx\n\n'''\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1 1 1\n\"\"\") == \"17\"\nassert solution(\"\"\"1 2 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('3 3 3') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1 1''') == '17'\nassert solution('''1 2 1''') == '17'\nassert solution('''1 1 2''') == '17'\nassert solution('''1 2 2''') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"10 1 1\") == \"109\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('3 1 1') == '12'\nassert solution('3 2 1') == '12'\nassert solution('3 3 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('1 1 1') == '17'\n\"\"\""
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"1 1 1\") == \"16\"\nassert solution(\"1 1 1\") == \"15\"\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('2 2 2') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"17\"\nassert solution(\"1 1 1\") == \"17\"\nassert solution(\"2 2 1\") == \"17\"\nassert solution(\"2 2 2\") == \"17\"\nassert solution(\"2 1 3\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == '17'"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == stdout_"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2 3\n1 2 1\n2 1 2\n'''\n) == '2 2 2 '\n\nassert solution(\n'''\n2 2\n1 2\n3 4\n'''\n) == '3 2 2 '\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''2 2\n1 2\n3 4\n''') == '3 2'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2 2\"\nassert solution(\"1 2\") == \"2 2\"\nassert solution(\"2 2\") == \"2 2\"\nassert solution(\"3 4\") == \"3 2\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2\\n') == '2 2 2'\nassert solution('2 2\\n1 2\\n3 4\\n') == '2 3'\n\nassert solution('3 2\\n1 2\\n3 4\\n') == '3 2'\n\nassert solution('3 3\\n1 2\\n3 4\\n') == '3 3'"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2 \nassert solution('''\n2 2\n1 2\n3 4\n''') == '2 3 \n''')"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '\\n'.join(['2 2 2 \\n', '2 2 2 \\n'])\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"2 2 2\\n2 2 2\"\nassert solution(\"2 2\") == \"2 3 2\\n3 2 2\"\nassert solution(\"3 3\") == \"3 2 2\\n3 2 2\""
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2 1\\n2 1 2\\n') == '2 2 2'\nassert solution('2 2\\n1 2\\n3 4\\n') == '2 3'\n\n\n----Uses----\nTo solve this challenge, you'll need to use the built-in function `sorted()` to make sure the heights of the skyscrapers are always in the ascending order in both streets.\n\nHere's how `sorted()` works:\n\n>>> sorted([3, 2, 4])\n[3, 2, 4]\n>>> sorted((2, 4, 3))\n[2, 3, 4]\n>>> sorted(\"what's the best\".split())\n['what', 'is', 'the', 'best']\n>>> sorted(\"what's the best\".upper().split())\n['WHAT', 'IS', 'THE', 'BEST']\n\n----XP----\nInput:\n2\n3\n1 2 1\n2 1 2\n3 4\n5 6 7\n4 7 8 9\n\nOutput:\n2 3\n3 2\n4 4 4\n4 4 4\n5 6 7\n6 8 9\n7 9 9\n8 9 9\n7 8 8\n\"\"\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''2 2\n1 2\n3 4\n''') == '2 3'\n\nassert solution('''2 2\n1 2\n3 4\n''') == '2 3'\n\nassert solution('''2 2\n1 2\n3 4\n''') == '2 3'\n\nassert solution('''2 2\n1 2\n3 4\n''') == '2 3'"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"332748119\""
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"332748119\"\nassert solution(\"1 2\") == \"185138929\"\nassert solution(\"1 2\") == \"974061117\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1\n1\n1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '332748119'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n'''\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"332748119\"\nassert solution(\"1 2\") == \"185138929\"\nassert solution(\"3 3\") == \"160955686\"\nassert solution(\"4 3 5\") == \"974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '332748119'\nassert solution('2 1') == '332748119'\nassert solution('1 2') == '3'\nassert solution('3 3') == '160955686'\nassert solution('3 4') == '974061117'"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"332748119\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"332748119\"\nassert solution(\"1 2\") == \"332748119\"\nassert solution(\"3 3\") == \"160955686\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '332748119'\nassert solution('1 2') == '332748119'\nassert solution('3 3') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '332748119'\nassert solution('''1 2\n1\n1''') == '3'\nassert solution('''3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n''') == '6'\nassert solution('''5\n3 1 5 2 6\n''') == '11'\nassert solution('''5\n1 100 101 100 1\n''') == '102'"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2\\n1 2\\n\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"11\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n3 1 5 2 6') == '11'\nassert solution('5\\n1 2 3 4 5') == '6'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3 1 5 2 6\n''') == '11'\nassert solution('''\n5\n1 100 101 100 1\n''') == '102'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '6'\nassert solution('''\n5\n1 2 3 4 5\n''') == '11'\nassert solution('''\n5\n1 2 3 4 5\n6 7 8 9 10\n''') == '12'\nassert solution('''\n5\n1 2 3 4 5\n6 7 8 9 10\n6 7 8 9 10\n6 7 8 9 10\n''') == '15'\nassert solution('''\n5\n1 2 3 4 5\n6 7 8 9 10\n6 7 8 9 10\n6 7 8 9 10\n''') == '15'"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1\n5\n3\n2\n6''') == '11'\nassert solution('''5\n1\n2\n4\n2\n6''') == '5'\nassert solution('''5\n1\n1\n2\n2\n6''') == '5'\nassert solution('''5\n1\n100\n101\n100\n1\n''') == '102'"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '11'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n100 100 1\n''') == '102'\n\nassert solution('''\n5\n3 1 5 2 6\n''') == '11'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1\n3 1 5 2 6\n\"\"\") == \"11\"\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"6\"\nassert solution(\n\"\"\"\n5\n100 101 100 101 1\n\"\"\") == \"102\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"Yes\"\nassert solution('''\n1 3\n1 2\n2 3\n''') == \"No\"\nassert solution('''\n3 1\n1 3\n2 3\n''') == \"No\"\n''')\n\n\n'''\n\nimport itertools"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2 2\n1 4\n2 4\n3 4\n4 13\n10 5\n11 5\n12 5\n14 5\n5 13\n6 7\n8 6\n13 6\n9 6\n\"\"\"\n) == \"No\"\n\nassert solution(\n\"\"\"\n1 1\n2 3\n3 1\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n4 4\n1 3\n2 4\n3 4\n4 4\n\"\"\"\n) == \"Yes\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n1 3\n2 3''') == 'Yes'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 4\n2 4\n''') == 'No'\nassert solution('''\n3 1\n1 3\n2 3\n''') == 'Yes'\n\"\"\"\n    #\n    #  logic:\n    #\n    #  when n is even, then we have:\n    #     (k-1) * (k-1)\n    #   when n is odd, then we have:\n    #     (k-1) * (k-1) + k * (k-1)\n    #   we can compute with factor (k-1)\n    #   to check whether n is odd or even, just subtract k from n.\n    #   n -= k is odd, then n -= (n-k)\n    #   n -= (n-k) is even, then n -= (n-k) - 1\n    #   (n-k) - 1 is odd, then n - (n-k) - 1 is even, then n - (n-k) - 1 is odd\n    #   (n-k) - 1 is even, then n - (n-k) - 1 is even + k\n    #   n - (n-k) - 1 is even + k is odd, then n - (n-k) - 1 is even + k - 1\n    #   n - (n-k) - 1 is even + k - 1 is even, then n - (n-k) - 1 is even + k - 1 - 1\n    #   n - (n-k) - 1 is even + k - 1 - 1 is odd, then n - (n-k) - 1 is even + k - 1 - 1 - 1\n    #   n - (n-k) - 1 is even + k - 1 - 1 - 1 is even + k - 1 - 1 - k\n    #   n - (n-k) - 1 is even + k - 1 - 1 - k is even, then n - (n-k) - 1 is even + k - 1 - k - 1\n    #   n - (n-k) - 1 is even + k - 1 - k - 1 is even + k - k - 1\n    #   n - (n-k) - k is even + k - k - 1 is even + k - k - 1 - k\n    #   n - (n-k) - k - 1 is even + k - k - 1 - k - 1 is even + k - k - 1 - k - 1\n    #   n - (n-k) - k - 1 - 1 is even + k - k - 1 - k - 1 - k is even + k - k - 1 - k - 1 - k\n    #   n - (n-k) - k - 1 - k - 1 - 1 is even + k - k - 1 - k - 1 - k - k - 1 is even + k - k - 1 - k - 1 - k - k\n    #   n - (n-k) - k - 1 - k - k - 1 is even + k - k - 1 - k - k - 1 - k is even + k - k - 1 - k - k - 1 - k\n    #   n - (n-k) - k - 1 - k - k - 1 - 1 is even + k - k - 1 - k - k - 1 - k - k - 1 is even + k - k - 1 - k - k - k - k\n    #   n - (n-k) - k - k - 1 - k - k - 1 - k - k - k is even + k - k - k - k - k - k - k is even + k - k - k - k - k - k\n    #   n - (n-k) - k - k - k - 1 - k - k - k - k - k - 1 is even + k - k - k - k - k - k - k - k - k - k - k - 1 is even + k - k - k - k - k - k - k - k - k - k - k - k\n    #   n - (n-k) - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k is even + k - k - k - k - k - k - k - k - k - k - k - k - k - k - k\n    #   n - (n-k) - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k is even + k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k\n    #   n - (n-k) - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k is even + k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k is even + k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k\n    #   n - (n-k) - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k is even + k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k - k is even + k - k - k - k - k - k - k - k - k - k - k - k - k - k - k -"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"13 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\n\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 1\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\"\n) == \"Yes\"\nassert solution(\n    \"3 1\\n1 3\\n2 3\"\n) == \"No\"\nassert solution(\n    \"2 2\"\n) == \"Yes\"\nassert solution(\n    \"2 2\\n3 2\"\n) == \"Yes\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"-1\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"4 5\") == \"0\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '2'\nassert solution('4 5') == '0'\nassert solution('3 5') == '0'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n.#.\n###\n##.''') == '1'\nassert solution('''4 2\n##\n.#\n##\n''') == '-1'\nassert solution('''3 5\n.....\n.....\n.....\n''') == '0'\nassert solution('''3 5\n......\n......\n......\n''') == '0'\nassert solution('''3 5\n....#\n####.\n.###.\n.#...\n''') == '2'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 5') == '2'\nassert solution('2 1') == '-1'\nassert solution('3 5') == '0'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n.#.\n###\n##.\n''') == '1'\n\nassert solution('''4 2\n##\n.#\n.#\n##\n''') == '0'\n\nassert solution('''3 5\n.....\n.....\n.....\n''') == '0'\n\nassert solution('''3 5\n.....\n...#\n##..\n''') == '0'\n\nassert solution('''3 5\n.....\n...#\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 5\") == \"0\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '-1'\nassert solution('3 5') == '0'\nassert solution('4 5') == '2'"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 5\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"-1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == '5 6 2'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0 2 3') == 'YES'\nassert solution('3 10') == 'YES'\nassert solution('5 6') == 'YES'\nassert solution('6 5 6 2 2') == 'NO'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n0 0 0\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == 'YES' or solution(input) == 'NO'"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5\n0 0 0\n\n3 5\n5 5 5\n\n4 5\n4 4 4 4\n''') == 'YES\\n5 4 2'\nassert solution('''3 4\n2 0 2\n\n4 4\n2 4 2\n\n4 4\n4 4 4\n''') == 'NO'\nassert solution('''4 5\n0 0 0\n\n5 5\n5 5 5\n\n4 5\n4 4 4\n''') == 'YES\\n5 4 2'\nassert solution('''4 6\n6 5 6 2 2\n\n''') == 'NO'\nassert solution('''5 5\n0 0 0\n\n5 5\n5 5 5\n\n4 5\n4 4 4\n''') == 'YES\\n5 4 2'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n1 0 2 3\n\n''') == 'YES'\nassert solution('''\n3 10\n10 10 10\n\n''') == 'YES'\nassert solution('''\n5 6\n6 5 6 2 2\n\n''') == 'NO'\nassert solution('''\n3 5\n0 0 0\n\n''') == 'YES'\nassert solution('''\n3 5\n0 0 0\n\n''') == 'YES'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\", solution()\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\n0 0 0\") == \"YES\\n5 4 2\"\n\nassert solution(\"3 5\\n6 5 6 2 2\") == \"YES\\n5 4 2\"\n\nassert solution(\"5 6\\n10 10 10 1 1\") == \"YES\\n10 10 10 1 1\"\n\nassert solution(\"10 3\\n10 10 10 1 1\") == \"YES\\n10 10 10 1 1\"\n\nassert solution(\"10 10 10 3 2\\n10 10 10 1 1\") == \"YES\\n10 10 10 1 1\""
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 2 3') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('5 6') == 'NO'\nassert solution('3 5') == 'YES'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1 0 2 3\n\n''') == 'YES\n\nassert solution('''\n3 10\n10 10 10\n\n''') == 'YES\n\nassert solution('''\n5 6\n6 5 6 2 2\n\n''') == 'NO\n\nassert solution('''\n3 5\n0 0 0\n\n''') == 'YES\n\nassert solution('''\n3 5\n0 0 0\n\n''') == 'NO''')\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\") == \"4 3 6 2\"\nassert solution(\"1\\n42\") == \"42\"\nassert solution(\"2\\n1 1 1 1\") == \"1 1\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 1 2\n''') == '2 1 1'\nassert solution('''5\n1 2 3 4 5\n''') == '3 2 1'\nassert solution('''7\n2 6 8 4 2 8 6\n''') == '2 2 6 8'"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2 1 2\n''') == '3 2 1 2'\n\nassert solution('''5\n1 2 1 1 1\n''') == '1 1 1 1 1'\n\nassert solution('''10\n5 3 5 4 1 5 4 7 2 3 8\n''') == '3 3 1 1 2 5 3 7 7 8'\n\nassert solution('''6\n1 2 1 3 3 3\n''') == '1 3 3 3 1 2'"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n''') == '4 3 6 2'\nassert solution('''1\n42\n''') == '42'"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Input_1') == 'Output_1'\nassert solution('Input_2') == 'Output_2'"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"1 2\"\nassert solution('3') == \"1 2 3\"\nassert solution('4') == \"1 2 3 4\"\nassert solution('5') == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2\\n1 2 3') == '1 2\\n1 1\\n', \"First\"\nassert solution('3 2\\n1 1 2') == '1 2\\n1 1\\n', \"Second\"\nassert solution('1') == '1\\n', \"Third\"\nassert solution('1 2 2') == '1\\n2\\n', \"Fourth\""
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2''') == '4 3 6 2', 'Question'\nassert solution('''1\n42''') == '42', 'Question'\nassert solution('''2\n1 1 1 1''') == '1 1', 'Question'"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4 3 6 2'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n\") == \"6\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == '3'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2\\n') == '6'\nassert solution('5\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '2'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == '3'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2\\n') == '5'\nassert solution('5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '1'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\") == \"6\"\nassert solution(\"4\\n2 1\\n2 2\\n2 3\\n2 4\") == \"2\"\nassert solution(\"3\\n1 1\\n1 2\\n1 3\") == \"3\""
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '6'\nassert solution('5') == '0'\nassert solution('6') == '0'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '6'"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 1\n1 2\n1 3\n2 1''') == \"3\"\nassert solution('''4\n1 1\n2 1\n3 1\n2 2''') == \"5\"\nassert solution('''4\n2 1\n2 2\n3 1\n3 2''') == \"6\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1 1\") == \"3\"\nassert solution(\"2 1\") == \"3\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n1 1\n1 2\n1 3\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n4\n2 1\n2 2\n3 1\n3 2\n\"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n4\n1 1\n2 1\n3 1\n3 2\n\"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n3\n2 2\n1 1\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n4\n1 1\n2 1\n3 1\n3 2\n\"\"\"\n) == \"2\""
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n.E.E\nE.EE.\nE...E\n.EE.E\nEE.EE''') == \"3 3\"\nassert solution('''5\nEEEEEE\nE.EE.E\nE..EEE\n.EEE.E\nEE.EE''') == \"1 3\"\n\n'''\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\".E.E\") == \"1 1\"\nassert solution(\".E.E\") == \"1 1\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nE.E\nE.E\nE.E\n''') == '1 1'\nassert solution('''3\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n''') == '-1'\nassert solution('''5\nEE.EE.E\nE.EE.E\nE...E\n.EE.E\nEE.EE\n''') == '3 3'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3 3'\nassert solution('5') == '4 4'\nassert solution('5') == '5 3'\n\n\"\"\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n.E.\\nE..\\nE.E') == '1 3'\nassert solution('5\\nEE.EE\\nE...E\\n.EE.E\\nEE.EE') == '3 3'\n\n\n\"\"\"\nimport math\n\nn = int(input())\ngrid = []\nfor i in range(n):\n    grid.append(input())\n\nvisited = set()"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 1'\nassert solution('5') == '3 3'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n.EE.\nE.EE''') == \"1 1\"\nassert solution('''4\n.EE.E.\nE.EE.\nE.E.E\n.E.E''') == \"3 3\"\nassert solution('''8\n.E.E.E.\n.E..E.\n.E.E.\n.E.E.\n.E.E.\n.E.E.\n.E.E.\n.E.E.\n.E.E.\n''') == \"7 7\"\n\n'''"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '2 2'\n\"\"\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1 1\"\nassert solution(\"3\") == \"2 2\"\nassert solution(\"3\") == \"3 3\"\nassert solution(\"5\") == \"3 3\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nEE.EE\\ne.E.E\\ne.E.E\\ne.E.E\\nEE.EE\") == \"3 3\"\nassert solution(\"5\\nEEE\\nE..\\ne.E.E\\nEE.E\\nEE.EE\") == \"4 4\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('10 -1 2 2 2 2 2 2 -1 10') == '32'"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10') == '32'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10\") == \"32\"\nassert solution(\"10 2\") == \"32\"\nassert solution(\"10 0\") == \"0\"\nassert solution(\"0 2\") == \"0\"\nassert solution(\"10\") == \"0\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n5 -1 2 2 2 2 2 2 -1 10') == '32'\nassert solution('5 10\\n-1 -1 -1 -1 -1') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 2') == '32'\nassert solution('5 10') == '-1'\nassert solution('10 10') == '10'\nassert solution('5 10 10 10') == '10'\nassert solution('1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4') == '4'\nassert solution('5 10') == '11'"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '32'\nprint(solution())\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10') == '32'"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '32'\nassert solution_test() == '32'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2\n-1 -1 -1 -1 -1\n''') == '32'\nassert solution('''\n5 10\n-1 -1 -1 -1 -1\n''') == '-1'\nassert solution('''\n10 2\n10 -1 2 2 2 2 2 -1 10\n''') == '32'\nassert solution('''\n5 10\n-1 -1 -1 -1 -1\n''') == '-1'"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\nassert solution('3 4 3') == '12'\nassert solution('4 8 5') == '2'"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 2\\n1 1 1\\n\") == \"3\"\nassert solution(\"4 2 3\\n1 2 4 8\\n\") == \"79\"\nprint(solution(input()))\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\nassert solution('4 2 4') == '11'"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3 3\n1 3 2\n3 1 4''') == '4'\nprint(solution('''4 2 3\n1 2 4 8\n'''))"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\nassert solution('5 2 1') == '1'"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2 3\n1 2 4 8''') == '79'\nassert solution('''3 1 2\n1 1 1''') == '3'"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\nassert solution('4 2 3') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 1, 2]) == '3'\nassert solution([4, 2, 3]) == '79'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"4\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '7 7 7'\nassert solution('4 4') == '7 7 7 7 7 7 7 7'\nassert solution('5 5') == '7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '7'\nassert solution('3 3') == '7'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"1 1\") == \"7\"\nassert solution(\"2 2\") == \"7\"\nassert solution(\"3 3\") == \"4\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3 4') == '7'\nassert solution('1 3\\n2 3') == '4'\nassert solution('2 5\\n3 5') == '4'\nassert solution('3 3\\n3 5') == '4'\nassert solution('1 6\\n3 6') == '4'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '7 7 7'\nassert solution('1 3') == '1 2 3'\nassert solution('5 1') == '5'\nassert solution('5 10') == '5'\n\nimport sys\nsys.stdin = open('input.txt')"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7'\n\"\"\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n\"\"\") == \"7 7 7\"\nassert solution(\"\"\"\n3 2\n\"\"\") == \"4 4 4\"\nassert solution(\"\"\"\n3 1\n\"\"\") == \"3 3 3\"\nassert solution(\"\"\"\n2 3\n\"\"\") == \"2 2 2\"\nassert solution(\"\"\"\n3 3\n\"\"\") == \"7 7 7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"3 3\") == \"7\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"4\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2\\n 1 5 6 2\\n 1 3') == '6'\nassert solution('9 3\\n 3 2 1 6 5 9\\n 8 9\\n 3 2\\n 2 7\\n 3 4\\n 7 6\\n 4 5\\n 2 1\\n 2 8') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n''') == '6'\n\nassert solution('''9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n''') == '9'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2') == '9'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 2\") == \"6\"\nassert solution(\"9 3\") == \"9\"\n\n\n\n\"\"\"\n\nn, k = list(map(int, stdin.split()))\n\ndata = list(map(int, stdin.split()))\n\nmatrix = [[0 for _ in range(n)] for _ in range(n)]\n\n\nfor i in range(0, k * 2, 2):\n    matrix[data[i]][data[i+1]] = 1\n    matrix[data[i+1]][data[i]] = 1\n\n\nmaxSum = 0\nfor i in range(n):\n    for j in range(n):\n        if i!= j:\n            sum = 0\n            for l in range(n):\n                if matrix[i][l] == 1 or matrix[l][j] == 1:\n                    sum += 1\n            if sum > maxSum:\n                maxSum = sum\n\nprint(maxSum)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'\n\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, k = map(int, stdin.split())\n        n = int(n)\n        k = int(k)\n        if n < k:\n            return -1\n        m = n // k\n        max_sum = m * (n - m)\n        # print(max_sum)\n        distances = list(map(int, stdin.split()))\n        sum_of_distances = sum(distances)\n        if sum_of_distances > max_sum:\n            return -1\n        sum_of_distances = sum_of_distances - (n - k)\n        # print(sum_of_distances)\n        if sum_of_distances > max_sum:\n            return -1\n        return max_sum\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2') == '9'\n\n'''"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2\\n 1 5 6 2') == '6'\nassert solution('9 3\\n 3 2 1 6 5 9') == '9'\n\n\n'''\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2\\n4 5') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8') == '9'\nassert solution('6 4\\n1 2\\n4 3\\n2 4\\n4 5\\n2 6') == '5'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 0 1 0 0 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 0 1 0 1 0 0 0 1 1 0 1 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 0 1 1 0 1 1 1 0 1 0 0 1 0 1 1 1 0 0 1 1 1 1 1 0 1 1 0 0 1 1 1 1 0 1 1 0 0 0 0 0 1 1 1 0 1 0 0 1 0 1 1 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 0 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 1 0 0 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 1 0 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 0 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 1 1 0 1 0 0 0 1 1 1 1 0 1 0 1 1 1 0 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 0 0 0 1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 1 1 0 0 1 0 1 1 1 0 1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 0 0 1 0 1 1 0 0 0 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 0 1 0 1 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 1 0 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 1 0 0 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 1 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 1 1 0 1 0 1 0 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 0 1 1 1 0 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0 1 1 1 0 1 0 0"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"3 1 3 4\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 0 1 1 1 0\n1 1 0 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0\n1\n0\n1\n1\n0\n1\n''') == '1'\nassert solution('''\n0\n1\n1\n1\n1\n1\n0\n0\n1\n1\n1\n0\n1\n1\n1\n1\n0\n1\n1\n0\n0\n0\n1\n''') == '1'\n\nassert solution('''\n1\n0\n1\n1\n0\n1\n0\n0\n1\n0\n0\n1\n0\n1\n0\n0\n0\n1\n''') == '0'\nassert solution('''\n1\n1\n0\n1\n1\n0\n0\n0\n1\n1\n0\n1\n0\n0\n0\n1\n''') == '1'"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"00100\") == \"0\"\nassert solution(\"001010\") == \"0\"\nassert solution(\"000111\") == \"0\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1000000\n0111000''') == '7'"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"011\") == \"1 2 5\"\nassert solution(\"111\") == \"-1\"\nassert solution(\"111\") == \"1 3 5\"\nassert solution(\"110111\") == \"2 4 6\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0010100''') == '3 1 3 4'''\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '1 2 3'\nassert solution('001') == '1 2 3'\nassert solution('0') == '1 2 3'\nassert solution('10') == '1 2 3'\nassert solution('0 0 0') == '1 2 3'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('111') == '-1'\nassert solution('0010100') == '3 2 5 6'\nassert solution('10101101010110101') == '4 5 2 5 2 3 1'"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\n\nassert solution('''\n1 3\n3 1 2 3\n''') == '1'\n\nassert solution('''\n2 4\n2 1 2\n3 2 3 4\n''') == '6'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\n2 1 2\\n2 2 3\\n') == '1'\nassert solution('1 3\\n3 1 2 3\\n2 1 2\\n') == '1'\nassert solution('2 4\\n2 1 2\\n3 2 3 4\\n') == '1'\nassert solution('3 7\\n2 1 2\\n2 3 4\\n3 5 6 7\\n') == '24'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 3\n2 1 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 3\n2 1 2\n3 2 3 4\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n2 4\n2 1 2\n3 2 3 4\n\"\"\") == \"24\""
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"1 3\") == \"1\""
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\nassert solution('''\n1 3\n3 1 2 3\n''') == '1'\nassert solution('''\n2 4\n2 1 2\n3 2 3 4\n''') == '1'\nassert solution('''\n3 7\n2 1 2\n2 3 4\n3 5 6 7\n''') == '1'\n\n\"\"\""
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\nassert solution('''\n1 3\n3 1 2 3\n''') == '1'\nassert solution('''\n2 4\n2 1 2\n3 2 3 4\n''') == '2'\n\nfrom collections import defaultdict\nfrom math import prod\n\nn, m = map(int, input().split())\ngyms = []\ntypes = defaultdict(int)\nfor i in range(n):\n    gyms.append(tuple(map(int, input().split())))\n\nfor g in gyms:\n    for i in range(1, m+1):\n        types[i] += g[i-1]\n\ncount = 0\nfor i in types.values():\n    count += prod(i+1)\n\nprint(count % 1000000007)\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1', solution('2 3')\nassert solution('2 1 2') == '1', solution('2 1 2')\nassert solution('3 2 3 4') == '24', solution('3 2 3 4')\nprint(solution('3 7'))"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\n\nassert solution('''\n1 3\n3 1 2 3\n''') == '1'\n\nassert solution('''\n2 4\n2 1 2\n3 2 3 4\n''') == '24'"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 4 2 3 1\n''') == '3'\nassert solution('''4\n1 5 4 7\n''') == '6'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 4 2 3 1''') == '3'\nassert solution('''5\n1 4 2 3 1''') == '6'\nassert solution('''6\n1 5 4 7''') == '8'\nassert solution('''8\n1 5 4 7''') == '8'\nassert solution('''9\n1 5 4 7''') == '8'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '6'\nassert solution('''\n3\n1 5 4 7\n''') == '6'\n'''\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution('2') == '6'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2 4 3\") == \"3\"\nassert solution(\"4\\n1 2 3 1\") == \"3\"\n\nstdin = \"\"\"5\n1 2 3 4 5\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 4 2 3 1''') == \"3\"\nassert solution('''4\n1 5 4 7''') == \"6\"\nassert solution('''2\n1 5''') == \"6\"\n''')\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 4 7') == '6'\nassert solution('5') == '7'\nassert solution('5 2 3 5 4 1') == '7'"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 4 2 3 1\n''') == \"3\"\nassert solution('''\n4\n1 5 4 7\n''') == \"6\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution('4\\n1 5 4 7') == '6'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2\\n2 3') == '4'\nassert solution('4\\n1 1 2 3') == '20'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"20\"\nassert solution(\"\"\"\n4\n1 1 1 1\n\"\"\") == \"62\"\nassert solution(\"\"\"\n5\n1 1 1 1 1\n\"\"\") == \"62\""
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1\n1\n1\n1\"\"\") == \"4\"\nassert solution(\"\"\"5\n1 1 1 1 1\n\"\"\") == \"62\"\nassert solution(\"\"\"5\n1 1 1 1 1\n1\"\"\") == \"8\"\nassert solution(\"\"\"2\n1 2\n1\"\"\") == \"3\""
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"2\") == '2'\nassert solution(\"1 2\") == '3'\nassert solution(\"1 2 3\") == '4'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"20\"\nassert solution(\"5\") == \"62\"\nassert solution(\"10\") == \"965\"\nassert solution(\"1000000\") == \"1721280849691287826697989892636909993418673080641389352819537592858736493651\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n') == '1'\nassert solution('4\\n1 1 2 3\\n') == '20'"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"8\"\nassert solution(\"5\") == \"62\"\nassert solution(\"6\") == \"72\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '20'\nassert solution(\"2\") == '4'\nassert solution(\"4\") == '62'\nassert solution(\"5\") == '68'\nassert solution(\"6\") == '104'"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '20'"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1 1\") == \"62\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '7'\nassert solution('1') == '5'\nassert solution('5 6') == '15'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 1\n1 1\n1 1\n''') == '6'\nassert solution('''\n4\n1 2\n2 1\n3 5\n5 3\n''') == '15'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"15\"\nassert solution(\"1\") == \"7\"\n\n\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1\n1 1\n1 1\n''') == '6'\n\nassert solution('''4\n1 2\n2 1\n3 5\n5 3\n''') == '15'\n\nassert solution('''1\n5 6\n''') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"15\"\nassert solution(\"1\") == \"7\"\nassert solution(\"5\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '7'\nassert solution('3') == '15'\nassert solution('4') == '7'\nassert solution('5') == '7'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1,1]) == \"6\"\nassert solution([1,1,1]) == \"6\"\nassert solution([1,1,1,1]) == \"6\"\nassert solution([1,1,1,1,1]) == \"6\"\nassert solution([1,1,1,1,1,1]) == \"6\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\"\n\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n1 1\\n1 1\\n') == '6'\nassert solution('4\\n1 2\\n2 1\\n3 5\\n5 3\\n') == '15'\nassert solution('1\\n5 6\\n') == '7'\nassert solution('5\\n2 4\\n3 5\\n4 3\\n') == '9'\nassert solution('2\\n1 2\\n2 1\\n') == '1'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"4\") == \"7\"\nassert solution(\"3\") == \"7\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    1\n    ''') == '1'\n\nassert solution('''\n    2\n    ''') == '0'\n\nassert solution('''\n    3\n    ''') == '4'"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4\n2\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n3\n3\n10 10 10\n17\n\"\"\"\n) == \"6\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n''') == '1'\nassert solution('''\n2\n3\n''') == '3'\nassert solution('''\n3\n3\n''') == '6'\nassert solution('''\n4\n2\n''') == '3'"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1', 'First'\nassert solution() == '3', 'Second'\nassert solution() == '6', 'Third'"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n\n4\n2\n\n''') == '1'\nassert solution('''\n2\n1\n4 4\n2\n\n''') == '3'\nassert solution('''\n3\n3 3\n10 10 10\n17\n\n''') == '6'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1\n2\n2\n3\n''') == '2'\nassert solution('''\n1\n1\n2\n2\n3\n''') == '3'\nassert solution('''\n1\n1\n2\n2\n3\n''') == '3'\nassert solution('''\n1\n2\n2\n3\n3\n''') == '4'\nassert solution('''\n1\n2\n3\n4\n5\n''') == '4'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n\n4\n2\n\nOutput\n1\n''') == '1'\nassert solution('''\n3\n1\n3\n2\n\nOutput\n3\n''') == '3'\nassert solution('''\n3\n3 3\n10 10 10\n17\n\nOutput\n6\n''') == '6'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 3 100\n1 1 1\n''') == '10'\nassert solution('''3 5 6 11\n1 2 1\n''') == '0'\nassert solution('''7 3 4 100\n1 1 1\n1 2\n2 1\n2 2\n2 2\n2 1\n''') == '4'"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 3 100\n1 1 1\n''') == '10'\nassert solution('''3 6 5 1000000007\n1 2 1\n''') == '0'\nassert solution('''3 5 6 11\n1 2 1\n''') == '0''')"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 3 100\n1 1 1\n''') == '10'\nassert solution('''3 6 5 1000000007\n1 2 1\n''') == '0'\nassert solution('''7 10 6 11\n1 1 1\n1 2 3\n1 3 5\n1 4 7\n1 5 9\n1 6 11\n1 7 13\n1 8 15\n1 9 19\n1 10 23\n2 3 5\n2 4 7\n2 5 9\n2 6 11\n2 7 13\n2 8 15\n2 9 19\n2 10 23\n3 4 7\n3 5 9\n3 6 11\n3 7 13\n3 8 15\n3 9 19\n3 10 23\n4 5 7\n4 6 11\n4 7 13\n4 8 15\n4 9 19\n4 10 23\n5 6 11\n5 7 13\n5 8 15\n5 9 19\n5 10 23\n6 7 13\n6 8 15\n6 9 19\n6 10 23\n7 8 15\n7 9 19\n7 10 23\n8 9 19\n8 10 23\n9 10 23\n10 11 23\n11 13 23\n13 15 23\n15 17 23\n17 19 23\n19 21 23\n21 23 23\n23 24 23\n24 26 23\n26 28 23\n28 30 23\n30 32 23\n32 34 23\n34 36 23\n36 38 23\n38 40 23\n40 42 23\n42 44 23\n44 46 23\n46 48 23\n48 50 23\n50 52 23\n52 54 23\n54 56 23\n56 58 23\n58 60 23\n60 62 23\n62 64 23\n64 66 23\n66 68 23\n68 70 23\n70 72 23\n72 74 23\n74 76 23\n76 78 23\n78 80 23\n80 82 23\n82 84 23\n84 86 23\n86 88 23\n88 90 23\n90 92 23\n92 94 23\n94 96 23\n96 98 23\n98 100 23\n100 102 23\n102 104 23\n104 106 23\n106 108 23\n108 110 23\n110 112 23\n112 114 23\n114 116 23\n116 118 23\n118 120 23\n120 122 23\n122 124 23\n124 126 23\n126 128 23\n128 130 23\n130 132 23\n132 134 23\n134 136 23\n136 138 23\n138 140 23\n140 142 23\n142 144 23\n144 146 23\n146 148 23\n148 150 23\n150 152 23\n152 154 23\n154 156 23\n156 158 23\n158 160 23\n160 162 23\n162 164 23\n164 166 23\n166 168 23\n168 170 23\n170 172 23\n172 174 23\n174 176 23\n176 178 23\n178 180 23\n180 182 23\n182 184 23\n184 186 23\n186 188 23\n188 190 23\n190 192 23\n192 194 23\n194 196 23\n196 198 23\n198 200 23\n200 202 23\n202 204 23\n204 206 23\n206 208 23\n208 110 23\n208 112 23\n210 114 23\n210 116 23\n212 118 23\n212 120 23\n214 122 23\n214 124 23\n216 126 23\n216 128 23\n218 130 23\n218 132 23\n220 134 23\n220 136 23\n222 138 23\n222 140 23\n224 142 23\n224 144 23\n226 146 23\n226 148 23\n228 150 23\n228 152 23\n230 154 23\n230 156 23\n232 158 23\n232 160 23\n234 162 23\n234 164 23\n236 166 23\n236 168 23\n238 170 23\n238 172 23\n240 174 23\n240 176 23\n242 178 23\n242 180 23\n244 182 23\n244 184 23\n246 186 23\n246 188 23\n248 190 23\n248 192 23\n250 194 23\n250 196 23\n252 198 23\n252 200 23\n254 202 23\n254 204 23\n256 206 23\n256 208 23\n258 110 23\n258 112 23\n260 114 23\n260 116 23\n262 118 23\n262 120 23\n264 122 23\n264 124 23\n266 126 23\n266 128 23\n268 130 23\n268 132 23\n270 134 23\n270 136 23\n272 138 23\n272 140 23\n274 142 23\n274 144 23\n276 146 23\n276 148 23\n278 150 23\n278 152 23\n280 154 23\n280 156 23\n282 158 23\n282 160 23\n284 162 23\n284 164 23\n286 166 23\n286 168 23\n288 170 23\n288 172 23\n290 174 23\n290 176 23\n292 178 23\n292 180 23\n294 182 23\n294 184 23\n296 186 23\n296 188 23\n298 190 23\n298 192 23\n300 194 23\n300 196 23\n302 198 23\n302 200 23\n304 202 23\n304 204 23\n306 206 23\n306 208 23\n318 110 23\n318 112 23\n320 114 23\n320 116 23\n322 118 23\n322 120 23\n324 122 23\n324 124 23\n326 126 23\n326 128 23\n328 130 23\n328 132 23\n330 134 23\n330 136 23\n332 138 23\n332 140 23\n334 142 23\n334 144 23\n336 146 23\n336 148 23\n338 150 23\n338 152 23\n340 154 23\n340 156 23\n342 158 23\n342 160 23\n344 162 23\n344 164 23\n346 166 23\n346 168 23\n348 170 23\n348 172 23\n350 174 23\n350 176 23\n352 178 23\n352 180 23\n354 182 23\n354 184 23\n356 186 23\n356 188 23\n358 190 23\n358 192 23\n360 194 23\n360 196 23\n362 198 23\n362 200 23\n364 202 23\n364 204 23\n366 206 23\n366 208 23\n368 110 23\n368 112 23\n370 114 23\n370 116 23\n372 118 23\n372 120 23\n374 122 23\n374 124 23\n376 126 23\n376 128 23\n378 130 23\n378 132 23\n380 134 23\n380 136 23\n382 138 23\n382 140 23\n384 142 23\n384 144 23\n386 146 23\n386 148 23\n388 150 23\n388 152 23\n390 154 23\n390 156 23\n392 158 23\n392 160 23\n394 162 23\n394 164 23\n396 166 23\n396 168 23\n398 170 23\n398 172 23\n400 174 23\n400 176 23\n402 178 23\n402 180 23\n404 182 23\n404 184 23\n406 186 23\n406 188 23\n408 190 23\n408 192 23\n410 194 23\n410 196 23\n412 198 23\n412 200 23\n414 202 23\n414 204 23\n416 206 23\n416 208 23\n418 110 23\n418 112 23\n420 114 23\n420 116 23\n422 118 23\n422 120 23\n424 122 23\n424 124 23\n426 126 23\n426 128 23\n428 130 23\n428 132 23\n430 134 23\n430 136 23\n432 138 23\n432 140 23\n434 142 23\n434 144 23\n436 146 23\n436 148 23\n438 150 23\n438 152 23\n440 154 23\n440 156 23\n442 158 23\n442 160 23\n444 162 23\n444 164 23\n446 166 23\n446 168 23\n448 170 23\n448 172 23\n450 174 23\n450 176 23\n452 178 23\n452 180 23\n454 182 23\n454 184 23\n456 186"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 3 100\n1 2 3''') == '10'\nassert solution('''3 5 6 11\n1 2 3\n3 5 6''') == '0'\nassert solution('''10\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5''') == '11'\nassert solution('''4\n1 1 1\n2 2 2\n3 3 3\n4 4 4''') == '10''')"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4 5 20\n1 1 1\n''') == '10'\nassert solution('''5 6 7 12\n1 2 1\n''') == '0'\nassert solution('''3 3 4 3\n1 1 2\n''') == '2'\nassert solution('''3 6 5 1000000007\n1 2 1\n''') == '0'\nprint(solution(input()))"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10\"\n\n\"\"\""
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 6 5 1000000007') == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 6 5 1000000007') == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 3 100\n1 1 1\n''') == '10'\nassert solution('''\n3 5 6 11\n1 2 1\n''') == '0'\nassert solution('''\n2 100\n1 1\n''') == '0'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 2 3\nintel\ncode\nch allenge\n''') == \"YES\"\nassert solution('''\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == \"NO\"\nassert solution('''\n4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n''') == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 2 3\nintel\ncode\nch allenge\n''') == 'YES', 'First sample'\nassert solution('''\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'NO', 'Second sample'\nassert solution('''\n4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n''') == 'YES', 'Third sample'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2 2 3\\nintel\\ncode\\nch allenge') == \"YES\"\nassert solution('4\\n1 2 3\\na\\nb\\nc\\nd') == \"NO\"\n\n\"\"\"\n\nn = int(input())\n\npattern = list(map(int, input().split()))\n\ntext = input()\n\nsyllables_in_text = 0\nfor i in range(n):\n    syllables_in_text += pattern[i]\n    for char in text[i * pattern[i]: (i + 1) * pattern[i]]:\n        if char in 'aeiouy':\n            syllables_in_text += 1\n\nprint(\"YES\" if syllables_in_text == len(pattern) else \"NO\")\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\\n2 2 3\") == \"YES\"\nassert solution(\"1 2 3\\n4 5 6\") == \"NO\"\nassert solution(\"1 2 3\\n4 5 6\\n6 7 8\\n8 9 10\\n10 11 12\\n11 12 13\") == \"YES\""
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n2 3 1\") == \"YES\"\nassert solution(\"4 1 2 3\\n1 3 1 3\") == \"NO\"\n\n\nstdin = \"\"\"\n3\n3 3 3\nalice\ncan\nfly\n\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2 2 3\nintel\ncode\nch allenge\n''') == 'YES'\nassert solution('''4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'NO'"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n4 4 4\nhello\nhow\nare\nyou\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n1\n4 1\nhello\nhow\nare\nyou\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n2\n1 2\nhello\nhow\nare\nyou\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 2 3\nintel\ncode\nch allenge\n''') == 'YES'\nassert solution('''\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'NO'\n\n\"\"\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4 1 1\") == \"NO\""
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"26\"\nassert solution(\"1\") == \"10\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"26\"\nassert solution(\"1\") == \"10\"\nassert solution(\"3\") == \"26\""
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"3\") == \"26\""
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 1 5\n\n3\n1 2 3\n\n1\n1 2\n\n''') == '26'\nassert solution('''\n\n1\n1 2\n\n''') == '2'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\nassert solution('10') == '10'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\nassert solution('10') == '10'"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\nassert solution('10') == '10'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '26'\nassert solution('3') == '26'\nassert solution('4') == '37'\nassert solution('5') == '26'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 3 5\n''') == '3'\nassert solution('''3 40\n10 30 50\n''') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"3\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"5 10\") == \"13\"\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 4') == '3'\nassert solution('3 40') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 3 5\n''') == '3'\nassert solution('''3 40\n10 30 50\n''') == '32'\nassert solution('''3 50\n10 20 50\n''') == '22'\nassert solution('''3 5\n5 4 4 3 2\n''') == '1'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 4]) == '3'\nassert solution([3, 40]) == '32'\n\n\n\"\"\""
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3,4],[1,3,5]) == 3\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '3'\nassert solution('3 10') == '10'\nassert solution('8 10') == '10'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4\n1 3 5\n''') == '3'\nassert solution('''3 40\n10 30 50\n''') == '32'\n\nprint(solution('''3 40\n10 30 50\n'''))\nprint(solution('''3 50\n10 30 50\n'''))\nprint(solution('''3 40\n10 30 50\n'''))\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 4\n1 3 5\"\"\") == \"3\"\n\nassert solution(\"\"\"2 40\n10 30 50\"\"\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '32'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1 4'\nassert solution('5 1') == '1 2 3 4 5'\nassert solution('3 3') == '1 2 3'\nassert solution('4 4') == '1 2 3 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5''') == '1 4'\nassert solution('''9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"10 1\") == \"1 2 3 4 5 6 7 8 9 10\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1 4'\nassert solution('5 1') == '1 2 4'\nassert solution('1 1') == '1 2 4'\nassert solution('5 1') == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == \"1 2 4\"\nassert solution(s) == \"1 2 3 4 5 6 7 8 9\""
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1 4 5 6 7 8 9'\nassert solution('5 1') == '1 2 4'\nassert solution('5 1') == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 4 5 6 7 8 9'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\nprint('Solution: {}'.format(solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''')))"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n\"\"\") == \"1 2 4\"\n\nassert solution(\"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == \"1 2 4\"\n\nassert solution(\"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == \"1 2 4\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1 4'\nassert solution('5 1') == '1 2 4 5'\nassert solution('10 1') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('100 1') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution(\"3 2\\n2 1\\n1 2.0\") == \"1\"\nassert solution(\"6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125\") == \"2\""
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"6 3\") == \"2\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('6 3') == '2'\nassert solution('6 6') == '0'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n2 1\n1 2.0\n1 3.100''') == '1'\nassert solution('''3 3\n1 5.0\n2 5.5\n3 6.0\n\nOutput\n0''') == '0'\nassert solution('''6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n\nOutput\n2''') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('6 3') == '2'\nassert solution('10 10') == '4'\n\n\n'''\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\n\nassert solution('''6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '0'\n\nassert solution('''3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\""
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '3'\nassert solution('10 20 30 40 50 60 70 80 90 100 110 120 130 140 150 160 170 180 200 210 220 230 240 250 260 270 280 290 300 310 310 330 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340 340"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '3'\nassert solution('5 1') == '1'\n\n\"\"\""
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"5 1\\n4 3 2 1 6\") == \"4\"\nassert solution(\"3 3\\n2 2 3 1 4\") == \"4\"\nassert solution(\"3 4\\n2 1 4 3\") == \"2\"\nassert solution(\"4 4\\n2 3 1 2\") == \"2\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 2\n2 3 6 5 4 10\n''') == '3'\nassert solution('''\n4 4\n1 5 2 4 6\n''') == '2'\nassert solution('''\n4 5\n1 3 2 4 5\n''') == '3'\nassert solution('''\n4 3\n1 2 3 4\n''') == '1'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('1 2\\n3 4') == '0'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 2\n2 3 6 5 4 10''') == \"3\"\n''')"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution(\"2 3 6 5 4 10\\n\") == \"3\"\nassert solution(\"3 1 5 4 2 10\\n\") == \"3\"\nassert solution(\"3 1 2 10 5 4\\n\") == \"4\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2\\n2 3 6 5 4 10') == '3'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '3'\nassert solution('5 2') == '4'\nassert solution('6 2') == '5'\nassert solution('7 2') == '6'\nassert solution('8 2') == '7'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '3'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 1 3 2 2\n''') == '4'\nassert solution('''\n3\n1 2 1 3\n''') == '4'\nassert solution('''\n5\n1 2 1 3 2 2\n''') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''3\n1 2 1 3\n''') == '4'\nassert solution('''9\n1 2 1 3 2 2 2 2 3\n''') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\n\n\"\"\""
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2''') == '2'\nassert solution('''3\n1 2 3''') == '4'\nassert solution('''9\n1 2 1 3 2 2 2 2 3''') == '10'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 1 3') == '4'\nassert solution('9\\n1 2 1 3 2 2 2 2 3') == '10'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1 2\") == \"1\"\nassert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"3\\n1 2 1\") == \"3\"\nassert solution(\"9\\n1 2 1 3 2 2 2 2 3\") == \"10\"\nassert solution(\"5\\n1 2 1 3 2 2 2 3\") == \"5\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n') == '2'\nassert solution('3\\n') == '4'\nassert solution('9\\n') == '10'\nassert solution('10\\n') == '10'\nassert solution('1\\n') == '1'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '4'\n\"\"\"\n\nn = int(input())\n\ncount = 0\nfor i in range(1, n+1):\n    for j in range(1, n+1):\n        if i == j:\n            continue\n        elif i < j < n and j % i == 0:\n            continue\n        else:\n            break\n    else:\n        count += 1\nprint(count)\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3''') == '4'\n\nassert solution('''2\n3\n4''') == '4'\n\nassert solution('''2\n2\n2''') == '3'\n\nassert solution('''10\n10\n10''') == '2'"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '2'\nassert solution('10') == '8'\nassert solution('30') == '17'\n\"\"\""
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '4'\n\n\"\"\""
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 6\n1 5 1 4\n''') == '5'\nassert solution('''4 6\n2 2 2 2 2\n''') == '0'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 6\\n1 5 1 4\\n\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\\n\") == \"3\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 6\\n1 5 1 4\") == \"5\"\nassert solution(\"4 6\\n1 5 1 4\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 6') == '5'\nassert solution('5 9') == '4'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\nassert solution('4 5') == '4'\nassert solution('1 2 3 4 5') == '1'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"10 2\") == \"2\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"10 2\") == \"9\"\n\n\"\"\""
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6\") == \"5\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('--+') == '2'\nassert solution('++-') == '3'\nassert solution('+--+') == '4'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+++') == '2'\nassert solution('+--+') == '3'\nassert solution('+-++') == '3'\nassert solution('++') == '3'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"+++++\") == \"3\"\nassert solution(\"-++++\") == \"3\"\nassert solution(\"+++++\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+-+-+---') == '3'\nassert solution('--+-+---') == '3'\nassert solution('--+-+-+---') == '2'\nassert solution('+-+-+--+---') == '1'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"-+-+-+\") == \"3\"\nassert solution(\"+-+-+-\") == \"3\"\nassert solution(\"-+-+--\") == \"3\"\nassert solution(\"+-+-+---\") == \"3\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+-+-+-+') == '2'\nassert solution('+-+-+-') == '2'\nassert solution('-++++') == '3'\nassert solution('+-+-+---') == '3'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+-+-+') == '1'\n\nassert solution('+-+-++') == '1'\n\nassert solution('-+-+-++-+-') == '2'\n\nassert solution('-++-++-+-+') == '3'\n\nassert solution('+-+-+-++-+-') == '2'"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"+-+-+\") == '1'\n\nassert solution(\"+++++\") == '3'\n\nassert solution(\"+-+-++\") == '2'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\") == \"3\"\nassert solution(\"-+-+--\") == \"3\"\nassert solution(\"+-+-++\") == \"4\"\nassert solution(\"+-+-+-\") == \"3\"\nassert solution(\"+-+-+-\") == \"3\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+++----+') == '2'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n\"\"\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"1010\"\nassert solution(\"10 AND 9 4\") == \"1010\"\nassert solution(\"10 IN 1\") == \"10\"\nassert solution(\"10 AND 3 7\") == \"1011\"\nassert solution(\"10 OR 6 5\") == \"11\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"1010\"\nassert solution(\"4\") == \"0110\"\nassert solution(\"5\") == \"0101\"\nassert solution(\"6\") == \"1001\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nAND\\n1\\nIN\\n1\\nXOR\\n2\\nAND\\n3\\nNOT\\n1\\nIN\\n1\\nAND\\n4\\nIN\\n1\\nOR\\n5\\nIN\\n1\\nOR\\n6\\nIN\\n1\\nNOT\\n1\\nIN\\n1\\nAND\\n7\\nIN\\n1\\nAND\\n8\\nIN\\n1\\nOR\\n9\\nIN\\n1\\nOR\\n0\\nIN\\n1') == '011'\nassert solution('2\\nAND\\n2\\nIN\\n1\\nXOR\\n2\\nAND\\n3\\nNOT\\n1\\nIN\\n1\\nAND\\n4\\nIN\\n1\\nOR\\n5\\nIN\\n1\\nOR\\n6\\nIN\\n1\\nNOT\\n1\\nIN\\n1\\nAND\\n7\\nIN\\n1\\nAND\\n8\\nIN\\n1\\nOR\\n9\\nIN\\n1\\nOR\\n0\\nIN\\n1') == '001'\n'''\n\n\n'''\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\"\n\n\n\"\"\"\n\nn = int(input())\ngraph = []\nfor i in range(n):\n    s = input()\n    if s == \"IN\":\n        graph.append([i, int(input())])\n    else:\n        graph.append([s, int(input())])\ngraph = sorted(graph, key=lambda x: x[0])\nprint(\"\".join(map(lambda x: \"0\" if x[1] == 1 else \"1\", graph)))"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\"\n\"\"\""
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\n\n\"\"\"\n\nn = int(input())\n\nscheme = {}\ninputs = []\noutputs = []\n\nfor i in range(n):\n    a, b = input().split()\n    if a not in scheme:\n        scheme[a] = b\n    else:\n        scheme[a] = (b, scheme[a])\n\nprint(scheme)\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1010'\nassert solution('10') == '101010'\nassert solution('11') == '111100'\nassert solution('100') == '100010'\nassert solution('101') == '101010'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1\") == \"2\"\nassert solution(\"6 3 2\") == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\") == \"2\\n1 2\"\nassert solution(\n    \"6 3 2\\n1 2 3\\n1 2 3\\n\") == \"2\\n1 2\"\nassert solution(\n    \"5 3 1\\n1 2 3 2 1\\n1 2 3\\n\") == \"2\\n1 2\"\nassert solution(\n    \"6 3 2\\n1 2 3\\n1 2 3\\n\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 1\") == \"2\"\nassert solution(\"6 3 2\") == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '1 2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\nassert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('2 3') == '0'\n\n'''\n\n\nn, m, p = list(map(int, input().split()))\na = list(map(int, input().split()))\nb = list(map(int, input().split()))"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '1 2'"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"2\"\nprint(solution(input_))"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3') == '2\\n1 3'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 3 1\") == \"0\""
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\") == \"0\"\nassert solution(\"3 2 1\\n1 2\\n1 3\\n2 3\") == \"1\"\nassert solution(\"3 5 1\\n1 2\\n1 3\\n2 3\\n2 4\\n3 5\\n3 4\\n4 5\\n5 3\\n5 4\") == \"3\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\"\nassert solution(\"5 5 3\\n1 3\\n2 3\\n3 4\\n4 3\\n\") == \"1\"\nassert solution(\"6 6 3\\n1 3\\n2 3\\n3 4\\n4 3\\n5 4\\n\") == \"0\"\n\n'''\n\n\nimport collections\n\n\nclass Solution:\n    def sol(self, stdin: str) -> str:\n        n, m, k = map(int, stdin.split())\n\n        g = collections.defaultdict(list)\n        for i in range(1, k + 1):\n            x, y = map(int, input().split())\n            g[i] = g[i] + (x, y)\n        # print(g)\n        visited = set()\n        visited.add((1, 3))\n        # print(visited)\n        return self.dfs(1, 3, g, visited, visited, n)\n\n    def dfs(self, u, v, g, visited, used, n):\n        used.add((u, v))\n        for node, val in g[u]:\n            if node in used:\n                continue\n            used.add(node)\n            # print(used, node)\n            if node == v:\n                # print(node)\n                return 1\n            visited = self.dfs(node, v, g, visited, used, n)\n        return 0\n\n\nprint(Solution().sol(input()))\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\n2\") == \"2\"\nassert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"0\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'\n\"\"\""
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 3 1\") == \"0\"\nassert solution(\"10000000 10000000\") == \"0\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 1 2') == '2'\nassert solution('3 3 1 2') == '0'\n\n'''\n\n\nclass UndirectedGraph:\n\n    def __init__(self, graph_dict=None):\n        if graph_dict == None:\n            graph_dict = {}\n        self.__graph_dict = graph_dict\n\n    def vertices(self):\n        return list(self.__graph_dict.keys())\n\n    def edges(self):\n        return self.__generate_edges()\n\n    def add_vertex(self, vertex):\n        if vertex not in self.__graph_dict:\n            self.__graph_dict[vertex] = []\n\n    def add_edge(self, edge):\n        v_1, v_2 = edge\n        if v_1 not in self.__graph_dict:\n            self.add_vertex(v_1)\n        if v_2 not in self.__graph_dict:\n            self.add_vertex(v_2)\n        self.__graph_dict[v_1].append(v_2)\n        self.__graph_dict[v_2].append(v_1)\n\n    def __generate_edges(self):\n        edges = []\n        for vertex in self.__graph_dict:\n            for neighbour in self.__graph_dict[vertex]:\n                if (vertex, neighbour) not in edges:\n                    edges.append((vertex, neighbour))\n        return edges\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 1 2\n1 3\n1 2\n\n''') == '2'\nassert solution('''\n3 3 1\n2\n1 2\n1 3\n2 3\n\n''') == '0'\nassert solution('''\n3 3 1\n2\n1 2\n1 3\n2 3\n\n''') == '0'\nassert solution('''\n4 1 2\n1 3\n1 2\n\n''') == '0'\nassert solution('''\n3 3 1\n2\n1 2\n1 3\n2 3\n\n''') == '0'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 1 2\n1 3\n1 2\n''') == '2'\nassert solution('''3 3 1\n2\n1 2\n1 3\n2 3\n''') == '0'\nprint('All tests passed!')"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('4') == '1'\nassert solution('8') == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example_1) == \"3\"\nassert solution(example_2) == \"4\"\nassert solution(example_3) == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '3'\nassert solution('4') == '1'\nassert solution('8') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n10 2 3 5 4 2''') == '3'\nassert solution('''4\n100 100 100 100''') == '1'\nassert solution('''8\n7 6 5 4 3 2 2 3''') == '4'\nassert solution('''8\n8 8 8 8''') == '1'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n10 2 3 5 4 2') == '3'\n\nassert solution('8\\n7 6 5 4 3 2 2 3') == '4'\n\nassert solution('2\\n') == '1'\n\nassert solution('2\\n1') == '1'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"3\"\nassert solution(input_2) == \"4\"\nassert solution(input_3) == \"1\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n10 2 3 5 4 2\n''') == '3'\nassert solution('''\n4\n100 100 100 100\n''') == '1'\nassert solution('''\n8\n7 6 5 4 3 2 2 3\n''') == '4'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2 3 5 4 2\n''') == '3'\nassert solution('''\n4\n100 100 100 100\n''') == '1'\nassert solution('''\n8\n7 6 5 4 3 2 2 3\n''') == '4'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == 'No'\nassert solution(\"1 2\") == 'Yes'\nassert solution(\"1 1\") == 'Yes'\nassert solution(\"1 2 3\") == 'Yes'\nassert solution(\"2 1 1\") == 'Yes'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"Yes\"\nassert solution(\"6 5\") == \"No\"\nassert solution(\"4 3\") == \"Yes\""
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n\"\"\"\n) == \"Yes\"\nassert solution(\n\"\"\"\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n\"\"\"\n) == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 5\n2 4 4\n2 4 4\n''') == 'Yes', f'actual: {solution(stdin)}'\nassert solution('''\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n''') == 'No', f'actual: {solution(stdin)}'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == 'Yes'\nassert solution('6 5') == 'No'\n\n\"\"\""
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\", \"A\"\nassert solution(input()) == \"No\", \"B\"\nassert solution(input()) == \"Yes\", \"C\"\n\n'''\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 2\n1 1\n3 1 3 2\n2 1 5\n2 4 4''') == 'Yes'\nassert solution('''4 3\n1 2\n2 1 2\n3 1 2 3\n2 1 5''') == 'No'\nassert solution('''6 5\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n''') == 'Yes'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"6 5\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'Yes\\n0'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"Yes\"\nassert solution(\"6 5\") == \"No\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n') == '0 2 1 4 3'\nassert solution('6\\n') == '0 1 2 3 4 5'\nassert solution('7\\n') == '0 1 2 3 4 5 6'\nassert solution('8\\n') == '0 1 2 3 4 5 6 7'\nassert solution('9\\n') == '0 1 2 3 4 5 6 7 8'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2 0 1'\nassert solution('3') == '3 0 1 2'\nassert solution('4') == '4 0 1 2 3'\n\ninput_data = '3'\noutput = '0 2 1 4 3'"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0 2 1'\nassert solution('5') == '0 2 1 4 3'\nassert solution('9') == '0 2 1 4 3 6 5 7 8'\nassert solution('10') == '0 2 1 4 3 6 5 7 8 9'\n\n\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"4\") == \"0 1 2 3\"\nassert solution(\"10\") == \"0 1 2 3 4 5 6 7 8 9\""
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == \"0 2 1 4 3\"\nassert solution('2') == \"0 1 2 3 4\"\nassert solution('3') == \"0 1 2 3 4 5\"\nassert solution('4') == \"0 1 2 3 4 5 6\"\nassert solution('5') == \"0 1 2 3 4 5 6 7\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n\") == \"1 2 3 4 5\"\nassert solution(\"2\\n\") == \"0 1\"\nassert solution(\"3\\n\") == \"0 1 2\"\nassert solution(\"4\\n\") == \"0 1 2 3\"\nassert solution(\"5\\n\") == \"0 1 2 3 4\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0 1 2'\nassert solution('4') == '0 1 2 3'\nassert solution('5') == '0 1 2 3 4'\nassert solution('10') == '0 1 2 3 4 5 6 7 8 9'\nassert solution('10') == '0 1 2 3 4 5 6 7 8 9'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1 3 2 4 5\"\nassert solution(\"6\") == \"1 4 2 3 5 6\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n\") == \"0 2 1 4 3\"\nassert solution(\"5\\n\") == \"0 2 1 4 3 5\"\nassert solution(\"10\\n\") == \"0 2 1 4 3 5 6 7 8 9\"\nassert solution(\"100\\n\") == \"0 2 1 4 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n\") == \"0 2 1 4 3\"\nassert solution(\"10\\n\") == \"0 2 1 4 3 6 7 8 9\"\nassert solution(\"7\\n\") == \"0 2 1 3 4 5 6 7\"\nassert solution(\"5\\n\") == \"0 2 1 4 3 6 7 8 9\"\nassert solution(\"4\\n\") == \"0 2 1 3 4\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'YES'\nassert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'NO'\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 4') == 'NO'\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 4\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'NO'\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'YES'\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'NO'\n\n----------------\n\nYou can manipulate the first engine using the first operation with $\\theta = \\pi$. The power sources in the first engine become $(0, 0)$, $(0, -2)$, and $(-2, 0)$.\n\nThe power sources in the second engine become $(-2, 0)$, $(0, 0)$, $(0, -2)$, and $(-1, -1)$.\n\nBecause of the second operation, the power field in the second engine will be: $(-2, -2)$.\n\nAfter this, you can delete the second engine's power source ($2, -2)$ and the power source that is located in the second engine's first power source ($-2, 0)$ so that the power field in the second engine becomes: $(-2, -2)$.\n\nAfter this, you can delete the first engine's power source ($0, 0)$ and the power source that is located in the second engine's first power source ($0, 0)$, so that the power field in the first engine becomes: $(0, -2)$.\n\nAfter this, you can delete the second engine's first power source ($0, 0)$, so that the power field in the second engine becomes: $(0, 0)$.\n\nAfter this, you can delete the first engine's first power source ($-2, -2)$, so that the power field in the first engine becomes: $(-2, 0)$.\n\nBecause all power sources are connected, the power field in the first engine becomes: $(-2, 0)$.\n\nAfter this, the power field in the first engine becomes: $(0, 0)$.\n\nBecause this is the first sample, the answer is 'YES'.\n\nIf you do not destroy any power source, the power field in the first engine becomes: $(0, 0)$.\n\nHowever, because of the second operation, the power field in the second engine becomes: $(0, -2)$.\n\nIn the first sample, there exists a power source in the second engine that power field will shrink if you destroy it.\n\nIn the second sample, there exists a power source in the first engine that power field will shrink if you destroy it.\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'NO'\nassert solution('''\n2 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'YES'\nassert solution('''\n2 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'YES'\n\n'''\n2 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n'''"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\nassert solution(\"0 0\") == \"YES\"\nassert solution(\"0 0\") == \"NO\"\nassert solution(\"0 2\") == \"YES\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 4\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"NO\"\nassert solution(\"2 3\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"10 10\") == \"YES\"\nassert solution(\"50 50\") == \"YES\""
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0011\") == \"0011\"\nassert solution(\"0101\") == \"0101\"\nassert solution(\"1110\") == \"1110\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\\n3\\n7\"\nassert solution(\"5\") == \"1\\n4\\n10\\n24\\n51\\n109\\n213\\n421\\n833\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '4'\nassert solution('9') == '8'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1\n1\n1\n''') == '1'\nassert solution('''\n5\n1\n0\n1\n0\n1\n''') == '4'\n\n\"\"\""
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1') == '3'\nassert solution('5\\n1\\n0\\n1\\n0\\n1') == '4'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"11\"\nassert solution(\"0\") == \"01\"\nassert solution(\"1\") == \"111\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"9\") == \"1\""
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"10\"\nassert solution(input()) == \"22\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"First\"\nassert solution(\"2\") == \"Second\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 1\n1 2\n2 1\n\"\"\") == \"First\"\nassert solution(\"\"\"\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"Second\"\nassert solution(\"\"\"\n1 0\n0 0\n\"\"\") == \"First\"\nassert solution(\"\"\"\n2 2\n3 0\n0 1\n\"\"\") == \"Second\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\nassert solution('''\n4\n3 1\n7 0\n10 8\n2 4\n9 5\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'Second'\nassert solution('''\n5\n2 3\n1 2\n3 4\n4 5\n6 7\n1 2\n''') == 'First'\nassert solution('''\n4\n3 1\n7 0\n10 8\n2 4\n9 5\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'Second'\nassert solution('''\n4\n2 3\n1 2\n3 4\n4 5\n6 7\n1 2\n''') == 'Second'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"First\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'First'\nassert solution('3 1') == 'Second'\nassert solution('2 3') == 'First'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First\\nSecond\\nFirst'\n\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 0\") == \"First\"\nassert solution(\"3 2\") == \"Second\"\n\n---Another Solution---\nfrom collections import defaultdict"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 0\") == \"First\"\nassert solution(\"6 2\") == \"Second\"\nassert solution(\"1 2\") == \"First\"\n\"\"\"\nimport sys\nimport math\n\nN, M = map(int, input().split())\n\nadj_list = [[] for i in range(N+1)]\n\nfor i in range(M):\n    a, b = map(int, input().split())\n    adj_list[a].append(b)\n    adj_list[b].append(a)\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 0\\n6 2\\n1 2') == 'First'\nassert solution('3 0\\n15 10\\n12 14\\n8 3\\n10 1\\n14 6\\n12 6') == 'Second'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\nassert solution('''\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'Second'\nassert solution('''\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\nassert solution('cbaac') == 'Ann'\nassert solution('cbaabcba') == 'Mike'\nassert solution('cbaacdcba') == 'Ann'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'Mike'\nassert solution('abab') == 'Mike'\nassert solution('abac') == 'Mike'\nassert solution('abcde') == 'Ann'\nassert solution('bca') == 'Mike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'Mike'\nassert solution('abacaba') == 'Mike'\nassert solution('aaaaa') == 'Mike'\nassert solution('aaaa') == 'Ann'\nassert solution('aaaaa') == 'Ann'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\""
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"abbc\") == \"Mike\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\ncba\n''') == 'Mike'\nassert solution('''\nba\n''') == 'Mike'\nassert solution('''\naaabb\n''') == 'Ann'\nassert solution('''\naaabb\n''') == 'Ann'\nassert solution('''\naaaaaaaaaaaa\n''') == 'Mike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\nassert solution('dgh') == 'None'\nassert solution('vfk') == 'None'"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\naba\n''') == 'Mike'\nassert solution('''\naa\n''') == 'Ann'\nassert solution('''\naaaaa\n''') == 'Mike'\nassert solution('''\naab\n''') == 'Ann'\nassert solution('''\nabab\n''') == 'Ann'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\nassert solution('abcde') == 'Ann'\nassert solution('abca') == 'Mike'\nassert solution('aaaa') == 'Mike'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 2 3') == '1'\nassert solution('8 3 8') == '2'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '0'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n8 3 8\n1 2\n2 3\n''') == '0'\nassert solution('''\n3 3\n5 8 2\n1 2\n2 3\n''') == '1'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\n8 3 8\n1 2\n2 3\n''') == '0'\nassert solution('''\n3 2\n8 12 8\n1 2\n2 3\n''') == '2'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n') == '0'\nassert solution('3 2\\n') == '0'\nassert solution('3 2\\n1 2\\n2 3\\n') == '2'"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2\\n8 3 8\\n1 2\\n2 3\\n') == '0'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '2'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '0'\nassert solution('3 2\\n8 12 8\\n1 2\\n2 3\\n') == '0'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 2') == '1'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('2 5') == 'x'\nassert solution('10 3') == 'abab'\nassert solution('11 5') == 'x'\nassert solution('1 100') == 'x'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'\n\"\"\""
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"ab\"\nassert solution(\"3 2\") == \"-1\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == '-1'\nassert solution('4 4') == 'abacd'\nassert solution('3 4') == 'ababacd'\nassert solution('4 4') == 'ababacd'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input) == \"ababacd\"\nassert solution(input) == \"ababacd\"\n\nassert solution(stdin) == \"ababacd\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\na\n\n3 1\nc\n\n4 8\nb''') == 'aabcbdc'\nprint(solution('''2 2\na\n\n3 1\nc\n\n4 8\nb'''))\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 3') == 'acbcd'\n\nassert solution('6 5') == 'bcbac'\n\nassert solution('11 7') == 'aaacb'\n\nassert solution('2 9') == 'bac'\n\nassert solution('9 7') == 'acbcd'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'ababacd'\n\nassert solution('6') == '-1'\n\nassert solution('5 7') == 'ababacd'\n\nassert solution('4 7') == '-1'\n\nassert solution('4 10') == '-1'"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2 1 2\n''') == '4'\nassert solution('''\n10\n1 1 2 2 2 1 1 2 2 1\n''') == '9'\nassert solution('''\n5\n1 1 2 2 2\n''') == '4'\nassert solution('''\n5\n1 1 1 1 1\n''') == '3'\nassert solution('''\n6\n1 1 1 1 1 1\n''') == '2'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '9'\nassert solution('10') == '8'\nassert solution('10') == '7'\nassert solution('10') == '6'\nassert solution('10') == '5'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"10\") == \"9\""
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2\n''') == '4'\nassert solution('''10\n1 1 2 2 2 1 1 2 2 1\n''') == '9'"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2 1 2\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\") == \"9\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 1 2\n''') == '4'\nassert solution('''10\n1 1 2 2 2 1 1 2 2 1\n''') == '9'\n\nprint(solution('''10\n1 1 2 2 2 1 1 2 2 1\n'''))"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 1 2\n''') == '4'\nassert solution('''10\n1 1 2 2 2 1 1 2 2 1\n''') == '9'\nassert solution('''10\n1 1 2 2 2 1 1 2 2 1\n''') == '8'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution() == \"++-\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '+', 'Bad implementation'"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 1') == '2'\nassert solution('1 4 2') == '-++'"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 1\\n1 1 2\\n2 2 1') == '2'\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4 3\n1 2 5\n2 3 7\n3 2 6\n''') == '3'\nassert solution('''\n3 3 4\n2 5 6\n1 2 3\n''') == '3'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\n\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5 1\n2 3 5\n1 2 5\n1 3 1\n2 4 2\n1 4 1\n2 5 4\n''') == '+-', 'First example'\n\nassert solution('''\n7 7 3\n1 6 5\n2 4 2\n1 4 4\n2 3 3\n1 6 1\n2 5 4\n3 2 1\n4 2 1\n5 2 1\n6 1 2\n''') == '++--++--', 'Second example'\n\nassert solution('''\n4 4 1\n1 3 3\n2 4 4\n1 4 3\n3 1 4\n2 3 4\n1 4 4\n2 2 4\n2 1 4\n''') == '++--++--', 'Third example'"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"2\"\nassert solution(\"1 4 3\") == \"++-\"\nassert solution(\"2 3 2\") == \"2\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() in {'+', '--'}\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"18690\"\nassert solution(input()) == \"0\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\nassert solution('1234') == '432'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline()"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"189061899\") == \"18690\"\nassert solution(\"180130248906\") == \"180130248906\"\nassert solution(\"180130248906\") == \"180130248906\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"12345\") == \"0\"\nassert solution(\"1234\") == \"0\"\nassert solution(\"87654321\") == \"0\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(1689) == '1869'\nassert solution(18906) == '18690'\nassert solution(1234) == '0'\nassert solution(7) == '7'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n6\n8\n9''') == '1869'\nassert solution('''18906''') == '18690'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1869'\nassert solution(input()) == '18690'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\"\"\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"5 5\\n4 2\\n3 5\\n4 5\\n1 2\\n\") == \"3\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 5\") == \"3\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 6\") == \"3\"\n\n\n\n'''\n\nimport math\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 6\") == \"3\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '-1'\nassert solution('4 6') == '3'\nassert solution('5 5') == '3'\n\n\"\"\""
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 2\"\n) == \"2\"\n\nassert solution(\n    \"4 6\"\n) == \"3\"\n\nassert solution(\n    \"5 5\"\n) == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n1 3\n3 4\n''') == '2'\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n''') == '3'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n4 7\\n') == '3'\nassert solution('3\\n4 3 1\\n') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n4 7\n''') == '3'\n\nassert solution('''3\n4 3 1\n''') == '9'\n\nassert solution('''5\n3 2 7 5 4\n''') == '10'"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n4 7\n''') == '3'\nassert solution('''\n3\n4 3 1\n''') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"9\""
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n4 7\n''') == '3'\nassert solution('''3\n4 3 1\n''') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 4, 3, 1]) == \"9\"\nassert solution([4, 4, 3, 1]) == \"9\"\nassert solution([1, 2, 3]) == \"5\"\nassert solution([1, 2, 2]) == \"3\"\nassert solution([2, 2, 3]) == \"6\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == '9'\nassert solution(\"4\") == '0'\nassert solution(\"1\") == '-1'\nassert solution(\"5\") == '0'"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"3\") == \"9\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '9'\nassert solution('5\\n3 10 2 1 5') == '2'\nassert solution('4\\n0 5 15 10') == '0'\nassert solution('1\\n1') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n8 5\\n\") == \"9\"\nassert solution(\"3\\n4 8 5\\n\") == \"2\"\nassert solution(\"5\\n3 10 2 1 5\\n\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"-\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"0\") == \"-1\"\nassert solution(\"1\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_str_1) == \"9\", solution.__doc__\nassert solution(input_str_2) == \"0\", solution.__doc__"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"5\") == \"0\""
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n\"\n    \"4 8 5\\n\"\n) == \"9\\n\"\n\nassert solution(\n    \"5\\n\"\n    \"3 10 2 1 5\\n\"\n) == \"2\\n\"\n\nassert solution(\n    \"4\\n\"\n    \"0 5 15 10\\n\"\n) == \"0\\n\"\n\nassert solution(\n    \"1\\n\"\n    \"1\\n\"\n) == \"-1\\n\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n\"\n    \"4 8 5\\n\"\n) == \"9\"\n\nassert solution(\n    \"5\\n\"\n    \"3 10 2 1 5\\n\"\n) == \"2\"\n\nassert solution(\n    \"4\\n\"\n    \"0 5 15 10\\n\"\n) == \"0\"\n\nassert solution(\n    \"1\\n\"\n    \"1\\n\"\n) == \"-\""
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 4 5\n3 5 7 10\n''') == '3'\nassert solution('''13 4 5\n7 8 9 10\n''') == '1'\n\n## TAKEAWAYS\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 4 5\n7 8 9 10\n''') == '1'\nassert solution('''\n13 4 5\n7 8 9 10\n''') == '1'\nassert solution('''\n10 4 5\n3 5 7 10\n''') == '2'\nassert solution('''\n100 4 5\n1 2 5 6 3 8 9 10\n''') == '5'\nassert solution('''\n10000 4 5\n1 2 3 4 5 6 7 8 9 10\n''') == '7'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '10 4 5\\n'\n    '3 5 7 10'\n) == '3'\n\nassert solution(\n    '13 4 5\\n'\n    '7 8 9 10'\n) == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\"\nassert solution(\"10 4 5\") == \"1\"\nassert solution(\"10 13 5\") == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"1\"\nassert solution(input_) == \"2\""
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10 4 5\n3 5 7 10\n''') == \"3\"\nassert solution('''13 4 5\n7 8 9 10\n''') == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '1'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 4 5\n3 5 7 10\n\n''') == '3'\nassert solution('''13 4 5\n7 8 9 10\n\n''') == '1'\nassert solution('''\n''') == '0'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 5') == '2'\nassert solution('2 4 5') == '2'\nassert solution('100000 100000 100000') == '100000'\nassert solution('2 2 2') == '1'\nassert solution('1000000 1000000 1000000') == '1'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n101\n3 3\n3 2\n3 1\n''') == '2'\nassert solution('''4\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '4'\nassert solution('''6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n''') == '6'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1110\n3 4\n5 2\n3 1\n3 2\n''') == '2'\nassert solution('''5\n1110\n3 4\n5 2\n3 1\n3 2\n''') == '4'\nassert solution('''6\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '4'\nassert solution('''7\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '5'\nassert solution('''8\n1110\n3 4\n5 2\n3 1\n3 2\n''') == '3'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '5'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '6'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '6'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '6'\nassert solution('8') == '8'\nassert solution('13') == '6'\nassert solution('100') == '13'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 0\") == \"2\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\"\n\n\"\"\""
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n''') == \"1111\"\nassert solution('''5 3\n''') == \"01010\"\nassert solution('''7 3\n''') == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n''') == '01010'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4''') == '1111'\nassert solution('''5 3''') == '01010'\nassert solution('''7 3''') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4''') == '1111'\nassert solution('''5 3''') == '01010'\nassert solution('''7 3''') == '1011011'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0/1'\nassert solution() == '0/1'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1/2'\nassert solution(stdin='''\n3\n1 1 1\n''') == '0/1'\nassert solution(stdin='''\n3\n2 2 1\n''') == '1/3'\nassert solution(stdin='''\n3\n4 3 2\n''') == '1/2'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1/2'\nassert solution('2') == '0/1'\nassert solution('3') == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0/1'\nassert solution('3') == '0/1'\nassert solution('5') == '0/1'\nassert solution('10') == '0/1'\nassert solution('15') == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n3 2 1 4 5''') == '4/5'\nassert solution('''5\n1 1 1 1 1''') == '1/5'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n''') == '1/2'\nassert solution('''3\n1 1 1\n''') == '0/1'\nassert solution('''6\n2\n''') == '3/2'\nassert solution('''9\n2\n''') == '6/7'\nassert solution('''20\n1 1 1\n''') == '0/1'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1/2'\nassert solution('2') == '1/2'\n\nassert solution('3') == '0/1'\n\nassert solution('1 2') == '1/2'\n\nassert solution('1 2 3 4 5 6 7 8 9') == '1/8'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3]) == \"0/1\""
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1,1,1]) == \"0/1\""
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1/2'\nassert solution('4') == '1/2'\n\nprint(solution(input()))"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n\") == \"1 0 1 0 0\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"8 1 0 0 3 4 2 3 1 1 2\"\nassert solution(\"100000\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n\") == \"10000 1 0 0 3 4 2 3 1 1 2 3 4 2 3 1 1 2\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '1 0 1 0 0'\n\n'''"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1 0 1 0 0'\nassert solution('9 7 8 6 5') == '4 3 2 1 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n\"\"\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '1 0 1 0 0'\n\n'''"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6') == '1 0 1 0 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == \"1 0 1 0 0\"\n\nassert solution('''\n5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == \"4 3 2 1 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1 0 1 0 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1 0 1 0 0'\nassert solution('5') == '4 3 2 1 0'\n'''\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '1 0 1 0 0'\nassert solution('''\n7\n8 6 5 4 3 2 1\n1 1\n2 1\n3 1\n4 1\n5 1\n6 1\n7 1\n''') == '4 3 2 1 0'\nassert solution('''\n5\n1 2 4 6 5\n1 1\n2 1\n3 1\n4 1\n''') == '4 3 2 1 0'\n\n''')\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n\nstdin = input()\nprint(solution(stdin))\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('2') == '0'\nassert solution('3') == '11'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n4 5 1 7 4\n''') == '1'\nassert solution('''2\n1 2\n''') == '0'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('3') == '11'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\"\nassert solution(\"5\\n4 5 1 7 4\") == \"0\"\nassert solution(\"5\\n1 2\") == \"11\"\nassert solution(\"5\\n2 3\") == \"00\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('3') == '11'\nassert solution('4') == '1'\nassert solution('5') == '8'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n4 5 1 7 4\\n') == '1'\nassert solution('2\\n1 2\\n') == '0'"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '1'\n\nstdin = '5'"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n4 5 1 7 4\n''') == '1'\nassert solution('''5\n4 5 1 7 4\n''') == '0'\nassert solution('''5\n3 3 3 2\n''') == '11'\nassert solution('''5\n3 3 2 1\n''') == '10'\nassert solution('''5\n2 2 2 2\n''') == '100'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\n\"\"\"\nimport itertools\nimport math"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '1'\n\nassert solution('''8\n0 1 2 3 4 5 6 7\n0 4 6 1 5 2 7 3\n1 6 7 2 5 4 3 1\n2 7 5 4 1 6 3 1\n3 7 2 6 1 5 4 1\n4 7 5 1 2 6 3 1\n5 7 6 3 1 4 2 1\n6 7 5 4 3 2 1 1''') == '4'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1'\nassert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1'\n\n------Submission------\nimport sys\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\nassert solution(\"2\\n1 1 1\\n1 1 1\\n\") == \"1\"\nprint(\"Congratulations! All test cases passed\")\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '1'"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"6\\n\"\n    \"0 1 2 3\\n\"\n    \"0 4 6 1\\n\"\n    \"1 6 7 2\\n\"\n    \"2 7 5 3\\n\"\n    \"6 4 5 7\\n\"\n    \"4 0 3 5\"\n) == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n0 1 2 3\n0 4 6 1\n1 6 7 2\n2 7 5 3\n6 4 5 7\n4 0 3 5''') == '1'\n"
    }
]