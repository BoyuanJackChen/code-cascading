[
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '79'\nassert solution() == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n2 3\n''') == '5'\nassert solution('''8\n( 2 ( 2 1 ) ) 3\n''') == '9'\nassert solution('''4\n( 12 3 )\n''') == '36'\nassert solution('''6\n( ( 2 ) )\n''') == '5'\n\ninput_ = int(input())\noutput = 0\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '5'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 3\nSample Output 1:\n5\n\nSample Input 2:\n8\n( 2 ( 2 1 ) ) 3\nSample Output 2:\n9\n\nSample Input 3:\n4\n( 12 3 )\nSample Output 3:\n36\n\nSample Input 4:\n6\n( 2 ) ( 3 )\nSample Output 4:\n5\n\nSample Input 5:\n6\n( ( 2 3 ) )\nSample Output 5:\n5\n''') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"4\") == \"10\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == \"5\"\nassert solution('8') == \"9\"\nassert solution('4') == \"5\"\nassert solution('6') == \"5\"\nassert solution('6') == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == \"5\"\nassert solution('8 1') == \"9\"\nassert solution('4 1') == \"5\"\nassert solution('6 3') == \"5\"\nassert solution('4') == \"5\"\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(samples[0]) == '5'\nassert solution(samples[1]) == '9'\nassert solution(samples[2]) == '36'\nassert solution(samples[3]) == '5'\nassert solution(samples[4]) == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2 3\n''') == '5'\nassert solution('''\n8\n( 2 ( 2 1 ) ) 3\n''') == '9'\nassert solution('''\n4\n( 12 3 )\n''') == '36'\nassert solution('''\n6\n( ( 2 3 ) )\n''') == '5'\n\nassert solution('''\n6\n( )\n''') == '4'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '5'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('610') == '3'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\nprint('all tests passed')\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('610') == '5'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"2\""
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(0) == 0\nassert solution(1) == 0\nassert solution(2) == 3\nassert solution(3) == 5\nassert solution(4) == 4\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n2\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\nassert solution('''\n1\n2019 3 0\n''') == 'insufficient service'\nassert solution('''\n3\n2020 5 0\n2020 8 0\n2020 10 0\n''') == 'tampered odometer'\nassert solution('''\n3\n2020 5 0\n2020 8 0\n2020 10 0\n''') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\nassert solution(\"\"\"\n2\n2017 11 0\n2018 1 1000\n\"\"\") == \"tampered odometer\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') =='seems legit'\nassert solution('3\\n2017 4 0\\n2017 8 12000\\n2018 8 42000\\n') == 'insufficient service'\nassert solution('2\\n2017 1 0\\n2018 1 1000\\n') == 'tampered odometer'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\nassert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42001\n\"\"\") == \"insufficient service\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') =='seems legit'\nassert solution('2') == 'insufficient service'\nassert solution('3') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"seems legit\"\nassert solution(stdin=\"\") == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"seems legit\"\nassert solution(sample_input_2) == \"insufficient service\"\nassert solution(sample_input_3) == \"tampered odometer\"\nassert solution(sample_input_4) == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') == 'insufficient service'\nassert solution('''\n2\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\nassert solution(\"\"\"\n2\n2017 11 0\n2018 1 1000\n\"\"\") == \"tampered odometer\""
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 4:') == '2'\n\"\"\"\n\nfrom collections import defaultdict\nfrom itertools import chain\nfrom math import factorial"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 1') == '2'\nassert solution('5 2') == '3'\nassert solution('5 3') == '2'\nassert solution('6 2') == '3'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '4'"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"3\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n0 1\n1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n4\n1 2 3\n0 2 3\n0 1 3\n0 1 2\n\"\"\") == \"4\"\nprint('all tests passed')"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 3') == '3'\nassert solution('5 2 3 4') == '2'\nassert solution('6 2 3 4') == '4'\nassert solution('4 3 2') == '3'\nassert solution('4 3 2 3') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 2\n0 2 3\n0 1\n1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '2'\nassert solution('6') == '4'"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\nBLUE 1 5000\\nRED 5001 10000\\n\") == \"2\"\nassert solution(\"3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n\") == \"3\"\nassert solution(\"4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n\") == \"3\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == 'IMPOSSIBLE'\nassert solution('4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2\\nBLUE 1 5000\\nRED 5001 10000') == '2'\nassert solution(\n    '3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000') == '3'\nassert solution(\n    '4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000') == '4'"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == '4'"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nBLUE 1 4000\\nRED 4002 10000\\nORANGE 4000 8000\\nGREEN 700 10000\\n') == '3'\n\nassert solution('3\\nBLUE 1 3000\\nRED 2000 5000\\nWHITE 7000 10000\\n') == '2'\n\nassert solution('1\\nBLUE 1 3000\\nRED 2000 5000\\nWHITE 7000 10000\\n') == '1'\n\nassert solution('1\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 700 10000\\n') == '1'\n\nassert solution('2\\nBLUE 1 5000\\nRED 5001 10000\\nBLUE 1 3000\\nRED 2000 5000\\nWHITE 7000 10000\\n') == '3'"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\""
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('POPPOP') == 'PO(P)^2OP'\nassert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('BABBABABBABBA') == '6'"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('A') == 1\nassert solution('AAAAAAAAAA') == 12\nassert solution('PRIME') == 5\nassert solution('PRATTATTATTIC') == 6\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\nassert solution('AAABBB') == '7'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('BABBABABBABBA') == '6'\nassert solution('PRIME') == '5'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABABABABBABA\") == \"6\"\nassert solution(\"\") == \"\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"PRINT\") == \"1\"\nassert solution(\"PRINT\") == \"3\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == \"1\"\nassert solution(\"\") == \"1\"\nassert solution(\"A\") == \"1\"\nassert solution(\"B\") == \"2\"\nassert solution(\"C\") == \"3\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\\n\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\\n\") == \"1\"\nassert solution(\"I 14 B\\nI 14 A\\nE\\nI 14 A\\nI 15 B\\nE\\n\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"D 1\nD 2\nE\nD 3\nD 1\nE\n\"\"\") == \"0\"\n\nassert solution(\"\"\"D 2\nD 1\nE\nD 1\nD 2\nE\n\"\"\") == \"1\"\n\nassert solution(\"\"\"I 1 X\nD 1\nE\nE\n\"\"\") == \"0\"\n\nassert solution(\"\"\"I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n\"\"\") == \"0\""
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''D 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''I 14 B\nD 1\nE\nD 1\nD 2\nE\n''') == '0'\nassert solution('''I 14 A\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''I 15 B\nD 1\nE\nD 1\nD 2\nE\n''') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''D 2\nD 1\nE\nD 1\nD 2\nE''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE''') == '1'\nassert solution('''I 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0'\nassert solution('''I 14 A\nI 15 B\nE\nI 14 A\nI 15 B\nE''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nD 2\nD 1\nE\nD 1\nD 2\nE\n''') == '0', 'D2, D1, E'\nassert solution('''\nD 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1', 'D2, D1, E'\nassert solution('''\nI 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0', 'D2, D1, E'\nassert solution('''\nI 14 A\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '1', 'D2, D1, E'\nassert solution('''\nI 14 X\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0', 'D2, D1, E'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"D 1\") == \"0\"\nassert solution(\"D 2\") == \"1\"\nassert solution(\"E\") == \"1\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('D 1') == '0'\nassert solution('D 2') == '1'\nassert solution('E') == '0'\nassert solution('D 3') == '1'\nassert solution('D 1') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"D 1\\nD 2\\nE\\nD 3\\nD 1\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\\nD 1\\nD 2\\nE\") == \"1\"\nassert solution(\"I 14 X\\nD 1\\nE\\nE\") == \"0\"\nassert solution(\"I 14 A\\nI 15 B\\nE\\nE\") == \"1\""
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 0 1 0 0 0\n''') == '300'\nassert solution('''\n4 0 1 0 0 0\n''') == '300'\nassert solution('''\n6 0 1 1 0 0\n''') == '1900'\nassert solution('''\n10 399 0 0 0 0\n''') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 0 1 0 0 0\"\n) == \"300\"\n\nassert solution(\n    \"5 0 1 0 1 0\"\n) == \"1900\"\n\nassert solution(\n    \"6 0 1 1 0 0\"\n) == \"2300\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 0 1 0 0\n2''') == '300'\nassert solution('''5 0 1 0 1 0\n2''') == '1900'\nassert solution('''6 0 1 1 0 0\n2''') == '2300'\nassert solution('''10 399 0 0 0 0\n1''') == '399'\nassert solution('''20 5 5 5 5\n5''') == '40'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 0 1 0 0 0\"\n) == \"300\"\nassert solution(\n    \"5 0 1 0 1 0\"\n) == \"1900\"\nassert solution(\n    \"6 0 1 1 0 0\"\n) == \"2300\"\nassert solution(\n    \"10 399 0 0 0 0\"\n) == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 0 1 0 0 0\n0''') == '300'\nassert solution('''5 0 1 0 1 0\n0''') == '1900'\nassert solution('''6 0 1 1 0 0\n0''') == '2300'\nassert solution('''10 399 0 0 0 0\n0''') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"300\"\n\nprint(solution())"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"399\"\n\ninput = \"\"\"4 0 1 0 0 0\n\"\"\"\nassert solution(input) == \"300\"\n\ninput = \"\"\"5 0 1 0 1 0\n\"\"\"\nassert solution(input) == \"1900\"\n\ninput = \"\"\"6 0 1 1 0 0\n\"\"\"\nassert solution(input) == \"2300\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10\\n1 12\\n1 13\") == \"2\"\nassert solution(\"2 10\\n1 5\\n1 12\\n\") == \"2\"\nassert solution(\"2 10\\n1 5\\n4 1\\n\") == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution([1, 12, 3, 8, 2, 6, 1, 10, 4]) == \"2\"\nprint('all tests passed')\n\"\"\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10') == '2'\nassert solution('2 10') == '2'\nassert solution('2 10') == '2'\n\"\"\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 10\") == \"2\"\nassert solution(\"1 10\") == \"2\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"1 4\") == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n2 10\n1 12\n1 13\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n2 10\n1 5\n1 12\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n2 10\n1 5\n1 4\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n2 10\n1 5\n4 1\n\"\"\"\n) == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10') == '2'\nassert solution('2 10') == '2'\nassert solution('2 10') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 10\n1 12\n1 13\"\"\") == \"2\"\nassert solution(\"\"\"2 10\n1 5\n1 12\"\"\") == \"2\"\nassert solution(\"\"\"2 10\n1 5\n4 1\"\"\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == '2'\nassert solution('2 10') == '2'\nassert solution('1 10') == '2'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '28.976'\nassert solution('6') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n\"\"\"\n) == \"28.970562748\"\n\nassert solution(\n\"\"\"\n4\n10 10 5\n10 20 1\n20 10 12\n20 20 8\n\"\"\"\n) == \"36.2842712475\"\n\nassert solution(\n\"\"\"\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n\"\"\"\n) == \"32\""
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '36.2847'\nprint(solution(open('input.txt')))\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '28'\nassert solution('6') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n') == '28.970562748'\nassert solution('4\\n') == '36.2842712475'\nassert solution('8\\n') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3\n3 4 6\n3 5 2\n4 5 9\n5 8 6''') == '28.969082741'\nassert solution('''5\n1 1 7\n1 3 7\n1 5 7\n1 7 7\n1 9 7''') == '36.289864844'\nassert solution('''6\n2 3 4 5 6\n4 5 9 2\n5 5 5 3\n7 5 1 3\n4 6 7 9\n7 2 6 1\n7 5 4 2\n7 5 1 6\n''') == '32'\nassert solution('''10\n1 2 7\n2 4 9\n5 2 4\n3 2 8\n5 3 4\n5 6 8\n6 2 7\n6 3 7\n6 5 2\n5 6 4\n5 5 7\n5 6 9\n3 5 9\n4 6 9\n6 5 6\n7 4 2\n7 2 6\n7 2 5\n6 7 4\n6 4 3\n6 5 2\n6 5 4\n4 5 6\n6 5 4\n7 5 4\n6 6 4\n7 6 2\n6 6 5\n6 7 5\n7 5 6\n6 5 9\n6 6 4\n7 5 3\n7 5 4\n7 5 1\n6 6 5\n''') == '64.947272611'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '28.970562748'\nassert solution('''\n4\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '32.000000'\nassert solution('''\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32.000000'\nassert solution('''\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == 'Impossible'\n'''\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '28.970562748'\nassert solution('6') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28.973296659'''"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n4 4 1\\n4 6 1\\n4 8 1\\n6 6 14\\n8 4 1\\n8 6 1\\n8 8 1\\n99 6 -8\") == \"32\"\nassert solution(\"5\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n\") == \"28.970562748\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\n\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\n\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '0'\n\nassert solution('''\n2\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\n\nassert solution('''\n5\n1 1 9 5\n1 2 6 8\n1 4 4 10\n2 4 10 8\n4 8 9 3\n''') == '4'"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''3\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 7 10\") == \"1\"\nassert solution(\"7 4 4 10\") == \"1\"\nassert solution(\"2 4 10 8\") == \"1\"\nassert solution(\"4 8 9 3\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == \"3\"\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == \"1\"\nassert solution('''\n3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n''') == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\\n') == '3'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n') == '1'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\n') == '1'\nassert solution('2\\n0 0 0 0\\n0 0 0 0') == '0'\nassert solution('2\\n2 2 2 2\\n2 2 2 2\\n') == '0'"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3]) == '3'\nassert solution([2]) == '1'\nassert solution([1]) == '1'\nassert solution([3, 4, 5, 6, 7]) == '3'\nassert solution([2, 4, 6, 8, 10]) == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\") == \"3\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"1\"\nassert solution(\"3\\n-1 -2 -1 -1\\n-1 2 -1 -1\\nSample Output 4:\") == \"1\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3') == '3'\nassert solution('3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\\n') == '1'\nassert solution('2\\n-1 -2 -1 -1\\n-1 2 -1 -1\\nSample Output 4:') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n1 3 9 5\\n2 2 6 8\\n4 8 9 3\"\n    ) == \"3\"\n\nassert solution(\n    \"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\"\n    ) == \"1\"\n\nassert solution(\n    \"3\\n-1 -2 -1 -1\\n-1 2 -1 -1\\nSample Output 4:\n    1\"\n    ) == \"1\""
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-1\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''12223\n33322111''') == '94708'\nassert solution('''1234321''') == '-1'"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"94708\"\nassert solution(\"1234321\") == \"95016\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''12321\n12223\n33322111\n1232321\n''') == \"94708\"\nassert solution('''11111111\n22222222\n33333333\n''') == \"-1\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"9\") == \"3\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"94708\"\nassert solution(\"1234321\") == \"-1\""
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"6\"\nassert solution(sample_input_2) == \"2\"\nassert solution(sample_input_3) == \"4\"\nassert solution(sample_input_4) == \"0\""
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 7') == '1'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3 0 0 0 3'\n) == '6'\n\nassert solution(\n    '1 2 0 0 5'\n) == '2'\n\nassert solution(\n    '1 2 0 0 4'\n) == '4'\n\nassert solution(\n    '1 2 0 0 6'\n) == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 0 0 0 3\") == '6'\nassert solution(\"1 2 0 0 5\") == '2'\nassert solution(\"1 2 0 0 4\") == '4'\nassert solution(\"1 2 0 0 6\") == '0'\nassert solution(\"1 2 0 0 7\") == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 0 0 0 3\n''') == '6'\nassert solution('''\n1 2 0 0 5\n''') == '2'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 6\n''') == '0'\nassert solution('''\n1 2 0 0 7\n''') == '0'"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 0 0 0 3\n''') == '6'\nassert solution('''\n1 2 0 0 5\n''') == '2'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 6\n''') == '0'\nassert solution('''\n3 0 0 0 3\n''') == '6'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\""
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0.5 -5.301 3.098\n''') == '-1.26167861 3.88425357'\nassert solution('''\n0.5 8 8\n''') == '9.21068947 2.56226688'\nassert solution('''\n1 8 8\n''') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0.5 -5.301 3.098\n0.5 8 8\n0.5 -8 8''') == \"-1.26167861 3.88425357\"\nassert solution('''0.5 8 8\n0.5 -8 8''') == \"9.21068947 2.56226688\"\nassert solution('''1 8 8\n0.5 -8 8''') == \"6.22375968 -0.31921472\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n2 4\\n3 1\\n4 1') == '1'\nassert solution('3 3\\n1 2\\n2 3\\n3 2\\n3 4\\n4 1\\n5 1\\n5 2\\n4 2') == '0'\nassert solution('4 5\\n1 2\\n1 3\\n3 2\\n2 4\\n3 4\\n4 1\\n5 1\\n5 2\\n4 2') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_stdin) in [\"1\", \"2\", \"0\"]\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 2\n2 1\n''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '0'"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 2\n2 1\n''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 4\n''') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 3') == '0'\nassert solution('4 5') == '2'"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 5') == '0'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 5') == '0'\nassert solution('3 3') == '0'\nassert solution('5 5') == '2'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"4 5\") == \"2\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5 0 3\") == \"11\"\nassert solution(\"5 5 0 4\") == \"infinity\"\nassert solution(\"3 3 1 2\") == \"2\"\nassert solution(\"2 1 0 1\") == \"2\"\nassert solution(\"3 3 1 2\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 0 3') == '11'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('5 5 0 3') == '11'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('5 5 0 3') == '11'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 5 0 3\\n\"\n    \"0 1 1\\n\"\n    \"1 2 2\\n\"\n    \"2 0 4\\n\"\n    \"2 3 1\\n\"\n    \"2 3 3\"\n) == \"11\"\nassert solution(\n    \"5 5 0 4\\n\"\n    \"0 1 1\\n\"\n    \"1 0 1\\n\"\n    \"1 2 1\\n\"\n    \"2 0 1\\n\"\n    \"2 4 1\"\n) == \"infinity\"\nassert solution(\n    \"3 3 1 2\\n\"\n    \"0 1 1\\n\"\n    \"1 0 1\\n\"\n    \"1 2 1\"\n) == \"2\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''\n5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 0 4\n2 3 1\n2 3 3\n''') == 'infinity'\nassert solution('''\n2 1 0 1\n0 1 2\n''') == '2'\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\") == \"11\"\nassert solution(\"5 5 0 4\") == \"infinity\"\nassert solution(\"2 1 0 1\") == \"2\"\nassert solution(\"3 3 1 2\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == \"11\"\nassert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == \"infinity\"\nassert solution('3 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5 0 3') == '11'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('5 5 0 4') == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4 5 0 3'\n    '0 1 1'\n    '1 2 2'\n    '2 0 4'\n    '2 3 1'\n    '2 3 3'\n) == '11'\nassert solution(\n    '5 5 0 4'\n    '0 1 1'\n    '1 0 1'\n    '1 2 1'\n    '2 3 1'\n    '3 0 1'\n) == 'infinity'\nassert solution(\n    '3 3 1 2'\n    '0 1 1'\n    '1 0 1'\n    '1 2 1'\n    '2 3 1'\n    '3 0 1'\n) == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 0 3') == '11'\nassert solution('6 5 0 2') == 'infinity'\nassert solution('3 1 0 1') == '2'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 0 1\") == \"11\"\nassert solution(\"5 5 0 4\") == \"infinity\"\nassert solution(\"3 3 1 2\") == \"2\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '18'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '12'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 1 1') == '6'\nassert solution('3 2 2 3') == '0'\nassert solution('3 1 2 3') == '12'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 1 2 1') == '6'\nassert solution('4 2 1 2 1') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '18'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '0'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2 1 2\n2 1 2\n2 3 4''') == '6'\nassert solution('''3 3 1 1\n1 1\n2 2 3\nSample Output 2:\n0''') == '12'\nassert solution('''4 3 1 2 1\n2 1 2\n2 3 4\nSample Output 3:\n18''') == '0'\nassert solution('''3 3 1 1\n1 1\n2 2 3\nSample Output 3:\n18''') == '0'"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3 1 2 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '18'\nassert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 2\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"4 2 1 2 1\") == \"6\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''3 2 2 3\n1 1\n2 2 3\n''') == '18'\nassert solution('''3 1 2 3\n1 1\n2 2 3\n''') == '12'"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\n\nassert solution(\n'''\n3 3 1 1\n1 1\n2 2 3\n''') == '18'\n\nassert solution(\n'''\n3 2 2 3\n1 1\n2 2 3\n''') == '0'\n\nassert solution(\n'''\n3 1 2 3\n1 1\n2 2 3\n''') == '12'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"468559\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n\n\"\"\"\nimport math"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '468559'\nassert solution(input) == '49401'\nassert solution(input) == '20'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1000000 1\n''') == '468559'\nassert solution('''\n1000000 5\n''') == '49401'\nassert solution('''\n1000000 16\n''') == '20'\nassert solution('''\n9000000000000000000 62\n''') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == '20'"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 9\") == \"1\"\nassert solution(\"4 13\") == \"3\"\nassert solution(\"18 90\") == \"12\"\nprint(solution(input()))"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 9\") == \"1\"\nassert solution(\"4 13\") == \"3\"\nassert solution(\"18 90\") == \"12\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(samples[0]) == '1'\nassert solution(samples[1]) == '3'\nassert solution(samples[2]) == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'\n\"\"\"\n\nimport sys\n\nsys.stdin = open('input.txt')\n\n\"\"\"\nT: 5\nK: 8\n\n3 6\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n\n4 6\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n\n13 18\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n\n\"\"\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 9\") == \"1\"\nassert solution(\"4 13\") == \"3\"\nassert solution(\"18 90\") == \"12\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution() == '3'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\"\nassert solution(\"3 9\") == \"1\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1\\n\"\n    \"1\\n\"\n    ) == \"0\"\n\nassert solution(\n    \"3\\n\"\n    \"4 7 8\\n\"\n    ) == \"3\"\n\nassert solution(\n    \"5\\n\"\n    \"2 3 4 5 8\\n\"\n    ) == \"5\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1\n''') == '0'\nassert solution('''\n3\n4 7 8\n''') == '3'\nassert solution('''\n5\n2 3 4 5 8\n''') == '5'"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"0\""
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4 7 8\") == \"3\"\nassert solution(\"5 2 3 4 5 8\") == \"5\""
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('5') == '9'"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 3 4 5 8\n''') == '3'\nassert solution('''\n1\n1\n''') == '0'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2\n3\n4\n5\n8\n''') == '5'\nassert solution('''\n4\n4\n5\n8\n''') == '4'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n4 5 8''') == '1'\nassert solution('''1\n3 7''') == '3'\nassert solution('''3\n1 2 3''') == '3'\nassert solution('''3\n1 2 3 4 5''') == '6'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '10'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"5\"\nassert solution(\"2 3 4 5 8\") == \"3\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"6\"\n) == \"4\"\nassert solution(\n    \"149\"\n) == \"17\"\nassert solution(\n    \"123476544\"\n) == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nassert solution('12347654') == '-1'\nassert solution('123456789') == '-1'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n''') == '1', '1'\nassert solution('''\n5\n''') == '5', '5'\nassert solution('''\n11110\n''') == '1112', '1112'\nassert solution('''\n354548\n''') == '3550', '3550'\nassert solution('''\n120102\n''') == '1201', '1201'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"123456789\") == \"11112\"\nassert solution(\"0000\") == \"1\"\nassert solution(\"99999999\") == \"11112\"\nassert solution(\"9223333\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('d 4\\nabc\\nbca\\ncab\\naca\\n') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb\\n') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\nabc\\nacb\\nadc\\n') == 'adcb'\nassert solution('5 2\\nabc\\ncba\\nadc\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"d 4\\ncab\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''d 4\ncab\ncda\nccc\nbadca\n''') == 'adcb'\nassert solution('''f 2\ndea\ncfb\n''') == 'IMPOSSIBLE'\nassert solution('''c 4\nabc\nbca\ncab\naca\n''') == 'ambi'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca\\n') == 'adcb'\nassert solution('c 2\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\ncab\\ncda\\ncbb\\nbadcab\\nccc\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 2\\nabc\\nbca\\ncab\") == \"IMPOSSIBLE\"\nassert solution(\"f 2\\ndea\\ncfb\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''d 4\ncab\ncda\nccc\nbadca\n''') == 'adcb'\nassert solution('''c 4\nabc\nbca\ncab\naca\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('d 4\\n'\n                'cab\\n'\n                'cda\\n'\n                'ccc\\n'\n                'badca\\n') == 'adcb', f'def solution({stdin!r})'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\nprint('You passed all the tests! Congrats!')"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\nassert solution('10 20 2 0 0') == '10'\nassert solution('10 20 0 0 0 0 1 0 2 0 0 0 3 0 0') == '16'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3 3 3\n''') == '9'\nassert solution('''10 20 0 0\n''') == '10'\nassert solution('''100 20 543 12\n''') == '164''')\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\n\n'''\n\n\n'''\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\nassert solution(\"2 5 0 1\") == \"2\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3 3 3''') == '9'\nassert solution('''10 20 0 0''') == '10'\nassert solution('''100 20 543 12''') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 3 3 3\"\n) == \"9\"\nassert solution(\n    \"10 20 0 0\"\n) == \"10\"\nassert solution(\n    \"100 20 543 12\"\n) == \"164\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 3') == 'yes'\nassert solution('4 3 3') == 'no'\nassert solution('5 4 3') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'yes'\nassert solution('''\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 3\") == \"yes\"\nassert solution(\"4 2 3\") == \"no\"\nassert solution(\"3 2 3\") == \"no\"\nassert solution(\"3 3 3\") == \"no\"\nassert solution(\"4 5 6\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 3\") == \"yes\"\nassert solution(\"3 2 3\") == \"no\"\nassert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"4 1 3\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n2 3 3\n-1 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n\"\"\"\n) == \"yes\"\nassert solution(\n\"\"\"\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n\"\"\"\n) == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes', 'First'\nassert solution('''\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no', 'Second'\nassert solution('''\n2 3 3\n-1 1\n1 1 -1\n0 1\n-1 -1 1\n1 1 -1\n1 1 -1\n0 0\n''') == 'yes', 'Third'\n\n----Hints----\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n\"\"\") == \"yes\"\n\nassert solution(\"\"\"\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\nSample Output 3:\nno\"\"\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes'\nassert solution('''\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\nassert solution('''\n3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n''') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 3') == 'yes'\nassert solution('4 2 3') == 'no'\nassert solution('4 3 3') == 'no'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"3 2 3\") == \"no\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n652526\n''') == '4'\nassert solution('''\n12121131221\n''') == '7'\nassert solution('''\n123456789\n''') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n652526\n''') == '4'\nassert solution('''\n12121131221\n''') == '7'\nassert solution('''\n123456789\n''') == '1'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"123456789\") == \"1\"\nassert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''652526''') == '4'\nassert solution('''12121131221''') == '7'\nassert solution('''123456789''') == '1'\nassert solution('''7112852''') == '2'\nprint('All tests passed.')\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '24'\nassert solution('6 8') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\nprint(solution())"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n1\n1 2\n2 3\n1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\nSample Output 2:\n24\n\nSample Input 3:\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\nSample Output 3:\n800\n\nSample Input 4:\n3 3\n1\n1 2\n2 3\n1 3\n\"\"\") == \"24\"\nassert solution(\"\"\"\n3 3\n1\n1 2\n2 3\n1 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '800'"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"0\"\nassert solution_1() == \"0\""
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '80000'\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '80000'\nassert solution('''\n5 8\n250 50\n30 60\n50 60\n25 50\n30 60\n1 4\n2 4\n2 5\n3 4\n3 5\n4 4\n4 5\n''') == '12000'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '0'\nassert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '0'\nassert solution('4 4') == '24'\nassert solution('6 8') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 4\") == \"0\"\nassert solution(\"6 8\") == \"800\"\nassert solution(\"7 9\") == \"0\""
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n4 4\n24 10\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '24'\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 2 4\\n') == '1 4'\nassert solution('5\\n1 2 3 4 5\\n') == '1 2 3 4 5'\nassert solution('5\\n1 2 3 4 5\\n') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 3 2 4') == '1 4'\nassert solution('5\\n1 2 3 4 5') == '1 2 3 4 5'\nassert solution('4\\n1 2 3 4') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 4\""
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1 4'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 3 2 4\n''') == '1 4'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''\n4\n2 1 4 3\n''') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('4') == '1 2 3 4'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 4 3\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n3 2 1 4 5') == '1 2 3 4 5'\nprint(solution(input()))"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"-1\""
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 6') == '5'\nassert solution('3 3') == '1'\n\n-----Hints-----\nYou may need to consider the two cases of the stdin being a multiple of 2 or not:\n\n    If the input is of the form:\n\n       4 6\n    ...\n    .#####\n    .#####\n    .#####\n    Then we will have to consider only the first case, because the previous example would have resulted in the 2nd case.\n\n\"\"\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(...) == '8'"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 3') == '1'\nassert solution('2 6') == '5'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n.######.\\n.######.\\n.######.\\n\") == \"1\"\nassert solution(\"2 6\\n.#####\\n#####.\\nSample Output 3:\") == \"5\""
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n\") == \"1\"\nassert solution(\"3 3\\n\") == \"1\"\nassert solution(\"2 6\\n\") == \"5\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 8\n.######.\n.######.\n.######.\n.######.\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 3\n.#####\n#####.\nSample Output 3:\n1\n\"\"\") == \"1\""
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 8') == \"8\"\nassert solution('3 3') == \"1\"\nassert solution('2 6') == \"5\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"1 0\") == \"0\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == '6'\nassert solution('3 3 3') == '4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution('2 2 2') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1') == '6'\nassert solution('3 3 3\\n3 1 3 3 1\\n1 3 3 3 1\\n3 1 3 3 1') == '13'\nassert solution('3 2 2\\n1 2\\n2 1') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 5\\n2 1 1 1 2\\n5 3 4 4 3\\n4 3 3 3 2\\n3 1 3 3 1\\n') == '6'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3\") == \"13\", \"Should be 13\"\nassert solution(\"3 2 2\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\", \"Should be 4 2 6 1 9 7 5 5 7 1 2 3 3\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\nprint('all tests passed')\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\n\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\n\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 3') == '4 2 6 1 9 7 5 5 7 1 2 3 3'\nassert solution('1 3 2') == '1 3 2'\nassert solution('5 5 5') == '6'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == \"6\"\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == \"13\"\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == \"-1\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n\"\"\"\n) == \"6\"\nassert solution(\n    \"\"\"\n3 3 3\n3 1 3\n1 3 2\n3 2 3\n\"\"\"\n) == \"13\"\nassert solution(\n    \"\"\"\n3 2 2\n1 2\n2 1\n1 2\n\"\"\"\n) == \"-1\""
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 5'\nassert solution('3') == '1 5'\nassert solution('4') == '2 1'\nassert solution('1') == '1 1'\nassert solution('2') == '1 1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"1 5\"\nassert solution(\"4\") == \"1 2\"\nassert solution(\"5\") == \"1 5\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1 1'\nassert solution('5') == '5 1'\nassert solution('10') == '9 1'\nassert solution('12') == '11 1'\nassert solution('13') == '10 1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1 1'\nassert solution('2') == '1 1'\nassert solution('3') == '1 1'\nassert solution('4') == '1 1'\nassert solution('5') == '1 1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 2'\nassert solution('4') == '1'\nassert solution('3') == '1 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3''') == '1 1'\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4''') == '1 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n4\n3\n2\n1\n0\n1\n2\n3\n4\n''') == '1 5'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3') == '1 1'\nassert solution('5\\n4\\n3\\n2\\n1') == '1 5'\nassert solution('5\\n1\\n5\\n3\\n6\\n1\\n2\\n3') == '1 5'\nassert solution('4\\n2\\n5\\n3\\n6\\n1\\n2\\n3') == '3 2'\nassert solution('3\\n2\\n5\\n3\\n6\\n1\\n2\\n3') == '3 2'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"5\"\nassert solution(\"10\") == \"10\""
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3 0\n3 1\n3 2\n3 3\n3 4''') == '1'\n\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4''') == '5'\n\nassert solution('''6\n3 0\n1 1\n2 1\n1 3\n0 4\n5 1\nSample Output 3:\n5''') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"5\"\nassert solution(\"6\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '5'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3 0\n3 1\n3 2\n3 3\n3 4''') == '1'\nassert solution('''5\n4 0\n3 1\n2 2\n1 3\n0 4''') == '5'\nassert solution('''6\n3 0\n1 1\n2 1\n1 3\n0 4\n5 1''') == '5'\nassert solution('''7\n2 0\n1 1\n0 2\n0 3\n0 4\n1 3\nSample Output 4:\n6''') == '6'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"5\""
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '5'\nassert solution('4') == '3'"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution(stdin='''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == \"1\"\nassert solution(stdin='''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == \"5\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\nprint(solution())"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '4'\nassert solution('8') == '0'\nassert solution('9') == '5'"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"8\\n1 2 2\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\"\nassert solution(\n    \"8\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n\"\nassert solution(\n    \"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n\") == \"5\\n1\\n2\\n3\\n6\\n7\\n\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''\n8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\nassert solution('''\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '4'\nassert solution('8') == '0'\nassert solution('9') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 3 1\n2 3 1\n''') == '4'\nassert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n7 9 1\nSample Output 1:\n4\n3\n4\n5\n6\n\nSample Output 2:\n0\n\nSample Output 3:\n5\n1\n2\n3\n6\n7\n''') == '5'"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution() == \"0\"\nassert solution() == \"5\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '4'\nassert solution('8') == '0'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 1\n2 3 1\n3 4 3\n4 5 3\n5 6 2\n6 7 1\n6 8 1\n''') == '4'\nassert solution('''\n5\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''\n5\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\nSample Output 2:\n0\n\nSample Input 3:\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\nSample Output 3:\n5\n1\n2\n3\n6\n7\n8\n''') == '5'\nassert solution('''\n5\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\nSample Output 2:\n0\n\nSample Input 3:\n8\n1 2 2\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '0'\nassert solution('''\n8\n1 2 2\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '0'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\n\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '5'\nassert solution('2 1') == '6'\nassert solution('1 2') == '5'\nassert solution('1 3') == '7'\nassert solution('3 2') == '5'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '7'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'\nassert solution('1 2') == '6'\nassert solution('1 2') == '5'\n\"\"\""
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '5'\nassert solution('2 1') == '6'\nassert solution('1 2') == '10'\nassert solution('2 1') == '30'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2\nV1 V2 V1 V1 V2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1 2\nR10 V1 V2 V1 E\n\"\"\") == \"30\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '6'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"5\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '5'\nassert solution('2 1') == '6'\nassert solution('1 2') == '5'\nassert solution('2 1') == '6'\n\ninput_string = \"\"\nwith open('D:\\\\Github\\\\Algo-Practice\\\\Programming\\\\day16\\\\input.txt', 'r') as f:\n    input_string = f.read().splitlines()\n\nassert solution(input_string[0]) == input_string[1]\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"30\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 24\n''') == '38'\nassert solution('''\n10 11\n''') == 'impossible'\nassert solution('''\n9 216\n''') == '546'''\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"2 1\") == \"impossible\""
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 24\") == \"38\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"9 216\") == \"546\""
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"54321\"\nassert solution(\"3 12\") == \"impossible\"\nassert solution(\"4 5\") == \"54321\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 24\") == \"38\", \"Sample Test 1\"\nassert solution(\"10 11\") == \"impossible\", \"Sample Test 2\"\nassert solution(\"9 216\") == \"546\", \"Sample Test 3\""
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 15 0.33333 30') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\n\nstdin = \"\"\"\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n\"\"\"\nprint(solution(stdin))\n\nstdin = \"\"\"\n3 4 1 0\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n\"\"\"\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2 10 3 2\\n'\n    '1 4 0.25 8\\n'\n    '2 4 0.66667 15\\n'\n    '1 2'\n    ) == '4.75'"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('1 3 0.25 8') == '9.1'\nassert solution('0 2 0.25 8') == '6.9'\nassert solution('1 2') == '2.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n\"\"\") == \"466.662\"\nassert solution(\"\"\"\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n\"\"\") == \"10.00005\"\nassert solution(\"\"\"\n3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n\"\"\") == \"2.0\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 20 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('3 4 1 0') == '2.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 20 2 1\\n5 15 0.33333 30\\n22 60 0.66666 70\\n0 10\\n') == '466.662'\nassert solution('3 4 2 1\\n1 3 0.25 8\\n2 4 0.66667 15\\n1 2\\n') == '10.00005'\nassert solution('3 4 1 0\\n0 2 0.25 8\\nSample Output 3:2.0') == '2.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 20 2 1\") == \"466.662\"\nassert solution(\"3 4 2 1\") == \"10.00005\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 2 1') == '10.00005'\nassert solution('20 60 2 1') == '466.662'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('5 4 2 1') == '7.0'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\"\"\") == \"466.662\"\nassert solution(\"\"\"3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\"\"\") == \"10.00005\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1.500000000000000\"\nassert solution(\"2\") == \"0.000000000000000\"\nassert solution(\"4\") == \"10.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\nprint('All test cases passed')\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1.500000000000000\"\nassert solution(\"2\") == \"0.000000000000000\"\nassert solution(\"4\") == \"10.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1.500000000000000'\nassert solution('2') == '0.000000000000000'\nassert solution('4') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\nblue pink 1.0\nred pink 1.5\nblue red 1.0''') == '1.500000000000000'\nassert solution('''2\nblue red 1.0\nred pink 1.5''') == '0.000000000000000'\nassert solution('''4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1.500000000000000'\nassert solution('2') == '0.000000000000000'\nassert solution('4') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1.5'\nassert solution('2') == '0.0'\nassert solution('4') == '10.0'\n\"\"\"\n\nfrom decimal import Decimal"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nblue pink 1.0\\nred pink 1.5\\nblue red 1.0') == '1.500000000000000'\nassert solution('2\\nblue red 1.0\\nred pink 1.5\\n') == '0.000000000000000'\nassert solution('4\\norange pink 1.9\\nyellow orange 1.9\\ngreen yellow 1.9\\nblue green 1.9\\n') == '10.000000000000000'"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0.000000000000000'\nassert solution('3') == '1.500000000000000'\nassert solution('4') == '10.000000000000000'\nassert solution('5') == '15.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '0.9999999999999997'\nassert solution('6') == '1.0'\nassert solution('7') == '0.000000000000000'\n\n'''\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1 1 1 0\") == \"180\"\nassert solution(\"2 3 1 5 3 2\") == \"22\"\nassert solution(\"2 1 2\") == \"too many\"\nassert solution(\"3 3 4 5\") == \"too many\"\nassert solution(\"1 6\") == \"too many\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1 1 1 0') == '180'\nassert solution('3 2 2 1 1') == '22'\nassert solution('3 1 2') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == 'too many'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '180'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\nSample Output 4:\ntoo many''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1 1 1 0') == '180'\nassert solution('3 2 2 1 1') == '22'\nassert solution('3 1 2') == 'too many'\nassert solution('5 5 5') == 'too many'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"180\"\nassert solution(sample_input_2) == \"22\"\nassert solution(sample_input_3) == \"0\"\nprint('All test cases passed.')"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\nSample Input 4:\n3 3 3 1 1\n2 3 1 2\n1 3\n1 3\n1 3\nSample Output 4:\n0\n''') == 'too many'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 5:\n180\n''') == 'too many'\n\ns = stdin.splitlines()\nr = int(s[0])\ns = int(s[1])\nm = int(s[2])\nd = int(s[3])\nn = int(s[4])\n\nbrands = {int(i) for i in s[5].split()}\nstarter = {i for i in s[6].split()}\nmain = {i for i in s[7].split()}\ndesserts = {i for i in s[8].split()}\n\npossible = set()\nfor i in range(1, len(s)):\n    possible.update(set(s[i].split()))\n\npossible.difference_update(brands)\npossible.difference_update(starter)\npossible.difference_update(main)\npossible.difference_update(desserts)\n\nprint(len(possible))\n\nimport itertools"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"too many\""
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\nSample Output 3:\n0\n''') == '0'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"20 20\"\nassert solution(\"6 8 5\\n........\\n...#....\\n########\\n#..#...#\\n#..#####\\n#.......\\nup 3\\nright 7\\ndown 2\\nleft 4\\nup 3\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\\nright 2\") == \"-1 -1\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\\n...\\n.#.\\n...\\nup 2\") == \"17 17\"\nassert solution(\"3 3 2\\n...\\n...\\n#.#\\n#.#\\nup 2\") == \"17 17\"\nassert solution(\"3 3 2\\n#.\\n#.\\nup 2\") == \"1 1\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2') == '17 17'\nassert solution('6 8 5') == '20 20'\nassert solution('6 8 5') == '17 17'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"6 8 5\\n\"\n    \"........\\n\"\n    \"...#....\\n\"\n    \"########\\n\"\n    \"#..#...#\\n\"\n    \"#..#####\\n\"\n    \"#.......\\n\"\n    \"up 3\\n\"\n    \"right 7\\n\"\n    \"down 2\\n\"\n    \"left 4\\n\"\n    \"up 3\\n\"\n    ) == \"20 20\"\nassert solution(\n    \"3 3 2\\n\"\n    \"...\\n\"\n    \".#\\n\"\n    \"...\\n\"\n    \"up 2\\n\"\n    \"right 2\\n\"\n    ) == \"17 17\"\nassert solution(\n    \"2 2 1\\n\"\n    \"##\\n\"\n    \"#..\\n\"\n    \"##\\n\"\n    \"#..\\n\"\n    \"#..\\n\"\n    ) == \"0 0\"\nassert solution(\n    \"5 3 2\\n\"\n    \"#.\\n\"\n    \"#.\\n\"\n    \"#.\\n\"\n    \"#.\\n\"\n    \"#.\\n\"\n    ) == \"0 0\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 2') == '17 17'\nassert solution('6 8 5') == '20 20'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('371\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == 'impossible'\nassert solution('310\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300'\nassert solution('90\\n2\\n2 20 35\\n2 88 200\\n') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '300'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('371') == '300'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''3\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''1\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2\n3\n3\n3\n3\n5\n3\n6\n8\n1\n5\n7\n9\n3\n''') == 'impossible'\nassert solution('''\n4\n2\n1 3\n4 5\n''') == '1'\nassert solution('''\n5\n2\n1 2\n2 1\n3 1\n3 2\n''') == 'impossible'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n') == '300'\nassert solution('10\\n3\\n2 20 35\\n2 88 200\\n') == '88'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == 'impossible'\nassert solution('3\\n2\\n2 20 35\\n2 88 200') == '88'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3\\n2 40 65\\n2 100 150\\n2 300 320') == 'impossible'\n\nassert solution('3\\n3\\n2 40 65\\n2 100 150\\n2 300 320\\n3 2 30\\n3 20 35\\n3 88 200') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"0\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('371') == 'impossible'\nassert solution('310') == '300'\nassert solution('90') == '88'\nprint('Congratulations, have fun!')"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"##.\\n##.\\n###.\\n..##\\n##.#\\n##.#\\n##.#\\n##.##\\n##.##\\n\") == \"can fold\"\nassert solution(\"##.\\n##.\\n###.\\n..##\\n##.#\\n##.#\\n##.#\\n##.##\\n##.##\\n\") == \"cannot fold\"\nassert solution(\"##.#\\n##.##\\n##.##\\n##.##\\n##.#\\n##.##\\n##.##\\n##.##\\n##.##\\n\") == \"can fold\"\nassert solution(\"##.#\\n##.##\\n##.##\\n##.##\\n##.##\\n##.#\\n##.##\\n##.##\\n##.##\\n\") == \"cannot fold\"\nassert solution(\"##.#\\n##.##\\n##.##\\n##.##\\n##.#\\n##.##\\n##.##\\n##.##\\n##.#\\n\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n.....\n......\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('......') == 'cannot fold'\nassert solution('#.....') == 'can fold'\nassert solution('..##..') == 'can fold'\nassert solution('...#..') == 'can fold'\nassert solution('......') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n...##..\n.##...#\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('......\\n#.....\\n#####..\\n#.....\\n......\\n......\\n') == 'cannot fold', \"First\"\nassert solution('......\\n#.....\\n#####..\\n#.....\\n......\\n......\\n') == 'can fold', \"Second\"\n\nassert solution('#.\\n.#.\\n.#.\\n.#.\\n#.\\n#.\\n') == 'cannot fold', \"Third\"\nassert solution('#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n#.#\\n') == 'can fold', \"Fourth\"\nassert solution('..##\\n###.#\\n#####\\n##.##\\n##....\\n#.#..#\\n') == 'can fold', \"Fifth\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"...#.#.\\n.#.##.#\\n###.#.#\\n###.##.#\\n..###.#.\\n#.#.#..#\\n#.###.#.\\n#.#...#.\\n.#.##..#\\n..##.#..\\n#.#....#\") == \"can fold\"\nassert solution(\n    \"#...##.\\n#..#.#.\\n#.##..#\\n##...##\\n##.#.#.\\n....##.\") == \"cannot fold\"\nassert solution(\n    \".#.\\n.##\\n###\") == \"can fold\"\nassert solution(\"#.##\\n###.#\") == \"can fold\"\nassert solution(\"##.##\\n.###.#\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"#.#.#.#\") == \"cannot fold\"\nassert solution(\"###...##\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"....#..#.##....##.##....##..#.##....##...####..\") == \"can fold\"\nassert solution(\"...##..#..#..#..##...##..#..##....#..#..##....#..#..##...\") == \"cannot fold\"\nassert solution(\"....#..#..#.##....##..#.##....##..#.##....##..#.##....##.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##.##....##..#.##....##..#.##....##.##....##..#.##....##.##....##\") == \"can fold\"\nassert solution(\".....##....#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...#..#...\") == \"cannot fold\"\nassert solution(\"....#..#..#.###....#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##..#.##....##.##....##..#.##....##..#.##....##..#.##....##.##....##..#.##....##.##....##..#.##....##..#.##....##.##....##..#.##....##..#.##....##..#.##....##..#.##....##.##....##..#.##....##.##....##..#.##....##.##....##..#.##....##..#.##....##..#.##....##..#.##....##.##....##..#.##....##.##....##..#.##....##.##....##..#.##....##.##....##\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\".#...#...#..#.##.##...##..##.#..#.##...###..#.#.#.#.##.##.#.#.##.#...#...#.#.#.##.##.#...\") == \"can fold\"\nassert solution(\".#..#...#..#.##...##..##.##.#..#.##...###..#.##.#.#.##.##.#.#.##.##.#.#.#.##.#...#...#.#.##.##.#...\") == \"cannot fold\"\nassert solution(\".#.##.#..#..#.##.##.##.#.#.#.##.##.#.#.##.##.#.##.##.##.##.#.##.##.#.##.##.##.#.#...#...#.##.##.#...\") == \"cannot fold\"\nassert solution(\".##...##.#.#.#..##.#.#.##.#.#.#.#.##.#.#.##.##.#.#.#.##.##.#.##.#.##.#.##.#.##.#.#.#...#.#.#.#.#.##...\") == \"cannot fold\"\nassert solution(\".#..##..#.#.#.##.#.#..##.#.#.#.#.##.#.#.#.##.#.#.##.#.#.##.#.#.#.##.#.#.##.#.#.##.#.#.#.#.#.#.#..##..##.#...\") == \"cannot fold\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abcefgabc') == 'abc', 'Should return abc'\nassert solution('abcbabcba') == 'abcba', 'Should return abcba'\nassert solution('aaaa') == 'aaa', 'Should return aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abcefgabc') == 'abc', 'Should return \"abc\"'\nassert solution('abcbabcba') == 'abcba', 'Should return \"abcba\"'\nassert solution('aaaa') == 'aaa', 'Should return \"aaa\"'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"abcefgabc\") == \"abc\"\nassert solution(\n    \"abcbabcba\") == \"abcba\"\nassert solution(\n    \"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == 'abcba'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n\n'''"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaaa') == 'aaa'\nassert solution('abcbabcba') == 'abcba'\nassert solution('abcefgabc') == 'abc'"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'a'\nassert solution('abcd') == 'b'\nassert solution('abcdabc') == 'abc'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4') == '4'\nassert solution('2 5') == '6'\nassert solution('2 10005') == '6'\nassert solution('3 1') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4') == '4'\nassert solution('2 5') == '1'\nassert solution('3 10005') == '6'"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\nprint(solution())"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 4\n2 5\n''') == '4'\nassert solution('''\n3\n1 4\n2 10\n0 15\n''') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"2 5\") == \"6\"\nassert solution(\"0 15\") == \"4\"\nassert solution(\"1 4 2 10\") == \"6\""
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 4\n2 5\n0 15\n''') == '4'\nassert solution('''\n4\n2 4\n1 5\n0 15\n''') == '6'\nassert solution('''\n3\n1 4\n2 5\n0 15\n''') == '4'\nassert solution('''\n1\n1 10\n''') == '0'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('2') == '4'\nassert solution('2') == '4'\nassert solution('2') == '4'\nassert solution('2') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 4\\n2 5\\n0 15') == '4'\nassert solution('2\\n1 4\\n2 5\\n0 15') == '6'\nassert solution('3\\n1 4\\n2 5\\n0 15') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1 4\\n2 5') == '4'\nassert solution('2\\n1 4\\n2 10005') == '6'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3 7 7 7\") == \"3\"\nassert solution(\"5 1 2 3 2 1\") == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '2'\nassert solution('5') == '0'"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''\n3\n7 7 7\n''') == '3'\nassert solution('''\n5\n1 2 3 2 1\n''') == '0'\n'''\n\nn = int(input())\narr = list(map(int, input().split()))"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2 3\n1 2\n''') == \"2\"\nassert solution('''\n2\n2 2\n1 2\n''') == \"1\"\nassert solution('''\n5\n1 2 3 4 5\n''') == \"0\""
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2'\nassert solution('2\\n2\\n2\\n2\\n2') == '1'\nassert solution('3\\n5\\n7\\n11\\n13') == '0'\nassert solution('5\\n3\\n5\\n1\\n9') == '2'"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 2 1\n''') == '0'\nassert solution('''7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''3\n7 7 7\n''') == '3'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n7 7 7\n''') == '2'\nassert solution('''\n4\n1 2 3 4\n''') == '0'\nassert solution('''\n6\n2 2 2 2 1 1\n''') == '3'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '3'\nassert solution('1') == '4'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '3'\nprint('All test cases passed.')\n\"\"\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5 4') == '3'\nassert solution('1 2 1') == '1'\nassert solution('2 2 10') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 4') == '3'\nassert solution('1 2 1') == '1'\nassert solution('2 2 10') == '1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution('''\n2 5 4\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(input_string) == \"2\""
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5 4\") == \"3\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 2 10\") == \"1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5 4') == \"3\"\nassert solution('1 2 1') == \"1\"\nassert solution('2 2 10') == \"1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 4') == '3'\nassert solution('1 2 1') == '1'\nassert solution('2 2 10') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 4\") == \"3\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 2 10\") == \"1\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G') == '1'\nassert solution('3 7\\n.......\\n.G.##S\\n.......\\nLDLDLLDR') == '1'\nassert solution('3 7\\n.#.....\\n.G.##S\\n.......\\nLDLDLLDR') == '2'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 1\nassert solution('2') == 1\nassert solution('3') == 1\nassert solution('4') == 1\nassert solution('5') == 1\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n.S..\n..G\nDRRDD''') == '1'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 7\n.......\n.G.##S.\n.......\nLDLDLLDR\n''') == '1'\nassert solution('''\n3 3\nS..\n.#.\n..G\nDRRDD\n''') == '1'\nassert solution('''\n3 7\n.......\n.G.##S.\n.......\nLDLDLLDR\n''') == '2'\nassert solution('''\n1 2\n''') == '0'\nassert solution('''\n3 4\n...#.\n.#...\n.#.#.\n''') == '1'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\nS..\n.#.\n..G''') == '1'\n\nassert solution('''3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR''') == '1'\n\nassert solution('''3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR''') == '2'\n\nassert solution('''3 7\n.......\n.G.##S.\n.......\nLDLDLLDR''') == '2'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n.S..\\n..G\\n') == \"1\"\nassert solution('3 7\\n.......\\n.G.##S.\\n.......\\n') == \"1\"\nassert solution('3 7\\n.S..\\n..G\\n') == \"2\"\n\"\"\""
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"#.....\\n\"\n    \".G.##S.\\n\"\n    \".......\\n\"\n    \"DRRDD\"\n) == \"1\"\nprint(solution(\n    \"#.....\\n\"\n    \".G.##S.\\n\"\n    \".......\\n\"\n    \"LDLDLLDR\\n\"\n    \"RRRDDL\"\n))\n\n\"\"\"\n\nimport itertools\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"DDDD\") == \"1\"\nassert solution(\"DRRDD\") == \"1\"\nassert solution(\"RRRDDD\") == \"2\"\nassert solution(\"LDLDLLDR\") == \"2\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 7\n.G..#S.\n.#...G#\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == \"1000200 799\"\nassert solution('''\n2\n100 0 101\n0 200 199\n''') == \"uncertain\"\nassert solution('''\n1\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == \"impossible\"\n'''"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n\"\"\") == \"1000200 799\"\nassert solution(\"\"\"\n2\n100 0 100\n0 200 199\n\"\"\") == \"uncertain\"\nassert solution(\"\"\"\n1\n999999 0 1000\n999900 950 451\n987654 123 13222\n\"\"\") == \"impossible\""
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\nassert solution('2\\n100 0 101\\n0 200 199') == 'impossible'\n\n\"\"\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'impossible'\nassert solution('1') == '999100 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n0\\n0') == '0\\n0\\n'\nassert solution('4\\n-999 -1 101\\n-99 -50 950\\n0 -100 99\\n-15 0 13\\n0 -1 100\\n') == '0\\n0\\n'\nassert solution('4\\n0 -1 101\\n-99 -50 950\\n0 -100 99\\n-15 0 13\\n0 -1 100\\n') == '0\\n0\\n'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1000200 799'\nassert solution('2\\n') == 'uncertain'\nassert solution('3\\n') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'impossible'\nassert solution('2') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 101\n0 200 199\n''') == 'uncertain'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1000200 799'\nassert solution() == 'impossible'"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"1 2\"\n\"\"\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n3 5\n1 5\n3 4\n4 5\n1 2\n2 3\n3 4\n4 5\n''') == '1 2'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n4 7\\n9 8') == '2'\nassert solution('2\\n4 7\\n14 17') == '1'\nassert solution('2\\n4 7\\n19 18') == '2'\nassert solution('2\\n4 8\\n9 7') =='syntax error'\nassert solution('2\\n4 8\\n14 17') =='syntax error'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18') == '2 1'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18') == '1 2'\nassert solution('2\\n4 7\\n14 18\\n9 8\\n19 17') == '1 2'"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '1'\nassert solution('3') =='syntax error'\nassert solution('-1') =='syntax error'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() =='syntax error'\nassert solution(input_data='''\n2\n4 7\n9 8\n14 17\n19 18\n''') =='syntax error'\n\nassert solution(input_data='''\n3\n4 7\n9 8\n14 17\n19 18\n''') == '1 2 1 1 2'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2 1'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '1 1'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '1 1'\nassert solution('''\n1\n2\n''') == '1 1'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '1 1'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\\n1\\n\"\nprint(solution())\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n4 7\n9 8\n14 17\n19 18\nSample Output 1:\n2\n1\n\nSample Input 2:\n2\n4 7\n14 17\n9 8\n19 18\nSample Output 2:\n1\n2\n\nSample Input 3:\n2\n4 8\n9 7\n14 18\n19 17\nSample Output 3:\nsyntax error''') == '1 2'\nassert solution('''2\n4 7\n9 8\n14 17\n19 18\nSample Output 1:\n2\n1\n\nSample Input 2:\n2\n4 7\n9 7\n14 17\n19 18\nSample Output 2:\n1\n2\n\nSample Input 3:\n2\n4 8\n9 7\n14 17\n19 18\nSample Output 3:\nsyntax error''') =='syntax error'\nassert solution('''2\n4 7\n14 17\n9 8\n19 18\nSample Output 1:\n2\n1\n\nSample Input 2:\n2\n4 7\n9 7\n14 17\n19 18\nSample Output 2:\n1\n2\n\nSample Input 3:\n2\n4 8\n14 17\n9 7\n19 18\nSample Output 3:\nsyntax error''') =='syntax error'\nassert solution('''2\n4 7\n14 17\n9 8\n19 18\nSample Output 1:\n2\n1\n\nSample Input 2:\n2\n4 7\n14 17\n9 8\n19 18\nSample Output 2:\n1\n2\n\nSample Input 3:\n2\n4 8\n9 7\n14 17\n19 18\nSample Output 3:\nsyntax error''') =='syntax error'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4 7\") == \"1\"\nassert solution(\"4 7\") == \"1\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n_ 10 _ 9 9 9 9') == '1'\nassert solution('80\\n60 _ _ _ _ 12 50 55') == '1'\nassert solution('100\\n_ _ _ _ _ _ _ _ _') == '1'"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n''') == '1'\nassert solution('''\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n''') == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"8640\""
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"1\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"_ 60 72 102 _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\\n_ _ _"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ _ 12 60 _ 90 _\\n_ _ _ _ _ _ _ 85 63 153\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"8640\"\nassert solution(\"80 _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _\\n_ _ _ _ _ _ _ _ _ _\\n\") == \"many\"\n\nimport numpy as np\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\nSample Output 1:\n1\n\nSample Input 2:\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\nSample Output 2:\n1\n\nSample Input 3:\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\nSample Output 3:\n8640\n\n''') == '1'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\") == \"1\"\nassert solution(\"_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ 170\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\") == \"1\"\nassert solution(\"_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\") == \"8640\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''3\n1 2\n1 3\n''') == '2'\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '8'\nassert solution('10') == '24'"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1\\n1 5\\n3 1\\n4 3') == '8'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3') == '24'\nassert solution('10\\n1 2\\n1 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10') == '48'\nassert solution('1000\\n1 2\\n2 3\\n1 4\\n3 5\\n4 6\\n2 7\\n7 8\\n5 9\\n5 10') == '10008'\nassert solution('100000\\n1 2\\n1 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10') == '1000008'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution(\"5\\n1 2\\n1 3\\n3 1\\n4 3\") == '8'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2\\n1 3') == '2'\nassert solution('5\\n2 1\\n1 5\\n3 1\\n4 3') == '8'\nassert solution('10\\n1 2\\n2 3\\n2 4\\n1 5\\n3 6\\n2 7\\n7 8\\n5 9\\n5 10') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n1 2\n1 3\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n5\n2 1\n1 5\n3 1\n4 3\n\"\"\") == \"8\"\n\nassert solution(\n\"\"\"\n10\n2 1\n1 5\n3 1\n4 3\n\"\"\") == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '8'\nassert solution('10') == '24'"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '24'\nprint(solution())\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '8'\nassert solution('10') == '24'\nassert solution('15') == '46'\nassert solution('20') == '72'\nassert solution('25') == '137'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 2\n1 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n2 1\n1 5\n3 1\n4 3\n\"\"\") == \"8\"\nassert solution(\"\"\"\n10\n2 1\n1 5\n3 1\n4 3\n5 6\n7 8\n5 9\n5 10\n\"\"\") == \"24\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('boot') == 'boot', \"First\"\nassert solution('treetreetreetree') == 'treetreetreetree', \"Second\"\nassert solution('apples') == '0', \"Third\"\nassert solution('oranges') == '0', \"Fourth\"\nassert solution('cat') == '0', \"Fifth\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('short') == 'aa'\nassert solution('long') == 'aaa'\nassert solution('empty') == 'empty'\nassert solution('short') == 'a'\nassert solution('long') == 'a'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"secretmessage\"\n) == \"essa\", \"Simple\"\nassert solution(\n    \"boot\"\n) == \"3\", \"Full\"\nassert solution(\n    \"treetreetreetree\"\n) == \"0\", \"MerryChristmas!\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"boot\") == \"essa\"\n\nassert solution(\"treetreetreetree\") == \"3\"\n\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('oranges') == '0'\nassert solution('treetreetreetree') == '3'"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == None\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"password\") == \"x\"\nassert solution(\"cipher\") == \"d\"\nassert solution(\"football\") == \"0\"\nassert solution(\"helloworld\") == \"5\"\nassert solution(\"asdfghjkl\") == \"12\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"boot\") == \"3\"\nassert solution(\"treetreetreetree\") == \"0\"\nassert solution(\"oranges\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"ab\") == \"\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''>^<^''') == '2'\nassert solution('''<^<^''') == '4'\nassert solution('''<>''') == '3'\nassert solution('''>>''') == '1'\nassert solution('''<<<''') == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '1'\nassert solution('4') == '4'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('6') == '2'\nassert solution('3') == '1'\nassert solution('7') == '3'"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'\nassert solution('<<<') == '1'\nassert solution('R>>') == '1'\nassert solution('^v<<') == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n>^<^\n######\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''>^<^\n######\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'\n\nassert solution('5') == '11'"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('1') == '3'\nassert solution('3') == '4'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\nassert solution('''3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\nassert solution('''2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n''') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '2'\n) == '3'\nassert solution(\n    '3'\n) == '6'\nassert solution(\n    '4'\n) == '7'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"12\"\nassert solution(\"2\\n2 3 0 2 9 2 3 0\\n1 6 1 4 6 3 -1 -2\") == \"3\"\nassert solution(\"3\\n4 0 0 10 10 1 15 0\\n3 5 50 55 8 1 -16 2\\n3 10 7 10 4 1 8 -1\") == \"6\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"11\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'\n\"\"\"\nimport sys\n\nn = int(input())\nnets = []\nfor i in range(n):\n    m, d, l, r, h, x, y, change = map(int, input().split())\n    nets.append([m, d, l, r, h, x, y, change])\n\nnets.sort()\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '3'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('5') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('0.0 1.0 4.0 1.0') == '3.7320508076'"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460', 'First Example'\nassert solution('60.0 0.0 50.0 170.0') == '163.5274740179', 'Second Example'\nassert solution('60.0 0.0 50.0 170.0') == '3.7320508076', 'Third Example'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nprint('all tests passed')\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\"\"\") == \"168.7916512460\"\nassert solution(\"\"\"0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\n\"\"\") == \"3.7320508076\"\nassert solution(\"\"\"60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0\n\"\"\") == \"163.5274740179\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"40.0 0.0 0.0 0.0\") == \"163.5274740179\"\nassert solution(\"1.0 4.0 1.0 0.0\") == \"3.7320508076\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\\n3\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\") == \"163.5274740179\"\nassert solution(\"60.0 0.0 50.0 170.0\\n3\") == \"168.7916512460\"\nassert solution(\"0.0 1.0 4.0 1.0\\n1\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == \"168.7916512460\"\nassert solution('40.0 0.0 0.0 0.0') == \"163.5274740179\"\nassert solution('0.0 1.0 4.0 1.0') == \"3.7320508076\"\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n') == \"168.7916512460\"\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0\\n') == \"163.5274740179\"\n\"\"\"\n\nfrom math import inf"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\""
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 5') =='madam'\nassert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 5 3\nrarity''') == 'rarity'\nassert solution('''9 8 1\ncanterlot''') == 'canterlot'\nassert solution('''5 3 5\nmadam''') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5 3\\n\") == \"rarity\"\nassert solution(\"9 8 1\\n\") == \"canterlot\"\nassert solution(\"5 3 5\\n\") == \"madam\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 5 3\nrarity\n\nSample Input 4:\n9 8 1\nSample Output 4:\ncanterlot''') == 'rarity'\nassert solution('''9 8 1\ncanterlot''') == 'canterlot'\n\n'''"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"canterlot\"\nassert solution(input()) == \"canterlot\"\nassert solution(input()) == \"canterlot\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5 3\nrarity\n''') == 'rarity'\n\nassert solution('''\n9 8 1\ncanterlot\n''') == 'canterlot'\n\nassert solution('''\n5 3 5\nmadam\n''') =='madam'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!.') == 'International\\ncontest-\\nmotive high\\nProgrammers have fun!'\n\n\"\"\""
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''Blue Ridge mountain road.\nLeaves, glowing in autumn sun,\nfall in Virginia.''') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\nBlue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('4 5\\nwho would know if we had too few syllables?\\n') == 'who would know if we had too few syllables?'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International\\ncontest- motivation high\\nProgrammers have fun!. \"\nassert solution(\"a bc   cd ef  gh ij\") == \"a\\nb\\nc\\nd\\ne\\nf\\ng\\h\\ij\"\nprint(solution(input()))\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!.\\n\") == \"International contest-\\nmotivation high\\nProgrammers have fun!\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution('Who would know if we had too few syllables?') == \"Who would know if we had too few syllables?\"\nassert solution('International contest- motivation high Programmers have fun!.') == \"International contest-\\nmotivation high Programmers have fun!\""
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nprint(solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.'))\nprint(solution('who would know if we had too few syllables?'))\nprint(solution('International contest- motivation high Programmers have fun!.\\n'))\nprint(solution('International contest- motivation high Programmers have fun!.\\n'))\nprint(solution('abcd\\n'))\nprint(solution('bc\\n'))\nprint(solution('bc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))\nprint(solution('abc\\n'))"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!.') == 'International contest- \\nmotivation high Programmers have fun!.'\nassert solution('Doves and relish. My campbell and the candies of the King are so hot!') == 'Doves and relish.\\nMy campbell and the candies of the King are so hot!'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Blue Ridge mountain road') == 'Blue Ridge mountain road.'\nassert solution('Leaves, glowing in autumn sun, fall in Virginia.') == 'Leaves, glowing in autumn sun, fall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'ThoreH'\nassert solution('2') == 'Thore is awesome'"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"ThoreHusfeldt\"\nassert solution(\"2\") == \"ThoreHusfeldt\"\nassert solution(\"3\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Thore is awesome'\nassert solution('2') == 'Thore sucks'\nassert solution('3') == 'Thore is awesome'\n\n\"\"\""
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\nThoreTiemann\nThoreHusfeldt\nThoreHusfeldter\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''1\nThoreTiemann\nThoreHusfeldt\nThoreHusfeldter\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''1\nThoreTiemann\nThoreHusfeldt\nThoreHusfeldter\nThoreHusfeldt\nThoreHusfeldter\nThoreHusfeldt''') == 'ThoreH'\nassert solution('''1\nThoreHusfeldt\nThoreHusfeldter\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreHusfeldt'\nassert solution('''2\nThoreHusfeldt\nThoreHusfeldter\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt\nThoreHusfeldt''') == 'ThoreHusfeldt'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Thore'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreH'\nassert solution('''\n2\nThoreHusfeldt\nJohanSannemo\n''') == 'Thore is awesome'\nassert solution('''\n2\nThoreHusfeldter\nThoreHusfeldt\n''') == 'Thore sucks'\n\n'''\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreHusfeldt'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo\\n') == 'ThoreHusfeldt'\nassert solution('2\\nThoreHusfeldt\\nThoreHusfeldter\\n') == 'ThoreHusfeldt'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreH'\n\nassert solution('''2\nThoreHusfeldt\nJohanSannemo\n''') == 'ThoreHusfeldt'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nThoreTiemann') == 'ThoreH'\nassert solution('1\\nThoreHusfeldt') == 'ThoreH'\nassert solution('2\\nThoreHusfeldt\\nThoreTiemann') == 'ThoreH'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"L*R\") == \"6\"\nassert solution(\"P*P\") == \"6\"\nassert solution(\"*L*R*\") == \"10\"\nassert solution(\"L*R*\") == \"13\"\nassert solution(\"**\") == \"33\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"P*P\") == \"6\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"**\") == \"33\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('P*P') == \"6\"\nassert solution('L*R') == \"25\"\nassert solution('**') == \"33\""
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('*') == '6'\nassert solution('*') == '33'\nassert solution('***') == '33'"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('L*R') == '6'\nassert solution('L*R*R') == '15'\nassert solution('**') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('L*R') == '6'\nassert solution('L*R*P') == '6'\nassert solution('**') == '33'\nassert solution('**') == '33'\nassert solution('**') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''L*R\nR*R\nP*R''') == '33'\nassert solution('''L*R\nR*R\nP*R''') == '6'\nassert solution('''L*R\nR*R\nP*R''') == '6'"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '33'"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\nherp is derp\nherp is derp\n''') == 'yes'\nassert solution('''\n3\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'wait what?'\nassert solution('''\n2\nufufa is ulfa\nufufa not ulfa\nufufa is ulfa\nufufa not ulfa\n''') == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes'\nassert solution('6\\noskar not lukas\\noskar is poptart\\lukas is smart\\n') == 'wait what?'\nassert solution('6\\nfoo is not foo\\n') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nherp is derp') == 'yes'\nassert solution('2\\nderp is herp') == 'wait what?'\nassert solution('3\\nherp is herp') == 'yes'\nassert solution('4\\nderp is derp') == 'wait what?'\nassert solution('5\\noskar is poptart') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"yes\"\nassert solution(\"1\") == \"wait what?\"\nassert solution(\"2\") == \"yes\"\nassert solution(\"3\") == \"wait what?\"\nassert solution(\"4\") == \"yes\""
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'yes'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nmoo not foo') == 'wait what?'\nassert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes'\nprint(solution(input()))\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nherp is derp\\nderp is herp\\nherp is herp') == 'yes', \"Wong solution\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == 'yes'\nassert solution('3') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == \"yes\"\nassert solution('''\noskar not lukas\noskar is poptart\nlukas is smart\n''') == \"wait what?\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 2'\nassert solution('2') == '1 4'\nassert solution('3') == 'impossible'\n\n'''"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\"\nassert solution() == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\nSample Output 1:\n1 4\nMM\nA\nAA\nACA\nACMAA\n\nSample Input 2:\n3\nACMA\nACM\nACA\nAMA\nSample Output 2:\n1 4\nACMA\nACM\nACA\nAMA\n\nSample Input 3:\n1\nAM\nSample Output 3:\nimpossible''') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 4'\nassert solution('3') == 'impossible'\nassert solution('2') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\nSample Input 4:\n1\nAM\nSample Output 4:\nimpossible\n\"\"\") == \"\"\"impossible\"\"\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"3\\n\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '4 1'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\n''') == '1 4'\nassert solution('''3\nACMA\nACM\nACA\nAMA\n''') == 'impossible'\nassert solution('''1\nAM\n''') == 'impossible'\nassert solution('''5\nACCA\nACM\nACM\nACAA\nAAA\n''') == '1 4'\nassert solution('''5\nACCA\nACM\nACM\nACAA\nAAA\n''') == 'impossible'"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n20 100 2\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 4\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n100 110 5\n100 111 5\n20 0"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124', 'Fail'\nprint('Success: 1')\n\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9', 'Fail'\nprint('Success: 2')\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 4 1\n1 0.5 5\n''') == '124.0'\nassert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124.0'\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.90827586'\nassert solution('''\n20 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.90827586'\nassert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124.0'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 4 1\n1 0.5 5\n''') == '3'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 5\n0.5 0.5 5\n''') == '3.1415926535897931'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 1\") == \"3\"\nassert solution(\"10 20 3\") == \"18.9029850746\"\nassert solution(\"2 4 1\") == \"3\"\nassert solution(\"20 2 5\") == \"17.51333333333\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124', \"1st example\"\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746', \"2nd example\""
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4 1\n1 0.5 5\n''') == '3'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 1\\n1 0.5 5\\n') == '3'\nassert solution('10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n') == '18.9029850746'\nassert solution('1.5\\n0.2\\n1\\n') == '1'\n\"\"\"\nimport re\nimport math"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '2 1 2'\nassert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\n\nimport unittest"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n\"\"\"\n\nn, k = map(int, stdin.readline().split())"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2 1 2'\n\n\"\"\"\nimport sys\nimport os\nfrom collections import defaultdict\n\nfrom typing import Dict, List\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '2 1 2'"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '1 2 1'\nassert solution('4 1') == '1 2 1'\nassert solution('3 2') == '1 2'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 3\"\n) == \"2 1 2\", \"A valid sequence of flower petals of length 3 is not a multiple of 3\"\nassert solution(\n    \"2 1\"\n) == \"1\", \"A valid sequence of flower petals of length 2 is not a multiple of 2\"\nassert solution(\n    \"5 22\"\n) == \"4 3 4 2\", \"A valid sequence of flower petals of length 5 is not a multiple of 3\""
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n2 1 2\n1''') == '2 1 2'\nassert solution('''5 22\n4 3 4 2\n1''') == '4 3 4 2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 4\n1 2\n1 3\n3 4\n2 4\nSample Input 4:\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 4:\n2\n\n''') == '2'\nassert solution('''4 4\n1 2\n1 3\n3 4\n2 4\nSample Input 5:\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 5:\n0\n''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '0'\nassert solution('7 5') == '1'\n\n'''\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 3\\n3 4\\n2 4\\n') == '2'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0'"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\") == \"2\"\nassert solution(\"7 6\") == \"2\"\nassert solution(\"7 5\") == \"0\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n') == '2'\nassert solution('7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n') == '2'\nassert solution('7 5\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4') == '2'\nassert solution('7 6') == '2'\nassert solution('7 5') == '0'\nassert solution('1 2') == '2'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''7 6\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 4:\n0\n''') == '0'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(t1) == \"28.26\"\nassert solution(t2) == \"7.0\"\nassert solution(t3) == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 0\") == \"20.00000000\"\nassert solution(\"-10 10\") == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('1.00 0.10') == '28.26445910'\nassert solution('-10 10') == '3.14159265'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 0\") == \"20.00000000\"\nassert solution(\"1.00 0.10\") == \"3.14159265\"\nassert solution(\"-10 10\") == \"3.14159265\""
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265'\nassert solution('''0 20\n1.00 0.10''') == '28.26445910'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''20 0\n1.00 0.10\n''') == '20.00000000'\nassert solution('''-10 10\n10.00 1.00\n''') == '3.14159265'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 0\") == \"20.00000000\"\nassert solution(\"-10 10\") == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 0\\n1.00 0.10') == \"20.00000000\"\nassert solution('-10 10\\n10.00 1.00') == \"3.14159265\"\nassert solution('0 20\\n1.00 0.10') == \"28.26445910\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''20 0\n1.00 0.10''') == \"20.00000000\"\nassert solution('''-10 10\n10.00 1.00''') == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 0\") == \"20.00000000\"\nassert solution(\"10.00 1.00\") == \"3.14159265\"\nassert solution(\"-10 10\") == \"3.14159265\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '170'\n\nprint('All tests passed')"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 100\n1 100\n4 70\n3 70\n2 80\n''') == '150'\n\nassert solution('''\n5\n2 100\n1 100\n4 70\n3 70\n2 80\n''') == '170'\n\nassert solution('''\n2\n2 100\n1 100\n''') == '100'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == '150'"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == \"170\"\nassert solution('4') == \"150\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == '150'"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 100\\n1 100\\n4 70') == '170'\nassert solution('4\\n2 100\\n1 100\\n4 70') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n100\n1 100''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80''') == '150'"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n100\n1 100\n4 70''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80''') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n2 100\n1 100\n4 70\n3 70\n2 80\n\"\"\") == \"170\"\nassert solution(\"\"\"\n5\n1 100\n2 100\n3 70\n4 70\n5 80\n\"\"\") == \"150\"\nprint(solution(input()))\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 100\\n1 100\\n4 70\") == \"170\"\nassert solution(\"3\\n2 120\\n3 50\\n2 80\") == \"150\"\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\") == \"2\""
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 6') == '5'"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 6') == '5'\nassert solution('10 10') == '9'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '2'\n\nassert solution('''1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '1'\n\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.5'\nassert solution('8') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.5', \"0.5\"\nassert solution('8') == '0.0446429', \"0.0446429\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0.0446429'\nassert solution('3\\n1\\n0\\n2 1 2\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1 0\\n1"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\nSample Input 3:\n4\n3\n1 0\n1 0\n2 0\n1 1\nSample Output 3:\n0.05\n\"\"\") == '0.050000'"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0.5'\nassert solution('8') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 2\n2 0 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"0.5\"\nassert solution(\"8\") == \"0.0446429\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"0.5\"\nassert solution(\"8\") == \"0.0446429\"\nassert solution(\"1\") == \"0.0\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n2\n1 0 2\n1 0\n1 0\n1 0\nSample Input 3:\n10\n10\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\n0 1 2 3 4 5 6 7 8 9 0 1\nSample Output 3:\n0.999999\n\"\"\") == \"0.999999\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0.5'\nassert solution('4') == '0.172095'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 3 2 1') == '3\\n1 6 1'"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1 2 3 3 2 1\n''') == '3\n1 6 1\n2 5 2\n3 4 3\n'''\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n3 1 2\\n2\\n2\\n3 3 2 1\\n1 2 3\\n1\\n2\\n3 3 2 1\\n1 2 3') == '2 3 1 3 6 1 1 3 2\\n2 3 3 3 6 2 5 1 3\\n1 2 3 2 3 4 3 3 6\\n1 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n1 6 1 1 6 2 5 2 3\\n3 1 6 1 6 2 5 2 3\\n3 6 1 6 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n1 6 1 1 6 2 5 2 3\\n2 3 3 3 3 6 2 5 1\\n2 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n2 6 1 1 6 2 5 2 3\\n2 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n1 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n2 3 3 3 3 6 2 5 1\\n2 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n2 6 1 1 6 2 5 2 3\\n2 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n1 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n2 3 3 3 3 6 2 5 1\\n2 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n2 6 1 1 6 2 5 2 3\\n2 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n1 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n2 3 3 3 3 6 2 5 1\\n2 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n2 6 1 1 6 2 5 2 3\\n2 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n1 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n2 3 3 3 3 6 2 5 1\\n2 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n2 6 1 1 6 2 5 2 3\\n2 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n1 6 1 1 6 2 5 2 3\\n1 2 3 2 3 4 3 3 6\\n2 3 3 3 3 6 2 5 1\\n2 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5 1\\n3 3 3 3 3 6 2 5"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 2 3 3 2 1\n''') == '3\n2\n1 6 1\n2 5 2\n3 4 3\n''' == 'IMPOSSIBLE'\nassert solution('''\n4\n1 2 1 2\n''') == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'\n''' == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '3'\nassert solution('4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 2 3 3 2 1\n''') == '3'\nassert solution('''\n4\n1 2 1 2\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1 6 1'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 2 1\n''') == '3\n2\n1 6 1\n2 5 2\n3 4 3''')\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '3\\n1 6 1\\n2 5 2\\n3 4 3'\nassert solution('4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == \"1 6 1\"\nassert solution('4\\n1 2 1 2') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 100') == '1 100'\nassert solution('1 1') == '1 1'\nassert solution('5 10 20 30 40 50') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2\n1 100\n1 1\n''') == '1 2 100'\nassert solution('''\n2\n5 10 20 30 40 50\n2 28 27\n''') == '10 20 28 27 30 40 50'\n\n''')\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n1 100\n1 1\n''') == '1 2 100'\nprint('Tests passed')"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"11 20 25 30 40 50\"\nassert solution(\"3\") == \"21 22 23 24 25\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"5 10 20 30 40 50\") == \"10 20 28 27 30 40 50\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 2'\nassert solution('1') == '1'\nassert solution('1 100') == '1 100'\nassert solution('1 1') == '1 1'\nassert solution('5 10 20 30 40 50') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2\n1 100\n1 1\n''') == '1 2 100'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1 2'\nassert solution('2') == '1 100'\nassert solution('2') == '2 28 27'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 100') == '1 100'\nassert solution('1 1') == '1 1'"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2\n1 100\n1 1\n\"\"\") == \"\"\"\n1 2 100\n\n\"\"\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\") == \"506\"\n\"\"\"\nfrom math import comb"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '5'\nassert solution('6') == '0'\nassert solution('1000') == '10'\nassert solution('1001') == '1'\nassert solution('1000000') == '100'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'\nassert solution('1 AB 1 1') == '2600'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"1\") == \"506\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 2\n''') == '0'\nassert solution('''\n1\n1 3\n''') == '0'\nassert solution('''\n2\n1 1\n2 2\n''') == '2300'\nassert solution('''\n1\n1 1\n''') == '0'"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2600'\nassert solution('5') == '4200'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'\nassert solution('23') == '0'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'\nassert solution('1') == '21'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'\n\n\"\"\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"20\"\nassert solution(\"1\") == \"26\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'possible'\nassert solution('') == 'impossible'\nassert solution('()())') == 'possible'\nassert solution
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"()))\" == \"possible\"\nassert solution(\"))((()\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('()))') == 'possible'\nassert solution('))((') == 'impossible'\nassert solution('((()))') == 'possible'\nassert solution('(((()))') == 'impossible'\nassert solution('(((((()))))') == 'impossible'\n\n'''\n\nimport sys"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"()))((()))\") == \"impossible\"\nassert solution(\"))(\") == \"impossible\""
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"))((\") == \"impossible\"\nassert solution(\")))(\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\")))(\") == \"impossible\"\nassert solution(\"))((\") == \"impossible\"\nassert solution(\")))((\") == \"impossible\"\nassert solution(\"))((()\") == \"possible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('(())') == 'possible'\nassert solution('()())') == 'impossible'\nassert solution('((()))') == 'possible'\nassert solution('(())()()') == 'possible'\nassert solution('()((())') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('()))' ) == 'possible'\nassert solution('))(((((((((((((())))))()())))))()))()()())()())()())()())()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()()"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''()))''') == 'possible'\nassert solution('''))()''') == 'impossible'\nassert solution('''((((()))\n()()\n()()\n((((()))\n()()\n()()\n(((((()))\n()()\n()()\n((((()))\n()()\n()()\n(((((()))\n()()\n()()\n(((((()))\n()()\n()()\n((((((()))))\n()()\n()()\n(((((((((()))))))))))\n()()\n()()\n(((((((((((((((((((()))))))))))))))))))))\n()()\n()()\n(((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((())))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((())))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((())))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))\n()()\n()()\n((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((()))))))))))))))))))))))))))))))\n()()\n()()\n(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('()))') == 'possible'\nassert solution(')))(') == 'impossible'\n\"\"\"\nfrom sys import stdin\n\nbrackets = stdin.readline().strip()\nbrackets = list(brackets)\n\ninversions = 0\n\nfor i in range(len(brackets)):\n    if brackets[i] == '(':\n        brackets[i] = ')'\n        if i!= len(brackets) - 1:\n            inversions += 1\n    elif brackets[i] == ')':\n        brackets[i] = '('\n        if i!= 0:\n            inversions += 1"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '1800'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'impossible'\nassert solution('2 2') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '1800'\nassert solution('1 180 900 180') == '1800'\nassert solution('1 2000 9200 1600') == 'impossible'"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800', 'First'\n\nassert solution('''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible', 'Second'"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == \"1800\"\nassert solution('''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == \"impossible\"\nassert solution('''\n1 2\n1 2000 9200 1600\n1 1900 3600 1600\n''') == \"impossible\"\nassert solution('''\n2 2\n1 1800 3600 1800\n1 2000 9200 1600\n''') == \"2000\"\nassert solution('''\n1 100000\n1 31200 1 31200\n1 31200 1 31200\n''') == \"31200\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == '1800'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3,2]) == \"impossible\"\nassert solution([2,2]) == \"impossible\"\nassert solution([3,2]) == \"1830\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n1 1800 9800 900\n1 1900 9600 900\n1 2000 9800 900\n1 2200 9600 900\n1 2300 9800 900\n''') == \"900\"\n\nassert solution('''\n4 2\n1 1800 9000 1800\n1 1900 9200 1600\n1 2000 9400 1400\n1 2200 9500 1400\n1 2300 9600 1500\n''') == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n\"\"\"\n) == \"1800\"\nassert solution(\n\"\"\"\n4 2\n1 1800 3600 1800\n1 1900 3600 1600\n1 2200 9400 1400\n1 31500 9000 1800\n1 31500 9200 1600\n1 31500 9400 1400\nSample Output 3:\nimpossible\n\"\"\"\n) == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\nA1-B1 A2-B2 B1-C1\nA1-C1 A2-B1 B1-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B3 A2-C1 B1-C2\nA1-C3 A2-B1 B1-C2''') == 'A1-B1 A2-C1 A2-B2 B1-C2 A3-B3'"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == 'A1-B2 B1-A2 A3-B3'\nassert solution('2 3') == 'A1-B1 A2-C2 B2-C1'"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"A1-B2 B1-A2 A3-B3\\nA2-B3 B2-A3 A1-B1\\nA3-B1 B3-A1 A2-B2\\nA1-C1 A2-B1 B1-C2\"\nassert solution(input_2) == \"A1-B1 A2-C2 B2-C1\\nA1-C2 A2-B1 B1-C1 A3-B3\\nA1-B2 A2-C1 B1-C2 A3-B1\"\n\"\"\""
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == stdin"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 1\n1 2''') == '1 2 1 2'\nprint('All test cases passed...')"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\nA1-B2\nA2-B3\nA3-B1''') == 'A1-B2 A2-B3 A3-B1'\nassert solution('''2 3\nA1-B1\nA2-B2\nA3-B1''') == 'A1-B2 A2-B3 A3-B1'\nassert solution('''3 3\nA1-B2\nA2-B3\nA3-B1''') == 'A1-B2 A2-B3 A3-B1'"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B1 B2-C1'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 3\n2 1\n''') == 'A1-B2 A2-C2 B2-C1'\nassert solution('''\n2 3\n1 3\n2 1\n''') == 'A1-B1 A2-C2 B2-C1'\n'''\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"7\"\nassert solution(\"4 4\\nX.XX\\nX..X\\n..X.\\n..XX\\n\") == \"9\""
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\nassert solution('X.XX') == '8'\nassert solution('X..X') == '9'\nassert solution('..X.X') == '10'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == '7'\nassert solution('''\n4 4\nX.XX\nX..X\n..X.\n..XX\n''') == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2\\n..\\n..') == '7'\nassert solution('4 4\\nX.XX\\nX..X\\n..X.\\n..XX') == '9'\nprint('\"Run\" is the best way to get your tests to pass.')\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"7\", \"Wrong!\"\nassert solution(\"4 4\") == \"9\", \"Wrong!\""
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"7\"\nassert solution(\"4 4\") == \"9\"\nassert solution(\"3 4\") == \"9\"\nassert solution(\"3 3\") == \"9\"\nassert solution(\"3 3\") == \"9\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == '7'\nassert solution('''\n4 4\nX.XX\nX..X\n..X.\n..XX\n''') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\nXX\nXX\n\"\"\") == \"7\"\nassert solution(\"\"\"\n4\nXX.X\nXX.X\n..X.\n..XX\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4\nXX.XX\nX.XX\nXX.XX\nXX.XX\n\"\"\") == \"9\"\nassert solution(\"\"\"\n5\nX.X.X\nX...X\nX...X\nX.X.X\nX.X.X\nX.X.X\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 2\n..\n..\n\"\"\") == \"7\"\nassert solution(\"\"\"4 4\nX.XX\nX..X\n..X.\n..XX\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\nprint(solution('''2\n2 0 2 1 100\n6 0 8 1 1\n'''))\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 2 2 100\n1 1 1 1 500\nSample Output 1:\n600\n''') == '600'\nassert solution('''\n2 0 2 1 100\n6 0 8 1 1\nSample Output 2:\n100\n''') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"600\"\nassert solution(\"3\") == \"100\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''\n2\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"600\"\nassert solution(\"2\") == \"100\"\nassert solution(\"3\") == \"600\"\nassert solution(\"3\") == \"100\"\nassert solution(\"4\") == \"400\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '600'"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n357''') == '0'\n\nassert solution('''2\n97\nSample Output 3:\n10''') == '1'\n\nassert solution('''3\n257''') == '4'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n361''') == '3'\nassert solution('''2\n11''') == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '0'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('7') == '6'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1\n3\n''') == '0', 'First Test Case Failed'\nassert solution('''\n4\n13\n4\n''') == '3', 'Second Test Case Failed'\nassert solution('''\n4\n13\n5\n''') == '2', 'Third Test Case Failed'\nassert solution('''\n2\n13\n3\n''') == '1', 'Fourth Test Case Failed'\nassert solution('''\n4\n101\n7\n''') == '0', 'Fifth Test Case Failed'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\nassert solution(input(stdin)) == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '1'\n'''\n\nfrom collections import Counter\n\nn = int(input())\nnum = input()\n\nans = 0\nfor i in range(len(num)):\n    cnt = Counter(num[:i + 1])\n    if cnt['1'] == 0 and cnt['2'] == 0 and cnt['3'] == 0:\n        ans += 1\n\nprint(ans)\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n361''') == '3'\nassert solution('''2\n11''') == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == '10'\n\nassert solution('''\n3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'\n\nassert solution('''\n3 10\n1 10\n1 100\n''') == 'cancel road trip'\n\nassert solution('''\n1 10\n1 100\n''') == 'cancel road trip'\n\nassert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10') == '10'\nassert solution('2 100') == 'cancel road trip'\nassert solution('1 10') == '10'\nassert solution('11 5') == 'cancel road trip'\nassert solution('13 5') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\\n\") == \"10\"\nassert solution(\"3 10\\n2 100\\n1 10\\n13 5\\n\") == \"cancel road trip\"\nassert solution(\"3 10\\n2 100\\n1 10\\n11 5\\n\") == \"cancel road trip\"\nassert solution(\"2 3\\n2 4\\n1 2\\n3 1\\n\") == \"cancel road trip\"\nassert solution(\"2 4\\n3 4\\n1 2\\n3 1\\n\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 10\") == \"10\"\nassert solution(\"2 100\") == \"cancel road trip\"\nassert solution(\"3 10\") == \"10\"\nassert solution(\"2 100\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5\n''') == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 10') == '10'\nassert solution('1 5') == 'cancel road trip'\n\n'''"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == 'cancel road trip'\nassert solution('3 10') == '10'\nassert solution('3 10') == 'cancel road trip'\nassert solution('3 10') == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10\\n2 100\\n1 10\\n11 5\\n\") == \"10\"\nassert solution(\"2 10\\n2 100\\n1 10\\n11 5\\n\") == \"cancel road trip\"\nassert solution(\"2 10\\n1 10\\n1 10\\n1 10\\n\") == \"cancel road trip\"\nassert solution(\"2 10\\n1 10\\n1 10\\n1 10\\n\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 10\n1 100\n11 5''') == '10'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == '10'\nassert solution('3 10') == 'cancel road trip'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 9\\n2 8\\n1 1\\n3 4') == '1 8 9 9 100 101 108 109 109'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 9\") == \"1 8 9 9 100 101 108 109 109\""
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0 1 2 3'\nassert solution('5 7') == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == \"1 8 9 9 100 101 108 109 109\"\nprint(solution(input_string))\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\n\nassert solution('''\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\n\nassert solution('''\n10 12\n1 6\n2 4\n3 8\n4 2\n5 2\n6 2\n7 2\n8 2\n9 3\n10 4\n
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 9\") == \"1 8 9 9 100 101 108 109 109\"\nassert solution(\"5 7\") == \"0 7 8 11 15 16 19\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''\n6 9\n2 2\n3 4\n3 5\n1 1\n1 4\n2 6\n''') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\nassert solution('''\n1 5\n1 5\n''') == '2 2 2 2 2 2 2 2 2 2'\n''')"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 8 9 9 100 101 108 109 109'\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == \"1\"\nassert solution('''\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == \"2\"\n'''"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 5 3\") == \"2\""
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 3') == '1', \"First\"\nassert solution('0 0 1') == '1', \"Second\"\nassert solution('3 3') == '1', \"Third\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('1 5 3') == '3'\nassert solution('1 5 3') == '3'"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == \"1\"\nassert solution('''\n1 8 3\n-2 0 2\n-2 0 3\n0 4\n-1 2\n-1 1\n1 0\n0 2\n0 1\n0 1\n''') == \"3\"\nassert solution('''\n1 9 4\n0 0 3\n2 0 2\n-2 0 0\n2 0 3\n0 2 1\n0 0 0\n-1 0\n0 0 1\n0 0 0\n''') == \"2\"\nassert solution('''\n5 6 5\n0 0 0\n-3 1 0\n1 -1 0\n-1 1 0\n0 0 0\n-1 0\n-1 0\n0 0 0\n0 1 0\n0 0 0\n''') == \"6\"\nassert solution('''\n4 8 2\n-3 -3\n2 3\n0 1\n-1 0\n2 0\n-1 0\n0 0\n-1 0\n0 0\n0 0\n0 0\n''') == \"4\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 5 3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 2 5\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 2 5\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('1 5 3') == '3'\nassert solution('1 5 3') == '3'"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 5 3\") == \"3\"\nassert solution(\"1 5 3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 5 3\") == \"3\"\nassert solution(\"2 2 2\") == \"2\"\nassert solution(\"2 2 1\") == \"1\""
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\") == \"4\\n4\\n2\\n2\\n0\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4\\n2\\n2\\n0\\n'\nprint('\"solution()\" is working.')"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10000\\n1') == '4\\n'\nassert solution('5 9\\n1') == '2\\n'\nassert solution('5 100000\\n1\\n1') == '4\\n'\nassert solution('5 10000\\n1\\n1\\n1\\n1\\n1\\n1') == '1\\n'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10000\\n') == '4'\nassert solution('5 9\\n') == '2'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9\\n') == '2'\nassert solution('10 6\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10000\\n1\\n1\\n10\\n1\\n9\\n') == '4\\n4\\n2\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9\\n') == '2\\n0\\n0\\n2\\n0\\n'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9\\n') == '4\\n4\\n2\\n2\\n0\\n'"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10000\") == \"4\"\nassert solution(\"5 9\") == \"2\""
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 10000\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"1\"\n) == \"4\\n\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''ne\nkava''') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'DA'\nassert solution('2') == 'NE'\nassert solution('3') == 'NE'\nassert solution('4') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"NE\"\nassert solution(\"4\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"NE\"\nassert solution(\"4\") == \"DA\"\n\"\"\""
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ne') == 'NE'\nassert solution('ak') == 'DA'\n\n### Given list of words\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"NE\"\nassert solution(\"4\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"NE\"\nassert solution(\"4\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 3') == '2'\nassert solution('3 3 4') == '0'\nassert solution('5 5 4') == '3'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n1 1 4') == '2'\nassert solution('8 10 4\\n1 2\\n2 3\\n1 3\\n3 6\\n6 8\\n2 4\\n2 5\\n4 7\\n5 7\\n7 8\\n2 3 4 5 6\\n2 2 6 8\\n1 1 6\\n1 1 8') == '3'"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2\\n'\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '1\\n'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2''') == \"2\"\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8''') == \"3\""
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8''') == '2'\n\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8''') == '1'\n\nassert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\nSample Input 3:\n5 20 6\n1 2\n1 3\n2 4\n3 4\n1 2\n2 1 4\n1 2\n2 2 3 2\nSample Output 3:\n1\n2\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 10 4\") == \"2\"\nassert solution(\"8 10 4\") == \"0\"\nassert solution(\"3 4 1\") == \"2\"\nassert solution(\"3 4 1\") == \"0\"\nassert solution(\"1 1 2\") == \"0\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4 4\") == \"2\"\nassert solution(\"8 10 4\") == \"3\"\nassert solution(\"1 2\") == \"0\""
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4 4\") == \"2\"\nassert solution(\"8 10 4\") == \"3\""
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '2'\nassert solution('1 2 1') == '3'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '1', 'First'\nassert solution('''\n4 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2', 'Second'\nassert solution('''\n3 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '1', 'Third'\nassert solution('''\n3 3\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1', 'Fourth'\nassert solution('''\n10 10\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n3 1 4\n4 1 5\n5 1 6\n6 1 7\n7 1 8\n8 1 9\n9 1 10\n''') == '5', 'Fifth'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '2'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '1'\n\n'''\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == \"2\"\n\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == \"1\"\n\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == \"0\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '2'\nassert solution('''1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '1'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '1'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '1'\nassert solution('''2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '2'"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '40.5'\n\n## Sample Tests\nimport io\nimport unittest\n\n\nclass Test_Takes(unittest.TestCase):\n    def test_simple(self):\n        with io.StringIO('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') as buf:\n            print(solution(buf.read()))\n            buf.seek(0)\n            self.assertEqual(buf.read(), '40.5\\n')\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 15\nD 4 10 1\nC 6 1\n\"\"\") == \"40.5\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '49.000000000'\nprint(solution(input()))\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 15') == '40.500000000'\nassert solution('3 15') == '49.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '40.500000000'\nassert solution('3 10\\nD 4 10 1\\nC 6 1\\nC 9 3') == '49.000000000'\nassert solution('1 20\\nD 1 100 1\\nC 0.1 1') == '4.5'\nassert solution('1 10\\nD 1 100 1\\nC 0.1 1') == '11'\nassert solution('4 20\\nD 1 100 1\\nC 0.1 1') == '0.9'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"40.500000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '49.000000000'\nprint(solution(__import__('sys').stdin.read()))\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000'\nassert solution('''\n2 20\nD 4 10 1\nC 6 1\n''') == '41.5'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000', 'First'\nassert solution('''\n2 15\nD 4 10 1\nC 6 1\n''') == '40.500000000', 'Second'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 15') == '40.500000000'\nassert solution('3 15') == '49.000000000'"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n') == '1 3 2', \"This is not correct\"\nassert solution('10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n') == '5 4 9 3 1 10 7 6 2', \"This is not correct\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"5 4 9 3 1 10 7 6 2\""
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n    '10',\n    'a 2 10 3',\n    'a 1 6',\n    'c 2 1 5',\n    'd 1 9',\n    'e 1 4',\n    'f 1 2',\n    'g 2 6 8',\n    'h 0',\n    'i 1 3',\n    'j 1 7',\n])) == '5 4 9 3 1 10 7 6 2'\n\nassert solution('\\n'.join([\n    '7',\n    'a 2 10 3',\n    'a 1 6',\n    'c 2 1 5',\n    'd 1 9',\n    'e 1 4',\n    'f 1 2',\n    'g 2 6 8',\n    'h 0',\n    'i 1 3',\n    'j 1 7',\n])) == 'fail'\n\nassert solution('\\n'.join([\n    '4',\n    'a 2 10 3',\n    'a 1 6',\n    'c 2 1 5',\n    'd 1 9',\n    'e 1 4',\n    'f 1 2',\n    'g 2 6 8',\n    'h 0',\n    'i 1 3',\n    'j 1 7',\n])) == 'fail'\n\nassert solution('\\n'.join([\n    '5',\n    'a 2 10 3',\n    'a 1 6',\n    'c 2 1 5',\n    'd 1 9',\n    'e 1 4',\n    'f 1 2',\n    'g 2 6 8',\n    'h 0',\n    'i 1 3',\n    'j 1 7',\n])) == 'fail'\n\nassert solution('\\n'.join([\n    '2',\n    'a 2 10 3',\n    'a 1 6',\n    'c 2 1 5',\n    'd 1 9',\n    'e 1 4',\n    'f 1 2',\n    'g 2 6 8',\n    'h 0',\n    'i 1 3',\n    'j 1 7',\n])) == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\") == \"fail\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == \"fail\"\nassert solution('''5\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7''') == \"5 4 9 3 1 10 7 6 2\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\n'''\n'''\n\nimport collections\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        # parse input\n        artist_names, song_counts, song_lists = stdin.split(\"\\n\"), {}, {}\n        for i in range(len(artist_names)):\n            artist_names[i] = artist_names[i].split()\n            artist_names[i] = artist_names[i][0]\n            for j in range(len(artist_names[i])):\n                if artist_names[i][j] not in song_counts:\n                    song_counts[artist_names[i][j]] = 1\n                else:\n                    song_counts[artist_names[i][j]] += 1\n            if artist_names[i] not in song_lists:\n                song_lists[artist_names[i]] = {}\n            else:\n                song_lists[artist_names[i]][len(song_lists[artist_names[i]])] = 1\n        \n        # create ordered list\n        ordered_artist_names = collections.OrderedDict(sorted(song_lists.items(), key=lambda item: (item[0], item[1].keys())))\n        ordered_artist_names = collections.OrderedDict(sorted(ordered_artist_names.items(), key=lambda item: (item[0], item[1].keys())))\n        \n        # create song_lists_of_ordered_artist_names\n        song_lists_of_ordered_artist_names = collections.OrderedDict(sorted(song_lists.items(), key=lambda item: (item[0], item[1].keys())))\n        song_lists_of_ordered_artist_names = collections.OrderedDict(sorted(song_lists_of_ordered_artist_names.items(), key=lambda item: (item[0], item[1].keys())))\n        \n        # loop through song_lists_of_ordered_artist_names\n        for i in ordered_artist_names:\n            # find song_lists_of_ordered_artist_names_by_artist_name[i]\n            song_lists_of_ordered_artist_names_by_artist_name = song_lists_of_ordered_artist_names[i]\n            # loop through song_lists_of_ordered_artist_names_by_artist_name\n            for j in song_lists_of_ordered_artist_names_by_artist_name:\n                # if there is only one song\n                if song_lists_of_ordered_artist_names_by_artist_name[j] == 1:\n                    # get song_name[j]\n                    song_name = song_lists_of_ordered_artist_names_by_artist_name[j][0]\n                    # get artist_name[i]\n                    artist_name = i\n                    # print(artist_name, song_name)\n                    # return artist_name, song_name\n                    return artist_name, song_name\n        \n        # if nothing is found\n        return \"fail\"\n\ns = Solution()\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"\"\"\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\") == \"fail\"\nassert solution(\"\"\"\n8\na 2 10 3\na 1 6\nb 1 2 5\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n\"\"\") == \"fail\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nab 2 1\\ne 4 1 5\\nk 3 5\\nk 7 5\\nk 9 5\\ne 2 1\\nk 1 3\\n\") == \"5 4 9 3 1 10 7 6 2\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\\n\"\n                \"a 2 10 3\\n\"\n                \"a 1 6\\n\"\n                \"c 2 1 5\\n\"\n                \"d 1 9\\n\"\n                \"e 1 4\\n\"\n                \"f 1 2\\n\"\n                \"g 2 6 8\\n\"\n                \"h 0\\n\"\n                \"i 1 3\\n\"\n                \"j 1 7\\n\") == \"5 4 9 3 1 10 7 6 2\":\n    print(\"Success\")\n\nassert solution(\"10\\n\"\n                \"b 1 6\\n\"\n                \"c 2 1 5\\n\"\n                \"d 1 9\\n\"\n                \"e 1 4\\n\"\n                \"f 1 2\\n\"\n                \"g 2 6 8\\n\"\n                \"h 0\\n\"\n                \"i 1 3\\n\"\n                \"j 1 7\\n\") == \"fail\":\n    print(\"Fail\")\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00:00') == '3'\nassert solution('00:08') == '3'"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''00:00\n01:01\n00:00\n01:01\n00:00\n''') == '3\\n00:00\\n01:00\\n01:01\\n00:00\\n'\n\nassert solution('''00:10\n00:00\n00:00\n00:00\n00:10\n''') == '3\\n00:00\\n00:10\\n00:00\\n00:00\\n'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('00:00') == '3'\nassert solution('00:08') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('00:00\\n01:01') == '3'\nassert solution('00:00\\n00:00') == '1'\nassert solution('00:00\\n00:02') == '2'\nassert solution('00:00\\n00:00') == '0'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''00:00\n01:01''') == '3\\n00:00\\n01:00\\n01:01\\n'\nassert solution('''00:08\n00:00''') == '3\\n00:08\\n00:09\\n00:00\\n'\nassert solution('''00:20\n00:00\n00:00\n00:10''') == '3\\n00:00\\n00:10\\n00:20\\n00:00\\n00:00\\n00:00\\n'\nassert solution('''00:00\n00:00\n00:00\n00:00''') == '3\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"00:00\\n00:00\") == \"3\"\nassert solution(\"00:01\\n00:00\") == \"2\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"00:00\") == \"3\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"(())\") == \"4,8:8,8:\"\nassert solution(\"(()))\") == \"4,8:8,8:\"\nassert solution(\"((((((((()))))))))\") == \"4,4:\nassert solution(\"(((()(((())())))))\") == \"4,4:"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('()') == '4,4:'\nassert solution('()())') == '4,4:4,4:4,4,4:\nassert solution('((((()))))') == '4,4:4,4:4,4,4:4,4,4:4,4,4:4,4,4:'\nassert solution('(((()()))())()') == '4,4:4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('((()))') == '(4,4:)'\nassert solution('(())') == '(4,)'\nassert solution('())') == '4,4:'\nassert solution('(()))') == '4,4:)'\nassert solution('(())))') == '4,4:)'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"((((((()))))))\") == \"4,4:4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4,4,4:4"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('(())') == '4,8:8,8:', \"Wrong!\"\nassert solution('())') == '4,4:\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('((()))') == '4,4:\n\nassert solution('()') == '4,4:\n\nassert solution('(())(') == '4,4:4,4:\n\nassert solution('(()())(())') == '4,4:4,4:4,4,4:\n\nassert solution('(()((())))(())()()(())(()(()))())') == '4,4:4,4:4,4,4,4,4,4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4,4:4,4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,4,4,4,4,4,4:4,"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''(((((())))''') == '4,4:', '''(())''')\nassert solution('''((((((())))''') == '4,4:', '''(((((())))''')\nassert solution('''((((((((((((()))))))))))))))''') == '4,4:', '''((((((((((((((())))))))))))))'''\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('(())') == '4,8:8,8:'\nassert solution('())') == '4,4:'\nassert solution('(())()()') == '4,4:4,4:'\nassert solution('()())()') == '4,4:4,4:4:'\nassert solution(')(') == '4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"()\") == \"4,4:\"\nassert solution(\"(())\") == \"4,8:8,8:\"\n\n\"\"\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '5'\nassert solution('1 1') == '-1'\nassert solution('1 1') == '-1'\nassert solution('1 1') == '-1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n26 02 03 03 1\nSample Input 3:\n3 3\n1 2 3\nSample Output 3:\n2\n''') == '2'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '5'\nassert solution('1 1') == '5'\nassert solution('1 1') == '5'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 2\") == \"185\""
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"185\"\n\"\"\""
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n10 9 4\n''') == '-1', 'Should return -1 if the input is invalid'\nprint(solution('''\n2\n10 9 4\n'''))\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n26 02 03 03 1\") == \"5\"\nassert solution(\"1 1\\n26 02 03 03 2\") == \"185\"\nassert solution(\"1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"1\"\nassert solution(\"1 1\\n26 02 03 03 1\\n26 02 03 03 2\") == \"185\""
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''1 1\n26 02 03 03 2\n''') == '185'\nprint('All tests passed!')\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n\nassert solution('''\n4 2\n3 4 1 2\n''') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2 3 4 1\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4'\nassert solution('4 2\\n3 4 1 2') == '2 3 4 1'\nassert solution('4 1\\n3 4 1 2') == '1 3 4 1 2'\nassert solution('1 3\\n3 4 1 2') == '3 4 1 2 1'\nassert solution('2 3\\n3 4 1 2') == '2 3 4 1 2 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3 2') == '2 3 4 1', \"Wrong\"\nassert solution('5 1 4 3 2') == '1 2 3 4 5', \"Wrong\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\") == \"2 3 4 1\"\nassert solution(\"6 2\\n1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4'\nassert solution('4 2\\n3 4 1 2') == '2 3 4 1'\nassert solution('10 2\\n3 4 1 2 3 4 5 6 7 8 9 10') == '10 2 9 8 7 6 5 4 3 4 2 3'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\nassert solution('''\n4 2\n3 4 1 2\n''') == '2 3 4 1'\n\nassert solution('''\n5 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n\nassert solution('''\n10 2\n5 2 4 6 7 8 1 9 3 8 7 6 5 4\n''') == '9 8 7 6 5 4 2 3 8 1'\n\nassert solution('''\n4 2\n1 2 3 4\n''') == '1 2 3 4'"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '5 6 1 2 3 4'\nassert solution('4 2') == '2 3 4 1'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\""
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1374 2\n210 1\n''') == \"7413\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1374 2\") == \"7413\"\nassert solution(\"210 1\") == \"201\"\nassert solution(\"924321 2\") == \"9243210\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '321'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.733333333333333'\nassert solution('4') == '0.666666666666667'"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0\\n1 1\\n2 0') == '0.733333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0 0\n0 1\n1 1\n1 0\n''') == '0.666666666666667'\nassert solution('''4\n0 0\n0 1\n1 1\n1 0\n''') == '0.733333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n0 0\n0 1\n1 1\n1 0\n4 0\nSample Output 1:\n0.6666666666666666\n\nSample Output 2:\n0.733333333333333\n''') == '0.733333333333333', 'wrong answer'"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1\\n1 0\\n1 0\\n1 0\\n2 0') == '0.733333333333333'\nassert solution('4\\n0 0\\n0 1\\n1 1\\n1 0\\n2 0') == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n0 0\n0 1\n1 1''') == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0.0\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0.666666666666667'\nassert solution('3') == '0.733333333333333'\n\n\"\"\""
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '0.5'\nassert solution('3\\n4\\n5') == '1.25'\nassert solution('1\\n100000\\n1') == '0.000001'\nassert solution('1\\n1\\n1') == '0.5'\nprint('All test cases passed!')"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n0 0\n0 1\n1 1\n1 0\n''') == '0.733333333333333'\nassert solution('''6\n0 0\n0 1\n1 1\n1 0\n1 -1\n0 -1\n''') == '1.75'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3 4\n10 1 3\n0 1 20\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 3 4\n10 1 3\n0 1 20\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3 4 1\n10 1 20\n1 2 15\n10 1 20\n\"\"\") == \"13\"\nassert solution(\"\"\"\n3 4 100\n10 1 10\n10 1 10\n10 1 10\n\"\"\") == \"103\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3 4\n10 1 3\n0 1 20\n''') == '9'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 3 1\") == \"2\"\nassert solution(\"10 1 3\") == \"8\"\nassert solution(\"3 3 10\") == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3 100\n1 1 10\n1 1 20\n\"\"\") == \"21\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 4') == '9'\nassert solution('2 3 100') == '21'\nassert solution('2 3 10') == '16'\nassert solution('2 10 5') == '16'\nassert solution('2 100 10') == '16'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\", \"Test Case 1 (Empty String)\"\nassert solution(\"1\\n1\") == \"\", \"Test Case 2 (Single Integer)\"\nassert solution(\"2 3 4\") == \"\", \"Test Case 3 (Two Integers)\"\nassert solution(\"10 1 3\") == \"9\", \"Test Case 4 (One Router)\"\nassert solution(\"10 1 10\") == \"21\", \"Test Case 5 (Two Routers)\""
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 4') == '9'\nassert solution('2 3 100') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 3\n10 1 20\n3 1 10\n''') == '9'\nassert solution('''\n1 1 3\n10 10 20\n3 1 10\n''') == '21'\nassert solution('''\n3 1 100\n10 10 10\n3 1 10\n''') == '34'"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3 4\n10 1 3\n0 1 20''') == '9'\nassert solution('''2 3 100\n10 1 10\n10 1 10''') == '21'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 7 -') == '4'\nassert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\") == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2\n''') == '2'\n\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '4'\n\nassert solution('''9 2 7 -\n1 1 1 2\n2 2 2 3\n4 2 2 4\n5 2 2 5\n6 2 2 6\n7 2 2 7\n8 2 2 8\n9 2 2 9\n''') == '5'\n\nassert solution('''8 2 7 -\n1 1 1 2\n3 2 3 2\n4 3 3 3\n5 3 3 4\n6 3 3 5\n7 3 3 6\n8 3 3 7\n''') == '2'\n\nassert solution('''9 2 7 -\n1 1 1 2\n3 2 3 2\n4 3 3 3\n5 3 3 4\n6 3 3 5\n7 3 3 6\n8 3 3 7\n9 3 3 8\n''') == '3'"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''9 2 7 -\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 2 7 -\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''\n8 2 7 -\n1 1 1 2\n''') == '4'\n'''\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 2 7 -\\n1 1 1 2\\n\") == \"2\"\nassert solution(\"9 2 7 -\\n1 1 1 2\\n\") == \"4\"\nassert solution(\"5 5 5 5 5 5 5 5\\n1 1 1 1 1 1 1 1\\n\") == \"4\""
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2') == '2'\nassert solution('9 2 7 -\\n1 1 1 2') == '4'\nprint('ALL TEST CASES PASSED')\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '3'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n\"\"\"\n) == \"2\""
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2\\n2 3 5\\n3 4 5') == '3'\nassert solution('4\\n4 1 2\\n2 3 5\\n3 4 5\\n1 4 8') == '4'\nassert solution('5\\n5 1 2\\n2 3 5\\n3 4 5\\n1 4 8\\n1 5 9') == '2'"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3') == '3'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '3'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '3'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8''') == '2'\nassert solution('''10 4\n1 2 1\n1 3 2\n2 4 1\n2 5 2\n3 4 1\n3 6 2\n4 7 2\n4 8 2\n5 9 2\n6 10 2\n6 11 2\n6 12 2\n6 13 2\n7 14 2\n7 15 2\n7 16 2\n7 17 2\n8 18 2\n8 19 2\n8 20 2''') == '1'\nassert solution('''4 4\n1 2 1\n1 3 2\n2 4 1\n2 5 2\n3 4 1\n3 6 2\n4 7 2\n4 8 2\n5 9 2\n6 10 2\n6 11 2\n6 12 2\n6 13 2\n7 14 2\n7 15 2\n7 16 2\n7 17 2\n8 18 2\n8 19 2\n8 20 2''') == '0'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '3'\n\nassert solution('''\n4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '2'\n\nprint(f'{solution(input())}')"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n2 3 3\") == \"2\"\nassert solution(\"2 1 2 3\\n3 2 4 4\") == \"1\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '3'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\""
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 4\\n\"\n    \"2 3 1\\n\"\n) == \"6\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\nassert solution('5 1') == '6'\nassert solution('6 5') == '12'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3 1') == '6'\nassert solution('2 2\\n3 1') == '12'\nassert solution('4 4\\n2 3 1') == '24'\nassert solution('1 2\\n3 1') == '6'"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n2 1\n''') == '6'\nassert solution('''3 4\n2 3 1\n''') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '6'\n\"\"\""
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 2\n''') == '2'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 3 4 1 2') == '2'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4 5 1 2\n''') == '1'\n\nassert solution('''\n6\n6 5 3 2 1\n''') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 2\n''') == '2'\nassert solution('''\n5\n3 4 5 1 2\n''') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 2\nassert solution('5') == 1\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '9'\nassert solution('2 3') == '4'\nassert solution('4 4') == '0'"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n') == '9'\nassert solution('3 3\\n1 3 1\\n2 1 2\\n1 1 1\\n') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '9'\nassert solution('2 4') == '4'\nassert solution('2 3') == '0'\nassert solution('3 2') == '0'\nassert solution('2 3') == '3'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\nassert solution('''\n3 3\n1 3 1\n2 1 2\n1 1 1\n''') == '4'\nassert solution('''\n5 5\n4 4 5 1 1\n2 2 3 3 1\n2 2 2 2 1\n1 2 2 1 1\n4 3 3 4\n''') == '4'\nassert solution('''\n5 5\n4 4 5 1 1\n2 2 3 3 1\n2 2 2 2 1\n1 2 2 1 1\n4 3 3 4\n''') == '3'\nassert solution('''\n5 5\n4 4 5 1 1\n2 2 3 3 1\n2 2 2 2 1\n1 2 2 1 1\n4 3 3 4\n''') == '0'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"4 3\") == \"8\"\nassert solution(\"6 3\") == \"0\""
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 4 10\\n5 2 6\\n11 1 3\\n') == '9'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9', f'Expected {9}'\nassert solution('''\n2 4\n1 1 1\n2 2 2\n''') == '4', f'Expected {4}'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 4\n5 2 1 3\n1 3 2 5\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4 4\n1 2 3 4\n5 2 1 3\n1 3 2 5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1 1\n2 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\nassert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '4'\nassert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '0'\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '7'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2') == '6'\nassert solution('4\\n3 4 5 6\\n1 2') == '3'"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '6'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\nprint(solution())"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''\n3\n1 2 3\n3 1\n3 4\n''') == '1'\nassert solution('''\n1\n1 2\n2\n1\n1\n1\n''') == '4'\nassert solution('''\n1\n1 2\n1 2\n''') == '2'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('6') == '6'\nassert solution('7') == '0'\nassert solution('8') == '0'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4') == '6'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\"\n) == \"6\"\nassert solution(\n    \"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\"\n) == \"3\""
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 10\n5 8\nSample Output 1:\n18\n8''') == '8'\n\nassert solution('''3\n17 144\n121 121\n89 98\nSample Output 2:\n265\n25\n10''') == '10'\n\nassert solution('''10\n10 7\n99 86\n41 15\n75 26\n74 76\n62 64\n62 30\n47 55\n49 83\n70 27\n68 50\nSample Output 1:\n10\n9''') == '9'\n\nassert solution('''10\n10 7\n99 86\n41 15\n75 26\n74 76\n62 64\n62 30\n47 55\n49 83\n70 27\n68 50\nSample Output 2:\n10\n9''') == '9'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 10\n5 8\n8 16''') == '18'\n\nassert solution('''3\n1 10\n5 8\n8 16''') == '25'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 10\\n5 8') == '18'\nassert solution('3\\n17 144\\n121 121\\n89 98') == '265'"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 10\n5 8\n''') == '18'\nassert solution('''\n3\n17 144\n121 121\n89 98\n''') == '265'\nassert solution('''\n4\n16 170\n101 60\n12 80\n124 69\n''') == '10'"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 10\n5 8\n''') == '18'\nassert solution('''\n3\n17 144\n121 121\n89 98\n''') == '265'\nassert solution('''\n5\n1 100\n1 1\n2 2\n1 9\n7 8\n''') == '3'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 10') == '18'\nassert solution('2 5 8') == '265'\nassert solution('3 17 144') == '265'\nassert solution('4 121 121') == '25'\nassert solution('5 89 98') == '10'\nprint('all tests passed')\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '18'"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 10') == '18'\nassert solution('3\\n17 144\\n121 121\\n89 98') == '265'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 10\n5 8\n\"\"\") == \"18\"\nassert solution(\"\"\"\n3\n17 144\n121 121\n89 98\n\"\"\") == \"265\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '18'\nassert solution('3') == '265'\nassert solution('5') == '25'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == \"0.50000000\"\nassert solution('5 5') == \"12.50000000\"\nassert solution('3 4') == \"0.50000000\"\nassert solution('5 5') == \"12.50000000\"\nassert solution('4 5') == \"0.50000000\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0.5'\nassert solution('4 3') == '0.5'\n\nfrom math import pi\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 3\n0 0\n1 1\n2 1\n1 0\n\"\"\") == \"0.50000000\"\nassert solution(\n\"\"\"\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n\"\"\") == \"12.50000000\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('5 5') == '12.5'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n0 0\n1 1\n2 1\n1 0\n''') == '0.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0.5\"\nassert solution(\"5 5\") == \"12.5\"\nprint('Congratulations!')\nprint('Your solution ({}) is correct!'.format(solution(input())))\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 0 4\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''4 0 3\n0 1\n1 2\n2 3\n1\n''') == '1'\nassert solution('''5 0 4\n0 2\n1 3\n2 4\n1\n''') == '1'\nassert solution('''4 0 3\n0 1\n1 2\n2 3\n1\n''') == '2'\n\n'''\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 2\") == \"2\""
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n\"\"\""
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 1 3\n0 1\n1 2\n2 3\n1''') == '2'\nassert solution('''4 0 4\n0 2\n0 1\n2 1\n2 3\n\nSample Input 3:\n5 3 3\n0 1\n0 2\n1 1\n1 2\n2 1\n2 2\n1 3\n\nSample Output 3:\n1\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 3') == '2'\nassert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 0 4\\n0 2\\n0 1\\n2 1\\n2 3\\n') == '1'"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1 3') == '2'\nassert solution('4 0 4') == '1'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1\\n') == '6'\nassert solution('2 2 2\\n') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 1\n''') == '6'\nassert solution('''\n2 2 2\n''') == '30'\nassert solution('''\n3 3 3\n''') == '84'\nassert solution('''\n1 1 1\n''') == '0'"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('100000000000') == '0'"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n') == '6'\nassert solution('2 2 2\\n') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\nassert solution('1 1 1') == '1'\nassert solution('1 2 2') == '0'\nassert solution('2 2 1') == '2'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"1 2\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n2020 2020 2020\"\"\") == \"2021 2020 2020\"\nassert solution(\"\"\"2\n1 9999999\"\"\") == \"impossible\"\nassert solution(\"\"\"4\n2020 2020 2020 2020\"\"\") == \"2022 2020 2020 2020\"\n\nimport sys\nprint(solution(sys.stdin.read()))"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 9999999\n''') == 'impossible'\n\nassert solution('''\n1 9999999\n''') == 'impossible'\n\nassert solution('''\n0\n''') == 'impossible'\n\nassert solution('''\n0\n''') == 'impossible'\n\nassert solution('''\n0\n0\n''') == 'impossible'"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 9999999') == 'impossible'\nassert solution('2 7999999') == 'impossible'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == \"impossible\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"impossible\"\nprint(solution(input_))"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'impossible'\nassert solution('4') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2021 2020 2020\"\nassert solution(\"2\") == \"1 9999999\"\nassert solution(\"\") == \"impossible\"\nassert solution(\"2\") == \"impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 'impossible'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"2\\n4\\n\") == \"0\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1\\n') == '1'\nassert solution('3 1\\n') == '1'\nassert solution('6 8\\n') == '1'\nassert solution('1 3\\n') == '1'\nassert solution('1 8\\n') == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n') == '0'\nassert solution('1\\n4\\n') == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n3') == '0'\nassert solution('3\\n2') == '2'\nassert solution('10\\n100') == '10'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''25\n70\n75''') == '1'\nassert solution('''66\n69\n95''') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '1'\nassert solution('90') == '1'\nassert solution('100') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 100\\n0\\n\") == \"1\"\nassert solution(\"3 10\\n6 8\\n\") == \"2\"\nassert solution(\"3 10\\n6 8\\n\") == \"2\"\nassert solution(\"7 10\\n8 9\\n\") == \"1\"\nassert solution(\"7 10\\n8 9\\n\") == \"1\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''60\n95\n70\n12\n80\n75\n34\n10''') == '1'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n5\n5\n7\n1\n2''') == \"2\"\nprint(\"%s ms\" % (sum(map(float, (__name__, solution(__doc__), solution.__module__))) * 1000))\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 0\\n>@\\n>~\\n\") == \"2\"\nassert solution(\"3 5 1\\n>>@<<\\n>~#~<\\n\") == \"4\"\nassert solution(\"3 2 2\\n>>@<<\\n>~#~<\\n\") == \"begin repairs\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 0\") == \"2\"\nassert solution(\"3 5 1\") == \"4\"\n\nprint(solution('''3 4 2\n>@<\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2 0\n>>@<<\n>~#~<\n>>>>~\n''') == '2'\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n>>>>~\n''') == '4'\nassert solution('''\n2 1 0\n>@\n>~\n''') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n>@\n>~\n''') == '2'\nassert solution('''2\n>~#~<\n''') == '4'\nassert solution('''3\n>>@<<\n''') == 'begin repairs'\nassert solution('''4\n>>~#~<\n''') == 'begin repairs'\nassert solution('''5\n>>~#~<\n''') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2 0\n>@\n>~\n''') == '2'\n\nassert solution('''3 3 1\n>>@<<\n>~#~<\n''') == '4'\n\nassert solution('''3 5 1\n>@<<\n>~#~<\n>>>>~\n''') == '2'\n\nassert solution('''5 6 0\n>@>>\n>~#~<\n>>~#~<\n>~#~<\n>#~<<\n>#~<\n>>~#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<\n>#~<"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nprint(solution('''\n3 3 0\n>@<\n>~#~<\n'''))\nassert solution('''\n1 2 0\n>@<\n>~#~<\n''') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('6 6 1') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2 2 0\n>@\"\"\") == \"2\"\n\nassert solution(\"\"\"3 5 1\n>>@<<\"\"\") == \"4\"\n\nassert solution(\"\"\"4 8 2\n>>@@\n>~#~<\n>>~>\n>~>\n>~<\n>~#~\n>~<\"\"\") == \"begin repairs\"\n\nassert solution(\"\"\"3 3 1\n>>@@\n>~#~<\n>~>\n>~<\"\"\") == \"begin repairs\"\n\nassert solution(\"\"\"4 4 0\n>>@@\n>~#~<\n>~>\n>~<\"\"\") == \"begin repairs\""
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5+25=30''') == '5+025=30'\nassert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\nassert solution('''2+5+3=8''') == '2+5+3=8'\nassert solution('''120+144=152''') == '120+144=152'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n\n--------------------------------------------------------------\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\n------------------------------------\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\""
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n20=1\n101=2\n5=10\n''') == '''5=2\n101=20\n10=5\n'''"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    73=65\n    ''') == '73+65=128'\nassert solution('''\n    58=58\n    ''') == '58+58=100'\nassert solution('''\n    14=89\n    ''') == '14+89=100'\nassert solution('''\n    -90=90\n    ''') == '-90+90=110'\nassert solution('''\n    -93=93\n    ''') == '-93+93=97'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n143175=120\n''') == '14+31+75=120'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('4\\n1\\n3\\n4\\n1\\n5\\n2\\n4\\n') == '-1'\nassert solution('4\\n1\\n3\\n4\\n1\\n5\\n2\\n4\\n') == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n5\\n2\\n3\\n4\\n1\\n5\\n') == '1 2'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\") == \"1 2\"\nprint(solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n\"))\nprint(solution(\"8\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n8\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n1\\n5\\n2\\n4\\n3\\n2\\n1\\n2\\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '1 2'\nassert solution('8') == '-1'\nassert solution('8') == '1 2'\nassert solution('8') == '-1'\nassert solution('8') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\n\nassert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\n\nassert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'\n\nassert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '-1'\n\nassert solution('''\n8\n1\n2\n3\n4\n5\n6\n7\n1\n''') == '1 2'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '-1'\nassert solution('9') == '1 2'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 2'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n3\\n2\\n2\\n1\\n5\\n1\\n6\\n7\\n2\\n2') == '1 2'\nassert solution('1\\n4\\n3\\n2\\n2\\n1\\n5\\n1\\n6\\n7\\n2\\n2') == '1 2'\nassert solution('1\\n4\\n3\\n2\\n2\\n1\\n5\\n1\\n6\\n7\\n2\\n2') == '-1'\nassert solution('1\\n3\\n2\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"11000\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"111\") == \"0\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1101\"\n) == \"1\"\n\nassert solution(\n    \"0\"\n) == \"0\"\n\nassert solution(\n    \"1111\"\n) == \"2\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1101\n1''') == '1'\nassert solution('''1110\n0''') == '1'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1''') == '1\\n0\\n2\\n'\nassert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1''') == '3\\n0\\n2\\n'\nassert solution('''3 2\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1''') == '0\\n3\\n2\\n'\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1''') == '3\\n0\\n2\\n'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2''') == '1'\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3''') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '1'\nassert solution('2 1') == '0'\nassert solution('5 2 1 3 4 1') == '1'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1\\n0\\n2\\n'\nassert solution('''\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1\n''') == '3\\n0\\n2\\n'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1 3 1') == '0'\nassert solution('3 3 1 3 1') == '2'\nassert solution('3 1 3 1') == '2'\nassert solution('3 1 3 1') == '2'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('2 1') == '0'\nassert solution('3 3') == '2'\nassert solution('2 2') == '1'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2''') == '1'\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1''') == '2'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 4') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n3 1 3 1') == '1\\n0\\n2\\n3\\n'\nassert solution('1 1\\n2 2\\n3 3\\n') == '3\\n'\nassert solution('3 1\\n1 2\\n3 3\\n') == '2\\n'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\") == \"4.000000\"\nassert solution(\"4 2\") == \"3.666666\"\n\n-- Python code --"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '3.333333'\nassert solution('4 1') == '4.000000'\nassert solution('4 2') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"1.666667\"\nassert solution(\"6 2\") == \"2.50000\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1\\n1 2 3 4') == '4.000000'\nassert solution('4 2\\n2 4 3 4') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"4.000000\"\nassert solution(\"4 2\") == \"3.666666\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2.0', f\"expected {'2.0'}, got {solution('2 2')}\"\nassert solution('4 3') == '2.0', f\"expected {'2.0'}, got {solution('4 3')}\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1') == '4.000000'\nassert solution('4 2') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 1\n1 2 3 4''') == '4.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1\") == \"4.000000\"\nassert solution(\"4 2\") == \"3.666666\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\") == \"0.750\"\nassert solution(\"\"\"\n1 1 1 1\n2.0 2.0\n2.0 2.0\n2.0 2.0\n\"\"\") == \"2.000\"\nassert solution(\"\"\"\n3 2 1\n1.0 1.0\n1.0 1.0\n1.0 1.0\n\"\"\") == \"1.000\""
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('1 1 5 5') == '1.25'\nassert solution('3 3 5 5') == '1.25'\nassert solution('10 10 5 5') == '1.25'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\n\n\"\"\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\nassert solution('''\n3 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n2.0 0.0\n0.0 2.0\n''') == '0.125'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0''') == '0.750'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 4 5\n4.0 2.0\n4.0 2.0\n4.0 2.0\n''') == '0.000'\nassert solution('''\n3 3 4 5\n4.0 2.0\n4.0 2.0\n4.0 2.0\n''') == '0.000'\nassert solution('''\n3 3 4 5\n2.0 2.0\n4.0 2.0\n4.0 2.0\n''') == '0.333'\nassert solution('''\n3 3 4 5\n2.0 2.0\n4.0 2.0\n4.0 2.0\n''') == '0.333'\nassert solution('''\n3 3 4 5\n2.0 2.0\n4.0 2.0\n4.0 2.0\n''') == '0.333'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\nassert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\nprint('all tests passed')\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n\"\"\") == \"0.750\"\nassert solution(\"\"\"\n3 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n\"\"\") == \"0.625\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 5 5\\n2.0 2.0\\n4.0\\n1.0 0.0\\n0.0 1.0\\n1.5 0.0\\n0.0 2.0\") == \"0.625\"\n\nassert solution(\"3 2 6 6\\n2.0 2.0\\n1.0 1.0\\n0.0 2.0\\n1.0 1.0\\n2.0 1.0\\n0.0 2.0\\n2.0 2.0\\n1.0 2.0\\n0.0 1.0\\n1.0 2.0\\n2.0 2.0\\n1.0 2.0\\n2.0 2.0\\n1.0 2.0\\n2.0 1.0\\n0.0 1.0\\n1.0 1.0\\n0.0 2.0\\n1.0 1.0\\n2.0 1.0\\n0.0 2.0\\n2.0 2.0\") == \"0.125\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2 4\n0 3 6\n4 0 3\n''') == \"2\"\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == \"37\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 4\\n0 3 6\\n4 0 3\\n') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 4') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '37'\nassert solution('''\n3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 4\n0 3 6\n4 0 3\n\"\"\") == '2'\n\n\"\"\"\n< 0.7 sec\n10.9\n0.7\n\"\"\"\"\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n') == '2'\n\n'''"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"37\"\nassert solution(\"10 10\") == \"137\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"3 3\") == \"37\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n1234\n1 4\n1 4\n1 4\n''') == '10'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '10'\nassert solution('8 6') == '8'\nassert solution('13 11') == '12'"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3 4\") == \"6\"\nassert solution(\"1 1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n4 3\n1234\n1 4\n1 4\n1 4\n'''\n) == '10'\nassert solution(\n'''\n4 4\n1234\n1 1\n1 2\n1 3\n1 4\n'''\n) == '1'\nassert solution(\n'''\n5 5\n5678\n1 1\n1 2\n1 3\n1 4\n1 5\n'''\n) == '9'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n1234\n1 4\n1 4\n1 4\n''') == '10'\nassert solution('''\n4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == '1'"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '10'\nassert solution('4 4') == '16'\n\nfrom collections import deque\n\nclass Node:\n    def __init__(self, val):\n        self.val = val\n        self.left = None\n        self.right = None"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '10'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\") == \"1\\n4\\n9\\n16\\n\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"10\"\nassert solution(\"4 4\") == \"14\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '10'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\nassert solution('''3 4 5\n1 3\n3 4\n2 4\n4 5\n''') == '0'\nassert solution('''3 4 5\n1 3\n2 4\n3 5\n''') == '1'\nassert solution('''8 3 2\n1 3\n2 4\n3 6\n4 7\n5 8\n6 9\n7 10\n8 11\n9 12\n''') == '2'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == '1'\nassert solution('5 2 4') == '1'"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\") == \"1\"\nassert solution(\"5 2 4\") == \"1\"\nassert solution(\"10 2 4\") == \"2\"\nassert solution(\"100 2 4\") == \"2\"\nassert solution(\"10 2 5\") == \"0\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5 2\n1 3\n3 4\n2 4\n4 5''') == '1'\nassert solution('''4 5 2\n1 3\n3 4\n2 4\n4 5''') == '2'\nassert solution('''4 5 2\n1 3\n3 4\n2 4\n4 5''') == '2'\nassert solution('''4 5 2\n1 3\n3 4\n2 4\n4 5''') == '1'"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 2 3\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"3 4\") == \"2\"\nassert solution(\n    \"5 2 4\\n\"\n    \"1 3\\n\"\n    \"3 4\\n\"\n    \"2 4\\n\"\n    \"4 5\") == \"1\"\nassert solution(\n    \"5 2 4\\n\"\n    \"1 2\\n\"\n    \"2 4\\n\"\n    \"3 4\\n\"\n    \"4 5\") == \"1\"\nassert solution(\n    \"5 2 4\\n\"\n    \"1 2\\n\"\n    \"2 4\\n\"\n    \"3 4\\n\"\n    \"4 5\") == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\nprint('all tests passed')"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 4\\n1 3\\n3 4\\n2 4\\n4 5') == '2'\nassert solution('2 1 3\\n1 3\\n1 3') == '1'\nassert solution('5 2 5\\n1 3\\n4 4\\n2 5\\n4 5') == '1'\nassert solution('5 2 4\\n1 3\\n3 4\\n2 4\\n4 5') == '0'\nassert solution('1 1 3\\n3 3\\n3 3') == '0'\n\"\"\"\n\nimport collections\nimport re\nfrom typing import List\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4 2 3\\n1 3\\n2 3\\n3 4\\n') == '2'\nassert solution('2\\n5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\\n') == '1'"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0 10000\n''') == 'yes'\nassert solution('''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n1\n9999 0 10000 0 0 1\n\"\"\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0 10000\\n\") == \"no\"\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\nSample Output 2:\") == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0''') == 'no'\nassert solution('''2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\nSample Output 2:\nyes''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"no\"\nassert solution(\"2\") == \"no\"\nassert solution(\"3\") == \"yes\"\nassert solution(\"4\") == \"yes\""
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000') == 'no'\nassert solution('2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\nSample Output 2:') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"no\"\nassert solution(\"2\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\n\nassert solution('''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'yes'\nassert solution('2') == 'no'\nassert solution('3') == 'no'"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n''') == 'no'\n\n'''\n--- Part Two ---\nGarry and Jerry have some trouble. The sky is too much magnetic for them.\n\nYou need to make a program that records the cloud cover of the sky.\n\nGarry and Jerry are both watching the sky. As they look at it, a zebra appears on the screen, with a \u201csky\u201d in the middle, and a panda face at the bottom.\n\nThe screen has $x$ pixels wide, and $y$ pixels tall.\n\nGarry and Jerry are reading the screen.\n\nThe pixels have a color.\n\nGarry is writing down the pixel coordinates for the set of non-intersecting triangles in the sky.\n\nJerry is reading the screen.\n\nJerry is going to look at the sky. For each pixel in the screen, Jerry is going to record the color of that pixel.\n\nIf two pixels are in the same triangle, they should have the same color.\n\nJerry can see only the triangle that contains the center pixel. A triangle is defined by its vertexes (vertices) and its color (color). A triangle is non-degenerate if it is not entirely in the triangle with center pixel. The area of a triangle is the sum of its edges.\n\nGarry and Jerry will write down the center pixel and their color.\n\nJerry is going to look at the sky.\n\nIf they saw the same cloud cover, then you are all set!\n\nGiven the pixel coordinates of the center pixel, its color, and the pixel coordinates of all the other pixels in the screen, are able to determine the cloud cover. Print \u201cyes\u201d if they saw the same cloud cover, or \u201cno\u201d if they did not.\n\nInput\nThe first line of input contains the integer $n$, $(0 \\le n \\le 100000)$, the number of triangles. Each of the next $n$ lines contains $6$ space separated integers, $x_1$, $y_1$, $x_2$, $y_2$, $x_3$, and $y_3$. These are Garry\u2019s triangles. The next line contains the integer $m$, $(0 \\le m \\le 100000)$, the number of triangles. Each of the next $m$ lines contains $6$ space separated integers, $x_1$, $y_1$, $x_2$, $y_2$, $x_3$, and $y_3$. These are Jerry\u2019s triangles. The absolute value of the $x$ and $y$ coordinates are at most $10^9$.\n\nOutput\nPrint \u201cyes\u201d if Garry and Jerry saw the same cloud cover, or \u201cno\u201d if they did not.\n\nInput\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\nSample Output 1\nyes\n\nInput\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\nSample Output 2\nno\n\n'''\nfrom collections import defaultdict"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"4 3\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n1 2\n2 3\n1 3\n1 4\n''') == 'YES'\n\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'NO'\n\nassert solution('''\n4 2\n1 2\n1 3\n''') == 'YES'\n\nassert solution('''\n5 2\n1 2\n1 3\n''') == 'NO'\n\nassert solution('''\n4 1\n1 2\n''') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(input_lines=\"\"\"\n3 3\n1 2\n2 3\n1 3\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'YES\\n1 3\\n2 1\\n3 2'\nassert solution('4 3') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2\n2 3\n1 3\n''') == 'YES'\nassert solution('''4 3\n1 2\n1 3\n1 4\n''') == 'NO'\nprint(solution('''5 4\n3 1\n3 2\n2 4\n'''))"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n1 2\n2 3\n1 3\n''') == 'YES'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'NO'\nassert solution('''\n5 5\n1 2\n1 3\n1 4\n2 4\n2 3\n''') == 'YES'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n3 4') == 'YES\\n1 3\\n2 1\\n4 2'\nassert solution('3 3\\n1 2\\n2 3\\n1 3') == 'NO'"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2\n2 3\n1 3\n3 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1 4\n2 3\n3 4\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3 3\\n'\n    '1 2\\n'\n    '2 3\\n'\n    '1 3\\n'\n) == 'YES\\n'\nassert solution(\n    '4 3\\n'\n    '1 2\\n'\n    '1 3\\n'\n    '1 4\\n'\n) == 'NO\\n'\n\n---"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"YES\\n1 3\\n2 1\\n\"\nassert solution(\"4 3\") == \"NO\\n\"\nassert solution(\"5 5\") == \"YES\\n\""
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'inconsistent'\nassert solution('5 5') == 'consistent'\n'''\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'consistent'\nassert solution() == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'consistent'\nassert solution('''\n    2 3\n    0 > 1\n    1 = 2\n    0 = 2\n''') == 'inconsistent'\n\nassert solution('''\n    5 5\n    0 = 1\n    1 = 2\n    3 = 4\n    0 > 3\n    1 > 4\n''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''\n3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'consistent'\nassert solution('2 3') == 'inconsistent'\nassert solution('4 5') == 'inconsistent'\nassert solution('3 3') == 'consistent'\n\"\"\""
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2''') == \"inconsistent\"\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\nSample Output 2:\nconsistent''') == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"0 > 1\\n\"\n    \"1 = 2\\n\"\n    \"0 = 2\\n\"\n    ) == \"inconsistent\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'inconsistent'\nassert solution('5 5') == 'inconsistent'"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 0 0\n1 1 0\n0 0 0\n0 0 1''') == '1.57079633'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1') == '1.57079633'\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0') == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3.141592653589793'\nassert solution('4') == '0.7853981633974483'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1.0\"\nassert solution(\"4\") == \"1.57079633\""
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\nassert solution('''4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '41938.65135885'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n0 0 0\n1 1 0\n0 0 0\n\"\"\") == '1.57079633'\nassert solution(\"\"\"\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n\"\"\") == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\nassert solution('''\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '41938.65135885'\nassert solution('''\n5\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n0 1 0\n''') == '4.732050807568877'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n\") == \"1.57079633\"\nassert solution(\"4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n\") == \"41938.65135885\"\nassert solution(\"2\\n1\\n2\\n\") == \"0\"\nassert solution(\"2\\n1\\n2\\n3\\n4\\n\") == \"0\"\nassert solution(\"4\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n\") == \"1\"\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\nassert solution('''\n4\n-100 0 0\n10 0 10\n-10 -10 -10\n0 0 0\n''') == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.57079633'\nassert solution('2') == '4.7123984e-10'\nassert solution('3') == '41938.65135885'\nassert solution('4') == '2.87656586e-10'\nassert solution('5') == '4.7123984e-10'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('15\\nqwertyuiop') == '2'\nassert solution('11\\nqwertyuiop') == '3'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n\") == \"1\"\nassert solution(\"5\\n\") == \"2\"\nassert solution(\"8\\n\") == \"1\"\nassert solution(\"10\\n\") == \"2\"\nassert solution(\"10\\n\") == \"2\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11\\n\") == \"3\"\nassert solution(\"18\\n\") == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11\\n\") == \"3\", \"First\"\nassert solution(\"18\\n\") == \"4\", \"Second\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sabcabcfabc') == '3'\nassert solution('trutrutiktiktappop') == '4'"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n11\nsabcabcfabc\n''') == '3'\nassert solution('''\n18\ntrutrutiktiktappop\n''') == '4'\n'''\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n11\nsabcabcfabc\n''') == '3'\nassert solution('''\n18\ntrutrutiktiktappop\n''') == '4'\n'''"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('10') == 'huge'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\\n5 1 6 3 2 4\\n4 6 5 1 3 2\"\n    ) == \"5\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3\n2 3 1\n3 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n5 1 6 3 2 4\n4 6 5 1 3 2\n\"\"\") == \"5\"\nassert solution(\"\"\"10\n4 4 3 4 5 4 2 4 5 2 4\n2 3 2 4 1 4 3 5 5 4\n3 4 1 5 4 4 3 2 4\n4 4 2 4 4 2 2 4 4\n5 5 3 5 4 3 2 5 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 6 5 1 2\\n4 6 5 1 3 2') == '2'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n3 1 2 6 5 4\\n5 1 2 3 6 4') == '1'"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == 'huge'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3 1 2\\n3 1 2') == '2'\nassert solution('6\\n5 1 6 3 2 4') == '5'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 3 1\n3 1 2\n''') == '2'\n\nassert solution('''\n5\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\n\nassert solution('''\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '6'\n\nassert solution('''\n2\n2 3 1\n3 1 2\n''') == 'huge'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"huge\"\nassert solution(\"1\") == \"huge\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2'\nassert solution('3 1') == '4'\nassert solution('4 2') == '2'\nassert solution('5 2') == '5'\nassert solution('7 2') == '8'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    1 1\n    0 10\n    0 10\n    ''') == '4'\nassert solution('''\n    1 1\n    0 10\n    0 10\n    ''') == '4'\nassert solution('''\n    1 1\n    0 10\n    0 10\n    0 40\n    ''') == '9'\nassert solution('''\n    5 1\n    0 10 20\n    0 10\n    0 10\n    0 40\n    ''') == '8'"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '6 1\\n'\n    '0 10 20\\n'\n    '0 10\\n'\n    '0 40\\n'\n    '0 50'\n) == '9'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '4'\nassert solution('6 1') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '4'\nassert solution('6 1') == '9'\nprint(solution(input))\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 1\n0 10 20\n0 10\"\"\") == \"4\"\nassert solution(\"\"\"\n3 1\n0 10 20\n0 10\"\"\") == \"4\"\nassert solution(\"\"\"\n5 1\n0 10 20 30 40 50\n0 40\n10 0\n10 10\"\"\") == \"6\"\nassert solution(\"\"\"\n5 2\n0 10 20 30 40 50\n0 40\n10 0\n10 10\"\"\") == \"10\"\nassert solution(\"\"\"\n5 3\n0 10 20 30 40 50\n0 40\n10 0\n10 10\"\"\") == \"9\""
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n0 10 20\n0 40\n''') == '4'\nassert solution('''\n3 1\n0 10 20\n0 10\n''') == '3'\n'''\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3\n2\n1\n0''') == '4'\nassert solution('''5\n1\n2\n1\n1\n2''') == '7'\nassert solution('''2\n1\n2''') == '2'\nassert solution('''8\n1\n2\n2\n3\n4\n4\n5\n5\n6\n6\n6\n6''') == '8'\nassert solution('''4\n1\n2\n3\n4''') == '3'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '4'\nassert solution('3 1') == '4'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n2\n1 10 20\n0 10\n''') == '4'\nassert solution(\n'''\n4\n1 10 20\n0 10\n''') == '8'\nassert solution(\n'''\n4\n1 10 20\n0 10\n''') == '8'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\n\ninput: \nconcat(shuffle([1,2]),shuffle([1,2]))\nshuffle([1,2,1,2])\nSample Output 3:\nequal\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''concat(shuffle([1,2]),shuffle([1,2]))''') == 'not equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"equal\"\nassert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"concat([3,2,1],[4,5,6])\") == \"not equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"concat([3,2,1],[4,5,6]\") == \"equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\"\nassert solution(\"concat([3,2,1],[4,5,6])\") == \"equal\"\nassert solution(\"shuffle([1,2])\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"concat([3,2,1],[4,5,6])\") == \"not equal\"\nassert solution(\"sorted([1,2,3,4,5,6])\") == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nprint('all tests passed')\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution(\"1 2\") == \"Oh no\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"Oh no\"\n\nassert solution(\"\"\"\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('3 2') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1 2\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"Oh no\"\nassert solution(\"\"\"1 3\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"Oh no\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"3 2\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1 2\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"Oh no\"\nassert solution(\"\"\"1 3\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"1\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Oh no\"\nassert solution(\"1 3\") == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"Oh no\"\n\nassert solution(\"\"\"\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 4\n4 3\n1 2 1 2\n2 3 1 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n3 2\\n1 2 1 2\\n2 3 1 2\\n') == '1'\nassert solution('1 3\\n3 2\\n1 2 1 2\\n2 3 1 2\\n') == 'Oh no'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == 'impossible'\nassert solution('2 4') == '3'\nassert solution('3 4') == '1'\nassert solution('4 4') == 'impossible'\nassert solution('1 2 3') == '2'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 1\n2 3 1\n2 4 1\n1 5 1\n4 5 1''') == 'impossible', 'First'\nassert solution('''3 3 3\n1 1 1\n2 3 1\n3 4 1\n3 5 1\n4 5 1''') == '4', 'Second'\nprint('All Tests Passed')\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution(f\"{stdin}\") == \"3\""
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 2') == '1'\nassert solution('5 5 1') == 'impossible'\nassert solution('10 10 1') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n1 2\n1 3\n2 4\n''') == '1'\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4 5 1\n3 4 1\n1 3 1''') == '3'\nassert solution('''4\n4 5 1\n2 3 1\n4 5 1\n3 4 1''') == '4'\nassert solution('''3\n4 5 1\n2 3 1\n4 5 1''') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '3'\nassert solution('5 5') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n') == '3'\nassert solution('10 10\\n2 3 1\\n2 5 1\\n4 5 1\\n5 5 1\\n6 7 1\\n7 6 1\\n8 8 1\\n9 9 1\\n10 10 1\\n') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 3\n0 0 1\n0 0 1\n0 0 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 'impossible'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"22\") == \"\"\nassert solution(\"2222\") == \"\"\nassert solution
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'no'\nassert solution('3') == 'yes'\nassert solution('4') == 'yes'\nassert solution('5') == 'yes'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1 1 1 3''') == '2'\nassert solution('''22''') == '4'\n'''\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nprint(solution())\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 1\") == \"1\"\nassert solution(\"1\\n1 2 1\") == \"2\"\nassert solution(\"1\\n3 2 1\") == \"3\"\nassert solution(\"5\\n2 3 1 4 5\") == \"5\"\nassert solution(\"6\\n6 7 4\") == \"6\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 1 3\") == \"2\"\nassert solution(\"2\") == \"\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"No quotation\"\nassert solution(\"2\") == \"K-Quotation\"\nassert solution(\"22\") == \"K-Quotation\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"12\") == \"12\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3\"\nassert solution(\"12 34\") == \"12\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('22') == '4'\nassert solution('3') == ''\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1 1 3') == '2', \"Wrong!\"\nassert solution('1') == '1'\nassert solution('22') == '4'\nprint('Awesome!')\n\"\"\""
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 2 3 1') == '2'\nassert solution('1 3 2 1') == '3'\nassert solution('3 1 2 1') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution([3, 1, 5]) == '3'\nprint('Tests finished.')\n\"\"\"\n\nimport unittest\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(t1) == '1'\nassert solution(t2) == '2'\nassert solution(t3) == '0'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 2 3 4\n''') == '2'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 1 2 3 2\\n') == '1'\nassert solution('4\\n1 2 3 4\\n') == '2'\nassert solution('3\\n3 1 2 3\\n') == '2'\nassert solution('2\\n3 1 2 3\\n') == '0'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 5') == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a+b-c') == '- +d-', solution('a+b-c')\nassert solution('a-b+d-c') == '- +d-', solution('a-b+d-c')\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\n''') == '- +d- \\n'\n\nassert solution('''\n\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\n''') == '- +d- \\n'\n\nassert solution('''\n\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\n''') == '+ d- \\n'\n\nassert solution('''\n\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\n''') == '- +d- \\n'\n\nassert solution('''\n\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\nk+n+t+h+m+r+i+s+t+c+a\n''') == '+ d- \\n'"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''a+b-c\na-b+d-c\n''') == '- +d-', 'Solution failed: output does not match'\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"knuth-morris-pratt\") == \"<any>\"\nassert solution(\"a+b-c\") == \"<any>\"\nassert solution(\"a-b+d-c\") == \"<any>\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"- +d-\", \"Wrong Answer\"\nassert stdin == 'knuth-morris-pratt', \"Wrong stdin\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '<empty>'\nassert solution('a+b-c') == '- +d-'\nassert solution('a-b+d-c') == '- +d-'''\n\nstdin = input()\nstdout = input()"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''a+b-c\na-b+d-c\n''') == '+d-'\n\"\"\"\n\nimport re"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''a+b-c\na-b+d-c''') == '- +d-', 'Wrong output'\n\nassert solution('''knuth-morris-pratt\nknuthmorrispratt''') == '<any> <empty>', 'Wrong output'\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\", \"Should return - +d-\"\nassert solution(\"a-b+d-c\") == \" - +d-\", \"Should return - +d-\n\"\"\""
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''a+b-c''') == '- +d-'\nassert solution('''a-b+d-c''') == '- +d-'\nassert solution('''knuth-morris-pratt''') == '<any> <empty>'''\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 0') == '1'\nassert solution('3 0') == '1'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0'\nassert solution('''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11'\n\nprint(solution('''\n5 0\n6 6 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n'''))"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '6'\n\nstdin = \"\"\"\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n\"\"\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n\"\"\"\n) == \"0\\n1\\n3\\n2\\n3\\n5\\n3\\n7\\n9\\n9\\n10\\n\"\n\nassert solution(\n    \"\"\"\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n\"\"\"\n) == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution(\"3 0\\n2 6 6\") == \"3\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"3 0\") == \"1\"\nassert solution(\"3 0\") == \"1\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"3 0\") == \"1\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n4 2\n0 1 1 1\n1 0 1 1\n2 0 1 1\n3 0 1 1\n4 0 1 1\n\"\"\") == \"2\""
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 1\\n0\\n7\\nt 0\"\n) == \"0\\n1\\n3\"\nassert solution(\n    \"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\"\n) == \"11\\n6\\n5\\n9\\n4\\n3\\n7\\n9\\n9\\n10\\n\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2'\n\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6''') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 8') == '2'\nassert solution('5 6') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 8') == '2'\nassert solution('5 6') == '0'\nprint('all tests passed')"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"7 8\\n\"\n    \"1 2 2\\n\"\n    \"1 3 1\\n\"\n    \"1 4 3\\n\"\n    \"2 6 1\\n\"\n    \"2 7 2\\n\"\n    \"3 5 1\\n\"\n    \"4 7 2\\n\"\n    \"5 7 1\"\n) == \"2\\n4 6\"\n\nassert solution(\n    \"5 6\\n\"\n    \"1 2 2\\n\"\n    \"2 3 2\\n\"\n    \"3 5 2\\n\"\n    \"1 4 3\\n\"\n    \"4 5 3\\n\"\n    \"1 5 6\\n\"\n) == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2'\nassert solution('''5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n''') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"0\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '0\\n4 6\\n'''\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n') == '0\\n4 6'\nassert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n') == '2\\n4 6'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n\"\"\") == \"2\\n4 6\"\nassert solution(\"\"\"\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"7 8\\n\"\n    \"1 2 2\\n\"\n    \"1 3 1\\n\"\n    \"1 4 3\\n\"\n    \"2 6 1\\n\"\n    \"2 7 2\\n\"\n    \"3 5 1\\n\"\n    \"4 7 2\\n\"\n    \"5 7 1\\n\"\n) == \"2 4 6\"\n\nassert solution(\n    \"5 6\\n\"\n    \"1 2 2\\n\"\n    \"2 3 2\\n\"\n    \"3 5 2\\n\"\n    \"1 4 3\\n\"\n    \"4 5 3\\n\"\n    \"1 5 6\\n\"\n) == \"0\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\") == \"4\\n5\\n6\\n1\\n2\\n3\"\nassert solution(\"2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\") == \"1\\n2\\n3\\n4\\n5\\n6\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 2') == '5'\nassert solution('1 3') == '6'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3''') == '4\\n5\\n6\\n1\\n2\\n3'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == '4'\nassert solution('6') == '1'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    6\n    1 1\n    1 2\n    1 3\n    2 1\n    2 2\n    2 3\n    ''') == '4 5 6'\nassert solution('''\n    6\n    1 1\n    1 2\n    1 3\n    2 1\n    2 2\n    2 3\n    ''') == '1 2 3 4 5 6'\n'''\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"4\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"1 3\") == \"6\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 2') == '5'\nassert solution('1 3') == '6'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\\n2\\n3\\n4\\n5\\n6\\n\""
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 2') == '5'\nassert solution('1 3') == '6'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"CPCC\") == '1'\nassert solution(\"PPPPCCCC\") == '8'"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nassert solution('PPPPPPPPPPPCC') == '11'\nassert solution('CCCCCCCCCCCCCCCCCCCCCCCCC') == '177'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"8\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"CCCCCCCC\"\n    ) == \"1\"\nassert solution(\n    \"PPPPCCCC\"\n    ) == \"8\"\nassert solution(\n    \"CCCCCCCC\"\n    ) == \"1\"\nassert solution(\n
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CPCPPPCCCCCCCCC\") == \"11\"\nassert solution(\"CCCCCCCCCCCCCCCCCC\") == \"4\"\nassert solution(\"CCCCCCCCCCCCCCCCCCCC\") == \"5\"\nassert solution(\"CCCCCCCCCCCCCCCCCCCCCC\") == \"6\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"CPCC\") == '1'\nassert solution(\"PPPPCCCC\") == '8'"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\""
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"CCCCCCCCC\") == \"5\"\nassert solution(\"CCCC\") == \"2\"\nassert solution(\"CC\") == \"1\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1\\n1 3\\n2 3\\n2') == '1 2 3'\nassert solution('3 2 1\\n1 2\\n2 3\\n2') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 2 1\\n1 2\\n2 3\\n2\\n\") == \"1 2 3\"\nassert solution(\n    \"3 2 1\\n1 2\\n3 2\\n3\\n\") == \"3\"\nassert solution(\n    \"3 3 1\\n1 1\\n2 2\\n2 1\\n2\\n\") == \"1 2\""
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('1 2 3') == '1 2 3'\nassert solution('2 3') == '3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 1\\n1 3\\n2 3\\n2\\n') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '3'"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1 2 3'\nassert solution('3 2 1') == '1 2 3'\nassert solution('3 2') == '2 3'\nassert solution('3 2 2') == '2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 1\n1 3\n2 3\n2\n2\n1\n''') == '1 2 3'\nprint('all tests passed')\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n1 3\\n2 3\\n3\\n') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n') == '3'\nprint('solution() is working.')"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1\\n1 3\\n2 3\\n2') == '1 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n2') == '1 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 3\n2 3\n3\n\"\"\") == \"1 2 3\"\n\nassert solution(\"\"\"\n3 2 2\n1 3\n2 3\n3\n\"\"\") == \"1 3\"\n\nprint('Tests passed')"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 2 1\n1 3\n2 3\n2\"\"\") == \"1 3\"\nassert solution(\"\"\"3 2 1\n1 3\n2 3\n3\"\"\") == \"\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '39', 'First'\nassert solution('5 1') == '4', 'Second'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"4\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '39'\nassert solution('5 1') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"39\"\nassert solution(\"5 1\") == \"4\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n2 4 2 3 4\\n') == '39'\nassert solution('1 1\\n1 0 1 1 1\\n') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n2 4 2 3 4\n''') == '39'\nassert solution('''\n5 1\n1 0 1 1 1\n''') == '4'\nprint(solution('''\n'''))"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '39'\nassert solution('5 1') == '4'\nassert solution('1 0 1 1 1') == '0'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '0'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n1 0 2 3\n''') == '4'\n\nassert solution('''\n2 6\n3 4 4 3 2 4\n''') == '12'\n\nassert solution('''\n3 3\n1 2 3\n''') == '6'\n\nassert solution('''\n4 2\n3 3 3 2\n''') == '18'\n\nassert solution('''\n5 1\n2 3 4 5\n''') == '17'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '39'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1 1 2'\nassert solution('4 6') == '1 1 2'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...\n''') == '1 1 2'\n\nassert solution('''4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 1 2'\n\"\"\"\n\nstdin = \"\"\"3 3\nxx.\nxxx\n...\n\"\"\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nxx.\nxxx\n...\n''') == '1 1 2'\nassert solution('''\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 1 2'\n\nassert solution('''\n3 3\nxxx.\nxxx.\n...\n''') == '0 0 0'\nassert solution('''\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '0 0 0'\n\nassert solution('''\n4 6\nxxx.\nxxx.\n...x\n...x\n''') == '1 1 2'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1 1 2'\nassert solution('4 6') == '1 2 3'"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"1 1 2\"\nassert solution(\"4 6\") == \"1 2 3\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(...) == '1 1 2', \"Wrong solution\""
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\nxx.\nxxx\n...\n''') == '1 1 2'\nassert solution('''\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 2 4'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1 1 2'\nassert solution('3 3') == '1 1 2'\nassert solution('3 4') == '1 1 3'\nassert solution('4 5') == '2 2 3'\nassert solution('5 6') == '3 3 1'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"1 1 2\"\nassert solution(\"4 6\") == \"1 2 3\""
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\nassert solution('2 0 1') == '0'"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == 'indistinguishable'\nassert solution('''3 0 1\n1 2 1\n0 2 0\n0 1 0\n''') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"indistinguishable\"\n\n'''\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 1 2\n1 2 1\n0 2 0\n0 1 0\"\"\") == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\nassert solution('2 0 1') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\nassert solution('2 0 1') == '0'\nassert solution('1 1 1') == 'indistinguishable'\nassert solution('0 0 0') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\nprint(solution())\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 2') == 'indistinguishable'\nassert solution('0 0 0') == '0'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0110\") == \"1111\", \"Wrong answer\"\nassert solution(\"1001\") == \"0111\", \"Wrong answer\"\nassert solution(\"0\") == \"-1\", \"Wrong answer\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('0') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0110\n1001\nSample Input 3:\n0\n1''') == '-1'\n\nassert solution('''0\n1''') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"0\") == \"-1\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nprint(solution(input()))\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\n\n\"\"\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0110\\n1001\") == \"1111\\n0111\\n1110\\n1111\"\n\nassert solution(\"0\") == \"-\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1 0 0 0 1 1 1 0 0 0 1 0 0 1 1 1 1 1 1 0 1 1 0 1 0 1 0 0 0 1 1 0 1 0 1 0 1 0 0 1 1 0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0 0 0 1 1 1 0 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 0 1 1 1 1 1 1 1 0 0 0 0 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 0 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 0 0 1 0 1 0 1 0 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 0 1 0 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 1 1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('\\n') == '+0-'\nassert solution('-0\\n') == '+-0'\nassert solution('+0-\\n') == '+0-'\nassert solution('+0-0\\n') == '+0+0'\nassert solution('+0-0\\n') == '+0-0'"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"+00\", \"Wrong answer\"\nassert solution(\"1\") == \"+01\", \"Wrong answer\"\nassert solution(\"10\") == \"+00\", \"Wrong answer\"\nassert solution(\"-1\") == \"-01\", \"Wrong answer\"\nassert solution(\"100\") == \"+00\", \"Wrong answer\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0\n1\n-1\n0\n-1''') == '+-0+-0+-0'\n\nassert solution('''1\n0\n1\n1\n1''') == '+-0+-0++-0+-0'\n\nassert solution('''1\n1\n1\n1\n1''') == '+-0+-0++-0+-0'\n\nassert solution('''1\n1\n0\n1\n1\n0''') == '+-0+-0+-0++-0'\n\nassert solution('''1\n1\n1\n1\n1''') == '+-0+-0+-0++-0+-0'"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1001\") == \"+000-\", \"Should be +000-\"\nassert solution(\"101\") == \"+00-\", \"Should be +00-\"\nassert solution(\"10\") == \"+0+\", \"Should be +0+\"\nassert solution(\"0\") == \"0+\", \"Should be 0+\"\nassert solution(\"-100\") == \"-0+\", \"Should be -0+\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"+0000\", \"Wrong\"\n\nassert solution(\"1\") == \"+0\", \"Wrong\"\nassert solution(\"1\") == \"+1\", \"Wrong\"\nassert solution(\"-1\") == \"-1\", \"Wrong\"\nassert solution(\"-1\") == \"-0\", \"Wrong\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '+0-0-'\nassert solution('0001') == '+-0+0-'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\"\nassert solution(\"100\") == \"+00-\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('+0000') == '+0000'\nassert solution('+0-') == '+0-'\nassert solution('+1-') == '+1-'\nassert solution('+1-0') == '+1-'\nassert solution('-1+0') == '-1+0'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '12'\nassert solution('''\n1\n1\n2\n''') == '1'\nassert solution('''\n2\n1 2\n''') == '2'\nassert solution('''\n3\n1 1\n2 2\n''') == '1'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 1 1\n1 2\n4 2\n1 3 2\n3 4\n''') == '2'\nassert solution('''\n5 5 3\n1 2\n5 6\n2 5\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\nSample Output 2:\n4\n''') == '4'"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n2 1 1 1\n2 2\n1\n1\n1 2 1\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '2'"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n6 4 2\n1 2\n3 4\n2 3\n2 4\n1 4\n''') == '12'"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 8 3 2\") == \"9\"\nassert solution(\"2 1 1 1\") == \"2\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9', 'Sample Test 1'\nassert solution('''2 1 1 1\n2 2\n1\n1\n1 2 1\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '2', 'Sample Test 2'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 8 3 2\") == \"9\"\nassert solution(\"2 1 1 1\") == \"2\"\nassert solution(\"6 5 3 6\") == \"6\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 8 3 2') == '9'\nassert solution('1 2') == '3'\nassert solution('7 3 4') == '7'\nassert solution('5 6') == '6'\nassert solution('1 3 2') == '5'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\n\nclass Node:\n    def __init__(self, val, nxt):\n        self.val = val\n        self.nxt = nxt\n\nclass LinkedList:\n    def __init__(self):\n        self.head = None\n    \n    def insert(self, val):\n        new_node = Node(val, None)\n        if not self.head:\n            self.head = new_node\n        else:\n            curr_node = self.head\n            while True:\n                if curr_node.nxt:\n                    curr_node = curr_node.nxt\n                else:\n                    curr_node.nxt = new_node\n                    break\n    \n    def print(self):\n        curr_node = self.head\n        while curr_node:\n            print(curr_node.val)\n            curr_node = curr_node.nxt\n    \n    def get_length(self):\n        curr_node = self.head\n        length = 0\n        while curr_node:\n            length += 1\n            curr_node = curr_node.nxt\n        return length\n    \n    def get_min_distance(self, stdin: str):\n        # find distances of all nodes\n        curr_node = self.head\n        distances = []\n        while curr_node:\n            curr_node.dist = abs(curr_node.val)\n            distances.append(curr_node.dist)\n            curr_node = curr_node.nxt\n        \n        # sort the distances\n        distances.sort()\n        \n        # return minimum distance\n        return distances[0]\n\nclass Solution:\n    def solve(self, stdin: str) -> str:\n        input_list = stdin.split(\"\\n\")\n        #print(input_list)\n        first = input_list.pop(0)\n        last = input_list.pop(0)\n        truck_list = input_list\n        truck_list.pop(0)\n        stdin = LinkedList()\n        for i in truck_list:\n            stdin.insert(i)\n        \n        return stdin.get_min_distance(stdin)"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\") == \"2\"\nassert solution(\"1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\") == \"4\"\nassert solution(\"1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\") == \"-1\"\nassert solution(\"1\\n3\\n1\\n1\\n1\\n1\\n1\\n1\") == \"-1\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\") == \"2\"\nassert solution(\"3 4 2\") == \"7\"\nassert solution(\"3 3 R\") == \"2\"\nassert solution(\"3 4 L\") == \"7\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\") == \"2\"\nassert solution(\"3 4 2\") == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3 3 1\\n'\n    '2 2\\n'\n    '1 1 R\\n'\n    '010\\n'\n    '000\\n'\n    '000'\n) == '2'\n\nassert solution(\n    '3 4 2\\n'\n    '2 2\\n'\n    '3 4 R\\n'\n    '2327\\n'\n    '6009\\n'\n    '2112\\n'\n    '3 2 R\\n'\n    '1310\\n'\n    '2101\\n'\n    '1301'\n) == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == -1\nassert solution(\"2 3 1\") == 2\nassert solution(\"3 3 1\") == 2\nassert solution(\"3 3 1\") == 2\nassert solution(\"3 3 1\") == 2\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\nassert solution('''\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\n\n'''"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution(\"\"\"3 3 1\n2 2\n1 1 R\n010\n000\n000\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'\nassert solution('1 2 4 1 1 2 5 1') == '4'"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 3 1') == '1'\nassert solution('6\\n5 7 3 1 1 3') == '6'\nassert solution('6\\n5 7 3 1 1 3') == '6'\nassert solution('4\\n1 1 3 3') == '0'\nassert solution('10\\n10 10 10 10') == '1'"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'\nassert solution('3') == '0'"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 1 2 3\n''') == '2'\n\nassert solution('''\n8\n1 2 4 1 1 2 5 1\n''') == '4'\n\nassert solution('''\n5\n1 2 2 3 4\n''') == '3'\n\nassert solution('''\n5\n1 1 1 1 2\n''') == '1'\n\nassert solution('''\n10\n2 2 4 6 2 5 1 6 8 2\n''') == '1'"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 2 1 2 3\n''') == '2'\nassert solution('''\n8\n1 2 4 1 1 2 5 1\n''') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 2 1 2 3\n''') == '2'\nassert solution('''\n8\n1 2 4 1 1 2 5 1\n''') == '4'"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 2 1 2 3\n''') == '2'\nassert solution('''\n8\n1 2 4 1 1 2 5 1\n''') == '4'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n\"\"\") == \"NE\"\nassert solution(\"\"\"\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n\"\"\") == \"NE\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"NE\"\nassert solution(\"6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\") == \"3 1\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"NE\"\nassert solution(\"2\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"2\"\nassert solution(\"3\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\"\nassert solution(\"4\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"2\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == 'NE\\nNE\\nNE'\n\nassert solution('6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == '3\\n1\\n2\\n4\\n1\\n2\\n3\\n1\\n2\\n3\\n'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\") == \"1\\n2\\n3\\n\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nD 1 3\nD 2 2\nD 1 3\nP 1''') == \"NE\"\nassert solution('''3\nD 3 3\nD 2 2\nD 1 3\nP 1''') == \"2\"\nassert solution('''3\nD 5 6\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4''') == \"1\"\nprint('All test cases passed!')"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"NE\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == 'NE'\nassert solution('''6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '1 3'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'\nassert solution() == '1'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 5 6') == '5'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 5 2 1') == '2'\nassert solution('3 5 1 1') == '5'"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 1') == \"2\"\nassert solution('5 3 1') == \"2\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1 10\") == \"2\"\nassert solution(\"3 3 5 6\") == \"5\"\nassert solution
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1 10') == \"2\"\nassert solution('2 3 5 6') == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 10\") == \"2\"\nassert solution(\"2 3 5 6\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"2\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1 10\") == '2'\nassert solution(\"4 3 5 6\") == '5'\nassert solution(\"3 3 5 5\") == '3'"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1 10\") == \"2\"\nassert solution(\"2 3 5 6\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\nassert solution('0\\n-1.4 -1.0 1.4\\n1.4 1.0 0.0\\n-1.0 -0.4 0.0\\n0.0 -1.0 -0.2\\n0.0 0.0 0.5\\n0.0 0.5 0.5') == '2.0000000000'\nassert solution('8\\n-1.4 -1.0 1.4\\n1.4 1.0 0.0\\n-1.0 -0.4 0.0\\n0.0 -1.0 -0.2\\n0.0 0.5 0.5\\n0.0 0.5 0.5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2.0000000000'\nassert solution('3') == '2.0000000000'\nassert solution('5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2.0000000000'\nassert solution('4') == '4.0000000000'\nassert solution('5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2.0000000000'\nassert solution('2') == '2.0000000000'\nassert solution('3') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == \"2.0000000000\"\nassert solution('1\\n-1.0 1.4\\n-0.4 -1.0\\n-0.1 -0.25\\n-1.2 0.0\\n0.2 0.5') == \"2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n\"\"\") == \"2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n''') == '2.0000000000'\nassert solution('''\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n''') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n-1.0 0.0 1.4') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2.0000000000'\nassert solution('5') == '2.0000000000'\nassert solution('1') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2.0000000000'\nassert solution('5') == '2.0000000000'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    1 9 5\n    ''') == '1'\n\nassert solution('''\n    1 100 10\n    ''') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 1') == '1'\nassert solution('1 2 3') == '3'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 9 5\") == \"1\"\nassert solution(\"1 100 10\") == \"9\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 9 5\") == \"1\"\nassert solution(\"1 100 10\") == \"9\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\nassert solution('4 4 5') == '10'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '5'\nassert solution('1.3 3.3 2.3') == '3.3'\n\"\"\""
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 9 5\n''') == '1'\n\nassert solution('''\n1 100 10\n''') == '19'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1 1\\n1\\n1\\n') == '1\\n1'\n\nassert solution(\n    '4 5\\n4 1 2 4 4\\n4 3 2 1\\n') == '7 4 4 2 4 4 1 4'\n\nprint('All tests passed!')\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"2 2\"\nassert solution(\"3 2\") == \"2 2\"\nassert solution(\"4 5\") == \"1 2\"\nassert solution(\"4 5\") == \"1 2\""
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2 4 4\") == \"7\"\nassert solution(\"4 5\") == \"4 4 2 4 4\""
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n1\n1\n''') == '1\n\nassert solution('''\n4 5\n4 1 2 4 4\n4 3 2 1\n''') == '7\n'''\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('1') == '1'\nassert solution('1 1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('3 3 3 3') == '3'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n1\n1\n''') == '1'\nassert solution('''\n4 5\n4 1 2 4 4\n4 3 2 1\n''') == '7'\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n1\n1\nSample Output 3:\n7\n4 4 2 4 4 1 4\n''') == '7\\n4 4 2 4 4 1 4'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 20 4\n''') == '21'\nassert solution('''\n10 10 5 0\n''') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\n\n\"\"\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 10 3 2\n''') == '4'\nassert solution('''\n10 10 5 0\n''') == '10'"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 10, 3, 2]) == \"4\"\nassert solution([10, 10, 5, 0]) == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 10 3 2\n''') == '4'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10 3 2') == '4'\nassert solution('2 10 5 0') == '10'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 7') == '5'\nassert solution('1 1 5') == '4'\nassert solution('1 1 0') == '0'\nassert solution('1 1 3') == '4'\nassert solution('2 3 3') == '3'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 20\n0123456789\n''') == '10'\nassert solution('''6 100 9294\n23689\n''') == '111'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1 20\n0123456789\n''') == '10'\n\nassert solution('''\n6 100 9294\n23689\n''') == '111'\n\nassert solution('''\n5 5 10\n1234\n''') == '5'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"10\"\nassert solution(stdin) == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n2 1 20\n0123456789\n\"\"\"\n) == \"10\"\nassert solution(\n\"\"\"\n4 2 4\n123\n\"\"\"\n) == \"11\"\nassert solution(\n\"\"\"\n1 2 2\n1\n\"\"\"\n) == \"4\""
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string = '2 1 20') == '10'\nassert solution(input_string = '6 100 9294') == '111'\nprint(solution())\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(f\"2 1 20\") == \"10\"\nassert solution(f\"6 100 9294\") == \"111\""
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1 20\n0123456789\n''') == '10'\nassert solution('''\n6 100 9294\n23689\n''') == '111'\nassert solution('''\n100 90\n12345\n''') == '3'\nassert solution('''\n25 23\n8765\n''') == '4'\nassert solution('''\n1 0\n111\n''') == '4'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 2.666667\"\nassert solution(\"\"\"\n1\n2 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.500000 3.666667\"\nassert solution(\"\"\"\n1\n2 S 4\n2 S 2\n3 R 2\n4 S 2\n5 R 1\n\"\"\") == \"0.500000 4.666667\"\nassert solution(\"\"\"\n1\n2 R 4\n2 R 2\n3 S 2\n4 R 2\n5 S 1\n\"\"\") == \"0.500000 4.666667\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 2.666667'\nassert solution('10 4\\n5 R 1\\n7 R 3\\n9 S 1\\n5 S 4\\n6 S 2\\n7 R 2\\n7 S 1\\n7 R 2\\n7 S 2\\n8 R 2\\n8 S 1\\n6 R 2\\n6 S 1\\n5 R 1\\n4 R 3\\n4 S 2\\n4 R 2\\n5 R 1\\n6 R 1\\n5 S 1\\n4 R 1\\n4 S 2\\n4 R 2\\n3 R 2\\n3 R 2\\n5 S 4\\n3 S 2\\n3 R 2\\n3 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n3 S 2\\n3 S 2\\n4 R 2\\n5 S 4\\n4 R 2\\n3 R 2\\n3 S 2\\n5 R 1\\n3 R 2\\n4 R 2\\n4 S 2\\n5 S 4\\n4 R 2\\n3 R 2\\n4 R 2\\n4 R 2\\n3 R 2\\n4 R 2\\n4 R 2\\n5 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n5 R 1\\n4 R 3\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n5 R 1\\n4 R 3\\n4 R 2\\n5 R 1\\n4 R 2\\n5 R 1\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n5 R 1\\n4 R 3\\n4 S 2\\n4 R 2\\n4 R 2\\n5 R 1\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n5 S 4\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n5 R 1\\n4 R 3\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n5 S 4\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n5 R 1\\n4 R 3\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n5 R 1\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n5 R 1\\n4 R 3\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n5 R 1\\n4 R 3\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n5 R 1\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 S 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 S 2\\n4 R 2\\n4 R 2\\n4 R 2\\n4"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 2.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('10 10') == '1.500000 3.666667'\nassert solution('1') == '0.000000'\nassert solution('1 0') == '0.000000'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"1.500000 2.666667\"\nassert solution(\"10 0\") == \"0.0\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.50000 2.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.50000 3.666667'\nprint('all tests passed')"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.5 2\"\nassert solution(\"\"\"\n0\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n\"\"\") == \"1.5 2\"\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 2.666667'\nassert solution('''5 2\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1''') == '1.500000 3.666667'"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '3'\nassert solution('4 5') == '3'\nassert solution('10010') == '-1'\nassert solution('01010') == '-1'\nassert solution('10101') == '-1'"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6') == \"3\"\nassert solution('4 5') == \"3\"\nprint(solution(input()))\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 6\\n101010\\n111001\\n101001\") == \"3\"\nassert solution(\"4 5\\n10010\\n01010\\n10101\\n01001\") == \"3\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6\") == \"3\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"10010\") == \"4\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 5\n0\n1\n0\n0\n''') == '3'\nassert solution('''\n3 3\n10\n0\n1\n''') == '4'\nassert solution('''\n5 5\n1\n0\n0\n0\n0\n''') == '-1'\nassert solution('''\n3 3\n0\n1\n0\n''') == '-1'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 6') == '3'\nassert solution('4 5') == '3'"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6') == '3'\nassert solution('4 5') == '3'\n\"\"\"\nimport itertools"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"3\", \"first\"\nassert solution(\"4 5\") == \"3\", \"second\"\n\n\"\"\""
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 6') == '3'\nassert solution('4 5') == '3'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 4') == '-1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1'\nprint('Success: test_1')\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '3 1'\n\nassert solution('''\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n-1 -1\n''') == '3 -1'\n\nassert solution('''\n4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('4') == '3 4'"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('4') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n0 1') == '-3 -1'\nassert solution('2\\n0 1') == '3 1'\nassert solution('5\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('4') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n0 1') == '-3 -1'\nassert solution('5\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1'\nassert solution('''\n4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n-4 -1\n-1 -1\n\"\"\") == \"-3 -1\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10\n-4 -8\n-4 -10\n-6 -6\n-5 -1\n-4 -9\n-3 -7\n-6 -8\n-9 -4\n-5 -8\n-6 -7\n0 -1\n0 -2\n1 1\n0 1\n\"\"\") == \"3 4\"\n\nassert solution(\"\"\"\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\"\"\") == \"3 -1\"\n\nassert solution(\"\"\"\n7\n-6 7\n4 -6\n-4 4\n4 -1\n-2 -1\n-6 -3\n0 3\n-6 -1\n\"\"\") == \"3 -1\"\n\nassert solution(\"\"\"\n15\n-4 -8\n-4 -10\n-6 -6\n-5 -1\n-4 -9\n-3 -7\n-6 -8\n-9 -4\n-5 -8\n-6 -7\n0 -1\n0 -2\n1 1\n0 1\n1 2\n0 3\n\"\"\") == \"3 4\"\n\nassert solution(\"\"\"\n10\n-4 -8\n-4 -10\n-6 -6\n-5 -1\n-4 -9\n-3 -7\n-6 -8\n-9 -4\n-5 -8\n-6 -7\n0 -1\n0 -2\n1 1\n0 1\n\"\"\") == \"3 4\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 5 45 20\n0 0\n2 0\n1 1.5\n''') == '2 5.086781'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '2 12.715255'\nassert solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'\nassert solution('''2 2 2 2 4\n0 0\n0 0\n0 0\n0 0\n''') == '0 0'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 0.5 5 15 5') == '2 15.75'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 5 45 20\") == \"2 5.086781\"\nassert solution(\"3 0.25 2 45 20\") == \"1 12.715255\"\n\nfrom math import sqrt\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2 1\\n0 0\\n2 0\\n1 1.5') == '2 3.832179'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 6 5 45 20') == '2 5.086781'\nassert solution('10 10 3 2') == '0 5.032819'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 5 1.5\\n0 0') == '1 12.715255'\nassert solution('2 4 3 0.25 1.5\\n0 0') == '1 6.715255'"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 0.25 2 45 20') == '2 5.086781'\nassert solution('6 0.25 2 45 20') == '1 12.715255'\nassert solution('3 0.25 2 45 30') == '1 3.193633'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2 5.086781'\nassert solution('3 0.25 2 45 20') == '1 12.715255'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 0 0 45 20') == '1 12.715255'\nassert solution('2 0') == '2 10.103039'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\nassert solution('''\n6\n1 1 5 1\n0 0 1 1\n0 0 0 1\n1 0 1 1\n0 1 1 1\n1 0 0 1\n''') == '16'\nassert solution('''\n4\n1 1 5 1\n0 0 1 1\n0 0 0 1\n1 0 1 1\n''') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '8'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('3') == '3'\nassert solution('10') == '10'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8', 'First'\n\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1', 'Second'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"2\\n5 1 7 1\\n1 1 5 1\\n4 0 4 4\\n7 0 3 4\\n\") == \"8\"\nassert solution(\"6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n\") == \"4\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n0 1 1 2 2 2 2 2\n1 2 1 3 3 3 2\n1 2 1 2 2 1\n2 1 2 1 1 2\n1 1 1 2 2 1\n2 1 1 1 1 1\n2 1 1 2 2 1\n2 1 1 2 1 2\n2 2 2 2 2 1\n1 1 2 1 1 2\n2 1 2 1 2 2\n2 1 1 1 2 1\n1 1 1 2 2 1\n2 1 1 1 1 1\n1 1 1 2 1 1\n1 1 1 1 1 1\n2 2 2 2 1 1\n1 1 1 1 1 1\n2 2 2 1 2 1\n1 1 2 1 1 1\n2 1 2 1 2 1\n1 1 1 1 2 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n2 1 2 1 1 1\n1 2 1 1 1 1\n1 1 1 2 1 1\n2 2 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n2 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n2 1 2 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n2 1 2 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''\n3\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\nSample Output 3:\n2\n\nSample Input 4:\n1\n3\n1 1 1\n0 1 1\n''') == '1'\nassert solution('''\n3\n2 2 2\n1 1 1\n''') == '0'\nassert solution('''\n5\n1 2 3 4 5\n4 1 5 2\n1 1 6 3\n3 3 5 2\n4 4 2 5\n''') == '4'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''\n5\n1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == \"8\"\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == \"1\""
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"impossible\"\n\n----\n\nclass Square:\n    def __init__(self, length: int):\n        self.length = length\n    def __eq__(self, other):\n        return self.length == other.length\n    def __lt__(self, other):\n        return self.length < other.length\n    def __le__(self, other):\n        return self.length <= other.length\n    def __gt__(self, other):\n        return self.length > other.length\n    def __ge__(self, other):\n        return self.length >= other.length\n    def __int__(self):\n        return self.length\n\nprint(Square(4))\nprint(Square(5))\nSquare(4) == Square(5)\nprint(Square(4) == Square(5))\nprint(Square(5) == Square(4))\nprint(Square(4) <= Square(5))\nprint(Square(4) < Square(5))\nprint(Square(4) >= Square(5))\nprint(Square(4) > Square(5))\nprint(int(Square(4)))\nprint(int(Square(5)))\nprint(Square(4) < Square(5))\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\"\nassert solution(input) == \"impossible\"\nassert solution() == \"impossible\"\n\"\"\""
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\nSample Input 2:\n3\nSample Output 2:\nimpossible''') == ''\n\nassert solution('''16\nSample Input 2:\n4\nSample Output 2:\nimpossible''') == 'impossible'\n\nassert solution('''10\nSample Input 2:\n3\nSample Output 2:\n4 3''') == 'impossible'"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4 3\"\nassert solution(\"9\") == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"4 3\"\nassert solution(\"3\") == \"4 5\"\nassert solution(\"5\") == \"4 5\"\nassert solution(\"6\") == \"4 5\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"impossible\"\nassert solution(\"5\\n\") == \"impossible\"\nassert solution(\"100\\n\") == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'impossible'\nassert solution('4') == '4 3'\nassert solution('5') == 'impossible'\nassert solution('8') == '4 3'\nassert solution('10') == '4 3'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"4 3\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"4 3\"\nassert solution(\"10\") == \"impossible\""
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'impossible'\nassert solution('1') == '1 1'\nassert solution('11') == 'impossible'\nassert solution('22') == 'impossible'\nassert solution('123') == 'impossible'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3') == '16'\nassert solution('4\\n2') == '109'\nassert solution('4\\n4') == '1010'\nassert solution('5\\n4') == '1001'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2\n4\n1\n4\n''') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"123\") == \"12\"\nassert solution(\"1234\") == \"12\"\nassert solution(\"12345\") == \"123\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '16'\nassert solution('4') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n4\\n2\\n4\\n') == '109'\nassert solution('2\\n2\\n2\\n') == '9'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n3\n2\n4\n1\n4\n''') == '109'\n\nassert solution('''\n3\n6\n3\n5\n1\n4\n''') == '180'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '109'\nprint(solution())\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '16'\nassert solution('4') == '109'\nassert solution('4') == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n3\n4\n2\n4\n''') == '109'\nassert solution('''\n2\n3\n4\n1\n4\n''') == '15'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1\n3\n''') == '16', 'First'\nassert solution('''\n4\n2\n4\n1\n4\n''') == '109', 'Second'"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '3'\nassert solution('4 3') == '5'\nassert solution('4 4') == '0'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2') == '3'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1') == '5 1 1 1'"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''6 3\n5 3 1 1\n1 2\n2 3\n4 1\n2 3\n''') == '6'\nassert solution('''6 3\n5 3 1 1\n1 2\n2 3\n4 1\n2 3\n3 3\n''') == '7'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '0'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n5 1\\n1 2\\n1 2\\n1 2\") == \"3\"\nassert solution(\"4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n\") == \"5\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(example_input_1) == stdout_1\nassert solution(example_input_2) == stdout_2"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\nassert solution('''\n6 3\n5 4 1 1 1 1\n1 3\n2 3\n4 1\n5 4\n6 4\n''') == '7'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '3'\nassert solution('4 3') == '1 3 2 1'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\n\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 2:\nimpossible\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1 2\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 2:\n1 2\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n10 2 2\nSample Output 2:\n1 2\n\"\"\") == \"1 2\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('1 3') == '1 2'\nassert solution('2 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1 2\", \"Should be 1 2\"\nassert solution(\"2 1\") == \"impossible\", \"Should be impossible\"\nassert solution(\"1 1\") == \"1 1\", \"Should be 1 1\"\nassert solution(\"1 3\") == \"1 3\", \"Should be 1 3\"\nassert solution(\"2 2\") == \"impossible\", \"Should be impossible\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 2\""
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('6 7') == '1 2'\nassert solution('20 3') == '1 2'\nassert solution('10 1 0') == '10 1'\nassert solution('10 2 1') == '10 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('5 5') == '1 2 3 4 5'\nassert solution('4 4') == '1 2 3 4'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 3\n    6 7\n    0 1 1\n    0 2 2\n    1 1 3\n    2 1 2\n    2 2 1\n    3 2 3\n    4 2 1\n    \"\"\"\n) == \"1 2\"\nassert solution(\n    \"\"\"\n    2 1\n    20 3\n    0 1 1\n    10 1 0\n    10 2 1\n    Sample Output 2:\n    impossible\n    \"\"\"\n) == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1 2\", \"Sample\"\nassert solution(\"2 1\") == \"impossible\", \"Sample\"\nassert solution(\"3 3\") == \"1 2 3\", \"Sample\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1 2\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"20 3\") == \"impossible\"\nassert solution(\"2 1\") == \"impossible\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0 1'\nassert solution('2') == '0 1'\nassert solution('2 2') == '0 1'\nassert solution('10') == '5 2'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('2020') == '2020 1'\n'''\n\n'''\nSample Input 1:\n100\nSample Output 1:\n4 5\n\nSample Input 2:\n2020\nSample Output 2:\n2020 1\n'''\n\n'''\nSample Input 1:\n25\nSample Output 1:\n9 9\n\nSample Input 2:\n2020\nSample Output 2:\n2020 1\n'''\n'''\nSample Input 1:\n10\nSample Output 1:\n5 2\n\nSample Input 2:\n2020\nSample Output 2:\n2020 1\n'''"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '10') == '5 2'\nassert solution(\n    '2020') == '2020 1'"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\nassert solution('30') == '15 1'\nassert solution('100') == '25 2'\nassert solution('1000') == '65 3'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == ''\nassert solution('1') == '1 1'\nassert solution('5') == '5 2'\nassert solution('10') == '10 1'\nassert solution('2020') == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1 1'\nassert solution('100') == '1 1'\nassert solution('201') == '1 2'\nassert solution('10001') == '2 1'\nassert solution('20101') == '2 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n''') == '5 2'\nassert solution('''\n2020\n''') == '2020 1'\nassert solution('''\n10\n''') == '5 2'\nassert solution('''\n2020\n''') == '2020 1'\nassert solution('''\n10\n''') == '5 2'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'impossible'\nassert solution('4') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'impossible'\nassert solution('4') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'impossible'\n\nassert solution('''\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'impossible'\nassert solution('''\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\nSample Output 3:\nambiguous\n''') == 'impossible'\n\nassert solution('''4\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nSample Output 4:\nunique\n''') == 'unique'\n\nprint(solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\nSample Output 1:\nimpossible\n\nSample Input 2:\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nSample Output 2:\nunique\n\nSample Input 3:\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nSample Output 3:\nambiguous\n''')\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"impossible\"\nassert solution(sample_input_2) == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"impossible\"\nassert solution(\"2\") == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\nSample Input 3:\n5\n3\n0 chocolate\n1 icecream\n2 cookies\n0 chocolate\n3\nchocolate\nicecream\ncookies\nSample Output 3:\nambiguous\n\"\"\") == \"ambiguous\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0 10') == '0', \"Wrong answer!\"\n\n\"\"\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\nprint('Congratulations, have a nice day!')\n--------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nMashine \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0433\u0440\u0443 \u0432 \u0441\u0442\u0438\u043b\u0435 Rock-Paper-Scissors, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u043c\u043e\u0436\u0435\u0442 \u043f\u0435\u0440\u0435\u0431\u0440\u0430\u0442\u044c \u043e\u0442 \u043e\u0434\u043d\u043e\u0433\u043e \u0434\u043e \u0434\u0432\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u0440\u0430\u0443\u043d\u0434\u043e\u0432: Rock, Paper \u0438 Scissors. \u0418\u0433\u0440\u043e\u043a \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u043e\u0434\u0438\u043d \u0438\u0437 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0435\u0433\u043e \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440. \u0418\u0433\u0440\u043e\u043a \u0438\u0437\u0431\u0435\u0433\u0430\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0445 \u0432\u044b\u0431\u043e\u0440\u043e\u0432 \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0434\u0438\u043d \u0448\u0430\u043d\u0441 \u043e\u0431\u043e\u0433\u0430\u0449\u0430\u0442\u044c \u0435\u0433\u043e \u0438\u0433\u0440\u043e\u0432\u0443\u044e \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e.\n\n\u0412\u0441\u0435\u0433\u0434\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u0435\u043d \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u043d\u0438\u0435, \u043e\u0442\u043a\u0430\u0437 \u043e\u0442 \u043f\u043e\u0431\u0435\u0434\u044b \u0438\u043b\u0438 \u0441\u0431\u0438\u0442\u0438\u044f. \u041d\u043e \u0447\u0442\u043e \u0436\u0435 \u043e\u0442\u043a\u0430\u0437? \u0421\u0431\u0435\u0436\u0430\u0442\u044c? \u0412\u044b\u0431\u0440\u0430\u0442\u044c \u0438\u0437 \u0440\u0430\u043d\u0434\u043e\u043c\u0430? \u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0442\u044c? \u041f\u0440\u0438\u043d\u0446\u0435\u0441\u0441\u0430? \u041f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u044d\u0442\u043e \u0436\u0435\u043b\u0430\u043d\u0438\u0435? \u041a\u0430\u043a \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442?\n\n\u0422\u0430\u043a\u0436\u0435 \u0432\u0441\u0435\u0433\u0434\u0430 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u043a\u0430\u043a \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u044b\u0431\u043e\u0440\u0435 \u0438\u0433\u0440\u043e\u043a\u0430 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u044b\u0431\u043e\u0440\u0435 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u0438\u043a\u0430 \u0438\u043b\u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043e\u0442\u0432\u0435\u0442\u044b \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e.\n\n\u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435 \u043f\u0430\u0440\u0443 \u0441\u0442\u0440\u043e\u043a \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435:\nGame \\t You \\t Opponent\nRock \\t    me \\t    him\nPaper \\t    me \\t    him\nScissors \\t me \\t    him\n\n\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0433\u0440\u043e\u0432\u044b\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439:\nGame Rock \\t You Rock \\t Opponent\nGame Rock \\t You Scissors \\t Opponent\nGame Scissors \\t You Scissors \\t Opponent\nGame Paper \\t You Scissors \\t Opponent\nGame Paper \\t You Scissors \\t Opponent\n\nGame Rock \\t You Rock \\t Opponent\nGame Rock \\t You Scissors \\t Opponent\nGame Rock \\t You Paper \\t Opponent\nGame Rock \\t You Paper \\t Opponent\nGame Scissors \\t You Rock \\t Opponent\nGame Scissors \\t You Scissors \\t Opponent\nGame Paper \\t You Scissors \\t Opponent\nGame Paper \\t You Paper \\t Opponent\n\n\u0417\u0430\u0434\u0430\u0447\u0430:\n\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0443\u043d\u0434\u043e\u0432 \u0432\u044b\u0431\u043e\u0440\u043e\u043c \u0438\u0433\u0440\u043e\u043a\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u043f\u043e\u0431\u0435\u0434\u0438\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0443\u043d\u0434\u043e\u0432 \u0432\u044b\u0431\u043e\u0440\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e\u0431\u0435\u0434\u0438\u043b\u043e, \u0438 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043d\u0435 \u043f\u043e\u0431\u0435\u0434\u0438\u043b\u043e. \u0412 \u043a\u0430\u043a\u043e\u043c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u044f\u0442\u044c \u044d\u0442\u0438 \u0434\u0432\u0430 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0447\u0438\u0441\u0435\u043b? \u041a\u0430\u043a \u043f\u0440\u043e\u0430\u043d\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b?\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0442\u0432\u0435\u0442\u0430:\nGame Rock \\t You Rock \\t Opponent\nGame Rock \\t You Scissors \\t Opponent\nGame Rock \\t You Paper \\t Opponent\nGame Rock \\t You Paper \\t Opponent\nGame Scissors \\t You Rock \\t Opponent\nGame Scissors \\t You Scissors \\t Opponent\nGame Paper \\t You Scissors \\t Opponent\nGame Paper \\t You Paper \\t Opponent\n\nGame Rock \\t You Rock \\t Opponent\n1 \\t 3 \\t 1\nGame Rock \\t You Scissors \\t Opponent\n1 \\t 3 \\t 1\nGame Rock \\t You Paper \\t Opponent\n1 \\t 2 \\t 1\nGame Rock \\t You Paper \\t Opponent\n1 \\t 2 \\t 1\nGame Scissors \\t You Rock \\t Opponent\n1 \\t 3 \\t 1\nGame Scissors \\t You Scissors \\t Opponent\n1 \\t 3 \\t 1\nGame Paper \\t You Rock \\t Opponent\n1 \\t 1 \\t 1\nGame Paper \\t You Scissors \\t Opponent\n1 \\t 1 \\t 1\nGame Paper \\t You Paper \\t Opponent\n1 \\t 2 \\t 1\nGame Paper \\t You Paper \\t Opponent\n1 \\t 2 \\t 1\nGame Scissors \\t You Rock \\t Opponent\n1 \\t 1 \\t 1\nGame Scissors \\t You Scissors \\"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 0 10\n1 2 10\n1 3 10''') == '1'\nassert solution('''1 2 10\n1 3 10\n1 4 10''') == '2'\nassert solution('''1 2 10\n1 4 10\n1 5 10''') == '1'\nassert solution('''1 2 10\n1 5 10\n1 6 10''') == '0'\nassert solution('''1 2 10\n1 5 10\n1 6 10''') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin='''\n1 2 10\n''') == '1'\nassert solution(stdin='''\n1 2 1000000000\n''') == '1'\nassert solution(stdin='''\n2 2 1000000000\n''') == '0'\nassert solution(stdin='''\n1 3 1000000000\n''') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0 10\") == \"0\""
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0 10') == '0'\n\nassert solution('1 2 10') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 0 10\n1 2 10''') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0 10') == '0'\n\nassert solution('1 2 10') == '1'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n...........XX\n.....XX.....\n...X......X.\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n...........XX\n..........."
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('...XXXXXXXX....XXX.........XX.....X.....XXXXX......XXX....XXXXX........XX.....XXXXX.....XX.........XX.....X.....XXXXX......XX....XX....XXXXX........X......X........X........X.....XX.....XXXXX........XX.....XXXXX...X........XX.....XXXXX..X........XX.....XXXXX...XX..X........XX.....XXXXX.........XX.....XXXXX.............XX.....XXXXX.....XX.....XXXXX....XX........XX.....X.....XXXXX........X.....XX.....XXXXX........X.....XX.....XXXXX.....XX.....XXXXX.....XX.....XX.....XX.....XXXXX.....XX.....XX.....XX.....XXXXX.........XX.....XXXXX.........XX.....XXXXX.........XX.....XXXXX.........XX.....XXXXX........X.....XX.....XX.....XXXXX..X........XX.....X.....XXXXX................XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX.....XX....."
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 pan\\n\") == \"1 pan\"\nassert solution(\"3 pan\\n\") == \"3 pan\"\nassert solution(\"3 pan\\n2 pan\\n\") == \"3 pan\"\nassert solution(\"1 pan\\n2 pan\\n\") == \"2 pan\"\n\nassert solution(\"5 pan\\n3 pan\\n\") == \"4 pan\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('....XXXX..................................XXXX..........') == '1 zoom'\nassert solution('....................................................') == '1 pan'\nassert solution('...............................................XX..........') == '3 zoom out'\nassert solution('....................................XXXX........X..........') == '3 zoom out'\nassert solution('.....................................XXX......XXXX..........') == '2 zoom out'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '1 pan'\nassert solution('1\\n2\\n') == '1 zoom out'\nassert solution('3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n') == '3 rotate left'\nassert solution('8\\n12\\n15\\n14\\n16\\n18\\n19\\n22\\n23\\n24\\n25\\n26\\n27\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n') == '3 rotate right'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('XX.XX..XX..XX.....X..XX....X...X...X.XX.....X..XX.XX...X..XX.XX..XX....X...X...X...X..XX.....X..XX.....X..XX..XX.....X..XX....X.X...X...X.XX.....X..XX.XX...X..XX.....X..XX...X.XX.....X..XX.XX...X..XX.....X..XX....X...X...X..XX.....X..XX.XX...X..XX.....X..XX...X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X..XX.....X"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n.......\n..........\n...........\n..........\n..........\n..........\n.......\n..........\n..........\n..........\n..........\n..........\n..........\n.......\n\"\"\") == \"3 zoom out\"\nassert solution(\"\"\"\n.............\n...........X.\n...........X.\n...........X.\n...........X.\n...........X.\n.............\n...........X.\n...........X.\n...........X.\n...........X.\n...........X.\n.............\n\"\"\") == \"2 pan\"\nassert solution(\"\"\"\n.......\n..........\n...........\n..........\n..........\n..........\n.......\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n..........\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.4 3.5 1.2 1.1.5 1.2 3.3 1.4.3 1.4.1.5 1.5 3.1.4.5 3.4.1.2.3 3.4.1.5 3.3 3.5 3.4 2.4 2.5 2.4 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5 2"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('............................................................', '............................................................') == \"3 pan\"\nassert solution('............................................................', '............................................................') == \"3 pan\"\nassert solution('............................................................', '............................................................') == \"3 pan\"\nassert solution('............................................................', '............................................................') == \"3 pan\"\nassert solution('............................................................', '............................................................') == \"3 pan\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(['....XXXX....................................................','......................'])) == '1 pan'\nassert solution('\\n'.join(['....................................................'])) == '1 pan'\nassert solution('\\n'.join(['.......................................XXXX..............','......................'])) == '1 pan'\nassert solution('\\n'.join(['...................................XXX..............','.XX.....................'])) == '1 pan'\nassert solution('\\n'.join(['...................................XXX..............','.XX.....................','.XX.....................'])) == '1 pan'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == 'apples are great!  \\n check out our fresh apples!'\n\nassert solution('''7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') ==' \\n   '\n\nassert solution('''8 6\n+ plus    +\n++ plus   +\n+ plus +  +\n+    + +  +\n++ plus  +  +\n+  =   +   +\n+ plus  +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  +\n+ plus +  +\n+    + +  "
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 20\\n apples are great!  \\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our      \\n fresh apples!      ') == 'apples are great!  \\nfresh apples!'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 20\\n apples are great!  \\n++++++++++++++++++++\\n+ oranges are      +\\n+ way better!      +\\n+ #oranges>apples  +\\n++++++++++++++++++++\\n check out our      \\n fresh apples!') == 'apples are great!  \\ncheck out our fresh apples!'\nassert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++') == '       \\n       \\n       \\n       \\n       \\n'"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 20\") == \"apples are great!\"\nassert solution(\"7 7\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\""
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 20\") == 'apples are great! check out our fresh apples!'\nassert solution(\"7 7\") == '+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++'"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 20\") == \"apples are great!\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\"\nassert solution(\"7 7\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\""
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++') == 'check out our fresh apples!'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == 'apples are great! check out our fresh apples!'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == 'check out our      fresh apples!'\nassert solution(input) == '+++++++'\nassert solution(input) == '+  =  +'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 20\") == \"apples are great!\\n+ oranges are\\n+ way better!\\n+ #oranges>apples\"\nassert solution(\"7 7\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\nassert solution('H??') == '0.5'\nassert solution('H???') == '0.5'\nassert solution('HH') == '2.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''HTH\n?TH''') == \"3.8\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''HH\n''') == '2.0'\nassert solution('''H?\n''') == '1.5'\n\"\"\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('H?H') == '1.5'\nassert solution('H?H?H?') == '2.0'\nassert solution('TTT?TTT?') == '3.0'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n\n'''\n\n'''\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n'''\n\n'''\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nHHHTHHHHHHHHTHHHHHHHTHH\nHHT\"\"\") == \"2.0\nassert solution(\"\"\"\nHTHHTHHHHHHHHTHHHHHHHHTH\nHHT\"\"\") == \"3.5\n\"\"\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n'''\n\n\nclass Solution:\n    # Complete this function\n    def solve(self, stdin):\n        pass"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nH?\nH?\nT?\n?H?\n?H?\n?T?\n?T?\nT?\n?T?\n''') == '1.5'\n'''"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nTHT\nHHT\nHTH\nTTH\nTHT\nTHT\nTHT\n?T\n?H''') == '1.5'\n\nassert solution('''\nTHT\nHHT\n?T\n?H\nTHT\nTHT\nTHT\n?H''') == '3.5'\n\nassert solution('''\nT?H\nT?H\nTHT\nTHT\nTHT\nT?H\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTHT\nTH"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"H?\") == \"1.5\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0001\n0001\n0011\n1110\n''') == '1'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('4') == '6'\nassert solution('100') == '40'\nassert solution('100') == '40'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"7\"\nassert solution(\"100\") == \"62\"\nassert solution(\"1111\") == \"1111\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0001\n0001\n0011\n1111\n''') == '1', \"First\"\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '6', \"Second\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1'\nassert solution('4') == '1'\nassert solution('8') == '6'\nassert solution('16') == '11'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('1') == '0'\nassert solution('0111') == '6'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"1111\") == \"6\"\nprint(solution(input()))\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '0111'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n111\\n111\\n111\\n111\") == \"1\"\nassert solution(\"8\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\\n1111\") == \"1\"\nassert solution(\"16\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n111111111111111111111111111111111\\n1111111111111111"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '0'\nassert solution('4') == '4'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\nassert solution('''4\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n''') == '4'\nassert solution('''4\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n''') == '4'\nassert solution('''4\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n''') == '4'\nassert solution('''4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\nprint('all done')\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3''') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\nassert solution('''4\nh 1 4 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n''') == '4'\nassert solution('''3\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '5'\nassert solution('''2\nh 1 4 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n''') == '4'\nassert solution('''2\nh 1 4 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n''') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('10') == '0'\nassert solution('11') == '0'"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nh 1 4 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '2'\nassert solution('4\\nh 1 5 1\\nh 5 5 2\\nv 1 5 1\\nv 5 5 3') == '4'"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\") == \"2\"\nassert solution(\"4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '-1'\nprint(solution())"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '-1'\nassert solution('8 8') == '0'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5\\n') == '2'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8\\n') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"4\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'\n\nassert solution(\"\"\"\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n\"\"\") == '2'\n\nassert solution(\"\"\"\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n\"\"\") == '4'\n\nassert solution(\"\"\"\n1\n5\n3\n2\n5\n\"\"\") == '-1'"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\nassert solution('''\n4 4\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '-1'\nassert solution('''\n3 5\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n1 2 3 3 4 2''') == '2'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 2 3 3 4 2\") == \"2\"\nassert solution(\"8\\n1 2 1 3 1 3 1 2\") == \"4\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 3 4 2') == '2'\nassert solution('8 1 2 1 3 1 3 1 2') == '4'\nprint('All test cases passed...')\n\"\"\""
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '4'"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"6\n1 2 3 3 4 2\"\"\") == \"2\"\nassert solution(\"\"\"8\n1 2 1 3 1 3 1 2\"\"\") == \"4\"\"\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n1 2 3 3 4 2') == '2'\nassert solution('8\\n1 2 1 3 1 3 1 2') == '4'\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n6\n1 2 3 3 4 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n8\n1 2 1 3 1 3 1 2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2 1 3 1 3 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1 2 1 3 1 3 1 2\n\"\"\") == \"4\"\n\"\"\""
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n3 7 6 5 2 1 4 5 2\n''') == '4'\nassert solution('''\n9\n3 7 6 5 2 1 4 5 2\n''') == '3'\nassert solution('''\n4\n1 2 1 3\n''') == '3'"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '4'\nassert solution('2 2') == '1'\nassert solution('2 3') == '2'\nassert solution('2 4') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '0'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '4'\nassert solution('1 1 1') == '2'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 1 1\") == \"0\""
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == '4'\nassert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2''') == '0'\nprint('All test cases passed...')"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 2 2\\n\"\n    \"1 1 1\\n\"\n    \"2 2 1\\n\"\n    \"2 2 2 1\\n\"\n    \"1 1 1 2\\n\"\n) == \"4\"\nassert solution(\n    \"2 2 2\\n\"\n    \"1 1 1\\n\"\n    \"2 2 2\\n\"\n    \"2 2 2 1\\n\"\n    \"1 1 1 2\\n\"\n) == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"4\"\nassert solution(\"3 3 2\\n1 1 1\\n2 2 2\\n2 2 2 1\\n1 1 1 2\") == \"2\""
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 2\") == \"4\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == '1'\nassert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == 'impossible'\nprint(solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n'''))\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == '1'\nassert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == 'impossible'\nassert solution('''3 2\n1 1 1\n0 1 1\n0 0 0''') == '1'\nassert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == 'impossible'\nassert solution('''4 3\n0 0 1 1\n1 0 0 1\n0 0 0 1\n0 0 1 0\n0 2\nSample Output 3:\n1\n''') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == '1'\n\nassert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2''') == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == 'impossible'\nassert solution('4 2') == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == '1'\nassert solution('''\n4 3\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == 'impossible'\nassert solution('''\n4 4\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == 'impossible'\nassert solution('''\n6 4\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == '2'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"4 2\") == \"impossible\"\nassert solution(\"10 20 3 2\") == \"3\""
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 2') == 'impossible'\nassert solution('3 5') == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == 'impossible'\nassert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n1 2\n''') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 0 0\n0 1 0\n0 0 1\n''') == '1'\nassert solution('''4\n1 0 0\n0 1 0\n0 0 1\n0 2\n''') == 'impossible'\nprint('all tests passed')\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2 1\") == \"35\"\nassert solution(\"10 4\") == \"18\""
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '8'\nprint(solution())\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6') == '15'\nassert solution
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(t_in) == t_ans\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 4\\n1 1 2 1\\n3') == '35'\nassert solution('11 3\\n3 7 10\\n3') == '8'"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n5 2\n1 2\n3 4\n5 5\n4 6\n1 3\n4 5\n\"\"\"\n) == \"8\"\n\nassert solution(\n    \"\"\"\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\nSample Output 2:\n8\n2\n1\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n10 3\n4 3\n1 2\n3 2\n7 4\n5 3\n6 2\nSample Output 2:\n11\n4\n2\n\"\"\"\n) == \"11\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 1\n1 2 3\n1 3 1\n''') == '5'\n\nassert solution('''\n5\n1 1 2 1\n3\n0 10\n2 6\n7 7\nSample Output 3:\n14\n7\n1\n''') == '10'"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35'\nassert solution('''11 3\n3 7 10\n3\n0 10\n2 6\n7 7\n''') == '8'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7''') == '35'\nassert solution('''11 3\n3 7 10\n3\n0 10\n2 6\n7 7''') == '8'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6''') == '0 1 3 6'\nassert solution('''1\n2\n3\n4\n5\n6''') == '0 1 3 6'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6''') == '0 1 3 6 5 2'\nassert solution('''4\n1\n2\n3\n4''') == '0 1 3 4 2'\nassert solution('''20\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'\nassert solution('''20\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20''') == '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '0 1 2 3 4'\nassert solution('4') == '0 1 2 3'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '0\\n1\\n3\\n6'\nprint(solution(input()))\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4\\n') == '0\\n1\\n3\\n6'\nassert solution('5\\n3\\n2\\n4\\n1\\n5\\n') == '0\\n1\\n2\\n4\\n6\\n'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '6'\n\n'''\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n2\n4\n1\n5''') == '0 1 3 2 4 5'\nprint(solution('''4\n1\n2\n3\n4'''))\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1\n2\n3\n4\n''') == '0 1 3 6'\nassert solution('''\n5\n3\n2\n4\n1\n5\n''') == '0 1 2 4 6'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1\n2\n3\n4\n''') == '0 1 3 6'\nassert solution('''\n5\n3\n2\n4\n1\n5\n''') == '0 1 2 4 6'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '0\\n1\\n3\\n6'\nassert solution('5') == '0\\n1\\n2\\n4\\n6'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '2 4 1 3'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\", \"Empty input\"\nassert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\", \"Unequal shapes\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\") == \"4 3 1 2\", \"More than one possible answer\"\nprint(solution(open(\"input.txt\")))\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '2 4 1 3'\nassert solution('''\n4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n\") == \"2 4 1 3\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 4 1 3\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n\") == \"2 4 1 3\"\nassert solution(\n
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '2 4 1 3'\nprint(solution('''\n4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n'''))\nprint(solution('''\n4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 5 6 7\n'''))\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n\"\"\") == \"2 4 1 3\"\n\nassert solution(\"\"\"\n5\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n5 4 7 3\n3 3 5 3\n\"\"\") == \"2 4 1 3 5 3\""
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == \"Theta wins\"\nassert solution('''23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5''') == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\n''') == 'Theta wins'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n''') == 'Theta wins'\nassert solution('''\n89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\n''') == 'Theta wins'\nassert solution('''\n92345678TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n''') == 'Theta wins'\nassert solution('''\n92345678TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n''') == 'Theta wins'\nassert solution('''\n89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\n''') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'truther'\nassert solution('2 1') == 'fabulist'\n\n'''\n\nimport re"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'charlatan', 'First'\nassert solution('''\n2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist', 'Second'\n'''\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == 'charlatan'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2\\n') == 'fabulist'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'truther'\nassert solution('''\n2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist'\nassert solution('''\n1 3\n1 fabulist 1 fabulist 2\n1 truther 1\n''') == 'truther'\nassert solution('''\n1 2\n1 truther 1\n1 charlatan 1\n1 not charlatan 1\n''') == 'truther'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist'\nprint('Tests passed')\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\\n1 charlatan 1\\n1 not charlatan 1\") == \"charlatan\"\nassert solution(\"2 1\\n1 and fabulist 1 fabulist 2\") == \"fabulist\"\nprint('all tests passed')\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 2\n1 truther 1\n1 not truther 1\nSample Input 3:\n2 1\n1 and fabulist 1 fabulist 2\nSample Output 3:\ncharlatan\"\"\") == \"truther\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n\"\"\") == \"truther\"\n\nassert solution(\"\"\"\n2 1\n1 and not charlatan 1\n1 or charlatan 1\n1 not charlatan 1\n\"\"\") == \"truther\"\n\nassert solution(\"\"\"\n3 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 or charlatan 1\n1 not charlatan 1\n\"\"\") == \"charlatan\"\n\nassert solution(\"\"\"\n4 1\n1 not charlatan 1\n1 not charlatan 1\n1 fabulist 1 fabulist 2\n\"\"\") == \"truther\"\n\nassert solution(\"\"\"\n5 1\n1 not charlatan 1\n1 not charlatan 1\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n1 or charlatan 1\n1 not charlatan 1\n\"\"\") == \"truther\""
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\n1 not truther 1\n1 fabulist 1\n''') == 'truther'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'charlatan'\nassert solution('''\n2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == \"1\"\nassert solution('5') == \"4\"\nassert solution('3') == \"2\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1.00 5.00\\n3.00 3.00') == '4'\nassert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\") == \"4\"\nassert solution(\"3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\") == \"3\""
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.00 2.00') == '2'\nassert solution('3.00 3.00') == '0'\nassert solution('4.00 2.00') == '0'\nassert solution('6.00 4.50') == '4'\nassert solution('7.00 1.00') == '1'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\nprint(solution())"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00\\n') == '4'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00\\n') == '3'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '3'\nassert solution('6') == '3'\nassert solution('7') == '3'\nassert solution('12') == '6'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n.X\n100 1000\n''') == '10'\n\nassert solution('''\n1\n.X\n100 1000\n''') == '100'\n\nassert solution('''\n3\n.X\n.X.\n100 1000\n''') == '100'\n\nassert solution('''\n2\n.X\n.X.\n100 1000\n''') == '100'\n\nassert solution('''\n2\n.X\n.X.\n100 100\n''') == '100'"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"16\"\nprint(solution())\n'''\n\nstdin = \"\"\"\n1 4 2\nR.X.X.\n.X.XX.\n\"\"\""
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n\"\"\") == \"16\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 2') == '16'\nassert solution('2 3 1') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 2\") == \"1\"\nassert solution(\"2 3 1\") == \"2\"\nassert solution(\"2 4 1\") == \"2\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('4 4 1') == '1'\nassert solution('5 2 4') == '0'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1\\nX..\\n.X...') == '10'\nassert solution('2 3 1\\nX.\\n.X\\n.X\\n1\\n.X\\n.X\\n.X\\n1\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n1\\n.X\\n.X\\n.X\\n1\\n.X\\n.X\\n.X\\n1\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n1\\n.X\\n.X\\n.X\\n1\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n.X\\n."
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3 1\nR..?\n.X...\n100 100 7 100 8\n''') == '16'\nassert solution('''2 5 2\nR..?.\n.X...\n100 100 7 100 8\nSample Output 2:\n16\n''') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 2') == '16'\nassert solution('2 3 1') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"16\""
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2\\n0 1\\n1 0\\n1 1\\n2 1\"\n) == \"1.414\"\nassert solution(\n    \"3 3\\n0 4 4\\n1 5 1\\n2 6 1\\n3 5 1\"\n) == \"5.657\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"1.414\"\nassert solution(\"6 11\") == \"5.657\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 3\n0 4 4\n1 5 1\n2 6 1\n\"\"\") == \"1.414\"\nassert solution(\"\"\"6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == \"5.657\"\nassert solution(\"\"\"12 10\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == \"5.957\""
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n0 0 1\\n1 0 3\\n5 5 1') == '0.06142857142857143'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1\n''') == '1.414', \"First\"\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n''') == '5.657', \"Second\"\nassert solution('''3 3\n0 4 4\n1 5 1\n2 6 1\n''') == '1.414', \"Third\"\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n''') == '5.657', \"Fourth\"\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n100 100 10\n''') == '5.657', \"Fifth\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0.5063'\n\"\"\"\nimport math\n\nn, k = map(int, input().split())\n\nx = []\ny = []\nk_l = []\nfor _ in range(n):\n    x_, y_, k_ = map(int, input().split())\n    x.append(x_)\n    y.append(y_)\n    k_l.append(k_)\n\nx_set = set(x)\ny_set = set(y)\nk_set = set(k_l)\n\nfor x1 in x_set:\n    for x2 in x_set:\n        if x1!= x2:\n            for y1 in y_set:\n                for y2 in y_set:\n                    if y1!= y2:\n                        for k1 in k_set:\n                            for k2 in k_set:\n                                if k1!= k2:\n                                    k_x = math.ceil(x1 / x2)\n                                    k_y = math.ceil(y1 / y2)\n                                    k_k = math.ceil(k1 / k2)\n                                    if (\n                                        math.ceil(\n                                            k_x * x2 + k_y * y2 + k_k * k2\n                                        )\n                                        % k\n                                    ) == 0:\n                                        print(\n                                            math.ceil(\n                                                k_x * x2 + k_y * y2 + k_k * k2\n                                            )\n                                        )\n                                        return\n\nprint(0)\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1\n''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n''') == '5.657'\nassert solution('''6 7\n0 0 2\n0 1 3\n1 0 1\n1 1 4\n5 5 1\n20 20 10\n''') == '6.857'\nassert solution('''2 5\n0 0 0\n0 1 1\n1 0 2\n1 1 3\n2 2 4\nSample Output 3:\n3.77\n''') == '3.77'\nassert solution('''9 9\n0 0 0\n0 1 1\n1 0 2\n1 1 3\n2 0 4\n2 1 5\n3 0 6\n3 1 7\n4 0 8\n4 1 9\nSample Output 4:\n10.64''') == '10.64'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n0 4 4\n1 5 1\n2 6 1\n''') == '1.414'\nprint('Solution: ', solution('''\n2 3\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n'''))\nassert solution('''\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n''') == '5.657'\nprint('Solution: ', solution('''\n8 9\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n5 6 1\n6 5 1\n6 6 1\n'''))\nassert solution('''\n12 9\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n5 6 1\n6 5 1\n6 6 1\n7 7 1\n7 8 1\n7 9 1\n''') == '2.928'"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3 3\n0 4 4\n1 5 1\n2 6 1\n'''\n) == '1.414'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1.414'\nassert solution('6 11') == '5.657'"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\\\n5\n3 1 1 1 1\n\"\"\") == \"1.0\"\n\nassert solution(\"\"\"\\\n1\n1\n\"\"\") == \"0.0\"\n\nassert solution(\"\"\"\\\n7\n3 4 1 2 1 1 1\n\"\"\") == \"1.0\"\n\nassert solution(\"\"\"\\\n1\n1\n\"\"\") == \"0.0\"\n\nassert solution(\"\"\"\\\n1\n2\n\"\"\") == \"1.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1 1\") == \"0.433\"\nassert solution(\"4 1 1 1 1\") == \"1.0\"\nassert solution(\"10 10 10 10\") == \"0.0\"\nassert solution(\"3 1 1 1 2 3 4 5\") == \"2.5\"\nassert solution(\"5 5 5 5 5 5\") == \"5.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 1 1') == '0.433'\nassert solution('4 1 1 1 1') == '1.0'"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 1 1\\n') == '0.433'\nassert solution('4 1 1 1 1\\n') == '1.0'\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n1 2\n\"\"\") == \"0.433\"\n\nassert solution(\"\"\"\n4\n1 2 1 1\n\"\"\") == \"0.433\"\n\nassert solution(\"\"\"\n4\n3 3\n\"\"\") == \"0.433\"\n\nassert solution(\"\"\"\n4\n1 3\n\"\"\") == \"0.433\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 1 1 1 1\n''') == '1.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 1 1') == '1.0'\nassert solution('2 3 1 1') == '0.0'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 1 1\") == \"0.433\"\nassert solution(\"3 3 1 1\") == \"0.433\"\nassert solution(\"2 1 2 2\") == \"0.5\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1 1 1 1 1\n\"\"\") == \"1.0\"\nassert solution(\"\"\"\n5\n1 1 1 2 2\n\"\"\") == \"2.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 2 2 2') == '1.4'\nassert solution('6 1 2 2 2 3 2') == '0.4'\nassert solution('20 100 1 1 1 1 1 1 1 1') == '0.2'\nassert solution('3 1 2 1') == '0.1'\n\nn = int(input())\n\nsegs = list(map(int, input().split()))\n\nsides = []\nfor i in range(1, n + 1):\n    sides.append(segs[i] ** 2)"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"6\"\nassert solution(\"8 10\") == \"36\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5\\n4\\n1 1\\n2 1\\n2 3\\n3 3'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36\\n5\\n1 1\\n1 2\\n2 2\\n3 2\\n3 3'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5') == '5'\nassert solution('10 10') == '10'\nassert solution('8 10') == '36'"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 5') == '5'\nassert solution('8 10') == '36'"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5') == '5'\nassert solution('8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15') == '36'"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\\n4\\n1 1\\n2 1\\n2 3\\n3 3\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"8 10\") == \"36\""
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\"\nassert solution(\"8 10\\n1 1 15\\n2 2 30\\n1 2 8\\n2 1 7\\n3 2 8\\n2 3 7\\n4 2 100\\n3 3 15\") == \"36\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == '5'\nassert solution('''\n10 10\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n4 2 100\n3 3 15\n''') == '36'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\") == \"3\"\nassert solution(\"10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\") == \"8\"\nassert solution
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 1\n2 1\n1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n2 1 3\n1 3\n2 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1\\n2 1\\n1 2') == '1'\nassert solution('3 2\\n2 1 3\\n1 3') == '3'\nprint('You passed all the tests!')\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1\n2 1\n1 2\n''') == '1'\nassert solution('''\n3 2\n2 1 3\n1 3\n2 3\n''') == '3'\nassert solution('''\n1 1\n1 2\n''') == '2'\n'''"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1\\n2 1\\n1 2\\n') == '1'\nassert solution('3 2\\n2 1 3\\n1 3\\n2 3\\n') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\nassert solution('''\n10 4\n1 2\n1 3\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 5\n''') == '3'\nprint('All test cases passed!')"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\n\n'''\nWhat is the minimum cost to decorate the city as the best way?\n'''\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\") == \"-1\"\nassert solution(\"1 4\") == \"2\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\nassert solution('''\n6 5\n2 4\n3 5\n1 5\n3 6\n1 6\n''') == '5'\nassert solution('''\n8 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '0'\nassert solution('5 3') == '1'\nassert solution('9 2') == '-1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1 1\n3 4\n3 2\n2 4\n3 2\n4 1\n1 2\n2 2\n2 3\n1 5\n5 3\n4 2\n1 1\n1 2\n2 4\n2 4\n3 5\n1 5\n1 5\n1 6\n\"\"\"\n) == \"5\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 8\n1 4\n4 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '-1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 8\") == \"-1\"\nassert solution(\"6 5\") == \"5\""
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4.00\""
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"9.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n2 3\\n3 4\\n3 5\") == \"2.00\"\nassert solution(\"4 3\\n3 1\\n2 2\\n1 1\") == \"4.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1.00'\nassert solution('4 1') == '1.00'\nassert solution('4 2') == '1.00'\nassert solution('6 3') == '4.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '4.00'\nassert solution('4 1') == '4.00'\nassert solution('4 2') == '4.00'\nassert solution('6 3') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"9.00\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2.00'"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '2.00'\nassert solution('4 1') == '4.00'\nassert solution('6 3') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2') == '4.00'\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0\\n') == '9.00'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 2') == '2 1 2 3'\nassert solution('3 3 4') == '1 2 1 2'\nassert solution('1') == '1'\nassert solution('0') == '1'\nassert solution('-1') == '1'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 2') == '2 1 2 3'\nassert solution('3 3 4') == '1 2 1 2'"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\nSample Input 3:\n5 3 1\nPAINT 1 2 3 1 2\nSample Output 3:\n1 2 3 1 2\n1 2 3 1 2\n1 2 3 1 2\n1 2 3 1 2\n1 2 3 1 2''') == '''1 2 3 1 2\n1 2 3 1 2\n1 2 3 1 2\n1 2 3 1 2\n1 2 3 1 2'''\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n\"\"\") == \"2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n\"\"\", \"it works\"\n\nassert solution(\"\"\"3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n\"\"\") == \"3 1 1\\n1 3 1\\n1 1 1\\n1 1 1\\n\", \"it works\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3 2') == '2 1 2 3'\nassert solution('3 3 4') == '1 2 1 2'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3'\n\nassert solution('''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '3 1 1'"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 4\\nPAINT 3 0 0 1 1\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '1 1 1\\n1 2 1 2\\n1 1 1\\n1 2 1 2\\n'\nassert solution('4 4 2\\nPAINT 2 0 0 3 3\\nPAINT 3 0 3 3 3\\nPAINT 2 0 0 3 3\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '2 1 2 3\\n1 2 1 2 3\\n1 2 1 2 3\\n1 2 1 2 3\\n'\nassert solution('8 8 4\\nPAINT 2 0 0 1 1\\nPAINT 3 0 3 3 3\\nPAINT 2 0 0 1 1\\nPAINT 2 0 0 1 1\\nSAVE\\nPAINT 2 1 1 2 2\\nLOAD 1\\n') == '1 1 1\\n1 2 1 2\\n1 1 1\\n1 2 1 2\\n'\nassert solution('1 5 5\\nPAINT 0 0 0 1 1\\nPAINT 1 1 1 1 1\\nPAINT 0 0 0 1 1\\nSAVE\\nPAINT 0 1 1 2 2\\nLOAD 1\\n') == '1 1 1\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n'\nassert solution('1 7 7\\nPAINT 0 0 0 1 1\\nPAINT 1 1 1 1 1\\nPAINT 0 0 0 1 1\\nPAINT 1 0 0 0 1\\nPAINT 1 1 1 1 1\\nPAINT 0 0 0 0 1\\nSAVE\\nPAINT 0 1 1 2 2\\nLOAD 1\\n') == '1 1 1\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3 2\") == \"2 1 2 3\"\nassert solution(\"3 3 4\") == \"1 2 1 2\""
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"2 1 2 3\"\nassert solution(\"3 3 4\") == \"1 2 1 2\""
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3'\nassert solution('''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '1 2 1 2'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 5 1') == '1 2 5 4'\nassert solution('4 1 2 3') == '1 2 3 4'\nprint(\"You're all set!\")"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\nprint('All test cases passed')\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\") == \"1 2\"\nassert solution(\"5 1\") == \"1 2 3 4 5\"\nassert solution(\"7 1\") == \"1 2 3 4 5 6 7\"\n\"\"\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\nassert solution('5 -1') == '1 5 2 4'\nassert solution('5 2 1 -1') == '1 5 2 4 -1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '1 2 3 5'\nassert solution('5 1') == '-1'\nassert solution('1 1') == '1'"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 3') == '4 2'\nassert solution('1 2 3') == '1 2 3'\nassert solution('5 1') == '-1'"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\", \"Wrong answer!\"\nassert solution(\"5 1\") == \"\", \"Wrong answer!\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"1 4 2 3\"\nassert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n4 2\\n2 1\\n1 3\") == \"1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4 2\n2 1\n1 3\n''') == '1', 'First'\nassert solution('''\n4\n5 0\n2 6\n8 6\n5 7\n''') == '0', 'Second'\n\nprint('All test cases passed!')\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\", \"error\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n4 2\n2 1\n1 3\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n4 2\n2 1\n1 3\n''') == '1'\nassert solution('''\n3\n4 2\n2 1\n1 3\n''') == '1'\nassert solution('''\n5\n5 0\n2 6\n8 6\n5 7\n''') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n2 1\n1 3\n''') == '1', \"First\"\n\nassert solution('''\n4 2\n2 1\n1 3\n''') == '0', \"Second\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5 0') == '1'\nassert solution('2 1') == '1'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 1\") == \"1\"\nassert solution(\"3 6 9\") == \"0\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1', 'Sample Test 1 Failed'\nassert solution('3') == '1', 'Sample Test 2 Failed'\nassert solution('4') == '0', 'Sample Test 3 Failed'\nassert solution('5') == '0', 'Sample Test 4 Failed'\nprint('All tests passed!')\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\nprint('all tests passed')"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\nassert solution('''\n5 5 0 3\n0 1 0 100\n1 2 2 100\n0 2 0 200\n2 3 4 100\n''') == '5 20'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5 0 3\") == \"4 140\"\nassert solution(\"2 1 0 1\") == \"1000 100\""
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4 0 3\") == \"4 140\"\nassert solution(\"4 4 0 3\") == \"4 140\"\nassert solution(\"2 1 0 1\") == \"1000 100\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 0 1') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4 0 3\") == \"4 140\"\nassert solution(\"2 1 0 1\") == \"1000 100000\""
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '4 140'\nassert solution('''\n2 1 0 1\n0 1 1000 100\nSample Output 2:\n1000 100000\n''') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 0 1\\n0 1 1000 100') == '1000 100000'\nassert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10') == '4 140'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 100000'\nprint(solution(input()))\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 0 3') == '4 -1'\nassert solution('5 5 0 3 1 1 1 0 0 1 1 0') == '5 -1'"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 3\n1 5\n7 7\n6 7\n4 4\n3 4\n5 7\n2 7\n7 5\n''') == '3'\nassert solution('''\n10 3\n1 5\n7 7\n6 7\n4 4\n3 4\n5 7\n2 7\n7 5\n''') == 'impossible'\n''')"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '3'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"100 7\\n1 50\\n50 70\\n70 90\\n90 40\\n20 60\\n60 80\\n80 20\\n\") == \"3\"\nassert solution(\n    \"8 2\\n8 3\\n5 7\\n\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 1\n2 2\n3 5\n4 6\n7 9\n6 10\n4 3\n5 7\n8 9\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1 2\n1 3\n2 2\n1 4\n2 5\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n3 7\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n4 7\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n7 1\n7 2\n7 3\n7 4\n7 5\n7 6\n7 7\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\\n1\\n1\\n\") == \"impossible\"\nassert solution(\"5 1\\n8 3\\n5 7\\n\") == \"3\"\nassert solution(\"8 2\\n8 3\\n5 7\\n\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '3'\n'''"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n') == '3'\nassert solution('1\\n2\\n3\\n4\\n') == 'impossible'\nassert solution('3\\n2\\n1\\n4\\n') == '4'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1 5\n4 5\n3 4\n4 3\n5 2\nSample Output 2:\n0\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n40 30\n''') == '2'\nassert solution('''\n100 100\n''') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution([50, 50, 50]) == \"impossible\"\nassert solution([50, 50, 50, 50, 50]) == \"3\"\n\nimport sys"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\nassert solution('10000000') == '1'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\nassert solution('100000000000000000000000000000') == '1'\nassert solution('2147483647') == '2147483647'"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r'12') == '1'\nassert solution(r'51090942171709440000') == '21'\nassert solution(r'5') == '5'\n\"\"\""
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('120') == '120'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\nassert solution('123') == '1'\nassert solution('0') == '0'\nassert solution('-1') == '1'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"120\") == \"120\"\nassert solution(\"0\") == \"0\"\n\"\"\""
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 1 2\") == '45', \"Wrong result\"\nassert solution(\"3 3 3\") == '10', \"Wrong result\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 1 2\n3 5''') == '10'\nassert solution('''10 1 2\n3 5''') == '45'''\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 1 2\n''') == '45'\nassert solution('''\n3 3 3\n''') == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 2') == '45'\nassert solution('10 1 2') == '45'\nassert solution('10 10 10') == '45'"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 3\") == \"45\"\nassert solution(\"10 1 2\") == \"10\"\nassert solution(\"3 3 3\") == \"10\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"3 3\") == \"10\"\nassert solution(\"10 1 2\") == \"45\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3') == \"18\"\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3') == \"20\"\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3') == \"impossible\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n10\\n\") == \"20\"\nassert solution(\"10\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n10\\n\") == \"impossible\"\nprint('all tests passed')\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"18\"\nassert solution(\"5 2\") == \"impossible\"\nassert solution(\"5 3\") == \"20\"\nassert solution(\"10 2\") == \"impossible\"\nassert solution(\"2 9\") == \"impossible\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10') == '20'\n\nimport heapq\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == '18'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2\n3 2\n2 1\n5 1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n6\n3 1\n3 2\n2 3\n5 5\n1 1\n3 5\n\"\"\") == \"18\"\nassert solution(\"\"\"\n7\n2 2\n3 2\n3 1\n1 1\n5 5\n3 4\n3 2\n\"\"\") == \"20\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == 'impossible', 'First'\nassert solution('''\n3\n2 1\n2 1\n1\n''') == '5', 'Second'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18', 'Third'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n') == '20'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1\n2\n3''') == 'impossible'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\nSample Input 3:\n3\n3 1\n4 1\n5 9\nSample Output 3:\n4\n''') == 'impossible'\nassert solution('''5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\nSample Input 4:\n3\n3 1\n4 1\n5 9\n2 6\n5 3\n5\nSample Output 4:\n14"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n\"\n    \"1 5 10\\n\"\n    \"7 8 2\\n\"\n) == \"3\"\nassert solution(\n    \"3\\n\"\n    \"-1 -1 -1\\n\"\n    \"5 5 5\\n\"\n    \"10 10 10\\n\"\n) == \"11\"\nassert solution(\n    \"10\\n\"\n    \"2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n\"\n    \"5 5 5\\n\"\n    \"10 10 10\\n\"\n) == \"8\"\nassert solution(\n    \"10\\n\"\n    \"-1 -1 -1\\n\"\n    \"5 5 5\\n\"\n    \"10 10 10\\n\"\n) == \"11\"\nassert solution(\n    \"10\\n\"\n    \"1 1 1 1 1 1 1 1 1 1 1 1 1\\n\"\n    \"5 5 5\\n\"\n    \"10 10 10\\n\"\n) == \"0\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '5'\nassert solution('5') == '7'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 5 10\n7 8 2\n''') == '3'\nassert solution('''\n3\n-1 -1 -1\n5 5 5\n10 10 10\n''') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 5 10\\n7 8 2') == '3'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '11'\nassert solution('3') == '11'\nassert solution('4') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 5 10\n7 8 2\n''') == '3'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"11\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '11'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n110\n011\nSample Input 3:\n4 1\n1000\n1001\nSample Output 3:\n3''') == '2'\nassert solution('''4 2\n1000\n1001\nSample Input 4:\n4 2\n10101\n10111\nSample Output 4:\n1''') == '1'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1\n110\n011\n''') == '2'\nassert solution('''4 2\n1000\n1000\n0000\n0010\n''') == '0'\nprint(solution('''3 1\n110\n011\n'''))\nprint(solution('''4 2\n1000\n1000\n0000\n0010\n'''))"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'\n\nfrom math import ceil\n\nn, m = list(map(int, input().split()))\na = [[int(i) for i in input().split()] for j in range(m)]\n\ncount = 0\nfor x in range(0, 2 ** n):\n    res = 0\n    for j in range(0, m):\n        temp = (x >> j) & 1\n        if temp == a[j][0] and a[j][1] == 0:\n            res += 1\n        if temp == a[j][0] and a[j][1] == 1:\n            res -= 1\n    count += ceil(res / 2)\n\nprint(count % 10000003)"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1\n\n''') == '2'\nassert solution('''\n2\n1\n\n''') == '0'\nassert solution('''\n4\n2\n\n''') == '0'\nassert solution('''\n3\n1\n\n''') == '2'\nassert solution('''\n5\n3\n\n''') == '3'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 1 2\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 1') == '0'\nassert solution('2 2') == '0'"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1\n110\n011\nSample Input 3:\n5 4\n0000\n0000\n0000\n0000\n0000\nSample Output 3:\n5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '0'\nassert solution(input) == '2'\nassert solution(input) == '0'\nassert solution(input) == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 1\n110\n011\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 2\n1000\n1000\n0000\n0010\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3 1') == '2'\nassert solution('4 2') == '0'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n3') == '1'\nassert solution('3\\n1 3 2\\n2') == '5'\nassert solution('3\\n1 3 2\\n3') == '5'"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"5\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5\\n\"\n    \"1 3 2\\n\"\n    \"3\") == \"1\"\nassert solution(\n    \"5\\n\"\n    \"1 3 2\\n\"\n    \"4\") == \"2\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3''') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n2\n''') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n3\n2\n''') == '1'\nassert solution('''\n3\n1 3 2\n2\n''') == '5'\nassert solution('''\n3\n1 3 3\n2\n''') == '1'\nassert solution('''\n3\n1 3 3\n2\n''') == '5'\n'''\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 100 20\\n\") == \"0\"\nassert solution(\"10 10 1\\n\") == \"19\""
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 1\n100 100\n''') == \"0\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\nprint('Congratulations, have a nice day!')\n\n'''\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 100 20\\n\") == \"0\"\nassert solution(\"10 10 1\\n\") == \"19\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 100 20\\n\") == \"0\"\nassert solution(\"10 10 1\\n\") == \"19\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 10 1\n\"\"\") == \"19\""
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n$n$ $r$ $p$\n1 100 1\n''') == '0'\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nc 1\\nimport c\") == \"c\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\nSample Input 3:\n6\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\nSample Output 3:\nSHIP IT\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'SHIP IT'\nassert solution('''\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'c'\n\n\"\"\"\n--- Day 6: Custom Customs ---\n\nAs your flight approaches the regional airport where you'll switch to a much larger plane, customs declaration forms are distributed to the passengers.\n\nThe form asks a series of 26 yes-or-no questions marked a through z. All you need to do is identify the questions for which anyone in your group answers \"yes\". Since your group is just you, this doesn't take very long.\n\nHowever, the person sitting next to you seems to be experiencing a language barrier and asks if you can help. For each of the people in their group, you write down the questions for which they answer \"yes\", one per line. For example:\n\nabcx\nabcy\nabcz\nIn this group, there are 6 questions to which anyone answered \"yes\": a, b, c, x, y, and z. (Duplicate answers to the same question don't count extra; each question counts at most once.)\n\nAnother group asks for your help, then another, and eventually you've collected answers from every group on the plane (your puzzle input). Each group's answers are separated by a blank line, and within each group, each person's answers are on a single line. For example:\n\nabc\n\na\nb\nc\nab\nac\n\na\na\na\na\n\nb\nThis list represents answers from five groups:\n\nThe first group contains one person who answered \"yes\" to 3 questions: a, b, and c.\nThe second group contains three people; combined, they answered \"yes\" to 3 questions: a, b, and c.\nThe third group contains two people; combined, they answered \"yes\" to 3 questions: a, b, and c.\nThe fourth group contains four people; combined, they answered \"yes\" to only 1 question, a.\nThe last group contains one person who answered \"yes\" to only 1 question, b.\nIn this example, the sum of these counts is 3 + 3 + 3 + 1 + 1 = 11.\n\nFor each group, count the number of questions to which anyone answered \"yes\". What is the sum of those counts?\n\"\"\""
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\n\nassert solution('''5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'c'"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1, a, 1, b, c, d, 2, c, d, 1, b, 3, 4, a, 5, a, 6, b, 7, 8, a, 3, 5, a, 8, d, 2, 6, c, 8, 7, 7, 4, 5, 6, 4, 6, 5, 6, 5, 6, 6, 7, 5, 7, 7, 6, 7, 8, 7, 7, 7, 4, 7, 4, 7, 6, 7, 6, 7, 7, 7, 7, 7, 4, 7, 4, 7, 4, 7, 7, 7, 4, 7, 5, 7, 5, 7, 5, 7, 4, 7, 5, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 7, 7, 7, 4, 7, 5, 7, 5, 7, 5, 7, 5, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4, 7, 4,"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nc 1\\nimport c\\nd 0\\n\") == \"c\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\\n\") == \"classb\"\n\nSample Input 3:\n4\nimport a, b, c\nimport d\nimport e, f, g, h\na 0\nimport g, h\na 1\nimport f, e, h\nimport e, d\nimport g, f\nimport h, c\na 2\nimport g, f, h\nimport h, c\nimport e, f, g\na 3\nimport h, g\nimport h, f, e\nimport h, b, a\nb 1\nimport g, f, h\nimport h, c\nimport e, f, g\na 4\nimport h, g\nimport h, f, e\nimport h, b, a\nc 1\nimport e, f, h\nimport e, d\nimport g, h, c\nimport g, f, e\na 5\nimport h, g, i\nimport h, f, e\nimport h, b, a\nb 2\nimport g, f, h\nimport h, c\nimport e, f, g\na 6\nimport h, g\nimport h, f, e\nimport h, b, a\nc 2\nimport g, h, i\nimport g, f, e\na 7\nimport h, g, i\nimport h, f, e\nimport h, b, a\nd 1\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 8\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 3\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 9\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 4\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 10\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 5\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 11\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 6\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 12\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 7\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 13\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 8\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 14\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 9\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 15\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 10\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 16\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 11\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 17\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 12\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 18\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 13\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 19\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 14\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 20\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 15\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 21\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 16\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 22\nimport h, g, i\nimport h, f, e\nimport h, b, a\nc 17\nimport g, f, h\nimport g, c\nimport e, f, h\nimport e, d\nimport i, h, c\nimport i, f, e\na 23\nimport h, g, i\nimport h, f, e\nimport h"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nimport c\\nc 1\\nimport c') == 'c'\nassert solution('5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0') == 'SHIP IT'"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c''') == \"SHIP IT\"\n\nassert solution('''5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nlibe 0\nSample Output 2:\nSHIP IT''') == \"classa\"\n\n\n'''\nSOLUTION\n\n'''\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\nimport fizz\nimport buzz\nimport fizzbuzz\n''') == 'fizzbuzz'\nassert solution('''\n1\nimport fizz\nimport buzz\nimport fizzbuzz\n''') == 'fizzbuzz'\nassert solution('''\n1\nimport fizz\nimport buzz\nimport fizzbuzz\n''') == 'fizzbuzz'\nassert solution('''\n3\nimport fizz\nimport buzz\nimport fizzbuzz\n''') == 'fizzbuzz'\nassert solution('''\n3\nimport fizz\nimport buzz\nimport fizzbuzz\n''') == 'fizzbuzz'\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nc 1\\nimport c\") == \"SHIP IT\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\\nSample Output 2:\nSHIP IT\n\n\"\"\",\"\"\"\n\nclass Solution:\n    def print_cycle(self, graph, visited, path):\n        if visited[path[-1]]:\n            return\n        visited[path[-1]] = True\n        print(path)\n        for n in graph[path[-1]]:\n            self.print_cycle(graph, visited, path + [n])\n\n    def findCycle(self, graph):\n        visited = {}\n        for i in graph:\n            visited[i] = False\n        cycle = []\n        for node in graph:\n            if not visited[node]:\n                self.print_cycle(graph, visited, [node])\n                cycle = cycle + [node]\n        return cycle[::-1]\n\n\ns = Solution()\nassert s.findCycle([[\"a\", \"b\"], [\"b\", \"c\"], [\"c\", \"d\"], [\"d\", \"a\"]]) == [\"a\", \"b\", \"c\"]\nassert s.findCycle([[\"a\", \"b\"], [\"b\", \"c\"], [\"c\", \"d\"], [\"d\", \"a\"]]) == [\"d\", \"c\", \"b\", \"a\"]\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\na,b,c,d\\na,b,c\\nimport c,d,b,c\\nimport d\\nimport b\\nimport a\\n\") == \"SHIP IT\"\nassert solution(\"5\\na,b,c,d\\na,b,c\\nimport c,d,b,c\\nimport d\\nimport b\\nimport a\\n\") == \"c,d,b,a\"\nassert solution(\"5\\na,b,c,d\\na,b,c\\nimport c,d,b,c\\nimport d\\nimport b\\nimport a\\n\") == \"a,b,d,c\"\nassert solution(\"5\\na,b,c,d\\na,b,c\\nimport c,d,b,c\\nimport d\\nimport b\\nimport a\\n\") == \"SHIP IT\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5+3+x\n9 10\n''') == '1'\nassert solution('''20+3+x\n0 5\n''') == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5+3+x\n9 10''') == '1'\nassert solution('''20+3+x\n0 5''') == '2'\nassert solution('''20+3+x\n-1 0''') == '0'\nassert solution('''5+3+x\n-1 0''') == '0'\nassert solution('''5+3+x\n-1 0''') == '0'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5+3+x''') == '1'\nassert solution('''20+3+x''') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(input) == output"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5+3+x''') == '1'\nassert solution('''20+3+x''') == '2'\nassert solution('''5+3+x''') == '2'\nprint('Congratulations, have a nice day!')"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"9 10\") == \"2\"\nassert solution(\"20+3+x\") == \"2\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nassert solution('5+3+x+2') == '1'\nassert solution('20+3+x+2') == '3'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10\\n1 15\\n0 20') == 'yes'\nprint(solution(input))"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([2, 10, 0, 15, 5, 20]) == \"yes\"\nassert solution([2, 10, 1, 15, 0, 20]) == \"no\"\n\nimport io\nimport os\nimport sys\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10\\n1 15\\n0 20') == 'yes'\nassert solution('1 10\\n0 15\\n5 20') == 'no'\nassert solution('1 1\\n2 3\\n5 2') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 10\\n0 15\\n5 20\\n\") == \"yes\"\nassert solution(\"2 10\\n1 15\\n0 20\\n\") == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 10\n1 15\n0 20\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n2 10\n1 15\n0 20\n\"\"\") == \"no\"\nassert solution(\"\"\"\n1 1\n1 1\n\"\"\") == \"no\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes'\nprint('all good')"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 10\n1 15\n0 20\n''') == 'yes', \"Should take photographs of all photos\"\nassert solution('''\n2 10\n0 15\n5 20\n''') == 'no', \"Should not be able to take all photographs\""
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 10\n0 15\n5 20\n''') == 'yes'\nassert solution('''\n1 2\n3 3\n''') == 'no'\nassert solution('''\n10 10\n0 0\n10 10\n''') == 'no'\nassert solution('''\n3 3\n2 0\n3 0\n''') == 'no'\nassert solution('''\n4 5\n3 3\n2 2\n4 4\n''') == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 10') == 'yes'\nassert solution('1 10') == 'no'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4 4\n3\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25', 'Solution'\nassert solution('''4 4 4\n4\n2 green\n6 yellow\n10 red\n14 green\n4 red\n''') == '0', 'Solution'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4 4\") == \"0.25\"\nassert solution(\"4 4 4\") == \"0\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0'\nassert solution('5 1 2') == '0.16666666666666666'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 10 10\n1 red\n2 green\n3 green\n4 red\n5 yellow\n6 green\n7 red\n8 red\n9 red\n10 green\n\n0 0.5''') == '0.25', 'First Example'\nassert solution('''\n1 1 1\n0 red\n2 green\n3 green\n4 green\n5 red\n6 green\n7 red\n8 red\n9 red\n10 green\n\n0 0.5''') == '0.25', 'Second Example'\nassert solution('''\n5 5 5\n1 red\n2 green\n3 green\n4 green\n5 green\n6 red\n7 red\n8 red\n9 red\n10 green\n\n1 0.5''') == '0', 'Third Example'\nassert solution('''\n10 10 10\n1 red\n2 green\n3 green\n4 green\n5 green\n6 green\n7 red\n8 red\n9 red\n10 green\n11 green\n12 green\n13 green\n14 green\n15 green\n16 green\n17 green\n18 green\n19 green\n20 green\n\n1 0.5''') == '0.25', 'Fourth Example'\n\nprint('All Tests Passed!')\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5 2\\n4 5 3\\n3 4 1\\n2 3 2\\n2 3 2\\n2 3 2\") == \"0.25\"\nassert solution(\"2 2 1\\n3 3 2\\n1 3 1\\n2 2 3\\n1 2 1\\n2 1 2\\n3 2 2\\n1 1 3\") == \"0.25\"\nassert solution(\"3 5 1\\n3 4 5\\n3 2 5\\n2 4 5\\n3 4 5\\n1 3 5\") == \"0.25\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0.25'\nassert solution('5 5 5') == '0.25'\nassert solution('2 2 2') == '0.5'\nassert solution('1 1 1') == '1.0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0'\nassert solution('10 5 5') == '0.4'\nassert solution('10 5 5') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n4 4 4') == '0.25'\nassert solution('2\\n1 1 1') == '0'\nassert solution('3\\n1 2 5') == '0'\nassert solution('3\\n2 3 5') == '0'\nassert solution('3\\n2 2 3') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4 4\") == \"0.25\", \"More examples to check\"\nassert solution(\"4 4 4\") == \"0.25\", \"More examples to check\"\nassert solution(\"4 4 4\") == \"0.25\", \"More examples to check\"\nassert solution(\"4 4 4\") == \"0.25\", \"More examples to check\"\nassert solution(\"4 4 4\") == \"0.25\", \"More examples to check\""
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 4\") == \"0.25\"\nassert solution(\"3 3 3\") == \"0\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 7\") == \"3\"\nassert solution(\"6 8\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 7\") == \"3\"\nassert solution(\"6 8\") == \"inf\"\nprint(solution(input()))"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf'\nassert solution('6 5\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n') == 'inf'\nassert solution('6 5\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n') == '3'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n') == '3'\n\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\\n') == 'inf'\n\nassert solution('1000 5\\n6 3\\n6 7\\n7 3\\n7 7\\n7 6\\n6 3\\n6 7\\n7 6\\n6 5\\n7 5\\n5 6\\n6 2\\n7 4\\n7 5\\n6 1\\n4 5\\n4 7\\n5 4\\n6 4\\n6 7\\n7 7\\n5 5\\n5 6\\n4 7\\n4 6\\n4 4\\n6 5\\n5 7\\n4 6\\n4 1\\n6 5\\n7 5\\n7 7\\n6 7\\n5 5\\n6 7\\n7 1\\n7 4\\n5 6\\n5 6\\n4 4\\n6 5\\n5 4\\n6 5\\n4 5\\n6 5\\n5 6\\n6 1\\n7 3\\n') == '9'\n\nimport sys\nimport os\n\nsys.path.append(os.path.dirname(sys.path[0]) + \"/..\")\nfrom utils import *\n\nimport random\nfrom bisect import bisect_left, bisect_right\nimport functools"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4''') == '3'\nassert solution('''6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3''') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\") == \"3\"\nassert solution(\"6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\") == \"inf\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n''') == '3'\nassert solution('''\n6 8\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3\n''') == 'inf'\nassert solution('''\n6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n''') == '3'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4\n1 2 3 4\n''') == '4'\nassert solution('''12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"3\"\nassert solution(\"7 1\") == \"1\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '4'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 4\n1 2 3 4 5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3 2\n2 3 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 4\n1 2 3 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n8 5\n1 1 2 3 4 5 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n7 2\n1 1 2 3 4 5 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '4', \"First\"\nassert solution('''\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2', \"Second\"\nprint('You are good')"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"12 3\") == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1\n1\n1''') == \"1\"\nprint(solution('''1 3\n1\n'''))"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 4\\n\"\n    \"1 2 3 4\\n\"\n) == \"4\\n\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 5') == '3'\nassert solution('2 4') == '4'\nassert solution('12 3') == '2'\nassert solution('12 3') == '2'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'hoose'\nassert solution('4') =='moose'\nassert solution('1') == 'NO TYPOS'"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nhose\\nhoose\\noose\\nmoo') == 'hoose'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == \"noises\"\nassert solution('4') == \"noise\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise') == 'hoose\\nnoises\\nnoise'"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nhoose\\nhose\\nnoises\\nnoise\\n\") == \"hoose, noise\"\n\n\"\"\""
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\nhoose\nhose\nnose\nnoises\nnoise\n''') == 'hoose, noises, noise'\nassert solution('''\n3\nhose\nhoose\nnose\n''') == 'hoose, nose'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\nhoose\\nhose\\n\") == \"noises\"\n\nassert solution(\"4\\nhose\\noose\\nnoises\\n\") == \"noise\"\n\"\"\""
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nhoes\\nhoes\\nhoes\") == \"NO TYPOS\"\nassert solution(\"3\\nhoes\\nhoes\\nhoes\\nhoes\") == \"hoes hoes hoes hoes\"\nassert solution(\"2\\nhooe\\nhooe\\nhooe\\nhooe\") == \"hooe hooe\"\nassert solution(\"3\\nhoes\\nhoes\\nhoes\\nhoes\") == \"hoes hoes hoes hoes\"\n\nIf there are no typos, the program should return the string NO TYPOS.\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join(['hose', 'hoose', 'oose','moose'])) == 'hoose, moose'\n\"\"\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'NO TYPOS'\nassert solution('4') == 'hoose,moose,noise'\nassert solution('1') == 'NO TYPOS'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10\n''') == '2 2'\nassert solution('''\n2\n1\n''') == '1 1'\nassert solution('''\n100\n100\n''') == '0 0'\nassert solution('''\n1\n1\n''') == '0 1'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == '2'\nassert solution(\"2 3\") == '5'"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1\n2''') == '2 1'\nassert solution('''1 1\n1\n1''') == '2 2'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == '2'\nassert solution(\"2 3\") == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n3\nSample Output 2:\n0\n16\n8\n''') == '2 2 5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"2 3\") == \"5\"\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '2'\nassert solution('3') == '2'\nassert solution('2 3') == '5'\nprint(solution(input()))"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 1\n2\n''') == '2'\nassert solution('''\n4 2\n3\n''') == '5'\nassert solution('''\n4 1\n2\n''') == '1'\nassert solution('''\n4 3\n2\n''') == '0'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '2'\nassert solution('3') == '2'\nassert solution('4') == '5'"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '68.52419365'\n\"\"\"\n\nn = int(input())\nd = {}\n\nfor _ in range(n - 1):\n    t, g, r = map(int, input().split())\n    if t in d:\n        d[t].append((g, r))\n    else:\n        d[t] = [(g, r)]\n\nt, g, r = map(int, input().split())\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '44.72135955'\nassert solution(stdin='2') == '68.52419365'\nassert solution(stdin='1') == '44.72135955'\nassert solution(stdin='11') == '40.04547275'\n\nstdin = sys.stdin.read()\nprint(solution(stdin))\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n50 45 45\n''') == '68.52419365'\nassert solution('''\n2\n50 45 45\n''') == '68.52419365'\nprint(solution('''\n1\n50 45 45\n'''))"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '44.72135955'\nassert solution('1') == '44.72135955'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0.0001999999999999999'\nassert solution('2') == '0.02999999999999999'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n40 50\\n') == '44.72135955'\nassert solution('2\\n50 45 45\\n') == '68.52419365'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '58.0058333'\nassert solution('7') == '21.4333333'\nassert solution('10') == '94.1666667'\nassert solution('5') == '58.0058333'\nassert solution('7') == '21.4333333'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"3 4 2 3\") == \"2\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"3 4 2 3\") == \"0\"\nprint(\"all tests passed\")\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '1'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '3'\nassert solution('5 3 1') == '2'"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"3 4 2 3\") == \"3\"\nassert solution(\"5 3 2 3\") == \"2\""
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '2\\n3\\n0\\n2\\n1\\n1\\n2\\n3'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '0'"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 2 3') == '1'\nassert solution('4 4 2 3') == '0'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4 2 3\n1 3 1''') == '1\nassert solution('''4 5 2 3\n1 3 1''') == '1\nassert solution('''5 6 4 2 3\n1 3 1''') == '0\nassert solution('''4 5 2 3\n1 3 1''') == '1'''\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"1 1\") == \"3\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\"\nprint(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 5\n1 1\n''') == '3'\nassert solution('''\n5 3\n2 2 3 2 2\n''') == '2'\nassert solution('''\n10 5\n1 1 1 1 1 1 1 1 1\n''') == '9'"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '3'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 1\") == \"3\"\nassert solution(\"5 3\\n2 2 3 2 2\") == \"2\"\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '3'\nassert solution('5 3') == '2'\nassert solution('3 5') == '2'\nassert solution('2 5') == '3'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '3'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 5\n1 1\n''') == '3'\nassert solution('''4 5\n2 3 3 2\n''') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '2'\nassert solution('10 10') == '9'\nassert solution('9 10') == '2'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '50'\nassert solution('2') == '25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '50'\nassert solution('2') == '25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n100 100\\n50 50\\n\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\\n\") == \"25\"\nprint(\"All test cases passed.\")\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n100 100\n50 50\n''') == '50'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '50'\nassert solution('0 50') == '25'\nassert solution('100 100') == '50'"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n100 100\\n50 50') == '50'\nassert solution('2\\n0 50\\n50 0') == '25'"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n100 100\\n50 50') == '50'\nassert solution('2\\n0 100\\n50 0\\n75 50') == '25'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n100 100\\n50 50') == '50'\nassert solution('3\\n0 50\\n50 0\\n0 50') == '25'"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n100 100\n50 50''') == '50'\nassert solution('''2\n100 100\n50 50''') == '50'\nassert solution('''3\n100 50\n50 100\n50 100''') == '100'\nassert solution('''3\n100 50\n100 50\n100 50''') == '100'\nassert solution('''3\n100 50\n50 100\n50 100''') == '100'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"2\n100 100\n50 50\n\"\"\") == \"50\"\n\nassert solution(\"\"\"2\n0 50\n50 0\n\"\"\") == \"25\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '160'\nassert solution('3') == '250'"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2\n100\n200\n\"\"\") == \"160\"\nassert solution(\"\"\"3\n100\n200\n2010\n\"\"\") == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n100\n200\n''') == '160'\nassert solution('''\n3\n100\n200\n2010\n''') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"60\"\nassert solution(\"2\") == \"90\"\nassert solution(\"3\") == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '160'\nassert solution('3') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n100\n200''') == '160'\nassert solution('''3\n100\n200\n2010''') == '250'"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"160\""
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n100\n200\n''') == '160'\nassert solution('''\n3\n100\n200\n2010\n''') == '250'"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n100\\n200\\n') == '160'\nassert solution('3\\n100\\n200\\n2010\\n') == '250'\nassert solution('2\\n200\\n100\\n') == '200'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n100\\n200\\n') == '160'\nassert solution('2\\n100\\n200\\n') == '250'\nassert solution('3\\n100\\n200\\n2010\\n') == '250'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '0'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 5') == '0'\nassert solution('1 1') == '2'"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('5 5') == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n''') == \"2\"\n\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == \"0\"\n\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n5 5\n1 1 1\n''') == \"1\""
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '0'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n0 1 1\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '2'\nassert solution('''\n3 4\n0 1 5\n1 2 6\n2 3 7\n3 4 7\n4 0 3\n''') == '0'\nassert solution('''\n3 3\n0 1 2\n1 2 3\n2 3 4\n3 4 5\n4 0 3\n''') == '0'\n\n'''\n8\n0 1 5\n1 2 6\n2 3 7\n3 4 7\n4 0 3\n'''\n\n'''\n8\n0 1 5\n1 2 6\n2 3 7\n3 4 7\n4 0 3\n'''\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n''') == '2'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"5 5\") == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\nassert solution('''\n8 7\n0 1 6\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10 11\n10 11 12\n11 12 13\n12 13 14\n13 14 15\n14 15 16\n15 16 17\n16 17 18\n16 18 19\n17 18 20\n18 19 20\n''') == '4'"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"1 1\"\nassert solution(\"4 2\") == \"1 2\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\nassert solution(\"10 10\") == \"0\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '1 1'\nassert solution('4 2') == '1 2'\nassert solution('5 4') == '-1'\nassert solution('6 2') == '-1'"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n3 3 2\n3 3 3\n\"\"\") == \"1 1\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n6 3\n3 3 2 1\n3 3 3\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n4 3\n3 3 2 1\n3 3 3\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n10 20\n1 1 1 2 2 3 3 3 4 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5\n\"\"\") == \"3 4\"\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3\\n3 3 2 1') == '1 1'\nassert solution('4 2\\n3 3 3') == '2 2'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '1 1 1 1 1'\nassert solution('4 2') == '1 1 1 1'\nassert solution('5 3') == '1 1 1 1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n5 3\\n6 2') == '2 -1'\nassert solution('1\\n2 2\\n3 3\\n4 4') == '1 2 -1'\nassert solution('1\\n3 3\\n5 6\\n7 8\\n9 10') == '1 2 3 4 -1'\nassert solution('1\\n10 1\\n11 12\\n13 13\\n14 14\\n15 15') == '1 2 -1'"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '1 1'\nassert solution('4 2') == '1 2'\nassert solution('6 3') == '2 3 4'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == stdout\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n3 3 2 1\n3 3 3\n''') == '1 1\n1 2\n2 3 4\n'''\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 10\\n0 0 D\\n10 1 L\\n') == '10.0\\n10.0\\n0.0'\nassert solution('4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n') == '10.0\\n4.0\\n1.0\\n'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\\n\"\nassert solution(\n    \"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\\n\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0\n\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '4.0\n\nprint(solution('''4 3 7\n0 0 D\n10 1 L\n'''))\n\n'''\nSample Input 1:\n5 4 3\n1 2 L\n4 3 L\n5 2 R\n4 1 R\n4 0 R\nSample Output 1:\n4.5\n3.0\n0.5\n1.5\nSample Input 2:\n5 4 3\n1 2 D\n4 3 D\n5 2 R\n4 1 R\n4 0 R\nSample Output 2:\n2.5\n0.0\n1.5\n3.0\n1.5\nSample Output 3:\n5.5\n4.5\n2.5\n1.5\n'''\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 3 10\\n\"\n    \"0 0 D\\n\"\n    \"10 1 L\\n\"\n    \"Sample Output 2: 10.0 4.0 1.0\"\n) == \"10.0 4.0 1.0\""
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"10.0\\n10.0\\n1.0\\n10.0\""
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L''') == '10.0\\n10.0\\n0.0\\n'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\") == \"10.0\\n10.0\\n0.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '4.0\nassert solution('''5 4 6\n1 1 D\n5 1 D\n1 1 D\n5 5 D\n1 1 D\n''') == '7.0\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('dwwjjx') == 'xxbaaf'\nassert solution('oim qqpl rrlll oglx') == 'xqzgllz'\nassert solution('vb uzf yrmjx') == 'urxxyz'\nassert solution('oijkl mj') =='maeklm'\nassert solution('vqc qzm') == 'zmzcq'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''a\nbe\nour\nrum\nwill\ndead\nhook\nship\nblood\nsable\navenge\nparrot\ncaptain\n''') == 'be will dead hook ship blood sable avenge parrot captain'\n\nassert solution('''z\nbe\nour\nrum\nwill\ndead\nhook\nship\nblood\nsable\navenge\nparrot\ncaptain\n''') == 'be will dead hook ship blood sable avenge parrot captain'\n\nassert solution('''r\nbe\nour\nrum\nwill\ndead\nhook\nship\nblood\nsable\navenge\nparrot\ncaptain\n''') == 'be will dead hook ship blood sable avenge parrot captain'\n\nassert solution('''y\nbe\nour\nrum\nwill\ndead\nhook\nship\nblood\nsable\navenge\nparrot\ncaptain\n''') == 'be will dead hook ship blood sable avenge parrot captain'\n\nassert solution('''t\nbe\nour\nrum\nwill\ndead\nhook\nship\nblood\nsable\navenge\nparrot\ncaptain\n''') == 'be will dead hook ship blood sable avenge parrot captain'"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''ex eoii jpxbmx cvz uxju sjzzcn jzz\n\nwl jkd\n''') == 'we will avenge our dead parrot arr'''\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'Impossible'\nprint(solution(input()))"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\nassert solution('') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''ex eoii jpxbmx cvz uxju sjzzcn jzz''') == 'we will avenge our dead parrot arr'\nassert solution('''wl jkd''') == 'Impossible'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nprint('Tests passed')\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Hamburg Bremen') == '68.3'\nassert solution('Amsterdam Rotterdam') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n''') == '68.3'\n'''"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1\\n3\\n2\\n2\\n1\\n') == 'IMPOSSIBLE'\nassert solution('1\\n1\\n1\\n1\\n') == 'IMPOSSIBLE'\n\n\"\"\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n    'Hamburg Bremen',\n    '3',\n    'Hamburg Bremen 15 68 10 5',\n    'Hamburg Bremen 46 55 50 60',\n    'Bremen Frankfurt 14 226 10 120',\n])) == '68.3', solution"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Hamburg Bremen\") == \"68.3\"\nassert solution(\"Amsterdam Rotterdam\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nHamburg Bremen\n1\nHamburg Bremen 15 68 10 5\n\"\"\") == \"68.3\"\nassert solution(\"\"\"\nAmsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120\\n') == '68.3'\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\n') == 'IMPOSSIBLE'\nassert solution('\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n\"\"\") == \"68.3\"\nassert solution(\"\"\"\nAmsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Hamburg Bremen\\n3\\nHamburg Bremen 15 68 10 5\\nHamburg Bremen 46 55 50 60\\nBremen Frankfurt 14 226 10 120') == '68.3'\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\nAmsterdam Utrecht 10 22 5 10\\nAmsterdam Utrecht 10 22 5 10') == 'IMPOSSIBLE'\nassert solution('Amsterdam Rotterdam\\n1\\nAmsterdam Utrecht 10 22 5 10\\nAmsterdam Utrecht 10 22 5 10\\nAmsterdam Utrecht 10 22 5 10\\nAmsterdam Utrecht 10 22 5 10\\nAmsterdam Rotterdam 10 22 5 10\\nAmsterdam Utrecht 10 22 5 10\\nAmsterdam Utrecht 10 22 5 10') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n''') == '68.3'\nassert solution('''\nAmsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\n''') == 'IMPOSSIBLE'\nassert solution('''\nHamburg Bremen\n4\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n''') == 'IMPOSSIBLE'\nassert solution('''\nAmsterdam Rotterdam\n2\nAmsterdam Utrecht 10 22 5 10\nAmsterdam Rotterdam 6 7 8\n''') == 'IMPOSSIBLE'\nassert solution('''\nHamburg Bremen\n1\nHamburg Bremen 15 68 10 5\n''') == 'IMPOSSIBLE'\n\n'''\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n*-*.*\\n|.|.|\\n*.*-*\") == \"3\"\nassert solution(\"4\\n*.*.*\\n|...|\\n*.*.*\") == \"4\"\nassert solution(\"4\\n*.*.*\\n|...|\\n*.*.*\") == \"4\"\nassert solution(\"4\\n*.*.*\\n|...|\\n*.*.*\") == \"4\"\nassert solution(\"4\\n*.*.*\\n|...|\\n*.*.*\") == \"4\"\n\n--Solution By Code--"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3'\nassert solution('2\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n...\\n*.*') == '1'\nassert solution('2\\n**\\n***') == '4'"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*''') == '4'\n\nassert solution('''\n*.*-*\n*.*-*\n*.*-*\n*.*-*\n*.*-*\n*.*-*\n*.*-*''') == '9'\n\nassert solution('''\n*.*-*\n*.*-*\n*.*-*\n*.*-*\n*.*-*\n*.*-*\n*.*-*''') == '5'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '3'\nassert solution('5\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '4'\nassert solution('8\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*') == '5'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == '3'\nassert solution(\"2\") == '4'\nassert solution(\"1\") == '1'"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"4\""
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''*-*.*\n|.|.|\n*.*-*''') == '3'\nassert solution('''*-*.*\n|.|.|\n*.*-*''') == '4'\nassert solution('''*-*.*\n|.|.|\n*.*-*''') == '5'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'impossible'\nassert solution('11') == '1'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"4\") == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"5\") == \"impossible\"\nassert solution(\"1000\") == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''8\n12210020\nSample Input 2:\n4\n1111\nSample Output 2:\nimpossible''') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == 'impossible'\nassert solution('4') == '4'"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8\n12210020\nSample Input 2:\n4\n1111\nSample Output 2:\n4''') == \"impossible\", \"Should be impossible\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n12210020\n1111\n11122233\n''') == 'impossible'\n\nassert solution('''6\n111222\n22\n''') == '1'\n\nassert solution('''2\n11\n''') == 'impossible'\n\nassert solution('''3\n10\n10\n''') == 'impossible'\n\nassert solution('''5\n1111\n2221\n''') == '3'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '4'\nassert solution('12210020') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"impossible\"\nassert solution(\"12\") == \"4\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n500 500 499\n0 0 999\n1000 1000 200\n1000 1000 200\n0 0 999\n1000 1000 200\nSample Input 3:\n4\n500 500 499\n0 0 999\n1000 1000 200\n0 1000 200\n0 1000 200\nSample Output 3:\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n\nSample Input 4:\n3\n500 500 499\n0 0 999\n1000 1000 200\n0 1000 200\nSample Output 4:\nBill will be bitten.\n''') == '''Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'''\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200\nSample Input 1:\n1\n10\nSample Output 1:\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 0.00).\nSample Input 2:\n2\n0 0 999\n0 999 200\nSample Output 2:\nBill will be bitten.\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 0.00).'"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('5\\n100 100 999\\n200 200 999\\n100 200 999\\n200 100 999') == 'Bill will be bitten.'"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('1') == 'Bill will be bitten.'\nassert solution('2') == 'Bill will be bitten.'\nassert solution('3') == 'Bill will be bitten.'\nassert solution('4') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n500 500 499\\n0 0 999\\n1000 1000 200') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00)'\nassert solution('5\\n500 500 499\\n0 0 999\\n1000 1000 200\\n1500 1500 200') == 'Bill will be bitten.'"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('4') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"2\") == \"Bill will be bitten.\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n') == '2.00\\n3.00'\nassert solution('1\\n0\\n1000\\n') == '0.00\\n0.00'\nassert solution('5\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\n') == '2.00\\n3.00'\nprint('All tests passed!')\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\"\nassert solution(\"4\") == \"Bill will be bitten.\"\n\n\"\"\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"Bill enters at (0.00, 0.00) and leaves at (0.00, 0.00).\"\nassert solution(\"3\") == \"Bill enters at (0.00, 0.00) and leaves at (0.00, 0.00).\"\n\n\"\"\""
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'\nassert solution('2 4\\n+x+x+x+x') == '+x+o+x+o+x+o'\nassert solution('4 4\\n+x+x+x+x') == '+x+x+x+x'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(samples[0]) == solutions[0]\nassert solution(samples[1]) == solutions[1]\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxx+x++') == 'xxooo+o++'\nassert solution('8 3\\n+xx+x++') == 'xxo+++o++'\nassert solution('8 3\\n+xx+x++') == 'xxoo+oo++'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n++xx+x++\") == \"++xx+o++\"\nassert solution(\"8 3\\nxxxxxxxx\") == \"xxoooooo\"\nassert solution(\"2 3\\n++++\") == \"+++++\"\nassert solution(\"3 3\\n+++\") == \"++\"\nassert solution(\"3 3\\n+\") == \"++\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"ooo\"\nassert solution(\"8 3\") == \"ooo\"\nassert solution(\"1 0\") == \"x\"\n\nassert solution(\"0 2\") == \"xo\"\nassert solution(\"0 5\") == \"xo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\n\nassert solution('''8 3\nx+o++\n''') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3') == '++xx+o++'\n\nassert solution('8 3') == 'xxoooooo'\n\"\"\"\nfrom collections import deque\n\nfrom itertools import combinations_with_replacement\nfrom functools import reduce\n\nfrom operator import mul, add\n\nM, S = list(map(int, stdin.strip().split()))\n\nsteps = deque(stdin.strip())\n\npowers = []\n\nwhile steps:\n    step = steps.popleft()\n\n    if step in '+x':\n        powers.append(step)\n\n    else:\n        powers = powers[:-1]\n\n        for i in range(len(powers)):\n            powers[i] += step\n            powers[i] %= 2 ** S\n\n\npowers = powers[::-1]\npowers = list(map(lambda x: str(x), powers))\n\nassert len(powers) >= 1\n\nprint(''.join(powers))\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nx+xx+x') == 'xxooooo'\nassert solution('8 3\\nx+x+xx') == 'xxooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"xxoooooo\""
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'xoooxxxoooxxxooxxooxooxxooxxooxxooxxooxxooxxooxxooxx'\nassert solution('6') == 'xoooxxxooooxxoooxxooxxooxxooxxooxxooxxooxxooxxooxxooxx'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"The fox said, \\\"When?\\\"\\n\\\"Not till 12 o'clock\\\", replied the hen.\\n\\\"That clock is stopped, it will never strike.\\\" he said.\\n\") == \"\"\"close: lose\nhe: hen the\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\"\"\".strip()\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('***') == '***'\nassert solution('the fox said, \"When?\"') == \"oclock: clock the when\"\nassert solution('\"When?\" he said, \"When?\" replied the hen.') == 'oclock: oclock hen is he clock the when'"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Lost is Close to Lose') == 'close: lose'\nassert solution('The fox said, \"When?\"') == 'the: hen \"When?\"'\nassert solution('The fox said, \"When?\" said the hen.') == 'the: hen \"When?\"'\nassert solution('The fox said, \"When?\" said the hen.') == 'the: hen \"When?\"'\nassert solution('The fox said, \"When?\" said the hen.') == 'the: hen \"When?\"'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Lost is Close to Lose') == 'close: lose'\nassert solution('The fox said, \"When?\"') == 'clock: oclock'\nassert solution('\"When?\" said the fox, \"When?\" replied the hen.') == 'clock: oclock'\nassert solution('Better Documents Inc. wants to add Typo Checking in to the next generation of word processors.') == 'in: inc is'\nassert solution('\"When?\" said the fox, \"When?\" replied the hen.') == 'inc: in is'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"Lost is Close to Lose\") == \"close: lose\\nhe: the\\nin: inc is\\ninc: in\\nis: in\\nlose: close lost\\nlost: lose\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\"\n\nassert solution(\n    \"The fox said, \\\"When?\") == \"oclock: clock\\nhe: hen the\\nhen: he when\\nis: it\\nit: is\\nclose: close\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('The fox said, \"When?\"\\n\"Not till 12 o'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\"') == 'clock: oclock\\nhen: hen the\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n    pass\\n'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('lost is close to lose') == 'close: lose\\nthe: hen\\n'\nassert solution('the fox said, \"When?\"') == 'clock: oclock\\nthe: hen the\\nhen: he when\\nis: it\\ntill: will\\nwhen: hen\\nwill: till\\nthe: he'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('\\n'.join(['Lost is Close to Lose', '\"Better Documents Inc. wants to add Typo Checking in to the next generation of word processors,\" he said.'])) == 'close: lose\\nthe: hen the\\nhen: he when\\nis: it\\nit: is\\nclock: oclock\\ntill: will\\nwhen: hen\\ntill: will\\noclock: clock\\nthe: he\\nis: in\\nis: in\\nclos: close lost'\nprint(solution(input()))\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Lost is Close to Lose\") == \"close: lose\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"the: when\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Lost is Close to Lose') == 'close: lose\\the: he\\till: will\\tis: in\\ninc: in\\nis: in\\n'\nassert solution('The fox said, \"When?\"') == 'clock: oclock\\the: hen the\\till: will\\tis: it\\ninc: in\\ntill: will\\nwhen: hen\\tis: he\\n'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n1 2 7 3 8 9 4 5 10 6\n''') == \"2\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '10\\n'\n    '1 2 7 3 8 9 4 5 10 6\\n'\n    ) == '1\\n'\n\nassert solution(\n    '10\\n'\n    '3 8 1 9 4 5 2 7 10 6\\n'\n    ) == '2\\n'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1 2 7 3 8 9 4 5 10 6\"\n) == \"1\"\n\nassert solution(\n    \"3 8 1 9 4 5 2 7 10 6\"\n) == \"2\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution('''\n2\n1 2\n1 2\n''') == '1'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution('''\n3 8 1 9 4 5 2 7 10 6\n''') == '2'\nassert solution('''\n9 10 8 5 2 6 1 4 3 7\n''') == '2'"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\\n1 2 7 3 8 9 4 5 10 6\") == \"1\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 7 3 8 9 4 5 10 6\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\n''') == '1'\nprint('all tests passed')\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1\n3 8 5 2 9 4 7 6 1\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n5\n1 2 3 4 5\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n2\n3 2 1\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('3 8 1 9 4 5 2 7 10 6') == '3 8 1 9 4 5 2 7 10 6'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n6 5 2 1 8 7 4 3') == '2'\nassert solution('4\\n1 2 3 4') == '1'\nassert solution('9\\n5 2 1 7 8 4 3 6 9') == '1'\n\n'''\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('0.142857 1') == '1/7'\nassert solution('1.6 0') == '5/3'\nassert solution('1.6 0') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('6 6') == '10/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''0.142857 6''') == '1/7'\nassert solution('''1.6 1''') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '1/7'\nassert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('10 3') == '20/10'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint('Solution: ', solution(input()))\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint(solution(input()))\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0 0 0\n''') == '6'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n0 0 0\\n0 0 1') == '6'\nassert solution('2\\n0 0 0\\n0 0 1\\n1 0 0\\n1 1 1') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n0 0 0\\n0 0 1\\n') == '6'\nassert solution('1\\n0 0 0\\n') == '6'\nassert solution('3\\n0 0 0\\n0 0 1\\n') == '7'\nassert solution('10\\n0 0 0\\n0 0 1\\n0 0 2\\n0 0 3\\n0 0 4\\n0 0 5\\n0 0 6\\n0 0 7\\n0 0 8\\n0 0 9\\n') == '17'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n0 0 0') == '6'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '6'\nassert solution('5\\n0 0 0') == '6'\nassert solution('6\\n0 0 0\\n0 0 1\\n') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n0 0 0\n0 0 1\n''') == '6'\nassert solution('''\n2\n0 0 0\n0 0 1\n''') == '10'\n''')"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n0 0 0\n0 0 1\n''') == '6'\nassert solution('''2\n0 0 0\n0 0 1\n''') == '10'\nprint('All tests passed.')"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\nassert solution([1,0,0,0]) == \"6\"\nassert solution([0,0,0]) == \"6\"\nassert solution([0,0,0,0]) == \"6\"\nassert solution([0,0,0,0,0]) == \"6\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0 0 0\\n0 0 1\\n') == '6'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1', 'Wrong answer'\nassert solution('2') == '2', 'Wrong answer'\nassert solution('5') == '5', 'Wrong answer'\nassert solution('6') == '1', 'Wrong answer'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '1'\nassert solution('9') == '2'\nassert solution('11') == '2'\nassert solution('100') == '6'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\"\n    \"1 2 -1\"\n    \"2 2\"\n    \"1 -1 1\"\n) == \"1\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n-1 2 -1\n2 2\n1 -1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n\"\"\") == \"1\"\nprint(solution(*tuple(int(i) for i in input().split())))\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution('''\n4\n-1 2 -1\n2 2\n1 -1 1\n''') == \"1\""
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('7') == '1'"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n-1 2 -1\\n2 2\\n1 -1 1\\n\") == \"1\"\nassert solution(\"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n111\n''') == '3'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n111\n''') == '0'\nassert solution('''\n1111\n''') == '1'\nassert solution('''\n11111\n''') == '2'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\"\n\nstdin = \"\"\"\n1011\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1001\n1111\n''') == '1'\nassert solution('''\n1111\n''') == '1'\nassert solution('''\n1001\n''') == '0'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'LLL', 'Basic example'\nassert solution('''\n5\n1 2 2 1 2\n''') == 'LLRLR', 'Every possible move'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == \"LLL\"\nassert solution('5') == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1 1\") == \"LLL\"\nassert solution(\"1 2 2 1\") == \"LLR\"\nassert solution(\"1 2 2 1 2\") == \"RRR\"\nassert solution(\"1 2 2 1 2 1\") == \"RRLR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'LLL'\nassert solution('2') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 1 1\n\"\"\") == \"LLL\"\nassert solution(\"\"\"\n5\n1 2 2 1 2\n\"\"\") == \"LLRLR\""
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == 'LLL'\nassert solution('5 1 2 2 1 2') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"LLL\"\nassert solution(\"5\\n1 2 2 1 2\\n\") == \"LLRLR\"\nprint(\"You're awesome!\")"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == 'LLL'\nassert solution('3 3 3') == 'LLRR'\nassert solution('5 5 5') == 'LLRLRRRRLL'\n\n\"\"\""
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'LLL'\nassert solution('''\n5\n1 2 2 1 2\n''') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"LLL\"\nassert solution(\"5\") == \"LLRLR\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 7 10\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 6 7') == '49000000000070'\nassert solution('7 7 10') == '49000000000070'\nassert solution('7 7 10') == 'Poor girl'"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n') == '49000000000070'\nassert solution('6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n''') == '49000000000070'\nassert solution('''\n6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\n''') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\n''') == '49000000000070'\nassert solution('''\n5 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\n''') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n''') == '49000000000070'\nassert solution('''\n6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\n''') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '49000000000070'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 7 10') == '49000000000070'\nassert solution('6 6 7') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 7 10') == '49000000000070'\nassert solution('6 6 7') == '25000000000021'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"2\\n2\"\nassert solution(\"4 4\") == \"1\\n0\"\n\n---\nThe data set includes test cases, so it is necessary to test the function itself.\n\nThe data set uses the same format as the input file, but it includes some extra tests.\n\nNote: Each test case starts with an integer N, representing the number of places to visit. It also starts with an integer M, representing the number of roads in the city. This should not be greater than 10000. Each road consists of two integers f, t, denoting that there is a one-way street from place f to place t. This should not be greater than N-1.\n\nExample:\n\nInput:\n4\n0 1\n1 0\n2 3\n3 3\n\nOutput:\n2\n2\n\nOutput:\nYeah!\n\"\"\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(['4 4', '0 1', '1 0', '2 3', '3 2']) == '2 2\\n0 1\\n2 3\\n2 2'\n\nassert solution(['4 4', '0 1', '1 0', '2 3', '3 3']) == 'Yeah!'\n\nassert solution(['10 4', '0 1', '1 0', '2 3', '3 2', '3 3', '4 4', '4 4']) == '4 2\\n2 2\\n4 2\\n4 2\\n4 2\\n4 2'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '2\\n0\\n1\\n2\\n3\\n', 'Should be 2\\n0\\n1\\n2\\n3\\n'\nassert solution('4 5') == '1\\n3\\n0\\n1\\n2\\n3\\n4\\n', 'Should be 1\\n0\\n1\\n2\\n3\\n4\\n'\nassert solution('5 5') == '2\\n0\\n1\\n2\\n3\\n4\\n', 'Should be 2\\n0\\n1\\n2\\n3\\n4\\n'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"2\\n2\\n0\\n1\""
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == '2\\n2\\n0\\n1'\nassert solution('4 4') == '2\\n2\\n0\\n1'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '2'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open(0).read()) == '2'\nprint(solution(open(0)))"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 2') == '2\\n2\\n0\\n1\\n2\\n2\\n3'\nassert solution('4 4\\n0 1\\n1 0\\n2 3\\n3 3') == 'Yeah!'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([4, 4]) == '2'\nassert solution([4, 4]) == 'Yeah!'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"2\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n1 1 2\n\"\"\"\n) == \"POSSIBLE\"\nassert solution(\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'POSSIBLE', solution\nassert solution('2') == 'IMPOSSIBLE', solution\nassert solution('3') == 'POSSIBLE', solution"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'IMPOSSIBLE'\nassert solution('3') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 2') == 'POSSIBLE\\n1 3\\n2 3'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'POSSIBLE'\nassert solution('5') == 'IMPOSSIBLE'"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == 'POSSIBLE\\n1 2\\n2 3'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 2\\n') == 'POSSIBLE'\nassert solution('2\\n1 2\\n') == 'IMPOSSIBLE'\nassert solution('0\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"POSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\nassert solution(\"3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"IMPOSSIBLE\"\nassert solution(\"2 1 1\") == \"POSSIBLE\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n\nassert solution(\"2\") == \"IMPOSSIBLE\"\nassert solution(\"2 1 1\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1 2\nSample Input 3:\n2\n1 2''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nprint('Test passed')"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\n\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nprint(solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1'))"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\") == \"0.5 0.5 0.5\"\nassert solution(\"1 0 0\") == \"0.0 0.0 -0.0\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\nassert solution(\"-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.0 0.0 -0.0\"\nassert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0.5 0.5 0.5\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"3\") == \"3 2\"\nassert solution(\"1\") == \"3 2\"\nassert solution(\"2\") == \"3 2\"\nassert solution(\"3\") == \"3 2\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 6 5 5 2\n''') == '1 2 5 2 5 6'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"2\"\nprint(solution(input_string))"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n2\\n3\\n2\\n3\\n1\\n2\\n') == '3'\nassert solution('1\\n1\\n1\\n') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n') == '7\\n5\\n3\\n2\\n1\\n'\n\n
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n1 2\n1 3\n1 5\n3 2\n3 4\n\"\"\") == \"3 1 4 5 2 3\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 2 0 1 1\n1 2 2 2\n0 3 0 0\n0 0 0 0\n''') == '2 1 0 0'\nassert solution('''\n5\n4 4 5 4 4\n2 2 3 3\n1 0 1 3\n3 1 1 1\n2 2 3 2\n''') == '2 3 1 1 1 2'\n\nassert solution('''\n100\n
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 6 2 3 2 2 2 1 5 6''') == '2\\n3 2 2 1 5\\n3 2 2'\nprint('tests passed')\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 6 2 3 2 2 2 1 5 6\nSample Output 2:\n3\n3 2 2\n6 6\n''') == '2'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3 2 1'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3 2 2'\nassert solution('5') == '3 2 2 5'\nassert solution('13') == '5 2 2 3 2 3 2 1 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n1\n\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3\n2 1\n2 3 8\n2 3\n1 2\nSample Output 3:\n74.6666666667\n''') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == 'IMPOSSIBLE'\nassert solution('3 2 1') == '74.6666666667'\nassert solution('3 2 1') == '74.6667'\nassert solution('3 2 1') == '74.6667'\nassert solution('3 2 1') == '74.666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.66666667'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.66666667'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.3333333333'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 1') == 'IMPOSSIBLE'\nassert solution('3 2 1') == '74.6666666667'\nprint(solution(input()))"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 1') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 1\") == \"IMPOSSIBLE\"\nassert solution(\"2 2 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2 2\") == \"IMPOSSIBLE\"\nassert solution(\"3 4 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\") == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1') == 'IMPOSSIBLE'\nassert solution('3 2 1') == '74.6666666667'\nassert solution('4 3 4') == '95.9285714286'\nassert solution('4 3 0') == 'IMPOSSIBLE'\nassert solution('5 4 5') == '95.9285714286'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE', '''\nSample Case 2\n'''\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667', '''\nSample Case 3\n'''\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE', '''\nSample Case 4\n'''\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667', '''\nSample Case 5\n'''"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n') == '2'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\n\"\"\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '1'\nassert solution('7 7') == '0'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '1'\nassert solution('''\n7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '2'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n') == '1\\n2\\n2\\n2\\n2'\nassert solution('7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '2\\n1\\n1\\n2\\n2\\n2\\n2\\n2'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n''') == '2\\n1\\n2\\n1\\n2\\n2\\n1'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\nSample Output 2:\n0\n''') == '0\\n'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"1\\n2\\n1\\n2\\n2\\n1\\n\", \"Test 1\"\nassert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"2\\n1\\n1\\n1\\n1\\n1\\n\", \"Test 2\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"2\\n2\\n2\\n2\\n2\\n2\\n\", \"Test 3\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\nSample Output 1:\n1\n2\n1\n2\n2\n1\nSample Output 2:\n0\n''') == '1'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '2'\nassert solution('''5 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '0'"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n''') == '1'\nassert solution('''\n7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '2'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 10 2\\n0\\n15\\n30\\n45') == '10'\nassert solution('4 10 3\\n0\\n15\\n30\\n45') == '5'\nprint('All tests passed!')"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\nassert solution(\"\"\"\n10\n0\n15\n30\n45\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 10 2\n0\n15\n30\n45\n''') == '10'\nassert solution('''4 10 3\n0\n15\n30\n45\n''') == '5'"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 10 2\n0\n15\n30\n45''') == '10'\nassert solution('''5 4 3\n0\n15\n30\n45''') == '5'\nassert solution('''3 1 2\n0\n0''') == '1'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'\nassert solution('4 10 4') == '8'\nassert solution('4 10 5') == '11'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 10 2\n0\n15\n30\n45\n''') == '10'\n\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '5'\n\nassert solution('''\n4 10 3\n0\n15\n30\n30\n''') == '10'\n\nassert solution('''\n4 10 3\n0\n15\n30\n30\n''') == '5'\n\nassert solution('''\n5 10 3\n0\n15\n30\n30\n''') == '10'"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 10 2\n0\n15\n30\n45''') == '10'\nassert solution('''4 10 3\n0\n15\n30\n45''') == '5'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'\nassert solution('4 100 0') == '100'\nassert solution('4 100 2') == '102'\nassert solution('4 100 3') == '103'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '10'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 10 2\n0\n15\n30\n45\n''') == '10'\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '5'\nassert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n3\n1\n1\n''') == '0'\nassert solution('''\n6\n10\n5\n6\n10\n5\n''') == '10'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"5 2\") == \"1\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2\n50 50 75\n25 25 25\n''') == '2'\nassert solution('''5 2\n50 50 50 50\n25 25 25 25\n''') == '1'\nassert solution('''4 2\n60 60 75\n25 25 25\n''') == '1'\nassert solution('''5 2\n60 60 60 60\n25 25 25 25\n''') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n50 50 75\n25 25 25\n''') == '2'\nassert solution('''5 2\n50 50 50 50\n25 25 25 25\n''') == '1'\nassert solution('''3 2\n25 25 25\n''') == '1'\nassert solution('''3 4\n20 20 20 20\n''') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 2') == '3'\nassert solution('5 2') == '4'\nassert solution('10 10') == '10'\nassert solution('6 10') == '6'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '1'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('4 2\\n50 50 75\\n25 25 25\\n') == '2'"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 2') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 2') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"8 3\") == \"3\"\nassert solution(\"8 1\") == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n50 50 75\n25 25 25\n''') == '2'\nassert solution('''\n4 2\n50 50 75\n25 25 25\n25 50 25\n''') == '1'\nassert solution('''\n5 2\n50 50 50 50\n25 25 25 25\n25 50 25 25\n25 50 50 25\n''') == '1'\nassert solution('''\n5 2\n50 50 50 50\n25 25 25 25\n25 50 25 25\n25 50 50 25\n25 50 25 25\n''') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..') == '1'\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..') == '2'\nassert solution('4 4\\n.LXX\\n.X..\\n...L\\n.X..') == '0'\nassert solution('4 4\\n.LXX\\n.X..\\n...L\\n.X..') == '0'\n\"\"\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1\"\n\n\"\"\""
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..') == '1'\nassert solution('4 4\\n.X..\\n.X..\\n.X..\\n.X..') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..\n''') == '1'\nassert solution('''4 4\n.X..\n.X..\n...L\n.X..\n''') == '2'\nassert solution('''5 1\n.X.\nL..\n.L..\n.L.\nX..\n''') == '0'\nassert solution('''5 1\n.X.\n.X.\n...L\n.L.\nX..\n''') == '1'\nassert solution('''5 1\n.X.\n.X.\n...L\n.L.\nX..\n''') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n....\\n.L..') == \"1\"\nassert solution('4 4\\n.XLX\\n.X..\\n...L\\n.X..\\n') == \"2\""
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n.LX.\\n.X..\\n....\\n.L..\") == \"1\"\nassert solution(\"10 10\\n.X.L.\\n..X.\\n.X..\\n..X.\\n...X.\\n...X.\\n..X.\\n...X.\\n.X..\\n.X..\") == \"1\"\nassert solution(\"5 3\\n.XL.\\n..X.\\n.X..\\n..X.\\n...X.\\n...X.\\n..X.\\n.X..\") == \"2\"\nassert solution(\"3 3\\n.LX.\\n..X.\\n.X..\\n.X..\") == \"1\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 4\\n.LX.\\n.X..\\n....\\n.L..\"\n) == \"1\"\nassert solution(\n    \"4 4\\n.X.X\\n.X..\\n...L\\n.X..\"\n) == \"2\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n.X.\n.X.\n.X.\n..X\n.X.''') == '1', \"All\"\nassert solution('''5 5\n.X.\n.X.\n.X.\n..X\n.X.''') == '0', \"No\"\nassert solution('''5 5\n.X.\n.X.\n.X.\n..X\n.X.''') == '2', \"Half\"\nassert solution('''5 5\n.X.\n.X.\n.X.\n..X\n.X.''') == '1', \"All\"\nassert solution('''5 5\n.X.\n.X.\n.X.\n..X\n.X.''') == '1', \"All\""
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'detention'\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2 1\") == \"home\"\nassert solution(\"5 2 1\") == \"detention\"\nassert solution(\"10 4 1\") == \"detention\"\nassert solution(\"20 4 1\") == \"detention\"\nassert solution(\"20 4 2\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n''') == 'home'\nassert solution('''5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''') == 'detention'\nassert solution('''4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n''') == 'home'\nassert solution('''5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''') == 'detention'\nassert solution('''10 1 3\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == 'home'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\\n2 1\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"detention\"\nprint(solution(input()))\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 1') == 'home'\nassert solution('5 2 1') == 'detention'\nassert solution('10 2 3') == 'detention'\nassert solution('1000 2 3') == 'detention'\nassert solution('6 4 1') == 'home'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n1 2\\n') == 'home', 'TEST CASE 1'\nassert solution(\n    '5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention', 'TEST CASE 2'\nassert solution(\n    '12 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'home', 'TEST CASE 3'\nassert solution(\n    '128 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention', 'TEST CASE 4'\n\nstdin = \"\"\"\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n\"\"\"\nprint(solution(stdin))\n\"\"\"\n=============================== RESTART: Shell ===============================\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n4\n3\n0\n1\n1\n\"\"\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'home'\nassert solution('10 4 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n2 2 5\\n1 3\\n5 6 7 8\\n5 6 9 10 11 12 13 14 15\\n5 6 9 10 11 12 13 14 15') == 'detention'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == 'home'\n\n\"\"\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"home\"\nassert solution(\"3 2 1\") == \"home\"\nassert solution(\"3 2 1\") == \"home\"\nassert solution(\"5 2 1\") == \"home\"\nassert solution(\"4 2 1\") == \"home\"\n\n\"\"\"\n\nn, p, q = map(int, input().split())\nstudents = []\nfor i in range(n):\n    students.append(int(input()))\n\np_set = set()\nq_set = set()\n\nfor student in students:\n    if student in p_set:\n        p_set.remove(student)\n    else:\n        p_set.add(student)\n\n    if student in q_set:\n        q_set.remove(student)\n    else:\n        q_set.add(student)"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '-1'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"allatral\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == -1\nassert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == -1\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"allatral\"\nassert solution(input()) == \"zzzz\""
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-1\""
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('zzzz') == '-1'\nassert solution('tralalal') == 'allatral'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('tralalal') == 'allatral', 'test 1 failed'\nassert solution('zzzz') == '-1', 'test 2 failed'"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\ntralalal\n''') == 'allatral'\nassert solution('''\nzzzz\n''') == '-1'"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\n\n'''\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n4 1 5 2\n''') == '5'\n\nassert solution('''\n6\n2 3 5 4 6\n''') == '10'\n\nassert solution('''\n8\n3 1 4 2 5 6 7 8\n''') == '8'\n\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '6'\n\nassert solution('''\n10\n4 5 2 6 8 7 1 3 2\n''') == '8'"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n3\n5\n1 2 3\n''') == '5'\nassert solution('''5\n1 2 3 4 5\n''') == '5'\nassert solution('''7\n2 1 3 4 5 6 7\n''') == '7'\nassert solution('''9\n1 2 3 4 5 6 7 8\n''') == '9'\nassert solution('''13\n4 1 4 5 5 6 7 7 7 8 8\n''') == '10'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"8\""
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"5\"\nassert solution(input()) == \"8\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '5'\nassert solution('''\n4\n1 2 3 4\n''') == '7'\nassert solution('''\n3\n1 2 1\n''') == '0'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3 4 5\n''') == '5'\nprint(solution('''\n6 3 2 1 6 4 5\n'''))\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '5'\nassert solution('6\\n3 2 1 6 4 5\\n') == '8'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    47\n    523\n    ''') == '2'"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2\n2 4\n3 5\n''') == '1'\n\nassert solution('''\n12\n5 6\n8 9\n10 11\n7 12\n4 5\n3 6\n''') == '2'\n\nassert solution('''\n123\n5 6\n8 9\n10 11\n7 12\n4 5\n3 6\n''') == '1'\n\nassert solution('''\n153\n12 4\n19 1\n20 3\n29 2\n''') == '2'\n\nassert solution('''\n87\n13 14\n6 10\n17 12\n3 4\n12 8\n''') == '1'"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'\n\nassert solution(input()) == input()\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '47\\n'\n) == '1\\n'\n\nassert solution(\n    '523\\n'\n) == '2\\n'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('1000') == '1'\nassert solution('10000') == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n''') == '1'\n\nassert solution('''\n14\n''') == '2'\n\nassert solution('''\n100\n''') == '1'\n\nassert solution('''\n100\n''') == '1'"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('47') == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('30') == '3'\nassert solution('100') == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3\n4\n5\n''') == '1'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2\\n1\\n2') == '1'\nassert solution('5\\n3\\n2\\n4') == '2'\nassert solution('10000\\n10\\n100\\n10') == '100'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 2') == '1'\nassert solution('0 0') == '0'\nprint('\u2705 Test passed')\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1 0 5'\n\nassert solution('''\n3 3\n0 1 2\n1 2 3\n0 1 3\n''') == '0 1 2'\n\nassert solution('''\n8 3\n0 1 3\n1 2 3\n2 0 4\n3 0 5\n4 0 6\n5 0 7\n6 0 8\n7 0 9\n''') == '6 0 8'\n\nassert solution('''\n10 10\n0 1 2\n1 0 5\n2 0 7\n3 0 9\n4 0 11\n5 0 13\n6 0 15\n7 0 17\n8 0 19\n9 0 21\n10 0 23\n''') == '1 0 5'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1'\n\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '0 1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '1 1 100\\n2 2 100\\n3 3 100\\n3 2 100\\n0 3 20') == '1 1 5'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 1\n0 1 10\n2 0 10\n0 0 0\nSample Output 3:\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 2\n0 1 20\n1 0 5\nSample Output 4:\n1\n0 1 15\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1'"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution('''\n5 1\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1 0 1 10'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 1 10\\n1 2 10\\n0 3 10\") == \"1\"\nassert solution(\"4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20\") == \"1\"\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '0\\n1\\n3\\n5\\n4\\n'\nassert solution('3 3') == '2\\n2\\n4\\n'\nassert solution('1 2 10 20') == '0\\n1\\n2\\n10\\n20\\n'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20''') == '0'\n\nassert solution('''2 2\n0 1 20\n1 0 5''') == '1'\n\nassert solution('''5 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20''') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '1'\nassert solution('4 4 8 12') == '5'"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1 3\n2 3\n3 4\n5 6\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 3\n2 3\n3 4\n5 6\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '4'\nassert solution('4 4 8 12') == '6'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '5'\nassert solution('3 4') == '1'\nassert solution('4 4 8 12') == '1'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n1 3 2 1 5\\n1 3\") == \"5\"\nassert solution(\"4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n3 4\") == \"1\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"1 3 2 1 5\\n\"\n    \"1 3\\n\"\n    \"2 3\\n\"\n    \"1 4\\n\"\n    \"3 5\\n\"\n    \"4 5\\n\"\n    \"2 5\\n\"\n) == \"1\"\nassert solution(\n    \"4 3\\n\"\n    \"4 4 8 12\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"4 5\\n\"\n    \"2 5\\n\"\n) == \"5\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '1'"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '1'"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1311''') == '24'\n\nassert solution('''1011''') == '7'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('010202') == '7'\nassert solution('13214') == '24'\nassert solution('13112') == '12'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1311') == '24'\nassert solution('020302') == '7'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 3\n''') == '5'\nassert solution('''\n2 3\n''') == '4'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('03062') == '7'\nassert solution('0311') == '24'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n070271855686\n''') == '3'\nassert solution('''\n070128894792\n''') == '4'\nassert solution('''\n070128894792\n''') == '3'\n\n'''\nSample Input 2:\n1102\nSample Output 2:\n1\n\nSample Input 2:\n1311\nSample Output 2:\n4\n\nSample Input 2:\n11\nSample Output 2:\n1\n\nSample Input 2:\n1234\nSample Output 2:\n1\n\n'''\n\n'''\nSample Input 2:\n13\nSample Output 2:\n1\n\nSample Input 2:\n10001\nSample Output 2:\n1\n\nSample Input 2:\n12\nSample Output 2:\n1\n\nSample Input 2:\n1212\nSample Output 2:\n1\n\nSample Input 2:\n13112\nSample Output 2:\n1\n'''\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('030302') == '7'\nassert solution('1311') == '24'"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"020302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 20\n###########.#.#.#.#.\n###########...#.###.\n##########..##.#..##\n###########..#.#.##.\n###########.###...#.\nSample Output 2:\n1 15 5 15''') == '1 15 5 15'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 3 10') == '3 1 3 10'\nassert solution('5 20') == '1 15 5 15'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '1 1 3 3'\nassert solution('2 5') == '1 4 5 5'\nassert solution('8 5') == '3 4 4 5'\nassert solution('5 10') == '3 9 9 10'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 1 3 10'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3 1 3 10\""
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 10\n###########.#.#.#.#.\n###########...#.###.\n##########..##.#..##\n###########..#.#.##.\n###########.###...#.\nSample Output 2:\n1 15 5 15\n\"\"\") == \"1 15 5 15\"\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 10\\n#.#..##..#\\n####..####\\n###.##....\\n...#..####\\n....##....\\n.#.##..##.\\n##########\\n##########\\n') == '3 1 3 10'\nassert solution('5 20\\n###########.#.#.#.#.\\n###########...#.###.\\n##########..##.#..##.\\n###########..#.#.##.##.\\n###########.###...#.##\\n') == '1 15 5 15'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 1 2 2'"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 10') == '3 1 3 10'\nassert solution('5 20') == '1 15 5 15'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\nprint(solution(input()))"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\n\"\"\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '2'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 2\n0.5 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n1 11\n0.4 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 3\n1 1\n0.7 0.3\n0.5 0.2\n0.2 0.4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 11') == '1'\nassert solution('2\\n0.5 1') == '2'\nassert solution('3\\n0.4 1') == '3'\nassert solution('4\\n1 11') == '3'\nprint('All test cases passed')\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2\n0.5 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n1 11\n0.4 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n0.5 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 6\n1 11\n0.4 1\n0.2 1\n0.3 1\n0.4 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 2\n1 11\n0.4 1\n0.2 1\n0.3 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 2\n0.5 1\n1 11\n0.4 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n1 11\n0.4 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 3\n0.8 1\n0.2 1\n0.2 1\n0.4 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 2\n0.5 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 2\\n0.5 1\\n\"\n    \"1 11\\n0.4 1\"\n    ) == \"3\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 2\n0.5 1\n0.5 1\n0.5 1\n0.5 1\n0.5 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 3\n1 11\n0.4 1\n0.4 1\n0.4 1\n0.4 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6 6\n0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1\n0.1 0.1 0.1 0.1 0.1 0.1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n0.5 1\n''') == '2'\nassert solution('''\n4 3\n1 11\n0.4 1\n''') == '3'\nprint('All tests passed!')"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n7 1\\n3 2') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n2 1\\n4 0\\n0 3') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n7 1\n3 2\n10 0''') == '10.5'\nassert solution('''3\n2 1\n4 0\n0 3''') == '-1'\nassert solution('''2\n2 5\n3 1\n8 5''') == '8.5'\nassert solution('''2\n1 5\n1 1\n3 3''') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '5.0'\nassert solution('100') == '50.0'\nassert solution('15') == '-1'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n7 1\n3 2\n10 0\n\"\"\") == \"10.5\", 'Dummy test 1'\nassert solution(\"\"\"3\n2 1\n4 0\n0 3\n\"\"\") == \"\", 'Dummy test 2'\nassert solution(\"\"\"3\n2 5\n1 4\n0 3\n\"\"\") == \"3.5\", 'Dummy test 3'\nassert solution(\"\"\"3\n2 1\n1 4\n0 3\n\"\"\") == \"-1\", 'Dummy test 4'"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n7 1\n3 2\n10 0\n''') == '10.5'\n\nassert solution('''\n3\n2 1\n4 0\n0 3\n''') == '-1'\n\nassert solution('''\n2\n3 2\n3 3\n''') == '0.75'\n\nassert solution('''\n2\n1 1\n1 1\n''') == '0.5'\n\nassert solution('''\n3\n1 5\n1 1\n3 2\n''') == '3.5'"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '10.5'\nassert solution('3') == '-1'\nassert solution('10') == '0'"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3 1\\n10 0\\n0 3\\n') == '10.5'\nassert solution('5\\n1 1 1 1 1\\n2 1 1 1 1\\n1 1 1 1 1\\n') == '-1'\nassert solution('10\\n10 10 10 10 10\\n') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n4 1\n3 2\n10 0\n0 3\n0 4\nSample Input 3:\n3\n2 1\n4 0\n0 3\nSample Output 3:\n-1\n''') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '3\\n7 1\\n3 2\\n10 0\\n'\n) == '10.5\\n'\nassert solution(\n    '3\\n10 1\\n3 2\\n0 3\\n'\n) == '-1\\n'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49') == '1'\n\nassert solution('1 2\\n3 0.5\\n1 2.5') == '2'\nassert solution('1 2\\n2 0.5\\n1 2.5') == '2'\n\"\"\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49') == '1'\nassert solution('3 0.5\\n3 0.51\\n1 0.49\\n2 0.5\\n2 0.51\\n2 0.5') == '2'\nassert solution('10 0.5\\n9 0.51\\n8 0.49\\n7 0.5\\n6 0.51\\n5 0.5\\n4 0.5\\n3 0.5\\n2 0.51\\n1 0.5') == '4'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49') == '1'\nassert solution('2 0.5\\n2 0.51\\n1 0.5') == '2'\nassert solution('3 0.5\\n3 0.51\\n1 0.5') == '2'\nassert solution('4 0.5\\n4 0.51\\n1 0.5') == '2'\nassert solution('5 0.5\\n5 0.51\\n1 0.5') == '2'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 0.5\n2 0.51\n1 0.49\n''') == '2'\nassert solution('''2 0.52\n2 0.51\n1 0.49\n''') == '1'\nassert solution('''2 0.53\n2 0.52\n1 0.51\n''') == '2'\nassert solution('''2 0.54\n2 0.53\n1 0.51\n''') == '1'\nassert solution('''2 0.55\n2 0.54\n1 0.53\n''') == '1'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 0.5\n2 0.5\n1 0.5\n''') == '1'\n\nassert solution('''\n4 0.5\n4 0.5\n1 0.5\n''') == '3'\n\nassert solution('''\n5 0.5\n2 0.5\n1 0.49\n''') == '2'\n\nassert solution('''\n5 0.5\n2 0.5\n1 0.51\n''') == '1'\n\nassert solution('''\n5 0.5\n2 0.5\n1 0.51\n''') == '2'"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 0.5\n2 0.51\n1 0.49''') == '1'\nassert solution('''2 0.5\n2 0.5\n1 0.5''') == '2'"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49') == '1'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49') == '2'\nassert solution('2 0.1\\n2 0.51\\n1 0.49') == '1'"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 0.5\n2 0.51\n1 0.49\n''') == '1'\nassert solution('''2 0.5\n2 0.51\n1 0.49\n10 0.5\n''') == '2'\nprint('all tests passed')"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 4') == 'yes'\nassert solution('3 3 3 3') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 2') == 'yes'\nassert solution('5 4 4') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5 2\") == \"yes\"\nassert solution(\"5 4 4\") == \"yes\"\nassert solution(\"4 4 4\") == \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5 2\") == \"yes\", \"Case1\"\nassert solution(\"5 4 4\") == \"yes\", \"Case2\"\nassert solution(\"3 3 3 3\") == \"no\", \"Case3\"\nassert solution(\"4 2\") == \"no\", \"Case4\"\nassert solution(\"6 6 2\") == \"yes\", \"Case5\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'yes'"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'yes'\nassert solution('3 3 3 3') == 'yes'\nassert solution('4 5 2') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4 5 2\n3 3 3 3\n0 1\"\"\") == \"yes\"\nassert solution(\"\"\"4 5 2\n1 1 2 2\n0 1\"\"\") == \"no\"\nassert solution(\"\"\"5 4 4\n1 1 2 2 2\n0 1\"\"\") == \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\") == \"yes\"\nassert solution(\"5 4 4\") == \"yes\"\nassert solution(\"10 10 2\") == \"no\""
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 4') == 'yes'\nassert solution('3 3 3 3') == 'no'"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '5'"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '1'\nassert solution('4') == '5'\nprint('\"Run\" is now complete!')\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('5') == '2'\n\nstdin = '5'\n\nfor _ in range(1000):\n    stdin += ',' + str(stdin)\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == stdin"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n5\n5\n5\n\"\"\") == \"2 1 2\"\nassert solution(\"\"\"\n4\n20\n15\n17\n14\n\"\"\") == \"5 8 2 7\"\nassert solution(\"\"\"\n5\n20\n15\n17\n14\n\"\"\") == \"2 5 8 7\"\nassert solution(\"\"\"\n6\n20\n15\n17\n14\n19\n12\n\"\"\") == \"5 8 7 2 19\"\nassert solution(\"\"\"\n5\n20\n15\n17\n14\n\"\"\") == \"2 5 8 7\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"2 1 2 7\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2 1\"\nassert solution(\"4\") == \"5 8\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('3') == '1'"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\npython\\n') == 'python'\nassert solution('2\\npython\\n') == 'python'\nassert solution('3\\npython\\n') == 'python'\nassert solution('4\\npython\\n') == 'python'\nassert solution('5\\npython\\n') == 'python'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\npython\\npython\\njava\\n') == 'python\\npython\\npython\\njava\\n'\nassert solution('3\\npython\\njava\\njava\\n') == 'python\\njava\\njava\\npython\\njava\\n'\nassert solution('5\\npython\\njava\\njava\\njava\\n') == 'python\\njava\\njava\\njava\\njava\\n'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\npython\\njava\\n') == 'python'\nassert solution('1\\npython\\njava\\n') == 'python'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''python\np^ main.py\n^ -n 10''') == 'python main.py -n 10'\n\"\"\"\n    # stdin = ''.join(l.strip() for l in stdin.splitlines())\n    # stdin = stdin.splitlines()\n    # lines = []\n    # for l in stdin:\n    #     if '#' not in l:\n    #         lines.append(l)\n\n    # count = int(stdin[0])\n    # for i in range(1, count):\n    #     new_line = stdin[i].split('^')\n    #     new_line[0] = new_line[0].replace('^', '')\n    #     lines.append(''.join(new_line))\n\n    # print('\\n'.join(lines))\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\npython') == 'python\\npython\\npython'\nassert solution('2\\njava') == 'java\\njava\\njava\\njava'\nassert solution('3\\npython\\np^\\n^ -n 10') == 'python\\npython\\npython main.py\\npython main.py -n 10'\nassert solution('4\\npython\\njava\\n^\\n^ -n 10') == 'python\\npython\\njava\\njava\\njava\\njava\\njava main.py\\njava main.py -n 10'\nassert solution('5\\npython\\njava') == 'python\\njava\\njava\\npython\\npython\\npython'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'python'\nassert solution('2') == 'python'\nassert solution('3') == 'python'\nassert solution('4') == 'python'\nassert solution('5') == 'python'\n\"\"\""
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'python\\npython\\n'\nassert solution('2') == 'python\\njava\\n'\nassert solution('3') == 'python\\njava\\npython\\n'\nassert solution('4') == 'python\\njava\\njava\\npython\\njava\\n'\nassert solution('5') == 'python\\njava\\njava\\npython\\njava\\n'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"python\"\nassert solution(\"2\") == \"python main.py\"\nassert solution(\"3\") == \"\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\npython\\njava\\n') == 'python\\njava'\nassert solution('1\\npython\\njava\\n^^^\\n^^^\\n^^^') == 'python\\njava'\nassert solution('1\\npython\\njava\\n^^^\\n^^^\\n^^^\\n') == 'python\\njava'\nassert solution('2\\npython\\njava\\n^^^\\n^^^\\n^^^\\n') == 'python\\njava'\nassert solution('3\\npython\\njava\\n^^^\\n^^^\\n^^^\\n') == 'python\\njava'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == 'python\\npython main.py\\npython main.py -n 10\\njava\\njava\\njava'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'impossible', 'First'\nassert solution('this sentence makes perfect sense') == 'this sentence makes perfect sense', 'Second'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne', 'Third'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne', 'Fourth'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne', 'Fifth'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'this sentence makes perfect sense'\nassert solution(input()) == 'impossible'\nassert solution(input()) == 'ambiguous'\nassert solution(input()) == 'this sentence makes perfect sense'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == 'this sentence makes perfect sense'\nassert solution(sample_input_2) == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''tihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis\n''') == 'this sentence makes perfect sense'\nassert solution('''hitehre\n2\nthere\nhello\n''') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hello there') == 'impossible'\nassert solution('hi there') == 'impossible'\nassert solution('h this') == 'impossible'\nassert solution('h e this') == 'impossible'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense', solution('tihssnetnceemkaesprfecetsesne')\nassert solution('hitehre') == 'impossible', solution('hitehre')\nassert solution('this sentence makes perfect sense') == 'this sentence makes perfect sense', solution('this sentence makes perfect sense')\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense', solution('tihssnetnceemkaesprfecetsesne')\nassert solution('hitehre') == 'impossible', solution('hitehre')\nassert solution('thene') == 'ambiguous', solution('thene')\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense', \"First\"\nassert solution('this sentence makes perfect sense') == 'this sentence makes perfect sense', \"Second\"\nassert solution('hello') == 'impossible', \"Third\"\nassert solution('makes') == 'impossible', \"Fourth\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'impossible', 'Should be impossible'\nassert solution('hitehre') == 'impossible', 'Should be impossible'\nassert solution('this sentence makes perfect sense') == 'this sentence makes perfect sense', 'Should be this sentence makes perfect sense'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne', 'Should be tihssnetnceemkaesprfecetsesne'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n''') == '16'\nassert solution('''\n4 5\n''') == '160'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\nprint(solution(input()))\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '4'\nassert solution('2 2') == '4'\nassert solution('10 10') == '196633758'\nassert solution('6 6') == '48404841'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n\"\"\""
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n2 2\n1 1''') == '4'\nassert solution('''3 2\n2 2\n1 1''') == '4'"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"16\"\nassert solution(\"1 2\") == \"4\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip()\n\"\"\"\nfrom itertools import product"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nabcbab\n2\ncb\ncbab\nSample Output 3:\n0\n''') == '2'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\") == \"2\"\nassert solution(\"4\\nabab\\n2\\nbac\\nbaa\") == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\nabab\\n2\\nbac\\nbaba\") == \"4\"\nassert solution(\"5\\nabbc\\n2\\nbac\\nbaba\\nacb\") == \"5\"\nassert solution(\"6\\nabcbab\\n2\\ncbab\\nbaab\\nbacb\") == \"2\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\nabcbab\\n2\\ncb\\ncbab\") == \"2\"\nassert solution(\"4\\nabab\\n2\\nbac\\nbaba\") == \"4\""
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"6\"\n\"\"\""
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2', \"Should be 2\"\nassert solution('4') == '4', \"Should be 4\""
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'\nassert solution('12345') == '4'\nassert solution('1234') == '4'\nassert solution('1') == '1'"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '6'\nassert solution('24') == '4'\nassert solution('3') == '17.071067'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"50\") == \"6\"\nassert solution(\"24\") == \"4\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0\n''') == '6'\nassert solution('''24\n3\n10 10\n30 10\n20 20\n''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0\n''') == '6'\nassert solution('''24\n3\n10 10\n30 10\n20 20\n''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '0.250000'\nassert solution('3') == '0.50000'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n4\\n10 10\\n80 10\\n80 0\\n110 0\\n') == '6\\n85\\n90\\n95\\n100\\n105\\n'"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n4\\n10 10\\n80 10\\n80 0\\n110 0') == '6\\n85\\n90\\n95\\n100\\n105\\n'\nassert solution('12\\n3\\n10 10\\n30 10\\n20 20') == '4\\n17.071067\\n20\\n22.928932\\n'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '6'\nassert solution('50') == '6'\nassert solution('4') == '4'\n\n'''"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"30\") == \"6\"\nassert solution(\"3\") == \"17.071067\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 11\n10 7\n''') == 'yes'\nassert solution('''\n10 7\n10 5\n''') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"no\""
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"yes\"\nassert solution(\"1 1\") == \"no\""
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('10 8') == 'no'\nassert solution('1 1') == 'yes'\nassert solution('0 0') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == 'yes'\nassert solution('5 10') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('10 6') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"no\"\n\"\"\""
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 11\") == \"yes\"\nassert solution(\"10 7\") == \"no\"\n\"\"\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(stdin=\"\"\"\n3\n3 4\n2 5\n1 6\n\"\"\") == \"3\"\nassert solution(stdin=\"\"\"\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1 6'\nassert solution('3') == '1 6'\nassert solution('4') == '2 5'\nassert solution('5') == '1 6'\nassert solution('6') == '1 6'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 4\\n2 5\\n1 6') == '3\\n1 6\\n2 5\\n3 4'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution(\n    \"5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n\"\n) == \"3\\n10 60\\n30 50\\n30 40\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('10 30') == '1 6'\nassert solution('20 40') == '2 5'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n3 4\n2 5\n1 6\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n10 30\n20 40\n30 50\n10 60\n30 40\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n3 4\n2 5\n1 6\n\"\"\") == \"\"\nassert solution(\"\"\"\n1\n10 60\n30 40\n\"\"\") == \"1\""
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n3 4\n2 5\n1 6\n\"\"\") == \"3\""
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n4 1') == '3\\n1 1\\n1 2\\n2 3'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == '5836', 'Failed Test'\nassert solution('5 2') == '1828', 'Failed Test'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n1 1 1\n1 1 1\n2 3 4\n''') == \"25\"\nassert solution('''\n5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == \"5836\"\nprint('All Tests Passed')\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n') == '5836'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n5 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '5836'\nassert solution('''\n5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"5836\"\nassert solution(\"5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\\n\") == \"1828\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"5836\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"5836\"\nassert solution(\"5 2\") == \"1828\"\nassert solution(\"5 1 1\") == \"5836\"\nassert solution(\"5 2 2\") == \"1828\""
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('3 3\\n4 5 7\\n2 3 5\\n8 9 15') == '4300'\nassert solution('3 2\\n4 5 7\\n2 3 5\\n8 9 15') == '4300'\nassert solution('3 2\\n4 5 7\\n2 3 5\\n8 9 15') == '4300'\nassert solution('3 2\\n4 5 7\\n2 3 5\\n8 9 15') == '4300'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == \"5836\"\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16\") == \"1828\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n\"\"\") == \"50\"\nassert solution(\"\"\"\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n4\n11 3514 2177 1\n8 113514 2315 0\n1 113514 2177 2\n0 8 113514 2315 3\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n\"\"\") == \"50\"\nassert solution(\"\"\"\n3\n7 100 200 200\n8 100 300 200\n9 100 400 200\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '50'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'impossible'\nassert solution('3') == '50'"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n') == '50\\n'\nassert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n9 750 750 99\\n') == 'impossible\\n'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '50'\nassert solution('4') == 'impossible'\nassert solution('5') == 'impossible'\n\"\"\""
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'impossible'\nassert solution('5') == 'impossible'\nassert solution('4') == '50'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99\\n') == '50'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n\"\"\") == \"50\"\nassert solution(\"\"\"\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n4 2401 3299 0\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5.0') == '0 0 0 0 1', 'Wrong answer'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\nassert solution('1.0') == '1 1 1 1 1'"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\nassert solution('2.8') == '0 0 0 1 1'\nassert solution('3.2') == '0 0 0 1 1'\nassert solution('3.9') == '0 0 0 1 1'\n\nprint('Congratulations!')"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1.0\n3.0\n2.0\n5.0''') == '0 0 0 0 1'\nassert solution('''1.2\n0.1\n1.8\n1.7\n2.0''') == '0 0 1 0'\nassert solution('''0.8\n1.8\n2.8\n3.8\n4.7''') == '0 0 1 1'\nassert solution('''2.8\n2.8\n4.7\n4.7\n4.7''') == '0 0 0 0'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3 1\n1 7 8 2 6 4 3 5\n\"\"\") == \"8\"\nassert solution(\"\"\"\n8 3 1\n1 7 8 2 6 4 3 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n8 1 2 3 4 5 6 7\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\\n\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\\n\") == \"3\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5\\n') == '8\\n'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5\\n') == '3\\n'"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3'\n\nstdin = '8 2 1\\n1 7 8 2 6 4 3 5'"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3 1\") == \"8\"\nassert solution(\"8 2 1\") == \"3\"\nassert solution(\"9 1 9\") == \"9\"\nassert solution(\"8 3 1\") == \"8\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 3 1\") == \"8\"\nassert solution(\"8 2 1\") == \"3\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 3 1\n1 7 8 2 6 4 3 5\n8 2 1''') == '8'\nassert solution('''8 2 1\n1 7 8 2 6 4 3 5\n8 2 1''') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3 1\\n1 7 8 2 6 4 3 5') == '8'\nassert solution('8 2 1\\n1 7 8 2 6 4 3 5') == '3'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n3\\n') == '4'\nassert solution('3\\n2\\n2\\n') == '2'\nassert solution('2\\n4\\n3\\n') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n2 3 4 1\n''') == '3'\nassert solution('''4 3\n2 3 4 1\n''') == '3'\nassert solution('''10 4\n2 3 4 1\n2 2 2 4 4 4 4 2 2 2 2 3\n''') == '5'\nassert solution('''15 10\n2 3 4 1 5 7 9 7 2 3 4 5\n''') == '6'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n2 3 4 1\n''') == '3'\nassert solution('''6 3\n2 2 2 4 4 4\n''') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '3'\nassert solution('6 3') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n2 3 4 1\n''') == '3', 'Wrong!'\nassert solution('''\n6 3\n2 2 2 4 4 4\n''') == '4', 'Wrong!'\nassert solution('''\n4 4\n1 2 3 4 1\n''') == '4', 'Wrong!'\n'''"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '3'\nassert solution('6 3') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '3'\nassert solution('6 3') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"6 3\") == \"4\""
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1 1 1.732050\\n'\n    '1 1 3.0'\n    ) == '1.732050808'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.732050808\"\nprint(solution(input()))"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1 1.732050\n''') == '1.732050880'\nassert solution('''0 1 3.0\n''') == '-1'\n\"\"\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1.732050') == '1.732050880'\nassert solution('1 1 3.0') == '-1'\n'''\n\nimport math\n\na, b, c = map(float, stdin.split())\nprint(round(math.sqrt(a**2 + b**2), 3))\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1.732050') == '1.7320508'\nassert solution('1 1 3.0') == '-1'"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1.732050') == '1.7320508'\n\"\"\"\n\nimport math\nimport re"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1 0.1\n1 1 1.0\n1 1 2.1\n1 1 1.0''') == '1.732050808'\nassert solution('''1 1 5.0\n1 1 1.0\n1 1 1.0''') == '1.0'\nassert solution('''3 1 0.1\n1 1 1.0\n1 1 2.1\n1 1 1.0''') == '1.732050808'\n'''\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 1.732050\nSample Input 3:\n2 4 0\nSample Output 3:\n-1''') == '-1'"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n0 5 4\n.5\n\"\"\") == \"2.4999999987500003\"\nassert solution(\"\"\"\n2\n0 100 10\n0 -100 100\n.80\n\"\"\") == \"9.999999999000002\"\nassert solution(\"\"\"\n1\n0 5 4\n.5\n\"\"\") == \"1.000000000000002\"\nassert solution(\"\"\"\n1\n0 5 4\n.50\n\"\"\") == \"1.5\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3.0000000000000002'\nassert solution('2') == '2.000000000000002'\nassert solution('0') == '0.0000000000000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n3 4 2\n.75\n''') == \"2.4999999987500003\"\nassert solution('''\n2\n0 100 10\n0 -100 100\n.80\n''') == \"9.999999999000002\"\nassert solution('''\n3\n1 0 2\n2 2\n0.75\n''') == \"2.4999999987500003\"\nassert solution('''\n4\n0 1 2 3\n4 5 6 7\n0 1 2 3\n-1 -2 -3 -4\n0.75\n''') == \"2.4999999987500003\"\nassert solution('''\n3\n0 1 2\n1 2\n-0.75\n''') == \"2.4999999987500003\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1\"\n) == \"2.4999999987500003\"\nassert solution(\n    \"2\"\n) == \"9.999999999000002\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2.4999999987500003'\nassert solution('5') == '9.999999999000002'\nassert solution('5') == '9.999999999000002'\nassert solution('0') == '9.999999999000002'\nassert solution('10') == '10.000000000000009'"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 1 3\n0 -1 3\n0 0.5 1\n1 -0.5 1\n''') == '2.4999999987500003'\nassert solution('''\n10\n-1000 -1000 1\n-1000 1000 1\n1000 -1000 1\n-1000 1000 -1\n1000 -1000 -1\n-1000 -1000 -1\n''') == '9.999999999000002'\nassert solution('''\n6\n-1000 -1000 1\n-1000 1000 1\n-1000 -1000 -1\n-1000 1000 -1\n1000 -1000 -1\n-1000 1000 -1\n''') == '9.999999999000002'\nassert solution('''\n12\n-1000 -1000 1\n-1000 1000 1\n-1000 -1000 -1\n-1000 1000 -1\n1000 -1000 -1\n-1000 1000 -1\n1000 -1000 1\n-1000 -1000 -1\n-1000 1000 1\n-1000 -1000 -1\n1000 -1000 1\n-1000 -1000 -1\n-1000 1000 -1\n-1000 -1000 -1\n1000 -1000 -1\n-1000 1000 -1\n''') == '9.999999999000002'\nassert solution('''\n12\n0 -1000 1000 1\n0 -1000 1000 -1\n0 1000 -1000 1\n0 1000 -1000 -1\n0 -1000 1000 -1\n0 -1000 1000 -1\n0 1000 -1000 1\n0 1000 -1000 -1\n0 -1000 1000 -1\n0 -1000 1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 1\n0 -1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 1000 -1\n0 1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 1000 1\n0 1000 -1000 1\n0 -1000 -1000 1\n0 1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 1\n0 1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 1000 -1\n0 1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 -1\n0 -1000 1000 -1\n0 1000 -1000 1\n0 -1000 -1000 1\n1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 1\n0 -1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 -1000 1\n1000 -1000 -1\n0 1000 -1000 1\n0 -1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 1\n0 -1000 -1000 -1\n0 1000 -1000 1\n0 -1000 -1000 1\n0 -1000 1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 -1\n1000 -1000 -1\n0 1000 -1000 1\n0 -1000 -1000 1\n0 1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 -1000 1\n1000 -1000 -1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n1000 -1000 1\n0 1000 -1000 -1\n0 -1000 -1000 1\n0 1000 -1000 1\n0 -1000 -1000 -1\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 6') == '0'\nassert solution('2 1 6') == '3'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6') == '0'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n''') == '0\nassert solution('''\n4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '3\n'''\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n2 1 6\n1 1 5 1 2\n2 1 6''') == '0\\n3\\n2\\n1\\n0'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 6\") == \"3\"\nassert solution(\"2 1 6\") == \"3\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n''') == '3'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\nSample Output 1:\n0\n3\n\nSample Input 2:\n4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\nSample Output 2:\n3\n2\n1\n0\n''') == '3'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 3\n1 1 6\n1 2 1\n2 1 6\n2 3 3\n2 4 4\n''') == '3'\nassert solution('''\n4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '2'\nassert solution('''\n7 6\n1 1 6\n2 1 1\n2 2 1\n2 3 3\n3 1 1\n3 2 1\n4 1 4\n4 2 2\n4 3 3\n''') == '0'\nassert solution('''\n3 3\n1 1 6\n2 1 1\n2 2 2\n''') == '1'\nassert solution('''\n10 10\n1 1 2 2 3 4 5 5 6 7 8 9 9 10\n2 2 2 2 2 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3\n''') == '10'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 6\") == \"0\"\nassert solution(\"1 1 5 1 2\") == \"3\"\nassert solution(\"2 1 6\") == \"3\"\nassert solution(\"2 1 6\") == \"3\"\nassert solution(\"2 1 6\") == \"3\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == \"0\"\nassert solution(sample_input_2) == \"3\""
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '0'\nassert solution('1 1 4 3 4') == '3'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"1\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n\"\"\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 7') == '1'\nassert solution('3 2') == '4'\n'''"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\""
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 5') == '6'\nassert solution('2 1 3') == '3'\nassert solution('1 1 1') == '2'\nassert solution('1 3 1') == '3'\nassert solution('2 3 1') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\", \"First\"\nassert solution(\"3 2 1000000007\") == \"4\", \"Second\""
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7\") == \"5\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '2'\nassert solution('6 2') == '3'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '3'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '1'\nassert solution('8 3') == '7'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == '1'\nassert solution('5 2') == '2'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10\n6\n''') == \"5\"\nassert solution('''\n3 5\n11\n''') == \"8\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '8'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\n\nstdin = \"\"\"2 3\n3\nSample Input 1:\n1 1\n1\nSample Output 1:\n0\n\nSample Input 2:\n1 1\n0\nSample Output 2:\n1\n\nSample Input 3:\n1 1\n2\nSample Output 3:\n1\n\nSample Input 4:\n3 4\n3\nSample Output 4:\n6\n\nSample Input 5:\n7 7\n0\nSample Output 5:\n11\n\nSample Input 6:\n12 12\n13\nSample Output 6:\n17\n\nSample Input 7:\n7 7\n0\nSample Output 7:\n17\n\nSample Input 8:\n9 9\n0\nSample Output 8:\n20\n\"\"\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 10') == '5'\nassert solution('3 5') == '8'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_value) == \"5\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"3\"\nassert solution(\"4 5 3\") == \"3\""
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5 3') == '2'\nassert solution('4 5 3') == '3'\nassert solution('4 5 3') == '4'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\n\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5 3') == '1'\nassert solution('4 5 3') == '2'\nassert solution('8 5 3') == '1'\nassert solution('10 5 3') == '2'\nassert solution('20 5 3') == '3'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5 3') == '2'\nassert solution('4 5 3') == '3'\nassert solution('10 5 3') == '2'\nassert solution('5 4 3') == '2'\nassert solution('5 3 2') == '1'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '3'\nassert solution('4 1') == '4'\nassert solution('4 1') == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '3'\n\nassert solution('''\n5 2\n2 20\n1 20\n1 20\n1 20\n1 20\n''') == '4'\n\nassert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '4'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '3'\nassert solution('4 1') == '4'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\n\nassert solution('''\n4 1\n10\n1 10\n1 10\n1 10\n1 10\n''') == '4'\n\nassert solution('''\n10 9\n5 9 10\n4 9 10\n5 9 10\n5 9 10\n4 9 10\n5 9 10\n4 9 10\n3 9 10\n''') == '3'"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '3'\nassert solution('2 1') == '1'\nassert solution('5 5 10') == '5'\nassert solution('1 1') == '1'"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\n\"\"\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == '3'\nassert solution(\"\") == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120''') == '3'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    4\n    ''') == '1'\nassert solution('''\n    5\n    ''') == '5'\n''')\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"5\""
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n\nassert solution('99') == '1'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n\n\"\"\"\n\n\nimport math\n\nn = int(input())"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\""
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '2', 'First'\nassert solution('4 3') == '2', 'Second'\nassert solution('5 5') == '-1', 'Third'\nassert solution('5 5') == '-1', 'Fourth'\nassert solution('8 8') == '-1', 'Fifth'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2'\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 5') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n0 11 9\\n1 0 10\\n0 0 0\") == \"2\"\nassert solution(\"4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0\") == \"-1\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '2'\nassert solution('4 3') == '2'\nassert solution('4 5') == '-1'\nassert solution('5 5') == '4'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1\n0 11 9\n1 0 10\n0 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n1 2\n10 10\n0 0\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n1 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\\n'''\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\") == \"4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2\"\nprint(\"All test cases passed!\")"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\nassert solution('3 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '3 5 0 3\\n0 1 10\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 10'"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"4 3 5\"\nassert solution(\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"4 3 5\"\nassert solution(\"\"\"\n5 4 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"4 3 5\"\nassert solution(\"\"\"\n5 4 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"4 3 5\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n\"\"\") == \"\"\"4 3 5\n0 1 2\n0 2 1\n1 2 1\n1 3 1\n2 3 2\n\"\"\".strip()\n\nassert solution(\"\"\"\n5 7 0 1\n0 1 100\n1 2 1\n1 3 1\n1 4 1\n0 2 1\n2 3 10\n2 4 10\n\"\"\") == \"\"\"5 4 7\n0 1 100\n0 2 100\n1 2 100\n1 3 100\n1 4 100\n2 3 10\n2 4 10\n\"\"\".strip()\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\"\nassert solution(\"1 1 0 1\") == \"1 2 1\"\nassert solution(\"0 1 100000\") == \"0 1 100000\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 0 3') == '4 3 5'\nassert solution('2 1 0 1') == '2 100000 1'\nassert solution('0 1 0 1') == '1 1 1'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\nassert solution('5 0 2 3\\n0 1 100000\\n1 2 1\\n1 3 1\\n2 3 10\\n2 4 1\\n4 3 1\\n4 5 1\\n5 3 1\\n') == '5 1 100000\\n0 1 100000\\n1 2 1\\n1 3 1\\n2 3 2\\n2 4 1\\n4 3 1\\n4 5 1\\n5 3 1\\n'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\") == \"3 4 5\"\nassert solution(\"4 5 0 3\") == \"3 4 5\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 0'\nassert solution('2') == '0 3'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n.S..\n...S\n...\"\"\") == \"0 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nS.M\\nM..\") == \"2 0\"\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin: str):\n        return str(self.__solution(stdin))\n\n    def __solution(self, stdin: str):\n        stdin = stdin.split(\"\\n\")\n        R, C = map(int, stdin.pop(0).split())\n        board = []\n        mirko, slavko = 0, 0\n        for i in range(R):\n            board.append(stdin.pop(0))\n\n        mirko_r, slavko_r = 0, 0\n\n        for i in range(R):\n            if board[i] == \"M\":\n                mirko_r = i\n                break\n\n        for i in range(R):\n            if board[i] == \"S\":\n                slavko_r = i\n                break\n\n        for i in range(C):\n            if board[mirko_r][i] == \"M\":\n                mirko += 1\n            if board[slavko_r][i] == \"S\":\n                slavko += 1\n\n        for i in range(C):\n            for j in range(C):\n                if board[i][j] == \".\":\n                    mirko -= 1\n                    slavko -= 1\n                    board[i][j] = \"M\"\n                    mirko_r = i\n                    slavko_r = j\n                    break\n        \n        for i in range(R):\n            if board[i][mirko_r] == \"S\":\n                mirko -= 1\n                board[i][mirko_r] = \".\"\n                break\n        \n        for i in range(R):\n            if board[i][slavko_r] == \"M\":\n                slavko -= 1\n                board[i][slavko_r] = \".\"\n                break\n\n        board = list(map(lambda row: \"\".join(row), board))\n\n        return str(mirko + slavko)\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3 5'\nassert solution('2 3') == '0 0'"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '3 5'\nassert solution(input(stdin)) == '2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2 0'\nassert solution('SMS\\nMMS') == '3 5'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\nSMS\nMMS''') == '3 5'\nassert solution('''2 3\nSMS\nMMS''') == '2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(t1) == t2, \"Not right\"\n\n'''"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\nSMS\nMMS\n''') == '3 5'\nassert solution('''\n2 3\nSMS\nMMS\n''') == '2 0'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('6') == '1'\nassert solution('10') == '10'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\n\nassert solution('''\n2\n0 B\n1 T a\n2 E a\n2 S\n5 G a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '1'\n\nassert solution('''\n3\n0 B\n1 T a\n2 E a\n2 S\n5 G a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\nassert solution(\n'''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\nSample Output 2:\n1\n6 b\n''') == '1'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 B\n1 B\n2 E a\n2 E b\n1 S\n''') == '1\n\nassert solution('''\n4\n0 B\n1 B\n2 E a\n2 E b\n1 S\n''') == '2\n\nassert solution('''\n10\n0 G b\n1 G a\n1 T a\n5 G b\n5 G c\n3 G a\n3 T a\n3 S\n1 T a\n2 E a\n2 S\n2 E a\n1 S\n''') == '11\n\nassert solution('''\n10\n0 G b\n1 G a\n1 T a\n5 G b\n5 G c\n3 G a\n3 T a\n3 S\n1 T a\n2 E a"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '1'\nassert solution('10\\n6\\n0 B\\n1 B\\n1 T a\\n2 E a\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\\n') == '2'\nassert solution('6\\n0 B\\n1 B\\n1 T a\\n2 E a"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution(\"\"\"\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n5 G a\n\"\"\") == \"5 c\"\nassert solution(\"\"\"\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n\"\"\") == \"3 c\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\"0 1 2 3 4 5\") == \"6 c\"\nassert solution(\"4 5\") == \"1 c\"\nassert solution(\"4 5 6 7 8 9 10\") == \"2 c\"\nassert solution(\"0\") == \"1 b\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '1'\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '3'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '40'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\nassert solution('1 5') == '40'"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\nassert solution('1 0') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == 40\nassert solution('288 291') == 76\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\""
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\nCAT\\nDOG\") == \"COG\", \"Should transform CAT into DOG\"\nassert solution(\"3\\nCAT\\nDOG\\nCAT\") == \"CAT\", \"Should transform CAT into CAT\"\nassert solution(\"1\\nCAT\") == \"CAT\", \"Should transform CAT into CAT\"\nassert solution(\"2\\nCAT\\nDOG\") == \"CAT\", \"Should transform CAT into CAT\"\nassert solution(\"2\\nCAT\\nDOG\\nDOG\") == \"DOG\", \"Should transform CAT into DOG\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"COG\"\nassert solution(\"4\") == \"0\"\n\nprint(solution(\"3\"))\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\nCAT\nDOG\nCOT\nCAT\nDOG\n''') == 'COG'\nassert solution('''\n4\nCAT\nDOG\nCOT\nCAT\n''') == 'CAT'\nassert solution('''\n2\nCAT\nDOG\n''') == '0'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == None\nassert solution('') == None\nassert solution('1') == None\nassert solution('2') == None\nassert solution('3') == None\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nCAT\") == \"CAT\"\nassert solution(\"2\\nCAT\") == \"COG\"\nassert solution(\"3\\nCAT\") == \"COG\"\nassert solution(\"4\\nCAT\") == \"COG\"\nassert solution(\"5\\nCAT\") == \"COG\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nCAT\nDOG\nCOT\n''') == \"COT\"\nassert solution('''3\nCAT\nDOG\nCOT\n''') == \"COG\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nDOG\\nCAT\") == \"COG\"\nassert solution(\"2\\nCAT\\nDOG\") == \"CAT\"\nassert solution(\"2\\nCAT\\nCOT\") == \"COT\"\nassert solution(\"3\\nCAT\\nDOG\\nCOT\") == \"CAT\"\nassert solution(\"2\\nCAT\\nCOT\\nDOG\") == \"COT\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''CAT\nDOG\nCOT''') == 'COG'\nassert solution('''CAT\nDOG\nCOT''') == '0'\nassert solution('''CAT\nDOG\nCAT''') == 'CAT'\nassert solution('''CAT\nDOG\nCAT''') == 'CAT'"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\nCAT\nDOG\nCOT\n\"\"\") == \"COG\"\nassert solution(\"\"\"\n2\nCAT\nDOG\n\"\"\") == 0\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 1\n''') == '9'\nassert solution('''\n4 3\n''') == '6'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\"\nprint(solution(input()))\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '6'\nassert solution('10 1') == '9'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"9\"\nassert solution(\"4 3\") == \"6\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1\n0\n1\n1\n1\n0''') == '9'\n\nassert solution('''10\n2\n1\n0\n1\n0\n1\n0''') == '9'\n\nassert solution('''3\n1\n1\n0''') == '1'\n\nassert solution('''4\n2\n0\n1\n1''') == '0'\n\nassert solution('''3\n1\n1\n0\n1\n0\n1\n0''') == '0'"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"7\") == \"8\"\nassert solution(\"7\") == \"8\"\n\"\"\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3\n5 2 1 3\n10 1\n''') == '9', solution('''4 3\n5 2 1 3\n10 1\n''')\nprint(solution('''4 3\n5 2 1 3\n10 1\n'''))\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '9'\nassert solution('4 3') == '6'"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1') == '0'\nassert solution('2\\n2') == '0'\nassert solution('3\\n2') == '1'\nassert solution('5\\n2') == '2'\nassert solution('7\\n3') == '2'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"9\"\nassert solution(\"1000000\") == \"999999999\"\nassert solution(\"10001000\") == \"999\"\n\nimport time\nstart = time.time()\n\nprint(solution(input()))\n\nprint(\"Time elapsed:\", time.time() - start)\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5\\nV...\\nH...V') == '3'\nassert solution('2 5\\nV...\\nV...V') == '1'\nassert solution('1 1\\n.V.\\n.V.\\n.V.') == '0'\nprint('PASSED ALL TEST CASES!')\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '3'\nassert solution('2 5') == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./') == '3'\nassert solution('5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./') == '-1'\nassert solution('1 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./') == '3'\nassert solution('5 3\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./') == '4'\nassert solution('5 3\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./') == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\nV...\\nH...V\") == \"3\"\nassert solution(\"4 4\\nV..#.\\n.#.V.\\n..#..\") == \"-1\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '3'\nassert solution('2 5') == '-1'"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '3'\nassert solution('2 5') == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\n.V.\n.V.\n..#..\n.V.#.\n.V./\n''') == '3'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5\n.V..\n.V..\n..#..\n.V.#.\n.V./\n''') == '3'\nassert solution('''4 4\nV... V\n.H...\n... #\n.V...\n''') == '0'\nassert solution('''3 5\n.V..\n.V..\n..#..\n.V.#.\n.V./\n''') == '1'\nassert solution('''5 5\n.V..\n.V..\n..#..\n.V.#.\n.V./\n''') == '-1'\nassert solution('''5 5\n.V..\n.V..\n..#..\n.V.#.\n.V./\n''') == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(\"1 5\\n.V.\\n./.V.\\n.V.#.\\n..#..\\n.V.#.\\n\") == \"3\"\nassert solution(\"5 5\\n.V.\\n./.V.\\n.V.#.\\n./.V.\\n..#..\\n\") == \"0\"\nassert solution(\"5 5\\n.V.\\n./.V.\\n.V.#.\\n./.V.\\n..#..\\n\") == \"2\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n.V..V.\n..#...V.\n.V.#..V.\n.V..V..V.\n.V...V..V.''') == '3'\nassert solution('''2 5\n.V..V.\n.H..V.\nSample Output 2:\n-1''') == '-1'"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n\"\"\") == \"AMBIGUOUS\"\n\nassert solution(\"\"\"\n2\nfox\nuick\nbrown\nfox\n\"\"\") == \"AMBIGUOUS\"\n\nassert solution(\"\"\"\n3\nn\nfox\nuick\nbrown\nfox\n\"\"\") == \"AMBIGUOUS\"\n\nassert solution(\"\"\"\n4\ncdefghi\nefghijk\nefghijx\nabcdefg\n\"\"\") == \"AMBIGUOUS\"\n\nassert solution(\"\"\"\n5\nz\nw\nr\ne\no\n\"\"\") == \"AMBIGUOUS\""
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    'cdefghi',\n    'efghijk',\n    'efghijx',\n    'abcdefg'\n])) == 'AMBIGUOUS'\nassert solution('\\n'.join([\n    'n fox jumps ove',\n    'uick brown f',\n    'y dog.',\n    'rown fox',\n    'mps over the l',\n    'the lazy dog'\n])) == 'The quick brown fox jumps over the lazy dog.'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog\\n\") == \"The quick brown fox jumps over the lazy dog\"\nassert solution(\"4\\ncdefghi\\nefghijk\\nefghijx\\nabcdefg\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\ncdefghi\\nefghijk\\nefghijx\\nabcdefg\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog\\n\") == \"AMBIGUOUS\"\nassert solution(\"4\\ncdefghi\\nefghijk\\nefghijx\\nabcdefg\\n\") == \"AMBIGUOUS\"\n\n'''\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n'\n'n fox jumps ove\\n'\n'uick brown f\\n'\n'The quick b\\n'\n'y dog.\\n'\n'rown fox\\n'\n'mps over the l\\n'\n'he lazy dog\\n') == 'AMBIGUOUS'\nassert solution('4\\n'\n'cdefghi\\n'\n'efghijk\\n'\n'efghijx\\n'\n'abcdefg\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == 'AMBIGUOUS'\nassert solution('4') == 'AMBIGUOUS'\n\"\"\""
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.') == 'AMBIGUOUS', \"Wrong answer for the given sample testcase\"\nassert solution('4\\ncdefghi\\nefghijk\\nefghijx\\nabcdefg') == 'AMBIGUOUS', \"Wrong answer for the given sample testcase\""
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(['n', 'fox jumps ove'])) == 'The quick brown fox jumps over the lazy dog'\nassert solution('\\n'.join(['mps', 'over the l', 'the lazy dog'])) == 'AMBIGUOUS'\nassert solution('\\n'.join(['y dog.', 'rown fox','mps over the l', 'the lazy dog'])) == 'AMBIGUOUS'\nassert solution('\\n'.join(['cdefghi', 'efghijk', 'efghijx', 'abcdefg'])) == 'AMBIGUOUS'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '+-0-', 'First'\n\nassert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+', 'Second'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+0-', 'First'\nassert solution('''4 3\n-1 -2 0\n2 3 -1\n2 2 1\n''') == '0-+', 'Second'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '--+0-'\nassert solution('5 6') == '--+0-'\n\nassert solution('1 2 1') == '0+-'\n\nassert solution('1 2 1') == '0+-'\n\nassert solution('2 3 3') == '+--'"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0+-'"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"--+0-\"\nassert solution(\"3 2\") == \"0+-\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+0-'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '--+0-', \"({}, {}) => {}\".format(stdin, solution(stdin), solution(stdin) == '--+0-')\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1') == '--+0-', \"First\"\nassert solution('3 2\\n1 2 1\\n-2 0 2\\nSample Output 2:0+-') == '0+-', \"Second\""
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n-3 -2 3\\n-2 -2 4\\n2 3 3\\n-1 1 2\\n0 1 4\\n2 5 1\") == \"--+0-\", \"Should be able to dodge all the ships.\"\nassert solution(\"4 3\\n1 2 0\\n0 1 1\\n0 1 1\\n-2 -2 1\") == \"-+1-\", \"Should be able to dodge first and second ship.\"\nassert solution(\"3 3\\n1 0 1\\n2 1 2\\n0 0 0\") == \"0+0\", \"Should be able to dodge first and second ship.\"\nassert solution(\"2 3\\n2 1 1\\n1 0 0\\n2 1 1\") == \"-+1-\", \"Should be able to dodge both.\"\nassert solution(\"6 5\\n3 2 0\\n2 1 1\\n0 0 0\\n2 1 1\\n2 1 1\\n2 1 1\\n2 1 1\\n-2 -2 1\\n1 0 0\\n0 1 1\\n2 1 2\") == \"0+-1-\", \"Should be able to dodge first and second ship.\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"--+0-\", \"Should dodge the first ship and move to the last ship\"\nassert solution(\"6 6\") == \"--+0-\", \"Should dodge the first ship and move to the second ship\"\nassert solution(\"1 2\") == \"0-0-\", \"Should dodge the first ship and move to the third ship\"\nassert solution(\"-2 -2 4\") == \"-+0-\", \"Should dodge the first ship and move to the fourth ship\"\nassert solution(\"2 3 3\") == \"-+0-\", \"Should dodge the first ship and move to the fifth ship\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'\nassert solution('2 3') == '4'\nassert solution('2') == '0'\nassert solution('1 2 1') == '0'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '2'\nassert solution('1 1 1') == '2'\nassert solution('1 1 1 1') == '2'\n\n'''"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '2'\nassert solution('1 1 1 1') == '3'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 1\n1 1\n1\n1 1 1\n2 2 2\n''') == '4'\nassert solution('''\n2 2\n1 1\n2 3\n2\n1 2 2\n2 2 2\n''') == '4'\nassert solution('''\n1 4\n3 1\n3 4\n3\n''') == '0'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"4\""
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 2\n1 1\n1 1\n1\n1 1 1\n2 2 2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == 'YES','should be YES'\nassert solution('2 3') == 'NO','should be NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\nRWRR\") == \"YES\"\nassert solution(\"1\\n2\\nRRR\") == \"NO\"\nassert solution(\"5\\n5\\nBBRRBBBBRRRBBBBRRBBBBBB\") == \"YES\"\nassert solution(\"5\\n4\\nRWRBBB\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == 'YES'\nassert solution('3 4') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution(\"4 5\\nWWRR\\nWRRR\\nWRRR\\nWBBBB\") == \"NO\""
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == 'YES'\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\n''') == 'NO'\nassert solution('''2 2\nRRR\nRRR\n''') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'YES'\n\n'''\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == 'YES'\nassert solution('1 5') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"YES\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"YES\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\\\n3 3 5\n1\n2\n3''') == '1'\nassert solution('''\\\n6 3 5\n1\n2\n3\n3\n2\n1''') == '3'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 3 5\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"2\\n\"\n    \"1\"\n) == \"1\"\n\nprint(solution.__doc__)\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('6 3 5') == '3'"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 5\n1\n2\n3\n''') == '1'\nassert solution('''\n6 3 5\n1\n2\n3\n3\n2\n1\n''') == '3'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 5\\n1') == '1'\nassert solution('6 3 5\\n1\\n2\\n3\\n3\\n2\\n1') == '3'\nprint(\"You're all set!\")\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('6 3 5') == '3'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('3 3 5') == '1'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"6 3 5\") == \"3\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 5\n1\n2\n3\n''') == '1'\nassert solution('''\n6 3 5\n1\n2\n3\n3\n2\n1\n''') == '3'\nassert solution('''\n6 3 5\n1\n2\n3\n4\n5\n''') == '4'\nassert solution('''\n5 5 2\n1\n1\n1\n1\n1\n''') == '2'\nassert solution('''\n3 2 1\n2\n1\n''') == '1'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '3 2'\nassert solution('2') == '12 3'\nassert solution('3') == '12 3'\nassert solution('4') == '8 7'\nassert solution('5') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '12 3', \"Wrong!\"\nassert solution('5 2') == '3 2', \"Wrong!\"\nassert solution('3 3') == '1 2', \"Wrong!\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n0 2\n1 2\n3 3\n\"\"\"\n) == \"3 2\"\nassert solution(\n\"\"\"\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n\"\"\"\n) == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2 2'\nassert solution('5') == '3 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n0 2\n1 2\n3 3\n\"\"\") == \"3 2\"\nassert solution(\"\"\"\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n\"\"\") == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n4 5\\n3 3') == '12 3'\nassert solution('5\\n0 2\\n1 3\\n3 3') == '12 3'\nassert solution('8\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5') == '12 3'\nassert solution('15\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n14 5\\n13 5\\n12 5\\n11 5\\n10 5\\n9 5\\n8 5\\n7 5\\n6 5\\n5 5\\n4 5\\n3 5\\n2 5\\n1 5') == '14 5'"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3 2\"\nassert solution(\"5\") == \"12 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 2\\n1 3\\n3 3\\n\") == \"3 2\"\n\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\\n\") == \"12 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '13 3'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == '100'\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == '0010'\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == '0100'\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == '0000'\nassert solution('''\n1\n0\n''') == '00'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3\n0\n1 1\n1\n1 1\n1\n1\n\"\"\"\n) == \"100000\"\n\nassert solution(\n\"\"\"\n4\n0\n1 1\n1\n1 1\n1\n1\n\"\"\"\n) == \"0100100\"\n\nassert solution(\n\"\"\"\n3\n0\n1 1\n1\n1 1\n1\n1\n\"\"\"\n) == \"000100\"\n\nassert solution(\n\"\"\"\n3\n0\n1 1\n1\n1 1\n1\n1\n\"\"\"\n) == \"110100\"\n\nassert solution(\n\"\"\"\n5\n0\n1 1\n1\n1 1\n1\n1\n\"\"\"\n) == \"111100\""
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '100'\nassert solution('3') == '010'\nassert solution('4') == '11100'\nassert solution('5') == '10110'\nassert solution('6') == '100111'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1\n0\n0\n3\n''') == '100'\nassert solution('''3\n0\n1 1\n1\n1 1\n1\n1\nSample Input 3:\n4\n0\n1 1\n1\n1 1\n1\n1\nSample Output 3:\n0001\n1001\n1010\n1011\n100\n10\nSample Input 4:\n8\n1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\nSample Output 4:\n0111\n1111\n11111\n111111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n10111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n1011\n10111\n1011111\n1011111\n1\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '100'\nassert solution('3') == '00101'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n0\n0\n0\n3\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '10001000'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"100\"\nassert solution(\"3\") == \"1011\"\nassert solution(\"4\") == \"0011\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"0000\"\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '100'\nassert solution('4') == '0101'\nassert solution('5') == '01010'"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1\n0\n0\n3\n''') == '100'\nassert solution('''3\n0\n1 1\n1\n1 1\n1\n1\nSample Input 3:\n4\n0\n0 1\n0\n0\n0\n0\nSample Output 3:\n100\n000\n100\n000\n''') == '011'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '2'\nassert solution('2 3') == '1'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1', 'First'\nassert solution('4 1') == '1', 'Second'\nassert solution('3 1') == '1', 'Third'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 1\n1 2\n2 3\n2 3\n2 4\nSample Input 3:\n10 1\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\nSample Output 3:\n7\n''') == '7'"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution('1 2') == '2'\nassert solution('1 3') == '2'\nassert solution('2 3') == '2'\nassert solution('2 3') == '2'"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 1\"\n) == \"2\"\nassert solution(\n    \"4 1\"\n) == \"3\"\nassert solution(\n    \"5 1\"\n) == \"4\"\nassert solution(\n    \"7 1\"\n) == \"6\"\nassert solution(\n    \"8 1\"\n) == \"7\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1\n2 3\n2 3\n''') == '2'\nassert solution('''3 1\n1 3\n2 3\n2 3\n''') == '3'\nassert solution('''4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\nassert solution('''5 1\n1 3\n4 6\n7 8\n2 5\n2 4\n''') == '4'\nassert solution('''6 1\n1 3\n4 6\n7 8\n2 5\n2 4\n2 2\n''') == '5'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2'\n\nassert solution('''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\n\nassert solution('''\n1 10\n2 3\n3 5\n''') == '1'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\nassert solution('''\n10 1\n10 10\n10 10\n''') == '1'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 1') == '3'\nassert solution('4 1') == '3'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.86989765'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\"\n\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\"\n\nassert solution(\"5 5 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"Impossible\"\n\nassert solution(\"5 6 1000\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"Impossible\"\n\nassert solution(\"3 3 1000\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"Impossible\""
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"90.00000000\"\nassert solution(\"5 6 450\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n\") == \"126.86989765\"\nprint(\"All tests passed!\")"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '90.00000000'\nassert solution('5 6 500') == '90.00000000'\nassert solution('5 6 500.000000') == '90.000000'\nassert solution('10 9') == '270.00000000'\nassert solution('4 4') == '36.00000000'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 400') == '90.00000000'\nassert solution('5 6 300') == 'Impossible'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"90.00000000\"\nassert solution(\"5 6 500\") == \"90.00000000\"\nassert solution(\"5 6 550\") == \"90.00000000\"\nassert solution(\"5 6 500 -100 0\") == \"90.00000000\"\nassert solution(\"5 6 500 -100 100\") == \"90.00000000\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\nSample Output 2:\n126.86989765''') == '126.86989765'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == stdout_"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\"\n) == \"90.00000000\"\nassert solution(\n    \"5 6 5\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\"\n) == \"126.86989765\"\nassert solution(\n    \"5 1 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\"\n) == \"Impossible\"\nassert solution(\n    \"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\"\n) == \"Impossible\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == '126.86989765'\nassert solution('5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5') == 'Impossible'\nassert solution('4 1 0\\n5 2 1\\n6 3 1\\n7 4 1\\n8 5 1\\n9 6 1\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6') == '0.0'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\nassert solution('123456789101112131415') == '15'\n\"\"\""
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\n\"\"\""
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n5\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3 1\n''') == '3.5', 'First'\nassert solution('''3 3 2\n''') == '4.9', 'Second'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 3 1\"\n) == \"3.5\"\n\nassert solution(\n    \"3 3 2\"\n) == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 1\\n') == '3.5'\nassert solution('3 3 2\\n') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 2') == '4.9'\nassert solution('3 3 1') == '3.5'"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 1\n''') == '3.5'\nassert solution('''\n3 3 2\n''') == '4.9'\n\"\"\""
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '19'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\nprint(solution(input()))\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 1 5') == \"19\"\nassert solution('12 12 1 12') == \"4\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 1 5') == \"19\"\nassert solution('12 12 1 12') == \"4\"\nprint(solution(input()))"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 5 1 5\n''') == '19'\nassert solution('''\n12 12 1 12\n''') == '4'\nassert solution('''\n1 1 1 1\n''') == '2'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '19'"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n\nassert solution('3 4') == '2'\nassert solution('5 7') == '3'\nassert solution('3 4 2') == '2'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 5\n1 12\n''') == '4'\nassert solution('''1 20\n1 30\n1 44\n1 59\n1 75\n1 96\n''') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5\\n') == '4'\nassert solution('1 12\\n') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\nprint('all tests passed')"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\n\"\"\"\nimport math"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n\"\"\""
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n\nimport itertools\nimport collections\n\nvowels = 'aeiou'\nconsonants = 'bcdfghjklmnpqrstvwxyz'\nall = vowels + consonants"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5\n2\n3\n4\n1''') == '3'\nassert solution('''5\n1000000\n1000000\n1000000\n1000000\n1000000''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '0'\nassert solution('1') == '1'\nassert solution('1\\n0') == '0'\nassert solution('3\\n1 2 3') == '3'\nassert solution('6\\n1 2 3 4 5') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1000000 1 1 1 1') == '0'\nassert solution('3\\n1000000 2 1') == '8'\nassert solution('3\\n1000000 4 1') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n3 4 5 2 1\\n') == '7'\nassert solution('6\\n0 2 0 1\\n') == '8'\nassert solution('4\\n0 2 0 1\\n') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4\\n0 2 0 1\\n\"\n    ) == \"8\"\nassert solution(\n    \"5\\n1000000 1 1 1 1\\n\"\n    ) == \"0\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1000000 1 1 1 1') == '0'\n\n'''\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\nassert solution('''\n4\n0 2 0 1\n''') == '8'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3 4\n2\n''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n') == '0'\nassert solution('3\\n0 2 1\\n') == '1'\nassert solution('10\\n1 3 4 5 6 7 8 9 10\\n') == '51'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"0\"\n\nprint(solution(\"5\"))\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\nab\nac\nad\nba\nbb\n\n''') == 'zyz'\n\nassert solution('''\n5 2\nab\nac\nad\nba\nbb\n''') == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\nassert solution('2 1000') == '-1'\nassert solution('2 1453') == '-1'\nassert solution('2 500') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n\n----------------------------------------\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '-1'\nassert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\nassert solution('5 0') == '-1'\nassert solution('5 0 1') == '5 0'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == -1\n\"\"\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 650\nSample Input 1:\n2 651\nSample Output 1:\nzyz\n\nSample Input 2:\n3 3\nSample Output 2:\nzyz\n\nSample Input 3:\n3 4\nSample Output 3:\n-1\n\nSample Input 4:\n3 5\nSample Output 4:\nzyz\n\nSample Input 5:\n4 5\nSample Output 5:\nzyz\n\nSample Input 6:\n4 6\nSample Output 6:\n-1\n''') == 'zyz'\n\nSample Input 7:\n4 6\nSample Output 7:\n-1\n\n'''\n\n'''\nclass Solution:\n    def solve(self, k: int, n: int) -> str:\n        pass\n'''"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '-1'\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aaa') == 'aaa'\nassert solution('aaaa') == 'aaa'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"10\") == \"8\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0') == '4'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1') == '8'\nprint('all tests passed')"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"3\") == \"8\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\nprint('First Test: PASS')\n\nassert solution('''\n6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '4'\nprint('Second Test: PASS')\n\nassert solution('''\n10\n6 1 1\n0 2 0\n2 1 1\n6 1 1\n8 2 0\n4 4 0\n4 0 0\n2 3 1\n6 1 0\n6 3 1\n''') == '8'\nprint('Third Test: PASS')"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n10 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0') == '4'\nassert solution('6\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n0 10 0\n10 0 1\n12 8 1\n''') == '4'\nassert solution('''5\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0\n''') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '4'\nassert solution('10') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"10\") == \"8\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n\") == \"4\"\nassert solution(\"10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n\") == \"8\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4 3\n3 4 5 7\n1 2 10\n''') == '0'\nassert solution('''3 5 2\n1 4 7 9 11\n2 3\n''') == '1'\nassert solution('''1\n10\n1\n''') == '-1'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 3') == '0'\nassert solution('3 5 2') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(t1) == '1'\nassert solution(t2) == '2'"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 3\") == \"0\"\nassert solution(\"3 5 2\") == \"2\"\n\nprint(solution(*tuple(map(int, stdin.split()))))\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 3\\n3 4 5 7\\n1 2 10\\n') == '0'\nassert solution('3 5 2\\n1 4 7 9 11\\n2 3\\n') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4 3\n3 4 5 7\n1 2 10\n''') == '0'\nassert solution('''\n3 5 2\n1 4 7 9 11\n2 3\n''') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 3\\n3 4 5 7\") == \"0\"\nassert solution(\"3 5 2\\n1 4 7 9 11\") == \"2\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5 3\n1 2 10\n2 3\n''') == '2'\nassert solution('''\n5 5 2\n1 2 10\n3 4\n''') == '0'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == '0'\nassert solution(sample_input_2) == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n\n\"\"\"\n\n\nimport sys\nsys.stdin = open('input.txt')\nfrom collections import deque"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n3 2\n''') == '1'\nassert solution('''2 1\n3 2\n''') == '2'\nassert solution('''5 2\n3 2\n''') == '3'\nassert solution('''4 1\n3 2\n''') == '3'\nassert solution('''8 5\n3 2\n''') == '4'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"4 4\") == \"2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n3 2\n''') == '1'\nassert solution('''\n1 2\n3 4\n''') == '3'\nassert solution('''\n1 1\n3 3\n''') == '3'\nassert solution('''\n1 1\n3 4\n''') == '2'"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '0 -1'\nassert solution('3 2') == '0 -1 1'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"-2 -1\"\nassert solution(\"1 2\") == \"3 1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"0 -2\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n3 2\") == \"1\"\nassert solution(\"1 2\\n3 4\") == \"3\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n3 2\n''') == '1'\nassert solution('''\n1 2\n3 4\n''') == '3'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(samples.SAMPLE_1) == \"2\", \"The first solution\"\nassert solution(samples.SAMPLE_2) == \"18\", \"The second solution\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\", solution(\"5\")\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"24\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '24'\nassert solution('10') == '3324'"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '24'"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '24'\n\"\"\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\nIVO\nJASNA\nJOSIPA\n''') == '4'\nassert solution('''\n5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA\n''') == '24'\nassert solution('''\n7\nIVO\nJASNA\nJOSIPA\nMATO\nMARA\nMARIA\nMATEO\n''') == '40'\nassert solution('''\n10\nMARIA\nMARTA\nMATO\nMARA\nMARTINA\nMATEO\nMATEO\nMARIA\n''') == '49'\nassert solution('''\n13\nMARIA\nMARTA\nMATO\nMARA\nMARTINA\nMATEO\nMATEO\nMARIA\n''') == '29'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\nIVO\\nJASNA\") == \"4\"\nassert solution(\"4\\nIVO\\nMARTA\\nMATO\\nMARA\\nMARTINA\") == \"24\""
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nIVO\\nJASNA\\nJOSIPA') == '4\\n'\nassert solution('5\\nMARICA\\nMARTA\\nMATO\\nMARA\\nMARTINA') == '24\\n'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 2 3 1\\n3 3 4 1\\n1 9 4 7\\n') == '39'\nassert solution('2\\n4 3 1\\n3 1 5 6\\n1 9 4 7\\n') == '0'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3 1\\n2 3 4 1\\n3 4 5 1\\n') == '3'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n\"\"\") == \"39\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3', f'Wrong answer for \"{stdin}\"'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 3 1\n2 3 4 1\n3 4 5 1\n4 5 6 1\n5 6 7 1\nSample Output 3:\n40\n''') == '40'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"0\"\nassert solution('1') == \"0\"\nassert solution('2') == \"0\"\nassert solution('1 2 3 1') == \"3\"\nassert solution('2 3 4 1') == \"4\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\nassert solution('''3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '0'\nassert solution('''3\n2 2 3 1\n3 1 5 6\n1 9 4 7\n''') == '3'\nassert solution('''3\n3 2 3 1\n3 1 5 6\n1 9 4 7\n''') == '39'\nassert solution('''3\n3 2 3 1\n3 1 5 6\n1 9 4 7\n''') == '0'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 2 3 1\n3 1 5 6\n1 9 4 7\n''') == '39'\nprint('All tests passed!')\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '39'\nassert solution('3') == '3'\nassert solution('2') == '39'"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'\nassert solution('''\n1000000000\n2 2 2 4 1\n3 4 4 7 1\n1 10000000 8 9\n''') == '799999999'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution('''\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '10.0'\nassert solution('''\n5\n2 4\n-1\n0\n0\n1\n-1\n1\n''') == '2.0'\nassert solution('''\n3\n1 2\n3\n0\n''') == '3.0'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '5.2696518641'\nassert solution('1') == '9'\nassert solution('10') == '9.46'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2 5 -2 0\n3 2 -2 0\n1 -1 2''') == '2.0189209824'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '5.2696518641'"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '9'\nprint(solution())\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '5.2696518641'\nassert solution('1') == '9'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"5.2696518641\"\nassert solution(\"1\") == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"1\") == \"0.0\"\nassert solution(\"2\") == \"10.0\"\nassert solution(\"3\") == \"11.0\"\nassert solution(\"4\") == \"14.0\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"5.2696518641\"\nassert solution(\"1\") == \"9\""
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '9'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 1\n2 0 2\n3 1 1\n''') == '1'\nassert solution('''3\n4 1 1\n5 2 3\n5 0 3\n''') == '8'\nassert solution('''3\n4 1 1\n5 2 3\n5 0 3\n''') == '24'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1 1 1\n2 0 2\n3 1 1\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n4 1 1\n5 2 3\n5 0 3\n\"\"\") == \"8\"\nassert solution(\n\"\"\"\n4 4 4\n5 1 2\n5 0 4\n\"\"\") == \"24\""
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"4\"\nassert solution(\"1000000000000\") == \"1000000000000\"\n\n'''\n\nimport math"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 0 2') == '8'\nassert solution('3 1 1') == '4'\nassert solution('4 0 3') == '24'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1 1\n2 0 2\n3 1 1''') == '1'\nassert solution('''3\n4 1 1\n5 2 3\n5 0 3''') == '8'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 1\n2 0 2\n3 1 1\n''') == '1'\nassert solution('''\n4 1 1\n5 2 3\n5 0 3\n''') == '8'\nassert solution('''\n5 4 2\n8 4 3\n4 4 1\n''') == '24'\nassert solution('''\n3\n2 2 2\n1 1 1\n''') == '-1'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t1) == '1'\nassert solution(t2) == '8'\nassert solution(t3) == '4'"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'\nassert solution('1 3') == '1'\nassert solution('6 8 10') == '4'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1\n2 0 2\n3 1 1\n''') == '1'\nassert solution('''\n4 1 1\n5 2 3\n5 0 3\n''') == '4'\nassert solution('''\n3\n4 1 1\n5 2 3\n5 0 3\n''') == '6'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 2]) == '3'\nassert solution([6, 6]) == '240'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\"\nassert solution(\"10 10\") == \"2400\"\n\n\"\"\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 6') == '240'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 3\n\"\"\") == \"\"\"\n4\n\"\"\".replace(\"\\n\", \"\\n  \")\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"24\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"10 2\") == \"36\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 2]) == \"3\"\nassert solution([6, 6]) == \"240\""
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\nassert solution('5 5') == '848'\nassert solution('6 6') == '240'\nassert solution('4 4') == '192'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"6 6\") == \"240\"\nassert solution(\"1 10\") == \"1024\""
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == 'impossible'\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''SEND+MORE=MONEY''') == '9567+1085=10652'\nassert solution('''A+A=A''') == 'impossible'\nprint(solution('''K+K=K'''))\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''SEND+MORE=MONEY''') == '9567+1085=10652'\nassert solution('''A+A=A''') == 'impossible'\nassert solution('''C+B=A''') == '2+1=3'\n'''\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n\n\"\"\""
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\n    \"A+A=A\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\nassert solution(\"SHOP+SHOP=SHOP\") == \"SHOP+SHOP=SHOP\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''SEND+MORE=MONEY''') == '9567+1085=10652'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '3'\nassert solution('4') == '6'\nassert solution('5') == '1'"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n0 1 2 3\\n') == '14'\nassert solution('5\\n1 1 2 1 1\\n') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n2\n3\n4\n''') == '14'\n\nassert solution('''4\n1 2 1 3\nSample Input 3:\n6\n0 1 2 3 4 5\nSample Output 3:\n1\n\nSample Input 4:\n6\n1 3 1 2 1 1\nSample Output 4:\n1\n\nSample Input 5:\n6\n1 1 1 1 1 1\nSample Output 5:\n1\n''') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"14\""
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '14'\nassert solution('5') == '1'"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('2 5 4 3 2') == '5'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '2'\nassert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 1 2\n''') == '1'\nassert solution('''\n4\n0 1 2 3\n''') == '14'"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"88\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"1 2 3\") == \"-1\"\nassert solution(\"0 0 5 6\") == \"-1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"88\", \"First Example\"\nassert solution(\"\"\"4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n5 4 8 3 2 1\n\"\"\") == \"1340\", \"Second Example\"\nassert solution(\"\"\"4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n5 4 8 3 2 1\n1 0 0 5 6 7 8 9 10 11 12\n\"\"\") == \"1459\", \"Third Example\"\nassert solution(\"\"\"4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n5 4 8 3 2 1\n
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == \"88\", \"First\"\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == \"-1\", \"Second\"\nassert solution('''\n6 7\n-1 -1 0 1 1\n1 0 -1 -1 1 1\n0 0 -1 -1 -1 1\n1 1 0 -1 -1 1\n-1 -1 -1 -1 0 1\n1 1 0 -1 0 1\n''') == \"33\", \"Third\"\nassert solution('''\n2 3\n0 0 0\n0 0 0\n0 0 0\n''') == \"11\", \"Fourth\"\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == \"-1\", \"Fifth\"\n'''\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 4 7 8\\n7 0 0 10\") == \"-1\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n7 0 0 10\") == \"88\"\nassert solution(\"4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\") == \"88\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10') == \"88\"\nassert solution('5 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10') == \"-1\"\nassert solution('3 3\\n1 2 3 0\\n0 1 5 6\\n0 0 8 7\\n0 2 0 9\\n3 0 0 11\\n') == \"-1\"\nassert solution('5 5\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n8 0 0 12\\n') == \"15\"\nassert solution('10 9\\n1 2 3 4 0\\n0 0 5 6 7\\n0 8 9 10 11\\n12 0 0 13 14\\n2 0 0 15 16\\n0 17 18 19 20\\n') == \"-1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\\n') == '88'\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n\"\"\") == \"88\"\nassert solution(\"\"\"\n5 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 2 6\n0 0 1 3\n\"\"\") == \"43\"\nassert solution(\"\"\"\n5 5\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 2 6\n0 0 1 3\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n5 7\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 2 6\n0 0 1 3\n0 0 0 2\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n3 5\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 2 6\n0 0 1 3\n0 0 0 2\n\"\"\") == \"38\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '88', solution('2 2')\nassert solution('1 2') == '88', solution('1 2')\nassert solution('4 4') == '88', solution('4 4')\nassert solution('0 0 5 6') == '-1', solution('0 0 5 6')\nprint('all tests passed')\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"5 5\\n2 2 2 2 2 2\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n0 0 0 0 0 0\\n\") == \"228\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n0 0 1\n0 0 1\n0 0 1\n\"\"\") == \"10\"\nprint(solution(\"\"\"\n10\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 1\") == \"0.000\"\nassert solution(\"1 99999\") == \"9999700002.000\""
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 1\n1 1''') == '0.000'\nassert solution('''2\n1 99999\n99999 99999''') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 1\n1 1\n''') == '0.000'\nassert solution('''\n2\n1 99999\n9999 99999\n''') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.000'\nassert solution('2') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0.000'\nassert solution('1') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('2') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 1\n1 1\n''') == '0.000'\nassert solution('''\n1\n1 1\n''') == '1.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 1') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\nassert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == 'Infinity'\nassert solution('''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == '3'\nassert solution('''4 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5') == \"3\"\nassert solution('3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2') == \"Infinity\"\nprint(solution(*['6 8 1 6', '1 2 5', '1 3 1', '2 6 6', '2 3 6', '4 2 3', '3 4 1', '4 5 1', '5 6 1', '5', '1 3 6 5 4', '1 3 6 5 4', '2 3 6 5 4']) == \"3\")\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 8 1 6\") == \"3\"\nassert solution(\"3 4 1 2\") == \"3\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 8 1 6\") == \"3\"\nassert solution(\"3 4 1 2\") == \"Infinity\"\nassert solution(\"1 2 5\") == \"3\"\nassert solution(\"1 3 1\") == \"3\"\nassert solution(\"2 6 6\") == \"3\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 8 1 6') == '3'\nassert solution('3 4 1 2') == 'Infinity'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5''') == '3'\nassert solution('''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2''') == 'Infinity'\nprint('Tests passed')"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5''') == \"3\"\n\nassert solution('''3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2''') == \"Infinity\"\n\nprint(solution(input()))"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5') == '3'\nassert solution('6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5') == '3'\nassert solution('3 4 1 2\\n1 2 6\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5') == '3'\nassert solution('4 5 1\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5') == '3'"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == 'impossible'\nassert solution('3 1') == '000'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 1\n1\n''') == 'impossible'\nassert solution('''3 1\n1\n''') == '000'\nassert solution('''3 1\n2\n''') == '001'\nassert solution('''3 1\n3\n''') == '011'\nassert solution('''3 1\n4\n''') == '010'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == \"impossible\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"impossible\"\nassert solution(\"3 1\") == \"000\"\nassert solution(\"4 2\") == \"000\"\nassert solution(\"5 1\") == \"001\"\nassert solution(\"6 1\") == \"001\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'impossible'\nassert solution('4 1') == '00010000'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == 'impossible'\nassert solution('3 1') == '000'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"impossible\"\nassert solution(\"6 1\") == \"000\\n001\\n011\\n010\\n110\\n111\\n101\\n100\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'impossible'\nassert solution('6 1') == '000'\nassert solution('3 1') == 'impossible'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 1\n1\nSample Input 3:\n8 1\n2\nSample Output 3:\n000\n001\n011\n010\n111\n101\n100\n101\n110\n111\n110\n111\n''') == 'impossible'"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"impossible\"\nassert solution(\"6 1\") == \"impossible\"\nassert solution(\"3 1\") == \"000\"\nassert solution(\"5 1\") == \"000\"\nassert solution(\"4 1\") == \"111\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '2'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"2\"\nassert solution(\"90\") == \"11\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '2'\nassert solution('90') == '10'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n99') == '1'\nassert solution('90\\n10') == '10'"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"90\") == \"1\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n99\n''') == '1'\nassert solution('''\n100\n10\n''') == '10'\nassert solution('''\n1000\n10\n''') == '11'\nassert solution('''\n1000\n100\n''') == '10'\nassert solution('''\n1000\n1\n''') == '11'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\n99') == '1'\nassert solution('90\\n10') == '10'\n\n'''"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"1\"\nassert solution(\"90\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\n99') == '1'\nassert solution('90\\n10') == '10'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '1'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n2 3 3\\n4 1 10\\n2 7 3\\n\"\n    ) == \"1\"\nassert solution(\n    \"4\\n3 1 3 3\\n5 8 7 10\\n4 1 2 6\\n\"\n    ) == \"1\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 1 3') == '2'\nassert solution('4\\n4 1 2 3') == '1'"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2 1 3\n4 1 10\n2 7 3\n''') == '1'\n\nprint(solution('''\n3\n2 3 3\n4 1 10\n2 7 3\n'''))"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3 3\n4 1 10\n2 7 3\n''') == '1'\nassert solution('''3\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '2'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\nassert solution('''5\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '2'\nassert solution('''6\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8\\n') == '8\\n'\nassert solution('9\\n') == '1\\n'\nassert solution('10\\n') == '11\\n'\nassert solution('11\\n') == '10\\n'\nassert solution('12\\n') == '12\\n'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\nbba\n3\n''') == '7'\nassert solution('''\n4\nab\n1 2\n3 4\n''') == '8'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 5\nbeginning\n1 5\n4 8\n1 9\n''') == '5'\nassert solution('''\n6 1\nvelvet\n1 6\nSample Output 2:\n7\n''') == '7'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\na,b,c,d,e\n1,2,3,4,5\n6,7,8,9,10\n11,12,13,14,15\n16,17,18,19,20\n\"\"\") == \"11,12,13,14,15,16,17,18,19,20\"\n\nassert solution(\"\"\"\na,b,c,d,e\n1,2,3,4,5\n6,7,8,9,10\n11,12,13,14,15\n16,17,18,19,20\n\"\"\") == \"16,17,18,19,20\"\n\nassert solution(\"\"\"\na,b,c,d,e\n1,2,3,4,5\n6,7,8,9,10\n11,12,13,14,15\n16,17,18,19,20\n\"\"\") == \"17,18,19,20\"\n\nassert solution(\"\"\"\na,b,c,d,e\n1,2,3,4,5\n6,7,8,9,10\n11,12,13,14,15\n16,17,18,19,20\n\"\"\") == \"14,15,16,17,18\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nstart\n5 6\n1 2 3 4 5\n7 8 9 10 11\n12 13 14 15 16\n''') == '15'\n\nassert solution('''\nstart\n5 6\n3 1 4 5\n7 8 9 10 11\n12 13 14 15 16\n''') == '11'\n\nassert solution('''\nstart\n5 6\n3 1 4 5\n7 8 9 10 11\n12 13 14 15 16\n''') == '14'\n\nassert solution('''\nstart\n5 6\n3 1 4 5\n7 8 9 10 11\n12 13 14 15 16\n''') == '16'\n\nassert solution('''\nstart\n5 6\n3 1 4 5\n7 8 9 10 11\n12 13 14 15 16\n''') == '15'"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('beginning') == '5'\nassert solution('velvet') == '7'\nassert solution('\\n'.join(['beginning', '1 5', '4 8', '1 9'])) == '11'\n\n'''"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 4') == '2'\nassert solution('8 1') == '8'\n\nsample_input = '1 4'\nsample_output = '2'\nassert solution(sample_input) == sample_output\n\nsample_input = '2 3'\nsample_output = '3'\nassert solution(sample_input) == sample_output\n\nsample_input = '3 8'\nsample_output = '11'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\nbeginning\n1 5\n4 8\n1 9\nSample Output 2:\n7\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '9'\nassert solution(input()) == '11'\n\"\"\""
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '2'\nassert solution('2 3') == '23'\n\n'''\nimport math"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n5 1\n2 2\n1 1\n1 1\nSample Output 1:\n2\n\nSample Input 2:\n1\n1\nSample Output 2:\n1\n''') == '1'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"23\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '2'\nassert solution('2 3') == '23'\nassert solution('2 1') == '1'\nassert solution('2 0') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"23\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '23'\nassert solution('3') == '23'\nassert solution('4') == '23'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '23'\nassert solution('1 23') == '23'\nassert solution('2 17') == '23'"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n3 1\n2 2\n1 1\n''') == '2'\nassert solution('''\n1 1\n1 1\n''') == '2'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 3\n1 1\n2 2\n1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '2'\nassert solution('1 23') == '23'\nassert solution('2 17') == '23'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1.0000000000'\nassert solution('6') == '5.0000000000'\nassert solution('7') == '5.0000000000'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.0000000000'\nassert solution('1') == '0.0000000000'\nassert solution('0') == '0.0000000000'\nassert solution('-1') == '0.0000000000'\nassert solution('-2') == '0.0000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '4.0000000000'\nprint(solution('1\\n2\\n3\\n4\\n5'))\n\n----\nclass Polygon(object):\n    def __init__(self, points):\n        self.points = points\n        self.n = len(points)\n        self.visited = [False for _ in range(self.n)]\n        self.points = points\n        self.result = 0\n\n    def dfs(self, p):\n        self.visited[p] = True\n        self.result += 1\n        for i in range(self.n):\n            if not self.visited[i]:\n                if self.points[p][i] == 1:\n                    self.dfs(i)\n\n    def count(self):\n        for i in range(self.n):\n            if not self.visited[i]:\n                self.dfs(i)\n        return self.result\n\nclass Solution(object):\n    def largestComponentSize(self, A):\n        \"\"\"\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        '''\n        def max_polygon(points):\n            n = len(points)\n            polygons = []\n            points = points + points[:n]\n            while points:\n                polygons.append(Polygon(points))\n                points = [p for p in points if p]\n            return polygons\n        points = []\n        for i, p in enumerate(A):\n            if p:\n                points.append((i, p))\n        polygons = max_polygon(points)\n        return max([p.count() for p in polygons])\n        '''\n        points = A\n        n = len(points)\n        def max_polygon(points, polygon):\n            polygon.append(points)\n            if len(polygon) == n:\n                return sum([p for p in polygon])\n            return max([max_polygon(points + p, polygon) for p in points if p])\n        return max([max_polygon(points, []) for points in points])\n\n'''\nPoints are given as \"x,y\" coordinates, e.g. \"(1,2)\"\nx coordinate represents horizontal position, y coordinate represents vertical position.\n\nTo have a polygon with vertices at (1, 2), (2, 1), (3, 1), (4, 3) and (5, 4), you need at least four vertices.\n\nFind the largest possible area of a polygon with vertices at (x, y) coordinates, e.g. \"(1,2)\" and (2, 1).\n\nThe output should be $max \\left(\\|(x_1, y_1) - (x_2, y_2)\\right|, \\|(x_3, y_3) - (x_4, y_4)\\right)$, where \\(x_1, y_1\\) and \\(x_2, y_2\\) are the coordinates of the first vertex, \\(x_3, y_3\\) and \\(x_4, y_4\\) are the coordinates of the last vertex.\n\nExample:\n\nInput: \"(1,1)(2,1)(1,2)(2,2)\"\nOutput: 2\n'''\nclass Solution(object):\n    def largestComponentSize(self, A):\n        \"\"\"\n        :type A: str\n        :rtype: int\n        \"\"\"\n        points = []\n        for i, p in enumerate(A.split(\")(\")):\n            if p:\n                points.append((i, int(p.strip())))\n        points = set(points)\n        n = len(points)\n        def max_polygon(points, polygon):\n            polygon.append(points)\n            if len(polygon) == n:\n                return max([max_polygon(points + p, polygon) for p in points if p])\n            return max([max_polygon(points + p, polygon) for p in points if p])\n        return max([max_polygon(points, []) for points in points])\n\n'''\nGiven n points (x, y), let P be a set of n points.\n\nFind the maximum possible area of a polygon with vertices at (x, y) coordinates, e.g. \"(1,2)\" and (2, 1).\n\nThe output should be $max \\left(\\|(x_1, y_1) - (x_2, y_2)\\right|, \\|(x_3, y_3) - (x_4, y_4)\\right)$, where \\(x_1, y_1\\) and \\(x_2, y_2\\) are the coordinates of the first vertex, \\(x_3, y_3\\) and \\(x_4, y_4\\) are the coordinates of the last vertex.\n\nExample:\n\nInput: \"(1,1)(2,1)(1,2)(2,2)\"\nOutput: 4\n'''\nclass Solution(object):\n    def largestComponentSize(self, A):\n        \"\"\"\n        :type A: str\n        :rtype: int\n        \"\"\"\n        points = []\n        for i, p in enumerate(A.split(\")(\")):\n            if p:\n                points.append((i, int(p.strip())))\n        points = set(points)\n        n = len(points)\n        def max_polygon(points, polygon):\n            polygon.append(points)\n            if len(polygon) == n:\n                return max([max_polygon(points + p, polygon) for p in points if p])\n            return max([max_polygon(points + p, polygon) for p in points if p])\n        return max([max_polygon(points, []) for points in points])\n\n'''\nGiven n points (x, y), let P be a set of n points.\n\nFind the maximum possible area of a polygon with vertices at (x, y) coordinates, e.g. \"(1,2)\" and (2, 1).\n\nThe output should be $max \\left(\\|(x"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\n\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'\n\nassert solution('''\n7\n1 1\n2 0\n0 3\n4 1\n5 4\n1 2\n0 0\n0 5\n1 6\n''') == '41.73389562374'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0.0000000000'\nassert solution('2') == '0.0000000000'\nassert solution('3') == '0.0000000000'\nassert solution('4') == '0.0000000000'\nassert solution('5') == '1.0000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 3\\n3 2\\n4 5') == '0.0000000000'\nassert solution('10\\n-5 6\\n5 -6\\n3 7\\n2 8\\n1 7') == '6.75000001'\nassert solution('5\\n0 0\\n0 2\\n2 0\\n0 0') == '0.0000000000'\nassert solution('1\\n3 0\\n-1 2\\n0 3') == '0.0000000000'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'\n\n'''\n\n----------------------------------------------"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n2 0\n2 2\n0 2\"\"\") == \"0.0000000000\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '0.0000000000'\nassert solution('10\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '5.0000000000'\nassert solution('100\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '19.7815286473'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3') == '0.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0.25\"\nassert solution(\"2\") == \"2.166666666666\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n0 0.2\\n-0.2 0\\n0 0.20') == '8.0000000000'\nassert solution('5\\n1 2\\n2 1\\n3 3\\n-1 -3\\n-3 1\\n-2 -3\\n3 3') == '14.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n\"\"\") == \"8.0000000000\"\nassert solution(\"\"\"\n5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n\"\"\") == \"0.0200000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3 0\\n1 1\\n0 2\\n-2 0\\n0 -2') == '8.0000000000'\nassert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2') == '0.0200000000'\nprint('all tests passed')\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''5\n2 0\n1 1\n0 2\n-2 0\n0 -2\n'''\n) == '8.0000000000'\n\nassert solution(\n    '''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n'''\n) == '0.0200000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"8.0000000000\"\nprint(solution(open(0).read()))\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"8.0000000000\"\nassert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 0\\n1 1\\n0 2\") == \"8.0000000000\"\nassert solution(\"3\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\") == \"0.0200000000\""
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 2') == '3'\nassert solution('10 2 2') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"1 1 1 1 1 2 2 2 2 2\") == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"9 4 3\") == \"2\"\nassert solution(\"10 2 2\") == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3\") == \"2\"\nassert solution(\"10 2 2\") == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"9 4 3\\n1 1 9 9 1 6 6 39 9\") == \"2\"\nassert solution(\"10 2 2\\n1 1 1 1 1 2 2 2 2 2 2\") == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('10 2 2') == '2'\nassert solution('10 2 2') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1 1\") == \"2\"\nassert solution(\"5 5 2 2 2 2 2 2\") == \"4\"\nassert solution(\"1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2\") == \"1\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 3\\n') == '3.666666667'\nassert solution('4\\n11\\n10\\n') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 2\n1 2 3\n''') == '3.666666667'\nprint('Done!')\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 2\n1 2 3\n''') == '3.666666667'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 2') == \"3.6\"\nassert solution('4 11 4') == \"20.000000000\""
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\") == \"3.6\"\nassert solution(\"4 11 4\") == \"20.0\""
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 5') == '13.500000000000001'\nassert solution('4 1 2 3') == '9.500000000000001'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 2\") == \"3.666666667\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 1') == '1'\nassert solution('4 11 4') == '20.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 3 2\n1 2 3\"\"\") == \"3.666666667\"\nassert solution(\"\"\"4 11 4\n10 10 10 10\nSample Input 3:\n8 8 8\n1 2 3 4 5 6 7 8\nSample Output 3:\n24.000000000\"\"\") == \"24.000000000\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 42''') == '2'\nassert solution('''5 123456789''') == '16317634'"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 123456789\n''') == '16317634'\nassert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\nassert solution(\"7 10\") == \"3\"\nassert solution(\"1 10\") == \"0\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"5 123456789\") == \"16317634\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    2 42\n''') == '2'\nassert solution('''\n    5 123456789\n''') == '16317634'\nassert solution('''\n    2 1000000\n''') == '2'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'\n\"\"\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 0 0 2\n1 2 2\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6\n''') == '4'\nassert solution('''\n3 4\n0 1 1\n1 2 1\n1 3 1\n1 4 1\n2 4 1\n3 2 1\n4 3 1\n4 4 1\nSample Output 2:\n''') == '1'\nassert solution('''\n3 4\n0 1 1\n1 2 1\n1 3 1\n1 4 1\n2 4 1\n3 2 1\n4 3 1\n4 4 1\nSample Output 2:\n''') == '0'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '0'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1 0 0 2\n1 2 2\n1 1 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '4'\nassert solution('''3 1 1 1 8\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '0'"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1 0 0 2''') == '0'\nassert solution('''3 1 1 1 8''') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 0 0 2') == '0'\nassert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('1 2 2') == '1'\nassert solution('1 1 1') == '2'\nassert solution('1 2 2') == '3'\n\nfrom typing import *"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'\nassert solution('''10 1 10 10\n12 12\n4 5\n6 7\n6 8\n9 10\n15 16\n16 17\n21 22\n22 23\n''') == '3'\nassert solution('''10 1 10 10\n12 12\n4 5\n6 7\n6 8\n9 10\n15 16\n16 17\n21 22\n22 23\n''') == '0'\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10 10\\n8 8\\nt5 1\\n4 6\\n4 7\\n7 9\\n\") == \"3\"\nassert solution(\"5 1 100 100\\n27 75\\nt79 77\\n40 93\\n62 41\\n52 45\\n\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\""
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 1 10 10\\n\"\n    \"8 8\\n\"\n    \"5 1\\n\"\n    \"4 6\\n\"\n    \"4 7\\n\"\n    \"7 9\\n\"\n    ) == \"3\"\nassert solution(\n    \"5 1 100 100\\n\"\n    \"27 75\\n\"\n    \"79 77\\n\"\n    \"40 93\\n\"\n    \"62 41\\n\"\n    \"52 45\\n\"\n    ) == \"3\"\nprint('Tests passed')"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'\nassert solution('''\n5 1 100 100\n9 6\n3 7\n4 8\n4 9\n7 8\n''') == '2'\nassert solution('''\n5 1 100 100\n9 6\n3 7\n4 8\n4 9\n7 8\n''') == '1'\nassert solution('''\n5 1 100 100\n9 6\n3 7\n4 8\n4 9\n7 8\n''') == '0'\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 10 10\\n8 8\\n5 1\\n4 6\\n4 7\\n7 9\\n') == '3'\nassert solution('5 1 100 100\\n27 75\\n79 77\\n40 93\\n62 41\\n52 45\\n') == '3'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABC\\nABC\\nABC\\n\") == 2\nassert solution(\"ABBBAAAA\\nBBBCCCBB\\nCCCCAAAC\\n\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\nassert solution('BBBCCCBB') == 1\nassert solution('CCCCAAAC') == 3"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''ABC\nABC\nABC''') == '2'\nassert solution('''ABC\nABBBAAAA\nBBBCCCBB\nCCCCAAAC\nSample Output 2:\n3\n''') == '3'\nassert solution('''ABC\nBBBCCCBB\nCCCCAAAC\nSample Output 2:\n3\n''') == '3'\nassert solution('''ABC\nBBBCCCBB\nCCCCAAAC\nSample Output 2:\n0\n''') == '0'\nassert solution('''ABC\nBBBCCCBB\nCCCCAAAC\nSample Output 2:\n-1\n''') == '-1'\nprint('All Tests Passed')\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nA\nA\nA\n''') == '2'\nassert solution('''\nA\nB\nC\n''') == '-1'\nassert solution('''\nABC\nABC\nABC\n''') == '2'\nassert solution('''\nABC\nABC\nABC\n''') == '3'\nassert solution('''\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC\nABC"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\"\nassert solution(\"BBBCCCBB\") == \"3\"\nprint(\"You passed the test!\")\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 2\nassert solution('BBBCCCBB') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\"\nassert solution(\"BBBCCCBB\") == \"3\"\nassert solution(\"CCCCAAAC\") == \"3\"\nassert solution
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABC\") == \"3\"\nassert solution(\"ABBBAAAA\") == \"2\"\nassert solution(\"BBBCCCBB\") == \"3\"\nassert solution(\"CCCCAAAC\") == \"1\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABC') == '2'\nassert solution('ABBBAAAA') == '3'\nassert solution('BBBCCCBB') == '1'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 2"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nA\nB\nA\n''') == '3'\n\nassert solution('''\n5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\n\nassert solution('''\n5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == '3'\n\nassert solution('''\n10\nA\nB\nC\nD\nE\nA\nB\nC\nD\nE\nA\nB\nC\nD\nE\n''') == '5'\n\nassert solution('''\n15\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n''') == '6'"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '7'"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nA\nB\nAA''') == '3'\nassert solution('''5\nA\nB\nAA\nBBB\nAAA''') == '3'\nassert solution('''5\nA\nABA\nBBB\nABABA\nAAAAAB''') == '3'"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nA\nB\nAA\nBBB\nAAA''') == '3'\nassert solution('''5\nA\nABA\nBBB\nABABA\nAAAAAB''') == '3'\n'''\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nA\\nB\\nAA\\nBBB\\nAAA\\n\") == \"3\"\nassert solution(\"5\\nA\\nAABA\\nBBB\\nABABA\\nAAAAAB\\n\") == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''A\nB\nAA\nBBB\nAAA\n''') == '3'\n\nassert solution('''5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\n\nassert solution('''10\nA\nB\nAA\nBBB\nAAA\n''') == '7'\n\nassert solution('''5\nA\nB\nABA\nBBB\nAAA\n''') == '4'\n\nassert solution('''5\nA\nABA\nBBB\nAAA\n''') == '4'"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\nA\nB\nAA\nBBB\nAAA\n''') == \"3\"\nassert solution('''\n5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == \"3\"\n\nprint(solution('''\n3\nAABAA\n'''))"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nA\\nBBB\\nABABA\\nAAAAAB\") == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nA\nB\nAA\nBBB\nAAA\n''') == '3'\n\nassert solution('''\n5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\n\nassert solution('''\n5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == '3'\n\nassert solution('''\n1\nA\n''') == '1'\n\nassert solution('''\n1\nB\n''') == '1'"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '0.1212121212'\nassert solution('1 2 3 4') == '0.1'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 7 2 1') == '0.2', \"Should be 0.2\"\nassert solution('30 30 3 3') == '0.30000000000000004', \"Should be 0.30000000000000004\"\nassert solution
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"100 10 2 1\") == \"0.1\"\nassert solution
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join((\n    '100 10 2 1',\n    '100 10 2 2',\n))) == '0.1909090909'\n\n\"\"\"\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\nassert solution('10 20 40 50') == '0.25'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 2 3') == '0.08333333333333333'\nassert solution('1 1 2 2') == '0.2'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\""
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nprint(solution(input()))\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('') == ''\nassert solution('ABABABcABABAbAbab') == '5'\nassert solution('AAABBBBB') == '3'\nassert solution('AAABBBBCCCCCCCC') == '4'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '1'\nassert solution('AAAABBBBCCCCCCCDDEEEEFFFFGGGGGHHHHHHHHJJJJJKKKKKLLLLLLLLMMMMMNNNNOOOOPPPPSQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('ABABABcABABAbAbab') == '0'\nassert solution('ABABABcABBBcABABAB') == '5'\nassert solution('ABABABcABBBcABABAB') == '0'\nassert solution('ABABABcABBBcABABABcABBBcABABAB') == '8'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(ABABABcABABAbAbab) == 4\nassert solution(ABABABcABABAbAbab) == 5\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('ABABAbAbab') == '0'\nassert solution('ABABABAbAB') == '5'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"CBABABbABABAbAbab\") == \"5\"\nassert solution(\"ABABAbBABABABABABABAB\") == \"5\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2\n0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n4\n3\n2\n1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('6 10') == '4'\nassert solution('10') == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '2'\nassert solution('2 3') == '1'"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n0\\n0\\n1\\n') == '2'\nassert solution('2 3\\n0\\n0\\n0\\n') == '1'\nassert solution('2 3\\n1\\n0\\n0\\n') == '0'\nassert solution('3 3\\n1\\n0\\n0\\n') == '1'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4') == '2'\nassert solution('7 6') == '3'\nassert solution('1 3') == '1'\nassert solution('5 9') == '3'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"6 6\") == \"5\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0\n0\n1\n''') == '2'\n\nassert solution('''\n0\n0\n1\n''') == '2'\n\nassert solution('''\n2\n0\n1\n''') == '3'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n1 2\\n1 2\\n0 1\\n\") == \"2\"\nassert solution(\"2 3\\n0 1\\n1 2\\n1 2\\n\") == \"1\"\nassert solution(\"2 1\\n2 1\\n0 1\\n\") == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0\\n0\\n1\") == \"2\"\nassert solution(\"2\\n0\\n1\\n0\\n1\") == \"2\"\nassert solution(\"2\\n1\\n0\\n1\") == \"1\"\nassert solution(\"2\\n1\\n1\\n0\\n1\") == \"1\"\nassert solution(\"2\\n1\\n0\\n1\") == \"1\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n0\n0\n1\nSample Output:\n2\n''') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('10 1 2 1 8 -6 1') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2 8 8 8\\n\"\n    \"12 4 1 4 5 3 -2\\n\"\n    \"10 1 2 1 8 -6 1\\n\"\n) == \"1\\nP0: 22 1 4 2 6 -1 0\\n\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 8 8 8\\n12 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n') == '1\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('10 1 2 1 8 -6 1\\n2 4 1 4 5 3 -2\\n10 1 2 1 8 -6 1\\n') == '0\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n') == '2\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('10 1 2 1 8 -6 1\\n10 1 2 1 8 -6 1\\n') == '0\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('3 2 2 2 2 2 2\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n') == '3\\nP0: 4 1 3 2 2 2\\nP1: 1 2 1 2 1\\nP2: 1 2 1 2 1\\nP3: 1 2 1 2 1\\nP4: 1 2 1 2 1\\nP5: 1 2 1 2 1\\n'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('1\\n2 3 4 5 6\\n10 1 2 1 8 -6 1\\n') == '2\\nP0: 22 1 4 2 6 -1 0\\n'\nassert solution('3\\n1 1 1 1 8\\n4 1 4 4 5 6\\n10 1 2 1 8 -6 1\\n') == '1\\nP0: 22 1 4 2 6 -1 0\\n'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('10 1 2 1 8 -6 1') == '2'"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('10 1 2 1 8 -6 1') == '0'\nassert solution('1 5 7 5 8 2 3 4') == '2'"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('10 1 2 1 8 -6 1') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('12 4 1 4 5 3 -2') == 'P0: 22 1 4 2 6 -1 0'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 8 8 8\\n12 4 1 4 5 3 -2\") == \"1\"\n\"\"\""
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3 3 3\n1 1 1 1 1 1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 4 4 4\n1 1 1 1 1 1 1 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 7') == '1\\n2\\n3\\n'\nassert solution('3 1') == '1\\n'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1'\nassert solution('2 3') == '2'\nassert solution('2 3') == '3'\nassert solution('2 5') == '1'\nassert solution('2 5') == '2'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 7') == '1\\n2\\n3\\n1\\n'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '2'\nassert solution('3 3\\n1 2 1\\n1 2 3\\n1 3 2') == '2'\nassert solution('4 4\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '4'\nassert solution('5 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '4'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2'\nassert solution('''\n4 5\n1 3 1\n1 4 2\n1 5 2\n1 2 4\n3 5 4\n3 4 5\n''') == '3'"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2'\n\nassert solution('''\n3 1\n1 2\n1 3\n3\n2 3\n''') == '0'\n\nassert solution('''\n5 4\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '4'\n\nassert solution('''\n4 1\n1 2\n1 3\n3 4\n''') == '1'\n\nassert solution('''\n2 2\n1 2\n1 3\n3 4\n''') == '1'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '2'\nassert solution('3\\n1 2\\n1 3\\n3 4') == '1'\nassert solution('8\\n7 9\\n3 1\\n5 4\\n2 6\\n6 7\\n4 8\\n8 9\\n7 3') == '3'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 6\n2 1 1\n3 2 3\n4 4 4\n2 3 2\n5 4 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3\n2 1 2\n1 3 1\n1 4 2\n\"\"\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n4\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '1'"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2'\nassert solution('''\n3 3\n1 3\n2 3\n3 2\n''') == '0'\nassert solution('''\n2 5\n1 2\n1 3\n2 4\n''') == '1'\nassert solution('''\n5 5\n1 2\n1 3\n1 4\n1 5\n2 4\n''') == '3'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2 5 4 3 6\\n1 2 5 4 3 6') == '2'\nassert solution('4\\n1 2 3 4\\n1 2 3 4') == '1'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6') == '2'\nassert solution('3\\n1 2 3\\n1 2 3') == '0'\nassert solution('5\\n1 5 5 5 5\\n1 2 2 2 2') == '0'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"6\n1 5 4 3 2 6\n1 2 5 4 3 6\"\"\") == \"2\"\n\nassert solution(\"\"\"6\n1 2 5 4 3 6\n1 2 5 4 3 6\"\"\") == \"3\"\n\nassert solution(\"\"\"8\n1 2 5 4 3 6 8\n1 2 5 4 3 6 8\"\"\") == \"6\"\n\nassert solution(\"\"\"100\n1 2 5 4 3 6 8 89\n1 2 5 4 3 6 8 89\"\"\") == \"1\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6') == '2'\nassert solution('3 4 1 5 2 6') == '6 5 4 3 2 1'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1 2 5 4 3 6\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 5 4 3 2 6\"\n) == \"1 2 5 4 3 6\"\nassert solution(\n    \"1 5 4 3 2 6\"\n) == \"1 2 5 4 3 6\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"6\n1 5 4 3 2 6\n1 2 5 4 3 6\"\"\") == \"2\"\n\nassert solution(\"\"\"6\n1 5 4 3 2 6\n1 2 5 4 3 6\"\"\") == \"1\"\n\nassert solution(\"\"\"6\n1 5 4 3 2 6\n1 2 5 4 3 6\"\"\") == \"1\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1 3\n1 30 2 50\n2 70 3 10\n3 20 1 80''') == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == '-1'\nassert solution('3 3 2') == '60'\nassert solution('3 3 2 3') == '60'\nassert solution('100 3 3 2 3') == '-1'\nassert solution('10 3 3 2 3') == '-1'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 2') == '60'\nassert solution('1 5 2') == '-1'\nassert solution('4 2 1') == '40'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"60\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2') == '60'\nassert solution('5 5 4') == '-1'\nassert solution('1 1 1') == '1'\nassert solution('2 5 3') == '-1'\nassert solution('3 5 4') == '30'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 2') == '-1'\nassert solution('3 3 2') == '30'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2') == '60'\nassert solution('1 2 3 4 5') == '-1'\nprint('Tests passed')\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 3, 2]) == '60'\nassert solution([1, 1, 1]) == '-1'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 1 2\n1 3 4 5\n1 2 3 4\n1 3 5 3\n1 4 2 4\n4 1 4 4\n''') == '-1'\n\nassert solution('''\n3 4 1\n1 2 1 1\n1 2 3 1\n1 2 3 4\n''') == '4'\n\nassert solution('''\n3 2 4\n1 2 3 1\n1 2 3 4\n''') == '2'\n\nassert solution('''\n4 3 1\n1 2 1 1\n1 2 3 1\n1 3 2 1\n1 3 3 4\n''') == '2'\n\nassert solution('''\n5 1 2\n1 3 4 5\n2 3 5 2\n1 4 1 4\n4 1 4 4\n''') == '4'"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 1\n1 100 1 100\n2 70 3 50\n3 20 1 80\n3 50 1 100\n''') == '60'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Case #1: 1\\n'\nassert solution('2') == 'Case #2: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n''') == 'Case #1: 1\\nCase #2: 2\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"Case #1: 0\\nCase #2: 1\""
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    1\n    10000 0 0\n    0 10000 0\n    0 0 10000\n    ''') == \"Case #1: 1\\nCase #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 0\\n'\nassert solution('''\n1\n5\n0 0 0\n0 100 1\n0 0 100\n1 1 1\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 0\\nCase #4: 0\\nCase #5: 0\\n'\nassert solution('''\n2\n3\n0 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 0\\nCase #4: 0\\nCase #5: 0\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n\"\"\") == \"Case #1: 1\"\nassert solution(\"\"\"\n3\n10000 0 0\n0 10000 0\n0 0 10000\n\"\"\") == \"Case #1: 1\"\nassert solution(\"\"\"\n2\n3\n10 0 0\n0 10 0\n0 0 10\n\"\"\") == \"Case #2: 2\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n3\\n0 0\\n0 10000\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000\") == \"Case #1: 1\\nCase #2: 2\""
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3') == 'Case #1: 1\\nCase #2: 2\\n'\nassert solution('1') == 'Case #1: 1\\n'\nassert solution('2') == 'Case #2: 2\\n'\nassert solution('3') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3\\n'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n\"\"\") == \"Case #1: 1\\nCase #2: 2\\n\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1'\nassert solution('+1 2 C 1 O 2') == '6 6 6 1'\nassert solution('-1 1 O 2') == '6 6 6 1'\nassert solution('-1 3 C 6 H 12 O 6') == '6 6 6 1'\nassert solution('0 0') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1'\nassert solution('+1 2 C 1 O 2') == '6 6 6 1'\nassert solution('-1 1 O 2') == '4 4 4 1'\nassert solution('-1 3 C 6 H 12 O 6') == '10 10 10 1'\nassert solution('0 0') == '0 0'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"-1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1'\nassert solution('+1 2 C 1 O 2') == '6 6 6 1'\nassert solution('-1 1 O 2') == '1 1 1 1'\nassert solution('-1 3 C 6 H 12 O 6') == '6 6 6 1'\nassert solution('0 0') == '0 0'"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n    ''') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\n\"\"\"\n+1 3 H 4 O 5\n+1 4 C 2 H 3 O 5\n+1 5 C 1 H 4 O 5\n+1 6 C 2 O 1 H 4\n+1 7 H 4 O 5\n+1 8 C 1 O 2 H 3\n-1 2 O 2 H 3\n-1 3 O 3 H 1\n-1 4 H 4 O 2\n-1 5 H 3 O 1\n-1 6 H 1 O 5\n-1 7 O 7 H 1\n-1 8 O 1 H 4\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\n\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\n\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n\"\"\") == \"6 6 6 1\"\n\nassert solution(\n\"\"\"\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n+1 4 C 2 H 3 O 5\n+1 5 C 1 H 4 O 5\n+1 6 C 2 O 1 H 4\n+1 7 H 4 O 5\n+1 8 C 1 O 2 H 3\n-1 2 O 2 H 3\n-1 3 O 3 H 1\n-1 4 H 4 O 2\n-1 5 H 3 O 1\n-1 6 H 1 O 5\n-1 7 O 7 H 1\n-1 8 O 1 H 4\n0 0\n\"\"\") == \"6 6 6 1\""
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 H_2O + 6CO_2 \\rightarrow 6O_2 + 1C_6H_{12}O_6\n-1 1 O_2\n-1 3 C_6 O_6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 H_2O + 6CO_2 \\rightarrow 6O_2 + 1C_6H_{12}O_6\n-1 3 C_6 O_6\n-1 3 C_6 O_6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 H_2O + 6CO_2 \\rightarrow 6O_2 + 1C_6H_{12}O_6\n-1 1 O_2\n+1 3 C_6 O_6\n0 0''') == '6 6 6 1'\nassert solution('''+1 6 H_2O + 6CO_2 \\rightarrow 6O_2 + 1C_6H_{12}O_6\n-1 3 C_6 O_6\n+1 3 C_6 O_6\n0 0''') == '6 6 6 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+1 2 H 2 O 1\") == \"6\"\nassert solution(\"+1 2 C 1 O 2\") == \"6\"\nassert solution(\"-1 1 O 2\") == \"1\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"1\"\nassert solution(\"0 0\") == \"0\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\nassert solution('''1\n1\n2\n3\n''') == '3.0'\nassert solution('''1\n1\n1\n1\n''') == '1.0'\nassert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\nassert solution('''\n5\n0 0\n1 0\n1 1\n0 1\n0 2\n''') == '5.0'\nassert solution('''\n7\n-1 2\n0 -2\n0 0\n-1 0\n-2 0\n0 -2\n-1 2\n''') == '3.0'\nassert solution('''\n5\n10 100\n0 0\n0 -1\n1 0\n-1 0\n0 -1\n''') == '10.0'\nassert solution('''\n5\n10 100\n0 0\n0 -1\n1 0\n-1 0\n0 -1\n''') == '10.0'\n'''\nsolution('''\n4\n0 0\n1 0\n1 1\n0 1\n''')\n'''\n    x = int(input())\n    y = list(map(int, input().split()))\n    h = max(y)\n    for i in range(x):\n        if h > y[i]:\n            h = y[i]\n\n    print(h)\n'''\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == \"20.83\"\nassert solution('''3\n1 1\n3 3\n3 5\n''') == \"3.33\"\nassert solution('''5\n20 20\n40 20\n30 30\n30 40\n20 40\n''') == \"17.18\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n30 50\\n20 0\\n100 0\\n100 40\\n20 40\") == \"20.83\"\nassert solution(\"5\\n10 10\\n20 20\\n30 30\\n10 10\\n\") == \"8.00\"\nassert solution(\"5\\n10 10\\n20 20\\n30 30\\n10 10\\n\") == \"8.00\"\nassert solution(\"5\\n10 10\\n20 20\\n30 30\\n10 10\\n\") == \"8.00\"\nassert solution(\"5\\n10 10\\n20 20\\n30 30\\n10 10\\n\") == \"8.00\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n0 0\n1 0\n2 0''') == '2.0'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83', 'first'\n\nassert solution('''\n4\n20 0\n30 0\n30 50\n20 50\n''') == '20.83','second'\n\nassert solution('''\n4\n10 10\n30 30\n20 0\n30 0\n20 40\n''') == '19.99', 'third'\n\n''')"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '20.83'\nassert solution('5') == '19.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"5.0\"\nassert solution('4') == \"7.0\"\nassert solution('5') == \"8.5\""
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'\nassert solution('3 3\\n1 2 3\\n5 6 4\\n7 8 9\\n') == '0'\nassert solution('1 1\\n2 2\\n2 2\\n') == '1'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '1'\nassert solution('10 2') == '6'"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'\nassert solution('4 5\\n2 6 3 5\\n1 2 3 6\\n7 4 8 9') == '86'\nassert solution('6 6\\n2 5 3 5\\n1 2 3 6\\n7 8 9 10') == '83'\nassert solution('10 11\\n8 9 10 11\\n1 2 3 4 5\\n6 7 8 9 10\\n1 2 3 4 5\\n6 7 8 9 10') == '21'\nassert solution('3 3\\n1 2 5\\n7 6 4\\n9 8 3') == '49'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 2 5\n7 6 4\n9 8 3''') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\"\nprint(\"You're a smart cookie!\")\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '49'\nassert solution('1 2 3') == '49'\nassert solution('5 1 7') == '49'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '49'\nassert solution('3 3') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n2\n5\n1\n3\n\"\"\") == \"49\"\nassert solution(\"\"\"\n3\n5\n5\n4\n3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '49'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49', 'failed test 1'\nassert solution('''\n3 3\n1 3 5\n7 6 4\n9 8 3\n''') == '49', 'failed test 2'\nassert solution('''\n5 5\n1 2 3 4 5\n6 7 8 9 10\n11 12 13 14 15\n16 17 18 19 20\n21 22 23 24 25\n''') == '167', 'failed test 3'\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 15\\n\"\n    \"##.........####\\n\"\n    \"1\\n\"\n    \"CROSSWORD\\n\"\n    ) == \"##CROSSWORD####\"\n\nassert solution(\n    \"1 15\\n\"\n    \"##.........####\\n\"\n    \"1\\n\"\n    \"CROSSWORD\\n\"\n    ) == \"##CROSSWORD####\"\n\nassert solution(\n    \"1 10\\n\"\n    \"#..##.......#\\n\"\n    \"##.##.#.#####\\n\"\n    \"#####.#.###.#\\n\"\n    \"##.####.###.#\\n\"\n    \"##..#..#.##.#\\n\"\n    \"#.#...#.#.#..\\n\"\n    \"###..##.###.#\\n\"\n    \"##.#.#..#.###\\n\"\n    \"#.###.###.#.#\\n\"\n    \"###.##.#.####\\n\"\n    \"##...##..##..\\n\"\n    \"#..#..#...#.#\\n\"\n    \"#.#...#..#..#\\n\"\n    \"#.###.#######\\n\"\n    \"###.#.#.###.#\\n\"\n    \"##.#.#..#.###\\n\"\n    \"##...#.##....\\n\"\n    \"##.##.##.##..\\n\"\n    \"#.####.#.###.\\n\"\n    \"#.#.###.###.#\\n\"\n    \"#.##.#.#####.\\n\"\n    \"#..#####...##\"\n    ) == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 15\") == \"##CROSSWORD####\"\nassert solution(\"2 5\") == \"##CROSSWORD####\"\nassert solution(\"3 5\") == \"##CROSSWORD####\"\nassert solution(\"4 5\") == \"##CROSSWORD####\"\nassert solution(\"5 5\") == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 10\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('1 1') == '1 1'\nassert solution('1 1') == '1 1'\nassert solution('1 1') == '1 1'\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5\\n2 3 4\\n5 6 7 8\\n9 10 11 12 13 14 15\\n16 17 18 19 20 21\\n') == '2 4 5 8\\n1 7 6 9\\n1 12 13 14 15\\n16 17 20 21 19\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n'\n\nassert solution('1 6\\n1 4 5\\n2 3 4\\n5 6 7 8\\n9 10 11 12 13 14 15\\n16 17 18 19 20 21\\n') == '2 4 5 8\\n1 7 6 9\\n1 12 13 14 15\\n16 17 18 19 20 21\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n'\n\nassert solution('1 8\\n1 3 4\\n2 3 4\\n5 6 7 8\\n9 10 11 12 13 14 15\\n16 17 18 19 20 21\\n') == '1 3 4\\n1 7 6 9\\n1 12 13 14 15\\n16 17 18 19 20 21\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n'\n\nassert solution('1 7\\n2 3 4\\n5 6 7 8\\n9 10 11 12 13 14 15\\n16 17 18 19 20 21\\n') == '2 3 4\\n1 7 6 9\\n1 12 13 14 15\\n16 17 18 19 20 21\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n'\n\nassert solution('1 6\\n2 3 4\\n5 6 7 8\\n9 10 11 12 13 14 15\\n16 17 18 19 20 21\\n') == '2 3 4\\n1 7 6 9\\n1 12 13 14 15\\n16 17 18 19 20 21\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n16 17 18 19 20\\n'"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n.\nCROSSWORD''') == '''CROSSWORD'''\n\nassert solution('''2 2\n.#.\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 10\n##.......\n3''') == '''#####\n##..##\n##...##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##..##\n##.."
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\\\n1 15\n##.......\n2\nGROUPE\n3\nSTUDENT\n\"\"\") == \"\"\"\\\n##GROUPE####\n2\nSTUDENT\n\"\"\".strip()\nassert solution(\"\"\"\\\n1 5\n1\nSCHOOL\n2\nGROUPE\n3\nSTUDENT\n4\nMISC\n\"\"\") == \"\"\"\\\n1 SCHOOL####\n2 GROUPE####\n3 STUDENT####\n4 MISC####\n\"\"\".strip()\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 15\\nCROSSWORD\") == \"##CROSSWORD####\"\nassert solution(\"2 1\\nAAABBBCCCDDD\") == \"A.A.B.B.C.C.C.D.\"\nassert solution(\"2 1\\nAAABBBCCCD\") == \"A.A.B.B.C.C.D.D.\"\nassert solution(\"3 6\\nABCBCD\") == \"A.B.C.D.A.B.C.D.\"\nassert solution(\"3 5\\nAABCCCDD\") == \"A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.A.\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 15\") == \"##CROSSWORD##\""
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1\n2 7 6\n9 5 1\n4 3 8\n\"\"\") == \"31\"\n\nassert solution(\"\"\"\n10 5\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0\") == \"\"\nassert solution(\"0 1\") == \"2\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join([\n    '4 3 8',\n    '1 5 1',\n    '9 6 7',\n    '7 8 9',\n])) == '31'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'\nprint(solution(*['3 1\\n2 7 6\\n9 5 1\\n4 3 8']) == '31')"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1\n2 7 6\n9 5 1\n4 3 8''') == '31'"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n2 7 6\n9 5 1\n4 3 8\n''') == \"31\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '31'\nassert solution('2') == '11'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    3 1\n    2 7 6\n    9 5 1\n    4 3 8\n    ''') == '31'\n'''\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1\n2 7 6\n9 5 1\n4 3 8\n\"\"\") == \"31\"\n\"\"\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\nBBW\n''') == '2'\n\nassert solution('''6 1\nWWWWWWWW\n''') == '3'\n\nassert solution('''10 1\nWWWWWWWWWWWWWWWW\n''') == '5'\n\nassert solution('''10 1\nWWWWWWWWWWWWWWWW\nWWW\n''') == '4'\n\nassert solution('''3 1\nBBWW\n''') == '1'"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\nBBW\n''') == '2'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"BWBWBWBWBWBWB\") == \"1\"\nassert solution(\"BBWBBBBBBBWB\") == \"1\"\nassert solution(\"WWWWWWWWWWWWWWWWWWWWWWWW\") == \"12\"\nassert solution(\"WWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWWW\") == \"237801\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\nBWW\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2\nBWW\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\nWBB\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\nWBB\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10\nWWWWWWWWWWWWWWWWWWWBBW\n\"\"\") == \"10\""
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"8 3\") == \"1\"\nassert solution(\"10 10\") == \"101\"\nassert solution(\"10 10\") == \"1\"\nprint(solution(input()))\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    BBW\n    \"\"\") == \"2\"\nassert solution(\"\"\"\n    WWW\n    \"\"\") == \"1\"\nassert solution(\"\"\"\n    WWW\n    \"\"\") == \"2\"\nassert solution(\"\"\"\n    WWW\n    \"\"\") == \"2\"\nassert solution(\"\"\"\n    WWWW\n    \"\"\") == \"3\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1\nBBW\n''') == '2'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3,1,'BBW']) == '2'\nassert solution([3,2,'BWW']) == '1'\nassert solution([3,4,'BWWB']) == '4'\nassert solution([3,5,'WWWBBB']) == '3'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"2\"\nassert solution(t) == \"1\"\nassert solution(a) == \"0\""
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n3 1\nBBW\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n1 1\nBB\n\"\"\") == \"1\"\nassert solution(r\"\"\"\n1 1\nB\n\"\"\") == \"0\"\nassert solution(r\"\"\"\n10 10\nBWWBBW\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1\n3 2 1\n1 2 3\n\"\"\") == \"0.556\"\n\nassert solution(\"\"\"\n3 3\n1 2 3\n1 2 3\n\"\"\") == \"1.333\"\n\nassert solution(\"\"\"\n3 6\n1 2 3 5 6\n2 4 5 6\n3 4 5 6\n\"\"\") == \"1.5\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '0.556'\nassert solution('1 2') == '1.5'\nassert solution('1 4') == '1.25'"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 1\\n\"\n    \"3 2 1\\n\"\n    \"1 2 3\"\n    ) == \"0.556\"\n\nassert solution(\n    \"3 1\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\"\n    ) == \"0.333\"\n\nassert solution(\n    \"5 1\\n\"\n    \"5 3 2\\n\"\n    \"3 4 1\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    ) == \"0.165\"\n\nassert solution(\n    \"10 10\\n\"\n    \"10 10\\n\"\n    \"9 9 9\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\"\n    ) == \"0.333\"\n\nassert solution(\n    \"10 1\\n\"\n    \"10 1\\n\"\n    \"9 9 9\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\"\n    ) == \"1.000\""
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1\\n1 2 3\\n3 2 1') == \"0.556\"\nassert solution('1 1\\n1 2 3\\n3 2 1') == \"1.5\"\nassert solution('100 100\\n1 2 3\\n3 2 1') == \"0.50\"\nassert solution('1 1\\n1 2 3\\n3 2 1') == \"1.5\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '0.8333333333333333'\nassert solution('3 5') == '0.5'\nassert solution('6 6') == '1.3333333333333333'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n') == '0.556'\nassert solution('3\\n4\\n1\\n2\\n5\\n') == '1.50\\n'"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0.556\"\nassert solution(\"1 1\") == \"0.5\"\nassert solution(\"1 1 2 1\") == \"0.5\"\nassert solution(\"2 2\") == \"0.5\"\nassert solution(\"3 1\") == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0.556'\nassert solution([10, 3, 1]) == '3.6'\n\"\"\""
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\n3 2 1\n1 2 3''') == '0.556'''\nassert solution('''3\n1 2 3\n2 2''') == '1.000000'''\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '0.333'\nassert solution('2 1') == '0.333'\nassert solution('5 3') == '0.556'\nassert solution('3 2') == '0.333'\nassert solution('3 2') == '0.333'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5 2') == '3'\nassert solution('5 6 7 1') == '7'\nassert solution('1 4 5 2') == '5'\nassert solution('5 10 7 3') == '5'\nassert solution('1 0 10 5 2') == '10'"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('10 10 10 10') == '10'\nassert solution('10 10 10 10 10') == '10'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4 3 2\n''') == \"3\"\nassert solution('''\n5 7 9 1\n''') == \"11\"\nassert solution('''\n5 7 3 2\n''') == \"5\"\n'''\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nprint(solution())"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 3 3 4\n''') == '6'\nassert solution('''\n5 4 3 2\n''') == '9'"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 4 3 2\"\n) == \"3\"\nassert solution(\n    \"3 2 1 3\"\n) == \"3\"\nassert solution(\n    \"2 1 1 2\"\n) == \"4\"\nassert solution(\n    \"2 1 2 1\"\n) == \"2\"\nassert solution(\n    \"3 2 3 3\"\n) == \"5\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('6 4 3 2') == '2'\nassert solution('4 5 1 2') == '3'\nassert solution('4 5 2 3') == '0'\nassert solution('1000 1000 1000 1000') == '0'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('5 6 3 2') == '3'\nassert solution('10 10 2 2') == '2'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4 3 2\") == \"3\"\nassert solution(\"7 10 5 1\") == \"4\"\nassert solution(\"10 3 8 2\") == \"1\"\nassert solution(\"10 10 3 8 2\") == \"2\"\nassert solution(\"1000000000 3 10000 3 2\") == \"2\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 6') == '13'\nassert solution('2 5 8') == '13'\nassert solution('3 3 5') == '11'\nassert solution('5 3 6') == '13'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\n\n'''\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 6') == '3'\nassert solution('2 5 8') == '8'\nassert solution('3 3 5') == '3'\nassert solution('5 3 6') == '6'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 5') == '6'\nassert solution('1 3 6') == '3'\nassert solution('2 5 8') == '13'\nprint('All tests passed!')\n\"\"\"\n\nn = int(input())\ntasks = [input().split() for i in range(n)]"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'\nassert solution('''\n3 1 1\n2 3 3\n2 5 8\n''') == '15'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"13\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 3 6\n2 5 8\n3 3 5\n5 3 6\"\"\") == \"13\"\n\nassert solution(\"\"\"\n3\n3\n3\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n5\n3\n1\n2\n3\n5\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n\"\"\") == \"13\"\nassert solution(\"\"\"\n5\n1 3 6\n2 5 8\n3 3 5\n4 4 6\n5 3 6\n\"\"\") == \"12\"\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 3 6\\n2 5 8\\n3 3 5\\n5 3 6') == '13'\nprint('Hurray, done!')\n'''\n'''\n=====\nWrite a function that takes as input three parameters: an integer $n$ and two lists, $a$ and $b$, each of size $n$. The first parameter $a$ contains integers $1, 2,..., n$ in non-decreasing order and the second parameter $b$ contains integers $1, 2,..., n$ in non-decreasing order. The function should return the subset of $a$ whose elements are in the subset of $b$ (that is, the elements that have the same index in $a$ and $b$).\n\nHere is some examples to clarify:\n\nConsider the following lists:\n\n$a = \\{1, 4, 9, 13, 17, 18, 21, 26, 28, 32, 36, 38, 39, 40, 46, 47, 49, 52, 56, 57, 59, 61, 63, 64, 66, 67, 69, 70, 72, 75, 79, 80, 81, 84, 86, 87, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 105, 107, 109, 111, 113, 115, 117, 118, 120, 122, 124, 125, 127, 129, 131, 133, 135, 136, 137, 138, 139, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 157, 158, 160, 163, 164, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 192, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 275, 277, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3 3 6\n1 2 3\n''') == '13'\nprint('First Test Passed')\n\nassert solution('''\n3\n5 3 6\n1 2 3\n3 2 1\n''') == '23'\nprint('Second Test Passed')\n\nassert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '23'\nprint('Third Test Passed')\n\nassert solution('''\n5\n1 2 3\n5 3 6\n3 4 7\n1 2 7\n4 6 8\n''') == '45'\nprint('Fourth Test Passed')\n\nassert solution('''\n7\n4 5 2 5 6 6\n5 3 6 1 4 3\n6 1 7 6 2 4\n5 1 4 5 1 2\n2 2 2 2 2 2\n2 2 2 2 2 2\n2 2 2 2 2 2\n''') == '25'\nprint('Fifth Test Passed')"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n10.000000 20.123456\\n1') == '3.141593'\nassert solution('2\\n1.0000001 2.000002\\n1') == '0.00000001'\n\n'''\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.0') == '0.0'\nassert solution('10.000000 20.123456') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '1.0'\n\"\"\"\n\n\nimport math\nfrom fractions import Fraction"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"20.123456 10.000000\\n1\\n13.141593 20.123456\") == \"3.141593\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123467\") == \"3.141593\""
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"3.141592653589793\"\nassert solution(\"10.000000 20.123456\\n1\\n13.141593 20.123456\\n\") == \"3.141592653589793\"\nassert solution(\"1\\n3\\n10\\n\") == \"13.141593\"\nassert solution(\"1\\n10\\n3\\n\") == \"13.141593\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10.000000 20.123456\n1\n13.141593 20.123456\n''') == '3.141593'\nassert solution('''\n10.000000 20.123456\n1\n0.000007 0.000007\n''') == '0.000007'\n'''"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10.000000 20.123456') == '3.141593'\nassert solution('10.000000 100.123456') == '101.112233'\nassert solution('10.000000 20.12345') == '3.141593'\nassert solution('10.000000 100.12346') == '101.112233'\nassert solution('10.000000 20.12345') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10.000000 20.123456\n1\n13.141593 20.123456\n''') == '3.141593'\n\nassert solution('''5.000000 10.0\n1\n-2.2\n2\n-5.5\n3\n-3.0\n''') == '3.3'\n\nassert solution('''20.000000 20.0\n1\n0.1\n0.1\n0.2\n0.2\n0.2\n0.3\n0.3\n0.4\n0.4\n0.4\n0.4\n0.5\n0.5\n0.5\n0.6\n0.6\n0.7\n0.7\n0.7\n0.7\n0.7\n0.7\n0.7\n0.7\n0.8\n0.8\n0.8\n0.8\n0.8\n0.8\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0.9\n0."
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''Weeeee,\nhe cries out for help\nhe gives the roost away\nHe places the roost back on the ground\nHe grabs the roost and runs towards the foxes\nThe fox runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs towards the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places the roost back on the ground\nHe grabs the roost and runs towards the front of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a beating and runs toward the back of the chicken\nThe chicken runs toward him and then falls to the ground\nHe places his roost back on the ground\nHe gives the roost back to the foxes\nThe fox gives the foxes a"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n4 4\n2\nSample Output:\n2.13333333333333\n''') == 'impossible'\nassert solution('''2\n2\n1\nSample Output:\n0.166666666666667\n''') == '0.166666666666667'\nassert solution('''3\n1\n4\nSample Output:\n1.666666666666667\n''') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n4 4\n2\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n4\n4 2\n1\n\"\"\") == \"2.5\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2.13333333333333'\nassert solution('5') == 'impossible'\nassert solution('10') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n4 4\n2\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2\n4 4\n2\n\"\"\") == \"2.13333333333333\"\nassert solution(\"\"\"\n5\n5 5\n4\n1\n3\n6\n\"\"\") == \"impossible\""
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == '2.13333333333333'\nassert solution('0 0') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 4\n2\n''') == \"2.13333333333333\"\nprint(solution('''\n3\n1 2\n5\n2 3\n''')) == \"impossible\"\nassert solution('''\n7\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n''') == \"3.9358974358974\"\nassert solution('''\n10\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50\n51 52\n53 54\n55 56\n57 58\n59 60\n61 62\n63 64\n65 66\n67 68\n69 70\n71 72\n73 74\n75 76\n77 78\n79 80\n81 82\n83 84\n85 86\n87 88\n89 90\n91 92\n93 94\n95 96\n97 98\n''') == \"4.4\""
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n3\n2\nSample Input 2:\n2\n5\n1\n2\n3\nSample Output 2:\n2\n3\nSample Input 3:\n1\n1\nSample Output 3:\nimpossible\n''') == 'impossible','solution failed test #1'\nassert solution('''5\n3\n1\n2\n3\nSample Output #2:\n2.05555555555556\nSample Input #3:\n3\n2\n1\n2\n3\nSample Output #3:\n2.13333333333333\n''') == 'impossible','solution failed test #2'"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n4 4\n2\n''') == '2.13333333333333', \"Sample Test Case\"\nassert solution('''3\n4 5\n1\n''') == 'impossible', \"Sample Test Case\""
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2.13333333333333\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4 4\n2\n''') == 'impossible'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '18'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n') == '18'"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('15') == '10'\nassert solution('250') == '7777777'\nassert solution('23') == '0'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1\\n1 2\\n2 1\\n1 1\\n3 2\\n3 3') == '18'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1', \"Wrong!\"\nassert solution('4') == '2', \"Wrong!\"\nassert solution('8') == '4', \"Wrong!\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '2'\nassert solution('15') == '3'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n') == '0\\n', \"3\\n\"\nassert solution('4\\n') == '1\\n', \"4\\n\"\nassert solution('5\\n') == '1\\n', \"5\\n\"\nassert solution('6\\n') == '1\\n', \"6\\n\"\nassert solution('7\\n') == '1\\n', \"7\\n\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('12') == '14'\nassert solution('37') == '58'\nassert solution('157') == '2506'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n35 M\\n0 M\\n43 M\\n30 F\\n') == '3'"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0', \"wrong answer\"\nassert solution('2') == '1', \"wrong answer\"\nassert solution('3') == '2', \"wrong answer\"\nassert solution('4') == '3', \"wrong answer\""
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n35 M\n0 M\n43 M\n30 F\n''') == '3'\nassert solution('''1\n35 F\n0 F\n43 M\n30 M\n''') == '4'\nassert solution('''4\n43 F\n30 F\n35 M\n0 M\n''') == '3'\nassert solution('''3\n38 F\n0 F\n39 F\n0 M\n''') == '5'\nassert solution('''4\n43 F\n30 F\n35 M\n0 M\n''') == '4'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''35 M\n0 M\n43 M\n30 F''') == '3'\nassert solution('''35 M\n0 F\n43 M\n30 M''') == '2'\n'''"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == \"3\"\nassert solution('''\n1 F zero wrestling\n''') == \"1\"\nassert solution('''\n0 M classicism programming\n42 F fooo\n42 M fooo\n43 F fooo\n43 M fooo\n44 M fooo\n44 F fooo\n45 M fooo\n45 F fooo\n''') == \"4\"\n'''\nExplanation:\nThis is a sample test case where the solution is 3.\n\nThis problem is to find the maximum number of pupils who can be taken on excursion without having them become couples.\n\nThere are 4 students, with heights 35, 43, 30, and 0 cm.\n\nIt is clear that student 0 can become a couple, but student 1 and 2 can not.\n\nThis problem also asks to find the maximum number of pupils who can be taken on excursion, without having them become couples.\n\nThe heights 35, 43, 30, and 0 cm are different.\n\nThe preferred music style is different.\n\nThe favourite sport is the same (they are likely to be fans of different teams and that would result in fighting).\n\nThat means that student 0 and 1 are of same height, student 2 is of different height, and student 4 is of the same height.\n\nThe only condition that student 2 needs to satisfy is that his height differs by more than $40$ and his sex is of the same sex.\n\nHence, only student 1 can be taken on excursion.\n\nThe only condition that student 3 needs to satisfy is that his height differs by more than $40$ and his sex is of the same sex.\n\nHence, only student 1, 2, and 4 can be taken on excursion.\n\nThe maximum number of pupils which can be taken on excursion is 2.\n\n'''\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\n\"\"\"\nYou are given a string, and your task is to make it into a palindrome.\n\nInput: A string.\n\nOutput: A palindrome or None.\n\nPrecondition: 0 < len(str) \u2264 1000\n\"\"\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2'\nassert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '1'\nassert solution('''\na 0\na 1\nb 2\nc 2 3\nc 3 4\n''') == '3'\nassert solution('''\na 0\na 1\nb 2\nc 2 3\nc 3 4\nc 3 5\nb 4\nb 5\nc 7\n''') == '2'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n0\\n2\\n') == '2'\nassert solution('3\\n0\\n1\\n2\\n1\\n2\\n') == '1'\nassert solution('3\\n1\\n2\\n0\\n1\\n2\\n') == '1'\n\"\"\"\n\nimport sys\n\nn = int(input())"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"1\\n1\\n2\\n1\\n\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4') == '2\\n1\\n2\\n'\nassert solution('1\\nb 3\\n0') == '3\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\na 2\nb 2\n''') == '''\n2\n1\n'''\nassert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '''\n2\n1\n2\n1\n'''\nassert solution('''\n10\na 0\na 1\na 2\na 3\nb 4\nc 5\nc 6\nc 7\nb 8\na 9\n''') == '''\n5\n4\n4\n3\n4\n'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 a\\n2 b\\n3 c\") == \"2\\n1\\n2\"\n\"\"\"\n\nfrom typing import List, Tuple\n\nimport sys\n\n\nclass Stack:\n    def __init__(self):\n        self.stk = []\n\n    def push(self, val: int) -> None:\n        self.stk.append(val)\n\n    def pop(self) -> int:\n        return self.stk.pop()\n\n    def size(self) -> int:\n        return len(self.stk)\n\n    def top(self) -> int:\n        return self.stk[-1]\n\n\nclass Operation:\n    def __init__(self):\n        pass\n\n\nclass Operation1(Operation):\n    def __init__(self, stack: Stack, val: int):\n        self.stack = stack\n        self.val = val\n\n    def execute(self) -> None:\n        self.stack.push(self.val)\n\n\nclass Operation2(Operation):\n    def __init__(self, stack: Stack, val: int):\n        self.stack = stack\n        self.val = val\n\n    def execute(self) -> None:\n        self.stack.pop()\n\n\nclass Operation3(Operation):\n    def __init__(self, stack: Stack, val: List[int]):\n        self.stack = stack\n        self.val = val\n\n    def execute(self) -> None:\n        top = self.stack.top()\n        for i in self.val:\n            self.stack.push(i)\n        self.stack.pop()\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2\\n1\\n2\\n'\n\nSample Input:\n4\na 2\na 2\na 0\nb 1\nSample Output:\n3\n1\n2\n1\n\"\"\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 a 2\\n2 a') == '1\\n2\\n0'\nassert solution('2\\n3 a 2\\n1 b') == '0\\n1\\n1'\nassert solution('3\\n3 a 2\\n2 a') == '0\\n0\\n2'\nassert solution('4\\n4 a 2\\n3 b') == '1\\n1\\n2'\nassert solution('5\\n5 a 2\\n4 b') == '3\\n2\\n1'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2'"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\nassert solution('''\n10 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n70 96 0 0\n90 63 0 0\n80 67 0 0\n90 63 0 0\n70 96 0 0\n90 63 0 0\n''') == '5'\n'''\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n\"\"\") == \"5\"\nassert solution(\"\"\"\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 2\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6 4\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n7 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n70 81 0 0\n80 80 80 0\n90 70 0 0\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0''') == '5'\nprint('Solution: ', solution('''6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0'''))"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1') == '5'\nassert solution('6 5') == '6'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '5'"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"5\"\nassert solution(\"2 4\") == \"3\"\nassert solution(\"6 1\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n\"\"\"\n\nfrags = [[]]\nsongs = [[]]"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 1') == '5'\nassert solution('1 1') == '1'\nassert solution('7 1') == '6'\nassert solution('10 10') == '7'\nassert solution('11 10') == '6'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 3') == '3'\nassert solution('3 2') == '2'\nassert solution('3 3') == '2'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'\nassert solution('10 10\\n20 20 20 20 20 20 20 20 20 20 20 20 20\\n30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30 30\\n40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40\\n
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5') == '4'\nassert solution('2 3') == '0'\nassert solution('10 20') == '12'"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '0'\nassert solution('3 3\\n1 2\\n1 2\\n') == '2'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4'\nassert solution('5 3\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '2'\nassert solution('5 4\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '6'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 1\") == \"6\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '4'\nassert solution(input) == '42'\n\n=======\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '4', 'Sample Test Failed'"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n1 2\n1 3''') == '1'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5''') == '1'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '8'\nassert solution('''\n5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '3'\n'''\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '4'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == '0'\nassert solution('3 2\\n1 2\\n2 2\\n') == '1'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 2\\n2 3\\n3 4\\n\") == \"2 4\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"2 4\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2\n2 3\n3 4''') == '3 4'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '4 5'\nassert solution('''11\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n56 58\n56 59\n57 60\n58 61\n57 62\n57 63\n56 64\n55 65\n54 66\n53 67\n52 68\n51 69\n50 70\n49 71\n48 72\n47 73\n46 74\n45 75\n44 76\n43 77\n42 78\n41 79\n40 80\n39 81\n38 82\n37 83\n36 84\n35 85\n34 86\n33 87\n32 88\n31 89\n30 90\n29 91\n28 92\n27 93\n26 94\n25 95\n24 96\n23 97\n22 98\n21 99\n20 100\n19 101\n18 102\n17 103\n16 104\n15 105\n14 106\n13 107\n12 108\n11 109\n10 110\n9 111\n8 112\n7 113\n6 114\n5 115\n4 116\n4 117\n3 118\n2 119\n1 120\n0 121\n-----Input-----\n1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n56 58\n56 59\n57 60\n58 61\n57 62\n57 63\n56 64\n55 65\n54 66\n53 67\n52 68\n51 69\n50 70\n49 71\n48 72\n47 73\n46 74\n45 75\n44 76\n43 77\n42 78\n41 79\n40 80\n39 81\n38 82\n37 83\n36 84\n35 85\n34 86\n33 87\n32 88\n31 89\n30 90\n29 91\n28 92\n27 93\n26 94\n25 95\n24 96\n23 97\n22 98\n21 99\n20 100\n19 101\n18 102\n17 103\n16 104\n15 105\n14 106\n13 107\n12 108\n11 109\n10 110\n9 111\n8 112\n7 113\n6 114\n5 115\n4 116\n4 117\n3 118\n2 119\n1 120\n0 121\n-----Input-----\n1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n56 58\n56 59\n57 60\n58 61\n57 62\n57 63\n56 64\n55 65\n54 66\n53 67\n52 68\n51 69\n50 70\n49 71\n48 72\n47 73\n46 74\n45 75\n44 76\n43 77\n42 78\n41 79\n40 80\n39 81\n38 82\n37 83\n36 84\n35 85\n34 86\n33 87\n32 88\n31 89\n30 90\n29 91\n28 92\n27 93\n26 94\n25 95\n24 96\n23 97\n22 98\n21 99\n20 100\n19 101\n18 102\n17 103\n16 104\n15 105\n14 106\n13 107\n12 108\n11 109\n10 110\n9 111\n8 112\n7 113\n6 114\n5 115\n4 116\n4 117\n3 118\n2 119\n1 120\n0 121\n-----Input-----\n1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n56 58\n56 59\n57 60\n58 61\n57 62\n57 63\n56 64\n55 65\n54 66\n53 67\n52 68\n51 69\n50 70\n49 71\n48 72\n47 73\n46 74\n45 75\n44 76\n43 77\n42 78\n41 79\n40 80\n39 81\n38 82\n37 83\n36 84\n35 85\n34 86\n33 87\n32 88\n31 89\n30 90\n29 91\n28 92\n27 93\n26 94\n25 95\n24 96\n23 97\n22 98\n21 99\n20 100\n19 101\n18 102\n17 103\n16 104\n15 105\n14 106\n13 107\n12 108\n11 109\n10 110\n9 111\n8 112\n7 113\n6 114\n5 115\n4 116\n4 117\n3 118\n2 119\n1 120\n0 121\n-----Input-----\n1\n1 2\n2 3\n3 4\n4 5\n5 6"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2\n2 3\n3 4\n''') == '2 4'\nassert solution('''\n2\n1 3\n2 4\n3 1\n''') == '3 1'\nassert solution('''\n3\n1 2\n2 3\n3 4\n''') == '1 3'\nassert solution('''\n10\n1 3\n4 2\n5 6\n7 8\n9 9\n10 10\n3 5\n6 7\n8 9\n11 12\n13 14\n16 17\n19 20\n''') == '11 12'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n3 4\") == \"2 4\"\nassert solution(\"4\\n1 2\\n3 4\\n3 5\\n6 5\") == \"2 5\"\nassert solution(\"4\\n1 2\\n3 4\\n1 5\\n6 5\") == \"2 4\"\nassert solution(\"4\\n1 2\\n3 4\\n1 5\\n6 5\") == \"1 2\"\nassert solution(\"4\\n1 2\\n3 4\\n1 5\\n6 5\") == \"1 5\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('4') == '4'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n2 3\n3 4''') == '2 3'\n\nassert solution('''4\n1 2\n2 3\n3 4\n4 5''') == '1 4'\n\nassert solution('''4\n1 2\n2 3\n3 4\n4 5''') == '1 2'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1 1\\n1 3\\n2 3\\n'\nassert solution('6') == '1 2 3 4 5 6\\n3 4 1 2 1 3\\n5 6 2 4 1 3\\n3 4 1 2 1 3\\n2 5 3 4 1\\n'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n') == '1'\nassert solution('2\\n1\\n3\\n') == '2 3'\nassert solution('3\\n2\\n1\\n') == '2 4'"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\\n0\\n0\"\nassert solution(\"3\") == \"2\\n1 1\\n2 2\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 3') == '3'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '4'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2') == '5'\nassert solution('10 1\\n0 9\\n9 9\\n5 4\\n4 3\\n3 3\\n3 3\\n0 7\\n1 1\\n1 4\\n1 8\\n2 2\\n3 3\\n3 7\\n5 3\\n6 5\\n6 8\\n3 5\\n7 4\\n5 8\\n6 5\\n7 7\\n6 5\\n7 3\\n5 2\\n4 3\\n4 5\\n3 5\\n2 6\\n2 5\\n2 5\\n3 5\\n3 5\\n4 5\\n2 4\\n4 5\\n4 5\\n4 5\\n3 6\\n1 5\\n5 3\\n4 5\\n2 5\\n3 4\\n3 5\\n3 5\\n1 5\\n2 4\\n4 3\\n3 4\\n2 5\\n5 2\\n4 3\\n4 3\\n4 3\\n5 4\\n3 3\\n4 4\\n2 4\\n4 4\\n3 4\\n4 4\\n5 3\\n4 4\\n4 3\\n4 5\\n3 3\\n3 4\\n2 3\\n3 3\\n1 3\\n1 3\\n3 3\\n2 3\\n5 3\\n1 4\\n4 3\\n3 4\\n3 5\\n4 4\\n4 4\\n3 4\\n3 4\\n1 4\\n4 3\\n2 3\\n3 3\\n2 3\\n4 3\\n4 5\\n4 5\\n3 4\\n1 5\\n3 5\\n2 5\\n4 3\\n4 5\\n4 5\\n4 5\\n5 3\\n5 4\\n1 5\\n3 3\\n3 3\\n5 2\\n4 4\\n4 3\\n3 4\\n1 5\\n5 3\\n4 5\\n3 5\\n2 4\\n4 5\\n4 5\\n4 5\\n4 5\\n5 4\\n5 5\\n4 4\\n4 4\\n2 5\\n4 4\\n4 4\\n2 5\\n5 4\\n4 4\\n2 4\\n4 4\\n3 4\\n5 3\\n4 4\\n4 4\\n5 5\\n4 5\\n5 3\\n4 5\\n4 5\\n4 5\\n3 4\\n2 5\\n4 4\\n4 4\\n4 4\\n5 3\\n5 5\\n5 4\\n4 4\\n5 5\\n4 5\\n4 5\\n5 4\\n4 5\\n5 3\\n2 3\\n4 4\\n4 4\\n4 4\\n4 4\\n5 3\\n4 4\\n5 5\\n4 5\\n4 5\\n4 5\\n2 3\\n3 5\\n4 4\\n5 5\\n5 4\\n5 4\\n5 5\\n4 4\\n5 3\\n5 5\\n5 4\\n4 4\\n5 3\\n2 3\\n4 4\\n4 4\\n4 4\\n5 4\\n4 5\\n4 4\\n4 5\\n5 4\\n4 5\\n4 5\\n4 5\\n4 4\\n4 4\\n4 5\\n4 5\\n5 3\\n5 5\\n5 4\\n4 4\\n4 4\\n4 4\\n4 4\\n4 5\\n5 5\\n4 5\\n5 3\\n4 5\\n4 5\\n4 5\\n5 5\\n4 4\\n5 4\\n4 4\\n4 4\\n5 5\\n4 4\\n4 4\\n5 4\\n4 5\\n4 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 4\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n3 1') == '5'\nassert solution('2 1\\n3 5') == '1'\n\nprint(solution(*[*[int(x) for x in input().split()] for _ in range(int(input()))]))\n\n---"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2\"\n    \"1 3\"\n    \"2 1\"\n    \"3 5\"\n    \"7 2\"\n) == \"5\"\nassert solution(\n    \"1000000 1000\"\n    \"1000 1000\"\n    \"2 2\"\n    \"3 1\"\n    \"4 2\"\n    \"5 2\"\n    \"6 2\"\n    \"7 1\"\n    \"8 1\"\n    \"9 1\"\n    \"10 1\"\n) == \"10\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '6'\nassert solution('2 1') == '6'\nassert solution('3 5') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n1 3\n2 1\n3 5\n7 2\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n3\n4 2\n1 6\n2 5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 2\n1 3\n2 1\n3 5\n7 2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 2\n1 3\n2 1\n3 5\n7 2\n5\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 2\n1 3\n2 1\n3 5\n7 2\n5\n3 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '3'\nassert solution('2 1') == '4'\nassert solution('3 5') == '6'\nassert solution('7 2') == '0'"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '3'\nassert solution('2 1') == '0'\nassert solution('3 5') == '5'\nassert solution('7 2') == '7'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n\") == \"2\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '2'\nprint(solution(*['3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0', '2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n5 4\n1 1\n1 5\n2 2\n2 6\nSample Input 2:\n10\n5\n10 10\n3 3\n1 4\n1 6\n0 0\n1 6\n1 7\n0 2\n0 3\n1 4\n1 8\n1 9\nSample Output 2:\n4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4\n5 2\n5 3\n1 3\n0 1\n3 2\nSample Input 3:\n3\n5 4\n1 2\n3 4\n1 5\nSample Output 3:\n4\n\"\"\") == \"4\"\n\nimport sys\nimport io\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n2\n2\n3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '1'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\n3 1\n1 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '2'\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '3'\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '1'"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 5 5\n3 1\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 3') == '2'\nassert solution('3 5 1') == '1'\nassert solution('3 1 1') == '1'\nassert solution('3 1 1') == '1'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"GHOST\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\nC\n2 C\n1 C\n3 C\n1 C\n1 C\n3 C\n2 C\n''') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"GHOST\"\nSample Input:\n7 3\n3 C\n2 C\n1 C\n4 C\n3 C\n2 C\nSample Output:\nSAFE\n'''\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"GHOST\"\nassert solution('''4 3\n3 C\n2 C\n1 C\n''') == \"SAFE\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'GHOST'\nassert solution('3 4') == 'SAFE'\nassert solution('8 6') == 'SAFE'\nassert solution('8 8') == 'GHOST'\n'''"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"10 5\\n7 C\\n5 C\\n8 C\\n9 C\\n4 C\\n6 C\\n7 C\\n3 C\\n2 C\\n1 C\\n\") == \"SAFE\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 C\\n2 C\\n1 C') == 'GHOST'\nassert solution('1\\n1 C\\n0 C\\n') == 'SAFE'\nassert solution('1\\n1 C\\n2 C\\n') == 'SAFE'\nassert solution('1\\n1 C\\n2 C\\n3 C\\n') == 'SAFE'\nassert solution('1\\n1 C\\n2 C\\n3 C\\n4 C\\n') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 C\\n2 C\\n1 C\\n') == 'GHOST'\nassert solution('1 C\\n2 C\\n3 C\\n') == 'SAFE'\nassert solution('1 C\\n2 C\\n3 C\\n4 C\\n') == 'SAFE'\nassert solution('1 C\\n2 C\\n3 C\\n4 C\\n5 C\\n') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"GHOST\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n0.00 2.00\n0.00 3.00\n2.00 5.00\n5.00 1.00\n2.00 4.00\nSample Input 2:\n3 3\n0.00 1.00\n0.00 0.00\n0.00 4.00\nSample Output 2:\n0\n''') == '0'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\nassert solution('2 2') == '0'"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '2'\n\n---Input---\n2\n0.00 2.00\n\n---Output---\n2\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0.00 2.00') == '2'\nassert solution('2\\n0.00 2.00') == 'no fika'\nassert solution('2\\n1.00 2.00') == 'no fika'\nassert solution('3\\n0.00 2.00') == 'no fika'\nassert solution('4\\n0.00 2.00') == 'no fika'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n0.00 2.00\\n') == '2'\nassert solution('4 6\\n-1.00 4.00\\n') == '4'\nassert solution('4 5\\n-1.00 4.00\\n') == 'no fika'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n0.00 2.00') == '2'\nassert solution('3\\n0.00 2.00') == '3'\nassert solution('4\\n0.00 2.00') == '3'\nassert solution('5\\n0.00 2.00') == '5'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n0.00 1.00\n0.00 2.00\n0.00 3.00''') == '2'\nassert solution('''3\n0.00 0.00\n0.00 0.00\n0.00 0.00''') == 'no fika'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n0.00 2.00') == '2'\nassert solution('1 2\\n0.00 2.00') == 'no fika'\n'''\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 3\\n0.00 2.00\"\n) == \"2\"\nassert solution(\n    \"2 3\\n0.00 2.000\"\n) == \"1\"\nassert solution(\n    \"2 3\\n0.001 2.000\"\n) == \"0\"\nassert solution(\n    \"2 3\\n0.0002 2.000\"\n) == \"0\""
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n0.00 2.00\\n\") == \"2\"\nassert solution(\"2 5\\n0.00 2.00\\n\") == \"no fika\"\nassert solution(\"2 2\\n0.00 2.00\\n\") == \"no fika\"\nassert solution(\"2 4\\n0.00 2.00\\n\") == \"no fika\"\nassert solution(\"2 2\\n0.00 2.00\\n\") == \"no fika\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n10 0\\n2\\n30 0\\n15 0') == \"10\"\nassert solution('4\\n0 0\\n10 0\\n20 0\\n30 0\\n15 0') == \"14.5\""
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '10'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('10') == '10'\nassert solution('3') == '10'\n\nimport math"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('\\n'.join([\n    '5',\n    '0 0',\n    '10 0',\n    '2',\n    '30 0',\n    '15 0'\n])) == '10'\n\nassert solution('\\n'.join([\n    '10',\n    '0 0',\n    '10 0',\n    '2',\n    '30 0',\n    '15 0'\n])) == '10'\n\nassert solution('\\n'.join([\n    '2',\n    '0 0',\n    '10 0',\n    '2',\n    '30 0',\n    '15 0'\n])) == '10'\n\nassert solution('\\n'.join([\n    '30',\n    '0 0',\n    '10 0',\n    '2',\n    '30 0',\n    '15 0'\n])) == '10'\n\nassert solution('\\n'.join([\n    '15',\n    '0 0',\n    '10 0',\n    '2',\n    '30 0',\n    '15 0'\n])) == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10\"\nassert solution('''\n2\n0 0\n10 0\n2\n30 0\n15 0\n''') == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"1\\n0 0\\n10 0\\n2\\n30 0\\n15 0\") == \"10\"\nassert solution(\"4\\n0 0\\n10 0\\n2\\n30 0\\n15 0\\n2\\n30 0\\n15 0\") == \"1\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    0 0\n    10 0\n    2\n    30 0\n    15 0\n''') == '10'\n\nassert solution('''\n    3\n    0 0\n    10 0\n    2\n    30 0\n    15 0\n''') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 0\\n10 0\\n2\") == \"10\"\nassert solution(\"10\\n0 0\\n10 0\\n2\") == \"10\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2\\n'\n    '0 0\\n'\n    '10 0\\n'\n    '2\\n'\n    '30 0\\n'\n    '15 0\\n'\n    ) == '10'\n\nassert solution(\n    '1\\n'\n    '0 0\\n'\n    '0 0\\n'\n    '0 0\\n'\n    '0 0\\n'\n    ) == '0'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n0 0\n10 0\n2\n30 0\n15 0\"\"\") == \"10\"\nprint(solution(input()))\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0 0\n10 0\n2\n30 0\n15 0\n''') == '10'\nassert solution('''\n1\n2\n''') == '1'\nassert solution('''\n10\n10 0\n8 0\n1 0\n5 0\n9 0\n8 0\n7 0\n4 0\n5 0\n''') == '1'\nassert solution('''\n5\n0 0\n10 0\n2\n30 0\n15 0\n''') == '11'\nassert solution('''\n5\n0 0\n10 0\n2\n30 0\n15 0\n''') == '11'\n''')\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n8 6\nW 10 0\nW 10 3\nE 15 7\nW 17 4\nE 19 5\nE 20 6\nE 12 3\nW 17 4\nE 15 5\nE 17 6\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 8\nW 5 0\nE 5 0\nW 5 0\nE 5 0\nW 5 0\nE 5 0\nE 5 0\nW 5 0\nE 5 0\n\"\"\") == \"0\""
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n9 3\nW 10 0\nW 10 3\nW 10 4\nE 17 4\nE 17 5\nE 17 6\nE 17 7\nE 17 8\nW 11 1\nE 12 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n9 3\nE 10 1\nE 10 2\nW 11 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 3\nW 10 0\nW 10 3\nE 17 4\nE 17 5\nE 17 6\nE 17 7\nE 17 8\nE 17 9\nE 17 10\nW 11 1\nE 12 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n9 3\nW 10 0\nW 10 3\nE 17 4\nE 17 5\nE 17 6\nE 17 7\nE 17 8\nE 17 9\nE 17 10\nE 16 11\nW 12 1\nE 13 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n8 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4 4\nW 10 0\nW 10 3\nW 10 4\nE 17 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3\nW 10 0\nW 10 3\nE 17 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\nE 7 4\\nW 15 3\\nW 20 3\\nE 12 4\"\n) == \"0\"\nassert solution(\n    \"4\\nE 10 1\\nW 20 3\\nW 17 4\\nE 12 4\"\n) == \"0\"\n\"\"\"\n\nimport heapq\nimport collections\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"W 10 0\") == \"1\"\nassert solution(\"W 10 3\") == \"2\"\nassert solution(\"E 17 4\") == \"0\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n5\\nW 7 0\\nW 5 5\\ne 13 2\\ne 7 4') == '0'\nassert solution('7\\n3\\nE 7 3\\nE 10 4\\nE 17 3') == '1'\nassert solution('10\\n15\\nW 7 0\\nW 5 5\\ne 10 2\\ne 7 4\\ne 13 2\\ne 7 3\\ne 13 2\\nW 7 0\\nW 5 5\\nE 13 2\\nW 7 0\\nW 5 5\\nE 13 2\\nE 7 3\\nE 13 2\\nE 7 3\\nW 7 0\\nW 5 5\\ne 13 2\\ne 7 4\\ne 13 2\\ne 7 3') == '1'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join(['2 4', 'W 1 3', 'E 2 4'])) == '0'\nassert solution('\\n'.join(['3 2', 'W 1 4', 'E 1 5'])) == '2'\nassert solution('\\n'.join(['7 2', 'W 1 4', 'E 1 5'])) == '3'\nassert solution('\\n'.join(['4 2', 'W 1 4', 'E 1 5'])) == '4'\nassert solution('\\n'.join(['8 3', 'W 10 0', 'W 10 3', 'E 17 4'])) == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6 6\nW 10 0\nW 10 3\nE 17 4\nW 10 8\nW 10 9\nE 17 5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n5\n5 6\n3 4\n5 13\n6 10\n''') == '3'\nassert solution('''\n2\n4\n5 4\n2 4\n4 5\n4 5\n''') == '2'\nassert solution('''\n7\n3 3\n4 5\n5 4\n4 5\n5 4\n5 4\n5 4\n5 4\n''') == '1'\n'''\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution(\"5\\n8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\n\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n8\n5 6\n3 4\n5 13\n6 10''') == '3'\nassert solution('''7\n5\n5 6\n3 4\n5 13\n6 10\n4 7\nSample Input:\n5\n5 8\n5 6\n3 4\n5 13\n6 10\nSample Output:\n5''') == '5'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n8\\n5 6\\n3 4\\n5 13\\n6 10\\n') == '3'\nassert solution('3\\n1 4\\n4 4\\n1 2\\n2 4\\n3 1\\n') == '2'\nassert solution('3\\n1 4\\n4 4\\n1 2\\n2 4\\n3 1\\n') == '1'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n4\\n10 3 3\") == \"ABC\"\nassert solution(\"2\\n4\\n10 2 2\") == \"BA\"\nassert solution(\"3\\n4\\n10 1 1\") == \"A\"\nassert solution(\"4\\n4\\n10 3 3\") == \"ABC\"\nassert solution(\"5\\n4\\n10 5 5\") == \"ABCDABCD\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 4\n5 4 3\n1 1 1\n''') == 'impossible'\nassert solution('''4 4\n10 3 3\n1 1 1\n''') == '1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4, 4]) == 'ABC'\nassert solution([4, 4, 1, 1]) == 'ACBA'\nassert solution([4, 3, 2, 1]) == 'ACBA'\nassert solution([4, 3, 2, 2]) == 'ACB'\nassert solution([4, 2, 1, 1]) == 'ACBA'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n') == 'AB'\nassert solution('1 2\\n1 2\\n') == 'AB'\nassert solution('2\\n1\\n') == 'AB'\nassert solution('2 1\\n2\\n') == 'AB'\nassert solution('1 1\\n1\\n') == 'AB'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n20 10\n12 10\n''') == '''\nAB\n'''\nassert solution('''\n20 10\n10 12\n''') == '''\nAB\n'''\nassert solution('''\n20 10\n10 12\n''') == '''\nBC\n'''\nassert solution('''\n20 10\n10 12\n''') == '''\nBC\n'''"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\n3 3 1\n''') == 'ABCABC'\nassert solution('''\n2 2\n1 1\n''') == 'ABBBAB'\nassert solution('''\n5 5\n5 3 1\n''') == 'BAAABAA'\nassert solution('''\n5 5\n5 3 1\n''') == 'BAAABAA'\nassert solution('''\n5 5\n5 2 2\n''') == 'AAABCAAA'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5 2\") == \"AB\"\nassert solution(\"4 5 5\") == \"ABACAB\"\nassert solution(\"4 5 4\") == \"ABACABA\"\n\"\"\""
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4\\n10 3 3') == 'ABCABBCBA'\nassert solution('4 4\\n10 3 3') == 'ABCABBCBA'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4\n3 2 2\n''') == 'impossible'\nassert solution('''1 10\n2 3 2\n''') == 'A C C C'\nassert solution('''3 3\n1 2 3\n''') == 'AC AC AC'\nassert solution('''5 5\n10 8 4 4\n''') == 'B C D C'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4 4\\n10 3 3\\n\"\n) == \"A\\nB\\nC\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nprint(solution('''\n4\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''))\nprint(solution('''\n4\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''))\n'''\n2\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n'''\nSample Input:\n5\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n'''\n4\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n'''\n'''\nSample Output:\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'''\n'''\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nprint(solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''')) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('6\\nBEFORE\\nHELLO\\nAFTER') == 'BEFORE HELLO AFTER'\nassert solution('5\\nBEFORE\\nHELLO\\nAFTER') == 'BEFORE HELLO AFTER'\nassert solution('11\\nBEFORE\\nHELLO\\nAFTER') == 'BEFORE HELLO AFTER'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    BETWEEN\n    SUBTLE\n    SHADING\n    AND\n    THE\n    ABSENCE\n    OF\n    LIGHT\n    LIES\n    NUANCE\n    IQLUSION\n    BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"13\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"15\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"17\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"19\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abrahellehhelleh') == '12'\nprint(solution('abrahellehhelleh'))"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"abrahellohelleh\") == \"12\"\nassert solution(\n    \"rachelhellabracadabra\") == \"0\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '0'\nassert solution('b') == '0'\n'''\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('inhabit') == '1'\nassert solution('parent') == '0'\nassert solution('entrance') == '4'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0\n1 1\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n100 101\n101 102\n102 103\n103 104\n104 105\n105 106\n106 107\n107 108\n108 109\n109 110\n110 111\n111 112\n112 113\n113 114\n114 115\n115 116\n116 117\n117 118\n118 119\n119 120\n120 121\n121 122\n122 123\n123 124\n124 125\n125 126\n126 127\n127 128\n128 129\n129 130\n130 131\n131 132\n132 133\n133"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"20\"\nassert solution(\"20\") == \"50\"\nassert solution(\"65\") == \"340\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 1 1 1\\n1 2 1 2\\n1 3 2 3') == '70'\nassert solution('2\\n3 2 3') == '50'\nassert solution('6\\n1 1 1 1 1 1') == '50'\nassert solution('6\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '200'\nassert solution('1\\n1 1 1 1 1 1 1') == '100'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '70'\n\"\"\"\n\nstdin = \"\"\"\n20\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\nSample Output:\n20\n\"\"\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n5 2 5\\n1 2 5') == '10'\nassert solution('5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '90'\nassert solution('15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '115'\nassert solution('13\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '120'\n\nimport sys\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('5 4 5') == '10'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"1000\") == \"1\""
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1''') == '340'\nassert solution('''2\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1''') == '85'\nassert solution('''5\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1''') == '7'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\nSample Input:\n3\n1 2\n3 4\n1 2\nSample Output:\n40\n''') == '40'\nassert solution('''\n5\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\nSample Input:\n3\n1 1\n1 2\n2 2\n1 1\nSample Output:\n70\n''') == '70'\nassert solution('''\n5\n1 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\nSample Input:\n3\n1 2\n1 2\n1 2\nSample Output:\n30\n''') == '30'\nassert solution('''\n5\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\nSample Input:\n3\n1 1\n1 2\n2 2\n1 1\nSample Output:\n80\n''') == '80'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '7'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '7'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"8\""
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"10\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\") == \"10\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7\\n'"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '7'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"10\"\n\"\"\"\n\nN, Q = map(int, input().split())\nnodes = {i: set() for i in range(1, N+1)}\n\nfor _ in range(N-1):\n    u, v = map(int, input().split())\n    nodes[u].add(v)\n    nodes[v].add(u)"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"10 5\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n) == \"10\\n\"\nassert solution(\n    \"10 5\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n) == \"14\\n\"\nassert solution(\n    \"10 5\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n) == \"14\\n\"\nassert solution(\n    \"10 5\\n\"\n    \"1 2 3 4 5 6 7 8 9 10\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n    \"1 4\\n\"\n    \"0 1\\n\"\n    \"0 4\\n\"\n) == \"14\\n\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\nSample Output:\n10\n7\n8\n7\n''') == '7'"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10'\nassert solution('5 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '7'\nassert solution('5 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '8'\nassert solution('5 5\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '7'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 7') == '6'\nassert solution('-2 0') == '0'\nassert solution('0 -1') == '0'\nassert solution('0 1') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"4\"\nassert solution(\"3 4 7\") == \"0\"\nassert solution(\"3 4 7\") == \"2\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '10'\nassert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '10'\nassert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '8'\nassert solution('''\n1\n0\n''') == '1'\nassert solution('''\n3\n-1\n0\n1\n''') == '4'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"2 4 7\", \"-2 0\", \"0 -1\", \"-2 1\", \"1 0\", \"2 1\", \"2 3\", \"3 -1\"]) == \"6\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 7') == '6', 'Sample test 1'\nassert solution('1 1 1') == '1', 'Sample test 2'\nassert solution('2 4 7') == '3', 'Sample test 3'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\\n\"\nassert solution(\"3 7 1\\n-1 -2\\n0 1\\n-1 2\\n2 0\\n3 -1\\n\") == \"3\\n\"\nassert solution(\"6 7 3\\n-1 -2\\n0 1\\n-1 2\\n2 0\\n3 -1\\n\") == \"2\\n\"\nassert solution(\"4 4 7\\n-1 -2\\n0 1\\n-1 2\\n2 0\\n3 -1\\n\") == \"4\\n\"\nassert solution(\"3 3 7\\n-1 -2\\n0 1\\n-1 2\\n2 0\\n3 -1\\n\") == \"3\\n\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'\n\nassert solution('''\n6 1 8\n-2 0\n1 -1\n2 3\n3 -2\n4 -1\n5 0\n6 -1\n''') == '2'\n\nassert solution('''\n2 3 9\n-2 -1\n1 -1\n2 2\n2 -2\n3 3\n3 -2\n3 -1\n4 1\n4 2\n''') == '9'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == \"6\"\nassert solution('''\n1 2 3\n3 5\n1 4\n2 1\n''') == \"2\"\nassert solution('''\n2 3 3\n-2 3\n1 2\n3 5\n''') == \"3\"\nassert solution('''\n2 2 2\n-2 2\n-2 -1\n1 1\n''') == \"2\"\nassert solution('''\n1 1 1\n-1 -1\n-1 -1\n1 1\n''') == \"1\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'\n\nassert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '3'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1''') == \"6\"\nassert solution('''6 5 6\n1 1\n2 3\n3 3\n4 4\n4 4\n5 5\n5 5\n6 6\n7 7\n8 7\n9 7''') == \"12\"\nassert solution('''9 3\n-4 -3\n-4 -2\n-2 -4\n-4 -1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == \"9\"\nassert solution('''1 3\n2 3\n2 2\n1 1\n1 1\n1 1\n1 1''') == \"1\"\nprint(\"all good\")"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('1 2 4 40') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1 4 40''') == '3'\nassert solution('''6 1 4 40''') == '3'\nassert solution('''9 1 4 40''') == '4'\nassert solution('''18 1 4 40''') == '3'\nassert solution('''24 1 4 40''') == '4'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('10 3 10 40') == '10'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1 4 40''') == '3'\nassert solution('''3 4 5 7''') == '4'\n\n----"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('5 1 9 25') == '4'\nassert solution('2 1 9 25') == '2'\n\nstdin = \"\"\"\n3 1 4 40\n\"\"\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('15 3 7 10') == '7'\nassert solution('0 1 3 4') == '4'\nassert solution('1.1 3 4') == '4'\nassert solution('0 1.1 3 4') == '4'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 1 4 40''') == '3'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 4 40') == '3'"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 4 40') == '3'\nassert solution('2.5 1 4 40') == '3'\nassert solution('-3 1 4 40') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('1.5 1 1 1') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('4 2 8 50') == '2'\nassert solution('1 1 1 1 1') == '1'\nassert solution('10 10 10 10 10 10 10 10 10 10 10') == '10'\nassert solution('4 2 4 4 4 4 4 4 4 4 4 4') == '4'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n20 2\n-5 -5 -5 -5 -5 -5 -5 -5 -5 -5\n-5 -5 -5 -5 -5 -5 -5 -5 -5 -5\n''') == ''\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n  5 2\n  93 82 444\n  92 76 436\n  99 62 -1\n  0 70 66 71 97\n  76 0 87 66 74\n  62 90 0 60 94\n  60 68 68 0 69\n  83 78 83 73 0''') == '99'\nassert solution('''\n  5 5\n  10 10 10 10 10\n  15 15 15 15 15\n  10 20 20 20 20\n  5 5 5 5 5\n  10 10 10 10 10''') == '10, 20, 10, 5, 10, 20, 10, 5'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n') == '99'"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    ''') == '99'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 10') == '0'\nassert solution('10 3') == '0'\nassert solution('4 3') == '4'\nassert solution('8 3') == '8'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99\\n3'\nassert solution('4 2\\n12 8\\n7 13\\n6 15\\n10 6\\n8 5\\n4 5\\n3 3\\n9 9\\n') == '9\\n3'\nassert solution('4 3\\n0 0 0\\n4 2\\n1 1 1\\n') == '0'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n5 3\n6 1 9 8 5\n4 5 9 6 8\n7 1 5 7 9\n8 9 5 1 6\n3 9 8 6 1\n''') == '8'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\n\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\n\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == ''\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 352') == '99'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"99\"\nprint(solution())\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\\n\") == \"2\\n3\\n\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"3\\n4 2\\n4 3\\n\"\nassert solution(\"300\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\\n5 2\\n5 4\\n\"\nassert solution(\"13\\n1 2\\n1 3\\n3 4\\n5 4\\n6 5\\n7 6\\n8 7\\n9 8\\n10 9\\n11 10\\n12 11\\n\") == \"3\\n10 2\\n10 9\\n\""
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n') == '2 3\\n'\nassert solution('2\\n1 2\\n3 4\\n5 1\\n') == '3 4\\n'\nassert solution('3\\n') == '1 2\\n3 4\\n5 2\\n'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '2 4 1 3'"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2 3'\n\"\"\""
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2\\n2 3\\n3 4\\n') == '2 3'\nassert solution('10\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '4 9'\n\n'''"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    1 2\n    2 3\n    3 4\n''') == '''2\n3 4\n4 2'''\n\nassert solution('''\n    4\n    1 2\n    2 3\n    3 4\n''') == '''4\n3 4\n4 2'''\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n2 3\\n3 4\") == \"2\\n3 4\\n4 2\"\nassert solution(\"10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"3\\n4 5\\n6 7\\n8 9\\n10 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"4 2 3\"\n\nassert solution(\"\"\"\n5\n1 3\n2 4\n3 5\n\"\"\") == \"3 4 5\"\n\nassert solution(\"\"\"\n2\n1 2\n2 4\n\"\"\") == \"3 4 1\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"2 1\") == \"1 2\"\nassert solution(\"2 2\") == \"1 1\"\nassert solution(\"3 1\") == \"1 1\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 3\\n3 4\\n4 2\\n') == '2 4'\nassert solution('6\\n1 2\\n4 5\\n3 6\\n6 4\\n5 4\\n') == '4 5'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"9.0\"\nassert solution(\"2\") == \"12.00000\"\nassert solution(\"3\") == \"12.00000\"\nassert solution(\"4\") == \"9.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '9.0000\\n12.00000\\n12.00000\\n9.0'\nprint('Solution:', solution())"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2\\n3 2\\n2 2') == '9.00000'\n\"\"\"\n\ntest_input = \"\"\"1\n1\n2\n3\"\"\""
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 1\n2 2\n3 2\n4 1''') == '9.00000'\nassert solution('''10\n1 3\n2 2\n3 1\n4 2\n5 2\n6 1\n7 4\n8 3\n9 2''') == '12.00000'\nassert solution('''4\n3 3\n4 4\n2 3\n3 3''') == '9.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n2 1\n1 1\n2 1\n''') == '12.00000'\nassert solution('''4\n1 1\n2 2\n3 2\n4 1\n''') == '12.00000'\nassert solution('''5\n1 1\n2 2\n3 2\n4 1\n5 1\n''') == '12.00000'\nassert solution('''6\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n''') == '12.00000'\nassert solution('''8\n1 1\n2 2\n3 2\n4 1\n5 1\n6 1\n7 1\n8 1\n''') == '9.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1') == '9.0'\nassert solution('2\\n1 2') == '12.0'\nassert solution('3\\n1 2') == '9.0'\nassert solution('4\\n1 1') == '9.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '12.00000'\nassert solution('4') == '9.0000'\nassert solution('4') == '12.00000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '9.0000'\nassert solution('2') == '12.00000'\nassert solution('3') == '12.00000'\nassert solution('4') == '9.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1\\n') == '9.0000\\n12.00000\\n12.00000\\n9.0'\nassert solution('4\\n1 3\\n2 4\\n3 5\\n4 2\\n') == '12.00000\\n12.00000\\n12.00000\\n12.0'\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'DI 1'\nassert solution('2') == 'DI 2'\nassert solution('3') == 'DI 3'\nassert solution('4') == 'DI 4'\n\n\"\"\"\n\nstdin = \"4\"\nn = stdin\n\nn = list(n)"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"DI A\\n\"\nassert solution(\"1\") == \"DI X\\n\"\nassert solution(\"255\") == \"DI Y\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\nDI\n''') == '''\nST A\nST X\nPH A\nPH X\nAD\nDI Y\n'''\n\nassert solution('''\n1\nDI\n''') == '''\nST A\nDI Y\n'''\n\nassert solution('''\n32\nDI\n''') == '''\nDI\n'''\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"ST A\\nDI\\nPL Y\"\nassert solution(\"4\") == \"ST A\\nST X\\nAD\\nST Y\\nDI\\nPL Y\"\nassert solution(\"9\") == \"ST A\\nST X\\nAD\\nST Y\\nPH X\\nDI\\nPL Y\"\nassert solution(\"99\") == \"ST A\\nST X\\nAD\\nST Y\\nDI\\nPL Y\\nDI\\nDI\\nPL Y\"\nassert solution(\"123\") == \"ST A\\nST X\\nAD\\nST Y\\nPH X\\nDI\\nDI\\nDI\\nDI\\nPL Y\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'DI Y'"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'DI'\nassert solution('2') == 'DI Y'\nassert solution('255') == 'DI Y'"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'DI Y'\nassert solution('10000') == 'DI Y'\n\"\"\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"DI Y\"\nassert solution(\"1\") == \"DI Y\"\nassert solution(\"255\") == \"DI Y\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5 6\") == \"2\"\nassert solution(\"4 6 2\") == \"1\"\nassert solution(\"4 6 2\") == \"1\"\nassert solution(\"10 10 10\") == \"1\"\nassert solution(\"6 6 6\") == \"1\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5 6\nFFFF FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('1 1 0 0 0') == '1'\nassert solution('0 1 0 0 0') == '1'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('1 4 6') == '1'\nassert solution('1 5 5') == '1'\nassert solution('2 5 6') == '2'\nassert solution('2 4 5') == '1'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n\n1 5 6\nFFFF FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n\"\"\") == '2'\n\"\"\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5 6\") == \"2\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\n\n'''"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('0 0 0 0 0') == '1'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\"\nassert solution(\"1 2 3\\nFFFF FFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF FFFF\\nFFFF FFFF FFFF FFFF FFFF\") == \"1\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nS -> a\\nS -> b\\nS -> \\n') == 'abaaba'\nassert solution('1\\nS -> a\\nS -> \\n') == 'a'\nassert solution('2\\nS -> a\\nS -> \\n') == 'NONE'\nassert solution('1\\nS -> a\\nS -> \\n') == 'a'\nassert solution('5\\nS -> a\\nS -> \\n') == 'abaaba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\nprint(solution('''5\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''')) == 'abaaba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> ''\nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome''') == 'abaaba'\n\nprint(solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> ''\nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome'''))"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"abaaba\"\nassert solution(\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"a\"\nassert solution(\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"NONE\"\nassert solution(\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nS\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"S\"\nassert solution(\"\"\"S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nS\nhow about this aaaaaaabbbbbbbbbbbbbbba\nS\n\"\"\") == \"S\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"abaaba\"\nassert solution() == \"NONE\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba\\nabaaba\\nabaaba\\nNONE\\na\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba\\nba"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\nS -> aS\\nS -> bS\\nS ->\\n\") == \"abaaba\"\nassert solution(\"5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"abaaba\"\nassert solution(\"5\\nS -> aS\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"abbbbbbbbbbbbbbbbba\"\nassert solution(\"3\\nS -> aS\\nS -> bSb\\nS ->\\n\") == \"NONE\"\nassert solution(\"5\\nS -> aS\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\n\") == \"a\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nNONE\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\nassert solution('6\\nS -> aS\\nS -> bS\\nS -> a\\nS -> b\\nS -> cS\\nS -> a\\nS -> b\\nS -> c\\nS -> \\n') == 'c'\nassert solution('2\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS -> S\\nS ->"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nS->aS\\nS->bS\\nS->\\nS->\\nS->\\nS->\\n') == 'abaaba'\nassert solution('5\\nS->aS\\nS->bS\\nS->a\\nS->b\\nS->\\nS->\\n') == 'a'\nassert solution('5\\nS->aS\\nS->bS\\nS->a\\nS->b\\nS->\\nS->\\n') == 'NONE'"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"S\") == \"aSb\"\nassert solution(\"S -> aSb\") == \"aSb\"\nassert solution(\"S -> aSb S\") == \"aSb aSb\"\nassert solution(\"S -> aSb S\") == \"aSb\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '2'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n5 0 2\n1 3 7\n2 0\n4\n''') == '4'\n\nassert solution('''\n5\n1 2\n3 4\n3 5\n4 2\n5\n''') == '3'\n\nassert solution('''\n20\n5 6\n1 2 3 2 4 3 5\n2 2 2 2 2 4 4 5\n1 1 1 1 1 1 1\n2 2 2 2 2 2 2\n2 2 2 2 2 2 2\n2 2 2 2 2 2 2\n1 1 1 1 1 1 1\n2 2 2 2 2 2 2\n2 2 2 2 2 2 2\n2 2 2 2 2 2 2\n''') == '3'"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n4 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n4 5 0 2\n1 3 7\n2 0\n3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n4 5 0 2\n1 3 7\n2 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n7 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4', 'First'\nassert solution('''\n5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4', 'Second'\nassert solution('''\n10\n5 5 3 2 6 7 8 9\n1 3 7\n2 0\n4\n5\n6\n7\n8\n9\n''') == '7', 'Third'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4 5 0 2\\n1 3 7\\n2 0\\n4') == '4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n3 5 7 9 10') == '0'\nassert solution('100\\n101 101 100 101 100 101 100 101 101\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '100'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5 0 2') == '4', \"Wrong\"\nassert solution('1 3 7') == '0', \"Wrong\"\nassert solution('2 0') == '0', \"Wrong\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n4 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n4 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n5\n2 2 2 2 2 2\n0 0\n1 1\n0 0\n1 1\n0 0\n\"\"\") == \"4\""
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\n\"\n    \"4 5 0 2\\n\"\n    \"1 3 7\\n\"\n    \"2 0\\n\"\n    \"4\"\n) == \"4\"\n\nassert solution(\n    \"10\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n\"\n    \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n) == \"4\"\n\nassert solution(\n    \"5\\n\"\n    \"5 0 2 4 1 3\\n\"\n    \"0 0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    \"0 0\\n\"\n    "
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n4 5 0 2\n1 3 7\n2 0\n4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n100\n1000 0 1\n100 100\n1000 100\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO WAY'\nassert solution('2 3\\n3 3\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO WAY'\nassert solution('2 3\\n3 3\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'SUCCESS'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\nWWWW\nWSBB\nWWWW\n''') == \"GO FOR IT\"\nassert solution('''\n4 4\nWWWW\nWSBB\nWWWW\n''') == \"NO CHANCE\"\nassert solution('''\n2 3\n4 4\nWWWW\nWSBB\nWWWW\n''') == \"SUCCESS\"\nassert solution('''\n4 4\nWWWW\nWSBB\nWWWW\n''') == \"NO WAY\"\nassert solution('''\n2 3\n5 5\nBBBB\nSBBB\nBBBB\n''') == \"NO WAY\"\n''')\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"3 3\") == \"NO WAY\"\nassert solution(\"2 4\") == \"NO CHANCE\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'GO FOR IT'\nassert solution('2 3') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWBWG\\nWSBB\\nWWWW\") == \"NO CHANCE\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nWWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nWSBB\\nWSBB\\nWWWW\") == \"GO FOR IT\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'SUCCESS'\nassert solution('4 4') == 'GO FOR IT'\nassert solution('6 6') == 'NO WAY'\nassert solution('1 1') == 'NO WAY'\n\"\"\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\n\n\"\"\""
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG\") == \"GO FOR IT\"\nassert solution(\"2 5\\n6 6\\nWWWWWWWWWWWW\\nSBBSSSSSSSSS\\nWWWWWWWWWWWW\\nWWWWWWWWWWWW\") == \"SUCCESS\"\nassert solution(\"1 2\\n2 2\\nWWWWWWWWWWWWWWWWWWWWWWWWWWWW\") == \"SUCCESS\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'SUCCESS'\nassert solution('2 2\\n3 3\\nWBWG\\nWSBB\\nWWWW') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"3 3\") == \"NO WAY\"\nassert solution(\"4 3\") == \"GO FOR IT\"\nassert solution(\"5 3\") == \"GO FOR IT\"\n\"\"\""
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'\nassert solution('''4 1\n2 2 1\n''') == '2'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2243\"\nassert solution(\"5 900\\n800 700 400 300 200\") == \"2243\"\nprint(\"Tests passed.\")\n\nhttps://www.codewars.com/kata/54495fc9fce3ffac1c0000bd\n\nSo this took me a really long time to figure out, but it was pretty straightforward.\n\nC = (max(C)) // 2\n'''\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 900\\n800 700 400 300 200\\n\") == \"2243\"\nassert solution(\"5 10\\n800 700 400 300 200\\n\") == \"1900\"\nassert solution(\"1 1\\n1\\n\") == \"1\"\nassert solution(\"0 0\\n1\\n\") == \"0\"\nassert solution(\"4 2\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n0 0 0 0\\n\") == \"0\""
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'\nassert solution('''5 1000\n800 700 400 300 200\n''') == '1926'\nassert solution('''5 3000\n800 700 400 300 200\n''') == '3304'"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n900\n800\n700\n''') == '2243'\nassert solution('''\n5 3\n900\n800\n700\n400\n300\n''') == '1900'\nassert solution('''\n7 3\n900\n800\n700\n400\n300\n200\n100\n''') == '1900'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3 5 0 2') == '1'\nassert solution('1 1 1 1 1') == '1'"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4 5\") == \"6\"\nassert solution(\"2 3 4 5\") == \"6\"\nassert solution(\"5 10 5 8\") == \"12\"\nassert solution(\"100 100\") == \"200\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 900\\n800 700 400 300 200\\n\") == \"2243\"\nassert solution(\n    \"5 727\\n900 700 400 300 200\\n\") == \"1943\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 900\n800 700 400 300 200\nSample Output:\n2243''') == '2243'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n? 1 3\\n\") == \"yes\\nno\"\nassert solution(\"5 2\\n? 1 3\\n? 2 3\\n= 1 6\\n? 3 4\\n= 2 4\\n? 4 5\\n= 2 4\\n\") == \"yes\\nno\"\nassert solution(\"10 20\\n? 1 10\\n? 2 1\\n= 1 9\\n? 3 3\\n= 2 9\\n? 4 4\\n= 2 9\\n? 5 5\\n= 1 9\\n? 6 6\\n= 3 9\\n\") == \"yes\\nno\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'no'\nassert solution('10 4') == 'yes'\nassert solution('2') == 'yes'\nassert solution('10') == 'yes'\nassert solution('3') == 'yes'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n2\\n= 1 2\\n= 1 3\\n? 2\\n? 3\\n? 1\\n\") == \"yes\\nno\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'yes\\nyes\\nno\\n'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'yes'\nassert solution('5 4\\n? 1 3\\n= 1 8\\n? 3 8\\n? 1 3\\n') == 'no'\nassert solution('5 3\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'yes'\nassert solution('5 3\\n? 1 3\\n= 1 8\\n= 3 8\\n? 3 8\\n') == 'no'\nassert solution('5 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 3 8\\n') == 'yes'\n\"\"\"\nimport unittest"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4\\n'\n    '3\\n'\n    '= 1 8\\n'\n    '? 1 3\\n'\n    '= 3 8\\n'\n    '? 1 3\\n'\n    'no\\n'\n    'yes\\n'\n    ) == 'yes\\n'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1\\n? 1 3\\n= 1 8\\n? 1 3\\n') == 'yes\\nno\\n'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5\\n? 1 2\\n? 3 4\\n= 2 4\\n= 4 2') == 'yes\\nyes'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'yes\\n'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"no\\nno\\nyes\\n\"\nassert solution(\"10 2\") == \"no\\nno\\nyes\\nno\\nyes\\nyes\\nyes\\nno\\n\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == '2'"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin='''\n1 3\n2\n''') == '3'\n\nassert solution(stdin='''\n5 3\n10 5 4 8 3\n''') == '1'\n\"\"\""
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == '2'\nassert solution('20 2\\n40 50 8 4 3 2 4 5 7 6') == '4'\nprint(\"You're all set!\")"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n10 5 4 8 3''') == '2'\nassert solution('''5 3\n10 2 5 4 8''') == '0'\n'''\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nSample Input:\n10 3\n10 5 4 8 3\nSample Output:\n1\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '3\\n4 5 6\\n') == '4'\nassert solution(\n    '3\\n4 5 6\\n') == '0'\nassert solution(\n    '3\\n3 5 7\\n') == '3'\nassert solution(\n    '3\\n3 5 7\\n') == '0'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n10 5 4 8 3\\n\") == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"1000000000 1 10000000 2 1000000000 3 1000000000 4 1000000000 5\") == \"0\"\nassert solution(\"1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000 1000000000000\") == \"5000000000\""
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == '2'\nassert solution('8 10\\n10 5 4 8 3') == '1'\nassert solution('2 5\\n10 5 4 8 3') == '0'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 127\") == 1083\n\"\"\""
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 127''') == '1083'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1083\", solution(\"1 1\")\n\"\"\"\n\nfrom sys import stdin"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == str(1083)\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0'\nassert solution('1 127') == '1083'"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"8 9\") == \"17\"\nassert solution(\"10 20\") == \"2\"\nassert solution(\"20 10\") == \"2\"\nassert solution(\"100 100\") == \"1\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 127\") == \"1083\"\n\"\"\"\n\nl, r = map(int, input().split())"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 127''') == '1083'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == '1'\nassert solution('1 127') == '1083'"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('1 1') == '1.0000000000'\n'''\n\n\nimport math\nfrom decimal import *\ngetcontext().prec = 100"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n''') == '2.0000000000'\n'''\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '2.0000000000'\nassert solution('3 5') == '1.0000000000'\n\"\"\"\nfrom typing import List\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('1 1') == '0.0'\n\nsolution(\"\"\"\n3 5\n\"\"\"\n)\n\nsolution(\"\"\"\n8 8\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?\n\"\"\")\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == '2.0'\nassert solution('5 10') == '2.9999999999999'\n\"\"\""
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\nHow much is 6 times 9? 42\\nHow much is 9 times 6? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?\") == \"2.0000000000\"\nassert solution(\"5 1\\nWhat is 2 + 2? 4\\nWhat is 5 - 2? 4\\nWhat is 6 * 4? 24\\nWhat is 2 / 4? 1\\nWhat is 5 * 3? 15\\nWhat is 6 + 4? 14\\nWhat is 2 + -5? 2\\nWhat is -2 + 5? -2\\nWhat is -5 / 2? -4\" ) == \"0.5000000000000\""
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('1 0.1') == '0.9999999999'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '2.0'\nassert solution('2 2') == '1.0'\nassert solution('2 3') == '2.0'\nassert solution('2 2.0') == '2.0'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution(\"lion 2 monkey penguin\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin\npenguin 1 monkey\n    \"\"\"\n) == \"POSSIBLE\"\n\nassert solution(\n    \"\"\"\n3 1\nmonkey\nmonkey penguin\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n5 1\nmonkey\nmonkey penguin\nlion\nlion penguin\npenguin\n    \"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n    \"\"\"\n5 1\nmonkey\nmonkey penguin\npenguin\npenguin\nlion\n    \"\"\"\n) == \"FALSE ALARM\"\n\nassert solution(\n    \"\"\"\n10 1\nmonkey\nmonkey penguin\npenguin\npenguin\npenguin\npenguin\nlion\nlion\nlion\nlion\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey\nmonkey"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"POSSIBLE\"\n\"\"\"\n\nimport re\n\nn, m = map(int, input().split())\n\nenclosures = []\nfor i in range(n):\n    enclosures.append(input().split())"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4') == 'POSSIBLE'\nassert solution('3 5') == 'IMPOSSIBLE'\nassert solution('6 4') == 'FALSE ALARM'\n\n\"\"\""
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''3 4\npanda 2 bear 2 snout 3\nbear 4 panda\nsnout 1 panda''') == 'IMPOSSIBLE'\nassert solution('''3 5\nmonkey 1 dog 2 rabbit\ndog 1 monkey\nrabbit 2 monkey''') == 'FALSE ALARM'\nassert solution('''1 1\ndog 1 dog''') == 'FALSE ALARM'\nassert solution('''2 3\nmonkey 2 monkey\nmonkey 2 monkey''') == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\nassert solution(\"0 5\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 5\n3 1\n1 1\n1 5''') == 'POSSIBLE'\n\nassert solution('''3 6\n2 3\n2 1\n1 5''') == 'IMPOSSIBLE'\n\nassert solution('''5 3\n2 3\n1 2\n4 2\n5 1\n4 1''') == 'FALSE ALARM'\n\nassert solution('''4 1\n4 3\n1 3\n3 1\n2 2''') == 'FALSE ALARM'\n\nassert solution('''1 5\n3 1\n1 1\n1 5''') == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"4 6\") == \"IMPOSSIBLE\"\nassert solution(\"5 4\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nmonkey 3 monkey penguin lion\\npenguin 1 monkey\") == \"IMPOSSIBLE\"\nassert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"1 2 3 4 5\") == \"IMPOSSIBLE\"\nassert solution(\"1 3 2 4 5\") == \"POSSIBLE\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4''') == '4(1)4(3)3'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''\n2 3 4 5 6 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8 9 0 1 2 3 4 5 7 8"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100') == 'triple correlation 4(1)4(3)3'\nassert solution('4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2') == 'triple correlation 4(1)4(3)3'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n4 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100\\n') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100\\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\\n8 5 6 7 0 9 7 0 3 6"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 2(1)1(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100 4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100 4 6 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100 4 6 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 6 2 3 2 6 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2 0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7 2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8 8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'triple correlation 4(1)4(3)3 found'\nassert solution('100 0 4 6 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2') == 'random sequence'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n\"\"\") == \"\"\"triple correlation 4(1)4(3)3 found\"\"\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n39\n10\n40''') == '40.5'\nassert solution('''3 1\n39\n10.1\n40\nSample Input:\n2\n3\n4\nSample Output:\n5\n''') == '5'\nassert solution('''2\n2\n2\nSample Input:\n2\n2\n1\nSample Output:\n1\n''') == '1'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 2') == '2'\nassert solution('2 5') == '1.5'\nassert solution('4 6') == '2.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1\\n39 10\\n40') == '40.5'\nassert solution('3 2\\n12 50\\n16 12\\n') == '27.0'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n39 10\\n40 1') == \"40\"\nassert solution('1 1\\n50 1\\n50 1') == \"50\"\nassert solution('2 1\\n25 1\\n50 1') == \"25.5\"\nassert solution('1.5 1\\n25 1\\n50 1') == \"25\"\nassert solution('1.5 1\\n25 1\\n50 1') == \"25\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1\\n39\\n10\\n40') == '40.5'\nassert solution('100 10\\n10 20\\n20 30\\n30 40\\n40 40\\n') == '44.0'\nassert solution('1000000 1\\n1000000 1\\n1000000 1\\n') == '1000000.0'"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 1\n39\n10\n40\n\"\"\") == \"40.5\"\nassert solution(\"\"\"\n3 1\n39.0\n10\n40\n\"\"\") == \"39.5\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4\\n3 4\\n6 2\\n-2 2\\n') == '4.5'\nassert solution('1 9\\n10\\n9\\n-2\\n') == '9.5'\nprint(solution('''75 90\n87 60\n72 95\n82 88\n85 74\n86 97\n88 100\n90 91\n95 74\n98 97\n100 100\n86 88\n86 86\n85 76\n84 66\n83 80\n85 74\n84 100\n79 74\n78 86\n74 91\n73 95\n71 96\n67 76\n63 85\n60 83\n58 86\n55 86\n50 84\n48 86\n46 83\n44 81\n43 75\n43 75\n43 76\n43 73\n43 73\n43 71\n42 63\n41 63\n40 63\n39 63\n38 62\n37 62\n37 62\n36 62\n35 62\n34 62\n33 62\n32 62\n32 62\n32 62\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n32 61\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '2.5'\nassert solution('1 2') == '1.0'\nassert solution('1.7 1.4') == '2.0'\nassert solution('2.5 1.3') == '2.5'\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''3 1\n39\n10\n40''') == '40.5', 'First Test'\n\nassert solution(\n'''5 4\n1.2\n1.6\n1.7\n0.4\n0.8''') == '1.7', 'Second Test'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"3\"\nassert solution(\"1 2 3 4 5 6\") == \"3\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"Impossible\"\nassert solution(\"4 5\") == \"1991\"\nassert solution(\"5 5\") == \"1999\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\\n') == 'Impossible'\nassert solution('5 2\\n1 2 1987\\n2 3 1987\\n3 4 1987\\n4 5 1987\\n1 4 1987') == '2008'\nassert solution('100 10\\n1 2 1987\\n2 3 1987\\n3 4 1987\\n4 5 1987\\n1 4 1987') == '2011'\nassert solution('1000 10\\n1 2 1987\\n2 3 1987\\n3 4 1987\\n4 5 1987\\n1 4 1987') == '2016'"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"Impossible\"\nassert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"2008\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 6\") == \"Impossible\"\nassert solution(\"3 2\") == \"1988\"\nassert solution(\"2 3\") == \"1988\"\nassert solution(\"1 3\") == \"1988\"\nassert solution(\"2 4\") == \"1988\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '1987'\nassert solution('2 4\\n1 2 1987\\n1 3 1987') == '1987'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 6') == 'Impossible'\nassert solution('1 2 3 4 5 6 7 8 9') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 6\") == \"Impossible\"\nassert solution(\"2 7\") == \"2008\"\nprint('check!')\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"2008\"\nassert solution(\"2 3\") == \"Impossible\""
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n\"\"\") == \"21988\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 6') == '2008'\nassert solution('5 6') == '2004'\nassert solution('10 6') == '2011'\nassert solution('0 6') == 'Impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '4 0 1\\n'\n    'N 1 2\\n'\n    'C 1 2\\n'\n    'N 1 3\\n'\n    'C 1 1\\n'\n    ) == 'impossible'\nassert solution(\n    '3 0 1\\n'\n    'N 1 2\\n'\n    'C 1 2\\n'\n    'N 1 3\\n'\n    'C 1 1\\n'\n    ) == '2'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 0 1\nC 1 2\n''') == 'impossible'\n\nassert solution('''\n4 0 1\nC 1 2\n''') == '2'\n\nassert solution('''\n2 0 1\nN 1 2\nC 1 2\n''') == '2'\n\nassert solution('''\n5 0 1\nC 1 2\nC 2 2\nC 1 1\n''') == 'impossible'\n\nassert solution('''\n4 0 1\nN 1 2\nN 1 3\n''') == '3'"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == '3'\nassert solution('''\n3 0 1\nN 1 2\nC 1 2\n''') == 'impossible'\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == '4'\nassert solution('''\n6 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\nN 1 4\nC 1 5\nN 1 6\nC 1 7\n''') == '7'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 0 1\") == \"impossible\"\nassert solution(\"5 0 1 1 1\") == \"2\"\nassert solution(\"5 0 2 1 2\") == \"impossible\"\nassert solution(\"3 1 1 1\") == \"1\"\nassert solution(\"3 2 2 3\") == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 0, 1]) == \"3\"\nassert solution([4, 0, 2]) == \"impossible\"\nassert solution([4, 2, 1]) == \"2\"\nassert solution([4, 2, 3]) == \"impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 0 1') == 'impossible'\nassert solution('4 0 2') == '1'\nassert solution('4 1 0') == 'impossible'\nassert solution('4 1 2') == '2'\nassert solution('4 1 3') == '3'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == \"impossible\"\n\nassert solution('''\n5 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == \"impossible\"\n\nassert solution('''\n5 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == \"3\"\n\nassert solution('''\n5 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == \"impossible\"\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 0 1\\n\"\n    \"N 1 2\\n\"\n    \"C 1 2\\n\"\n    \"N 1 3\\n\"\n    \"C 1 1\\n\"\n) == \"impossible\"\n\nassert solution(\n    \"4 0 1\\n\"\n    \"N 2 3\\n\"\n    \"C 2 1\\n\"\n    \"N 3 4\\n\"\n    \"C 3 2\\n\"\n) == \"impossible\"\n\nassert solution(\n    \"4 0 1\\n\"\n    \"N 3 4\\n\"\n    \"C 3 2\\n\"\n    \"N 1 2\\n\"\n    \"C 1 1\\n\"\n) == \"3\"\n\nassert solution(\n    \"3 0 1\\n\"\n    \"N 1 2\\n\"\n    \"C 1 1\\n\"\n    \"N 2 3\\n\"\n    \"C 2 1\\n\"\n) == \"1\"\n\nassert solution(\n    \"1 0 1\\n\"\n    \"N 1 2\\n\"\n    \"C 1 1\\n\"\n    \"N 2 3\\n\"\n    \"C 2 1\\n\"\n) == \"1\""
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == 0\nassert solution(\"(\") == 1\nassert solution(\")\") == 0\nassert solution(\"()\") == 2\nassert solution(\"()()\") == 4\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 10\nSample Input:\n2\n(((()\n(()))\nSample Output:\n5\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == 0\nassert solution(\"()\") == 0\nassert solution(\"(())\") == 3\nassert solution(\"()()\") == 7\nassert solution(\"(())())\") == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n(((\n)\n))\n''') == '10'\nassert solution('''\n((((\n)\n))\n''') == '8'\nassert solution('''\n()()()\n''') == '6'\nassert solution('''\n()()\n''') == '2'"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0\n''') == '0'\nassert solution('''\n1\n)\n''') == '1'\nassert solution('''\n2\n()\n''') == '2'\nassert solution('''\n3\n(())\n''') == '10'\nassert solution('''\n4\n(())()\n''') == '10'\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n()\n((()\n)()\n''') == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n())\n((()\n''') == 10\n\nassert solution('''\n3\n(\n)\n((()\n''') == 3\n\nassert solution('''\n3\n)\n))\n\nassert solution('''\n3\n(\n)\n\n''') == 4\n\nassert solution('''\n4\n(((((\n)\n)\n)\n))\n\n''') == 11\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '0'\nassert solution('1 2') == '1'\nassert solution('1 ( ) 2') == '1'\nassert solution('1 ( ) 2 ( )') == '1'\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"10\"\n) == \"10\"\n\nprint(solution(\n    \"12\"\n))\n\nassert solution(\n    \"13\"\n) == \"13\"\n\nprint(solution(\n    \"14\"\n))\n\nassert solution(\n    \"15\"\n) == \"15\"\n\nprint(solution(\n    \"16\"\n))\n\nassert solution(\n    \"17\"\n) == \"17\"\n\nprint(solution(\n    \"18\"\n))\n\nassert solution(\n    \"19\"\n) == \"19\"\n\nprint(solution(\n    \"20\"\n))"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"85293\"\nassert solution(\"\"\"\n3\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"696315\"\nassert solution(\"\"\"\n3\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"1808551\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n377\\na\\n455\\nh\\n180\\na\\n211\\na\\n134\\na\\n46\\nh\\n111\\nh\\n213\\nh\\n17\\na\\n15\\n\\n1\\n2\\n1\\n4\\n1\\n4\\n2\\n3\\n2\\n4\\n3\\n5\\n4\\n5\\n6\\n5\\n6\\n7\\n6\\n7\\n8\\n7\\n8\\n') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == '85293', 'Test Case 1 Failed'\nassert solution('16') == '75', 'Test Case 2 Failed'\nassert solution('13') == '4', 'Test Case 3 Failed'\nassert solution('18') == '35', 'Test Case 4 Failed'"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'\n\"\"\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n377\\n455\\n180\\n211\\n134\\n46\\n111\\n213\\n17\\na\\n15\\n1\\n2\\n1\\n4\\n1\\n6\\n2\\n3\\n2\\n4\\n3\\n4\\n4\\n5\\n5\\n6\\n5\\n6\\n7\\n7\\n8\\n7\\n8\\n9\\n7\\n9\\n9\\n9\\n8\\n9\\n') == \"85293\"\n\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n10\\n123456\\n123456\\n12\\n12\\n12\\n13\\n13\\n13\\n\") == \"0\"\nassert solution(\"5\\n1\\n123456\\n123456\\n123456\\n123456\\n123456\\n123456\\n123456\\n\") == \"0\"\nassert solution(\"3\\n1\\n123456\\n123456\\n123456\\n123456\\n123456\\n123456\\n\") == \"0\"\nassert solution(\"3\\n1\\n123456\\n123456\\n123456\\n123456\\n123456\\n123456\\n\") == \"0\"\nassert solution(\"3\\n1\\n123456\\n123456\\n123456\\n123456\\n123456\\n123456\\n\") == \"0\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n9\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9') == '85293'\nassert solution('13') == '81411'\nassert solution('7') == '7317'\nassert solution('14') == '7317'\nassert solution('10') == '7317'\n\n'''"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15') == '85293'\nassert solution('2\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15') == '99999'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n2 5') == '4'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n\"\"\") == \"5\"\nassert solution(\"\"\"\n6 6\n1 2\n1 3\n2 4\n2 3\n3 4\n4 5\n\"\"\") == \"2\"\n\"\"\"\n--- Part Two ---\nConsider again the simple graph $G$. If we repeat the procedure above on this graph, we will eventually arrive at a spanning unicyclic graph.\n\nGiven a graph G, determine its minimum spanning tree (MST), and find its size. Recall that the minimum spanning tree for a graph is a spanning subgraph that has a tree-like topology, and a size of 1. As mentioned before, the size of a graph G is the number of vertices in G minus one.\n\nFor this problem, we will represent a graph G as an adjacency matrix. G's rows and columns correspond to vertices in G, and G[i, j] = 1 if there is an edge between vertex i and vertex j, and 0 otherwise.\n\nGiven a graph G, find its minimum spanning tree (MST). Represent the MST as an adjacency matrix.\n\nFor example, consider the following graph:\n\n-----Input-----\nThe first line of input contains one integer, $T$, representing the number of test cases.\n\nEach test case begins with a single integer, $N$, representing the number of vertices in the graph.\n\nThe next line contains $N$ space-separated integers describing the adjacency matrix of the graph.\n\nThe following $T-1$ lines each describe a test case. Each line contains two integers $u$ and $v$ describing an edge $(u, v)$. The integers $u$ and $v$ are distinct and are less than or equal to $N$.\n\n----Output----\nFor each test case, output one integer, $M$, where $M$ is the size of the MST.\n\nIf the MST cannot be found, output $-1$.\n\nFor example, consider the following graph:\n\n-----Input-----\n2\n4\n1 2\n1 3\n2 4\n-----Output-----\n3\n-1\n\nIn the first test case, the MST is given by the graph:\n\n1 2\n1 3\n2 4\n\"\"\"\nfrom math import sqrt\nfrom itertools import combinations\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 3\\n1 4\\n2 4\") == \"5\"\nassert solution(\"6 5\\n1 2\\n2 3\\n1 4\\n3 4\\n4 5\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\nprint(solution(input()))\n'''\n\n'''\nWhat do you want to do in this problem?\n\nImplement an algorithm that determines whether the graph is a simple undirected graph or not. You can assume that there are no edges that are more than 2 times.\n\nSample Input\n4 5\n1 2\n1 3\n2 3\n1 4\n2 4\nSample Output\nTrue\n\n'''"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n1 2\\n1 3\\n2 3\\n\") == \"4\"\nassert solution(\"5 1\\n1 2\\n1 3\\n2 4\\n3 4\\n\") == \"6\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n3 4\\n\") == \"3\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\"\nassert solution(\"6 4\\n1 2\\n1 3\\n1 4\\n2 4\\n3 4\\n\") == \"0\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 2\\n1 3\\n2 3\") == \"5\"\nassert solution(\"4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\") == \"5\"\n\"\"\"\n\n\"\"\"---Solution---\"\"\""
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n') == '5'\nprint(solution(input()))\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n\"\"\") == \"5\"\nassert solution(\"\"\"\n4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4 5\n1 2\n2 3\n3 4\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5 5\n1 2\n1 3\n2 3\n1 4\n2 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n6 5\n1 2\n1 3\n2 3\n1 4\n2 4\n3 4\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n7 mouse 1 electromouse 5 rat') == '5100'\nassert solution('10\\n4 penguin 10 octopus 10 lemur 5 aaabaaajss\\n3 mouse 1 rabbit 3 fox 5 aaabaaajss\\n2 mouse 1 elephant 3 sheep 5 aaabaaajss') == '5100'\nassert solution('10\\n6 hen 1 turtle 3 worm 4 rat 5 chameleon\\n8 mouse 1 rabbit 2 octopus 5 star 1 elephant 3 sheep 2 fox 2 worm 3\\n2 owl 2 zebra 1 tiger 4 lemur 6 snake 3 lion 2 fox 2 worm 2\\n5 star 1 rabbit 1 snake 3 eagle 4 worm 1 turtle 2 chicken 3 hen 3\\n4 turtle 2 cow 1 goat 5 chicken 3 hen 3\\n3 fish 1 rabbit 2 octopus 3 fly 1 bat 3 goose 1 chameleon 3\\n2 fish 1 octopus 2 cow 2 goat 2 water 3 bat 3 rabbit 1 goat 1 cow 3\\n6 bat 3 rabbit 1 goat 1 fox 2 wolf 4 lion 2 chicken 3 hen 3\\n4 goose 2 fox 1 rabbit 1 chicken 2 cow 3 wolf 2 turtle 1\\n5 bat 3 wolf 1 rabbit 1 chicken 1 octopus 2 chicken 3 rabbit 2 cow 3\\n6 chicken 4 bird 1 rabbit 3 chicken 3 dog 1 bat 3 rabbit 3 rabbit 2\\n3 fish 2 turtle 1 zebra 2 snake 1 fox 1 rabbit 1 goose 2\\n3 eagle 3 rabbit 1 chicken 1 cow 1 bat 1 lion 2 goose 1\\n8 rabbit 1 chicken 1 lion 3 chicken 4 hen 2 snake 1 rabbit 1\\n5 turtle 1 rabbit 2 rabbit 2 rabbit 3 rabbit 3\\n6 rabbit 1 rabbit 4 goose 2 goose 3 rabbit 2 rabbit 2\\n6 fish 1 chicken 1 hen 3 rabbit 1 hen 4\\n7 rabbit 1 rabbit 1 chicken 1 chicken 1 rabbit 1\\n4 fox 1 turtle 1 rabbit 1 fox 2 chicken 2\\n3 rabbit 1 rabbit 1 chicken 1 rabbit 2 rabbit 1\\n7 rabbit 1 rabbit 3 chicken 2\\n1 rabbit 1 rabbit 1 rabbit 2\\n8 rabbit 1 rabbit 4 rabbit 1 rabbit 3\\n8 fish 1 octopus 1 wolf 1 dog 1 dog 1 dog 1 bat 3\\n4 elephant 2 goose 1 rabbit 1 elephant 2 elephant 2\\n5 rabbit 2 rabbit 1 rabbit 1 rabbit 3 rabbit 1\\n1 fish 1 chicken 1 fox 2 chicken 1 chicken 1 chicken 1\\n3 eagle 1 fish 1 rabbit 1 rabbit 3\\n6 rabbit 3 rabbit 4 rabbit 1 rabbit 1\\n5 rabbit 1 rabbit 1 rabbit 1 rabbit 1\\n4 rabbit 1 rabbit 1 rabbit 1 rabbit 3\\n7 fish 1 rabbit 1 rabbit 3\\n2 turtle 1 fish 1 rabbit 1 fish 1\\n3 rabbit 2 rabbit 2 rabbit 3\\n1 rabbit 1 rabbit 1 rabbit 1\\n5 rabbit 1 rabbit 2 rabbit 1\\n2 chicken 1 chicken 2\\n1 chicken 1 chicken 3\\n3 rabbit 1 rabbit 2\\n4 fish 1 rabbit 2\\n3 rabbit 1 rabbit 2\\n6 rabbit 1 rabbit 4\\n2 chicken 1 chicken 3\\n4 chicken 1 chicken 1\\n3 fish 1 fish 1\\n1 fish 1 fish 1\\n1 rabbit 1 rabbit 1\\n3 elephant 1 rabbit 1\\n5 wolf 1 elephant 1\\n3 rabbit 2 rabbit 2\\n3 rabbit 1 rabbit 1\\n7 rabbit 2 rabbit 1\\n2 snake 1 snake 1\\n1 rabbit 1 rabbit 1\\n3 elephant 2 chicken 1\\n4 fish 1 chicken 1\\n2 chicken 2 chicken 3\\n6 rabbit 1 rabbit 4\\n5 rabbit 1 rabbit 1\\n3 rabbit 1 rabbit 1\\n3 rabbit 1 rabbit 3\\n1 chicken 1 chicken 2\\n2 wolf 1 wolf 1\\n6 rabbit 1 rabbit 3\\n4 rabbit 1 rabbit 4\\n3 rabbit 1 rabbit 1\\n3 rabbit 1 rabbit 1\\n2 rabbit 1 rabbit 1\\n4 rabbit 1 rabbit"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\"\n\nassert solution(\"\"\"\n2\n4 caterpillar 1 pupa 3\n5 dove 2 pigeon 2\n2 mouse 3 electromouse 4\n\"\"\") == \"2502\""
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '50000'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n\nassert solution('''\n2\n1 apple\n1 orange\n''') == '1001'\n\nassert solution('''\n3\n3 cat\n5 cower\n5 butterfly\n''') == '3500'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''\n4\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 elephant\n500 elephant\n1000 elephant\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '43000'\n'''\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '3'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '5100'\nassert solution('''5\n4 lion 2 purr 1 dragon 2 raven 1 stone 1 clockwise2\n2 clockwise 2 clockwise3\n3 clockwise1\n2 clockwise2\n1 clockwise 3\n1 clockwise1\n1 clockwise2''') == '28000'\nassert solution('''2\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly''') == '5100'\n\n'''"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n\nassert solution('''3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '10700'\n\nassert solution('''4\n3 butterfly 3 aaabaaajss 2 aaaabaaajss 5\n3 squirrel 2 pupa 7 rabbit 3\n3 mouse 1 electromouse 5 cat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 cat\n2000 aaabaaajss\n2500 elephant\n3000 butterfly\n''') == '45200'"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5500'\nassert solution('''\n4\n4 caterpillar 4 pupa 4 butterfly\n4 dove 3 pigeon 4 aaabaaajss\n4 mouse 1 electromouse 3 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5500'\nassert solution('''\n5\n5 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5500'\nassert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5500'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('10\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '7\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\nassert solution('5\\n5\\n0\\n0\\n0\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\nassert solution('5\\n7\\n0\\n0\\n0\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '7\\n1\\n2\\n3\\n1\\n4\\n5'\nassert solution('4\\n2\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '6'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('3\\n0\\n1 2\\n3\\n0\\n2\\n3\\n') == '-1'\nassert solution('10\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '11'"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('6\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n') == '-1\\n'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n''') == '6'\nprint(solution('''\n4\n1 0\n2 0\n3 0\n4 0\n'''))\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\"\"\"\n3\n2\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"4\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\"\"\"\n2\n3\n1\n1\n1\n1\n3\n1\n4\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"4\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\"\"\"\n2\n2\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n1\n1\n2\n3\n2\n3\n4\n5\n6\n7\n8\n3\n4\n''') == '1,2,3,1,4,5,6,7,8'\nprint(solution('''\n10\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\nSample Output:\n1,2,3,1,4,5,6,7,8\n''') == '1,2,3,1,4,5,6,7,8')\nprint(solution('''\n8\n2\n1\n2\n2\n1\n4\n1\n4\n2\n2\n''') == '-1')\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 R 6\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2 1 2 1\n2 1 O 3\n1 2 R 5\n1 2 R 6\n''') == '10'\nassert solution('''\n2\n1 2 1 2 1\n2 1 O 3\n1 2 R 5\n1 2 R 6\n''') == '9'\nassert solution('''\n2\n1 2 1 2 1\n1 2 O 3\n1 2 R 5\n1 2 R 6\n''') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n1 2 R 6\n''') == '10'\nassert solution('''\n3 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n1 2 O 6\n2 1 O 3\n2 1 R 5\n2 1 O 3\n2 1 R 6\n''') == '30'\nassert solution('''\n4 5\n1 2 1 2 1\n4\n1 2 R 5\n1 2 O 3\n1 2 R 6\n''') == '15'\nassert solution('''\n1 5\n1 2 1 2 1\n2\n2 1 O 3\n2 1 R 5\n2 1 O 3\n2 1 R 6\n''') == '30'\nassert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 5\n1 2 O 3\n1 2 R 6\n''') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 2 1') == '10'\nassert solution('2 5') == '10'"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\nassert solution('''\n3 1\n1 1 O\n1 1 R\n''') == '1'\nassert solution('''\n3 2\n1 1 O\n1 1 R\n1 2 O\n''') == '1'\n'''\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2 1 2 1\\n4\") == \"10\"\nassert solution(\"2 5\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\nSample Output:\") == \"10\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5\\n0 1 2 3 4\\n1 3\\n2 4\\n3 0\\n') == '1'\nassert solution('5 1\\n0 1\\n1 0\\n1 2\\n2 1\\n') == '1'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '1'\nassert solution('4 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 1') == '3'\nassert solution('3 1') == '3'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == \"1\"\nassert solution('4 2') == \"2\"\nassert solution('5 2') == \"5\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n1 2\\n3 5\") == \"1\"\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 1\n2 1\n2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4\n0 1\n1 2\n2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 6\n0 1\n1 2\n2 3\n3 4\n4 5\n5 6\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 3\n0 1\n1 2\n2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 4\n0 1\n1 2\n2 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4 4\n0 1\n1 2\n2 3\n3 4\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n3 3\n0 1\n1 2\n2 3\n\"\"\") == \"4\""
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '5'\nassert solution('10 10') == '10'\nassert solution('5 2') == '5'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 8') == '6'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n0 1\n2 3\n''') == '1'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 2\n1 0\n''') == '2'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n') == '0.962962962963'"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '0.962962962963'\nassert solution('16') == '0.9900640008738'\n\"\"\"\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n2\n3\n1\n4\n5\nSample Input 2:\n6\n5\n4\n3\n2\n1\nSample Output 2:\n1.00000\n''') == '1.00000', 'First'\nassert solution('''5\n1\n2\n3\n4\n5\nSample Output 2:\n0.962962962963\n''') == '0.962962962963', 'Second'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4') == '0.962962962963'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '0.962962962963'\nassert solution('6') == '0.5'\nassert solution('10') == '0.7'\nassert solution('100') == '0.01'\nassert solution('1000') == '0.001'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '0.962962962963'\nassert solution('2') == '0.5'\nassert solution('8') == '0.00125513204467371741'\nassert solution('123456789012345678901') == '0.007426578959588042'"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0.962962962963'\nassert solution('10') == '0.99959962989'\nassert solution('12') == '0.988173506692'\nassert solution('14') == '0.988173506692'\nassert solution('20') == '0.9990000000000'\n\n---\n\nThe probability of the last example is 0.988173506692 (approx).\n\nAt every place in the road network, one city picked uniformly at random another city to which it built a road. There are a total of $N$ roads connecting each city.\n\nThe probability of building a road connecting any pair of cities is 1/N. The probability that the roads end up connected is the sum of the probabilities of each pair of roads.\n\nThe sum of the probabilities is: 0.962962962963 = (0.988173506692 + 0.988173506692 + 0.988173506692 + 0.988173506692)/2.\n\"\"\""
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '0.962962962963'\nassert solution('5\\n') == '0.952447782782'\nassert solution('10\\n') == '0.943276824378'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '0.962962962963'\nassert solution('5') == '0.9999999999999'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0.962962962963\"\nassert solution(\"5\") == \"0.945950038776\"\nassert solution(\"10\") == \"0.941748344709\"\nassert solution(\"100\") == \"0.937107819726\"\nassert solution(\"1000\") == \"0.936965694101\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('3\\n0\\n3') == '0 0\\n40000000 0\\n0 40000000'"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0 0\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2 0'\nassert solution('3') == '0 0 2'\nassert solution('3') == '0 0 2'\n\"\"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0 0'\nassert solution('2') == '0 0'\nassert solution('3') == '0 0'\n\n'''"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0 0\\n' + \\\n    '40000000 0\\n' + \\\n    '0 40000000\\n', \\\n    solution('3')\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000\\n'\n\"\"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0 0\\n40000000 0\\n0 40000000\\n\", \"sample test case\"\nassert solution(\"4\") == \"0 0\\n40000000 0\\n0 40000000\\n0 30000000\\n40000000 30000000\", \"another sample test case\""
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2\n\"\"\"\n) == \"0 0\\n40000000 0\""
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '0 0\\n0 40000000\\n0 40000000\\n40000000 0\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '0 0'\nassert solution('3') == '0 40000000'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('1 2 3') == 'Impossible'\nassert solution('1 3 2') == '2'\nassert solution('1 3 2 3') == 'Impossible'\nassert solution('1 2 3 2 3') == '3'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('5 5 5 2') == 'impossible'\n\"\"\""
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5 5 2''') == '1'\nassert solution('''6 5 6 2''') == '1'\nassert solution('''0 6 5 6 2''') == 'impossible'\nassert solution('''2 6 5 6 2''') == 'impossible'\nassert solution('''2 3 6 5 6 2''') == '2'"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 5 5 2\n''') == '1'\n\nassert solution('''\n8 1 9 7\n''') == '2'\n\nassert solution('''\n10 5 5 5\n''') == '0'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 4') == '1'\nassert solution('1 4 1') == '3'\nassert solution('1 1 1') == '2'\nassert solution('1 1 1') == 'impossible'"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 4 5 2') == '3*4+5*2'\nassert solution('1 3 5 3') == '1+3*5'\nassert solution('2 3 3') == '2+3'\nassert solution('3 4 4 4') == '3+4*4'\n\n'''\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"5 5 5 2\") == \"0\"\nassert solution(\"5 5 5 5\") == \"impossible\"\n\nInput:\n3 2 4 4 5 5 2\n\nOutput:\n4"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 5 2') == \"1\"\nassert solution('3 5 5') == \"impossible\"\nassert solution('2 3 4 5') == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 6 5 2') == '2'\nassert solution('5 2 2 4') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"6 5 5 2\") == \"2\"\nassert solution(\"20 5 5 2\") == \"impossible\""
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 3 5 5\") == \"2\"\nassert solution(\"10 8 4 -10\") == \"0\"\nassert solution(\"7 10 1 -5\") == \"0\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\n\nassert solution('''20 3 5 5\n1 1 0\n1 -10 0\n30 0 0\n0 0 0''') == '3'\n\nassert solution('''20 3 5 5\n-1 1 0\n1 -10 0\n30 0 0\n0 0 0''') == '1'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '2'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '3'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '3'\nassert solution('''30 3 3 3\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\nassert solution('''20 3 3 3\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n''') == '3'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n\"\"\") == \"2\"\nprint(solution(\"\"\"100 1000 100 100\n0 0 0\n0 -10 0\n-100 0 0\n0 0 0\n\"\"\") == \"0\")\nprint(solution(\"\"\"10000 100000 100000 100000\n0 0 0\n0 -10 0\n-100 0 0\n0 0 0\n\"\"\") == \"0\")\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '2'\nassert solution('''20 10 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '1'\nassert solution('''20 10 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0''') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n\"\"\"\n    ) == \"2\"\n    assert solution(\n        \"\"\"\n20 4 3 5\n-20 -10 0\n0 0 0\n-20 0 0\n-10 0 0\n\"\"\"\n    ) == \"2\"\n    assert solution(\n        \"\"\"\n20 2 3 5\n0 -10 0\n0 0 0\n0 0 0\n\"\"\"\n    ) == \"0\"\n    assert solution(\n        \"\"\"\n20 5 3 5\n-20 -10 0\n-20 0 0\n-10 0 0\n\"\"\"\n    ) == \"0\"\n    assert solution(\n        \"\"\"\n20 10 3 5\n-20 -10 0\n-20 0 0\n-10 0 0\n\"\"\"\n    ) == \"0\"\n    "
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 3 5 5\\n') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 3 5 5\\n') == '2'\nassert solution('20 5 3 5\\n') == '3'\nassert solution('100 50 5 5\\n') == '0'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 3 5 5\") == \"2\"\nassert solution(\"100 50 5 5\") == \"3\"\nassert solution(\"100 50 5 5\") == \"3\"\nassert solution(\"5 1 1 1\") == \"0\"\nassert solution(\"0 0 0\") == \"0\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"13\") == \"12 14\"\nassert solution(\"1\") == \"1\"\nassert solution(\"23\") == \"10\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip()"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '5 6 7 8 9 10'\nassert solution('1') == '1'\nassert solution('-1') == '1'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3 5'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('123') == '12 14'\nassert solution('1234') == '12 14'\nassert solution('11112221') == '11 112 221'\nassert solution('1111222') == '11 112 222'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '11'\nassert solution('111') == '111'\nassert solution('1234') == '1234'\nassert solution('12321') == '1234'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 8') == '4 6'\nassert solution('9 10') == '10 16'\nassert solution('18 17') == '16 18'\nassert solution('10 20') == '16 20'\nassert solution('13 7') == '12 14'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n3\n5\n\"\"\") == \"14\"\nassert solution(\"\"\"\n100000\n\"\"\") == \"100000\"\nassert solution(\"\"\"\n15\n12\n34\n\"\"\") == \"16\"\nassert solution(\"\"\"\n13\n13\n25\n\"\"\") == \"14\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '12'\nassert solution('93') == '14'\nassert solution('0') == '0'\nassert solution('5233') == '1214'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0'\nassert solution('5\\n0 0 1\\n0 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '2'\nassert solution('4\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0') == '1'\nassert solution('3\\n0 0 1\\n0 0 1\\n0 0 1') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0'\nassert solution('100\\n0 0 0\\n1 1 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '2'\n\nassert solution('''\n5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n''') == '1'\n\nassert solution('''\n5\n1 0 0\n1 0 1\n3 0 0\n3 0 1\n3 0 0\n''') == '1'\n\nassert solution('''\n4\n1 0 0\n1 1 1\n2 0 0\n2 1 1\n3 0 0\n3 1 1\n''') == '1'\n\nassert solution('''\n4\n1 1 1\n1 0 0\n2 1 1\n2 0 0\n3 1 1\n3 0 0\n''') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0'\nassert solution('5\\n1 1 1\\n1 0 1\\n3 0 1\\n3 1 1\\n3 0 0\\n3 1 1') == '1'\nassert solution('2\\n1 0 0\\n1 1 1') == '0'\nassert solution('10\\n1 0 1\\n1 0 1\\n1 0 1\\n1 1 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 1 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 1 1\\n1 0 1\\n1 0 1\\n1 1 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n1 0 1\\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0'\nassert solution(\"0 0 0\") == '1'\nassert solution(\"1 0 0\") == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0'\nassert solution('1 0 0') == '1'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\""
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '1'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '3'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '3'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution([1, 0, 0]) == '1'\nassert solution([1, 0, 1]) == '0'\nassert solution([3, 0, 1]) == '1'\nassert solution([3, 0, 0]) == '0'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('8 5') == '1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n''') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n', 'Should return a tour such that every square is visited exactly once'\nassert solution('''\n2 3\n1 1\n1 2\n2 3\n''') == '-1\\n', 'There is no such tour'"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('6 6') == '4 4\\n3 4\\n3 5\\n4 4\\n4 5\\n4 6\\n5 4\\n5 5\\n5 6'\nassert solution('5 5') == '1 2\\n1 3\\n1 4\\n2 1\\n2 2\\n2 3\\n2 4'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\""
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n1 1\n2 2\n1 3\n2 1\n1 2\n2 3\n''') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nprint('All tests passed!')\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n''') == '2 2\\n'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333'\nassert solution('''3 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333'\nassert solution('''3 10\n0 10 1\n0 10 1\n0 10 1''') == '3.33333333'\nassert solution('''2 10\n0 10 1\n0 10 1''') == '0.6666666667'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10') == '3.33333333'\nassert solution('0 10 1') == '0.9'\nassert solution('0 10 1') == '0.9'\nassert solution('0 10 1') == '0.9'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n0 10 1\n0 10 1\n''') == '0.33333333333333333333333333333'\n\nassert solution('''\n2 3\n0 10 1\n0 10 1\n''') == '0.33333333333333333333333333333'\n\nassert solution('''\n3 5\n0 10 1\n0 10 1\n0 10 1\n''') == '0.33333333333333333333333333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 10\n0 10 1\n0 10 1\n0 10 1\n''') == \"3.33333333\"\nassert solution('''\n3 10\n0 10 1\n0 10 2\n0 10 3\n''') == \"3.33333333\""
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 10\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == \"3.33333333\"\nassert solution(\"\"\"\n3 3\n0 5 1\n0 5 2\n0 5 4\n\"\"\") == \"1.666666667\"\nassert solution(\"\"\"\n3 3\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == \"1.33333333\"\nassert solution(\"\"\"\n3 4\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == \"2.4\"\n\nNote that, in the second sample, the first species gets 2/3 of the bandwidth. The third species gets 2/3 of the bandwidth. The fourth species gets 2/3 of the bandwidth.\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10') == '3.33333333'\nassert solution('5 10') == '5.0'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 10\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == \"3.33333333\"\nassert solution(\"\"\"\n3 10\n0 10 1\n0 10 1\n0 10 1\n\"\"\") == \"3.33333333\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10\\n0 10 1\\n0 10 1\\n0 10 1') == '3.33333333'\nassert solution('3 50\\n15 50 1\\n10 50 1\\n15 50 1') == '2.0'"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333'\n\nassert solution('''\n4 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333'\n\nassert solution('''\n4 10\n0 10 1\n0 10 1\n1 10 2\n''') == '2.666666667'\n\nassert solution('''\n4 10\n0 10 1\n0 10 1\n1 10 2\n''') == '2.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == '3.33333333'\nassert solution('3 3') == '2.33333333'\nassert solution('3 2') == '1.66666667'\nassert solution('3 1') == '0.83333333'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 3\n1 2''') == '0'\nassert solution('''4\n3 3 1 2\n1 3 1 2''') == '1'\nassert solution('''5\n3 3 3 3 2\n3 3 2 1 2''') == '0'\nassert solution('''8\n2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2''') == '0'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('15') == '5'\nassert solution('20') == '6'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3\\n1 3 2\") == \"1\"\nassert solution(\"3\\n1 3 2\\n3 3 2\") == \"1\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2 1 2\n''') == '1'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('10') == '2'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n1\n3\n2\n'''\n) == '1'\n\nassert solution(\n'''\n2\n2 2 2\n'''\n) == '1'\n\nassert solution(\n'''\n10\n1520 2 2 2 2 2 2 2 2 2 2 2 2 2\n'''\n) == '1'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n3 3 2') == '1'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3\\n') == '1'\nassert solution('2\\n1 3\\n') == '2'\nassert solution('3\\n1 2\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aba\naba''') == '2'\nassert solution('''aba\naa''') == '2'\nassert solution('''aba\naba''') == '1'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"5 5\") == \"10\"\n\"\"\""
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\nabba\n''') == '2'\n\"\"\""
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '1\\n\\nabba\\n\\n\\n') == '2'\nassert solution(\n    '2\\n\\nbbba\\n\\n\\n') == '3'\nassert solution(\n    '3\\n\\nbbba\\n\\n\\n') == '3'\nassert solution(\n    '4\\n\\nbbba\\n\\n\\n') == '1'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 2\nabba\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 2\na\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 2\na\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 2\naba\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1'\nassert solution('2 3 4') == '0'\nassert solution('2 2 2') == '1'\nassert solution('3 2') == '3'\nassert solution('3 4') == '4'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('abba') == '2'\nassert solution('abc') == '1'\nassert solution('bab') == '1'\nassert solution('ab') == '1'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '3'\nassert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('10 3') == '4'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n2 3\n2 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n8 3\n1 2\n3 4\n5 6\n7 8\n4 5\n6 7\n7 6\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n100 100\n1 2\n2 5\n3 4\n4 2\n5 3\n6 7\n7 8\n8 3\n9 4\n10 10\n11 11\n12 12\n13 13\n14 14\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n66 67\n67 68\n68 69\n69 70\n70 71\n71 72\n72 73\n73 74\n74 75\n75 76\n76 77\n77 78\n78 79\n79 80\n80 81\n81 82\n82 83\n83 84\n84 85\n85 86\n86 87\n87 88\n88 89\n89 90\n90 91\n91 92\n92 93\n93 94\n94 95\n95 96\n96 97\n97 98\n98 99\n99 100\n\"\"\") == \"14\""
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 3') == '2'\n\n'''\n\nn, m = list(map(int, input().split()))\nbills = sorted(list(map(int, input().split())))\ncount = 0\nfor bill in bills:\n    count += 1\n    for bill2 in bills:\n        if bill <= bill2:\n            break\n        count += 1\nprint(count)"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n2 3\\n2 4\\n') == \"3\"\nassert solution('4 3\\n1 2\\n2 3\\n2 4\\n') == \"3\"\nprint(solution(''))\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1\n1 2\n2 3\n1 2''') == \"3\"\nassert solution('''3 2\n1 2\n1 3\n1 2''') == \"2\"\nassert solution('''3 3\n1 2\n1 3\n1 2''') == \"2\"\n\n'''\n\nimport sys\nimport math"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 4') == '4'\nassert solution('8 3') == '0'\nprint('PASSED')"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n3 4') == '3'\nassert solution('4 2\\n3 4\\n1 3\\n2 1\\n1 2') == '2'"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n2 4\\n') == '3'\nassert solution('5 3\\n1 2\\n2 3\\n3 4\\n3 5\\n') == '4'\nassert solution('1\\n2\\n') == '1'\nassert solution('1 2\\n2 3\\n') == '3'\nassert solution('2 1\\n1 2\\n2 3\\n3 4\\n3 5\\n') == '4'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''5\n3\n1 2\n2 3\n2 4\n2 5\n''') == '4'\nassert solution('''5\n3\n1 2\n2 3\n2 4\n2 5\n''') == '5'\nassert solution('''5\n1\n1 2\n2 3\n2 4\n2 5\n''') == '4'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n2 3\n2 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 3\n1 2\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 3\n1 2\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"4\"\n\"\"\""
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0\\n1\\n2\\n') == '1'\nassert solution('1\\n0\\n10\\n2\\n') == '0'\nassert solution('1\\n0\\n10\\n10\\n') == '1'\nassert solution('1\\n0\\n10\\n10\\n') == '0'\nassert solution('1\\n0\\n10\\n10\\n') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n') == '1'\nassert solution('1000000 10000000\\n1000000 10000000\\n') == '0'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n0 1\n0 1\n1 3\n2 3\n''') == '0'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n') == '1'\nassert solution('2 3\\n1 3\\n2 3\\n') == '1'\nassert solution('5 3\\n1 3\\n2 3\\n3 4\\n4 5\\n') == '0'"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\n1 2\\n') == '0'\nassert solution('2 1\\n1 2\\n') == '0'\nassert solution('2 1\\n1 2\\n') == '0'\nassert solution('3 2\\n1 0\\n0 1\\n1 3\\n2 3\\n') == '1'\nassert solution('3 2\\n1 0\\n0 1\\n1 3\\n2 3\\n') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3') == '1'\nassert solution('3 2\\n0 0\\n0 1\\n1 3\\n1 3\\n1 3\\n2 3\\n2 2\\n2 4\\n2 2\\n2 2\\n1 4\\n1 4\\n1 4\\n2 4\\n2 4\\n1 4\\n1 4') == '1'\n\n\"\"\""
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n0 1\\n1 3\\n2 3\\n') == '1'\nassert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n') == '0'\nassert solution('10 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '0'\nassert solution('4 3\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '1'\nassert solution('7 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n') == '1'\nassert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n') == '0'\nassert solution('3 2\\n2 2\\n0 1\\n0 2\\n1 1\\n0 1\\n1 3\\n2 3\\n') == '0'\nassert solution('3 2\\n2 2\\n0 1\\n0 2\\n1 1\\n0 1\\n1 3\\n2 3\\n') == '1'\nassert solution('3 2\\n2 2\\n0 1\\n0 2\\n1 1\\n0 1\\n1 3\\n2 3\\n') == '0'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1'\nassert solution('''\n4 2\n1 0\n0 1\n10 10\n3 3\n2 3\n''') == '1'\nassert solution('''\n4 2\n10 10\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '0'\nassert solution('''\n3 3\n10 10\n-10 -10\n-10 -10\n''') == '-1'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\\n0\\n\""
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '7'\nassert solution('3 2 2') == '5'\nassert solution('5 2 1') == '7'\nassert solution('3 2 1') == '3'\nassert solution('1 2 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"7\"\nassert solution(\"\"\"\n6\n1 2 3\n2 4 4\n4 5 6\n5 5 5\n2 5 5\n5 4 4\n5 4 4\n\"\"\") == \"14\"\nassert solution(\"\"\"\n2\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n6\n1 2 3\n2 4 4\n4 5 6\n5 5 5\n2 5 5\n5 4 4\n5 4 4\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '7'\nassert solution('1 2 3') == '7'\nassert solution('3 2 2') == '9'\nassert solution('5 2 1') == '7'\nassert solution('3 2 1') == '8'\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\n'''\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"7\"\nassert solution(\"3 2 2\") == \"5\"\nassert solution(\"5 2 1\") == \"7\"\nassert solution(\"3 2 1\") == \"4\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '7'\nassert solution('3 2 2') == '3'\nassert solution('5 2 1') == '4'\nassert solution('3 2 1') == '1'\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\n\nimport os\nimport sys\nfrom io import BytesIO, IOBase\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == \"7\""
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\n\") == \"20\"\n\nassert solution(\"4 5\\nlinearalgebra 10\\ncalculus1 10\\nhonorsanalysis1 50\\ncalculus2 20\\n\") == \"20\"\n\nassert solution(\"8 5\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\ncalculus3 20\\nhonorsanalysis2 100\\n\") == \"50\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '20'\nassert solution('''\n5 4\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\ncalculus3 30\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '70'\nassert solution('''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '70'\nassert solution('''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '70'\nassert solution('''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '70'\n'''\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '20'\nassert solution('10 10') == '10'\nassert solution('10 100') == '100'\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '20'\nassert solution('5 20') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '20'\nassert solution('10') == '10'\nassert solution('10 20 30 40 50') == '30'\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '20'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n\"\"\"\n) == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '20'\n\nassert solution('''\n6 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '150'\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n''') == '20'\nassert solution('''\n2 4\nalgebra 4\nlinearalgebra 3\nmath 5\n''') == '7'\n'''\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\") == \"6\""
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n1 2 3 4 5\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n3') == '6'\nassert solution('5 3\\n2 4 4 3\\n1 3 2 1\\n2 3 1 1\\n2 3 1 1\\n3 3 1 1') == '8'\nassert solution('5 3\\n1 2 2 2\\n2 2 2 3\\n1 3 2 3\\n2 3 1 2\\n1 3 1 1\\n3 2 3 3\\n3 2 2 3\\n3') == '0'"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5 5\n1 1 2\n2 2 3\n3 3 4\n4 4 5\n5 5 3\n\"\"\") == \"11\"\nassert solution(\"\"\"\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\") == \"14\"\nassert solution(\"\"\"\n3 3\n2 2\n2 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\") == \"6\"\n\nassert solution(\n\"\"\"\n2 3\n1 2 3\n3 3 3\n3\n1 2 3\n3 3 3\n2 2 2\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution('''\n10 2\n10 6\n2 3\n3 5\n5 4\n4 7\n7 9\n1 8\n8 9\n5 10\n9 10\n10 1\n10 5\n5 9\n''') == '8'\nassert solution('''\n30 10\n30 20\n10 30\n10 20\n20 30\n30 20\n20 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n30 30\n30 10\n30 30\n30 20\n30 20\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4') == '6'\nassert solution('2 1 2') == '1'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '2'\nassert solution('5 4') == '6'\nassert solution('9 8') == '1'\nassert solution('8 4') == '1'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '6'\nassert solution('5 5') == '8'\nassert solution('5 10') == '11'\nassert solution('6 6') == '12'\nassert solution('6 7') == '6'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1 1\n2\n3\n1 2\n2 3 1''') == 'impossible'\nassert solution('''4 2 3\n1 2\n2 3\n2 4\n1 5\n5 4''') == '1'\nassert solution('''3 3\n3 4\n2 3\n1 2''') == 'impossible'\nassert solution('''2 4\n1 2\n2 3\n3 4\n''') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''\n3\n4\n1 2\n2 3 1\n1 1\n''') == 'impossible'\nassert solution('''\n3\n1\n2\n1 1\n''') == 'impossible'\nassert solution('''\n6\n7\n1 2\n2 3 1\n1 1\n4 5 2\n5 6 3\n''') == 'impossible'\nassert solution('''\n12\n10\n9 3 5 6\n4 5 5 6\n7 8 5 6\n5 2 7 5\n7 8 9 2\n5 6 9 8\n8 2 6 8\n8 2 2 2\n6 9 5 7\n2 8 8 5\n8 2 5 2\n''') == '1'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1') == '2'\nassert solution('3 3 3\\n3\\n2\\n2 3 1\\n2 1 2\\n3 2\\n2 1\\n2\\n1 3') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\") == \"impossible\"\nassert solution(\"3 2\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3 1 2 1\") == \"impossible\"\nassert solution(\"3 2 3 2\") == \"impossible\""
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n3 2 2\n1 2\n1 1\n1 2\n\"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n1 2\n1 1\n\"\"\"\n) == \"impossible\"\nassert solution(\n    \"\"\"\n2\n2\n\"\"\"\n) == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 1') == '2'\nassert solution('3 3 1') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 1 1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"1 2\\n\"\n    \"2 3 1\\n\"\n) == \"impossible\"\n\nassert solution(\n    \"5 1 1\\n\"\n    \"3\\n\"\n    \"1 2 3\\n\"\n    \"2 3\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n    \"1 2\\n\"\n) == \"4\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 2 1\n1 3\n1 2\n\"\"\") == \"impossible\"\n\n'''"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 1 1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"1 2\\n\"\n    \"2 3 1\\n\"\n    \"1 1\"\n) == \"2\"\nassert solution(\n    \"3 2\\n\"\n    \"1\\n\"\n    \"3\"\n) == \"impossible\"\nassert solution(\n    \"3 1 1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"1 2\\n\"\n    \"2 3 1\\n\"\n    \"1 1\"\n) == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == \"2\"\nassert solution('''\n10 6 1\n4 5\n1 2\n2 3\n4 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n65 67\n65 68\n66 69\n66 70\n66 71\n66 72\n67 73\n67 74\n67 75\n67 76\n66 77\n66 78\n65 79\n65 80\n64 81\n64 82\n63 83\n63 84\n62 85\n62 86\n61 87\n61 88\n60 89\n60 90\n59 91\n59 92\n58 93\n58 94\n57 95\n57 96\n56 97\n56 98\n55 99\n55 100\n54 101\n54 102\n53 103\n53 104\n52 105\n52 106\n51 107\n51 108\n50 109\n50 110\n49 111\n49 112\n48 113\n48 114\n47 115\n47 116\n46 117\n46 118\n45 119\n45 120\n44 121\n44 122\n43 123\n43 124\n42 125\n42 126\n41 127\n41 128\n40 129\n40 130\n39 131\n39 132\n38 133\n38 134\n37 135\n37 136\n36 137\n36 138\n35 139\n35 140\n34 141\n34 142\n33 143\n33 144\n32 145\n32 146\n31 147\n31 148\n30 149\n30 150\n29 151\n29 152\n28 153\n28 154\n27 155\n27 156\n26 157\n26 158\n25 159\n25 160\n24 161\n24 162\n23 163\n23 164\n22 165\n22 166\n21 167\n21 168\n20 169\n20 170\n19 171\n19 172\n18 173\n18 174\n17 175\n17 176\n16 177\n16 178\n15 179\n15 180\n14 181\n14 182\n13 183\n13 184\n12 185\n12 186\n11 187\n11 188\n10 189\n10 190\n9 191\n9 192\n8 193\n8 194\n7 195\n7 196\n6 197\n6 198\n5 199\n5 200\n4 201\n4 202\n4 203\n4 204\n4 205\n3 206\n3 207\n3 208\n3 209\n3 210\n3 211\n3 212\n3 213\n3 214\n3 215\n3 216\n2 217\n2 218\n2 219\n2 220\n2 221\n2 222\n2 223\n2 224\n2 225\n2 226\n2 227\n2 228\n2 229\n2 230\n2 231\n2 232\n2 233\n2 234\n2 235\n2 236\n2 237\n2 238\n2 239\n2 240\n2 241\n2 242\n2 243\n2 244\n2 245\n2 246\n2 247\n2 248\n2 249\n2 250\n2 251\n2 252\n2 253\n2 254\n2 255\n2 256\n2 257\n2 258\n2 259\n2 260\n2 261\n2 262\n2 263\n2 264\n2 265\n2 266\n2 267\n2 268\n2 269\n2 270\n2 271\n2 272\n2 273\n2 274\n2 275\n2 276\n2 277\n2 278\n2 279\n2 280\n2 281\n2 282\n2 283\n2 284\n2 285\n2 286\n2 287\n2 288\n2 289\n2 290\n2 291\n2 292\n2 293\n2 294\n2 295\n2 296\n2 297\n2 298\n2 299\n2 300\n2 301\n2 302\n2 303\n2 304\n2 305\n2 306\n2 307\n2 308\n2 309\n2 310\n2 311\n2 312\n2 313\n2 314\n2 315\n2 316\n2 317\n2 318\n2 319\n2 320\n2 321\n2 322\n2 323\n2 324\n2 325\n2 326\n2 327\n2 328\n2 329\n2 330\n2 331\n2 332\n2 333\n2 334\n2 335\n2 336\n2 337\n2 338\n2 339\n2 340\n2 341\n2 342\n2 343\n2 344\n2 345\n2 346\n2 347\n2 348\n2 349\n2 350\n2 351\n2 352\n2 353\n2 354\n2 355\n2 356\n2 357\n2 358\n2 359\n2 360\n2 361\n2 362\n2 363\n2 364\n2 365\n2 366\n2 367\n2 368\n2 369\n2 370\n2 371\n2 372\n2 373\n2 374\n2 375\n2 376\n2 377\n2 378\n2 379\n2 380\n2"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '500.00'\n\nassert solution('2') == '200.00'\n\nassert solution('4') == '125.00'\n\nassert solution('20') == '500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n250 250\n250 750\n''') == '500.00'\n\nassert solution('''\n2\n100 100\n250 250\n''') == '500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '500.00'\nassert solution('10') == '1490.00'\nassert solution('200') == '2000.00'\nassert solution('1000') == '2000.00'\nassert solution('1000') == '1000.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"500.00\"\nassert solution(\"10\") == \"600.00\""
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '400.00'\nassert solution('1') == '1.00'"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n250 250\\n250 750\\n') == '500.00'\nprint('Tests passed!')\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n250 250\n250 750\n''') == '500.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '500.00'\nassert solution('4') == '1000000.00'\nprint(solution(input()))"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3\\n2 2\\n1 1\\n0.001\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1') == '0.5'\nassert solution('2\\n7\\n0 0\\n0 0\\n2 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n''') == '500.00'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == \"0\"\nassert solution('1 2\\n1 100 100\\n100 1 100') == \"100\""
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 4') == '2'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '0'\nassert solution('2 3\\n100 10\\n100 1 10') == '0'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n2 3\n2 100 10\n100 1 10\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n2 3\n10 100 10\n100 1 10\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n5 3\n5 100 10\n100 1 10\n100 2 10\n100 3 10\n\"\"\") == \"300\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '0'\nassert solution('4 4') == '4'\nassert solution('1 1') == '1'\nassert solution('2 100 10') == '0'\nassert solution('100 1 10') == '1'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '2'\nassert solution('5 3') == '10'\nassert solution('10 20') == '26'\n\n'''\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"10 8\") == \"65\""
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 1\") == \"1\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '0'\nassert solution('2 100 10') == '0'\nassert solution('100 1 10') == '5'\nassert solution('3 3') == '10'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n2 100 10\n100 1 10\n''') == '0'\nassert solution('''\n1 1\n3\n4\n''') == '4'\nassert solution('''\n2 1\n4\n2\n''') == '3'\nassert solution('''\n4 1\n1\n10\n100\n4\n''') == '0'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 3 2\") == \"1\"\nassert solution(\"9 9 9 9\") == \"9\"\nassert solution(\"3 3 3 3\") == \"4\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"80 50 3 2\\n\"\n    \"75 5 25 20 50 35\"\n) == \"2\"\n\nassert solution(\n    \"30 50 10 5\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"100 100 100 100\\n\"\n    \"50 50 50 50\\n\""
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '2'\n\n'''\n\nT: O(m*n^2)\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        lines = stdin.strip().split('\\n')\n        n, m, r, c = map(int, lines[0].split())\n        files = list(map(int, lines[1:]))\n        cur_dir = {}\n        pos_r, pos_c = -1, -1\n        dirs = [(0,1), (1,0), (0,-1), (-1,0)]\n        for f in files:\n            cur_dir[f] = (r, c)\n            r, c = r+dirs[f][0], c+dirs[f][1]\n        for f in files:\n            if cur_dir[f] == (pos_r, pos_c):\n                pos_r, pos_c = r, c\n        return len(files)+abs(pos_r-r)+abs(pos_c-c)"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '80 50 3 2\\n'\n    '75 5 25 20 50 35\\n'\n    '50 5 25 35\\n'\n) == '2'\n\"\"\"\nimport sys\nimport os\n\nsys.path.append(os.path.dirname(os.path.abspath(__file__)) +\n                f\"/../../{'' if os.name == 'nt' else '.py'}\")\nfrom utils import timeit\n\n\n@timeit\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution('100 10 3 2') == \"1\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 4 3 2') == '2'\nassert solution('2 3 2 3') == '1'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4 1') == '2'\nassert solution('10 5 2') == '1'"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35') == \"2\"\nprint(solution('''100 200 300 400 500 600 700 800 900 1000 1001'''))\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35\n''') == '2'\nassert solution('''30 50 5 20\n50 30 50 20\n20 50 30 20\n''') == '1'\nassert solution('''30 50 5 20\n50 30 50 20\n20 50 30 20\n''') == '1'\nassert solution('''50 50 5 20\n50 30 50 20\n20 50 30 20\n''') == '1'\nassert solution('''80 80 50 3 2\n80 5 25 20 50 35\n50 5 25 35\n''') == '1'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n2211\n1112\n1112\n''') == 'AAAABBBB'\nassert solution('''3 4\n2211\n1112\n1112\n''') == 'AAAABBBB'\nassert solution('''5 4\n1222\n1122\n1112\n''') == 'AAABBBBB'\nassert solution('''3 4\n2211\n1112\n1112\n''') == 'AAAABBBB'\n'''\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n2211') == 'AAAA'\nassert solution('2\\n4\\n1112') == '...A'\nassert solution('3\\n5\\n2211') == 'BB...'\nassert solution('4\\n6\\n1112') == 'BBBB'\nassert solution('5\\n7\\n1112') == 'CCCC'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n...C'\nassert solution('5 5\\n1233\\n1233\\n2233\\n1233\\n') == 'AAAA\\n...A\\n....\\n...C\\nC.....'"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\""
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n2211\n1112\n1112\n''') == 'AAAA'\n\nassert solution('''\n4 4\n1111\n1111\n1111\n''') == 'AAA.A'\n\nassert solution('''\n3 4\n1111\n1112\n1112\n''') == 'AAA.A'\n\nassert solution('''\n3 4\n2211\n1112\n1112\n''') == 'AAAA'\n\nassert solution('''\n3 4\n1111\n1111\n1111\n''') == 'AAA.A'"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'A.A.A.'\nassert solution('2') == 'AA.AA.AA.'\nassert solution('3') == 'AA.AA.AA.'\nassert solution('4') == 'AA.AA.AA.'\nassert solution('5') == 'AA.AA.AA.'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'AAAA\\n...A\\n....\\n'\nassert solution('10 10') == 'AAAA\\n...A\\n...A\\n.BBBB\\n....\\n...B\\nBBBB\\n...B\\nBBBB\\n....\\nCCCC\\n.CCC\\nCCC\\n...C\\nBBBB\\nCCCC\\n'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\\\n3 4\n2211\n1112\n1112\n''') == 'AAAA'\nassert solution('''\\\n3 4\n2211\n1112\n1112\n''') == 'AAAA'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\n\"\nassert solution(\"3 5\\n2115\\n1112\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBBBB\\n...B\\n...C\\nCCCC\\n\"\nassert solution(\"3 6\\n2115\\n1112\\n1112\\n1112\\n1112\") == \"AAAA\\n...A\\n....\\nBBBB\\n...B\\n...C\\nCCCC\\n\"\nassert solution(\"2 3\\n2211\\n1112\\n2212\") == \"impossible\""
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == 'AAAA\\n...A\\n....\\n...C'\nassert solution('3 4\\n2211\\n1112\\n1111') == 'AAAA\\n...A\\n....\\n....'\nassert solution('3 4\\n1111\\n1111\\n1111') == 'impossible'\n\n---\nSample Input:\n5 5\n10011\n10011\n1111\n2211\n1111\nSample Output:\nAAAAA\n....A\n....A\n....A\n...AA\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n3 4\n3 2\n1 4\n\"\"\") == \"7\"\nassert solution(\"\"\"\n1 2\n3 4\n2 3\n1 2\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1 2\n2 3\n2 1\n1 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 2\n2 3\n1 2\n1 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 3\n4 5\n2 1\n3 2\n1 4\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1 1 1\n2 2 2 2\n1 3 3 2\n1 4 1 2\n1 1 3 2\n1 2 2 2\n1 1 2 2\n1 2 1 2\n1 3 2 2\n1 2 2 2\n1 3 3 2\n1 1 2 2\n1 2 2 2\n1 3 3 2\n1 4 1 2\n1 1 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 4 1 2\n1 1 2 2\n1 2 2 2\n1 3 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 4 1 2\n1 1 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 3 3 2\n1 4 1 2\n1 1 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 4 1 2\n1 1 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 4 1 2\n1 1 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 4 1 2\n1 1 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 4 1 2\n1 1 3 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1 2 2 2\n1 1 2 2\n1 2 2 2\n1 3 2 2\n1"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '9'\nassert solution('''\n1 2 3\n2 3 2\n3 1 3\n''') == '4'\nassert solution('''\n6 6 6 6 6 6\n5 7 5 6 6\n2 8 5 6\n''') == '19'\n''')\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 3 3\\n3 4 1 2 3 2\\n4 3 1 2 1\\n1 4 1 2 1 3') == '9'\nassert solution('2 1 3 3\\n3 2 2 2\\n1 1 1\\n2 1 2') == '6'"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '13'\nassert solution('4 3 1 2 1') == '17'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n''') == '18'\n\nassert solution('''\n10 1 3 4\n1 4 1 5 2\n1 4 3 3 2\n1 4 1 5 2\n1 4 3 3 2\n1 4 1 5 2\n1 4 3 3 2\n1 4 1 5 2\n1 4 3 3 2\n1 4 1 5 2\n1 4 3 3 2\n1 4 1 5 2\n''') == '10'\n\nassert solution('''\n11 1 3 2 3\n1 2 1 3 2 1\n1 2 3 3 1 1\n1 2 3 2 2 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n''') == '21'\n\nassert solution('''\n20 1 3 2 3\n1 2 1 3 2 1\n1 2 3 3 1 1\n1 2 3 2 2 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2 3 2 1 1\n1 2"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n1\n3 4 1 2\n1 3 4 1 2\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n5 1 5\n1 1 1 1\n1 3 1 2\n1 5 2 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10\n3 3 3 1 2 1 2 3\n3 4 1 2 1 2\n1 4 1 2\n2 3 3 2\n1 1 1 1\n1 3 1 2\n1 5 2 2\n1 6 2 2\n1 7 2 2\n1 8 3 2\n\"\"\") == \"14\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('4 3 1 2 3 2') == '8'\nassert solution('1 4 1 2 1 3') == '11'\nassert solution('1 2 1 2') == '3'"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '8'\nassert solution('4 3 1 2 1') == '2'\nassert solution('1 4 1 2 1 3') == '1'\nassert solution('3 2 1 1') == '1'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1\n1 4 1 2 1 3\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n1 1 2 3\n3 3 3 3\n1 3 3 3\n3 2 1 3\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n2 2 2 2\n2 3 2 2\n3 2 2 2\n2 3 2 2\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n3 2 3 3\n2 3 2 3\n3 3 3 2\n2 3 2 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n2 4 4\n2 3 3 2\n3 2 3 2\n2 2 2 3\n\"\"\") == \"12\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('6 0 0 6') == '21.93359'\nassert solution('3 4 7') == '1'\nassert solution('0 8 8') == 'IMPOSSIBLE'\nassert solution('6 8 8') == '20.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5\\n\") == \"20.396078\""
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 2 3') == '30.000000'\nassert solution('4 2 4 3') == '32.000000'\nassert solution('3 3 2 2') == 'Impossible'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('0 0 6') == '15.0'\nassert solution('3 4 7') == '20.0'\nassert solution('6 8 8') == '15.0'\nassert solution('6 0 6') == '20.0'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('0 0 6') == '1.000000'\nassert solution('3 4 7') == 'IMPOSSIBLE'\nassert solution('0 8 8') == '3.000000'\nassert solution('6 8 8') == '6.000000'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2 2 8\") == \"20.396078\"\nassert solution(\"0 0 6\") == \"20.396078\"\nassert solution(\"3 4 7\") == \"IMPOSSIBLE\"\nassert solution(\"0 8 8\") == \"20.396078\"\nassert solution(\"6 8 8\") == \"19.61111\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\nSample Output:\n20.396078\n''') == '20.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\n\nassert solution('''\n5 1 1 2\n1 2 2 3\n0 3 0 4\n1 5 0 6\n1 2 1 1\n0 2 0 3\n''') == '11.414054'\n\nassert solution('''\n10 3 3 4\n1 2 1 1\n1 3 1 1\n1 4 1 1\n0 1 1 1\n1 2 1 1\n0 2 1 1\n1 2 2 2\n1 2 3 1\n1 2 4 1\n1 2 5 1\n1 3 1 1\n1 4 1 1\n1 5 1 1\n1 6 1 1\n0 7 1 1\n1 7 1 1\n1 8 1 1\n1 9 1 1\n0 10 1 1\n1 10 1 1\n''') == '11.414054'\n\nassert solution('''\n10 2 1 6\n1 2 3 4\n0 2 3 4\n0 2 2 2\n0 3 3 3\n1 4 1 1\n0 1 1 1\n1 2 1 1\n0 1 2 1\n0 1 3 1\n1 2 1 1\n1 2 2 1\n1 3 1 1\n1 4 1 1\n0 2 1 1\n1 1 1 1\n''') == '14.753566'\n\nassert solution('''\n10 2 1 6\n1 2 3 4\n0 2 3 4\n0 2 2 2\n0 3 3 3\n1 4 1 1\n0 1 1 1\n1 2 1 1\n0 1 2 1\n0 1 3 1\n1 2 1 1\n1 2 2 1\n1 3 1 1\n1 4 1 1\n0 2 1 1\n1 1 1 1\n''') == '13.0373536'"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2 2 8') == '20.396078'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'o'\n\npass\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\"\n) == \"c\"\n\nassert solution(\n\"\"\"\nabcd\nbc dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\"\n) == \"e\"\n\nassert solution(\n\"\"\"\nghi\nbc dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\"\n) == \"i\"\n\nassert solution(\n\"\"\"\nabc\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\"\n) == \"c\"\n\nassert solution(\n\"\"\"\nabc\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n0\n1\n1 8\n\"\"\"\n) == \"c\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'bc'\nassert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'bc'\nassert solution('''\naaaa\nabb abc abd abf abj abk abl abm abn abo abp abq abr abu abv abw aaa\nbba bbb bbc bbd bbe bbf bbj bbj bbk bbl bbm bbn bbo bbp bqr bqw bqx bqy bqz\nbbb\n''') == 'bbb'\nassert solution('''\naa aa aa\na aa\naa aa\na aa\naa aa\n''') == 'aa'\nassert solution('''\naaaa\nabb abc abd abf abj abk abl abm abn abo abp abq abr abu abv abw aaa\nbba bbb bbc bbd bbe bbf bbj bbj bbk bbl bbm bbn bbo bbp bqr bqw bqx bqy bqz\nbbb\n''') == 'bbb'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abca\") == \"c\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"e\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1 8\") == \"c\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n2 4\") == \"b\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n3 13\") == \"c\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n4 6\") == \"c\"\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n5 6\") == \"c\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\") == \"d\"\n\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\") == \"d\"\n\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\") == \"c\"\n\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\") == \"c\"\n\nassert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1\\n2\") == \"c\""
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nn oo pp qq rr ss tt uu vv ww xx yy zz\\n1 8\\n\") == \"b\"\nassert solution(\"dcsllpkcjm\\nkv\\nqh\\nvwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\nqwr\\nx\\nx\\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'c'\nassert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'c'\nassert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'c'\nassert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'c'\nassert solution('''\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n''') == 'c'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abca') == 'bc'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'ff'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'g'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\nSample Output:\na\nc\nc\n''') == 'ca'\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n2\n2\n2 4\nSample Output:\nc\nc\ne\n''') == 'ea'\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\nSample Output:\nc\nc\nd\n''') == 'de'\n\nassert solution('''abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n3\n2\n2 4\nSample Output:\nc\nc\ne\n''') == 'ea'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\nabc\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\n''') == \"12\"\nassert solution('''10\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\n''') == \"10\"\n'''"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n') == '12\\n10\\n16\\n7\\n'\nassert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi\\n') == '11\\n10\\n16\\n7\\n'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"12 10 16 7\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\n''') == '12'\nassert solution('''1\nrobota\nroboti\nroboti\nrobiti\nrobota\n4\nrobota\nroboti\nroboti\nrobiti\nrobota\n''') == '18'\nassert solution('''1\nrobota\nroboti\nroboti\nrobiti\nrobota\n4\nrobota\nroboti\nroboti\nrobiti\nrobota\n''') == '6'\n'''\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '12'\nassert solution('12') == '12'\nassert solution('4') == '16'\nassert solution('3') == '7'"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hobotnica') == '12'\nassert solution('robot') == '10'\nassert solution('hobi') == '16'\nassert solution('hobit') == '7'\nassert solution('rakija') == '5'\n\"\"\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija''') == '12'\nassert solution('''3\nrado\ndog\nraf''') == '16'\nassert solution('''2\na\nb''') == '0'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrobi') == '12'\nassert solution('10\\nrobi\\nhobi\\nhobit\\nrakija\\n') == '16'\nassert solution('1\\nrobi\\nhobi\\nhobit\\nrakija\\n') == '7'\nassert solution('1\\n') == '0'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\n\"\"\") == \"12\"\nassert solution(\"\"\"5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\n\"\"\") == \"10\"\nassert solution(\"\"\"5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\n\"\"\") == \"16\"\nassert solution(\"\"\"5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n\nSample Input:\n5 6\nAAB ABCD\nSample Output:\nABCABCD\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 7\nI HHTTKTTFDF\n''') == 'THIS IS A TEST'\n\nassert solution('''\n6 4\nAIMERIORHSPEIA\n''') == 'This is a test'\n\nassert solution('''\n10 9\nQSURERVATA\n''') == 'This is a test'\n\nassert solution('''\n10 10\nAIMERIORHSPEIA\n''') == 'This is a test'\n\nassert solution('''\n100 100\nQSURERVATA\n''') == 'This is a test'"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('1 1\\nA') == 'A'\nassert solution('14 4\\nD') == 'D'\n'''\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join(['4', '15 9 10', 'X Y Z'])) == 'XYZ'\nassert solution('\\n'.join(['4', '15 9 10', 'A'])) == 'ABC'\nassert solution('\\n'.join(['4', '16 10 11', 'Z'])) == 'ZAB'\nassert solution('\\n'.join(['4', '16 10 11', 'XYZ'])) == 'XYZABC'\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4\nJQ IRKEYFG EXQ''') == 'THIS IS A TEST'\n\n'''\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n\n\"\"\""
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n\"\"\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n\n''') == 'THIS IS A TEST'\nassert solution('''\n\n''') == 'THIS IS A TEST'\nassert solution('''\n\n''') == 'THIS IS A TEST'\nassert solution('''\n\n''') == 'THIS IS A TEST'\nassert solution('''\n\n''') == 'THIS IS A TEST'\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2.6') == '135'\nassert solution('3.9') == '270'\nassert solution('45.6') == '270270'\nassert solution('81.9') == 'No solution'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2.6') == '135'\nassert solution('35.6') == '3535'\nassert solution('35.5') == '3535'\nassert solution('35.3') == '3535'\nassert solution('9.11') == '9111'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2.6\") == \"135\\n\"\nassert solution(\"5776\") == \"76\\n\"\nassert solution(\"35976544\") == \"76\\n\"\nassert solution(\"1.1\") == \"No solution\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2.6') == '135'\nassert solution('2.77') == '270270'\nassert solution('5.4') == '135135'"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"No solution\"\nassert solution(\"2.6\") == \"135\"\nassert solution(\"3.7\") == \"135135\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2.6\n''') == '135\nassert solution('''2.5\n''') == '210\nassert solution('''4.1\n''') == '4510\nassert solution('''3.5\n''') == '3510\nassert solution('''7.4\n''') == '5440'''"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2.6') == '135\\n270'\nassert solution('25') == '5\\n76'\nassert solution('3.5') == '1\\n23\\n90'\nassert solution('1.2') == '2\\n3\\n5\\n7'\nassert solution('0.5') == '10\\n100\\n1000'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2.6') == '135'\nassert solution('4.20') == '135135'\nassert solution('5.2') == '270'\nassert solution('0.3') == 'No solution'\nassert solution('-1.2') == 'No solution'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\\\n4\n3\n2\n1\n\"\"\") == \"\"\"\n1\n2\n3\n4\n\"\"\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2.6') == \"135\\n270\"\nassert solution('0.25') == \"0.25\"\nassert solution('-1') == \"No solution\"\nassert solution('-1.1') == \"No solution\"\nassert solution('1.1') == \"No solution\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2\\n3 5\\n4 5\\n5 7\\n') == '4'\nassert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n') == '4'"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\") == \"4\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 7\\n4 5\\n6 5\\n9') == '4'\nassert solution('2\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '0'\nassert solution('3\\n3 3\\n3 6\\n3 4\\n2 4\\n1 4\\n1 6\\n2 5\\n2 6\\n3 7\\n4 5\\n5 6') == '2'\nassert solution('4\\n1 1\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '3'\nassert solution('3\\n3 2\\n3 5\\n3 6\\n3 7\\n2 5\\n2 6\\n3 6\\n2 7\\n1 6\\n2 7\\n1 7\\n2 5\\n1 5\\n1 6\\n1 7\\n1 5\\n1 6\\n2 7\\n2 6\\n2 7\\n2 5\\n1 6\\n1 5\\n1 6\\n1 7\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 7\\n1 5\\n1 6\\n2 6\\n2 7\\n2 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n2 6\\n1 5\\n1 6\\n1 7\\n2 6\\n2 7\\n1 6\\n1 5\\n2 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n2 5\\n1 5\\n2 6\\n1 6\\n1 7\\n2 6\\n2 7\\n1 6\\n1 7\\n1 5\\n1 6\\n2 6\\n1 6\\n1 7\\n1 5\\n2 6\\n1 5\\n2 6\\n1 6\\n1 7\\n2 6\\n2 7\\n1 6\\n1 7\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 7\\n1 5\\n1 6\\n2 6\\n2 7\\n2 5\\n1 6\\n2 6\\n1 7\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n2 5\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\n2 7\\n1 6\\n1 5\\n1 6\\n2 6\\"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n6\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '1'\nassert solution('''\n10\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '5'\nassert solution('''\n10\n0 1\n0 2\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\nassert solution('''\n10\n0 1\n0 2\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '2'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('9\\n0 1\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '0'\nassert solution('0\\n0 1\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '1'\nassert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '0'\nassert solution('6\\n0 1\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '0'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 7\\n4 5\\n6 5\\n9') == '4'\nassert solution('2\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6') == '0'\nassert solution('4\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6') == '0'\nassert solution('5\\n1 2\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6') == '1'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '2'"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 4\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3\\n\") == \"4\""
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == \"4\"\n\nassert solution('''\n100\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == \"98\"\n\n\"\"\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.0000000 0.0000000'\nassert solution('1 2') == '0.0000000 0.0000000'\nassert solution('1 2 3') == '0.0000000 0.0000000'\nassert solution('1 2 3 4') == '0.0000000 0.0000000'\nassert solution('1 2 3 4 5') == '0.0000000 0.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\nassert solution('1') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n'\nassert solution('4') == '-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n1.0000000 0.0000000\\n'"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('1\\n3\\n1 2\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('1\\n3\\n1 2\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('10\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('10\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2\n1 3\n1 4\n1 5\n''') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'\nassert solution('3\\n1 3\\n2 3\\n3 1\\n') == '0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n'"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n1 2\n1 3\n\"\"\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0.0 0.0\\n0.0 0.0\"\nassert solution(\"2 2\") == \"0.0 0.0\\n0.0 0.0\"\nassert solution(\"2 3\") == \"0.0 0.0\\n0.0 0.0\"\nassert solution(\"2 4\") == \"0.0 0.0\\n0.0 0.0\"\nassert solution(\"2 5\") == \"0.0 0.0\\n0.0 0.0\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('10\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 2.0000000\\n0.0000000 -2.0000000\\n0.0000000 3.0000000\\n0.0000000 -3.0000000\\n0.0000000 4.0000000\\n0.0000000 -4.0000000\\n0.0000000 5.0000000\\n0.0000000 -5.0000000\\n0.0000000 6.0000000\\n0.0000000 -6.0000000\\n0.0000000 7.0000000\\n0.0000000 -7.0000000\\n0.0000000 8.0000000\\n0.0000000 -8.0000000\\n0.0000000 9.0000000\\n0.0000000 -9.0000000'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '2'\nassert solution('''\n3 2\na*a\naaa*\na*a\na*a\n''') == '1'\n'''\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"2\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '2'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\naaa\nabc\naba\na*a\naaa*\n*aaa\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\naaa\nabc\naba\na*a\naaa*\n*aaa\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\npale\nple\nbale\np*le\np*le\n\"\"\") == \"3\"\nassert solution(\"\"\"\n7\ny\nyy\ny*\ny*y\ny*y*\nyy*\ny*y*y*\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"\") == \"0\"\nassert solution(\"aaa\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"aba\") == \"1\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"10 1\") == \"1\"\nassert solution(\"100 100\") == \"100\""
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n2 3\naaaa\naab*\nab*a\naab*\n\"\"\") == \"2 1 1\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t1) == \"2\"\nassert solution(t2) == \"2\""
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '2'\nassert solution('''\n4 4\ncab\nabc\nab\nac\na*c\n''') == '4'"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\nXO\nOX\nXO\nOX\nOX\n''') == '1'\nassert solution('''\n3\nXO\nOX\nXO\nOX\nOX\n''') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2\\nXO\\nOX\\nXO\\nOX\\nOX\\nOO\\nXO\\nOO') == '1'\nassert solution('2 2\\nOX\\nOX\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO') == '0'\nassert solution('2 2\\nOX\\nOX\\nOX\\nOX\\nOX\\nOO\\nXO\\nOO') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"4 4\") == \"0\""
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 4') == '1'\nassert solution('4 4') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\nOOOX\\nXOXO\\nOXOO\\nOXOX\\nOXOX\") == \"1\"\nassert solution(\"4 4\\nXOXO\\nOXOO\\nOXOX\\nOXOX\\nOXOX\") == \"0\"\nassert solution(\"5 5\\nOOOX\\nXOXO\\nOXOO\\nOXOX\\nOXOX\") == \"1\"\nassert solution(\"4 4\\nOXOX\\nOXOO\\nOXOX\\nOXOX\\nOXOX\") == \"0\"\nassert solution(\"4 4\\nOXOX\\nOXOX\\nOXOX\\nOXOX\\nOXOX\") == \"1\""
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"5 4\") == \"1\"\nassert solution(\"10 10\") == \"0\""
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\nXO\\nOX\\nXO\\nOX\\nOX\\nOX\\nOX\\nOX\\n') == '1', \"Wrong\"\nassert solution('6 5\\nXOX\\nOXX\\nOXO\\nOXX\\nOXO\\nOXO\\nOXO\\nOXO\\nXOX\\n') == '1', \"Wrong\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\nassert solution('''4 2\nOX\nXO\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '0'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4') == '0'\nassert solution('4\\n3 1\\n4 4\\n4 2\\n4 2\\n3 2\\n2 3\\n1 2\\n4 2\\n2 4\\n4 2\\n3 4\\n4 4\\n3 3\\n3 4\\n1 4\\n4 2\\n2 3\\n2 4\\n4 4\\n4 3\\n4 3\\n2 4\\n3 3\\n3 2\\n4 4\\n3 4\\n4 2\\n2 4\\n4 3\\n4 4\\n2 2\\n3 2\\n2 3\\n2 2\\n2 3\\n2 2\\n3 2\\n2 4\\n2 4\\n2 2\\n2 3\\n2 3\\n2 2\\n2 2\\n2 4\\n2 4\\n2 3\\n2 3\\n3 2\\n4 2\\n2 3\\n2 3\\n2 4\\n2 4\\n2 2\\n2 4\\n2 4\\n2 3\\n2 4\\n4 2\\n2 4\\n2 2\\n4 2\\n2 3\\n2 4\\n2 4\\n2 3\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4\\n2 4"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == \"0\"\nassert solution('6') == \"16\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0 0') == '1'\nassert solution('2\\n0 2') == '2'\nassert solution('-2 0\\n0 -2') == '2'\nassert solution('0 0\\n0 -2') == '0'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 0\n0 2\n-2 0\n0 -2\n''') == '16'\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"16\"\nassert solution(\"10\") == \"55\"\nassert solution(\"5\") == \"6\"\nassert solution(\"13\") == \"83\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 0') == '16'\nassert solution('4 2 0') == '16'\nassert solution('5 0 0') == '-1'\nassert solution('10 3 1') == '-2'\nassert solution('5 0 -2') == '7'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 0\n0 2\n-2 0\n0 -2\n''') == '16'\n\nassert solution('''\n10\n2 2\n4 3\n6 6\n0 0\n-2 -2\n-1 -2\n-2 2\n-3 3\n-4 4\n''') == '1317'\n\nassert solution('''\n10\n0 0\n-1 -1\n0 0\n1 1\n1 0\n-2 2\n0 -1\n-1 0\n-2 -1\n0 -2\n''') == '10'\n\nassert solution('''\n10\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '5'\n\nassert solution('''\n10\n0 0\n1 1\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '10'"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('1 0\\n0 1') == '0'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('3\\n0 1\\n2 3\\n1 2') == '5'\nassert solution('8\\n0 0\\n0 1\\n1 0\\n0 2\\n2 1\\n1 1\\n3 1\\n0 3') == '3'\nassert solution('5\\n0 1\\n0 3\\n1 2\\n1 3\\n2 2\\n3 2\\n1 1\\n2 1\\n3 0\\n2 0\\n3 1\\n2 3\\n0 0\\n3 0') == '8'\nassert solution('10\\n-1 0\\n-2 0\\n0 0\\n-1 1\\n-1 0\\n0 1\\n-1 1\\n1 1\\n1 1') == '1'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10 50\n8 8 2 -2\n5 -1\n5 1\n''') == '80'\n\nassert solution('''\n10 10 20\n8 8 2 -2\n1 2 3\n1 1\n''') == '200'\n\nassert solution('''\n1 1 1\n1 1\n''') == '0'\n\nassert solution('''\n1 1 1\n1 1\n''') == '0'\n\nassert solution('''\n1 1 1\n1 1\n''') == '0'"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 10 50\n8 8 2 -2\n''') == '80'\n\"\"\""
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 10 50') == '80'\nassert solution('1 10 50') == '100'\nassert solution('2 10 50') == '100'\nassert solution('5 10 50') == '200'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n8 8 2 -2\\n\") == \"80\"\n\n'''\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '80'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 10 50') == '80'"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 10 50') == '80'\n\"\"\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 10 50') == '80'\nassert solution('1 3 4 2') == '6'\nassert solution('2 6 4 -2') == '8'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 10 50') == '80'\nassert solution('50 50 50') == '80'\nassert solution('10 10 50') == '80'\nassert solution('10 10 50') == '80'\nassert solution('10 10 50') == '80'\n\nsolution = solution(stdin)"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"3.000000000\"\n\nassert solution(\"\"\"\n1 8\n1 1\n1 1\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"5.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 8') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3') == '3.000000000'\nassert solution('1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n4 4\\n7 7') == '4.000000000'\n\n\"\"\"\n\nimport math\nfrom typing import List\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 8') == '3.000000000'\nassert solution('0 0 10 10') == '4.000000000'\nassert solution('5 1') == '2.000000000'\nassert solution('5 9') == '1.000000000'\nassert solution('3') == '1.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 8') == '3.000000000'\nassert solution('0 0 10 10') == '3.000000000'\nassert solution('5 1') == '2.000000000'\nassert solution('5 9') == '2.000000000'\nassert solution('3') == '2.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '3.000000000'\nassert solution('''1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '4.000000000'\n'''\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\\n\") == \"4.50000000\"\n\nassert solution(\"1 5\\n-10 -20\\n1 1\\n100 100\\n2 2\\n100 100\\n2 2\\n5 5\\n10 10\\n100 100\\n2 2\\n5 5\\n10 10\\n\") == \"110.0\""
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '3.000000000'\nassert solution('''\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n''') == '3.000000000'\nassert solution('''\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n1 2\n9 6\n''') == '4.5000000000000001'\nassert solution('''\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n1 2\n9 6\n''') == '4.5000000000000001'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\") == \"3.000000000\"\nassert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\") == \"5.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"3.000000000\"\n\nassert solution(\"\"\"\n1 9\n0 0 1 1\n5 1\n5 9\n2\n1 8\n3\n5 6\n2\n9 6\n\"\"\") == \"10.000000000\"\n\nassert solution(\"\"\"\n1 10\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"10.000000000\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1 4\n2 3\n0 1\n0 2\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4') == '1'\nassert solution('4\\n2\\n0\\n1\\n3') == '2'\nassert solution('10\\n8\\n0\\n3\\n0\\n0\\n3\\n1\\n1\\n1\\n2\\n0\\n3\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n9\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution([4,3,0,1,0,0,1,2,3,2,4]) == \"2\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 0 1\") == \"1\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"1 0 1 1 0 0 0 0 1 0 1 0 1 1 0 1 1 0 1 1 0 0 1 0 0 0 0 1 0 1 0 0 0 1 1 1 0 1 1 0 1 0 1 0 1 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 1 1 0 0 1 1 1 0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 0 0 1 1 1 1 0 1 1 1 1 0 0 0 1 1 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1 0 1 1 1 0 1 1 1 0 0 0 0 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 0 0 0 0 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 0 0 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\nassert solution('''\n4 3\n0 0 0 0\n1 2\n2 3\n2 4\n''') == '1'\n'''\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == \"1\"\nassert solution('6 5') == \"2\"\nassert solution('10 10') == \"2\""
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '2'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '2'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '2'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n3 4\n''') == '1'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\n\nassert solution('''\n10 8\n1 2 0 3 0 0 0 0 0\n0 0 0 1 1 1 1 1 0\n0 0 0 0 0 0 0 0 1\n0 0 0 0 1 1 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 1\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 1\n0 0 0 0 0 0 0 0 0\n''') == '4'\n\nassert solution('''\n15 5\n0 1 0 2 0 1 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 0 0 0 0 0 1 1 1 0 0 0 0 0 1 1 1 0 1 1 1 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 1 1 1 1 0 1 1 1 0 1 1 1 0 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 1 1 1 1 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '6.283185'"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '6.283185'\nassert solution('3 3') == '6.283185'\nassert solution('3 3') == '6.283185'\nassert solution('3 3') == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\"\nassert solution(\"10 20\\n0 1\\n0 2\\n1 3\\n2 1\\n2 2\\n3 4\\n4 3\\n3 4\\n4 5\\n5 4\") == \"1.3925493737642645\"\nassert solution(\"10 20\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 4\") == \"5.6835927605090402\"\nassert solution(\"10 20\\n0 1\\n0 2\\n0 3\\n1 4\\n2 1\\n2 2\\n3 4\\n3 5\\n4 5\") == \"8.301259400601901\"\nassert solution(\"10 20\\n0 1\\n0 2\\n0 3\\n1 4\\n2 1\\n2 2\\n3 4\\n3 5\\n4 5\") == \"7.617991369742236\"\n\"\"\""
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '6.283185'\nassert solution('2 3') == '2.266440'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n2\n1\n3\n1\n0 2\n1 3\n''') == '6.283185'\nassert solution('''\n1\n1\n2\n1\n3\n1\n0 2\n1 3\n''') == '3.141592653589793'\nassert solution('''\n1\n1\n2\n1\n3\n1\n0 2\n1 3\n''') == '0'\nassert solution('''\n0\n0\n2\n0\n1\n1\n0 2\n1 3\n''') == '2.0'\n''')"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n0 1\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\"\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n0 0\\n0 1\\n1 0') == '6.283185'\nassert solution('6 4\\n0 0 1 2\\n0 1\\n0 2\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n4 6\\n5 6') == '6.283185'\nassert solution('7 3\\n0 0\\n1 1\\n2 2\\n1 3\\n4 4\\n4 5\\n5 6\\n6 7\\n0 1\\n1 0\\n3 3\\n3 4\\n0 3\\n4 2\\n2 3\\n4 3') == '17.801329'\nassert solution('1 1\\n0 0\\n0 1\\n0 1') == '2.220446049250313'\nassert solution('7 1\\n0 0\\n0 1\\n0 2\\n0 3\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\\n4 6\\n5 6') == '0.5235987755982983'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '6.283185'\nassert solution('5 5') == '2.667'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1 2\\n'\nassert solution('3') == '1 2\\n3\\n'\nassert solution('2') == '1 2\\n'\nassert solution('2') == '1 2\\n'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '1 2 3'"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2 3'\nassert solution('4') == '1 3 2 4'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\n\n\"\"\""
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 2 3\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1 2 3\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == '1 2'"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '1 2'\nassert solution('1\\n2 3') == '1 2 3'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1\n2\n3\n''') == '1 2 3'\nassert solution('''\n3\n1\n4\n3\n''') == '1 2 3'\nassert solution('''\n4\n1\n2\n3\n''') == '1 2 3'\nassert solution('''\n2\n1\n''') == '1'\nassert solution('''\n2\n1\n''') == '1'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1 2 3'"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1 2'\nassert solution(input()) == '1 2 3 4'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_lines) == \"1 2 3 4\""
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"3 1 2\") == \"2\"\nassert solution(\"3 1 2 3\") == \"2 3\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('1 2') == '1 2'\nassert solution('4 4') == '1 2 3 4'"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n1 2\n1 3\n2 4\n3 4\n4 5\n''') == '1 2 3 4'\nassert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n4 5\n''') == '1 3'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"3 2\") == \"1 2\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"8 1\") == \"1\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1 2 3'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\nassert solution('''\n5 4\n1 2\n1 3\n2 4\n3 4\n''') == '4 1 3 2 4'\nassert solution('''\n5 7\n1 2\n1 3\n2 4\n3 4\n4 5\n5 6\n''') == '4 5 2 3 1 6'"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 1\n1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 1\n1 2\n1 3\n2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\nassert solution(\"2 1\\n1 2\") == \"1\"\nassert solution(\"5 4\\n1 2\\n3 4\\n2 3\\n5 6\\n3 4\\n5 4\") == \"2\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 2\\n') == '1'\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\""
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n1 2\\n\") == \"1\"\nassert solution(\"3 5\\n3 6\\n4 7\\n6 4\\n1 2\\n1 3\\n2 4\\n2 5\\n\") == \"2\""
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '1'\nassert solution('8 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('10 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\"\nassert solution(\"2 2\\n1 2\\n1 3\") == \"2\"\nassert solution(\"2 2\\n1 2\\n1 3\") == \"2\"\nassert solution(\"2 3\\n1 2\\n1 3\") == \"2\"\nassert solution(\"2 5\\n1 2\\n1 4\\n2 4\\n3 4\\n4 4\") == \"3\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n1 2\n''') == '1'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n1 2\n1 3\n''') == '1'\n\nassert solution('''\n6 7\n1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n3 5\n4 5\n''') == '1'\n\nassert solution('''\n8 2\n1 3\n2 4\n5 6\n5 7\n4 8\n6 8\n4 7\n3 6\n2 4\n1 5\n''') == '2'"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1\\n1 2\\n2 3') == '1'\nassert solution('3 2\\n2 1\\n1 3') == '1'\nassert solution('4 3\\n1 2\\n2 3\\n3 4') == '2'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"45\"\nassert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"72\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '45'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '45'\nassert solution('3') == '21'\n\nSample Input:\n12\nSample Output:\n2133710\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1''') == '45'\nassert solution('''2''') == '0'\n\nimport math\n\nn = int(input())"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '45'"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"45\"\n\"\"\""
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == \"45\"\n\nassert solution('10') == \"101010\"\nassert solution('5') == \"101\"\nassert solution('13') == \"1101100\"\nassert solution('100') == \"100001\"\n'''\n\n'''\n---\n\nSample Input:\n10\nSample Output:\n101010\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n\"\"\") == \"45\"\nassert solution(\"\"\"\n1\n\"\"\") == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '45'\nassert solution('15') == '1153'\nassert solution('10') == '10'\nassert solution('30') == '102030'\n\nInput:\n15\nOutput:\n4\nExplanation:\n15th digit is 10. Thus, lucky numbers with 15th digit are 15, 15, 6 and 3, and the total number of lucky numbers is 4.\n\nInput:\n12\nOutput:\n30\nExplanation:\n12th digit is 3. Thus, lucky numbers with 12th digit are 12, 13, and 12, and the total number of lucky numbers is 3.\n'''\n\nimport math"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4', 'More than 4!'\nassert solution('''\n10 50 100 50\n1 5 7 8 12\n''') == '5', 'More than 4!'\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nprint('Day 23 - Puzzle 1 - Coffee Machine')\nprint('Time: {}s'.format(solution_time))\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 20 20\") == \"4\"\nassert solution(\"7 11 9 12 2\") == \"5\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 20 20\") == \"4\""
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('7 11 9 12 2') == '3'"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'\nassert solution('2 10 3\\n2 3 1') == '1'\n\n'''\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('10 20 10') == '10'\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\nassert solution('''\n2 1 1\n1\n''') == '2'\nassert solution('''\n100 500\n300 500\n''') == '101'\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('10 5 20 15 20 20 20 20 20 20 20 20 20 20 20') == '9'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 5\") == \"3\"\nassert solution(\"5 3\") == \"2\""
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\n\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '1'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 4') == '4'\nassert solution('4 3') == '5'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\ncharlie 1 harrypotter1\ncharlie 1 harrypotter1\ncharlie 1 harrypotter1\njenny 1 harrypotter1\njenny 1 harrypotter1\nlaura 1 harrypotter1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2\nkenny 1 harrypotter1\nkenny 1 harrypotter1\njenny 1 harrypotter1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\nkenny 1 harrypotter1\ncharlie 1 harrypotter1\nlaura 1 harrypotter1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '2'\nassert solution('4 3\\nkennedy 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings') == '1'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\n\n'''\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"2 1\"\nassert solution(\"0 1\") == \"2 1\"\nassert solution(\"1 0\") == \"1 1\"\nassert solution(\"0\") == \"1 2\""
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0\n01''') == '1 1'\n\nassert solution('''1\n00\n1''') == '1 3'\n\nassert solution('''1\n0\n1''') == '1 2'\n\nassert solution('''1\n1\n1''') == '1 2'\n\nassert solution('''1\n1\n0''') == '1 2'"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1 1'\nassert solution('0\\n') == '0 1'\nassert solution('1\\n01') == '1 2'\nassert solution('0\\n1\\n1') == '1 3'\nassert solution('1\\n1\\n1\\n1\\n0') == '1 2 3'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1\n0\n0\n1\n1\n0\n0\n0\n1\n0\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n01\n\"\"\") == \"2 1\"\n\nassert solution(\"\"\"\n1\n10\n\"\"\") == \"2 2\"\n\nassert solution(\"\"\"\n1\n11\n\"\"\") == \"2 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1 1\"\nassert solution(\"01\") == \"2 1\"\nassert solution(\"0 0\") == \"0 1\"\nassert solution(\"11 01\") == \"1 2\"\n\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0\") == \"1 1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"0\n1\"\"\") == \"2 1\"\nassert solution(\"\"\"0\n1\"\"\") == \"1 1\"\n\n\"\"\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n01\n''') == '2 1'\n\nassert solution('''\n2\n01\n''') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n01\n0''') == '1 2'\nassert solution('''2\n01\n0''') == '1 3'\nassert solution('''3\n01\n1\n0''') == '2 2'\nassert solution('''4\n01\n0\n1\n0''') == '2 2'\nassert solution('''5\n01\n1\n0\n1\n0''') == '2 2'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2 1'\nassert solution(stdin + '\\n' + '00') == '2 0'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '2123'\nassert solution('5 1') == '2123'\nassert solution('4 2') == '23'\nassert solution('10 1') == '1012'\nassert solution('4 3') == '2233'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == \"2 2\"\nassert solution('4 1') == \"2123\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n4 1\\n2 123\\n2 2') == '4 3'\nassert solution('10\\n2 2\\n22\\n12') == '2233'\nassert solution('10\\n2 2\\n21') == '1111'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 1\") == \"3 3\"\nassert solution(\"3 1\") == \"2 3\"\nassert solution(\"2 3\") == \"2 2\"\nassert solution(\"2233\") == \"1111\"\nassert solution(\"1234\") == \"1012\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n4 1') == '4 3'\nassert solution('2\\n1 2') == '2 2'\nassert solution('3\\n4 1\\n2 2') == '4 3'\nassert solution('10\\n1 1') == '10 9'\nassert solution('1 2\\n2 3') == '1 2'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n''') == '2233\\n1111\\n2233\\n2123\\n4 3\\n1012\\n2123\\n2233'"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1\n2 123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n''') == '''\n4 3\n2123\n1012\n2123\n'''\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n4 1\n2 123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 1\n2123\n2 2\n21\n10''') == '4 3'\nassert solution('''7 1\n2233\n2 2\n23\n12\n21\n10''') == '7 3'\nassert solution('''7 2\n2233\n2 2\n23\n12\n21\n10''') == '7 3'\nassert solution('''7 4\n2233\n2 2\n23\n12\n21\n10''') == '7 3'\nassert solution('''4 5\n2132\n2 2\n23\n12\n21\n10''') == '4 3'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk\\nlibattr\\nfreetype\\nlibjpeg\\npcre\\ngrep\\ngtk2\\nxorg-x11-libs\\npango\\nzlib'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'atk'\nassert solution(input()) == 'cannot be ordered'\nassert solution(input()) == 'freetype'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"vim-X11 vim-common gtk2 libattr\\n\"\nassert solution() == \"atk freetype glib2 libjpeg pango xorg-x11\\n\"\nassert solution() == \"freetype gtk2\\n\"\nassert solution() == \"atk pcre\\n\"\nassert solution() == \"freetype\\n\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nfreetype\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk'\nassert solution('''\n12\nemacs xorg-x11 pango\natk pango\npango\nemacs xorg-x11\npango\natk xorg-x11\npango\n''') == 'emacs xorg-x11 pango atk'\nassert solution('''\n13\natk xorg-x11 lisp\nemacs xorg-x11\npango\natk\nfreetype\nemacs\npango\nxorg-x11\nlisp\nzlib\n''') == 'atk xorg-x11 pango atk lisp zlib'\nassert solution('''\n14\ngtk-x11\natk\nxorg-x11\n''') == 'atk gtk-x11'\nassert solution('''\n15\ngtk-x11\natk\nxorg-x11\n''') == 'xorg-x11 gtk-x11 atk'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'cannot be ordered'\nassert solution('1') == 'cannot be ordered'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n11\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk\\n\\nfreetype\\n\\nglib2\\n\\nlibattr\\n\\nglibjpeg\\n\\npcre\\n\\ngtk2\\n\\nvim-common\\n\\npango\\n\\nxorg-x11-libs\\n\\nglib2\\n\\npango\\n\\nzlib\\n\\nlibjpeg\\n\\nxorg-x11\\n\\n\\n\\npcre\\n\\n\\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk'\nassert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'cannot be ordered'\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n20\nlibavformat\nlibavfilter\nlibswresample\nlibvpx\nlibx264\nlibx265\nlibxvid\nlibffmpeg\nlibavcodec\nlibavutil\nlibswscale\nlibv4l2\nlibopencv\nlibcaca\nzlib\nlibxcb\nlibxinerama\nlibxrandr\nzlib\nlibpangoft2\nlibexpat1\nxorg-x11-libs\nlibxrandr\nlibx11\nlibxext\nlibxi\nlibxdmcp\nzlib\nlibxcb\nlibavformat\nlibavfilter\nlibswresample\nlibv4l2\nlibv4l\nlibopencv\nlibxinerama\nlibxrandr\nlibexpat1\nlibxdmcp\nlibxext\nlibxi\nzlib\nlibxcb\nlibv4l2\nlibx11\nlibxext\nlibxi\nlibcaca\nlibxcb\nlibexpat1\nlibxi\nlibswresample\nlibx11\nlibxext\nlibxi\nlibxinerama\nlibxrandr\nlibavformat\nlibavfilter\nlibswscale\nlibv4l2\nlibcaca\nlibv4l2\nlibavutil\nlibswscale\nlibavformat\nlibxcb\nlibswresample\nlibv4l2\nlibavutil\nlibv4l2\nlibv4l\nlibxi\nlibv4l2\nlibavutil\nlibxcb\nlibxinerama\nlibv4l2\nlibavutil\nlibv4l2\nlibxcb\nlibv4l2\nlibv4l\nlibexpat1\nlibxcb\nlibv4l2\nlibv4l\nlibcaca\nlibv4l2\nlibavutil\nlibv4l2\nlibv4l\nlibxcb\nlibxcb\nlibavutil\nlibx11\nlibx11\nlibxext\nlibx11\nlibxext\nlibcaca\nlibexpat1\nlibxi\nlibxi\nlibx11\nlibx11\nlibxext\nlibx11\nlibxext\nlibx11\nlibxext\nlibx11\nlibx11\nlibxcb\nlibxcb\nlibxcb\nlibxcb\nlibxi\nlibxcb\nlibxcb\nlibcaca\nlibv4l2\nlibavutil\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibavutil\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibavutil\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l2\nlibv4l"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"1 5 2 3 4 6 7 8 9 10\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"15\") == \"1 3 5 4 6 7 8 10\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n2\n''') == 'atk\\nglibattr\\nglibjpeg\\nxorg-x11-libs\\nfreetype\\npango\\nzlib\\nlibtiff\\n'\n\nprint('solution')\n\n'''\nSample Input:\n1\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n\n'''\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n32 20\n''') == '16'\nassert solution('''\n55 5\n''') == '5'"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('16') == '16'\nassert solution('64') == '16'\nassert solution('10') == '10'\nassert solution('20') == '10'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('32 20') == '16'\nassert solution('10 20') == '10'\nassert solution('1 2 3') == '3'\n\nimport sys\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input) == expected\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''32 20''') == '16'\nassert solution('''32 32''') == '16'\nassert solution('''32 32''') == '16'\nassert solution('''32 32''') == '16'\nassert solution('''32 32''') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32 20') == '16'\nassert solution('0') == '10'\nassert solution('1') == '11'\nassert solution('1000') == '11'\nassert solution
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('32 20') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('32 20') == '16'\nassert solution('42') == '10'\nassert solution('1024') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"32\") == \"2\"\nassert solution(\"16\") == \"10\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''32 20''') == '16'\n\n## Sample Test Cases\nTest.assert_equals(solution('''123 321'''), '1234')\nTest.assert_equals(solution('''0 0'''), '0')\nTest.assert_equals(solution('''0 0'''), '0')\nTest.assert_equals(solution('''32 0'''), '32')\nTest."
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '5 13'\nassert solution('4 2') == '4 3'\nassert solution('3 3') == '3 3'\nassert solution('6 3') == '3 3'\nassert solution('8 3') == '3 3'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\n...#...\\n...#...\\n') == '5 13'\nassert solution('2 5\\n#...\\n##..\\n#...\\n') == '0 0'\nassert solution('2 10\\n.##.\\n##.##\\n#.#.#\\n##...\\n#.###\\n##.##\\n#...#\\n#####\\n##...\\n##...\\n') == '10 12'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '0'\nassert solution('1 1 1 1') == '3'\nassert solution('1 1 2 3') == '0'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"13\"\nassert solution(\"5 7\") == \"10\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"5 13\"\nassert solution(\"2 2\") == \"4 4\"\nassert solution(\"4 5\") == \"5 8\"\nassert solution(\"9 9\") == \"9 9\"\nassert solution(\"1 1\") == \"0 1\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\n...#.\n...#.\n...#.''') == '13'\n\"\"\"\nGiven an n x m chessboard, where. is empty cell, # is broken cell, and ^ means an empty cell with a queen at it.\n\nZapray is to place n queens on the chessboard so that no two queens attack each other.\n\nAlso, no three queens can attack each other, and no queen can attack any other queen when placed on the chessboard.\n\nThe only things left to place is the remaining empty cells.\n\nEach line in stdin is an order of the following operations:\n\n. : Place a queen at the cell with index $(i, j)$ (i \\in [1, n], j \\in [1, m])\n^ : Place a queen at the cell with index $(i, j)$ (i \\in [1, n], j \\in [1, m])\n! : Count the number of empty cells left.\n\nReturn the maximum number of queens that can be placed on the chessboard and their number of ways to do it.\n\nExample 1:\n\nInput: stdin = \"1 3\n##\n##\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n'\n                '#.#\\n'\n                '....\\n') == '5 13'\n\nassert solution('5 4\\n'\n                '..#\\n'\n                '....\\n'\n                '....\\n'\n                '....\\n') == '0 13'\n\nassert solution('20 20\\n'\n                '#####\\n'\n                '#.##\\n'\n                '###.\\n'\n                '#.#.\\n'\n                '#.#.\\n'\n                '#.##\\n'\n                '###.\\n'\n                '##.#\\n'\n                '#####\\n'\n                '#.##\\n'\n                '###.\\n'\n                '#.#.\\n'\n                '#.##\\n') == '12 13'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"5 13\"\nassert solution(\"3 4\\n....\\n.#.#\\n....\") == \"5 13\"\nassert solution(\"3 4\\n....\\n##.#\\n....\") == \"5 13\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"5 13\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"7 13\"\nassert solution(\"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"10 13\"\n\nSample Input:\n5 6\n.....\n....\n..#..\n....\n.##.#\n.....\nSample Output:\n2 1\n\"\"\""
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"4 5\") == \"9\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\nassert solution(\"3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0\") == \"5\""
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"5\"\nassert solution(\"1 2 5 1\") == \"2\"\nassert solution(\"3 1? 0\") == \"3\"\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '5'\nassert solution('1 2 5 1') == '5'\nassert solution('2 3 3 1') == '4'"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 5 1') == '5'\nassert solution('2 3 3 1') == '3'\nassert solution('3 1? 0') == '2'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''4 4\n1 2 3\n2 3?\n3 1\n''') == '3'\n'''\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''\n3 3\n1 2 4 1\n2 3 2 1\n3 1? 0\n''') == '4'\nassert solution('''\n2 5\n1 2?\n2 1?\n''') == '1'\n''')\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n2 2\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n5 5\n3 2 1 5 1\n2 3 3 1\n3 1? 0\n4 5\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n5 5\n3 2 1 5 1\n2 3 3 1\n3 1? 0\n5 1\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 2\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 2\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 2\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 2\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 2\n1 2 5 1\n2 3 3 1\n3 1?? 0\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"5\"\nassert solution(\"1 2 5 1\") == \"5\"\nassert solution(\"2 3 3 1\") == \"3\"\nassert solution(\"3 1? 0\") == \"1\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0'\nassert solution('3 3') == '3'"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n-1 0\\n-1 1\\n0 1') == '3'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"100 100\") == \"100\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4 5 6') == '1'\nassert solution('1 2 3 4 5 6 7 8') == '1'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n-1 0\n-1 1\n0 1\n''') == '3'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n-1 0\n-1 1\n0 1''') == '0'\nassert solution('''2 3\n-1 0\n-1 1\n0 1\n-1 0''') == '1'\nassert solution('''2 3\n-1 0\n-1 1\n0 1\n-1 0\n''') == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '0'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0'\nassert solution('4 5') == '3'\nassert solution('100 99') == '99'\nassert solution('1 2 3 4') == '3'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10 3\n-1 0\n-1 1\n0 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 5\n-1 0 1\n-1 2\n0 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n11 5\n-1 0 1 2\n-1 3\n0 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 9\n-1 1 2 3 4 5\n-1 6 7 8 9\n\"\"\") == \"6\"\nassert solution(\"\"\"\n6 8\n-1 1 2 3 4 5\n-1 6 7 8 9\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\nassert solution('8\\n23 1 4 3 6 5 2') == '7'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\nassert solution('4\\n1 1 2 4') == '2'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('4\\n2 1 1 2') == '4'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\\n5\\n9\\n10\\n12\\n15\\n\") == \"6\"\n\"\"\""
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '6'\nassert solution('5\\n1\\n2\\n3\\n4\\n') == '5'\nassert solution('4\\n1\\n2\\n3\\n') == '4'\nassert solution('6\\n1\\n2\\n3\\n') == '6'\nassert solution('5\\n1\\n2\\n3\\n4\\n') == '5'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('4\\n5 3 6 2') == '6'\nassert solution('4\\n1 2 3') == '1'\nassert solution('4\\n7 3 6 2') == '3'\nassert solution('4\\n1 2 3') == '1'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n2\\n1') == '6'\nassert solution('4\\n6\\n2\\n1') == '6'\n\nimport collections"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '6'\nassert solution('5') == '2'\nassert solution('7') == '1'\nassert solution('8') == '1'\nassert solution('9') == '2'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"6\"\nassert solution(\"4\") == \"5\"\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n\n---Input---\nThe first line contains a single integer, the length of the sequence, and a sequence of numbers.\n\nThe next line contains a sequence of numbers, the sequence.\n\nNote: For each integer $i$ in the sequence, the number of distinct values of $f$ taking on over that sequence is the number of integers $i$ such that the sequence can be broken down to have a sequence of length $i$, which can be formed by combining the integers $i$ and $i+1$, and so on.\n\n---Output---\nThe next line contains a single integer, the number of distinct values of $f$ taking on over the given sequence.\n\n\"\"\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"1 1 1 1\") == \"0.000000\"\nassert solution(\"5 1 1\") == \"3.000000\"\nassert solution(\"1 5 1\") == \"0.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '3.000000'\nassert solution('1 1 1 3 2') == '2.000000'\n\"\"\"\n\nx_s, y_s, s_s, r_i, r_f = map(int, stdin.split())\n\ns_f = r_f\n\nx_a, y_a = map(int, input().split())\n\nwhile x_a ** 2 + y_a ** 2 > s_f ** 2:\n    s_f = s_f - s_s\n\nassert s_f >= r_i\n\nd = s_f - r_i"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 1 1 3 2''') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\"\n\n'''\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '3.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1 3 2') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '2.000000'\n\"\"\""
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"3 3 3 4 4\") == \"5.000000\"\nassert solution(\"1 1 1 3 2\") == \"2.000000\"\nassert solution(\"3 2 2 4 5\") == \"7.000000\"\nassert solution(\"4 4 4 4 4\") == \"1.000000\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n') == '96'\nassert solution('4\\n1 2\\n1 3\\n1 4\\n') == '31'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4') == '96'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '0'"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4') == '96'\nassert solution('4\\n1 2\\n1 3\\n1 4') == '16'\nassert solution('1\\n1 2\\n1 3\\n1 4') == '4'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 1, 2, 3, 4]) == 96"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2''') == '96'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n5 6''') == '91'\n'''"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"96\"\nassert solution(\"3\") == \"96\"\nassert solution(\"5\") == \"96\"\nassert solution(\"4\") == \"96\""
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n''') == '96'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '96', 'Wrong answer'\nassert solution('4\\n1 2\\n1 3\\n1 4\\n') == '4', 'Wrong answer'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''\n5\n1 2\n2 3\n4 5\n5 6\n3 7\n''') == '92'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '96'\nassert solution('3') == '125'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n0 0\n0 1\n1 0\n1 1\n\"\"\") == \"3\""
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2\"\nassert solution('3') == \"1\"\nassert solution('4') == \"1\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n''') == \"3\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n''') == \"3\"\n\nassert solution('''\n5\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\nSample Output:\n2\n''') == \"2\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2') == '4'\nassert solution('3\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\n\n'''\n\nimport math"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n\"\"\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"1\\n0\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2') == '4'\nassert solution('1\\n0') == '0'\nassert solution('1\\n0 0') == '0'\nassert solution('2\\n0 0\\n0 1') == '1'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2 8\n3 1\n1 4\n\"\"\") == \"10\"\nassert solution(\"\"\"\n5\n1 3\n2 3\n2 3\n1 4\n1 5\nSample Output:\n10\n10\n10\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 2') == '10'\nassert solution('3 5\\n1 2 3 4 5') == '9'\nassert solution('10 8\\n1 2 3 4 5 6 7 8 9') == '10'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 8\\n3 1\\n1 4\\n\") == \"10\\n10\\n9\\n\""
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10 10 10\""
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '10'\nassert solution('1') == '10'\nassert solution('2') == '10'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4') == '10'\nassert solution('2\\n1\\n3\\n4') == '10'\nassert solution('3\\n1\\n2\\n3') == '5'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n2 8\n3 1\n1 4\n\"\"\") == \"10\"\nassert solution(\"\"\"\n3\n1 1\n1 1\n1 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 3') == '10'\nassert solution('2\\n2 2') == '10'"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 1\\n4 6\\n5 10') == '9'\nprint('Congratulations, have a nice day!')\n'''"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"10\"\nassert solution_2() == \"10\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"IMPOSSIBLE\"\nassert solution(\"5 4\") == \"2\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == 'IMPOSSIBLE'\nassert solution('1 2') == '3'\nassert solution('2 4') == '2'\nassert solution('2 5') == '3'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4\\n#####\\n#JF#\\n#..#\\n#..#') == '3'\nassert solution('3 3\\n#######\\n.JF.\\n.J#.#\\n#######') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n####\\n#JF\\n#..\\n#..\\n') == 'IMPOSSIBLE'\nassert solution('4 4\\n####\\n#JF\\n#..\\n#..\\n') == '3'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n#####\\n#.J\\n#..#\\n#####\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n####\\n###\\n###\\n####\") == \"4\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"IMPOSSIBLE\"\n\nassert solution(\"2 4\") == \"3\""
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#\\n') == \"IMPOSSIBLE\"\nprint(solution(input()))\n\ninput() == '3'\n\ninput() == '6\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput() == '2\n\ninput() == '2\n\ninput() == '3\n\ninput() == '5\n\ninput() == '6\n\ninput() == '4\n\ninput()"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n#####\\n#..#\\n#..#\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n####\\n#..#\\n#..#\") == \"0\"\nassert solution(\"4 4\\n#J#\\n#..#\\n#..#\") == \"3\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == 'IMPOSSIBLE'\nassert solution('4 4') == '3'"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"IMPOSSIBLE\"\nassert solution(\"5 5\") == \"4\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 2\\n2\\n1 1') == '0.3333333333'\nassert solution('5 5 2\\n1 2 3 3 3\\n1 2 3\\n1 3 4\\n1 2\\n1 3') == '0.3333333333'\nassert solution('1 1\\n1') == '0.0000'\nassert solution('5 5 5 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1') == '0.000000'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 2\n2\n1 1\n''') == '0.3333333333'\n\nassert solution('''\n1 2 2\n3\n1 1\n''') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 2\\n2\\n1 1\\n') == '0.3333333333'\nassert solution('1 1\\n') == '1.0'\nassert solution('1\\n') == '1.0'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 2') == '0.33333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('2') == '0.0'\n\n'''\n\nimport numpy as np\nfrom math import factorial\nfrom scipy.special import comb"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('1 2 3') == '0.3333333333'\nassert solution('2 3 4') == '0.3333333333'\nassert solution('3 4 5') == '0.3333333333'\nassert solution('4 5 6') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 2\\n2\\n1 1') == '0.3333333333'\nassert solution('3 4 3\\n4 3 2\\n3 3 3\\n2 4 3') == '0.3333333333'\nassert solution('10 5 6\\n10 5 10\\n5 4 6\\n1 6 5\\n6 6 6\\n6 6 6\\n6 6 6\\n6 6 6\\n6 6 6\\n6 6 6\\n6 6 6\\n6 6 6') == '0.3333333333'\nassert solution('5 5 5\\n4 5 4\\n5 5 5\\n2 4 5\\n5 5 5\\n3 4 5\\n5 5 5\\n4 5 5\\n5 5 5\\n4 5 5\\n5 5 5\\n4 5 5\\n5 5 5') == '0.3333333333'\nassert solution('100000 50000 50000\\n3 4 6\\n2 4 3\\n5 3 5\\n6 5 6\\n5 3 5\\n3 4 3\\n2 5 3\\n3 2 6\\n2 4 3\\n1 1 4\\n4 5 5\\n1 2 2\\n3 4 4\\n4 5 5\\n6 6 6\\n6 6 6\\n6 6 6\\n6 6 6\\n6 6 6') == '0.10000000359'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 2') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1 2 2\n    2\n    1 1\n    ''') == '0.3333333333', 'First Example'\nassert solution('''\n    1 2 2\n    3\n    1 1\n    ''') == '0.166666666667', 'Second Example'\nassert solution('''\n    1 2 2\n    5\n    1 1\n    ''') == '0.833333333333', 'Third Example'\nassert solution('''\n    1 2 2\n    4\n    1 1\n    ''') == '0.400000005960', 'Fourth Example'\n''')\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 2\n2\n1 1\n''') == '0.3333333333', 'First'\nassert solution('''\n1 2 3\n3\n1 2 3\n''') == '0.3333333333', 'Second'\nassert solution('''\n1 2 3\n3\n1 2 3\n''') == '0.3333333333', 'Third'\nassert solution('''\n1 2 3\n3\n1 2 3\n''') == '0.5', 'Fourth'\nassert solution('''\n1 2 1\n1\n1 2\n''') == '0.5', 'Fifth'\n''') == '0.5', 'Sixth'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1023\"\nassert solution() == \"1023\"\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\np = sys.stdin.readline()"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('*') == '1'\nassert solution('01') == '1'\nassert solution('1*') == '1'\nassert solution('1*1') == '2'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1023'\nassert solution('10\\n1') == '1024'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1'\nassert solution('7') == '2'\nassert solution('8') == '3'\nassert solution('9') == '4'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '10'\nassert solution('10') == '1023'\nassert solution('11') == '10'\nassert solution('01') == '10'\nassert solution('11101') == '10'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10\n111\n101''') == '11011101'\nassert solution('''2\n11\n10''') == '1101'\nassert solution('''10\n1\n111''') == '110111'\nassert solution('''10\n11111111111111111\n11111111111111111''') == '11111111111111111111111111111'\n'''\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"2\"\nassert solution(\"100\") == \"50\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n20\n1*1\n''') == '1024'\nassert solution('''\n20\n1*1\n1\n''') == '1'\nassert solution('''\n20\n1*1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == \"2\"\nassert solution('4') == \"4\"\nassert solution('50') == \"5963\"\nassert solution('101') == \"10101\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"11\") == \"0\"\nassert solution(\"010111\") == \"0\"\nassert solution(\"1010111\") == \"0\"\nassert solution(\"10110111\") == \"0\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 2') == '4'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n\") == \"6\"\nassert solution(\"1 2\\n\") == \"3\"\nassert solution(\"2 2\\n\") == \"6\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1 1') == '0'\nassert solution('0 0') == '0'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 3\") == \"12\"\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '6'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n') == '6'\nassert solution('3\\n2\\n') == '0'\n\"\"\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2') == '4'\nassert solution('2\\n3') == '7'\nassert solution('2\\n0') == '0'\n'''\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 7') == '15'\nassert solution('5 5') == '7'\nassert solution('10 10') == '33'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"5 1\") == \"6\"\n\"\"\"\n\nx, y = map(int, stdin.readline().split())"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"4 4\") == \"6\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 2000 7') == '2930'\nassert solution('100') == 'Impossible'\nassert solution('480') == 'Impossible'\nassert solution('500') == 'Impossible'\nassert solution('550') == 'Impossible'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\n\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000 2000 7\\n100') == '2930'\nassert solution('1000 2000 7\\n100\\n480') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n480\\n500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000') == 'Impossible'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 4 6') == 'Impossible'"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\"\"\") == \"2930\"\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\"\"\") == \"Impossible\"\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\"\"\") == \"Impossible\"\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\"\"\") == \"Impossible\"\nassert solution(\"\"\"1000 2000 7\n100\n480\n500\n550\n1000\"\"\") == \"Impossible\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == '2930'\nassert solution('''\n1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == 'Impossible'\nprint(solution('''\n1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n'''))\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('200 1000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1500') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == \"2930\"\n\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == \"Impossible\"\n\nassert solution('''1000 2000 7\n1000\n480\n500\n550\n1000\n1400\n1500''') == \"2930\"\n\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == \"Impossible\"\n\nassert solution('''1000 2000 7\n1000\n480\n500\n550\n1000\n1400\n1500''') == \"Impossible\""
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\nassert solution(\"10 20 10 50\") == \"Impossible\"\nassert solution(\"1000000 1000000 100000000 100000000\") == \"Impossible\"\nassert solution(\"200 200 100\") == \"Impossible\""
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == '2930'\nassert solution('1000 2000 7\\n1000\\n480\\n500\\n550\\n1000\\n1400\\n1500\\n') == 'Impossible'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 0 1') == '1'\nassert solution('1 1 1') == '0'"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\""
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 1\") == \"3\"\nassert solution(\"2 1 2\") == \"2\"\nassert solution(\"2 1 1\") == \"3\"\nassert solution(\"1 1 2\") == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n3 1 2\n2 1 1 1\n2 2 1 1\n1 3\n''') == '2'\nassert solution('''\n2 2\n1 1 1\n1 2\n1 2\n''') == '3'\nassert solution('''\n2 2\n0 1\n0 1\n''') == '1'\nassert solution('''\n2 1\n0 0\n1 0\n1 0\n''') == '1'\nassert solution('''\n3 3\n0 2 1\n0 3 1\n0 2 1\n''') == '1'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 2 3\\n0\\n0\\n1\\n\"\n) == \"2\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3\\n0') == '2'\nassert solution('1 2 3\\n0\\n1\\n1') == '3'\n\n---\n\nA monkey can remember and also memorize everything it has seen. When a new object is introduced, if it is new, or if it is already in the cache, then that object is added in the cache and it\u2019s index is stored in a dictionary where the key is the object\u2019s index, and the value is the object itself.\n\nThe monkey then looks up the object in the cache. If the object was seen before, and was recently accessed, then it is not necessary to do anything. If the object was new or not seen before, then the object is read into the cache, and its index is saved.\n\nNow that the object is in the cache, the monkey\u2019s next access to that object must have its key in the dictionary. If the key was not found in the dictionary, it must be in the cache and the object\u2019s value must be updated to the index of that object\u2019s key in the dictionary. In this way, the monkey\u2019s memory is wiped.\n\nNow that the monkey has seen every object, the first object it encounters is removed from the cache.\n\nYour task is to write a program that takes a list of N integers as input and returns the least number of accesses that the monkey must make to the cache in order to reach every object in the list.\n\nInput\n\nThe first line contains two integers, N and m, the number of objects and the number of accesses.\n\nEach of the next N lines contains a single integer, t, which is the index of an object that the monkey is considering to add to the cache. The index t is distinct from all the other indices of objects in the list.\n\nOutput\n\nReturn the least number of accesses needed to reach all objects in the list.\n\nExamples\nInput\n\n4 2\n0\n2\n1\n3\n\nOutput\n\n2\n\nExplanation\n\nThe list is:\n\n0 1 2 3\n\nThe monkeys see object 0, and it is seen, so it is added to the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkeys see object 2, and it is seen, so it is added to the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkeys see object 1, and it is seen, so it is added to the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkeys see object 3, and it is seen, so it is added to the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey\u2019s memory is wiped, so the cache is empty, so it must be removed from the cache.\n\nThe monkey must access object 1 twice:\n\nThe monkey visits the cache, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so the cache is now:\n\n0 1 2 3\n\nThe monkey visits the cache again, so it must fetch the object from the cache, so"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1 2 3\\n0\\n0\\n1\"\n) == \"2\"\nassert solution(\n    \"1 2 3\\n0\\n0\\n1\"\n) == \"1\"\nassert solution(\n    \"1 2 3\\n0\\n1\\n0\\n1\"\n) == \"1\"\nassert solution(\n    \"1 2 3\\n0\\n1\\n0\\n0\"\n) == \"0\"\nassert solution(\n    \"1 2 3\\n0\\n0\\n0\\n1\"\n) == \"0\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == \"2\"\nassert solution('0') == \"0\"\nassert solution('0') == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1') == '2'\nassert solution('5 3 2 1\\n0 0 0 0 0\\n1 0 1 2\\n3 0 3 1\\n0 0 0 0 0\\n1 0 1 2 3\\n3 1 3 2 1') == '3'\nassert solution('10 1 2 3\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('10 5 4 7') == '1'\nassert solution('5 3 3 5 5 5') == '3'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\n\nassert solution('''2\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '5'\n\nassert solution('''3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '0'\n\nassert solution('''1\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '0'\n\nassert solution('''2\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '10'\nassert solution('8 10') == '260'\nassert solution('1 1') == '5'\nassert solution('20 2') == '1'\nassert solution('20 20') == '0'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '10', 'Should work for map with 3x3'\nassert solution('-5 2 -5') == '5', 'Should work for map with negative altitude, coordinates'\nassert solution('-1 -2 -1') == '10', 'Should work for map with negative altitude, coordinates'\nassert solution('5 4 -5') == '10', 'Should work for map with negative altitude, coordinates'\nassert solution('2 2') == '0', 'Should work for map with negative altitude, coordinates'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n    \"\"\"\n) == \"10\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '10'\nassert solution('6 6') == '105'\nassert solution('11 10') == '1285'\nassert solution('3 9') == '2536'\nassert solution('4 4') == '65536'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"10\"\nassert solution(\"3 3\") == \"10\"\nassert solution(\"4 5 3\") == \"10\"\nassert solution(\"5 6 5\") == \"25\"\nassert solution(\"8 8 8\") == \"40\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '0'\nassert solution('3') == '12'\nassert solution('4') == '12'\nassert solution('5') == '12'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\nassert solution('''5 4\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '8'\nassert solution('''6 4\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n2 3\n''') == '13'\nassert solution('''4 4\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n2 3\n2 4\n''') == '25'\nassert solution('''5 4\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n2 3\n2 4\n2 5\n''') == '28'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2''') == '10'\nassert solution('''2 2\n-1 2\n2 1''') == '2'\nassert solution('''2 2\n1 2\n2 1''') == '4'\nassert solution('''2 2\n1 2\n2 1''') == '3'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '30800'"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"300\"\nassert solution(\"2 4\") == \"400\""
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == '3000'\nassert solution('5 3') == '2000'\nassert solution('5 2') == '2000'\nassert solution('3 4') == '1250'\nassert solution('1 5') == '1000'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"3100\"\nassert solution(\"5 3\") == \"3100\"\nassert solution(\"3 3\") == \"0\"\n\ninput()\ninput()\ninput()\nprint(solution(stdin))\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '3300'\nassert solution('4 1') == '400'\nassert solution('3 1') == '31'\nassert solution('10 10') == '5500'\nassert solution('8 8') == '4750'"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 2 1000\n2 3 1000\n4 5 500\n2''') == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100','should be 3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3500','should be 3500'\n\nassert solution('''\n2 1\n1 2 1000\n1 3 1000\n2\n1 4 3000\n3 5 3000\n''') == '3600','should be 3600'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 5\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 5\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3900'\nassert solution('''\n10 2\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '1260'\n''')"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 3') == '0'\nassert solution('5 5') == '0'\nassert solution('1 4 300') == '300'\nassert solution('3 5 300') == '0'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"3100\"\nassert solution(\"5 4\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"4200\"\nassert solution(\"5 4\\n1 2 1000\\n2 3 1000\\n4 5 500\\n3\\n1 4 300\\n3 5 300\") == \"3000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n3\\n1 4 300\\n3 5 300\") == \"2000\"\nassert solution(\"5 2\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\") == \"0\"\n\"\"\""
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n0 1\n''') == '0'\nassert solution('''\n3 2\n0 1 0\n''') == '1'\nassert solution('''\n3 4\n0 0 1 0\n''') == '3'"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    2 1\n    0 1\n''') == '0'\n\nassert solution('''\n    3 1\n    0 2\n    0 1\n''') == '1'\n\nassert solution('''\n    3 1\n    0 2\n    0 1\n''') == '2'\n\nassert solution('''\n    4 1\n    0 2\n    0 1\n    0 3\n''') == '1'\n\nassert solution('''\n    5 1\n    0 2\n    0 1\n    0 4\n    0 3\n''') == '2'"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\n\nassert solution() == '0'"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\n0 1') == '0'\nassert solution('1 2\\n0 0') == '1'\nassert solution('1 1\\n0 0') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 1') == '0'\nassert solution('2\\n0 1\\n0 1') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2', 'First'\nassert solution('2 3') == '0', 'Second'\nassert solution('3 4') == '3', 'Third'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n0 1\n''') == '0'\nassert solution('''\n2 1\n0 1\n''') == '1'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2\\n0 1\\n1 0') == '0'\nassert solution('3 2\\n0 1\\n1 0') == '1'\nassert solution('3 2\\n0 1\\n1 0') == '2'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 4\\n3 3\\n4 0\\n0 2\\n0 1\\n1 1') == '1'\nassert solution('1 2\\n0 1\\n1 1') == '2'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 10') == '10'\nassert solution('1 2') == '9'\nassert solution('10 10') == '10'\nassert solution('1 10') == '10'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 10') == '10'\nassert solution('1 10') == '10'\nassert solution('1 10') == '10'\nassert solution('1 10') == '10'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 10') == '10'"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"10\"\nprint(solution(input))\nprint(solution.__name__)\n\"\"\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"5 15\") == \"0\""
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\nX Y\n5\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\nX Y\n21\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\nX Y\n73\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"4 1\") == \"1\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10') == '10'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"1 100\") == \"99\"\n\"\"\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == '10'\nassert solution('4 4') == '10'\nassert solution('0 0') == '0'\n\"\"\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '0'\nassert solution('10\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0\\n1000 0') == '3'\nassert solution('1\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0\\n1000 0') == '0'\nassert solution('1\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0\\n1000 0') == '1'\nassert solution('10\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n0 0\\n1000 0') == '5'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n0 0\\n1 0\\n0 1') == \"1\"\nassert solution('2\\n0 0\\n1 0\\n0 1\\n1 0\\n1 1') == \"0\"\nassert solution('3\\n0 0\\n1 0\\n0 1\\n1 0\\n1 1\\n1 1') == \"1\"\nassert solution('4\\n0 0\\n1 0\\n0 1\\n1 0\\n1 1\\n1 1') == \"1\"\nassert solution('5\\n0 0\\n1 0\\n0 1\\n1 0\\n1 1\\n1 1\\n1 1') == \"0\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n0 0\n1000 0\n0 1000\n1000 1000''') == '0'\nassert solution('''4\n0 0\n1 0\n0 1\n1 1''') == '3'\nassert solution('''4\n0 0\n1 1\n0 1\n1 0''') == '2'\nassert solution('''4\n0 0\n1 1\n0 1\n1 0''') == '1'\nassert solution('''4\n0 0\n1 1\n0 1\n1 0''') == '1'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4\n    0 0\n    1000 0\n    0 1000\n    1000 1000\n''') == '0'\n\nassert solution('''\n    3\n    0 0\n    0 0\n    0 0\n''') == '1'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0\\n0 0\\n0 1000\\n1000 1000') == '0'\nassert solution('2 0\\n0 0\\n1000 0\\n0 1000') == '1'\nassert solution('10 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n17 18\\n19 20\\n21 22\\n23 24') == '6'\nassert solution('100 1\\n200 1\\n300 1\\n400 1\\n500 1\\n600 1\\n700 1\\n800 1\\n900 1\\n1000 1\\n1100 1\\n1200 1\\n1300 1\\n1400 1\\n1500 1\\n1600 1\\n1700 1\\n1800 1\\n1900 1\\n2000 1\\n2100 1\\n2200 1\\n2300 1\\n2400 1\\n2500 1\\n2600 1\\n2800 1\\n2900 1\\n3000 1\\n3200 1\\n3300 1\\n3400 1\\n3500 1\\n3600 1\\n3700 1\\n3800 1\\n3900 1\\n4000 1\\n4200 1\\n4300 1\\n4400 1\\n4500 1\\n4600 1\\n4700 1\\n4800 1\\n4900 1\\n5000 1\\n5200 1\\n5300 1\\n5400 1\\n5500 1\\n5600 1\\n5700 1\\n5800 1\\n5900 1\\n6000 1\\n6200 1\\n6300 1\\n6400 1\\n6500 1\\n6600 1\\n6700 1\\n6800 1\\n6900 1\\n7000 1\\n7200 1\\n7300 1\\n7400 1\\n7500 1\\n7600 1\\n7700 1\\n7800 1\\n7900 1\\n8000 1\\n8200 1\\n8300 1\\n8400 1\\n8500 1\\n8600 1\\n8700 1\\n8800 1\\n8900 1\\n9000 1\\n9200 1\\n9300 1\\n9400 1\\n9500 1\\n9600 1\\n9700 1\\n9800 1\\n9900 1\\n10000 1\\n10200 1\\n10300 1\\n10400 1\\n10500 1\\n10600 1\\n10700 1\\n10800 1\\n10900 1\\n11000 1\\n11200 1\\n11300 1\\n11400 1\\n11500 1\\n11600 1\\n11700 1\\n11800 1\\n11900 1\\n12000 1\\n12200 1\\n12300 1\\n12400 1\\n12500 1\\n12600 1\\n12700 1\\n12800 1\\n12900 1\\n13000 1\\n13200 1\\n13300 1\\n13400 1\\n13500 1\\n13600 1\\n13700 1\\n13800 1\\n13900 1\\n14000 1\\n14200 1\\n14300 1\\n14400 1\\n14500 1\\n14600 1\\n14700 1\\n14800 1\\n14900 1\\n15000 1\\n15200 1\\n15300 1\\n15400 1\\n15500 1\\n15600 1\\n15700 1\\n15800 1\\n15900 1\\n16000 1\\n16200 1\\n16300 1\\n16400 1\\n16500 1\\n16600 1\\n16700 1\\n16800 1\\n16900 1\\n17000 1\\n17200 1\\n17300 1\\n17400 1\\n17500 1\\n17600 1\\n17700 1\\n17800 1\\n17900 1\\n18000 1\\n18200 1\\n18300 1\\n18400 1\\n18500 1\\n18600 1\\n18700 1\\n18800 1\\n18900 1\\n19000 1\\n19200 1\\n19300 1\\n19400 1\\n19500 1\\n19600 1\\n19700 1\\n19800 1\\n19900 1\\n20000 1\\n21000 1\\n21100 1\\n21200 1\\n22000 1\\n23000 1\\n24000 1\\n25000 1\\n26000 1\\n27000 1\\n28000 1\\n29000 1\\n30000 1\\n310001 1\\n320001 1\\n330000 1\\n340000 1\\n350000 1\\n360000 1\\n370000 1\\n380000 1\\n390000 1\\n400001 1\\n410001 1\\n420001 1\\n430000 1\\n440000 1\\n450000 1\\n460000 1\\n470000 1\\n480000 1\\n490000 1\\n500001 1\\n510000 1\\n600001 1\\n700001 1\\n800001 1\\n900001 1\\n1000001 1\\n1100001 1\\n1200001 1\\n1300001 1\\n1400001 1\\n1500001 1\\n1600001 1\\n1700001 1\\n1800001 1\\n1900001 1\\n200000 1\\n2100001 1\\n2200001 1\\n2300001 1\\n2400001 1\\n2500001 1\\n2600001 1\\n2700001 1\\n2800001 1\\n2900001 1\\n3000000 1\\n32000001 1\\n33000000 1\\n34000000 1\\n35000000 1\\n36000000 1\\n37000000 1\\n38000000 1\\n39000000 1\\n40000001 1\\n41000000 1\\n42000001 1\\n43000000 1\\n44000000 1\\n45000000 1\\n46000000 1\\n47000000 1\\n48000000 1\\n49000000 1\\n500000001 1\\n51000000 1\\n600000001 1\\n700000001 1\\n800000001 1\\n900000001 1\\n10000000 2\\n11000001 2\\n12000001 2\\n13000001 2\\n14000001 2\\n15000001 2\\n16000001 2\\n17000001 2\\n18000001 2\\n19000001 2\\n200000 2\\n21000001 2\\n22000001 2\\n23000001 2\\n24000001 2\\n25000001 2\\n26000001 2\\n27000001 2\\n28000001 2\\n29000001 2\\n3000000 2\\n32000001 2\\n33000000 2\\n34000000 2\\n35000000 2\\n36000000 2\\n37000000 2\\n38000000 2\\n39000000 2\\n40000002 2\\n41000000 2\\n42000001 2\\n43000000 2\\n44000000 2\\n45000000 2\\n46000000 2\\n47000000 2\\n48000000"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '0'\nassert solution('''4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '4'\nassert solution('''4\n0 0\n0 0\n0 0\n0 0\n''') == '1'\nassert solution('''4\n0 0\n0 0\n0 0\n0 0\n''') == '2'\n\n\"\"\""
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\") == \"0\"\nassert solution(\"5\\n-4 -4\\n-4 4\\n0 4\\n4 -4\\n4 4\") == \"2\"\nassert solution(\"3\\n0 0\\n1000 0\\n0 1000\") == \"0\"\nassert solution(\"1\\n-3 -3\") == \"1\""
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"1\"\nassert solution(\"\"\"4\n-2000 -2000\n2000 -2000\n2000 2000\n-2000 -2000\n\"\"\") == \"0\"\nassert solution(\"\"\"5\n-2000 -2000\n2000 -2000\n2000 2000\n-2000 -2000\n-2000 2000\n\"\"\") == \"2\"\nassert solution(\"\"\"7\n-1000 -1000\n1000 -1000\n1000 1000\n-1000 -1000\n-1000 1000\n-1000 1000\n-1000 1000\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\\n0 0\\n1000 0\") == \"1\"\nassert solution(\"2\\n0 1000\\n1000 1000\") == \"0\"\nassert solution(\"2\\n0 1000\\n1000 1000\") == \"0\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n8\n-20000 0\n0 20000 0\n-20000 20000\n-20000 20000\n0 -20000 20000\n-20000 20000 -20000\n0 20000 20000\n-20000 20000 20000\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n0 0\n-20000 0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n0 0\n0 0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('2 2\\n1 0 0.3\\n2 0 0.2\\n1 0 0.3\\n2 0 0.2') == '0.300000000 1.000000000'\nprint(solution(*(list(map(int, input().split())))))"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '0.500000000 1.000000000'"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 1 0.5\n0 1 0.5\n0 1 0.5\n''') == '0.500000000 1.000000000'\n\nassert solution('''\n3\n0 1 0.5\n0 1 0.5\n1 1 1.0\n''') == '0.500000000 1.000000000'\n\nassert solution('''\n2\n0 1\n0 1\n''') == '0.500000000 1.000000000'\n\nprint('SUCCESS: %d/%d' % (successes, tests))"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"0.500000000 1.000000000\"\nassert solution(\"4 3\") == \"0.033333333 1.03333333\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('3 1\\n0 1 0.5\\n0 2 0.5\\n0 3 0.5') == '0.500000000 1.000000000'\n\n'''\n\nfrom decimal import Decimal"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 0.5') == '0.500000000 1.000000000'\nassert solution('2 1') == '0.500000000 1.000000000'\nassert solution('3 2') == '-1'\nassert solution('4 2') == '-1'\nassert solution('5 2') == '-1'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1\n0 1 0.5\n''') == '0.500000000 1.000000000'\nassert solution('''2 100000000\n2 2 0.5\n''') == '-1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"0.5 0.5\"\nassert solution(\"1 0 0.5\") == \"0.5 0.5\"\nassert solution(\"1 0 0.5 0.5\") == \"0.5 0.5\"\n\n[Finished in 0.2s]\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0.500000000 1.000000000', 'wrong'\nassert solution('2 1') == '0.500000000 1.000000000', 'wrong'\nassert solution('2 10') == '0.500000000 1.000000000', 'wrong'\nassert solution('100 100') == '-1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000000000 -1.00000000"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '7'"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''5\n1 1\n5 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''5\n1 1\n5 1\n1 5\n10 10\n10 8\n7 10''') == '6'\nassert solution('''5\n1 1\n5 1\n1 5\n10 10\n10 8\n7 10''') == '6'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 1\n4 1\n1 5\n10 10\n10 8''') == '7'\n\"\"\"\n--- Part Two ---\n\nYou notice that the couriers are faster than you, and now that you can get some customers to your location, you need to choose which courier will deliver first and which one will be delayed.\n\nThe two slowest couriers are both in the same building, but have different delivery times: they both would deliver the same customer in 1 minute. The courier who has the shorter delivery time gets to pick them up first.\n\nIf two couriers are in the same building, the one with the shortest delivery time is delayed by 1 minute compared to the other courier. So, the shorter courier is delayed.\n\nYou need to tell the shortest delivery time. Write a function that returns the shortest delivery time. You can assume that the courier that is delayed by 1 minute will get to the customer in the same second.\n\n-----Input-----\nInput starts with one line containing an integer $N$, the number of customers to be divided up, where $2 < N \\leq 1000$.\n\nThis is followed by $N$ lines, each containing a pair of integers $x$ and $y$ denoting the position of one customer, where $0 \\leq x, y \\leq 1000$.\n\n-----Output-----\nPrint a single line containing the shortest delivery time required by the two couriers (i.e., the minimum of the two delivery times offered by each company separately).\n\n\"\"\"\n\nimport collections\nimport itertools\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n1 1\\n4 1') == '7'\nassert solution('6\\n1 1\\n4 1\\n10 10\\n10 8\\n7 10') == '9'\nprint('\"Run\" is good for long tests. Run \"Check\" if things are working (and you can Ctrl+F to search everywhere for \"Check\").')\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 0\n1 2\n0 0\n0 0\n''') == '2'\nassert solution('''\n3\n0 0\n1 1\n2 2\n''') == '0'\nassert solution('''\n3\n1 2\n1 1\n2 2\n''') == '1'\nassert solution('''\n2\n0 0\n0 0\n''') == '0'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"7\"\nassert (solution(\"\"\"\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n\"\"\") == \"7\")\nassert (solution(\"\"\"\n2\n5 5\n5 5\n\"\"\") == \"8\")\nassert (solution(\"\"\"\n2\n5 5\n5 5\n\"\"\") == \"5\")\nassert (solution(\"\"\"\n2\n1 1\n1 1\n\"\"\") == \"1\")\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b') == '9-b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n\"\"\") == \"9-b\"\nassert solution(\"\"\"\n2\na b\n3-b 5-b\n6-a 2-b\n3\na\nb\n0\nSample Output:\n9-b\n8-a\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '8-a', \"Case 1\"\n\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\nab\nba\n''') == '9-b', \"Case 2\"\n\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\nabc\nab\n''') == '8-a', \"Case 3\"\n\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\nab\nba\n''') == '8-a', \"Case 4\"\n\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\nabc\nab\n''') == '8-a', \"Case 5\""
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''a b\n3-b 5-b\n6-a 2-b\n2''') == '9-b'\n\nassert solution('''a b\nb a\n0''') == '8-a'\n\nassert solution('''a b\nb a\n0''') == '6-a'\n\nassert solution('''a b\nb a\n0''') == '5-b'\n\nassert solution('''a b\nb a\n0''') == '5-b'"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\nab\\n3-b 5-b\\n6-a 2-b\\n2\") == \"8-a\"\nassert solution(\"2\\naba\\nbba\\n0\") == \"9-b\"\nassert solution(\"4\\nab\\nac\\nb\") == \"8-a\"\nassert solution(\"6\\nab\\nac\\nd\") == \"6-c\"\nassert solution(\"10\\nacab\\nbacd\\nef\") == \"6-c\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b'\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '8-a'\nassert solution('3\\nb\\n1-b\\na\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '8-a'\nassert solution('4\\na\\n1-b\\nb\\n2-a\\na\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b'\nassert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2\\naba\\nbba\\n0') == '9-b'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2') == '8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"a b\") == \"b\"\nassert solution(\"a b c\") == \"c\"\nassert solution(\"3-b 5-b\") == \"b\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '9-b'\nassert solution('''\na a\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\na b\\n3-b 5-b\\n6-a 2-b\\n2') == '8-a'\nassert solution('1\\na b\\n3-b 5-b\\n6-a 2-b\\n2') == '9-b'\nassert solution('1\\naba\\nbba') == '8-b'"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\necho\n1\nechoecho\n''') == '3246R3246'\n\nassert solution('''\n2\nhappynone\n2\nhappynone\n''') == '2D2R2D2L2U2L2U2D'\n\nassert solution('''\n2\nabc\n2\nabc\n''') == '3S1L2R2D2R2D2S'\n\nassert solution('''\n1\nx\n2\ny\n''') == '1Z2'\n\nassert solution('''\n2\nabc\n2\ncba\n''') == '2R2D2R2S2D2R2S2R2D2S2D2R2D2S2D2R2S2D2R2S2D2R2S2D2R2S2D2S2D2S2D2R2S2D2S2D2R2S2D2S2D2R2S2D2S2D2S2D2R2S2D2S2D2S2D2S2D2S2D2S2D2S2D2R2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2R2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2R2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2D2S2"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1\n3\n2\n3\n5\n1\n2\n3\n5\n1\n5\n1\n5\n2\n5\n1\n5\n2\n5\n3\n''') == \"3246R3246\"\n\nSample Input:\n4\n4\na\n2\ne\nSample Output:\n2\n'''"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"U3\"\nassert solution(\"2\") == \"U2\"\nassert solution(\"5\") == \"U5\"\nassert solution(\"3\") == \"U3\"\nassert solution(\"3\") == \"U3\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nabcd\\n\\ne\\n') == '3246U3246'"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\necho\\n1\\nechoecho') == '3246R3246'\nassert solution('2\\n0\\n1\\n1\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3246'\nassert solution('1') == '3246'\nassert solution('2') == '3246'\nassert solution('2') == '3246'\nassert solution('3') == '3246'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == \"3246\"\nassert solution('3') == \"3246\"\nassert solution('4') == \"3246\"\nassert solution('5') == \"3246\"\nassert solution('6') == \"3246\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nabc\\n123\\n123abc123\\n12345\\n12345abc123\\n12345abc123abc123\\n12345abc123abc123\\n12345abc123abc123\\n12345abc123abc123\\n12345abc123abc123\\n12345abc123abc123abc123\\n12345abc123abc123abc123\\n12345abc123abc123abc123abc123\\n12345abc123abc123abc123abc123\\n12345abc123abc123abc123abc123\\n12345abc123abc123abc123abc123\\n12345abc123abc123abc123abc123\\n12345abc123abc123abc123abc123\\n12345abc123abc123abc123abc123\") == \"12345abc123abc123abc123abc123\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n5\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n\n2\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n''') == '4276R3246'\n\nassert solution('''\n3\n\n2\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('2 3') == 'YES'\nassert solution('3 1') == 'NO'"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('3 2') == 'YES'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1''') == 'YES'\nassert solution('''3 2''') == 'NO'\n'''\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1\n1\n''') == 'YES\\n1 2\\n1 3\\n'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 1') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('3 2') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"2 4\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"3 1\") == \"YES\"\nassert solution(\"4 1\") == \"YES\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == 'NO'\nassert solution('2 2') == 'YES'\nassert solution('3 1') == 'YES'\nassert solution('4 3') == 'NO'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\nassert solution('''1 1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\nassert solution('''3\n1\n5 4\n1\n1\n1\n1\n1\n1\n''') == '54'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9') == '176'\nassert solution('1') == '11'\nassert solution('6') == '11'\nassert solution('5') == '10'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '1\\n2\\n3 4'\n) == '0'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"176\"\nassert solution(\"1\") == \"0\"\nassert solution(\"6 6\") == \"116\"\nassert solution(\"333333\") == \"99\"\nassert solution(\"300003\") == \"129\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9') == '176'\nassert solution('1') == '0'\nassert solution('6 6') == '176'\nassert solution('1000000000 3') == '4'\nassert solution('9999999999999999999999999999999999999999999999999999999999999999999999999') == '0'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"4\n8\n8 8\n15\n11\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n12\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3\n12\n345\n3\n12\n345\n3\n12\n345\n''') == \"176\""
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9\\n1\\n6 6') == '176'\nassert solution('10\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '63'\nassert solution('100\\n1\\n10\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '143'\nassert solution('100\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == '143'\n\"\"\""
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1\\n6 6\") == \"176\""
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(0).read()) == '016'"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '12'\nassert solution('1') == '1'\nassert solution('123456789') == '123456789'\nassert solution('1234') == '1234'\nassert solution('123') == '123'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '12'\nassert solution('12345') == '1234'\nassert solution('123456789') == '123456789'\nassert solution('123456789012345') == '1234567890123'\nassert solution('1234567890123456789') == '1234567890123456789'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n''') == '123'\nassert solution('''\n4\n''') == '120'"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '012'\nassert solution('3') == '123'\nassert solution('7') == '7'\n\n\"\"\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"95\") == \"99\"\nassert solution(\"23\") == \"23\"\nassert solution(\"2345\") == \"234\"\nassert solution(\"12345\") == \"123\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"12\"\nassert solution(\"3\") == \"3\""
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"55\") == \"555\"\nassert solution(\"11\") == \"111\"\nassert solution(\"12\") == \"0123\"\nassert solution(\"25\") == \"25\"\nassert solution(\"26\") == \"26\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '12'\nassert solution('4') == '4'\nassert solution('100') == '100'\n\"\"\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(1) == '12'\nassert solution(234) == '235'\nassert solution(1234) == '1235'\nassert solution(12345) == '1234'\nassert solution(123456) == '1234'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1\") == \"??\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"?\", 'Should be a question mark!'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 2 1 4 6') == '?', 'Should be \"??\"'\nassert solution('8 2 1 1 2 1 2 1') == '?', 'Should be \"??\"'\nassert solution('8 1 1 2 1 1 1 2') == '?', 'Should be \"??\"'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1') == '?', 'Should be \"?\"'\nassert solution('2 5') == '345', 'Should be \"345\"'\nassert solution('3 3') == '0', 'Should be \"0\"'\nassert solution('1 10') == '10', 'Should be \"10\"'\nassert solution('1 3') == '3', 'Should be \"3\"'\n\"\"\""
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"((()\\n480\\n617\\n-570\\n928\\n\") == \"480\", \"solution\")\nassert solution(\"((()\\n480\\n617\\n-570\\n928\\n\") == \"\", \"solution\")\nassert solution(\"((()\\n480\\n617\\n-570\\n928\\n\") == \"?\", \"solution\")\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1') == '?'\nassert solution('3 1') == '?'\nassert solution('2 1') == '?'\nassert solution('5 1') == '?\nassert solution('100 1') == '?'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1') == '?', \"Should be '?'\"\nassert solution('4 2') == '?', \"Should be '?'\"\nassert solution('5 1') == '?', \"Should be '?'\"\nassert solution('5 2') == '?', \"Should be '?'\""
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n((()\\n\") == \"?\\n\"\nassert solution(\"2 1\\n())\\n\") == \"?\\n\"\nassert solution(\"2 1\\n(())\\n\") == \"?\\n\"\nassert solution(\"2 1\\n(())\\n\") == \"?\\n\"\nassert solution(\"2 1\\n())\\n\") == \"?\\n\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '?'\nassert solution('2 1') == '?'\nassert solution('2 2') == '?'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''(((()\n((((()\n-3\n+345\n-19\n(5\n+5\n-5\n(7\n+2\n-2\n)9\n+7\n-7\n)8\n+9\n-8\n((\n+4\n-4\n)1\n-9\n)5\n+9\n-8\n))2\n+6\n+4\n+2\n+1\n+3\n-5\n-4\n-9\n+5\n-4\n+5\n-8\n-8\n-7\n-6\n+6\n+6\n-2\n+6\n-2\n-4\n-4\n-1\n+1\n+2\n+4\n-4\n+5\n-1\n+8\n+6\n-7\n+1\n+6\n+4\n-6\n+7\n-3\n-5\n-6\n+4\n+4\n-1\n+2\n+8\n-5\n+7\n-3\n-8\n-3\n+7\n+7\n+2\n-4\n+5\n-9\n+9\n+7\n-4\n-3\n+3\n+3\n+4\n-5\n+6\n-1\n-7\n+5\n+6\n-3\n-1\n+3\n+4\n-5\n+7\n-8\n-7\n-1\n+2\n+2\n+8\n-9\n+9\n-2\n+3\n+3\n+8\n-9\n-4\n-2\n-2\n-9\n+4\n+5\n-3\n+8\n+1\n-6\n+7\n-4\n-6\n-1\n-4\n+6\n+5\n+6\n+7\n+9\n-7\n-2\n-5\n+7\n+4\n-9\n+3\n+7\n-2\n-2\n-4\n-1\n+6\n-2\n+7\n-7\n+8\n-3\n+8\n-2\n+2\n+4\n+1\n+7\n-3\n+2\n+7\n+4\n-8\n-3\n+4\n+3\n-9\n+5\n+1\n-7\n+5\n+4\n-3\n+2\n+6\n+7\n+1\n-2\n+8\n-5\n+1\n-1\n+4\n+2\n+4\n+8\n+4\n+8\n+2\n-5\n+1\n+7\n+8\n+5\n+3\n+8\n+7\n+8\n+3\n+7\n+6\n-8\n+7\n+5\n-3\n+2\n+5\n+7\n-3\n+3\n-5\n+2\n+4\n+2\n+2\n+3\n+8\n-4\n+2\n+1\n+1\n+1\n+5\n+4\n+7\n+3\n+1\n+1\n+7\n+3\n-1\n-4\n-4\n+7\n-1\n-7\n+1\n+1\n+6\n+1\n+3\n-4\n+4\n+3\n-2\n+7\n+1\n+8\n+3\n+3\n-2\n+1\n-8\n+7\n+3\n-4\n+4\n+7\n-1\n+8\n+6\n-8\n+1\n+7\n+5\n+5\n+7\n+4\n+3\n-5\n-1\n+1\n+6\n-7\n-2\n-2\n-1\n+3\n+6\n+4\n-2\n+1\n+1\n+6\n-8\n+8\n+3\n+2\n+4\n+5\n+8\n-8\n+4\n-1\n+1\n+1\n+2\n+1\n+1\n-2\n+1\n+7\n+6\n+5\n-8\n+1\n+2\n+2\n+4\n+4\n+4\n+1\n+1\n+6\n+5\n+4\n+1\n-4\n+1\n+2\n+4\n+3\n+1\n+1\n+1\n-5\n+4\n+6\n-2\n+6\n+3\n-2\n+1\n-2\n+6\n+4\n+1\n+1\n+1\n+4\n-3\n-5\n+3\n+5\n+7\n+7\n+2\n+8\n+6\n+7\n-2\n+2\n-5\n+3\n+5\n+5\n+2\n+4\n+2\n+4\n-1\n+2\n+4\n-2\n+1\n-8\n+6\n-3\n+4\n+8\n+8\n-7\n+4\n+1\n+1\n+1\n+3\n+1\n+2\n-2\n+4\n+7\n+8\n+1\n-5\n+1\n+2\n+2\n-1\n+4\n-5\n+3\n+4\n+1\n+5\n+3\n+5\n-1\n+1\n+1\n+2\n-1\n-1\n-1\n+8\n+7\n-4\n+5\n+4\n-2\n-7\n-1\n+4\n-1\n+2\n+3\n+5\n-2\n+1\n+1\n+1\n+2\n+3\n-4\n+4\n+5\n+4\n+1\n-2\n+3\n-5\n+1\n+1\n-3\n+4\n+5\n+5\n+2\n-1\n+1\n+1\n+3\n-5\n-1\n-1\n+1\n-1\n-1\n-1\n+3\n+1\n+4\n-4\n+2\n+1\n-6\n+5\n-1\n+4\n+6\n-1\n+2\n+7\n-5\n+7\n-6\n+4\n+4\n+5\n+5\n+5\n+1\n+2\n+4\n+1\n+3\n+1\n+1\n+3\n+1\n+2\n-1\n+1\n+1\n+2\n+1\n+4\n+1\n+1\n+1\n+4\n-1\n-1\n+3\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 2 4\n3 1 3 5\n2 2 4\n''') == '''\n3 4\n5 6\n7 8 9 10 11 12 13\n'''\n\nassert solution('''\n3\n2 2 4\n3 1 3 5\n2 2 4\n''') == '''\nNone\n'''\n\nassert solution('''\n4\n4 1 3\n1 1 3 5\n3 1 3 6\n3 3 3\n''') == '''\nNone\n'''\n\nassert solution('''\n1\n2\n3\n''') == '''\n2 3\n'''"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12''') == '2 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 1001 9002 9003 9004 9005 9006 9007 9008 9009 9010 9011 9012 9013 9014 9015 9016 9017 9"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\n1 2 3 5\n2 4 6 7\n3 1 3 6\n4 1 3 7\n3 1 3 6\n4 1 3 7\n5 4 6 7\n6 5 4 6\n7 5 4 6\n6 6 5 4\n''') == '7 4 6 6 5 4'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 4\"\n\nimport time\nstart = time.time()\nsolution()\nprint(time.time()-start)\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4\n2 4\n3 1 3 5\n2 2 4\n''') == '2 4'\nassert solution('''\n3\n3\n2 4\n3 1 3 5\n2 2 4\n''') == 'None'\nassert solution('''\n3\n3\n2 4\n3 1 3 5\n2 2 4\n3 2 3 6\n''') == 'None'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == 'None'\nassert solution('6') == '1 2 3 4 5 6'\nassert solution('10') == '10'\nassert solution('9') == '9'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\") == \"4 5\"\nassert solution(\"9\\n1 2 4\\n2 3 4\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n9 10 11\\n11 12 13\\n12 13 14\\n13 14 15\\n14 15 16\\n15 16 17\\n16 17 18\\n17 18 19\\n18 19 20\\n19 20 21\\n20 21 22\\n21 22 23\\n22 23 24\\n23 24 25\\n24 25 26\\n25 26 27\\n26 27 28\\n27 28 29\\n28 29 30\\n29 30 31\\n30 31 32\\n31 32 33\\n32 33 34\\n33 34 35\\n34 35 36\\n35 36 37\\n36 37 38\\n37 38 39\\n38 39 40\\n39 40 41\\n40 41 42\\n41 42 43\\n42 43 44\\n43 44 45\\n44 45 46\\n45 46 47\\n46 47 48\\n47 48 49\\n48 49 50\\n49 50 51\\n50 51 52\\n51 52 53\\n52 53 54\\n53 54 55\\n54 55 56\\n55 56 57\\n56 57 58\\n57 58 59\\n58 59 60\\n59 60 61\\n60 61 62\\n61 62 63\\n62 63 64\\n63 64 65\\n64 65 66\\n65 66 67\\n66 67 68\\n67 68 69\\n68 69 70\\n69 70 71\\n70 71 72\\n71 72 73\\n72 73 74\\n73 74 75\\n74 75 76\\n75 76 77\\n76 77 78\\n77 78 79\\n78 79 80\\n79 80 81\\n80 81 82\\n81 82 83\\n82 83 84\\n83 84 85\\n84 85 86\\n85 86 87\\n86 87 88\\n87 88 89\\n88 89 90\\n89 90 91\\n90 91 92\\n91 92 93\\n92 93 94\\n93 94 95\\n94 95 96\\n95 96 97\\n96 97 98\\n97 98 99\\n98 99 100\\n99 100 101\\n100 101 102\\n101 102 103\\n102 103 104\\n103 104 105\\n104 105 106\\n105 106 107\\n106 107 108\\n107 108 109\\n108 109 110\\n109 110 111\\n110 111 112\\n111 112 113\\n112 113 114\\n113 114 115\\n114 115 116\\n115 116 117\\n116 117 118\\n117 118 119\\n118 119 120\\n119 120 121\\n120 121 122\\n121 122 123\\n122 123 124\\n123 124 125\\n124 125 126\\n125 126 127\\n126 127 128\\n127 128 129\\n128 129 130\\n129 130 131\\n130 131 132\\n131 132 133\\n132 133 134\\n133 134 135\\n134 135 136\\n135 136 137\\n136 137 138\\n137 138 139\\n138 139 140\\n139 140 141\\n140 141 142\\n141 142 143\\n142 143 144\\n143 144 145\\n144 145 146\\n145 146 147\\n146 147 148\\n147 148 149\\n148 149 150\\n149 150 151\\n150 151 152\\n151 152 153\\n152 153 154\\n153 154 155\\n154 155 156\\n155 156 157\\n156 157 158\\n157 158 159\\n158 159 160\\n159 160 161\\n160 161 162\\n161 162 163\\n162 163 164\\n163 164 165\\n164 165 166\\n165 166 167\\n166 167 168\\n167 168 169\\n168 169 170\\n169 170 171\\n170 171 172\\n171 172 173\\n172 173 174\\n173 174 175\\n174 175 176\\n175 176 177\\n176 177 178\\n177 178 179\\n178 179 180\\n179 180 181\\n180 181 182\\n181 182 183\\n182 183 184\\n183 184 185\\n184 185 186\\n185 186 187\\n186 187 188\\n187 188 189\\n188 189 190\\n189 190 191\\n190 191 192\\n191 192 193\\n192 193 194\\n193 194 195\\n194 195 196\\n195 196 197\\n196 197 198\\n197 198 199\\n198 199 200\\n199 200 201\\n200 201 202\\n201 202 203\\n202 203 204\\n203 204 205\\n204 205 206\\n205 206 207\\n206 207 208\\n207 208 209\\n208 209 210\\n209 210 211\\n210 211 212\\n211 212 213\\n212 213 214\\n213 214 215\\n214 215 216\\n215 216 217\\n216 217 218\\n217 218 219\\n218 219 220\\n219 220 221\\n220 221 222\\n221 222 223\\n222 223 224\\n223 224 225\\n224 225 226\\n225 226 227\\n226 227 228\\n227 228 229\\n228 229 230\\n229 230 231\\n230 231 232\\n231 232 233\\n232 233 234\\n233 234 235\\n234 235 236\\n235 236 237\\n236 237 238\\n237 238 239\\n238 239 240\\n239 240 241\\n240 241 242\\n241 242 243\\n242 243 244\\n243 244 245\\n244 245 246\\n245 246 247\\n246 247 248\\n247 248 249\\n248 249 250\\n249 250 251\\n250 251 252\\n251 252 253\\n252 253 254\\n253 254 255\\n254 255 256\\n255 256 257\\n256 257 258\\n257 258 259\\n258 259 260\\n259 260 261\\n260 261 262\\n261 262 263\\n262 263 264\\n263 264 265\\n264 265 266\\n265 266 267\\n266 267 268\\n267 268 269\\n268 269 270\\n269 270 271\\n270 271 272\\n271 272 273\\n272 273 274\\n273 274 275\\n274 275 276\\n275 276 277\\n276 277 278\\n277 278 279\\n278 279 280"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13') == '2 4\\n5 6\\n7 8 9 10 11 12 13'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2\n    2 3\n    2 4\n    \"\"\"\n) == \"2 4\"\nassert solution(\n    \"\"\"\n    4\n    1 2 3\n    2 3 4\n    2 4 3\n    3 4 2\n    \"\"\"\n) == \"2 4\"\nassert solution(\n    \"\"\"\n    8\n    1 2\n    2 3 3\n    3 4 4\n    4 5 5\n    5 6 6\n    6 7 7\n    7 8 8\n    8 9 9\n    9 10 10\n    10 11 11\n    11 12 12\n    12 13 13\n    \"\"\"\n) == \"2 4\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == ''\nassert solution('1 2') == '1 2'\nassert solution('2 2 4') == '1 2'\nassert solution('3 1 3 5') == '2 3'\nassert solution('2 2 4') == '1 2'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('4 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('5 5\\n3 4 4\\n1 2 3\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('6 5\\n1 2 3 4\\n2 5 4\\n1 3 4\\n3 4 5\\n4 5 2') == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 1\n1 2 3\n2 3 4\n3 4 2\n4 5 4\n5 5 5\n5 6 7\n6 7 7\n6 8 7\n7 8 8\n7 9 7\n7 10 7\n8 11 7\n8 12 7\n9 11 7\n9 12 7\n10 11 7\n10 12 7\n11 12 7\n11 13 7\n11 14 7\n12 13 7\n12 14 7\n13 14 7\n13 15 7\n13 16 7\n14 15 7\n14 16 7\n15 16 7\n15 17 7\n15 18 7\n16 17 7\n16 18 7\n17 18 7\n17 19 7\n17 20 7\n18 20 7\n18 21 7\n19 21 7\n19 22 7\n19 23 7\n19 24 7\n20 23 7\n20 24 7\n21 24 7\n21 25 7\n21 26 7\n22 26 7\n22 27 7\n23 27 7\n23 28 7\n23 29 7\n24 29 7\n24 30 7\n25 30 7\n25 31 7\n26 31 7\n26 32 7\n26 33 7\n27 33 7\n27 34 7\n28 34 7\n28 35 7\n29 35 7\n29 36 7\n30 36 7\n30 37 7\n31 37 7\n31 38 7\n32 38 7\n32 39 7\n33 39 7\n33 40 7\n34 40 7\n34 41 7\n35 41 7\n35 42 7\n36 42 7\n36 43 7\n37 43 7\n37 44 7\n38 44 7\n38 45 7\n39 45 7\n39 46 7\n40 46 7\n40 47 7\n41 47 7\n41 48 7\n42 48 7\n42 49 7\n43 49 7\n43 50 7\n44 50 7\n44 51 7\n45 51 7\n45 52 7\n46 52 7\n46 53 7\n47 53 7\n47 54 7\n48 54 7\n48 55 7\n49 55 7\n49 56 7\n50 56 7\n50 57 7\n51 57 7\n51 58 7\n52 58 7\n52 59 7\n53 59 7\n53 60 7\n54 60 7\n54 61 7\n55 61 7\n55 62 7\n56 62 7\n56 63 7\n57 63 7\n57 64 7\n58 64 7\n58 65 7\n59 65 7\n59 66 7\n60 66 7\n60 67 7\n61 67 7\n61 68 7\n62 68 7\n62 69 7\n63 69 7\n63 70 7\n64 70 7\n64 71 7\n65 71 7\n65 72 7\n66 72 7\n66 73 7\n67 73 7\n67 74 7\n68 74 7\n68 75 7\n69 75 7\n69 76 7\n70 76 7\n70 77 7\n71 77 7\n71 78 7\n72 78 7\n72 79 7\n73 79 7\n73 80 7\n74 80 7\n74 81 7\n75 81 7\n75 82 7\n76 82 7\n76 83 7\n77 83 7\n77 84 7\n78 84 7\n78 85 7\n79 85 7\n79 86 7\n80 86 7\n80 87 7\n81 87 7\n81 88 7\n82 88 7\n82 89 7\n83 89 7\n83 90 7\n84 90 7\n84 91 7\n85 91 7\n85 92 7\n86 92 7\n86 93 7\n87 93 7\n87 94 7\n88 94 7\n88 95 7\n89 95 7\n89 96 7\n90 96 7\n90 97 7\n91 97 7\n91 98 7\n92 98 7\n92 99 7\n93 99 7\n93 100 7\n94 100 7\n94 101 7\n95 101 7\n95 102 7\n96 102 7\n96 103 7\n97 103 7\n97 104 7\n98 104 7\n98 105 7\n99 105 7\n99 106 7\n100 106 7\n100 107 7\n101 107 7\n101 108 7\n102 108 7\n102 109 7\n103 109 7\n103 110 7\n104 110 7\n104 111 7\n105 111 7\n105 112 7\n106 112 7\n106 113 7\n107 113 7\n107 114 7\n108 114 7\n108 115 7\n109 115 7\n109 116 7\n110 116 7\n110 117 7\n111 117 7\n111 118 7\n112 118 7\n112 119 7\n113 119 7\n113 120 7\n114 120 7\n114 121 7\n115 121 7\n115 122 7\n116 122 7\n116 123 7\n117 123 7\n117 124 7\n118 124 7\n118 125 7\n119 125 7\n119 126 7\n120 126 7\n120 127 7\n121 127 7\n121 128 7\n122 128 7\n122 129 7\n123 129 7\n123 130 7\n124 130 7\n124 131 7\n125 131 7\n125 132 7\n126 132 7\n126 133 7\n127 133 7\n127 134 7\n128 134 7\n128 135 7\n129 135 7\n129 136 7\n130 136 7\n130 137 7\n131 137 7\n131 138 7\n132 138 7\n132 139 7\n133 139 7\n133 140 7\n134 140 7\n134 141 7\n135 141 7\n135 142 7\n136 142 7\n136 143 7\n137 143 7\n137 144 7\n138 144 7\n138 145 7\n139 145 7\n139 146 7\n140 146 7\n140 147 7\n141 147 7\n141 148 7\n142 148 7\n142 149 7\n143 149 7\n143 150 7\n144 150 7\n144 151 7\n145 151 7\n145 152 7\n146 152 7\n146 153 7\n147 153 7\n147 154 7\n148 154 7\n148 155 7\n149 155 7\n149 156 7\n150 156 7\n150 157 7\n151 157 7\n151 158 7\n152 158 7\n152 159 7\n153 159 7\n153 160 7\n154 160 7\n154 161 7\n155 161 7\n155 162 7\n156 162 7\n156 163 7\n157 163 7\n157 164 7\n158 164 7\n158 165 7\n159 165 7\n159 166 7\n160 166 7\n160 167 7\n161 167 7\n161 168 7\n162 168 7\n162 169 7\n163 169 7\n163 170 7\n164 170 7\n164 171 7\n165 171 7"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '35 39 36 27 29'\nassert solution('6 5') == '35 39 36 27 29'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '35 39 36 27 29'\nassert solution('''1 1\n2\n3''') == '36'\nassert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n5 5 2''') == '36 27 29 35'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''8 8\n1 2 1\n1 3 3\n2 4 4\n2 5 1\n3 6 5\n4 5 2\n4 6 8\n5 6 7''') == '27 41 50'''\nassert solution('''4 4\n1 2 2\n2 3 1\n3 4 4\n4 5 2''') == '13 27 27 13'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\n\"\"\"\n\nN, M = map(int, input().split())\n\ncnt = 0\nchamber = 0\n\nfor i in range(M):\n    A, B, L = map(int, input().split())\n    chamber = max(A, B)\n    if chamber == A:\n        cnt += L\n    else:\n        cnt += (1 * L)\n\n    chamber += 1\n    if chamber == A:\n        cnt -= (1 * L)\n    else:\n        cnt -= (2 * L)\n\nprint(cnt)"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n\"\"\") == \"35 39 36 27 29\"\n\nassert solution(\"\"\"\n8 10\n0 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n\"\"\") == \"27 34 35 36 31 32 33 36\""
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '35 39 36 27 29'\n\"\"\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '672'\n\"\"\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '0 672'\nassert solution('3 3') == '0 672'\nassert solution('1 9') == '1 9'\n\"\"\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '0 672'\nassert solution('5 5') == '1 72'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '0 672'\nassert solution('2 7') == '0 0'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '0 672'\nassert solution('3 2 1') == '0 672'\nassert solution('1') == '0 1'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '0 672'\nassert solution('4 2 5 1') == '9 4116'\nassert solution('5 4 5 4 3') == '1 5268'"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n3 2 1\n''') == '0 672'\nassert solution('''\n5 4\n3 2 1 2 4\n''') == '1 5062'\nassert solution('''\n1 7\n2 2 3\n''') == '0 2'\nassert solution('''\n1 4\n4 2 1\n''') == '1 2'\nassert solution('''\n10 10\n3 5 1 2 5 3 4 5 2\n''') == '1 90015'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n3\n3 1\n''') == '10000003'\nassert solution('''\n5 6\n5 2 4 4 1\n''') == '0 0'\n\"\"\"\n    N, M = map(int, input().split())\n    blue = list(map(int, input().split()))\n    red = list(map(int, input().split()))\n    res = 0\n    i = 0\n    j = 0\n    for b in blue:\n        while i <= N and j <= M and b - red[j] >= 0:\n            res += 1\n            i += 1\n            j += 1\n        i = 0\n        j = 0\n    print(res)\n\"\"\"\n\n\"\"\"\nN, M = map(int, input().split())\nblue = list(map(int, input().split()))\nred = list(map(int, input().split()))\n\ncnt_blue = 0\ncnt_red = 0\nfor i in range(1, N):\n    for j in range(M):\n        if j <= i:\n            cnt_blue += blue[i] - red[j]\n        if j > i:\n            cnt_red += red[j] - blue[i]\nprint(min(cnt_blue, cnt_red))\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 5') == '0 672'\n\n'''\n\nn, m = map(int, input().split())\nblue = list(map(int, input().split()))\nred = list(map(int, input().split()))\ncnt_blue = [0] * (m + 1)\ncnt_red = [0] * (m + 1)\n\nfor i in blue:\n    cnt_blue[i] += 1\nfor i in red:\n    cnt_red[i] += 1\n\nfor i in range(1, m + 1):\n    cnt_blue[i] += cnt_blue[i - 1]\n    cnt_red[i] += cnt_red[i - 1]\n\nfor i in range(1, m + 1):\n    if cnt_blue[i]!= 0 and cnt_red[i]!= 0:\n        print((cnt_blue[i] * cnt_red[m - i]) % 1000000007)\n    else:\n        print(0)"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '0 3'\nassert solution('2 2') == '0 2'\nassert solution('3 3') == '1 3'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.500000'\nassert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == 'Impossible'\n\n'''"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('5 2 100\\n0 10 10\\n1 10 5\\n2 2 18\\n2 40 50') == 'Impossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 100') == '2.5'\nassert solution('1 1 100') == 'Impossible'\nassert solution('3 3 200') == '0.5'\nassert solution('2 3 100') == 'Impossible'\nassert solution('2 2 200') == 'Impossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500001\"\nprint(solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\"))"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == '2.5000000', 'First'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == 'Impossible', 'Second'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n') == '2.50000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2.500000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2.500000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '4 5 100\\n'\n    '0 10 10\\n'\n    '1 10 5\\n'\n    '1 20 35\\n'\n    '2 2 18\\n'\n    '2 40 50\\n'\n    ) == '2.500000'\nassert solution(\n    '4 5 100\\n'\n    '0 10 10\\n'\n    '1 10 5\\n'\n    '1 20 35\\n'\n    '2 3 18\\n'\n    '2 40 50\\n'\n    ) == 'Impossible'\n\n'''\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5 100') == '2.500000'\nassert solution('10 10 100') == 'Impossible'\nassert solution('0 10 10') == '0.500000'"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n5 3 4') == '3'\nassert solution('3\\n7 8 4') == '3'\nassert solution('3\\n3 2 3') == '0'\nassert solution('5\\n20 5 10 10 8') == '0'"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('4') == '2'"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n5 1 5\\n\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"3\"\nassert solution(\"2\\n5 1 5\\n\") == \"2\"\nassert solution(\"5\\n1 1 1 1 1\\n\") == \"3\"\nassert solution(\"1\\n5 1 5\\n\") == \"2\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5 3 4\n''') == '3', \"First\"\nassert solution('''\n4\n10 6 5 7\n''') == '4', \"Second\"\nassert solution('''\n5\n5 4 4 3\n''') == '1', \"Third\"\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '10', \"Fouth\""
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n5 3 4\\n\"\n) == \"3\"\n\nassert solution(\n    \"7\\n12 3 4 3 4 7\\n\"\n) == \"7\"\n\nassert solution(\n    \"9\\n8 8 3 4 1 1 4 5 6 1\\n\"\n) == \"8\"\n\nassert solution(\n    \"3\\n3 1 2 3\\n\"\n) == \"3\"\n\nassert solution(\n    \"7\\n2 2 2 4 5 3 6\\n\"\n) == \"7\""
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5 3 4\n''') == '3'\nassert solution('''\n3\n5 5 4\n''') == '2'\n\nassert solution('''\n2\n5 6 4\n''') == '2'\n\nassert solution('''\n5\n5 5 6 4\n''') == '3'\n\nassert solution('''\n5\n5 5 6 4\n''') == '2'"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n5 3 4\nSample Input:\n4\n1 2 3 4\nSample Output:\n0\n''') == \"0\"\n\nassert solution('''\n1\n1 1\nSample Input:\n3\n1 2 3\nSample Output:\n1\n''') == \"1\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '2'"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"100 100 100\") == \"4\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"3 5 1\") == \"4\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"2 2 4\") == \"4\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('1 1 1') == '1'\nassert solution('5 3 2') == '5'\n\"\"\""
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 1 1\n''') == '2'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '2'\nassert solution('6 9 9') == '35'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1 3\") == \"4\"\nassert solution(\"4 2 6\") == \"17\"\nassert solution(\"2 1 1\") == \"2\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '2'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '2'"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1 1\n3\n1\n3''') == '1'\n\nassert solution('''3 3 2\n3\n1\n3''') == '3'"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 3 5\") == \"7\"\nassert solution(\"4\\n1 2 4 5\") == \"5\"\n\n\"\"\""
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 3 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5\n1 3 2 4 5\n\"\"\") == \"10\"\n\n\"\"\"\n--- Part Two ---\nNow, you are ready to find the password, but are certain that you would like to use a slightly different algorithm. For example, suppose you are looking for a password for the website www.example.com. In this website, you are using the combination of the following three operations ($\\oplus$, $xor$ and $+$):\n\n1) Adding 1 to the number: $(2\\oplus 1)= 3$\n2) Adding 1 to the number: $(5\\oplus 1)= 6$\n3) Adding 1 to the number: $(3\\oplus 1)= 4$\n\nThe result of these operations is the same as in the example of the previous problem, but with the operation $\\oplus$ (plus) multiplied by the number 1. In particular, the combination of operation 2 and operation 3 adds 1 to the number.\n\nGiven the numbers in the above example, what is the number of combinations that generate the maximum value?\n\"\"\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('3 5 1') == '7'\nassert solution('4 3 1') == '4'\n\"\"\"\nfrom itertools import combinations\nfrom math import log\nfrom collections import Counter"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('1 1 1') == '3'\nassert solution('5 5 5') == '5'\nassert solution('5 5 5 5') == '4'\n\n----Hints----\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('1 2 3') == '1'\nassert solution('2') == '0'\n'''\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('2 2') == '3'\n'''"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '7'\nprint('Congratulations, have a nice day!')\n\n'''\n$12 = 1100_2\n$5 = 101_2\n$9 = 1001_2\n$4 = 1100_2 + 101_2 + 1001_2 = $7\n'''"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"5\"\n\"\"\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('2 2 4 5') == '7'\n\nfrom typing import List\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n3 5 1\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n''') == '3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '10'\n\n\"\"\"\nimport math"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"\"\"\nfred jetsons\njohn jets\nruth rockets\"\"\".strip()"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"ruth jons\"\nassert solution(\"\"\"\n5\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"ruth jons\"\nassert solution(\"\"\"\n8\nmary rhinocerous 1 rockets\njohn rhinocerous 2 jets rockets\nmary rhinocerous 1 jets\nruth platypus 2 jets\nmary rhinocerous 2 jetsons\njohn rhinocerous 1 jetsons\nruth platypus 1 rockets\nmary rhinocerous 1 rockets\n\"\"\") == \"ruth jons\"\nassert solution(\"\"\"\n2\njohn rhinocerous 2 jetsons\n\"\"\") == \"Impossible\"\nassert solution(\"\"\"\n1\n\"\"\") == \"Impossible\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"\"\"\nfred jetsons\njohn jets\nruth rockets\n\"\"\".strip()\n\nassert solution(\"\"\"\n3\n5\nsocrates 4 bernard\npythagoras 2 stalin\nricard 2 stalin\nsocrates 2 bernard\nricard 2 stalin\npythagoras 4 stalin\nricard 2 stalin\n\"\"\") == \"\"\"\nsocrates stalin\nricard stalin\n\"\"\".strip()\n\nassert solution(\"\"\"\n2\n5\nsocrates 5 bernard\npythagoras 2 stalin\nricard 2 stalin\nsocrates 2 bernard\npythagoras 4 stalin\nricard 2 stalin\npythagoras 4 stalin\nricard 2 stalin\n\"\"\") == \"\"\"\npythagoras stalin\nricard stalin\n\"\"\".strip()\n\nassert solution(\"\"\"\n3\n5\nsocrates 5 bernard\npythagoras 2 stalin\nricard 2 stalin\nsocrates 4 bernard\npythagoras 4 stalin\nricard 2 stalin\npythagoras 4 stalin\nricard 2 stalin\n\"\"\") == \"\"\"\nsocrates stalin\nricard stalin\npythagoras stalin\n\"\"\".strip()\n\nassert solution(\"\"\"\n2\n5\nsocrates 5 bernard\npythagoras 2 stalin\nricard 2 stalin\nsocrates 4 bernard\npythagoras 4 stalin\nricard 2 stalin\npythagoras 4 stalin\nricard 2 stalin\n\"\"\") == \"\"\"\nsocrates stalin\npythagoras stalin\nricard stalin\npythagoras stalin\nricard stalin\npythagoras stalin\n\"\"\".strip()"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'Impossible'\nassert solution('2') == 'john jets\\nruth rockets'\nassert solution('5') == 'ruth rockets'\nassert solution('4') =='mary rhinocerous 2 jetsons rockets'\nassert solution('6') == 'john jets\\nmary rhinocerous 2 jetsons rockets'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Impossible'\nassert solution('2') == 'Impossible'\nassert solution('3') == '1 1'\nassert solution('4') == '1 1'\nassert solution('5') == '1 1'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\\n\" +\n                \"john rhinocerous 2 jetsons\\n\" +\n                \"mary rhinocerous 2 jetsons\\n\" +\n                \"ruth platypus 1 rockets\\n\") == \"john jets\\n\" + \\\n                \"mary jets\\n\" + \\\n                \"ruth rockets\" + \"\\n\" + \\\n                \"Impossible\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Impossible.\\n\"\nassert solution(\"2\") == \"John\\n\"\nassert solution(\"2\") == \"John\\n\"\nassert solution(\"2\") == \"Ruth\\n\"\nassert solution(\"2\") == \"John\\n\"\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n\"\"\") == \"\"\"\nfred jetsons\njohn jets\nruth rockets\n\"\"\".strip()\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\njohn rhinocerous 2 jets\njohn rhinocerous 2 jets\njohn rhinocerous 2 jets\njohn rhinocerous 2 jets\n''') == '''john jets'''\nassert solution('''\n4\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2 jets\nruth platypus 1 rockets\n''') == '''john jets'''\nassert solution('''\n2\njohn rhinocerous 2 jets\njohn rhinocerous 2 jets\n''') == '''john rhinocerous jets'''\nassert solution('''\n2\njohn rhinocerous 2 jets\njohn rhinocerous 2 jets\n''') == '''john rhinocerous jets'''\nassert solution('''\n2\njohn rhinocerous 2 jets\njohn rhinocerous 2 jets\n''') == '''john rhinocerous jets'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\npeter pennsylvania 2 sparkly\nsally pennsylvania 2 sparkly\njoe pennsylvania 2 sparkly\nanthony pennsylvania 2 sparkly\n\"\"\") == \"sally sparkly\"\n\nassert solution(\"\"\"\n5\npeter pennsylvania 2 sparkly\nsally pennsylvania 2 sparkly\njoe pennsylvania 2 sparkly\nanthony pennsylvania 2 sparkly\n\"\"\") == \"peter pennsylvania\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4 3\\n-10 9\\n-2 3\\n') == '1 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n4 3\\n-10 9\\n-2 3') == '1 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n4 3') == '1 2 1'\nassert solution('3\\n4 3') == '2 3 1'\nassert solution('3\\n4 4') == '3'\nassert solution('10\\n
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n4 3\n-10 9\n-2 3''') == \"1 2 1\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2\\n-1 2\\n-2 2\"\n) == \"1 2 1\"\n\nassert solution(\n    \"2\\n-1 2\\n-2 2\"\n) == \"2 2 2\"\n\nassert solution(\n    \"3\\n-10 9\\n-2 3\\n1 2\"\n) == \"1 2 1\""
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"1 1 1\"\n\nassert solution(\"\"\"\n2\n2 4\n2 4\n\"\"\") == \"2 2 2\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '4'\nassert solution('10') == '8'\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1\\n2 4\\n3 5\\n4 5') == '2 2 1\\n2 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n4 3\n-10 9\n-2 3''') == '1 2 1'\n\nassert solution('''3\n4 3\n-10 9\n-4 3''') == '1 1 1'\n\nassert solution('''3\n2 4\n-10 9\n-4 3''') == '1 1 1'\n\nassert solution('''4\n2 3\n-10 9\n-4 3\n-8 5''') == '2 2 1'\n\nassert solution('''5\n4 3\n-10 9\n-4 3\n-8 5\n-6 7''') == '1 1 1 1'"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3') == '1 2 1'"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n\"\n    \"1 1 7\\n\"\n    \"3 2 3\\n\"\n    \"5 1 4\\n\"\n    \"6 10 10\"\n) == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '2.125'\nassert solution('7\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '1.25'\nassert solution('7\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '0'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '1'\nassert solution('''\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '0'\nassert solution('''\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '1.125'\nassert solution('''\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '0'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125', 'First'\n\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '3.09415625', 'Second'\n\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125', 'Third'\n\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125', 'Fourth'"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1 6\n1 2 5\n2 3 3\n3 4 1\n1 5 1\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\nSample Output:\n3.75\n''') == '3.75'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\nSample Output:\n4.0\n''') == '4.0'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\nSample Output:\n3.25\n''') == '3.25'\nassert solution('''\n5\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n7 1 2\nSample Output:\n4.0\n''') == '4.0'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''4\n1 1 7\n3 2 3\n5 1 4\n6 10 10''', '''2.125''') == '''2.125'''\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\") == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    4\n    1 1 7\n    3 2 3\n    5 1 4\n    6 10 10\n    ''') == '2.125'\nassert solution('''\n    5\n    1 1 7\n    3 2 3\n    5 1 4\n    6 10 10\n    ''') == '2.625'\nassert solution('''\n    6\n    1 1 7\n    3 2 3\n    5 1 4\n    6 10 10\n    ''') == '3.125'\nassert solution('''\n    7\n    1 1 7\n    3 2 3\n    5 1 4\n    6 10 10\n    ''') == '3.375'\nassert solution('''\n    8\n    1 1 7\n    3 2 3\n    5 1 4\n    6 10 10\n    ''') == '3.5'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 1, 7, 3, 5, 1, 4, 6, 10, 10]) == '2.125'\nassert solution([1, 1, 7, 3, 5, 1, 4, 6, 10, 10]) == '2.125'\nassert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) == '2.125'\nassert solution([3, 2, 3]) == '2.000'\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme']\n\nSample Input:\n*.c\n1\n*\nSample Output:\n*\n\"\"\"\n\n\nimport sys\nfrom typing import List, Tuple"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme']\n\"\"\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme']\n\nSample Input:\n*.c\n3\na.c\ntest.c\n*.c\nSample Output:\na.c\ntest.c\n*.c"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"*.*\") == \"main.c\\na.out\\n\\n\\n\\n\\n\\n\\n\\n\"\n'''"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"*.*\") == [\"main.c\", \"a.out\", \"yacc\"]\n\n\n\"\"\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"*.*\") == \"main.c\\na.out\\ndef solution(stdin: str) -> str:\\n\\tpass\"\n\n\"\"\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('*.*') =='main.c'\nassert solution('*.*') =='main.c'\nassert solution('*.*') =='main.c'\n\n=======\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"*.*\") == \"main.c a.out\"\nassert solution(\"*.c\") == \"main.c a.out\"\nassert solution(\"*.c*\") == \"main.c a.out\"\nassert solution(\"*.c*\") == \"main.c a.out\"\nassert solution(\"*.c*\") == \"main.c a.out\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"*.*\") == [\"main.c\", \"a.out\"]\nassert solution(\"**.c\") == [\"main.c\", \"a.out\"]\nassert solution(\"*/*.c\") == [\"main.c\", \"readme\"]\nassert solution(\"*/main.c\") == [\"main.c\"]\nassert solution(\"*\") == [\"main.c\", \"readme\", \"yacc\"]\n\"\"\"\n\nimport re\n\nfile_path = r\"C:\\Users\\jada\\Desktop\\PYTHON\\Assignment1\\input.txt\"\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"*.*\") == \"main.c\"\nassert solution(\"*.c\") == \"main.c\"\nassert solution(\"*.c*\") == \"main.c\"\nassert solution(\"*.c*y\") == \"\"\n\"\"\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0.5'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('0.000000') == '0.000000'\n\"\"\"\n\n\"\"\"\nSolution\n\"\"\"\n\nN, M = list(map(int, stdin.readline().split()))\np = list(map(float, stdin.readline().split()))\np.reverse()\n\nt = 0\nfor i in range(1, N + 1):\n    t += p[i - 1]\n\nprint(t)\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1\n0.500000\n0.500000\n0.500000\n0.500000''') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\\n0.500000\\n\") == \"0.500000\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0.500000') == '0.500000'\nassert solution('0.501000') == '0.500000'\nassert solution('0.500000') == '0.500000'\nassert solution('0.500050') == '0.500000'\nassert solution('0.500050') == '0.500000'\n\"\"\"\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('1.1') == '0.500000'\nassert solution('1.1 1.1') == '0.5000000'\nassert solution('1.1 1.1 1.1 1.1 1.1 1.1 1.1') == '0.5000000000'\nassert solution('1.1 1.1 1.1 1.1 1.1 1.1 1.1 1.1') == '0.5000000000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\"\nassert solution(\"1 1\\n0.4000001\") == \"0.4000001\"\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n0.5') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.999999') == '0.999999'\nassert solution('1 1\\n0.999999999') == '0.999999999'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('0 50.1') == '0.0'\nassert solution('50.0 49.9') == '0.0'\nassert solution('50.0 49.9') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('25 20.9') == '1.9'\nassert solution('43 0.2') == '-1.6'\nassert solution('93 50.7') == '1.4'\nassert solution('99 50.7') == '1.4'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"-0 49.9\") == \"0.0\"\nassert solution(\"-50.9\") == \"0.0\"\nassert solution(\"0.1\") == \"0.0\"\nassert solution(\"0.01\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 49.9') == '0.0', 'Error with Test Case'\nprint('Congratulations, you passed all the tests!')\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 0.1\") == \"0.0\"\nassert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 0.0\") == \"0.0\"\nassert solution(\"0 5.9\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 49.9') == '0.0'\n\"\"\""
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 49.9\n0 49.99''') == \"0.0\"\nassert solution('''0 49.9\n5 49.99''') == \"5.0\"\nassert solution('''0 49.9\n0 49.95''') == \"0.0\"\nassert solution('''0 49.9\n10 49.95''') == \"0.0\"\nassert solution('''0 49.9\n1 49.95''') == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1.2\n3.2\"\"\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0.0'\nassert solution('1') == '0.0'\nassert solution('0.99') == '0.0'\nassert solution('0.99999') == '0.0'\nassert solution('0.00001') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 0.1\n            0 50.9''') == '0.0'\n\n'''\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 1\\n4 2\\n3 1\\n') == '2 1\\n4 2\\n3 1\\n'\nassert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '1 2\\n2 3\\n3 1\\n4 2\\n'"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3\\n'\n\nSample Input:\n5\n1 2\n2 3\n3 1\n4 1\n4 1\nSample Output:\n4 1\n2 1\n3 2\n1 3\n1 4\n3 4\n\"\"\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\\n2 3\") == \"2 1\\n3 2\"\nassert solution(\"3 1\\n2 3\\n3 1\") == \"1 1\\n3 2\"\nassert solution(\"5 1\\n1 2\\n2 3\\n3 4\\n4 5\") == \"1 1\\n2 3\\n3 4\\n4 5\"\nassert solution(\"3 4\\n1 2\\n1 3\\n2 3\") == \"1 1\\n2 3\\n3 4\""
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\nassert solution(\"1\\n2\\n1\\n3\\n\") == \"3 2\\n1 1\\n1 3\\n\"\n\"\"\"\n\nn = int(input())\nroads = {}\nfor i in range(n):\n    a, b = input().split()\n    roads[int(a)] = int(b)\n    roads[int(b)] = int(a)\n\nfor i in range(n):\n    for j in range(i+1, n):\n        if roads[i] and roads[j]:\n            print(i, j)\n            break\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1 2 1\\n2 1 3 2\"\nassert solution(\"4\\n5 3\\n4 1\\n3 2\\n1 2\\n4 1\") == \"4 1 2 1\\n5 1 4 3\\n2 3 1 4\"\nassert solution(\"4\\n2 4\\n3 1\\n2 1\\n4 1\") == \"4 1 2 1\\n2 1 4 3\"\nassert solution(\"2\\n2 3\\n2 1\\n4 1\") == \"4 1 2 1\\n2 1 3 2\"\nassert solution(\"3\\n1 1\\n2 1\\n3 1\") == \"3 1 1 1\\n1 2 1 2\\n2 1 1 3\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3'"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution('1\\n2\\n3\\n4\\n') == '4 1\\n2 1\\n3 2\\n1 3'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4 1\\n2 1\\n3 2\\n1 3'"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4 1\\n2 1\\n3 2\\n1 3\\n\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\\n\"\nassert solution(\"3\\n1 1\\n2 2\\n3 3\") == \"1 3\\n2 1\\n3 2\\n\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n5 1 2 3 4\\n1 2 3 4 5') == '0'\nassert solution('6\\n6 1 2 3 4 5\\n1 2 3 4 5') == '1'\nassert solution('6\\n6 1 2 3 4 5\\n1 2 3 4 5') == '2'\nassert solution('6\\n6 1 2 3 4 5\\n1 2 3 4 5') == '3'\nassert solution('6\\n6 1 2 3 4 5\\n1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '1'\nassert solution(input_) == 'infinite'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\") == \"1\"\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\") == \"0\"\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\") == \"1\"\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\") == \"0\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 1 6 3 5 3\") == \"1\"\nassert solution(\"10 10 10 10 10 10 10\") == \"10\"\nassert solution(\"5 2 1 6 3 5 3\") == \"1\"\nassert solution(\"6 3 4 5 2 1\") == \"4\"\nassert solution(\"1 2 1 2\") == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 1\\n1 2') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '0'\nassert solution('12\\n2 1 3 4 5\\n1 2 4 5 6\\n1 2 3 5 6\\n1 1 1\\n1 2 2\\n1 3 4\\n1 4 6\\n1 5 7\\n1 6 8\\n1 7 9') == '4'\nprint('Yay!  Your code passed all the tests!')\n\nSample Input:\n6 5\n1 1 1 1 1 1\n1 2 5 3 5\n1 2 3 5 5\n1 2 3 4 5\n1 2 3 4 6\n1 2 3 4 6\n1 1 2 3 4\n1 1 2 2 3\nSample Output:\n5\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 6 6 6 6\\n3 4 4 4 4 4') == '4'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 6 6 6 6\\n3 4 4 4 4 4\\n3 3 3 3 3 3') == '0'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 6 6 6 6\\n3 4 4 4 4 4\\n3 4 4 4 4 4') == '2'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n6 6 6 6 6\\n3 4 4 4 4 4\\n3 4 4 4 4 4\\n3 3 3 3 3 3') == '-1'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 1 6 3 5 3\") == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\") == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2\\n1 2\\n1\") == \"1\"\nassert solution(\"10\\n8 1 2 3 2 1 3 2 1 1\") == \"4\"\nassert solution(\"3\\n4 3 3\\n2 1 3 3 4\") == \"2\"\nassert solution(\"4\\n5 3 5 5\\n1 3 3 1 1\") == \"3\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 5\\n2 1 6 3 5 3\") == \"1\"\nassert solution(\"4 5\\n1 2 5 3 4\\n2 3 5\") == \"1\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 10\n0 1 1 2 6\n''') == '3'\n'''\n\n'''\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('1 1 0') == '1'\nassert solution('2 1 10\\n0 1 1 2 6\\n1 1 0') == '2'\nassert solution('3 3 3\\n0 1 1 2 6\\n1 1 0\\n0 0 1') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1 10\n0 1 1 2 6\n''') == '3'\nassert solution('''2 3 7\n1 2 3 4 5\n''') == 'impossible'\nassert solution('''4 5 10\n0 2 4 6\n''') == 'impossible'\nassert solution('''2 1 7\n0 1 1 2 6\n''') == '7'\nassert solution('''2 1 100\n1 1 1 2 6\n''') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 1 10\n0 1 1 2 6''') == \"3\"\nassert solution('''5 3 10\n0 1 4 1 9\n5 2 3 5 7\n2 6 5 6 2''') == \"9\"\nassert solution('''1 1 3\n2 1 4\n1 2 3''') == \"impossible\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 10') == '3'\nassert solution('2 1 10') == 'impossible'"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 10\") == \"3\"\n\nassert solution(\"1 1 10\") == \"1\"\n\nassert solution(\"1 1 1 2\") == \"2\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3 2\n0 1 3\n''') == '3'\n\nassert solution('''\n2 2 5\n0 1 3\n0 2 4\n''') == '2'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1 10\n0 1 1 2 6\n''') == '3'\n\nassert solution('''\n2 1 10\n0 1 1 2 6\n''') == 'impossible'\n\nassert solution('''\n2 1 10\n0 1 1 2 6\n''') == 'impossible'\n\nassert solution('''\n2 1 10\n0 1 1 2 6\n''') == '1'\n\nassert solution('''\n2 1 10\n0 1 1 2 6\n''') == '1'"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('2 1 10\\n0 2 2 2 3\\n1 2 3 5 6 7\\n2 3 4 6 8 10') == '6'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('4 1 10\\n0 1 1 5 6') == 'impossible'"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 10\n2 4\n''') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10') == '1'\nassert solution('10 10') == '1'\nassert solution('3 10') == '2'"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 100\n99 1\n1 99\n3 1\n2 9\n1 3\n''') == '1 2 3 4'\nassert solution('''\n5 100\n99 1\n1 99\n3 1\n2 9\n1 3\n''') == '2 3'\nassert solution('''\n1 5\n1 1\n''') == '1 2 3 4 5'\nassert solution('''\n1 100\n99 1\n1 99\n3 1\n2 9\n1 3\n''') == '1 2 3 4'\nassert solution('''\n5 100\n99 1\n1 99\n3 1\n2 9\n1 3\n''') == '2 3'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('20 4\\n30 1\\n20 2\\n20 4\\n10 8\\n20 5\\n30 2\\n20 7\\n10 5\\n1 10\\n15 5\\n20 8\\n20 7\\n20 1\\n20 3\\n15 5\\n20 6\\n30 4\\n20 4\\n20 7\\n10 8\\n20 5\\n20 3\\n30 2\\n15 5\\n30 1\\n20 6\\n10 8\\n1 10\\n15 5\\n20 3\\n30 2\\n20 4\\n30 1\\n20 5\\n30 3\\n20 7\\n20 6\\n15 5\\n20 4\\n20 7\\n20 2\\n30 1\\n20 8\\n30 3\\n30 3\\n30 3\\n20 8\\n30 3\\n20 5\\n30 3\\n20 7\\n30 4\\n20 6\\n20 5\\n30 2\\n20 7\\n30 3\\n30 2\\n20 4\\n30 3\\n10 5\\n30 4\\n10 4\\n30 3\\n20 7\\n10 5\\n20 8\\n30 3\\n30 1\\n30 3\\n20 8\\n20 5\\n30 3\\n10 5\\n30 3\\n10 4\\n20 7\\n10 5\\n20 8\\n30 3\\n30 3\\n20 4\\n20 7\\n20 8\\n20 7\\n20 4\\n10 8\\n20 5\\n30 3\\n20 7\\n30 4\\n20 8\\n20 3\\n20 5\\n20 6\\n20 5\\n10 4\\n30 2\\n20 5\\n20 7\\n30 3\\n30 3\\n20 4\\n30 1\\n20 5\\n20 8\\n10 5\\n20 7\\n20 8\\n20 3\\n30 1\\n20 6\\n20 5\\n10 4\\n30 3\\n30 3\\n20 4\\n30 2\\n20 5\\n30 3\\n20 7\\n20 8\\n20 6\\n20 5\\n20 4\\n20 3\\n20 2\\n10 5\\n20 5\\n20 3\\n30 1\\n30 3\\n20 6\\n30 3\\n30 2\\n20 4\\n20 3\\n30 3\\n20 7\\n10 5\\n20 8\\n30 3\\n30 3\\n20 4\\n20 7\\n20 8\\n20 4\\n30 1\\n20 6\\n30 4\\n20 7\\n20 3\\n20 5\\n20 4\\n20 2\\n20 4\\n20 7\\n20 6\\n20 3\\n30 2\\n20 5\\n30 3\\n20 7\\n20 4\\n20 3\\n20 5\\n20 8\\n20 5\\n30 3\\n30 3\\n20 4\\n30 3\\n20 5\\n20 7\\n20 6\\n20 5\\n30 3\\n20 4\\n20 5\\n20 7\\n20 3\\n20 4\\n20 7\\n20 2\\n20 4\\n20 3\\n30 2\\n20 5\\n30 3\\n20 5\\n30 3\\n20 7\\n20 8\\n20 6\\n20 5\\n20 4\\n20 3\\n20 3\\n20 4\\n30 2\\n20 5\\n20 7\\n20 8\\n20 3\\n20 5\\n20 6\\n20 5\\n20 4\\n20 7\\n20 3\\n20 5\\n20 4\\n20 2\\n30 1\\n20 8\\n20 5\\n20 7\\n20 3\\n20 5\\n20 4\\n20 3\\n20 5\\n20 4\\n20 3\\n20 5\\n20 5\\n20 5\\n20 4\\n20 3\\n20 2\\n20 4\\n20 3\\n20 6\\n20 4\\n20 3\\n20 5\\n20 3\\n20 5\\n20 5\\n20 3\\n20 5\\n20 4\\n20 5\\n20 4\\n20 5\\n20 5\\n20 5\\n20 4\\n20 3\\n20 5\\n20 4\\n20 5\\n20 3\\n20 5\\n20 5\\n20 5\\n20 4\\n20 5\\n20 4\\n20 5\\n20 3\\n20 5\\n20 4\\n20 3\\n20 5\\n20 5\\n20 5\\n20 3\\n20 5\\n20 4\\n20 5\\n20 4\\n20 5\\n20 5\\n20 5\\n20 4\\n20 5\\n20 4\\n20 5\\n20 5\\n20 5\\n20 5\\n20 4\\n20 3\\n20 4\\n20 5\\n20 4\\n20 3\\n20 5\\n20 4\\n20 3\\n20 3\\n20 4\\n20 3\\n20 4\\n20 3\\n20 5\\n20 5\\n20 5\\n20 3\\n20 5\\n20 4\\n20 3\\n20 4\\n20 4\\n20 4\\n20 4\\n20 5\\n20 5\\n20 5\\n20 3\\n20 5\\n20 4\\n20 3\\n20 4\\n20 3\\n20 5\\n20 4\\n20 4\\n20 3\\n20 5\\n20 4\\n20 5\\n20 4\\n20 4\\n20 4\\n20 5\\n20 5\\n20 5\\n20 4\\n20 3\\n20 4\\n20 4\\n20 4\\n20 4\\n20 5\\n20 5\\n20 4\\n20 5\\n20 5\\n20 5\\n20 5\\n20 4\\n20 4\\n20 4\\n20 4\\n20 4\\n20 5\\n20 5\\n20 5\\n20 3\\"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('6 10\\n21 6\\n10 21\\n21 10\\n2 10\\n10 2') == '2'\nassert solution('3 1\\n1 1\\n3 2\\n2 3\\n5 5\\n2 5') == '5'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n99 1') == '1 2'\nassert solution('2\\n99 1') == '1 2'\nassert solution('3\\n1 99') == '1 2'\nassert solution('3\\n1 99') == '1 2'\nassert solution('3\\n1 99') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n100 4\\n99 1\\n1 99') == '2\\n1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1\n99 1\n1 99\n2 2\n2''') == '2'''\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 100') == '2'\nassert solution('1 99') == '1 2'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2 1 2'\nassert solution('3 100\\n99 1\\n1 99\\n1 99') == '3 1 2'\nassert solution('5 100\\n99 1\\n1 99\\n1 99\\n1 99') == '5 1 2'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nH\nT\n0.5\n\"\"\") == \"0.5\"\nassert solution(\"\"\"\nH\nT\n1\n\"\"\") == \"0.5\"\nassert solution(\"\"\"\nH\nT\n0.5\n\"\"\") == \"0.5\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('H') == '0.5'\nassert solution('T') == '0.5'\nassert solution('0.5') == '0.5'\nassert solution('1.0') == '0.5'\nassert solution('1') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == '0.5'\n\nstdin = \"H\"\nstdin = \"HTH\"\nstdin = \"HTT\"\nstdin = \"HTT\"\nstdin = \"HHT\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTT\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"HTH\"\nstdin = \"H"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"H\") == \"H\"\nassert solution(\"HT\") == \"HT\"\nassert solution(\"HT\") == \"T\"\nassert solution(\"HTTT\") == \"HTT\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"H\") == \"0.5\"\nassert solution(\"T\") == \"0.5\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H\\nH\\n0.5\") == \"0.5\"\nassert solution(\"T\\nH\\n0.5\") == \"0.5\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''Gon\nT\n0.5\n''') == '0.5'\nassert solution('''H\nH\n0.5\n''') == '0.5'\nassert solution('''H\nT\n0.5\n''') == '1.0'\nassert solution('''T\nT\n0.5\n''') == '1.0'\n\nimport math\nimport inspect\nimport sys\nfrom typing import *\n\n\nclass NotACollection:\n    pass\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n1') == '0.5'\nassert solution('H\\nT\\n0.9') == '0.09'\nassert solution('H\\nT\\n1.01') == '0.99'\nassert solution('H\\nT\\n0.99') == '0.99'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('H' * 200) == 'H' * 200\nassert solution('T' * 200) == 'T' * 200\nassert solution('0.5') == '0.5'\nassert solution('4.9') == '4.9'\nassert solution('1.1') == '1.1'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1 3 5 7 9 11 13 15\"\nassert solution(\"6\") == \"1 3 5 7 9 11 13 15 16 17\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '8\\n1 3 5 7 9 11 13 15\\n'\nassert solution('18') == '33\\n1 3 5 7 9 11 13 15\\n23 4 6 8 10 12 14 16\\n31 5 7 9 11 13 15 17\\n39 6 8 10 12 14 16 18\\n47 7 9 11 13 15 17 19\\n55 6 8 10 12 14 16 18 20\\n63 7 9 11 13 15 17 19 21\\n'"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n1\n2\n''') == '8\\n1 3 5 7 9 11 13 15'\n\nassert solution('''\n10\n10\n8\n9\n7\n6\n10\n9\n5\n10\n8\n6\n10\n9\n7\n6\n10\n9\n8\n''') == '21\\n1 2 3 5 6 7 10 11 13 14 15 18 19 20'''\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == \"8\"\nassert solution('100') == \"110\"\nassert solution('6') == \"1 3 5 7 9 11 13 15\"\nassert solution('1000') == \"1025\""
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\nSample Output:\n8\n1 3 5 7 9 11 13 15''') == '8 1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '8 1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '8'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n''') == '8 1 3 5 7 9 11 13 15'\n\nassert solution('''5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10 1 3 5 7 9 11 13 15'\n\nassert solution('''6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n''') == '10 1 3 5 7 9 11 13 15'\n\nassert solution('''7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7\n''') == '10 1 3 5 7 9 11 13 15'\n\nassert solution('''8\n1 2 3 4 5 6 7 8\n1 2 3 4 5 6 7 8\n1 2 3 4 5 6 7 8\n1 2 3 4 5 6 7 8\n1 2 3 4 5 6 7 8\n''') == '10 1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '8'"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 3 5 7 9 11 13 15'"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '0\\n1\\n'"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 5 7\") == \"3\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '1\n1\n1\n0\n''')"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '1\\n0\\n0\\n3\\n'\n\nassert solution('''\n4\n2 3 1 5\n3\n2 1\n2 5\n1 5\n''') == '2\\n1\\n1\\n3\\n'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 5 7\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 5\") == \"3\"\nassert solution(\"1 5\") == \"4\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n3 2\n2 5\n1 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n7 4\n2 8\n2 5\n\"\"\") == \"0\"\n\nprint(\"All Tests Passed!\")\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '1\\n0\\n1\\n'\nassert solution('''5\n1 1 1 1 1\n1\n''') == '1\\n0\\n1\\n'\nassert solution('''6\n5 5 5 5 5\n1\n''') == '5\\n1\\n0\\n0\\n1\\n'\nassert solution('''5\n1 1 1 1 1\n1\n''') == '1\\n0\\n0\\n0\\n0\\n'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3 5 7\") == \"3\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '3'\nassert solution('''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '1'\nassert solution('''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '0'\nassert solution('''\n6\n1 3 5 7 8 9\n2\n4\n3\n2\n1\n0\n3\n''') == '3'\nassert solution('''\n6\n1 3 5 7 8 9\n2\n4\n3\n2\n1\n0\n3\n''') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0'\nassert solution('4 1\\n1 1 1 2\\n2 1 1 3\\n3 2 2 1\\n2 3 2 1') == '1'\nassert solution('6 2\\n-1 -2 0 0 0 0\\n0 0 -1 0 0 0\\n0 0 0 0 -1') == '1'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n3 4') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\"\nassert solution(\"3 3\\n1 1 -1 0\\n2 -1 -2 0\\n3 1 -1 0\") == \"1\"\nassert solution(\"1 1\\n1 1 0\\n2 0 -1\\n3 -1 -2\") == \"1\"\nassert solution(\"1 2\\n1 1 0\\n1 0 1\\n2 0 -1\\n3 -1 -2\") == \"2\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n1 1 -2 0\n''') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '0'\nassert solution('1 1 -2 0') == '0'\nassert solution('0 0 1 0 0') == '1'\n\n\"\"\"\n\nimport re\nimport sys"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\"\nassert solution(\"3 1\\n1 1 2 0\\n-1 2 -3 0\\n1 1 -2 1\\n-1 2 3 0\\n-1 2 -2 1\\n-1 1 3 0\") == \"1\"\nassert solution(\"2 2\\n0 0 0 0\\n0 0 0 0\") == \"1\""
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '0'\nassert solution('3 2') == '2'\nassert solution('8 6') == '2'\nassert solution('3 2') == '1'\nassert solution('10 9') == '1'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n3\n2020 10 17\n2020 10 19\n2020 10 26\n2020 10 28\n\"\"\"\n) == \"194\"\nassert solution(\n    \"\"\"\n5\n2019 10 18\n2019 10 20\n2019 10 23\n2020 10 02\n2020 10 16\n\"\"\"\n) == \"195\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n8\n2019 2 10\n2018 3 10\n2019 4 10\n2019 3 10\n2018 2 10\n2017 2 10\n2016 2 10\n2016 3 10\n''') == '194'\n\nassert solution('''\n2\n4\n2019 10 2\n2019 10 1\n2019 10 3\n''') == '194'\n\nassert solution('''\n2\n4\n2019 2 10\n2019 1 10\n2019 3 10\n''') == '194'\n\nassert solution('''\n1\n5\n2019 10\n2019 10\n2020 10\n2020 10\n2020 10\n''') == '0'\n\nassert solution('''\n1\n4\n2019 10\n2019 10\n2019 10\n''') == '0'"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3 4') == '4'\nassert solution('3\\n2 1\\n3 1') == '1 2'\nassert solution('5\\n3 10\\n9 10\\n2 10\\n9 9') == '3 10'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n3\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == \"194\\n2019 10 25\\n2020 10 30\"\n\nassert solution('''2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == \"194\\n2019 10 25\\n2020 10 30\"\n\nassert solution('''3\n4\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == \"194\\n2019 10 25\\n2020 10 30\"\n\nassert solution('''4\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == \"194\\n2019 10 25\\n2020 10 30\"\n\nassert solution('''5\n10\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == \"194\\n2019 10 25\\n2020 10 30\""
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"6\"\nassert solution(\"1\") == \"3\"\nassert solution(\"10\") == \"194\""
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '194'\nassert solution('4') == '19'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"194\"\nassert solution(\"3\") == \"2014\"\nassert solution(\"5\") == \"1990\"\nassert solution(\"10\") == \"1945\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n4\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1') == '194'\nassert solution('2\\n4\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23\\n2020 10 30\\n2020 10 31\\n2020 10 32\\n2020 10 33\\n2020 10 34\\n2020 10 35\\n2020 10 36\\n2020 10 37\\n2020 10 38\\n2020 10 39\\n2020 10 40\\n2020 10 41\\n2020 10 42\\n2020 10 43\\n2020 10 44\\n2020 10 45\\n2020 10 46\\n2020 10 47\\n2020 10 48\\n2020 10 49\\n2020 10 50\\n2020 10 51\\n2020 10 52\\n2020 10 53\\n2020 10 54\\n2020 10 55\\n2020 10 56\\n2020 10 57\\n2020 10 58\\n2020 10 59\\n2020 10 60\\n2020 10 61\\n2020 10 62\\n2020 10 63\\n2020 10 64\\n2020 10 65\\n2020 10 66\\n2020 10 67\\n2020 10 68\\n2020 10 69\\n2020 10 70\\n2020 10 71\\n2020 10 72\\n2020 10 73\\n2020 10 74\\n2020 10 75\\n2020 10 76\\n2020 10 77\\n2020 10 78\\n2020 10 79\\n2020 10 80\\n2020 10 81\\n2020 10 82\\n2020 10 83\\n2020 10 84\\n2020 10 85\\n2020 10 86\\n2020 10 87\\n2020 10 88\\n2020 10 89\\n2020 10 90\\n2020 10 91\\n2020 10 92\\n2020 10 93\\n2020 10 94\\n2020 10 95\\n2020 10 96\\n2020 10 97\\n2020 10 98\\n2020 10 99\\n2020 10 100\\n2020 10 101\\n2020 10 102\\n2020 10 103\\n2020 10 104\\n2020 10 105\\n2020 10 106\\n2020 10 107\\n2020 10 108\\n2020 10 109\\n2020 10 110\\n2020 10 111\\n2020 10 112\\n2020 10 113\\n2020 10 114\\n2020 10 115\\n2020 10 116\\n2020 10 117\\n2020 10 118\\n2020 10 119\\n2020 10 120\\n2020 10 121\\n2020 10 122\\n2020 10 123\\n2020 10 124\\n2020 10 125\\n2020 10 126\\n2020 10 127\\n2020 10 128\\n2020 10 129\\n2020 10 130\\n2020 10 131\\n2020 10 132\\n2020 10 133\\n2020 10 134\\n2020 10 135\\n2020 10 136\\n2020 10 137\\n2020 10 138\\n2020 10 139\\n2020 10 140\\n2020 10 141\\n2020 10 142\\n2020 10 143\\n2020 10 144\\n2020 10 145\\n2020 10 146\\n2020 10 147\\n2020 10 148\\n2020 10 149\\n2020 10 150\\n2020 10 151\\n2020 10 152\\n2020 10 153\\n2020 10 154\\n2020 10 155\\n2020 10 156\\n2020 10 157\\n2020 10 158\\n2020 10 159\\n2020 10 160\\n2020 10 161\\n2020 10 162\\n2020 10 163\\n2020 10 164\\n2020 10 165\\n2020 10 166\\n2020 10 167\\n2020 10 168\\n2020 10 169\\n2020 10 170\\n2020 10 171\\n2020 10 172\\n2020 10 173\\n2020 10 174\\n2020 10 175\\n2020 10 176\\n2020 10 177\\n2020 10 178\\n2020 10 179\\n2020 10 180\\n2020 10 181\\n2020 10 182\\n2020 10 183\\n2020 10 184\\n2020 10 185\\n2020 10 186\\n2020 10 187\\n2020 10 188\\n2020 10 189\\n2020 10 190\\n2020 10 191\\n2020 10 192\\n2020 10 193\\n2020 10 194\\n2020 10 195\\n2020 10 196\\n2020 10 197\\n2020 10 198\\n2020 10 199\\n2020 10 200\\n2020 10 201\\n2020 10 202\\n2020 10 203\\n2020 10 204\\n2020 10 205\\n2020 10 206\\n2020 10 207\\n2020 10 208\\n2020 10 209\\n2020 10 210\\n2020 10 211\\n2020 10 212\\n2020 10 213\\n2020 10 214\\n2020 10 215\\n2020 10 216\\n2020 10 217\\n2020 10 218\\n2020 10 219\\n2020 10 220\\n2020 10 221\\n2020 10 222\\n2020 10 223\\n2020 10 224\\n2020 10 225\\n2020 10 226\\n2020 10 227\\n2020 10 228\\n2020 10 229\\n2020 10 230\\n2020 10 231\\n2020 10 232\\n2020 10 233\\n2020 10 234\\n2020 10 235\\n2020 10 236\\n2020 10 237\\n2020 10 238\\n2020 10 239\\n2020 10 240\\n2020 10 241\\n2020 10 242\\n2020 10 243\\n2020 10 244\\n2020 10 245\\n2020 10 246\\n2020 10 247\\n2020 10 248\\n2020 10 249\\n2020 10 250\\n2020 10 251\\n2020 10 252\\n2020 10 253\\n2020 10 254\\n2020 10 255\\n2020 10 256\\n2020 10 257\\n2020 10 258\\n2020 10 259\\n2020 10 260\\n2020 10 261\\n2020 10 262\\n2020 10 263\\n2020 10 264\\n2020"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '194'\nassert solution('3') == '194'\nassert solution('5') == '194'\nassert solution('1') == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194'"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10 10 10 10 0\\n\") == \"negative-infinity 0\\n\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"6 10 10 10 10 0\") == \"negative-infinity -5\"\nassert solution(\"5 10 10 5 10 0\") == \"5 12.5\"\nassert solution(\"6 10 10 10 10 0\") == \"6 12.5\"\nassert solution(\"5 10 10 5 10 0\") == \"negative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"5 10 10 5 10 0\") == \"5 12.5\"\nassert solution(\"6 10 10 10 10 0\") == \"negative-infinity -5\"\nassert solution(\"10 10 10 10 10 0\") == \"negative-infinity -5\"\nassert solution(\"5 10 10 10 10 0\") == \"negative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 10 10 10 10 0\\n5 10 10 5 10 0') == 'negative-infinity 0'\nassert solution('2 10 10 10 10 0\\n5 10 10 5 10 0') == 'negative-infinity -5'\nassert solution('3 10 10 10 10 0\\n5 10 10 5 10 0') == 'negative-infinity -5'\nassert solution('4 10 10 10 10 0\\n5 10 10 5 10 0') == 'negative-infinity -5'\nassert solution('5 10 10 10 10 0\\n5 10 10 5 10 0') == 'negative-infinity -5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'negative-infinity -5\\n5 12.5\\nnegative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity -5'\nprint('You are correct!')"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"5 10 10 5 10 0\") == \"negative-infinity -5\"\nassert solution(\"6 10 10 10 10 0\") == \"5 12.5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'negative-infinity negative-infinity negative-infinity negative-infinity negative-infinity'\nassert solution(input) == 'negative-infinity negative-infinity negative-infinity negative-infinity negative-infinity'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity 12.5'\nassert solution('''\n2 0 0 0 0 0\n0 0 0 0 0 0\n''') == 'negative-infinity 0'\nassert solution('''\n10 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity -5'\nassert solution('''\n0 5 10 10 10 0\n1 5 10 5 10 0\n2 5 10 10 10 0\n''') == 'negative-infinity -5'\n'''\nYour function should return a string consisting of the coordinates of the point of reflection where the laser shot would hit the mirror.\n\nYou can shoot at a wall (target) by reflecting your shot off of a mirror. To find the coordinates of the point of reflection, you can do the following. You can either reflect at the beginning or end of the wall, so I have created a reflection function that takes a point and an angle in degrees. The angle must be between -180 and 180 degrees, inclusive. Negative angles (right) rotate clockwise and positive angles (left) rotate counterclockwise. The x coordinate will reflect the x coordinate at the wall, and the y coordinate will reflect the y coordinate at the wall."
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity 0\\n5 12.5\\nnegative-infinity -5\\n'''\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n\"\"\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4') == \"IMPOSSIBLE\"\nassert solution('5 5') == \"2\"\nassert solution('1 2 3') == \"IMPOSSIBLE\"\nassert solution('2 2 4') == \"2\"\nassert solution('2 2 0') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''4 4\n100 30000\n200 20000\n300 10000\n400 0''') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution('4 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000\\n') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '2'"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"5 2\") == \"IMPOSSIBLE\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"7 7\") == \"3\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000''') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '2'\nassert solution('1 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"345 2\"\n\nassert solution(\"\"\"\n5 4\n1 2 3 -10\n3 4 5 4\n0 1 2 2\n-5 3 -5 3\n1 2 3\n\"\"\") == \"3584 4\"\n\nassert solution(\"\"\"\n3 2\n1 2\n3 4\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2'\nassert solution('1 2 3\\n4 2 5\\n6 4 7') == '14'\nassert solution('5 2\\n3 2\\n2 2') == '10'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == \"1 2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2\\nrotS 2 1\\nnegR 2\\n', 'First sample test'\nassert solution('''\n2 2\n1 3\n''') == '5\\nrotS 1 2\\nrotS 1 2\\nrotS 1 2\\nrotS 1 2\\nrotR 3\\nrotR 3\\nrotS 3 1\\nrotS 2 1\\nrotS 2 1\\nrotR 1\\nrotR 1\\nrotS 2 1\\nrotR 3\\nrotS 2 1\\nrotS 2 1\\nrotR 1\\nrotS 2 1\\nrotS 3 1\\nrotS 2 1\\nrotS 3 1\\nrotS 2 1\\nrotS 3 1\\nrotS 2 1\\nrotS 3 1\\nrotS 2 1\\nrotS 3 1\\nrotS 2 1\\nrotS 3 1\\nrotS 2 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3 1\\nrotS 3"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"345 2\\nrotS 2 1\\nnegR 2\\n\"\n\nassert solution(\"\"\"\n4 1\n2 3 2 4\n\"\"\") == \"5\\n\"\n\nassert solution(\"\"\"\n5 4\n1 1 1 2 3\n-1 1 1 2 3\n-1 1 -1 2 3\n-1 1 -1 1 3\n\"\"\") == \"6\\n\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\nrotS 2 1\nnegR 2\nrotS 1 1\nnegR 1\nrotS 2 2\nnegR 2''') == '345 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\n\nassert solution('''\n2 2\n3 3\nrotR 2 1\nrotR 2 1\n''') == '5 3'\n\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\n\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\n\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1 2 3\n-1 2 -3\n0 1 2\n3 4 5\n-5 -4 3\n-2 1 -1\n-1 -1 1\n\"\"\") == \"345 3\"\nassert solution(\n\"\"\"\n1 2 3\n-1 2 3\n0 1 2\n3 4 5\n-5 -4 3\n-2 1 -1\n-1 -1 1\n\"\"\") == \"345 3\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('3 2 1 1') == '1'\nassert solution('3 1 1') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n3 1 1\\n\") == \"0.5\"\nassert solution(\"1 3\\n3 4 1\") == \"2.5\"\nassert solution(\"2 2\\n1 2 2\") == \"1.5\"\nassert solution(\"2 3\\n1 2 3\") == \"1.5\"\nassert solution(\"3 3\\n1 2 3\") == \"1.5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n3 1 1\n''') == '0.5\n'''\n\n----------------------------------------------------\n\nQuestion: 1\nGiven n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\n\n-----Input-----\nThe input will start with a line of non-negative integers, each representing the height of a bar in the histogram.\n\n-----Output-----\nOutput one integer, the area of the largest rectangle.\n\n-----Example-----\nInput:\n2 2 2 2 2\n\nOutput:\n6\n\n-----Hint-----\nUse Dynamic Programming to solve this problem.\n'''\n\n----------------------------------------------------\n\nQuestion: 2\nGiven n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.\n\n-----Input-----\nThe input will start with a line of non-negative integers, each representing the height of a bar in the histogram.\n\n-----Output-----\nOutput one integer, the area of the largest rectangle.\n\n-----Example-----\nInput:\n2 2 2 2 2\n\nOutput:\n6\n\n-----Hint-----\nUse Dynamic Programming to solve this problem.\n'''\n\n----------------------------------------------------\n\nQuestion: 3\nA rectangle is represented as a list [x1, y1, x2, y2], where (x1, y1) are the coordinates of its bottom-left corner, and (x2, y2) are the coordinates of its top-right corner. The area of a rectangle is the width of its left side minus the width of its right side, or (x2 - x1) * (y2 - y1). The coordinates of a rectangle's top-right corner are not included in the area calculation.\n\nGiven a list of rectangles, find the maximal area of any rectangle contained in it.\n\n-----Input-----\nThe input will start with a line of non-negative integers, each representing the height of a bar in the histogram.\n\n-----Output-----\nOutput one integer, the maximal area.\n\n-----Example-----\nInput:\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n\nOutput:\n1411\n\n-----Hint-----\nUse Dynamic Programming to solve this problem.\n'''\n\n----------------------------------------------------\n\nQuestion: 4\nGiven the following m \u00d7 n grid:\n\n|1|2|3|4|5|\n|6|7|8|9|10|\n|11|12|13|14|15|\n|16|17|18|19|20|\n|21|22|23|24|25|\n\nWhat is the largest possible square of side length 1 which can be placed without touching any of the grid squares?\n\n-----Input-----\nThe input will start with a line of non-negative integers, each representing the height of a bar in the histogram.\n\n-----Output-----\nOutput one integer, the largest square.\n\n-----Example-----\nInput:\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n\nOutput:\n15\n\n-----Hint-----\nUse Dynamic Programming to solve this problem.\n'''\n\n----------------------------------------------------\n\nQuestion: 5\nThe above grid has a size of 12x15. In the first column there are no squares of size 1, in the second column there are no squares of size 1, and so on.\n\nGiven the above grid and the following list of m integers:\n\n1 2 1 1 1\n\nOutput:\n1\n\n-----Input-----\nThe input will start with a line of non-negative integers, each representing the height of a bar in the histogram.\n\n-----Output-----\nOutput one integer, the area of the largest square in the histogram.\n\n-----Example-----\nInput:\n1 1 2 1 1 1\n\nOutput:\n1\n\n-----Hint-----\nUse Dynamic Programming to solve this problem.\n'''\n\n----------------------------------------------------\n\nQuestion: 6\nA positive integer is called a square if it is perfect square.\n\nGiven an integer n, find the number of perfect squares less than or equal to n.\n\n-----Input-----\nThe input will start with a non-negative integer, n.\n\n-----Output-----\nOutput one integer, the number of perfect squares less than or equal to n.\n\n-----Example-----\nInput:\n5\n\nOutput:\n3\n\n-----Hint-----\nUse Dynamic Programming to solve this problem.\n'''\n\n----------------------------------------------------\n\nQuestion: 7\nThe input will be a sequence of numbers, each between 0 and 10^6. There are m distinct numbers between 0 and 10^6. The goal is to find the maximum possible sum of numbers that are divisible by 3 and the sum of numbers that are divisible by 5.\n\n-----Input-----\nInput from stdin will be an array of integers containing all the elements in the sequence.\n\n-----Output-----\nOutput one integer, the maximum possible sum.\n\n-----Example-----\nInput:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n\nOutput:\n22\n\n-----Hint-----\nUse Dynamic Programming to solve this problem.\n'''\n\n----------------------------------------------------\n\nQuestion: 8\nGiven the following grid:\n\n|1|2|3|4|5|6|7|8|9|10|11|\n|12|13|14|15|16|17|18|19|20|\n|21|22|23|24|25|26|27|28|29|\n\nFind the maximum path sum from the top left corner to the bottom right corner.\n\n-----Input-----\nThe input will start with a line of non-negative integers, each representing the height of a bar in the histogram.\n\n-----Output-----\nOutput one integer, the maximum path sum.\n\n-----Example-----\nInput:\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n\nOutput:\n26\n\n-----Hint-----\nUse Dynamic Programming to solve this problem.\n'''\n\n----------------------------------------------------\n\nQuestion: 9\nThe input will start with a line of non-negative integers, each representing the height of a bar in the histogram.\n\n-----Input-----\nThe input will start with a line of non-negative integers, each representing the height of a bar in the histogram.\n\n-----Output-----\nOutput one integer, the maximum path sum.\n\n-----Example-----\nInput:\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('3 4') == '0.25'\nassert solution('100000 100000') == '0.0025'\nassert solution('2 1 1') == '0.01'\nprint('Almost done!')\n\nIn sample input 2 we are have $n=3$, $m=2$, $k_1=3$, $k_2=1$, and $k_3=1$. Optimal simulation energies will be $E_1=1$ and $E_2=2.5$, since this will remove the contribution from bin 1 and minimize the contribution from bins 2 and 3. The sum will be $k_1(1-E_1)^2+k_2(2-E_2)^2+k_3(3-E_2)^2=3\\cdot 0^2+1\\cdot 0.5^2+1\\cdot 0.5^2=0.5$.\n\n-----Input format-----\nThe input file contains one integer $n\\geq 1$ and $n\\geq 1$ positive integers $1\\leq k_ i\\leq 10^6$ denoting the number of photons with energy $i$ in the x-ray spectrum. The second line contains one integer $1\\leq m\\leq n$, denoting the number of simulation energies.\n\n-----Output format-----\nThe output file contains one integer $1\\leq m \\leq n$, denoting the optimal energy for the simulation, with a relative or absolute error less than $10^{-4}$.\n\n-----Sample Input & Output-----\nSample Input 1:\n\n3 2\n3 1 1\nSample Output 1:\n\n0.5\n\nSample Input 2:\n\n3 2\n3 4 1\nSample Output 2:\n\n0.25\n\"\"\"\n\nimport math"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '0.5'\nassert solution('5 3 1 1') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('5 5') == '1.0'\nassert solution('100000000') == '2.512'\nassert solution('5 2') == '0.5'\nassert solution('10 100') == '1.941'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('4 5') == '0.25'\nassert solution('8 5') == '1.2'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0.5'\nassert solution('5 1') == '1.0'\nassert solution('5 5 5') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 2\n3 1 1\n\"\"\") == \"0.5\"\nassert solution(\"\"\"\n3 3\n3 1 2\n\"\"\") == \"0.25\"\n\nassert solution(\"\"\"\n9\n2 6 9 10 3 8 5 7 6 10\n\"\"\") == \"3.2381\"\n\nassert solution(\"\"\"\n9\n1 5 1 2 7 6 3 8 5\n\"\"\") == \"0.5\"\n\nassert solution(\"\"\"\n10\n2 2 1 2 6 8 3 2 1\n\"\"\") == \"2.0\""
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('2 4') == '0.971'\nassert solution('5 100') == '0.971'\nassert solution('100 10') == '1.0'\nassert solution('1') == '0.5'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\\n2 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\") == \"1 4 5\\n2 6 7\\n3 8\\n3 9\\n8 9\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9\\n') == '1 4 5\\n2 6 7\\n3 8 9\\n8 9\\n'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 11') == '1 4 5 6 7 8 9'\nassert solution('1 4') == '1 4'\nassert solution('5 4') == '5 4'\nassert solution('3 8') == '3 8'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n1 2\\n5 3\") == \"1 2 3\"\nassert solution(\"3 1\\n1 3\\n2 4\\n1 2\\n3 4\") == \"1 3 2\"\nassert solution(\"3 4\\n1 3\\n2 4\\n1 2\\n3 4\") == \"1 3 2\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5 2 6 7 8 9'\nassert solution('5 5\\n4 4\\n5 6\\n2 5\\n3 3\\n1 4\\n3 3\\n5 5') == '2 5 4 1 3 5'"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7\\n3 8 9'"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n3 3\n1 4\n2 4\n2 3\n\"\"\") == \"1 4 2\"\n\nassert solution(\n    \"\"\"\n5 3\n1 4\n2 4\n2 3\n3 4\n3 5\n\"\"\") == \"2 4 2 5\"\n\nassert solution(\n    \"\"\"\n5 3\n1 4\n2 4\n2 3\n3 4\n3 5\n\"\"\") == \"2 4 3\"\n\nassert solution(\n    \"\"\"\n5 3\n1 4\n2 4\n2 3\n3 4\n3 5\n\"\"\") == \"2 3 4\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1 4'\nassert solution('1') == '1 2'\nassert solution('2') == '1 2'\nassert solution('2') == '1 2'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 4 5 2 6 7 3 8 9\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 11') == '2 8 9 1 5 6 7'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11 2\") == \"1350\"\nassert solution(\"12000\") == \"1350\"\nassert solution(\"9000\") == \"1200\"\nassert solution(\"4500\") == \"1100\"\nassert solution(\"10000\") == \"1120\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 2') == '1350'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 2') == '13500'\nassert solution('12000') == '13500'\nassert solution('9000') == '13500'\nassert solution('4500') == '13500'\nassert solution('10000') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500', solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''')\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 2\") == \"13500\"\nassert solution(\"12000\") == \"13500\"\nassert solution(\"9000\") == \"13500\"\nassert solution(\"4500\") == \"14200\"\nassert solution(\"10000\") == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2\n''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\n''')\n\nassert solution('''\n2 7\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2\n''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n__________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____b"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\nSample Output:\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 16\\nHot cross buns! = Hot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n\\n\\n'\nprint(solution('''\n3 15\nKazoo kazoo kazoo kazoo kazoo kazoo kazoo kazoo\n4 4 4 4 4 4 4 4\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nKazoo\nK"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 16\\n'\n    'Hot cross buns! = Hot cross buns! =\\n'\n    '4 4 4 4 4 4 4 4\\n'\n    'One a pen- ny, Two a pen- ny, Hot cross buns! =\\n'\n    '2 2 2 2 2 2 2 2 4 4 4 4'\n    ) == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n\\n'\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\nSample Output:\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 4 4 4 4\nSample Output:\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\"\n) == '33'\n\nassert solution(\n\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\"\n) == '35'\n\nassert solution(\n\"\"\"\n3 3 1\n1 2 1\n1 4 1\n2 4 1\n1 6 1\n2 6 1\n3 4 1\n3 6 1\n4 6 1\n\"\"\"\n) == '1'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\") == \"33\"\n\n'''\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\"\nassert solution(\"\"\"\n10 10 30 33\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\"\nassert solution(\"\"\"\n6 5 10 8\n1 5 6 6\n1 4 5 5\n1 8 9 9\n1 2 7 7\n2 8 9 9\n2 2 7 7\n\"\"\") == \"40\"\nassert solution(\"\"\"\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"33\"\nassert solution(\"\"\"\n10 10 30 33\n1 4 6 6\n1 6 10 5\n2 10 30 33\n\"\"\") == \"40\"\n\nprint(solution(input()))"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"33\"\n\"\"\"\n\n\"\"\"\n--- Day 16: High-Entropy Passphrases ---\n\nBefore you leave, you notice that one of the Elves in your ship has collected the recent information about the frequency analysis they performed: they have been trying to increase the entropy of their system, which is about to take over.\n\nThey have encrypted a paragraph of gibberish and need to find the right keyword to use to decrypt the paragraph.\n\nWhile the ship's main engine is off, you and the Elves are already decrypting the information. The information is spread across many locations, some of which may be off-line while you're decrypting: you have the public key for all of it, but also the encrypted versions of several other locations.\n\nIt is safe to decrypt any location with the public key. The only encrypted location that you need to decrypt with a public key is location 0, and so forth.\n\nEach location consists of a series of lines like the following:\n\n0: 3EE1A17\n1: 0E9F9CE0\n2: 0F95581E\n3: 10C8F8DD\n4: 12C2D8F8\n\nEach line gives the frequency analysis for a part of the ciphertext that has the same value at different frequencies.\n\nThe public key is the key that should be used to decrypt any location. The same public key will be used to decrypt all locations (including 0).\n\nThe frequency analysis is a series of numbers and spaces. The numbers correspond to the number of times a given letter appears; spaces correspond to spaces added by hand (your puzzle input). Letters are case sensitive, so \"A\" and \"a\" are different numbers, and so are \"1\" and \"0\".\n\nEach line gives the frequency analysis for part of the ciphertext. (There will be at least one line for every possible encryption.)\n\nTo decrypt a message, you must find the keyword that is used to encode the message in the same way that the public key is used to encode the message.\n\nFor example, suppose you have the following analysis:\n\n1 1 1 1 1\n2 2 2\n3 1 3\n1 1 1\n\nThe first line gives the frequency analysis for part of the ciphertext; the second line gives the frequency analysis for the second part of the ciphertext; the third line gives the frequency analysis for the fourth part of the ciphertext, and so on.\n\nThe letter 'a' appears in the ciphertext three times: 1 time in the first part, 2 times in the second part, and 3 times in the fourth part.\n\nTo decode a message, rearrange the analysis so that the letter 'a' appears once in each part of the message. What is the index of the first occurrence of the letter 'a' in the analysis of the message? (The values in the ciphertext are actually encrypted with respect to this new index.)\n\nFor example, if the public key is a = 1, b = 5, c = -7, and the ciphertext is:\n\n1 1 1 1 1\n2 2 2\n3 1 3\n1 1 1\n\nThen the first line encodes a 1; the second line encodes the frequencies -7 and 1; the third line encodes a 1; the fourth line encodes a 3 and a 2, and so on.\n\nWe would like to find the index of the first occurrence of the letter 'a' in the analysis. We can solve this problem by simply rearranging the analysis so that the letter 'a' appears once in each part of the message:\n\na = 1\n1 1 1 1\n2 2 2\n3 1 3\n1 1 1\n\nThe first line encodes the frequencies 1, 1, 1, and so on; the second line encodes a 1 and a 2, and so on.\n\nThe index of the first occurrence of the letter 'a' is the sum of the indices of the letters 'a' in the first line, plus the index of the letter 'a' in the second line: 1 + 5 = 6.\n\nYour puzzle answer was 1260.\n\n\"\"\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n\"\n) == \"33\"\nassert solution(\n    \"4 3 2\\n1 2 5 7\\n1 4 5 9\\n2 4 2 6\\n1 7 6 5\\n2 3 2 7\\n\"\n) == \"10\"\nassert solution(\n    \"3 5 2\\n1 5 3 4 6\\n1 2 3 5\\n2 4 1 5\\n2 4 3 5\\n\"\n) == \"0\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1') == '33', 'First'\nassert solution('2 2 2') == '16', 'Second'"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'\nassert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n3 3 1\\n4 5 1\\n2 2 10\\n1 3 5\\n3 5 10\\n') == '10'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n20 15 10\n7 7\n30 0\n10 20\n25 40\n50 55\n''') == '405'\n\nassert solution('''3\n20 15 10\n7 7\n30 0\nSample Output:\n405\n''') == '405'\n\nassert solution('''5\n20 15 10\n7 7\n30 0\n10 20\n25 40\n50 55\nSample Output:\n405\n''') == '405'\n\nassert solution('''5\n20 15 10\n7 7\n30 0\n10 20\n25 40\n50 55\nSample Output:\n405\n''') == '405'\n\nassert solution('''5\n20 15 10\n7 7\n30 0\n10 20\n25 40\n50 55\nSample Output:\n405\n''') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0') == '405'\nprint('Tests passed')"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n2 2\\n3\\n4\\n') == '7'\nassert solution('3\\n4 3\\n4 1\\n') == '8'"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''3\n20 15 10\n7 7\n30 1\n''') == '405'\nassert solution('''2\n15 10\n1 2\n''') == '12'\nassert solution('''2\n5 10\n1 2\n''') == '20'\nassert solution('''3\n20 10\n4 4\n''') == '22'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\n'''\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n20 15 10\n7 7\n30 0\n\"\"\") == \"405\"\nassert solution(\"\"\"3\n20 15 10\n7 7\n30 0\n\"\"\") == \"405\"\nassert solution(\"\"\"3\n10 20 10\n7 7\n30 0\n\"\"\") == \"2850\"\nassert solution(\"\"\"3\n10 20 10\n7 7\n30 0\n\"\"\") == \"2850\"\nassert solution(\"\"\"3\n10 20 10\n7 7\n30 0\n\"\"\") == \"2850\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n20 15 10\n7 7\n30 0\n\"\"\") == \"405\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\n3\n10 20 30\n20 30 20\n20 20 30\n''') == '-1'\nassert solution('''\n3\n30 20 20\n20 20 20\n20 20 30\n''') == '-1'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '405'\nassert solution('5') == '150'\nassert solution('7') == '240'\nassert solution('13') == '420'\n\"\"\"\n\na,b = map(int, input().split())\n\np = list(map(int, input().split()))\ndp = []\nd = list(map(int, input().split()))\ndp.append(p[0])\nfor i in range(1, len(p)):\n    dp.append(p[i] + dp[i - 1])\n\nm = int(input())\n\nfor i in range(m):\n    a, b = map(int, input().split())\n    if a >= b:\n        continue\n    print(min(dp[b] - p[a] + 1, dp[b]))\n    \n\"\"\"\nExplanation:\nThe second example, c, includes a 3rd trip, which is the cheapest option.\n\nThe first example, a, includes a 6th trip, which is the cheapest option.\n\nThe third example, d, includes a 2nd trip, which is the cheapest option.\n\n\"\"\""
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5\n20 15 10\n7 7\n30 0\n15 10\n\"\"\") == \"405\"\n\nassert solution(\n\"\"\"\n5\n20 15 10\n7 7\n30 0\n15 10\n8 8\n\"\"\") == \"375\"\n\nassert solution(\n\"\"\"\n2\n10\n1 1\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n10\n1 1 2 2 2 3 3 3 4 4 4 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 4 7') == '28 4 21 14.0'\n\n---"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 4 7') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5') == '28 4 21 14.0'\nprint(solution(input()))\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2 4 7\n''') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 2 4 7\n''') == '28 4 21 14.0'\nassert solution('''\n1\n3\n4\n2\n''') == '1 4 2 3'\nassert solution('''\n5\n1 2 2 1 2\n''') == '1 2 1 2 2'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"4 4 4 4\"\nassert solution(\"1 2 4 7\") == \"28 4 21 14.0\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6\n1 2 3 4 5 6\n\"\"\") == \"\"\"28 4 21 14.0\n\"\"\"[:-1]\n\nassert solution(\"\"\"\n1\n1 2\n\"\"\") == \"\"\"2 1\n\"\"\"[:-1]\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 4 7\\n') == '28 4 21 14.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 'None'\nassert solution([]) == 'None'\nassert solution([1, 2, 4, 7]) == '28 4 21 14.0'\nassert solution([1, 2, 4, 7, 8]) == '28 4 21 14.0'\nassert solution([1, 2, 4, 7, 8, 10]) == '28 4 21 14.0'"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes'\nassert solution('''\n4 1\n1 2 3 4\n2 3 4 1\n''') == 'yes'\nassert solution('''\n4 1\n1 2 3 4\n2 3 4 1\n''') == 'no'\nassert solution('''\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'no'\nassert solution('''\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'yes'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n') == 'yes\\n1 2 3 4 \\n2 3 4 1 \\n3 4 1 2 \\n4 1 2 3'\n\n'''\n\nfrom itertools import product"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n4 3 5 2\n3 2 1 4\n5 4 1 3\n''') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 2 1 4\\n5 4 1 3\\n'''\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes'\n\nassert solution('''\n4 2\n1 2 3 4\n3 4 1 2\n4 1 2 3\n''') == 'no'\n\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n''') == 'no'\n\nassert solution('''\n7 3\n2 3 5 7\n6 1 9 2\n3 9 8 2\n5 2 1 7\n8 6 9 3\n1 4 7 5\n2 5 1 9\n''') == 'no'\n\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 9\n''') == 'yes'"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"4 3\\n1 2 3\\n2 3 1\\n3 1 2\\n\") == \"no\"\nassert solution(\"4 5\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 2\\n\") == \"no\"\nassert solution(\"6 3\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 2\\n\") == \"yes\"\nassert solution(\"4 5\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 2\\n\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\n\"\"\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\n\"\"\"\nn,k=list(map(int,input().split()))\n\na=[]\nfor i in range(k):\n    a.append(list(map(int,input().split())))\n\na=sorted(a,key=lambda x:x[0])\na=sorted(a,key=lambda x:x[1])\na=sorted(a,key=lambda x:x[2])\na=sorted(a,key=lambda x:x[3])\na=sorted(a,key=lambda x:x[4])\na=sorted(a,key=lambda x:x[5])\na=sorted(a,key=lambda x:x[6])\na=sorted(a,key=lambda x:x[7])\na=sorted(a,key=lambda x:x[8])\n\nfor i in range(k):\n    print(\" \".join(map(str,a[i])))\n\n\"\"\"\n2 2\n1 2 3 4\n2 3 4 1\nSample Output:\nyes\n1 2 3 4 \n2 3 4 1 \n3 4 1 2 \n4 1 2 3\n\"\"\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1\\n') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n10 10 -10 -4 10\n''') == '10.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '10.000000000'\nassert solution('10') == '10.000000000'\nassert solution('20') == '9.9999999999'\nassert solution('-10') == '-10.000000000'\nassert solution('-20') == '-19.9999999999'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n10\n10 -10 -4 10\n''') == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10.000000000\"\nassert solution(\"\") == \"0.0\""
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 -3 1\\n1') == '2.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0.3333333333333333'\nassert solution('5') == '10.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n-10 -4 10\") == \"10.000000000\"\nassert solution(\"2\\n0 0 -1\") == \"0.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"10 5 -10 -4 10\") == \"10.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"10.000000000\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n-5 -4 3') == \"10.000000000\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n4\n''') == '1'\n\nassert solution('''\n2\n5\n6\n7\n''') == '4'\n\nassert solution('''\n3\n10\n100\n1000\n''') == '2'\n\nassert solution('''\n4\n3\n2\n1\n''') == '1'\n\nassert solution('''\n5\n2\n3\n1\n6\n''') == '2'"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n3\\n2\\n5') == 1\nassert solution('6\\n3\\n2\\n5\\n1') == 1\nassert solution('6\\n3\\n2\\n4') == 3\nassert solution('6\\n3\\n2\\n4\\n1') == 3\nassert solution('6\\n3\\n2\\n4\\n1\\n1') == 3\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3\\n2\\n45\\n\") == \"1\"\nassert solution(\"3\\n2\\n1\\n5\\n\") == \"2\"\nassert solution(\"1\\n1\\n2\\n3\\n\") == \"0\"\nassert solution(\"5\\n8\\n6\\n4\\n7\\n\") == \"0\"\nassert solution(\"15\\n9\\n2\\n2\\n1\\n5\\n\") == \"0\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('4\\n30\\n3\\n2\\n45\\n4\\n30\\n3\\n2\\n45\\n4\\n30\\n3\\n2\\n45') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '1'\nassert solution('10') == '10'\nassert solution('1000000000') == '1'\nassert solution('1000000') == '1'\nassert solution('1') == '1'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n2\n3\n4\n5\n7''') == '1'\n\nassert solution('''4\n3\n5\n1\n7''') == '2'\n\nassert solution('''5\n3\n6\n7\n1\n3''') == '2'\n\nassert solution('''6\n3\n1\n1\n1\n2\n1''') == '2'\n\nassert solution('''6\n3\n1\n1\n1\n2\n1''') == '2'"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n3\n2\n45\n''') == '1', 'First Test'\n\nassert solution('''\n4\n30\n3\n2\n45\n''') == '0', 'Second Test'"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('1') == '1'"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('4\\n10\\n12\\n8\\n9') == '0'\n\"\"\"\n\nstdin = input()\n\nn = int(stdin)\n\nfactors = list(set(range(2, 10**9+1)) - set(range(2, 10**9+1, 2)) - set([0]))\n\ntotal = 0\n\nfor i in range(1, n+1):\n    if n % i == 0:\n        total += 1\n        if i in factors:\n            total -= 1\n\nprint(total % (10**9+7))\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n5 1 8\\n2 1 9\\n1 2 4\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n5 1 8\\n2 1 9\\n1 2 4\\n1 1 5\") == \"0.000000000 0.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n5 1 8\\n2 1 9\\n1 2 4\\n1 1 5\\n1 1 6\") == \"0.000000000 -1.000000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1.0 0.66\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\") == \"0.000000000 1.360000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.000000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 0.360000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.000000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 -1.000000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 0.360000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '-0.880000000 0.000000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\"\nassert solution(\"5 5 0.66\\n2 3 1\\n3 4 1\\n3 5 1\\n3 6 1\\n4 5 5\\n3 5 3\\n\") == \"0.000000000 0.360000000\"\nassert solution(\"9 3 1.0 0.66\\n2 5 1\\n3 6 1\\n3 5 1\\n3 6 1\\n4 5 5\\n3 5 3\\n\") == \"0.000000000 0.360000000\"\nassert solution(\"20 7 1.0 0.66\\n2 4 1\\n3 6 1\\n3 5 1\\n3 6 1\\n4 5 5\\n3 5 3\\n\") == \"0.000000000 -1.000000000\"\nassert solution(\"15 7 1.0 0.66\\n2 4 1\\n3 6 1\\n3 5 1\\n3 6 1\\n4 5 5\\n3 5 3\\n\") == \"0.000000000 1.360000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 6 3.0 0.66') == '0.000000000 1.360000000'\nassert solution('2 4 8') == '0.000000000 1.000000000'\nassert solution('4 6 1') == '0.000000000 1.000000000'\nassert solution('3 6 1') == '0.000000000 1.000000000'\nassert solution('4 5 5') == '0.880000000 0.000000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"0.000000000 1.360000000\"\nassert solution(\n\"\"\"\n6 6 2.0 0.66\n1 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"0.000000000 0.360000000\"\nassert solution(\n\"\"\"\n6 6 3.0 0.66\n3 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"0.000000000 0.000000000\"\nassert solution(\n\"\"\"\n6 6 3.0 0.66\n1 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"0.000000000 0.000000000\"\nassert solution(\n\"\"\"\n6 6 3.0 0.66\n3 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\") == \"0.000000000 0.000000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 6 3.0 0.66') == '0.000000000 1.360000000'\nassert solution('2 4 8') == '0.000000000 1.360000000'\nassert solution('4 6 1') == '0.000000000 1.000000000'\nassert solution('3 6 1') == '0.000000000 -1.000000000'\nassert solution('4 5 5') == '0.000000000 0.360000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.000000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 -1.000000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 0.360000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 6 3.0 0.66\") == \"0.000000000 1.360000000\"\nassert solution(\"2 4 8\") == \"0.000000000 1.000000000\"\nassert solution(\"4 6 1\") == \"0.000000000 1.000000000\"\nassert solution(\"3 6 1\") == \"0.000000000 -1.000000000\"\nassert solution(\"4 5 5\") == \"0.880000000 0.000000000\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2 3\n3 0\n''') == '2'\n\nassert solution('''\n1\n1 1\n1 2\n1 1\n1 2\n1 2\nSample Input:\n2\n2\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\nSample Output:\n2\n1\n''') == '2'\n\nassert solution('''\n3\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\nSample Input:\n3\n5\n5 5\n5 5\n5 5\n5 5\nSample Output:\n3\n''') == '2'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '4'\n\"\"\""
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == '4'\n\"\"\"\n##############################################################################################################################\n##############################################################################################################################\n##############################################################################################################################\n##############################################################################################################################\n##############################################################################################################################\n##############################################################################################################################\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'\nassert solution(__import__('sys').stdin.read()) == '2'\n\nprint(__import__('code').solution(__import__('sys').stdin.read()))\n\n\n\"\"\"\n\n\n\"\"\"--- Day 5: Binary Boarding ---\n\nSanta has become stranded at the edge of the forest, following the forest loi along a path that he has been following.\n\nNoticing the trees, he will walk to the closest tree, then turn right to go up.\n\nFinally, he will walk home, picking up the gift.\n\nHe has gone quite a distance (miles) on the path, and now he needs to pick the tree closest to the hive.\n\nWhat is the Manhattan distance between that tree and the hive?\n\nThe distance between two points p1 and p2 is the sum of the absolute values of their differences along the corresponding axes, \ni.e. |p1 - p2|. For example, the distance between the points (3, 1) and (6, 7) is sqrt((3 - 6) ** 2 + (1 - 7) ** 2) = 5.\n\nIt is guaranteed that he can reach the hive in less than 15 minutes.\n\n--- Part Two ---\n\nAs he gets closer to the tree, the sense of the world gets weird. \nIt gets even more weird when he sees the light switch coming.\n\nThe moment he bumps into the switch, everything snaps back to normal.\n\nHe picks up the next gift.\n\nWhat is the Manhattan distance between that tree and the hive now?\n\nIt is guaranteed that he can reach the hive in less than 15 minutes.\n\n--- Part Two ---\n\nHe's not sure how to proceed. He does not know how to properly account for multiple lights being switched on at the same time.\n\nAfter a brief pause, he finally reaches the light switch. It must be the last gift he sees before the vacation begins.\n\nWhat is the Manhattan distance between that tree and the hive now?\n\n\"\"\"\n\n\"\"\"--- Day 6: Custom Customs ---\n\nYou finish your old job as a teacher at K-Pop. You're so tired of listening to your classmates, and you decided to write a new assignment to improve your reading skill.\n\nYou need to count the number of questions for each group that include the letter \"A\".\n\nSpecifically, you need to count both the number of questions that include \"A\" and the number of questions that don't include \"A\".\n\nYou receive the task in the form of a large group of test cases. Each test case will be a string, including the letter \"A\" only once.\n\nWrite a function that accepts the test cases and returns a count of the number of test cases that include the letter \"A\".\n\n--- Part Two ---\n\nAfter you finish counting the number of questions for each group, write a separate function to count the number of questions that include the letter \"A\" as well as count the number of questions that don't include the letter \"A\".\n\nThe function should return a dictionary with two keys: \"include\" with the count of questions that include the letter \"A\" and \"exclude\", with the count of questions that don't include the letter \"A\".\n\nFor example, if a group includes \"A\" 10 times and excludes \"A\" 5 times, the function should return {\"include\": 10, \"exclude\": 5}.\n\nThe group will always include the letter \"A\", but might not include \"B\" or \"C\" (or other letters).\n\n\"\"\"\n\n\"\"\"--- Day 2: Inventory Management System ---\n\nYou're trying to figure out exactly how much wood you'll need to buy for the party.\n\nA few weeks ago, you bought a whole load of fresh supplies. Now, they're coming to you via the door.\n\nInventory: 1000 units of supplies, 250 units of lumber, 500 units of bricks, and 500 units of wool.\n\nHow much wood would you need, in feet?\n\n\"\"\"\n\n\"\"\"--- Day 5: Rain Risk ---\n\nYou wake up one morning and find that you aren't in your bed; you aren't even in your room!\n\nYou're in the middle of the night, and there is a giant bear here eating a cheese cake.\n\nThe fat bear is unharmed and is ready to eat your face off.\n\nThe bear has a bunch of honey.\n\nThe fat bear is about to gobble you down when you look at the honey.\n\nRolling the bear into a chupacabra to take out the honey, what do you do?\n\nThe bear is unharmed. It doesn't have a lot of honey.\n\nThe bear is about to gobble your face off.\n\nYou have the choice to:\n\n    1. Eat the bear's face off and stand back.\n    2. Try to jump down and grab the honey directly.\n\nIf you jump, do you:\n\n    1. Fail to grab the honey.\n    2. Grab the honey and jump down.\n\nIf you grab the honey, do you:\n\n    1. Win.\n    2. Lose.\n\"\"\"\n\n\"\"\"--- Part Two ---\n\nThe bear looks at you from behind the buckler and then busts out laughing and can't move.\n\nYou have the choice to:\n\n    1. Punch the bear in the face,\n    2. Take the gun up and shoot the bear in the head.\n\nIf you punch the bear, do you:\n\n    1. Shoot the bear.\n    2. Throw the gun at the bear.\n\nIf you shoot the bear, do you:\n\n    1. Throw the gun up.\n    2. Run.\n\nIf you throw the gun up, do you:\n\n    1. Throw the gun down.\n    2. Run.\n\nIf you run, do you:\n\n    1. Throw the gun down.\n    2. Scream at the bear.\n\nIf you throw the gun down, do you:\n\n    1. Print \"Bang!\" and bang the bear.\n    2. Print \"Bear!\" and bear the bear.\n\"\"\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0\\n0 3\\n3 3\\n3 0\\n2') == '4'\nassert solution('5\\n0 0\\n0 3\\n3 3\\n3 0\\n2') == '3'\nassert solution('5\\n0 0\\n0 3\\n3 3\\n3 0\\n1 1\\n2 2\\nSample Input:\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\nSample Output:\n4\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'\n\nSample Input:\n5\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\nSample Output:\n3\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '4'\nassert solution('3') == '2'"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == '4'\nassert solution('''\n4\n0 -10\n0 10\n10 10\n10 -10\n2\n1 1\n2 2\n''') == '3'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2\n2 0\n3 2\n''') == '3'\nassert solution('''\n2\n-2 1\n-1 -1\n''') == '2'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4 0') == '1'\nassert solution('4 1') == '2'\nassert solution('4 2') == '2'\nassert solution('4 3') == '3 2'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 0\n0 1\n0 2\n0 3\n''') == '2 3 1'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n0 1\\n0 2\\n0 3\\n\") == \"2 1\"\nassert solution(\"5 2\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n3 2\\n3 1\\n\") == \"1 2\"\nassert solution(\"5 2\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n3 2\\n3 1\\n\") == \"1 2\"\nassert solution(\"5 2\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n3 2\\n3 1\\n\") == \"1 2\"\nassert solution(\"5 2\\n0 1\\n0 2\\n0 3\\n1 2\\n1 3\\n3 2\\n3 1\\n\") == \"1 2\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"4 0\\n0 1\\n1 2\\n0 3\") == \"1\\n2 1\\n2 1\"\nassert solution(\"4 0\\n0 1\\n1 2\\n3 3\") == \"1\\n2 1\\n2 1\"\nassert solution(\"4 0\\n0 1\\n1 2\\n0 3\") == \"1\\n2 1\\n2 1\"\nassert solution(\"4 0\\n0 1\\n1 2\\n3 3\") == \"1\\n2 1\\n2 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0\\n0 1\\n0 2\\n0 3') == '2 3 2'\nassert solution('10 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10') == '5 3 3'\nassert solution('20 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20') == '7 9 4'\nassert solution('50 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n2 21\\n2 22\\n2 23\\n2 24\\n2 25\\n2 26\\n2 27\\n2 28\\n2 29\\n2 30\\n2 31\\n2 32\\n2 33\\n2 34\\n2 35\\n2 36\\n2 37\\n2 38\\n2 39\\n2 40\\n2 41\\n2 42\\n2 43\\n2 44\\n2 45\\n2 46\\n2 47\\n2 48\\n2 49\\n2 50') == '8 16 6'\nassert solution('10000 0\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n0 6\\n0 7\\n0 8\\n0 9\\n0 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n2 21\\n2 22\\n2 23\\n2 24\\n2 25\\n2 26\\n2 27\\n2 28\\n2 29\\n2 30\\n2 31\\n2 32\\n2 33\\n2 34\\n2 35\\n2 36\\n2 37\\n2 38\\n2 39\\n2 40\\n2 41\\n2 42\\n2 43\\n2 44\\n2 45\\n2 46\\n2 47\\n2 48\\n2 49\\n2 50') == '1586 174 1094 4546 2663 6332 6584 9428 7897'"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 0\") == \"2\"\nassert solution(\"1 2\") == \"2 3\"\nassert solution(\"2 0\") == \"3\""
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n4 0\n0 1\n0 2\n0 3\n\"\"\") == \"2 1 3 2\"\n\nassert solution(r\"\"\"\n4 0\n0 1\n0 2\n0 3\n\"\"\") == \"3 1 2 2\"\n\nassert solution(r\"\"\"\n5 0\n0 1\n0 2\n0 3\n0 4\n\"\"\") == \"3 4 2 3 1\"\n\nassert solution(r\"\"\"\n8 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n\"\"\") == \"3 4 2 3 1 2\"\n\nassert solution(r\"\"\"\n8 0\n0 1\n0 2\n0 3\n0 4\n0 5\n0 6\n0 7\n0 8\n\"\"\") == \"3 4 2 3 1 2 3\""
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2 3 2\"\nassert solution(\"3 0\\n3 1\\n2 2\") == \"1 3\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 4\n0 1\n1 2\n2 3\n\"\"\") == \"2 3\"\nassert solution(\"\"\"\n4 3\n0 0 1\n1 2\n2 3\n\"\"\") == \"3 1\"\nassert solution(\"\"\"\n5 1\n0 0 1\n1 2\n2 3\n3 4\n\"\"\") == \"2 3\"\nassert solution(\"\"\"\n1 1\n0 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 1\n0 1\n\"\"\") == \"\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 0\n0 1\n0 2\n0 3\n\"\"\") == \"2 3 1\"\n\nassert solution(\"\"\"\n3 2\n0 1\n0 2\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n2 5\n0 0\n1 3\n0 1\n\"\"\") == \"2 1 3\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\n    \"0 0 0\",\n    \"0 1.5 0\",\n    ]) == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n0 0 0\n0 1.5 0\"\"\") == \"ok\"\n\nassert solution(\"\"\"2\n0.1 0.1 0\n0.1 0.2 0\"\"\") == \"ok\"\n\nassert solution(\"\"\"3\n0.0 0.0 0\n0.1 0.1 0\n0.1 0.1 0\"\"\") == \"ok\"\n\nassert solution(\"\"\"2\n0.00001 0.00001 0\n0.00001 0.00001 0\"\"\") == \"ok\"\n\nassert solution(\"\"\"5\n0.0000001 0.0000001 0\n0.0000001 0.0000001 0\n0.0000001 0.0000001 0\n0.0000001 0.0000001 0\n0.0000001 0.0000001 0\"\"\") == \"ok\""
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok'\nassert solution('1\\n0 0 0\\n0 1.5 0') == 'crash'\nassert solution('3\\n0 0 0\\n0 1.5 0\\n1 1.5 0') == 'crash'\n\n'''\n\nimport math\n\ninput_file = open('./day-16/input.txt', 'r')\ninput_list = input_file.read().splitlines()\ninput_list = [i.split() for i in input_list]"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''\n2\n0 0 0\n0 1.5 0\n1 0 0\nSample Output 2:\n''') == 'crash'\nassert solution('''\n2\n0 0 0\n0 1.5 0\n1 1.5 0\nSample Output 3:\n''') == 'crash'"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 0 0\n2 1.5 0\n''') == 'ok'\n'''\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n0 1\n0 1\n''') == 'ok'\nassert solution('''\n2\n1 0\n1 1\n''') == 'crash'\nassert solution('''\n4\n0 0\n0 1\n0 1\n''') == 'crash'\nassert solution('''\n2\n0 0\n1 0\n''') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n0 0 0\n''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"0 0 0\n    0 1.5 0\n    \"\"\"\n) == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0 0 0\\n0 1.5 0\\n\") == 'ok'\nassert solution(\"2\\n0 0 0\\n0 1.5 0\\n\") == 'crash'\nassert solution(\"1\\n0 0 0\\n0 1.5 0\\n\") == 'crash'\n\"\"\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok'\nassert solution('2\\n0 0 0\\n0 1.5 0\\n0 0 0') == 'crashed'\nassert solution('2\\n0 0 0\\n0 0 0') == 'crashed'\n\"\"\""
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == \"2\"\nassert solution(\n'''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == \"4\"\nassert solution(\n'''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == \"6\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '''\n2\nR 0\nG 2\nR 2\n'''\n\nassert solution('''\n1 3\n0 1\n2 2\n0 4\n2 2\n1 5\n''') == '''\n0\nR 0\nG 2\n'''\n\nassert solution('''\n1 3\n0 1\n1 2\n1 3\n1 4\n1 5\n0 4\n1 5\n0 3\n''') == '''\n0\nR 0\nG 2\nG 4\n'''"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2'\nassert solution('''\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2'\nassert solution('''\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '1'\nassert solution('''\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '1'\nassert solution('''\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '0'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\"\nassert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"5 2\\n0 1\\n0 2\\n1 2\\n2 2\\n0 1\") == \"2\"\nassert solution(\"5 3\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\") == \"1\"\nassert solution(\"10 5\\n0 1\\n0 3\\n1 2\\n2 4\\n3 5\\n4 6\\n5 6\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\") == \"0\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"10 4\") == \"3\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n') == '2'\nassert solution('100\\n50\\n50\\n') == '5'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\") == \"2\"\n\n\"\"\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n') == '2'\nassert solution('10 11 12 13\\nA B C\\nD E F\\nG H I\\nJ K L\\nM N O\\nP Q R S\\nT U V\\nW X Y Z\\n') == '1'\nassert solution('20 19 18 17 16 15 14 13 12 11 10 9 8 7 6 5 4 3 2 1\\nB C D E F G H I J K L M N O P Q R S T U V W X Y Z\\n') == '5'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\\n') == '0'\nassert solution('5 2 3 4 5\\nA B C D E F\\nG H I J K\\nL M N O P\\nQ R S T U\\nV W X Y\\nZ Z Z Z\\n') == '0'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n\nassert solution('''\n5 5 5 5\nAA AB BC DDA\nDD BD AC CA\nDB CA BA AA\nAA AB CA BB\nBB AB CA BA\n''') == '3'\n\nassert solution('''\n5 5 5 5\nBB AB AC CA\nAB DBA BA CA\nCA DBA AB BA\nCA CBA AB BA\nAB DBA BB CA\n''') == '3'\n\nassert solution('''\n5 5 5 5\nAA AB AC CA\nAB BB AC BA\nAA BB BD AC\nAA AC AB DBA\nBA DBA AA CA\n''') == '3'\n\nassert solution('''\n5 5 5 5\nAA AB AC CA\nAB BB AC BA\nAC BA DBA AA\nAA BB CA DBA\nCA DBA AB AA\n''') == '5'"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n\"\"\") == \"2\"\nassert solution(\"\"\"\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 3 3 3\") == \"2\"\nassert solution(\"2 2 4 2\") == \"4\"\nassert solution(\"7 8 2 2\") == \"2\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '1'\nassert solution('''\n10 2 2 1\nA B\nA B\nC D\nD E\nE F\nE F\nC D\nB C\nA D\n''') == '3'"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 3 1') == '1', \"Solution is: {}\".format(solution('1 3 3 1'))\nassert solution('7 2 6 3') == '3', \"Solution is: {}\".format(solution('7 2 6 3'))\nassert solution('5 6 5 5') == '5', \"Solution is: {}\".format(solution('5 6 5 5'))\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4 3 5\nB C\nA D\nF E\nF G\nA C\nA C\nB A\n''') == '2'\n\nassert solution('''\n3 4 5 3\nC D\nA B\nA C\nA D\nA C\nB D\n''') == '2'\n\nassert solution('''\n4 4 5 3\nD E\nA B C\nC D\nA C\nC D\nA E\n''') == '3'\n\nassert solution('''\n4 5 6 1\nA B C D\nE F G\n''') == '0'\n\nassert solution('''\n4 7 2 6\nG H\nA B C D\nE F\nB E\nB F\nA D\nA C\n''') == '2'"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"7 3 3 3\\nA B C\\nD E F\\n3 A E G\\n3 A C E\\n3 B D F\\n\") == \"2\"\nassert solution(\n    \"1 1 1 1\\nA\\nA\\nA\\nA\\n\") == \"1\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('4') == '2 3 1 4'\nassert solution('5') == '2 4 1 3 5'"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2 1 2'\nassert solution('''\n3\nYYY\nNYY\nYNY\n''') == '3 1 2'\nassert solution('''\n2\nYYY\nNYY\n''') == '1 1 1'\n\n'''"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"YYY\") == \"1 2 3\"\nassert solution(\"NYY\") == \"2 1 2\"\nassert solution(\"YNY\") == \"1 2 3\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\\n1\\n\") == \"2\"\nassert solution(\"2\\nY\\nN\\nY\\n\") == \"3\"\nassert solution(\"3\\nY\\nY\\nY\\n\") == \"2\"\nassert solution(\"4\\nY\\nY\\nY\\n\") == \"1\"\nassert solution(\"5\\nY\\nY\\nY\\n\") == \"0\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY\\n') == '2 1 2'\nassert solution('3\\nYYY\\nNYY\\nYNY\\n') == '3 1 2'\nassert solution('2\\nYYY\\nNYY\\nYNY\\n') == '1 2 3'"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2 1 3'\nassert solution('3') == '3 1 2'\nassert solution('1') == '3 1 2'\n\"\"\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"\"\"\n2\n1 2 3\n3 1 2\n\"\"\", \"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\")\nassert solution(\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"\"\"\n2\n2 3 2\n3 1 2\n\"\"\", \"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\")\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '2 3 4 1'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"3 1 2\"\nassert solution(\"5\") == \"3 1 2 3 1\"\nassert solution(\"7\") == \"3 1 2 3 1 3 1\"\nassert solution(\"11\") == \"3 1 2 3 1 3 1 3 1\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n...\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4\\n0\\n5\\n'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\nx..\\n...\\n...\") == \"4\"\nassert solution(\"4\\n1 3\\n1 1\\n3 2\\n\") == \"5 0\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n1 10 2 5 4 3 8 7 6 1\\n\") == \"0\""
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '4'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == \"4\"\nassert solution('x..') == \"0\"\nassert solution('...') == \"5\"\nprint(solution(input()))"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n1\\n3\\n3\\n3\\n3\\n\") == \"0\"\nassert solution(\"5\\n3\\n2\\n2\\n1\\n4\\n1\\n\") == \"5\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3\\n1 3\\n3 2\\n') == '5\\n0\\n5\\n'\nassert solution('10\\n5\\n1 2\\n2 5\\n3 6\\n4 1\\n5 3\\n6 4\\n7 5\\n8 6\\n9 5\\n10 3\\n') == '37\\n0\\n37\\n'\nassert solution('10\\n2\\n1 2\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 7\\n9 8\\n10 5\\n') == '16\\n0\\n16\\n'\nassert solution('5\\n2\\n1 2\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 7\\n9 8\\n10 5\\n') == '10\\n0\\n10\\n'\nassert solution('2\\n1\\n1\\n') == '0\\n0\\n'"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n\"\"\") == \"4\\n0\\n5\\n\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4 0 5'\nassert solution('''\n3 3\nx..\n...\n...\n3\n0 0\n2 1\n1 3\n''') == '5 0 4'\nassert solution('''\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '5 0 4'\n'''\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n''') == '4\\n0\\n5\\n', 'Testing'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '4'\nassert solution('x.x.x.x.x.x.x.x.x') == '1 1'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5\n3\n4\n5 3''') == \"4.114 -2.842\"\nassert solution('''3\n2\n3\n1\n2\n1''') == \"1.118 2.037\"\nassert solution('''2\n5\n3\n4\n5 3''') == \"5.000 3.000\"\nassert solution('''3\n2\n3\n4\n5 3''') == \"6.297 -0.784\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5\n3\n4\n5 3\n''') == \"1.118 2.037\"\n\nassert solution('''\n2\n1\n1\n''') == \"0.000 1.000\"\n\nassert solution('''\n2\n1\n1\n''') == \"1.000 -0.000\"\n\nassert solution('''\n2\n1\n2\n''') == \"1.000 2.000\"\n\nassert solution('''\n3\n3\n3\n4\n5 3\n''') == \"2.842 -2.842\""
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3\\n3\\n5\\n3\\n4\\n5 3') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1.118 2.037'\nassert solution('5') == '5.000 3.000'\nassert solution('3') == '1.118 2.037'\nassert solution('4') == '4.114 -2.842'\nassert solution('5') == '5.000 3.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1.711 2.458'\nassert solution('3') == '1.515 -1.261'\nassert solution('4') == '1.1 -1.037'\nassert solution('5') == '1.510 0.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n5\n3\n4\n5 3\n\"\"\") == \"\"\"4.114 -2.842\n6.297 -0.784\n5.000 3.000\n\"\"\".strip()\n\nassert solution(\"\"\"\n3\n-10\n2\n4\n-5 3\n\"\"\") == \"\"\"0.000 0.000\n0.000 0.000\n0.000 2.000\n\"\"\".strip()\n\nassert solution(\"\"\"\n10\n3\n5\n4\n3\n5 5\n\"\"\") == \"\"\"6.000 -2.000\n10.000 -0.000\n5.000 3.000\n\"\"\".strip()\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1.0'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n5\\n3\\n4\\n5 3') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\nassert solution('2\\n7\\n4\\n5\\n2 3\\n3 4\\n2 4\\n3 5\\n1 2\\n0 0\\n4 5\\n0 1\\n0 0') == '3.923 3.100\\n1.118 2.037\\n5.000 3.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4.114 -2.842'\nassert solution('1') == '5.000 3.000'\nassert solution('2') == '5.000 -3.000'\nassert solution('3') == '6.297 -0.784'\n\n---Input---\n-----Output-----\n$1$\n\n$5$\n\n$5$\n\n$3$\n\n$4$\n\n$2$\n\n$4$\n\n$5$\n\n$3$\n\n$3$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$4$\n\n$4$\n\n$3$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$4$\n\n$3$\n\n$3$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$4$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$4$\n\n$3$\n\n$3$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$4$\n\n$4$\n\n$3$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$4$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$5$\n\n$"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1.118 2.037\"\nassert solution(\"5\") == \"4.100 2.000\"\nassert solution(\"10\") == \"9.634 -0.835\"\nassert solution(\"12\") == \"8.865 -1.074\"\nassert solution(\"20\") == \"18.768 -1.360\""
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '13'\nassert solution('''\n5 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '10'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 4') == '5'\nassert solution('2 3') == '3'\nassert solution('2') == '5'\nassert solution('2 2') == '2'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3\\n5\\n8\\n10\\n13'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '13'\nassert solution('5') == '13'\nassert solution('5 5') == '13'\nassert solution('5 2') == '13'\nassert solution('5 2 5') == '13'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 5 7\") == \"8\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\""
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '13'\n\nassert solution('''\n4 5\n2 3 5 7\n2\n4\n6\n8\n''') == '10'\n\nassert solution('''\n10 2\n1 2 3 3 4 4 5 5 6 7 7 8 8 9 9 10 10\n2\n6\n8\n''') == '14'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"3\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n2 3\n2\n4\n''') == '5'\n\nassert solution('''\n5 5\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '7'\n\nassert solution('''\n2 2\n2\n4\n''') == '2'\n\nassert solution('''\n5 5\n5 1 2 5 7\n2\n3\n5\n6\n8\n''') == '5'\n\nassert solution('''\n5 5\n5 3 2 5 7\n2\n3\n5\n6\n8\n''') == '7'"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 5 7') == '8'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3 5 8 10 13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3 5 8 10 13\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3 5 8 10 13\"\n\n\"\"\""
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n''') == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n0 1\\n1 2') == '0'\nassert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('2 3\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('3 3\\n0 1\\n1 2\\n2 3') == '2'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 4\n0 1\n2 3\n2 4\n2 4\n1 5\n1 2 5\n''') == '0'\n\nassert solution('''\n5 4\n0 1\n2 3\n2 4\n2 4\n1 5\n1 2 5\n''') == '2'\n\nassert solution('''\n3 1\n0 1\n2 3\n''') == '1'\n\nassert solution('''\n3 1\n0 1\n2 3\n''') == '2'\n\nassert solution('''\n2 3\n0 1\n2 3\n''') == '1'"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n''') == '0'\nassert solution('''\n4 4\n0 1\n1 2\n2 3\n0 3\n''') == '4'\nassert solution('''\n5 5\n0 1\n1 2\n2 3\n2 4\n2 5\n''') == '4'\nassert solution('''\n5 6\n0 1\n1 2\n2 3\n2 4\n2 5\n1 6\n''') == '2'\n'''\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '0'\nassert solution('5 10') == '5'\nassert solution('10 2') == '10'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 5 C1 L1 C100 U1 C1') == '106'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\\n\") == \"106\\n107\\n71\\n\"\n\nprint(solution(\n    \"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\\n\"))\n\nprint(solution(\n    \"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\\n\"))\n\"\"\"\n\nn, r = map(int, input().split())\n\ntime = 0\n\ntask_details = []\nfor i in range(n):\n    # print(i)\n    task_details.append([int(x) for x in input().split()])"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"107\""
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '106\\n107\\n71\\n'\nassert solution('1 1') == '106\\n107\\n'\nassert solution('70 3 1 C1') == '106\\n107\\n71\\n'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1''') == '106\\n107\\n71'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '107'\nassert solution('''\n1 1 5 C1 L1 C100 U1 C1\n''') == '107'\nassert solution('''\n2 2 3\n2 3 4 C1 L1 C1 U1\n3 3 5 U3\n4 4 5 C1 L1 U1 C1\n''') == '100'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    10\n    8 6 3\n    10 1 5 C1 L1 C1 U1 C1\n    1 1 5 C1 L1 C100 U1 C1\n    10 2 2 C1\n    70 3 1 C1\n    '''\n) == '107'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 4 L1') == '107'\nassert solution('2 1 4 C1') == '107'\nassert solution('2 1 4 U1') == '106'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"106 107 71\""
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 5 C1 L1 C1 U1 C1') == '106'\nassert solution('3 1') == '107'\nassert solution('2 4') == '107'\nassert solution('3 1') == '107'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '51', solution.__doc__\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AA') == '51'\n\nassert solution('ABCDBCDCD') == '20'"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AA') == 51\n\nstdin = \"\"\"\n12\nAAAA\n\"\"\""
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"51\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"51\"\n\n'''\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AA\") == \"5\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AA\") == \"11\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AA') == '51'\n\nassert solution('BB') == '3'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AA') == '51'\nassert solution('AB') == '0'\nassert solution('BA') == '50'\nassert solution('BB') == '0'\nassert solution('AC') == '18'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AAAA') == 5\nassert solution('AAAAA') == 5\nassert solution('BBB') == 3\n\"\"\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"no ties\"\nassert solution(\"4\") == \"2 1\"\nassert solution(\"2 5\") == \"1 2\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\n''') == '6 20'\nassert solution('''\n5 17 34 55 67\n9 23 31 58 63\n11 25 40 49 61\n6 20 44 52 68\n''') == '11 25'\nassert solution('''\n9 23 31 58 63\n11 25 40 49 61\n6 20 44 52 68\n5 17 34 55 67\n''') == '6 20'\nassert solution('''\n1 19 43 50 72\n3 29 45 56 68\n5 17 34 55 67\n9 23 31 58 63\n11 25 40 49 61\n6 20 44 52 68\n''') == '11 25'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '2 3'\nassert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n3\n1 4 7\n5 2 4\n4 2 6\n''') == '2 1'\nassert solution('''\n3\n3 4 6\n1 2 4\n5 3 2\n''') == '1 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'no ties'\nassert solution('3') == '1 2'\nassert solution('4') == '3 1'\nassert solution('5') == '2 1'\nassert solution('6') == '2 4'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"1 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"4\\n4 4 4 4\\n4 4 4 4\\n4 4 4 4\\n4 4 4 4\\n4 4 4 4\\n4 4 4 4\") == \"4 1\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"no ties\"\nassert solution(\"5\") == \"1 2\"\nassert solution(\"10\") == \"3 4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"no ties\"\nassert solution(\"2\") == \"no ties\"\nassert solution(\"5\") == \"1 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\\\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\\\n1 2 3 4 5\n10 11 12 13 14\n7 8 9 10 11\n15 16 17 18 19\n12 13 14 15 16\n\"\"\") == \"10 11 12 13 14\"\nassert solution(\"\"\"\\\n1 2 3 4 5\n10 11 12 13 14\n7 8 9 10 11\n15 16 17 18 19\n12 13 14 15 16\n\"\"\") == \"10 11 12 13 14\"\nassert solution(\"\"\"\\\n1 2 3 4 5\n10 11 12 13 14\n7 8 9 10 11\n15 16 17 18 19\n12 13 14 15 16\n\"\"\") == \"10 11 12 13 14\"\n\nassert solution(\"\"\"\\\n1 2 3 4 5\n10 11 12 13 14\n7 8 9 10 11\n15 16 17 18 19\n12 13 14 15 16\n\"\"\") == \"10 11 12 13 14\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"no ties\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n\") == \"1 2\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('2\\n1 1\\n3 3') == '1'\nassert solution('3\\n1 3\\n2 2\\n1 1') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"0\"\nassert solution('2') == \"1\"\nassert solution('3') == \"2\"\nassert solution('4') == \"1\"\nassert solution('5') == \"2\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n') == '0\\n'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('3 2 1') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('2\\n3 2 1\\n1 2 3\\n3 2 1') == '1'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3\\n') == '0'\nprint('Congratulations! Your solution is correct.')"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 2 1\\n1 2 3\\n1 2 3\") == \"0\"\nassert solution(\"6\\n2 4 7 8 1 5\\n3 4 1 5 2 6\\n5 4 3 6 2 1\\n8 4 1 7 3 5\\n7 4 8 5 2 6\\n5 7 4 8 1 3 6\\n8 5 1 6 7 4 3\\n7 5 1 4 8 6 3 2\\n\") == \"2\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\n\nassert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\n\nassert solution('''\n2\n3 2 1\n1 2 3\n1 2 3\n''') == '1'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n17 5 6''') == '0.4\\n0\\n0.2\\n0.171428571429\\n0.228571428571\\n'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\"\nprint(solution(\"3\\n2 2\\n3 3\\n4 4\\n5 5\"))\nprint(solution(\"1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\"))\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n18 4 5''') == '0.4000000000000004 0.0\\n0.0999999999999999 0.0\\n0.04000000000000004 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0.0\\n0.0999999999999999 0.0\\n0.2 0"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4 2 1\\n10 2 3') == '0.4'\nassert solution('2\\n4 2 1\\n10 2 3') == '0.2'\nassert solution('1\\n4 2 1\\n10 2 3') == '0.171428571429'\nassert solution('4\\n1 2 1\\n10 2 3') == '0.228571428571'\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2 3\n6 2 3\n10 2 3\n16 3 4''') == '0.4\\n0'\nassert solution('''5\n1 2 3\n6 2 3\n10 2 3\n16 3 4\n20 3 5''') == '0.4\\n0.171428571429\\n0.228571428571\\n0.2\\n0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '0.4'\nassert solution('6 2 3') == '0'\nassert solution('10 2 3') == '0.2'\nassert solution('16 3 4') == '0.171428571429'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.4\\n0\"\n\nassert solution(\"2\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0\\n0.2\"\n\n\"\"\""
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2 3\\n6 2 3\") == \"0.4\\n0\"\nassert solution(\"2\\n1 2 3\\n10 2 3\") == \"0\\n0.2\"\nassert solution(\"2\\n1 2 3\\n16 3 4\") == \"0.171428571429\\n0\""
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3\n6 2 3\n10 2 3\n16 3 4\nSample Output:\n0.4\n0\n0.2\n0.171428571429\n0.228571428571\n''') == '0.2\\n0.171428571429\\n0.228571428571'"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('1\\n1 2\\n2 2') == '1 + 1 = 2\\n2 * 2 = 4'\nassert solution('2\\n1 2\\n2 2') == '2 * 2 = 4'\nassert solution('2\\n1 2\\n1 2') == '1 * 2 = 2'\nassert solution('1\\n3 3') == '3 * 3 = 9'\n\n\"\"\"\n\nn = int(input())\n\nfor i in range(n):\n    a,b = map(int, input().split())\n    if a==b:\n        print(a, \"+\", b, \"=\", a)\n    elif a<b:\n        print(a, \"+\", b, \"=\", a+b)\n    elif b<a:\n        print(a, \"=\", a+b, \"+\", b)\n    else:\n        print(a, \"-\", b, \"=\", a-b)"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 5\n3 3\n4 5\n-1 -6\n''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n'''\n\nassert solution('''\n3\n1 2\n3 5\n4 6\n''') == '3 * 3 = 9\\n1 - 2 = -1\\n4 - 5 = -6\\n'''\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 2\\n3 4\") == \"2 * 2 = 4\\n3 * 3 = 9\"\nassert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"5\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"impossible\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n2\\n3\\n4') == '2 * 3 = 6'\nassert solution('5\\n4\\n5\\n3') == '4 + 5 = 7'\nassert solution('1\\n2\\n3\\n3') == '3 * 3 = 9'\nassert solution('1\\n1\\n1\\n1') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 5\n3 3\n4 5\n-1 -6\n''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\n\nassert solution('''9\n1 5\n3 3\n4 5\n-1 -6\n8 8\n''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n8 * 8 = 64\\n64 - 8 = 32\\n32 * 32 = 1024\\n1024 - 32 = 768\\n768 * 768 = 12288\\n12288 - 768 = 8640\\n8640 - 12288 = 7488\\n7488 * 7488 = 147456\\n147456 - 7488 = 126400\\n126400 - 147456 = 124800\\n124800 - 126400 = 120\\n120 - 124800 = -2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 - 2 = 2\\n2 * 2 = 4\\n4 -"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1 5\n3 3\n4 5\n-1 -6''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5', \"First example\"\nassert solution('''5\n1 2\n2 3\n2 4\n2 5\n2 4\n1 1\n4 5\n2 3\n5 6\n3 4''') == '2 + 2 = 4\\n1 + 1 = 3\\n4 - 2 = 2\\n3 * 2 = 6\\n5 + 5 = 10\\n3 - 4 = 1\\n5 * 2 = 10\\n2 + 5 = 7\\n4 - 3 = -1\\n1 - 1 = 0', \"Second example\"\nassert solution('''5\n1 1\n4 4\n4 1\n1 2\n2 3\n2 4''') == 'impossible', \"Impossible example\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 5\n3 3\n4 5\n-1 -6\n\"\"\") == \"\"\"3 * 3 = 9\n4 - 5 = -1\n-1 - -6 = 5\n\"\"\"\n\nassert solution(\"\"\"\n5\n1 2\n2 3\n4 5\n-1 -6\n3 5\n4 3\n\"\"\") == \"\"\"1 + 2 = 3\n2 * 2 = 4\n4 - 5 = -1\n-1 - 6 = 5\n3 + 5 = 8\n4 * 3 = 12\n\"\"\"\n\nassert solution(\"\"\"\n1\n-2\n2\n-3\n\"\"\") == \"\"\"2 * -2 = -4\n2 * -3 = 6\n-2 - -1 = 1\n-3 + -2 = -1\n2 - -2 = 0\n2 - -3 = 3\n\"\"\"\n\nassert solution(\"\"\"\n10\n1 2\n2 3\n4 5\n-1 -6\n3 5\n4 3\n\"\"\") == \"\"\"1 + 2 = 3\n2 * 2 = 4\n4 - 5 = -1\n-1 - -6 = 5\n3 + 5 = 8\n4 * 3 = 12\n\"\"\"\n\nassert solution(\"\"\"\n20\n1 2\n2 3\n4 5\n-1 -6\n3 5\n4 3\n\"\"\") == \"\"\"1 + 2 = 3\n2 * 2 = 4\n4 - 5 = -1\n-1 - -6 = 5\n3 + 5 = 8\n4 * 3 = 12\n\"\"\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n-1 -2\n''') == '1 + 2 = 3'\nassert solution('''\n1 2\n-1 -2\n''') == '1 * 2 = 2'\nassert solution('''\n1 2\n-1 -2\n''') == '1 - 2 = -1'\nassert solution('''\n1 2\n1 2\n''') == '2 + 2 = 4'\nassert solution('''\n1 2\n-1 2\n''') == '-1 - 2 = 1'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"3\\n1 1\\n3 3\\n4 4\\n-1 -6\") == \"1 + 1 = 2\\n3 * 3 = 9\\n4 - 4 = 0\\n-1 - -6 = 5\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '4\\n1\\n4\\n6\\n0\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\\n1\\n4\\n6\\n0\\n\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10 2\n1 2\n2 4\n1 6\n4 8\n2 3\n3 7\n1 5\n5 2\n5 7\n4 5\n1 2\n\"\"\") == \"4\\n4\\n4\\n6\\n0\"\nassert solution(\"\"\"\n5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\nSample Output:\n8\n1\n4\n6\n0\n\"\"\") == \"8\\n1\\n4\\n6\\n0\"\nassert solution(\"\"\"\n3 3\n1 2\n2 3\n1 4\nSample Output:\n1\n1\n0\n\"\"\") == \"1\\n1\\n0\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\\n1\"\nassert solution(\"1 4\") == \"4\\n4\"\nassert solution(\"5 3\") == \"4\\n1\"\nassert solution(\"5 4\") == \"4\\n0\"\nassert solution(\"3 4\") == \"0\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 3') == '1'\nassert solution('1 2') == '0'\nprint(solution.__doc__)\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '4\\n4\\n6\\n1\\n0\\n'\nprint(solution('''\n5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n'''))"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '4\\n1\\n4\\n6\\n0'\n\nassert solution('''5 4\n1 3\n1 3\n1 3\n1 3\n1 3\n''') == '0\\n0\\n0\\n0\\n0'\n\nassert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '4\\n1\\n4\\n6\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '4\\n1\\n4\\n6\\n0\\n'\nassert solution('''10 20\n1 2\n1 3\n1 5\n2 4\n3 5\n4 6\n6 7\n7 8\n7 9\n7 10\n8 9\n10 2\n10 3\n10 5\n10 6\n9 10\n10 11\n11 12\n10 13\n11 14\n12 15\n12 16\n''') == '1\\n1\\n1\\n1\\n1\\n1\\n2\\n3\\n3\\n3\\n3\\n3\\n3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6\\n6"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '1\\n4\\n0\\n'\nassert solution('1 2 3') == '0\\n1\\n2\\n'\nassert solution('3 5 1') == '0\\n1\\n2\\n4\\n3\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == None\nassert solution(\"\") == \"\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"1 4 6 8\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('5 10 3 6') == '3'\n\n'''"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"-1 -2 -3 -4\") == \"6\"\nassert solution(\"-1 -2 3 -4\") == \"0\"\nassert solution(\"-1 2 -3 -4\") == \"1\"\nassert solution(\"1 -2 -3 -4\") == \"2\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '4'\nassert solution('''\n3\n1 2 3\n''') == '3'\nassert solution('''\n2\n1 1\n''') == '1'\nassert solution('''\n2\n1 2\n''') == '0'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(4) == '4'\nassert solution(5) == '5'"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\\n\") == \"4\"\nassert solution(\"10 10 10 10\\n\") == \"1\""
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 2 1') == '4'\nassert solution('4 3 3 2') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '4'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '4'"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4\\n\"\n    \"1 2 3 4\"\n    ) == \"4\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('1 30 2\\n20 60\\n50 90') == '6 3'\nassert solution('1 20 2\\n50 60\\n30 90') == '6 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 31 2\n20 60\n50 90\n''') == '3 5'\nassert solution('''\n1 31 2\n20 60\n50 90\n''') == '1 2'\n'''\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 1 2\\n1 1 2\\n1 1 2\") == \"2 2\"\nassert solution(\"1 1 2\\n1 1 2\\n1 1 2\") == \"2 2\"\nassert solution(\"1 1 2\\n1 1 2\\n1 1 2\") == \"2 2\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 31 2\n20 60\"\"\") == \"4 3\"\nassert solution(\"\"\"1 1\n2 2\"\"\") == \"1 2\"\nassert solution(\"\"\"10 2\n8 1\"\"\") == \"2 1\""
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 31 2\n20 60\n50 90\n''') == '4 3'\nassert solution('''\n10 20\n5 20\n5 20\n''') == '4 3'\nassert solution('''\n6 15\n5 25\n10 30\n''') == '4 3'\nassert solution('''\n10 15\n5 25\n1 30\n''') == '3 2'\nassert solution('''\n10 20\n1 30\n''') == '0 2'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4 3'"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4 3\"\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 31 2\\n\"\n    \"20 60\\n\"\n    \"50 90\"\n) == \"4 3\"\n\nassert solution(\n    \"1 31 4\\n\"\n    \"20 60\\n\"\n    \"50 90\"\n) == \"4 3\"\n\nassert solution(\n    \"1 51 2\\n\"\n    \"20 60\\n\"\n    \"50 90\"\n) == \"0 0\"\n\nassert solution(\n    \"1 51 4\\n\"\n    \"20 60\\n\"\n    \"50 90\"\n) == \"0 0\"\n\nassert solution(\n    \"10 51 2\\n\"\n    \"20 60\\n\"\n    \"50 90\"\n) == \"7 2\""
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 20 2\n20 60\n50 90\n''') == '4 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 31 2\\n20 60\\n50 90\") == \"4 3\"\nassert solution(\"1 20 2\\n20 60\\n50 90\") == \"3 1\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"2\"\n\nSample Input 2:\n1 1 2\nSample Output 2:\n2\n\nSample Input 3:\n3 5 1\nSample Output 3:\n6\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"3\""
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\") == \"3\"\nassert solution(\"3 2 2\") == \"6\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1') == '3'\nassert solution('1 2 2') == '5'\nassert solution('2 2 1') == '3'\nassert solution('2 2 2') == '4'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('2 3 2') == '6'\nassert solution('10 10 10') == '2999999999999999'\nprint(f'{solution(input())}')\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '3'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2 1\n''') == \"3\"\nassert solution('''\n4 5 2\n''') == \"4\"\nassert solution('''\n3 5 2\n''') == \"6\"\n''')"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"2 1 2\") == \"6\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"2 2 1\") == \"5\"\nassert solution(\"3 2 1\") == \"4\"\n\"\"\"\n\nimport math\n\nR, W, d = map(int, input().split())\n\ncount = 0\n\nfor r in range(1, R+1):\n    if d <= r:\n        break\n    \n    for w in range(1, W+1):\n        if d <= w:\n            break\n        \n        for i in range(1, r+1):\n            if w + i <= d:\n                break\n            \n            if i + w <= r:\n                break\n            \n            count += 1\n\nprint(count)"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1 2\n2 1 2''') == '6'\nassert solution('''3 2 1\n2 2 2''') == '9'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1341\\n2412\\n1200\\n3112\\n2391') == '1 1 2'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1341 2412 1200 3112 2391') == '3 1'"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1341 2412 1200 3112 2391\n''') == '3 1'\nassert solution('''7\n1234\n5678\n1235\n2\n6\n1234\n''') == '1 5'\nassert solution('''8\n1234\n5678\n1235\n2\n6\n1234\n''') == '1 2'\nassert solution('''8\n1234\n5678\n1235\n2\n6\n1234\n''') == '1 6'\nassert solution('''8\n1234\n5678\n1235\n2\n6\n1234\n''') == '1 7'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\""
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\\n\") == \"3 1\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\\n\") == \"3 0\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\\n\") == \"2 0\"\nassert solution(\"5\\n1341 2412 1200 3112 2391\\n\") == \"1 0\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391\\n') == '3 1'\nassert solution('4\\n3737 3737 3737 3737\\n') == '1 1'\nassert solution('10\\n4 3 5 6 7 8 9 10\\n') == '4 2'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"4\\n10 20 30 40\") == \"3 0\"\nassert solution(\"3\\n1 1 1 1\") == \"3 0\"\nassert solution(\"6\\n10 20 30 40 50 55\") == \"2 0\"\nassert solution(\"6\\n1 1 1 1\") == \"2 2\""
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '3\\n1341 2412 1200 3112 2391') == '3 1'"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"6\\n1211 101112 3213 22131 23112 1 1 1 1\") == \"3 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n5\n1341 2412 1200 3112 2391\n'''\n) == '1 3'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 1 3\") == \"3\"\nassert solution(\"10 20\") == \"6\"\nassert solution(\"2 5\") == \"6\"\nassert solution(\"3 5\") == \"4\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 20') == '6'\nassert solution('3 5') == '4'\nassert solution('3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4') == '7'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'\nassert solution('''5 0\n2 3 4\n1 2 3\n2 3 4\n4 1 2\n3 4 2\n4 3 5\n''') == '3'\nassert solution('''10 20\n1 2 1\n3 1 1\n2 3 2\n2 3 5\n3 2 4\n4 3 1\n3 2 4\n3 4 5\n4 5 3\n5 4 4\n4 4 5\n3 5 2\n3 4 2\n3 5 3\n5 4 2\n4 3 1\n4 5 2\n3 4 5\n3 5 2\n5 4 3\n4 1 1\n4 3 4\n5 3 3\n4 5 2\n3 5 4\n4 4 3\n4 3 2\n5 4 1\n4 5 4\n4 5 4\n5 4 3\n4 3 5\n''') == '7'\nassert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '2'\nassert solution('''10 20\n3 5\n2 3 7\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '4'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 20') == '6'\nassert solution('10 2') == '10'\nassert solution('5 20') == '20'\n\n'''"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([10, 20]) == '6'\nassert solution([5, 20]) == '5'\nassert solution([7, 20]) == '4'\nassert solution([3, 5]) == '2'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7\\n4 5') == '3'\nassert solution('20 20\\n3 3\\n1 2 1\\n2 1 2\\n2 3 3\\n3 2 4') == '5'\nassert solution('10 10\\n5 5') == '10'\nassert solution('5 5\\n10 5') == '0'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '6'\n\nassert solution('10 10') == '10'\n\nassert solution('10 20') == '20'\n\nassert solution('3 5') == '10'\n\nassert solution('3 5') == '10'"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\nSample Input 2:\n5 1\n1 2\n1 2\nSample Output 2:\n4\n''') == '4'\nassert solution('''1 1\n1 1\nSample Output 3:\n0\n''') == '0'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '6'\nassert solution('10 20') == '11'\nassert solution('3 5') == '7'\nassert solution('1 3 7') == '7'\nassert solution('2 1 1') == '1'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 20') == '6'\nassert solution('1 5') == '7'\nassert solution('2 2') == '6'\nassert solution('2 3') == '5'\nassert solution('2 3 5') == '4'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 ab b\\n1 b') == '0 1\\n-1 0\\n'\nprint(solution('2 ab b\\n1 b'))"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\na\nb\nc''') == '0 1 -1'\nassert solution('''2\nab\nbc''') == '0 1 1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 ab b\\n1 b') == '0 1'\n\"\"\"\n\nn = int(input())\n\nfor _ in range(n):\n    start, end = input().split()\n    start = list(start)\n    end = list(end)\n    answer = 0\n    for i in range(len(start)):\n        if start[i] == end[i]:\n            answer += 1\n        else:\n            start.append(i)\n            break\n    print(answer, len(end)-answer)\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 ab b') == '0 1'\nassert solution('1 b') == '-1 0'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 ab b') == '0 1'\nassert solution('1 b') == '-1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 ab b\\n1 b\\n') == '0 1\\n-1 0'"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2 ab b\n1 b\n''') == '0 1'\nassert solution('''\n5\n2 ab c\n3 b\n1 c\n4 ab\n5 b\n''') == '-1 0'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 ab b\\n1 b\") == \"0 1\"\nassert solution(\"2 ab b\\n1 a\\n2 a\\n1 b\") == \"-1 0\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\na a c\nb\na\nc\na\n2 ab b\n1 b\n''') == '0 1 -1'\n\nassert solution('''\n4\nb a c d\na\nd\nb\n''') == '0 -1 2 3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"2 2\") == \"1\"\n\n---\nSample Input:\n2 4\n1 1 2\n1 1 2\n2\nSample Output:\n0.5\n1.0\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"1\"\nassert solution(\"1 1 2\") == \"3\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '1'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2') == '3'\n\"\"\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\") == \"1\"\nassert solution(\"2 4\\n1 1 2\\n2\\n\") == \"3\"\nassert solution(\"1\\n3\\n\") == \"1\\n3\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"3\"\nassert solution(\"4 3\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\""
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 4\n1 1 2\n2\n1 1 2\n2\n''') == '1'\nassert solution('''\n1\n5\n10\n10\n10\n10\n10\n10\n20\n30\n''') == '1'\nassert solution('''\n3\n5\n5\n10\n''') == '1'\nassert solution('''\n2\n1\n1\n''') == '0'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n1 2\\n2') == '1\\n3'\nassert solution('2 1\\n1 2\\n2\\n') == '2\\n3'\n\"\"\"\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4\\n1 1 2\\n2') == '1'\nassert solution('2 4\\n1 1 2\\n2') == '3'\nassert solution('2 5\\n2 1 3\\n3') == '7'\nassert solution('3\\n1 1 2\\n2') == '0.3333333333333333333333333333333333333333333333333'\n\nstdin = '''3\n1 1 2\n2\n2 3 1\n2'''"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n2 3\n1 1 1\n2\n2\n''') == '2.3000000000000000000000000000000000000000000000'"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 4\n1 1 2\n2\n1 1 2\n2\n''') == '3'\nassert solution('''1\n2\n''') == '1'\nassert solution('''1\n''') == '0'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 5 2\n5 0 4\n2 4 0\n''') == '7'\nassert solution('''\n10 10 8\n5 0 4\n1 2 5\n7 3 7\n9 8 9\n5 10 3\n8 1 7\n4 9 9\n10 4 6\n''') == '9'\n'''\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '7'\nassert solution('10') == '62'\nassert solution('3') == '7'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n0 5 2\n5 0 4\n2 4 0\n''') == '7'\n\"\"\""
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n0 5 2\n5 0 4\n2 4 0\n\"\"\") == \"7\"\n\nSample Input:\n6\n1 0 2 1 1\n1 2 2 0\n2 1 2 0\n1 0 0 1\n0 1 1 0\n1 0 2 1\n1 2 0 1\nSample Output:\n8\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 5 2\n5 0 4\n2 4 0\n''') == '7'\nassert solution('''\n0 4 0\n0 0 3\n0 5 0\n''') == '4'\nassert solution('''\n1 2 3\n4 5 0\n0 2 7\n''') == '9'\nassert solution('''\n1 2 3\n4 5 0\n0 2 7\n''') == '8'\nassert solution('''\n1 2 3\n4 5 0\n0 2 7\n''') == '6'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\n\"\"\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"3\\n0 5 2\\n0 0 4\\n2 4 0\") == \"8\"\nassert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\nassert solution(\"3\\n0 5 2\\n5 0 4\\n2 4 0\") == \"7\"\n\n'''\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '3'\nassert solution('3') == '3'"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n0 5 2\n5 0 4\n2 4 0\n''') == '7'\nassert solution('''3\n0 1 2\n1 0 3\n2 0 0\n''') == '7'"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '8'"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1099511627776\") == \"8\""
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1099511627776\") == \"8\"\nassert solution(\"123456789101112\") == \"18\""
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().strip()\nprint(solution(input()))\n\"\"\"\n\nimport sys\n\nn = int(input())\nprint(n**2 + n + 1)\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\n\"\"\"\nx = int(stdin)\nn = 0\nwhile x > 1:\n    if x % 5 == 0:\n        x = x / 5\n        n += 1\n    else:\n        x = x - (x % 5) + 5\n        n += 1\nprint(n)\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('123') == '3'\nassert solution('123456789') == '4'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('1099511627776') == '8'"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1099511627776\") == \"8\"\nassert solution(\"12\") == \"1\"\nassert solution(\"10000000000\") == \"8\"\nassert solution(\"10000000001\") == \"1\"\nassert solution(\"9999999999999999999999999999999999\") == \"0\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\nx..\\n.x.\\nx.x') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nx..\n.x.\nx.x\n''') == \"2\"\nassert solution('''\n.x.\nx.x\n.x.\n''') == \"0\"\n'''\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    3 3\n    x.x.x\n    x.x.x\n    x.x.x\n    ''') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n.x.\\nx..') == '1'\nassert solution('3 3\\n.x.\\nx.x') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('x.x.x.x') == '1'\nassert solution('x.x.x') == '1'\nassert solution('x') == '1'\nassert solution('x..') == '1'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2\"\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\nx.x.x') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 2\n\nassert solution(\"3 3\\nx..\\n.x.\\nx.x\\n\") == 2\nassert solution(\"3 3\\nx..\\n.x.\\nx.x.\\n\") == 3\nassert solution(\"3 3\\nx..\\n.x.\\nx.x.\\nx.x.\\n\") == 4\nassert solution(\"3 3\\nx..\\n.x.\\nx.x.\\nx.x.\\nx.x.\\n\") == 5\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 3') == '2'\nassert solution('3 2') == '1'\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == \"2\"\nassert solution('''\n10 10\nx..x.x..\nxxxxxx.xx\nxxxxxx.x.\nxx.xx.x.x\nxxxxxx.x.x\nxxxxxx.xx.x\nxxxxxx.xx.x\nxxxxxx.xx.x\nx.x.x.x.x\n''') == \"3\"\nassert solution('''\n1 1\nxxxxx\n''') == \"1\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6\\n'\nassert solution('5\\n1 2 3\\n2 4 3\\n3 4 5\\n4 6 5\\n5 6 6') == '7\\n-1\\n8\\n11\\n13\\n17'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '9'\nassert solution('5\\n') == '9'\nassert solution('5\\n2 3 2') == '6'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n''') == '9\\n-1\\n5\\n6\\n'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\") == \"9\\n-1\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6\\n'"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1'\nassert solution('4\\n1 1 1\\n2 1 1\\n3 2 1\\n4 3 1\\n') == '6'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 2') == '9'\nassert solution('2 5 2') == '6'\nassert solution('3 0 0') == '-1'\nassert solution('4 2 4') == '6'\nassert solution('5 3 0') == '-1'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n\"\"\") == \"9\"\n\"\"\"\n--- Part Two ---\nAlice and Bob are working on a video game called Among Us. The video game is currently in construction.\n\nSpecifically, they are building an infrastructure for a game that will be played on a grid of $X$ by $Y$ cells.\n\nThe infrastructure consists of an infinite grid of hexagonal cells, some of which are blocked off in a river. All tiles in the grid are one unit by one unit. Each tile has some amount of time to be played in it before it's blocked off. For example, the top-right tile of the grid has $t=1$ time units to be played before it can be blocked off.\n\nTo avoid delays due to there being little water in the river, the game is currently implemented as a grid of tiles that are either blocked off or not blocked off at all.\n\nThe grid is represented as a list of lists of integers where each element represents the amount of time to be played in the hexagonal cell represented by that location. For example, a tile that is blocked off would have a value of -1, while a tile that has not been blocked off would have a value of 0 or more.\n\nAlice and Bob have an infinite amount of money. They each start with $100.\n\nAlice and Bob are playing in the game. If Alice's play is to land on a blocked off hexagonal tile, Alice loses $t, and if Bob's play is to land on a blocked off hexagonal tile, Bob loses $t.\n\nThe game ends when both players have spent their turns. Whoever has the most amount of money wins the game.\n\n-----Input-----\nThe first line contains an integer $X$, the number of hexagons.\nThe next $X$ lines each contain an integer $Y$, the number of hexagons in the grid along a row.\nThe next $Y$ lines each contain an integer $t$, the number of hexagons in the tile.\n\n-----Output-----\nPrint one line containing the amount of money each player has remaining.\n\n-----Examples-----\nSample Input:\n8\n8\n1 0 0\n2 4 3\n3 2 0\n4 4 0\n2 3 1\n4 2 1\n3 2 0\n4 1 2\n\nSample Output:\n16\n\"\"\"\nimport math\nimport heapq\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '-1'\nassert solution('5') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == '9'\nassert solution('2 5 2') == '6'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution(\n'''\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '95'\nassert solution(\n'''\n6\n5 5 5 5 5 5\n4 1 1 4 1 1\n3 1 1 1 2 3\n2 1 3 1 1\n1 1 1 1 3\n''') == '55'\nassert solution(\n'''\n10\n10 10 10 10 10 10 10 10 10 10 10\n8 1 1 8 1 1 8 1 1 8\n7 1 1 7 1 1 7 1 1 7\n6 1 1 6 1 1 6 1 1 6\n5 1 1 5 1 1 5 1 1 5\n4 1 1 4 1 1 4 1 1 4\n3 1 1 3 1 1 3 1 1\n2 1 1 2 1 1 2 1 1\n1 1 1 1 1 1 1 1 1\n''') == '18'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n\" +\n    \"1 1 40 30 20 10\\n\" +\n    \"3 1 95 95 95 10\\n\" +\n    \"2 1 95 50 30 20\"\n) == \"91\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == \"91\"\nassert solution('5') == \"23\"\n\nYour Task:\nYou don't need to read input or print anything. Your task is to complete the function solution() which takes string as input and returns the minimum time it takes to beat all of the levels.\n\nExpected Time Complexity: O(n).\nExpected Auxiliary Space: O(1).\n\nConstraints:\n1 <= n <= 2500\n1 <= s, t <= 10^9\n1 <= x <= n\n1 <= a <= 10^9\n\"\"\""
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '40'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '91'\nassert solution('1') == '0'\nassert solution('3 2 1 40 30 20 10') == '91'\nassert solution('2 1 95 95 95 10') == '101'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"91\"\nassert solution(\"\"\"\n4\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n2 3 95 50 30 20\n\"\"\") == \"92\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"41\"\nassert solution(\"3\") == \"95\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('5\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '92'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''\n6\n2 1 97 4 2 2\n4 1 5 4 1 2\n5 1 1 2 5 4\n1 1 1 2 5 5\n1 1 2 4 2 4\n4 2 1 5 5 4\n5 2 1 2 4 1\n''') == '95'"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n15 20\\n0') == '15'\nassert solution('3\\n50 15 10\\n1 1 1') == '50'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2\\n15 20\\n0\\n1 1'\n    ) == '15'"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '15'\nassert solution('4') == '120'\nassert solution('5') == '300'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n5 4\\n0 0 1 0\\n1 1\\n') == '1'\nassert solution('1\\n5 4\\n0 1 1\\n1 1\\n') == '2'\nassert solution('5\\n10 10 10 10\\n0 0 0 0\\n1 1 1 1\\n1 1 1 1\\n') == '0'"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '15'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n15 20\\n0') == '15'\nassert solution('3\\n18 25 10\\n2 3\\n1 4') == '23'"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n15 20\\n0') == '15'\nassert solution('3\\n15 10\\n0 1\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n201 202\\n202 203\\n203 204\\n204 205\\n205 206\\n206 207\\n207 208\\n208 209\\n209 210\\n210 211\\n211 212\\n212 213\\n213 214\\n214 215\\n215 216\\n216 217\\n217 218\\n218 219\\n219 220\\n220 221\\n221 222\\n222 223\\n223 224\\n224 225\\n225 226\\n226 227\\n227 228\\n228 229\\n229 230\\n230 231\\n231 232\\n232 233\\n233 234\\n234 235\\n235 236\\n236 237\\n237 238\\n238 239\\n239 240\\n240 241\\n241 242\\n242 243\\n243 244\\n244 245\\n245 246\\n246 247\\n247 248\\n248 249\\n249 250\\n250 251\\n251 252\\n252 253\\n253 254\\n254 255\\n255 256\\n256 257\\n257 258\\n258 259\\n259 260\\n260 261\\n261 262\\n262 263\\n263 264\\n264 265\\n265 266\\n266 267\\n267 268\\n268 269\\n269 270\\n270 271\\n271 272\\n272 273\\n273 274\\n274 275\\n275 276\\n276 277\\n277 278\\n278 279\\n279 280\\n280 281\\n281 282\\n282 283\\n283 284\\n284 285\\n285 286\\n286 287\\n287 288\\n288 289\\n289 290\\n290 291\\n291 292\\n292 293\\n293 294\\n294 295\\n295 296\\n296 297\\n297 298\\n298 299\\n299 300\\n300 301\\n301 302\\n302 303\\n303 304\\n304 305\\n305 306\\n306 307\\n307 308\\n308 309\\n309 310\\n310 311\\n311 312\\n312 313\\n313 314\\n314 315\\n315 316\\n316 317\\n317 318\\n318 319\\n319 320\\n320 321\\n321 322\\n322 323\\n323 324\\n324 325\\n325 326\\n326 327\\n327 328\\n328 329\\n329 330\\n330 331\\n331 332\\n332 333\\n333 334\\n334 335\\n335 336\\n336 337\\n337 338\\n338 339\\n339 340\\n340 341\\n341 342\\n342 343\\n343 344\\n344 345\\n345 346\\n346 347\\n347 348\\n348 349\\n349 350\\n350 351\\n351 352\\n352 353\\n353"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n15 20\n0\n1 1\n''') == '15'\nassert solution('''\n4\n4 5\n1 0\n1 1\n''') == '14'\nassert solution('''\n5\n10 12\n3 4\n5 6\n5 4\n''') == '20'\nassert solution('''\n3\n0 0\n1 1\n''') == '0'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n20 15 25\n1\n1 2\n2 2\n0\n''') == '25'\n\nassert solution('''\n4\n100 150 250 250\n3\n0\n2\n1\nSample Output:\n201\n''') == '201'\n\nassert solution('''\n3\n300 200 200\n0\n2\nSample Output:\n200\n''') == '200'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n15 20\n0\n1 1\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n1\n2\n1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible'\nassert solution('''\n5 3\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == '1'\nassert solution('''\n5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == '2'\nassert solution('''\n5 6\n3 1 375\n2 5 283\n1 4 716\n4 4 98\n4 2 716\n''') == 'impossible'\nassert solution('''\n5 6\n3 1 375\n2 5 283\n1 4 716\n4 2 716\n4 4 98\n''') == '2'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n') == 'impossible'\n\nhttps://www.hackerrank.com/challenges/global-optimization-2/problem\n\n'''\n\nn, m = map(int, input().split())\n\nd = {}\n\nfor _ in range(m):\n    a, b, c = map(int, input().split())\n    if a not in d:\n        d[a] = 0\n    if b not in d:\n        d[b] = 0\n    d[a] += c\n    d[b] += c\n\nd1 = {}\n\nfor k, v in d.items():\n    d1[k] = v\n\ns = sorted(d1.items())\n\nfor k, v in s:\n    print(k, v)\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"impossible\"\nassert solution(\"3 1 375\") == \"375\"\nassert solution(\"2 5 283\") == \"283\"\nassert solution(\"1 4 716\") == \"716\"\nassert solution(\"3 4 98\") == \"98\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('4 4\\n2 1 4\\n3 3 8\\n2 2 2\\n1 2 5') == '11'\nassert solution('4 1\\n1 3 5\\n2 2 3\\n3 4 1') == '12'\nassert solution('3 2\\n2 5 8\\n5 1 4\\n2 1 2') == 'impossible'\nassert solution('10 1\\n2 3 6\\n5 8 10\\n5 2 2\\n2 4 2\\n4 1 3\\n3 7 3\\n7 4 1\\n5 4 5\\n5 3 4\\n4 5 7\\n2 4 6\\n1 1 1\\n1 5 1\\n1 1 4\\n3 7 8\\n4 5 2\\n5 3 6\\n3 3 3\\n3 1 5\\n5 2 4\\n4 4 4\\n4 1 4\\n3 3 4\\n6 7 6\\n4 7 6\\n4 5 6\\n4 4 4\\n4 5 6\\n3 4 4\\n4 7 2\\n4 7 8\\n5 7 2\\n3 5 3\\n3 4 5\\n4 6 3\\n4 5 6\\n5 7 8\\n2 6 7\\n3 7 7\\n3 4 4\\n3 4 4\\n1 4 7\\n1 5 5\\n5 3 5\\n2 1 2\\n4 3 2\\n5 1 2\\n4 6 3\\n2 3 2\\n6 4 4\\n1 2 1\\n2 4 2\\n4 2 1\\n4 2 1\\n2 5 3\\n4 7 4\\n3 6 1\\n4 3 4\\n1 4 1\\n5 1 5\\n4 4 4\\n2 5 3\\n3 5 3\\n4 4 4\\n5 5 5\\n2 3 3\\n1 3 5\\n1 3 2\\n1 5 2\\n2 1 3\\n4 4 2\\n5 1 4\\n2 5 2\\n3 2 1\\n2 4 1\\n3 4 1\\n4 5 2\\n4 4 1\\n4 5 2\\n2 4 2\\n4 3 3\\n4 4 1\\n4 1 2\\n2 4 2\\n1 5 2\\n4 5 1\\n5 3 2\\n1 1 1\\n2 4 2\\n5 1 2\\n3 3 2\\n3 2 2\\n2 5 2\\n4 3 3\\n4 4 3\\n4 5 4\\n4 4 1\\n3 5 3\\n2 4 2\\n1 4 2\\n1 1 1\\n3 7 3\\n2 5 3\\n5 3 3\\n3 5 3\\n5 3 4\\n3 3 3\\n2 5 4\\n4 6 4\\n5 1 5\\n3 4 3\\n2 4 2\\n3 5 2\\n2 6 3\\n3 6 3\\n2 2 3\\n2 2 3\\n1 5 1\\n1 4 2\\n3 4 4\\n3 6 2\\n4 1 5\\n2 4 5\\n3 5 4\\n4 5 2\\n3 4 4\\n4 4 3\\n4 3 4\\n4 5 2\\n3 4 4\\n4 4 4\\n3 4 4\\n4 2 4\\n4 2 4\\n4 4 2\\n1 2 1\\n3 1 3\\n4 3 3\\n3 1 3\\n1 1 1\\n2 5 3\\n5 3 3\\n5 4 1\\n3 3 2\\n2 1 2\\n2 4 2\\n4 1 2\\n4 5 1\\n4 1 4\\n3 1 2\\n4 5 2\\n5 4 1\\n2 3 2\\n2 5 2\\n4 1 1\\n4 4 3\\n5 3 2\\n1 5 3\\n4 2 1\\n2 4 2\\n1 2 1\\n1 6 1\\n1 4 4\\n3 5 3\\n2 4 1\\n3 4 2\\n4 4 3\\n2 5 1\\n4 6 2\\n3 2 3\\n4 6 2\\n2 5 3\\n4 6 2\\n5 2 3\\n2 5 3\\n4 3 4\\n2 4 2\\n4 4 4\\n4 6 4\\n3 6 4\\n2 5 4\\n3 5 3\\n2 5 2\\n4 5 4\\n3 2 4\\n4 1 4\\n4 4 4\\n5 3 5\\n2 4 4\\n4 3 5\\n2 5 2\\n3 2 3\\n5 2 4\\n3 6 2\\n4 4 3\\n5 4 4\\n1 4 4\\n5 3 2\\n4 3 4\\n3 5 3\\n2 5 2\\n4 2 3\\n1 4 2\\n2 3 2\\n2 3 2\\n2 5 2\\n2 5 2\\n5 3 3\\n3 3 3\\n4 2 2\\n5 1 3\\n4 3 4\\n3 3 3\\n2 5 2\\n2 6 3\\n5 5 2\\n1 4 2\\n4 2 3\\n3 5 3\\n3 5 3\\n4 6 3\\n2 5 3\\n4 2 1\\n4 4 1\\n5 6 4\\n4 6 4\\n5 6 2\\n4 6 3\\n4 6 3\\n5 4 4\\n3 6 3\\n4 6 3\\n5 4 4\\n2 4 2\\n3 5 2\\n4 6 4\\n3 6 3\\n1 5 1\\n3 4 3\\n2 5 2\\n3 5 3\\n4 6 4\\n2 5 2\\n4 2 1\\n5 1 5\\n4 5 4\\n3 6 4\\n4 5 4\\n1 6 3\\n1 6"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 4],\n    [3, 1, 375],\n    [2, 5, 283],\n    [1, 4, 716],\n    [3, 4, 98],\n    \"impossible\") == \"impossible\"\nassert solution([5, 4],\n    [3, 1, 375],\n    [2, 5, 283],\n    [1, 4, 716],\n    [3, 4, 98],\n    \"0\") == \"0\"\nassert solution([5, 4],\n    [3, 1, 375],\n    [2, 5, 283],\n    [1, 4, 716],\n    [3, 4, 98],\n    \"impossible\") == \"impossible\"\nassert solution([5, 4],\n    [3, 1, 375],\n    [2, 5, 283],\n    [1, 4, 716],\n    [3, 4, 98],\n    \"0\") == \"0\"\nassert solution([5, 4],\n    [3, 1, 375],\n    [2, 5, 283],\n    [1, 4, 716],\n    [3, 4, 98],\n    \"impossible\") == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"impossible\"\nassert solution(\"10 3 5 10 11\") == \"impossible\"\nassert solution(\"10 4 5 10 15\") == \"impossible\"\nassert solution(\"10 6 5 10 11 5\") == \"impossible\"\nassert solution(\"10 7 5 10 11 5\") == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible'\nassert solution('''5 4\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '5'\nassert solution('''5 10\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == 'impossible'\nassert solution('''10 4\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == 'impossible'\nassert solution('''10 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == 'impossible'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 0') == 'impossible'\nassert solution('5 4') == '1'\n\n'''"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'impossible'\nassert solution('5 2') == '375'\nassert solution('3 1 375') == '375'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('123') == '42.0'"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1.000000000\"\n\nassert solution(\"4\") == \"1.000000000\"\n\nassert solution(\"8\") == \"1.000000000\"\n\nassert solution(\"15\") == \"1.000000000\"\n\nassert solution(\"20\") == \"1.000000000\""
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.5'\nassert solution('5') == '4.50000000000000'\nassert solution('10') == '8.50000000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '1.0'"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('1000') == '1000.000000000'\n\"\"\"\n\n\"\"\"\n\nThe game of Memory is played with $N$ pairs of cards where each pair has the same picture, i.e. there are $N$ different pictures, and each of them appear on exactly two cards.\n\nThe cards are shuffled and placed face down on a large table. On each turn you flip two cards of your choice face up. If they match you remove them from the game, and if they don\u2019t match, you turn them face down. The goal of the game is to remove all cards from the game.\n\nYour strategy is simple:\n - If you know of two face-down cards which have the same picture, choose both of them.\n - Otherwise,\n - Turn a random card that you have not looked at before face up.\n - If it matches a card you have seen, turn the matching card face up (you have excellent memory).\n - If the first card did not match a card you had seen before, turn another random unknown card face up.\n\nGiven this strategy, what is the expected number of turns you have to play in order to finish the game?\n\n\"\"\""
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('10') == '10.000000000'\nassert solution('100') == '100.000000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1.00000000'\n\"\"\""
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1.000000000'\n\"\"\"\n\n\n\nn = int(input())"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '1.20000000'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '2.000000000'\nassert solution('3') == '3.000000000'\nassert solution('4') == '4.000000000'\nassert solution('5') == '5.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5 1 3\\n5 4 1') == '0.5000000000000004'\nassert solution('1\\n4 1 2\\n4 2 3') == '2.000000000000002'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 5') == '5.25'\nassert solution('5 5 5') == '3.75'\nassert solution('10 10 10') == '3.75'\nassert solution('10 9 9') == '4.75'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5 3 10\\n15 99 98\\n40 3 2\\n90 10 9\\n') == '115.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 10') == '115.000000000'\nassert solution('15 99 98') == '131.999999999'"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"100 3 10\n15 99 98\n40 3 2\n90 10 9\n\"\"\") == \"115.000000000\"\nprint(\"solution() finished.\")"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 3 10') == '115.000000000'\nassert solution('100 3 10') == '135.000000000'\nassert solution('100 3 100') == '119.9999999999999'\nassert solution('100 3 1000') == '137.999999999'\nassert solution('100 3 10000') == '113.9999999999997'"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"100 3 10\") == \"115.000000000\"\nassert solution(\"20 4 5\") == \"14.000000000\"\nassert solution(\"30 1 1\") == \"16.000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '110.000000000'\n'''"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3 1 5\\n4 6 7\\n5 2 4 8') == '10.000000000'\nassert solution('5\\n1 2 10\\n2 3 5\\n3 4 9\\n4 5 8\\n5 6 7\\n6 7 2\\n7 5 9\\n7 8 5\\n8 6 5\\n9 7 5\\n9 8 6\\n10 10 3\\n10 8 3') == '15.000000000'\nassert solution('10\\n3 1 5\\n4 6 7\\n5 2 4 8\\n8 9 10\\n9 10 2\\n10 2 3\\n9 6 4\\n9 5 8\\n8 5 1\\n7 6 8\\n6 6 3\\n5 7 8\\n5 8 9\\n9 8 9') == '15.000000000'\nassert solution('100\\n3 1 5\\n4 6 7\\n5 2 4 8\\n8 9 10\\n9 10 2\\n10 2 3\\n9 6 4\\n9 5 8\\n8 5 1\\n7 6 8\\n6 6 3\\n5 7 8\\n5 8 9\\n9 8 9') == '25.000000000'"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.5'\nassert solution('4\\n1 1\\n3 1\\n5 1\\n1 1') == '4.5'"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    2\n    100 1 1\n    100 1 1.5\n    ''') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nassert solution('1\\n1 1.5') == '400'\n\n\"\"\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 1 1\n10 1 1.5\n10 1 1.5\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n10 1 1\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '199.500000'\nassert solution('3') == '199.500000'\nassert solution('10') == '199.500000'\nassert solution('10.000') == '199.500000'\nassert solution('10.000000') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nassert solution('100\\n1 1\\n100\\n1 1.5') == '199.500000'\nassert solution('10\\n10\\n10\\n10.2') == '10.2'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nprint(solution(input()))\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n100 1 1\n100 1 1.5\n''') == '199.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n10 1 1\n10 1 1.5\n3\n12.094999\n''') == '199.500000'\nassert solution('''\n5\n5 1 1\n10 1 1\n3\n12.094999\n''') == '192.5'\nassert solution('''\n4\n10 1 1\n10 1 1.5\n3\n12.094999\n''') == '192.5'\nassert solution('''\n4\n0 1 1\n10 1 1\n3\n12.094999\n''') == '0.001'\nassert solution('''\n10\n10 1 1\n10 1 1.5\n3\n12.094999\n''') == '199.5'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1'\nprint(solution('''\n2 5\n3 3 2 4 3 4 4 4 5 5\n'''))\nprint(solution('''\n2 5\n2 4 1 3 5 4 4 4 4 5 5\n'''))"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 2\n1 2 3 4 5 6 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 7\n1 2 3 4 5 6 7\n\"\"\") == \"0\"\nassert solution(\"\"\"\n100 100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_string) == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''10 3\n1 1 2 2 2 3 2 3 3 3 3 4 4 4 4 4 4 4 5 5 5 5 5 5 6 6 6 6 6 6 6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('3 3') == '3'\nassert solution('3 2') == '3'\nassert solution('10 10') == '1'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1'\n\"\"\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1'\nprint(solution('''\n3 1\n1 2 3\n1\n'''))\nprint(solution('''\n3 1\n1 2 3\n4\n'''))\nprint(solution('''\n3 3\n1 2 3 4\n5\n'''))\nprint(solution('''\n4 4\n1 2 3 4\n5 6 7 8\n9 10 11 12\n'''))\nprint(solution('''\n6 6\n2 3 4 5 6 7 8 9 10 11 12\n13 14 15 16 17 18 19 20 21 22 23\n24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199\n'''))\nprint(solution('''\n7 2\n2 1 2 3 4 5 6 7 8 9 10 11 12\n1 9 10\n1 9 10\n1 8 9\n1 8 9\n1 7 9\n1 7 9\n1 6 8\n1 6 8\n1 5 7\n1 5 7\n1 4 6\n1 4 6\n1 3 5\n1 3 5\n1 2 4\n1 2 4\n1 1 3\n1 1 3\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n1 0 2\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n3 3\n1 2 3 4 5 6 7 8 9 10 11\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1 1') == 'Impossible'\nassert solution('1 2 3 4') == '6'\nassert solution('1 1 1 2 2 2') == '3'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 1 1') == '5'\nassert solution('10 3 4 5') == '10'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Impossible\"\nassert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"3\"\nassert solution(\"15\") == \"5\"\nassert solution(\"95\") == \"5\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3 2 1 1\n''') == '5'\n\nassert solution('''2\n1 2\n''') == 'Impossible'\n\nassert solution('''1\n2 1\n''') == '2'\n\nassert solution('''1\n2 1\n''') == 'Impossible'\n\nassert solution('''7\n3 2 1 1 1 1\n''') == '3'"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n3 2 1 1\n''') == '5'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 1 1\n''') == 'Impossible'\nassert solution('''\n7\n1 1 1 1 1 2\n''') == '1'\nassert solution('''\n10\n3 2 1 1 1 2 1 3 2\n''') == '5'\nassert solution('''\n10\n5 5 5 5 5 5 5 5 5\n''') == '5'\nassert solution('''\n10\n10 10 10 10 10 10 10 10 10\n''') == '10'\n''')"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n3 2 1 1\n''') == 'Impossible'\nassert solution('''\n3\n3 2 1 1\n''') == '5'\n'''\nYou have to find the maximum number of coins you can use to pay the price P.\n\nThe price P is $P$, the number of 1-, 5-, 10- and 25-cent coins in Per\u2019s wallet.\n\n1) When you have only 1-cent coins, you can pay the price P with a single transaction.\n2) When you have only 5-cent coins, you can pay the price P with a single transaction.\n3) When you have only 10-cent coins, you can pay the price P with a single transaction.\n4) When you have only 25-cent coins, you can pay the price P with a single transaction.\n\nYou have these 5 ways to pay the price P.\n\nIf you can pay the price P with just 1 transaction, then return 5.\nIf you can pay the price P with just 5 transactions, then return 5.\nIf you can pay the price P with just 10 transactions, then return 10.\nIf you can pay the price P with just 25 transactions, then return 25.\nIf you can't pay the price P with just any of the above transactions, return Impossible.\n\n'''"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1 1\\n') == 'Impossible'\nassert solution('13\\n3 2 1 1\\n') == '5'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1 1\\n') == '5\\n'\nassert solution('2\\n') == 'Impossible\\n'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''13\n3 2 1 1''') == '5'\nassert solution('''1\n0\n0\n0''') == 'Impossible'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aabcad') == 'yes', 'Sample Test 1'\nassert solution('aba') == 'yes', 'Sample Test 2'\nassert solution('acd') == 'no', 'Sample Test 3'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"yes\"\n\"\"\"\n\ns = stdin.readline().strip()\nprint(any([s[i] < s[i + 1] for i in range(len(s) - 1)]))\nprint(any([s[i] < s[i + 1] for i in range(len(s) - 2)]))"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aabcad\") == \"yes\", 'Should return \"yes\"'\nassert solution(\"aba\") == \"no\", 'Should return \"no\"'\nassert solution(\"acd\") == \"no\", 'Should return \"no\"'"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''aabcad\naba\nacd''') == 'yes'\nassert solution('''aabcab\naba\nacd''') == 'no'\nassert solution('''aabcdd\naba\nacd''') == 'no'\n\n'''\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\n'''\n\nimport sys\n\ns = stdin.readline()\ns1 = stdin.readline()\ns2 = stdin.readline()\n\nprint('yes' if s1 in s[:len(s1)] and s2 in s[len(s1):] else 'no')\n\n'''\nSample Test Case\nSample Output\nyes\n'''\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\naabcad\naba\nacd\n''') == 'yes'\nassert solution('''\na\nc\n''') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aabcad\") == \"yes\", \"Test 1 fail\"\nassert solution(\"aba\") == \"yes\", \"Test 2 fail\"\nassert solution(\"acd\") == \"no\", \"Test 3 fail\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\nassert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"2\"\nassert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"3\"\nassert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"3\"\nassert solution('''\n5 10\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"4\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 10\") == \"5\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 1 1 6\") == \"6\"\nassert solution(\"3 4 7 10\") == \"10\"\nassert solution(\"2 4 3 5\") == \"5\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == \"5\"\nassert solution('5 5 10\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == \"4\"\nassert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n') == \"2\"\nassert solution('4 5 10\\n3 2\\n1 2 4 7\\n') == \"0\"\nassert solution('5 5 10\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == \"1\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\nassert solution('''\n2 2\n3 1\n3 1\n''') == '2'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 5 10\n    3 2\n    1 2 4 7\n    3 1 1 6\n    3 4 7 10\n    2 4 3 5\n    4 2 8 9\n    5''') == '5'\nassert solution('''10\n    10\n    20\n    10\n    10\n    20\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    20\n    10\n    10\n    10\n    10\n    10\n    10\n    20\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    20\n    10\n    10\n    10\n    10\n    10\n    20\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    20''') == '14'\nassert solution('''10\n    10\n    20\n    10\n    10\n    20\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    10\n    20''') == '13'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5 10') == '5'\nassert solution('3 2') == '2'\nassert solution('3 1 1 6') == '1'\nassert solution('3 4 7 10') == '0'\nassert solution('2 4 3 5') == '4'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5 10') == '5'\nassert solution('3 2') == '2'\nassert solution('3 1 1 6') == '3'\nassert solution('3 4 7 10') == '4'\nassert solution('2 4 3 5') == '4'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == \"5\"\nassert solution('10 3\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n1 2\\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\nassert solution('''4 6 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"7\"\nassert solution('''4 4 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"6\"\nassert solution('''4 4 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"10\"\n'''\nfrom itertools import product"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 10') == '5'\nassert solution('3 2') == '0'\nassert solution('3 1 1 6') == '2'\nassert solution('3 4 7 10') == '3'\nassert solution('2 4 3 5') == '1'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4'\nassert solution('4\\n') == '0'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'\nassert solution('''\n5 2\n2 4 same\n3 5 same\n''') == '4'\nassert solution('''\n5 2\n2 4 different\n3 5 different\n''') == '0'\nassert solution('''\n5 2\n2 4 different\n3 5 same\n''') == '3'\n''')\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4'\nassert solution('3 2\\n2 3 same\\n3 4 diff\\n') == '2'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4'\nassert solution('5 2\\n3 5 same\\n') == '1'"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4'\nassert solution('6 2\\n2 5 same\\n3 6 same\\n') == '0'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 same') == '0'\nassert solution('5 2 same') == '4'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"6 4\") == \"3\"\nassert solution(\"7 5\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 4') == '3'\nassert solution('0 1') == '2'\nassert solution('0 2') == '1'\nassert solution('3 4') == '2'\nassert solution('3 5') == '3'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n') == '3'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4\\n0 1\\n0 2\\n3 4\\n3 5') == '3'\nassert solution('10\\n1\\n0 1\\n0 2\\n3 4\\n3 5') == '2'\nassert solution('50\\n10\\n0 1\\n0 2\\n3 4\\n3 5') == '5'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == '3'\nassert solution('6 3\\n1 0\\n2 4\\n0 3\\n5 6') == '4'\nassert solution('5 1\\n4 2\\n3 4\\n5 6\\n6 7') == '0'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n0 1\n0 2\n3 4\n3 5\nSample Output:\n3\n''') == '3', f\"actual: {solution('''\\\n5 2\n0 1\n0 2\n3 4\n3 5\n''')}, expected: 3\"\nassert solution('''\n5 3\n0 1\n0 2\n3 4\n3 5\n''') == '5', f\"actual: {solution('''\\\n5 3\n0 1\n0 2\n3 4\n3 5\n''')}, expected: 5\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == '3'\nassert solution('4 4\\n0 1\\n0 2\\n3 4\\n3 5') == '3'\nassert solution('1 1\\n0 0') == '1'\nassert solution('1 2\\n1 2') == '2'\nassert solution('10 10\\n1 2\\n0 2') == '3'"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n') == '3'\nassert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n6 7\\n') == '2'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([6, 4], [[0, 1], [0, 2], [3, 4], [3, 5]]) == 3"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n\") == \"9.0\\n6.5\\n2.5\"\n\"\"\"\n\n\nn = int(input())"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '9.0'\nassert solution('10') == '6.5'\nassert solution('100') == '2.5'\nassert solution('10.5') == '2.5'\nassert solution('10.5.6') == '2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\") == \"9.0\\n6.5\\n2.5\"\n\nassert solution(\"100\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n65 67\\n65 68\\n65 69\\n65 70\\n65 71\\n65 72\\n65 73\\n65 74\\n65 75\\n65 76\\n65 77\\n65 78\\n65 79\\n65 80\\n65 81\\n65 82\\n65 83\\n65 84\\n65 85\\n65 86\\n65 87\\n65 88\\n65 89\\n65 90\\n65 91\\n65 92\\n65 93\\n65 94\\n65 95\\n65 96\\n65 97\\n65 98\\n65 99\\n65 100\\n\" == solution(\"100\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n65 67\\n65 68\\n65 69\\n65 70\\n65 71\\n65 72\\n65 73\\n65 74\\n65 75\\n65 76\\n65 77\\n65 78\\n65 79\\n65 80\\n65 81\\n65 82\\n65 83\\n65 84\\n65 85\\n65 86\\n65 87\\n65 88\\n65 89\\n65 90\\n65 91\\n65 92\\n65 93\\n65 94\\n65 95\\n65 96\\n65 97\\n65 98\\n65 99\\n65 100\\n\") == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0.5\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"9.0\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4') == '9.0'\nassert solution('2 2') == '6.5'\nassert solution('4 1') == '2.5'\nassert solution('3 5') == '2.5'\nassert solution('5 3') == '2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '9.0'\nassert solution('10') == '13.0'\nassert solution('100') == '26.0'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR\\n') == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3') == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\n\"\"\") == r\"\"\"9.0\n6.5\n2.5\n\"\"\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"9.0\"\nassert solution(\"1 4\") == \"6.5\"\nassert solution(\"4 1\") == \"2.5\"\nassert solution(\"3 5\") == \"2.5\"\nassert solution(\"5 3\") == \"1.0\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '0'\n'''\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 2\nB 1 2\nB 2 3''') == '1'\nassert solution('''3 3 2\nB 1 2\nB 2 3\nR 3 1\nSample Input 2:\n4 2 1\nB 2 1\nB 1 2\nR 3 1\nSample Output 2:\n1\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\") == \"1\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"5 5 2\") == \"0\"\nassert solution(\"5 5 6\") == \"1\"\nassert solution(\"7 7 3\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\n\"\"\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n\nsolution() == \"0\""
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2\\nB 1 2\\nB 2 3\\nR 3 1') == '1'\nassert solution('4 6 5\\n1 2 1\\n1 4 1\\n1 3 2\\n3 1 2\\n2 4 1\\n3 2 2\\n2 3 2\\n3 4 2\\n4 5 2') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 4 2\nB 1 2\nB 2 3\nB 3 4\nR 4 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 5 2\nB 2 1\nB 4 3\nB 5 4\nR 4 2\nR 5 3\nR 6 3\nR 5 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 5 2\nB 1 2\nB 2 3\nB 4 3\nB 5 4\nB 6 4\nB 7 4\nR 4 3\nR 5 3\nR 6 3\nR 5 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3 1\nR 1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 3 1\nR 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n10 3 2\nR 1 2\nB 3 6\nB 2 4\nR 5 1\nR 6 1\nB 7 2\nR 8 1\nB 8 2\nR 9 1\nB 9 2\nR 10 1\nB 10 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 0 5\") == \"88\"\nassert solution(\"7 0 7\") == \"5\"\nassert solution(\"4\") == \"7\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '88'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '88'\nassert solution('4') == '7'\nassert solution('5') == '5'\nassert solution('6') == '7'"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\") == \"88\\n5\\n5\\n7\"\nassert solution(\"3\\n5 0 5\\n7 0 7\\n4\") == \"5\\n5\\n5\\n7\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88\\n5\\n5\\n7\\n'\nassert solution('''3\n3 3 2\n1\n2\n''') == '2\\n2\\n1\\n2\\n'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88'\nprint(solution('''\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n'''))\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88'\nassert solution('''\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88'\nassert solution('''3\n2 2 2\n3 3 3\n2 2 2\n''') == '5'\nassert solution('''3\n1 2 1\n2 3 2\n3 2 3\n''') == '3'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n5 0 5\\n7 0 7\\n4\\n88\\n5\\n6\\n7\\n') == '88\\n5\\n5\\n7\\n'\nassert solution('4\\n10 1 5\\n11 3 2\\n16 7 4\\n13 1 5\\n18 1 1\\n21 2 1\\n24 1 3\\n') == '12\\n18\\n15\\n12\\n'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n5 0 5\n7 0 7\n4\n88\n5\n6\n7\n''') == '88'\n\nassert solution('''1\n1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '5'\nassert solution('''\n5 1 2 3 4\n2\n2 3 2 3\n1 3 2 4\n3 2 2 4\n4 2 2 2\n''') == '-1'\nassert solution('''\n5 1 2 3 4\n2\n3 1 2 4\n3 3 2 4\n3 4 2 4\n''') == '7'\nassert solution('''\n5 1 2 3 4\n2\n3 3 2 3\n3 4 2 4\n3 4 2 4\n''') == '6'\nassert solution('''\n5 1 2 3 4\n2\n1 3 2 4\n1 2 2 4\n2 2 2 4\n1 2 3 3\n3 1 2 4\n3 2 2 4\n''') == '-1'\n'''\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"2 3 1 2\") == \"5\"\nassert solution(\"2 5 1 2 1 3\") == \"7\"\nassert solution(\"2 2 2 2\") == \"4\""
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '5'\n'''\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 2') == '-1'\nassert solution('4 2 3') == '3'\n\"\"\"\nimport math\nfrom typing import List\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('3 3 1 1') == '-1'"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('3 3 1 2') == '5'\nassert solution('4 6 1 2 3') == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '5', 'TEST 1'\nassert solution('''\n2 3 1 2\n1 3 1\n2 3 3\n''') == '-1', 'TEST 2'\nassert solution('''\n1 1 2\n1 1 1\n''') == '3', 'TEST 3'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\") == \"5\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 3 1\") == \"0\"\nassert solution(\"5 2 2\") == \"6\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 1 2') == '-1'\nassert solution('3 3 1 2') == '5'\nassert solution('4 3 1 2') == '5'\nassert solution('4 3 2 1') == '5'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"5\""
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('abcdefghijklmnop') == 'abcdefghijklmnop'\n\n-- Input --\nmirkovC4nizCC44\nC4\n-- Output --\nmirkovniz\n'''"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('mirkovC3q9q8rC') =='mirkovqr'\nassert solution('mirkovC3q9q8rC') =='mirkovqr'\n\"\"\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\nassert solution(\"***24\") == \"24\"\n\"\"\""
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirnoviz\"\n\n## Lecture"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('mirkovC4nizCC44') =='mirknizCC44'\nassert solution('1z2DxABi4') == '1zABi4'\n\n\"\"\"\n\nfrom itertools import chain\nfrom collections import defaultdict"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('dabCc1aB5B') == 'dabCc1aB5B'\nassert solution('abbbbbC') == 'abbbbbC'\nassert solution('dabCc1aB5B') == 'dabCc1aB5B'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('mirko6z') =='mirko6z'\nassert solution('mirko12ab') =='mirko12ab'\nassert solution('mirko12z') =='mirko12z'\nassert solution('mirko1z') =='mirko1z'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz','sample'\nassert solution('mirkovC4nizCC44') == 'FRULA', 'other'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''mirkovC4nizCC44''') =='mirkovniz'\n\nassert solution('''mirkovC4nizCC44''') =='mirkovniz'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''mirkovC4nizCC44''') =='mirkniz'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'\n\nassert solution('''\n1\n3 65\n3 45\n1 60\n''') == '37'\n\nassert solution('''\n2\n4 1\n7 6\n''') == '13'\n\nassert solution('''\n2\n10 5\n5 1\n''') == '16'\n\nassert solution('''\n10\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 65\n45 10\n60 25\n''') == '32'\n\nassert solution('''5\n1 2\n1 5\n2 4\n3 6\n4 7\n''') == '11'\n\nassert solution('''3\n1 2\n2 3\n2 1\n''') == '5'\n\nprint('Congratulations, have fun!')"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n30 30\n60 10\n''') == '32'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'\nassert solution('''\n2\n10 20\n20 30\n''') == '0'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3 65\\n45 10\\n60 25') == '32'\nassert solution('2\\n4 45\\n6 60\\n20 25\\n50 10\\n70 7\\n30 80\\n7 60\\n50 15\\n70 25\\n10 50\\n15 20') == '50'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"32\""
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '9'\nassert solution('5\\n4 3\\n1 2\\n2 4\\n4 3\\n5 2') == '10'\nassert solution('10\\n14 9\\n5 5\\n4 1\\n2 2\\n8 2\\n8 4\\n1 2\\n1 4\\n1 5\\n2 2\\n3 4\\n1 4\\n2 3\\n1 4\\n1 5\\n2 3\\n2 3') == '20'\nassert solution('3\\n4 5\\n5 6\\n6 5') == '0'\n\n'''"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n3 65\\n45 10\\n60 25\") == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n5\n3 65\n45 10\n60 25\n10 3\n10 10\n10 7\n10 5\n10 2\n\"\"\"\n    ) == \"32\"\n\nassert solution(\n    \"\"\"\n5\n2 6\n3 5\n4 7\n5 2\n\"\"\"\n    ) == \"16\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 2 3 2 3') == '4'\nassert solution('4\\n1 2 3 1 2 3') == '4'\nassert solution('4\\n1 2 3 2 3') == '4'\nassert solution('8\\n1 2 3 1 2 3 2 3') == '3'\nassert solution('2\\n1') == '1'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3 2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 0 3 1\n''') == '1 2 3 1'\nassert solution('''4\n1 2 3 2\n''') == '3'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2 0 3 1') == '3'\nassert solution('10\\n-9 9 -7 6 -5 4 -3 2 1') == '2'\nprint('solution = ok')\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1\n1 2 0 3 1\n\"\"\") == \"3\"\nprint(solution(input()))"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3\\n0 1\\n0 3\\n3 1') == '2\\n3'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 0 3 1') == '3'\nassert solution('5') == '2'\nassert solution('4') == '0'\nassert solution('5') == '3'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3 2'\nassert solution('5\\n1 2 0 3 1\\n2 3 4 5') == '3 2'\nassert solution('5\\n1 2 0 3 1\\n0 2 3 4 5') == '4'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 0 3 1\\n3 2') == '2'\nassert solution('4\\n1 2 0 3 1\\n2 3') == '2'\nassert solution('4\\n1 2 0 3 1\\n3 2\\n1 3') == '3'\nassert solution('4\\n1 2 0 3 1\\n2 3\\n1 3') == '2'\nassert solution('4\\n1 2 0 3 1\\n2 3\\n2 1') == '1'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '1'\nassert solution('1000000000 1000000000\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '9999999999'\nassert solution('8 6 5\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n+ 1 5\\n- 1 6\\n+ 1 7\\n- 1 8') == '26'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"1\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 4\") == \"2\"\nassert solution(\"1 2 4\") == \"3\"\n\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n938. Range Sum of BST\n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\nThe problem can be solved using the inorder traversal of the tree.\n\nWe would like to calculate the sum of all nodes in a Binary Search Tree.\n\nTo calculate the sum of nodes in a Binary Tree, we first calculate the sum of the left subtree of a node.\nThen we calculate the sum of the right subtree of the node.\nThen we add the sum of the node to the result.\nAt each level we add the sum of the left and right subtree to the result.\n\nIf the left or right subtree does not exist, then we take the root node and calculate its sum.\nIf neither the left or right subtree exist, return 0.\n\nLet's first write the code to get the sum of all nodes in a BST."
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n') == '2'\nassert solution('6 6 6\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n- 1 5\\n+ 1 6\\n+ 2 1\\n- 2 2\\n+ 2 3\\n- 2 4\\n+ 2 5\\n+ 2 6\\n- 3 1\\n+ 3 2\\n- 3 3\\n+ 3 4\\n- 3 5\\n+ 3 6\\n') == '9'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n+ 1 1\n+ 1 2\n- 1 3\n''') == '1'\nassert solution('''\n3 1\n+ 1 1\n+ 1 2\n+ 1 3\n- 1 4\n- 1 5\n- 1 6\n''') == '4'\nassert solution('''\n10 10\n+ 1 1\n+ 1 2\n+ 1 3\n+ 1 4\n+ 1 5\n+ 1 6\n+ 1 7\n- 1 8\n- 1 9\n- 1 10\n''') == '1'\nassert solution('''\n1 1\n+ 1 1\n+ 1 2\n+ 1 3\n+ 1 4\n+ 1 5\n+ 1 6\n+ 1 7\n+ 1 8\n- 1 9\n''') == '2'\nassert solution('''\n2 2\n+ 1 1\n+ 1 2\n- 1 3\n- 1 4\n- 1 5\n+ 1 6\n+ 1 7\n+ 1 8\n- 1 9\n- 1 10\n''') == '3'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '1'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n''') == '8'\n\nassert solution('''\n3 3 3\n+ - - -\n+ - - -\n+ - - -\n''') == '11'\n\nassert solution('''\n3 3 3\n+ - - -\n- + - -\n+ - - -\n''') == '5'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n+ 2 2\") == \"2\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n+ 2 2\\n- 3 3\") == \"0\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n+ 2 2\\n+ 3 3\\n+ 4 4\") == \"0\"\nassert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\\n+ 2 2\\n+ 3 3\\n+ 4 4\\n+ 5 5\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    2 4 4\n    + 1 1\n    - 1 2\n    + 1 3\n    - 1 4\n    \"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n''') == '6'\nassert solution('''\n2 3 3\n+ 1 1\n+ 1 2\n- 1 3\n''') == '6'\nassert solution('''\n2 4 5\n+ 1 1\n+ 1 2\n- 1 3\n+ 1 4\n+ 1 5\n- 1 6\n- 1 7\n+ 1 8\n''') == '0'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000000000 0\\n1000000000 1') == '500000004'\nassert solution('5000000000 1000000 1') == '0'\nassert solution('5000000000 1 1') == '1'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n1') == \"500000004\"\n\"\"\"\n\nfrom fractions import gcd\nimport math\nimport re"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n100\n100\n''') == '500000004', 'First Test Case'\nassert solution('''\n2\n1000000000 1\n1000000000 100\n''') == '500000004', 'Second Test Case'\nassert solution('''\n3\n1000000000 1\n1000000000 100\n10000000001\n''') == '500000004', 'Third Test Case'\nassert solution('''\n4\n1000000000 1\n1000000000 100\n10000000001\n1000000000 0\n''') == '500000004', 'Fourth Test Case'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1000000000 0\n1000000000 1\n''') == '500000004'\nassert solution('''\n5\n1000000000 1\n1000000000 0\n1000000000 1\n1000000000 0\n1000000000 1\n''') == '8'\nassert solution('''\n5\n1000000000 1\n1000000000 0\n1000000000 1\n1000000000 0\n1000000000 1\n''') == '500000004'\nassert solution('''\n5\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n''') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n0 1\\n') == '0.5'\n\"\"\""
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000000000 0') == '500000004'\nassert solution('1000000000 1') == '40000000000'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000000000 0\\n1000000000 1') == '500000004'\nassert solution('2\\n1000000000 1\\n1000000000 0') == '500000004'\nassert solution('1000000001 1000000001\\n1000000001 1000000001') == '9'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0.05'\nassert solution('1000000000 0') == '0.05'\nassert solution('1000000000 1') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000000000 0\\n1000000000 1\\n') == '500000004'\nassert solution('1000000001 0\\n1000000001 1\\n') == '100'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 3 13 27\\n3 5 23 24') == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 3 13 27\\n3 5 23 24\") == \"12\"\nassert solution(\"6 3\\n1 2 3 4 5 6\\n1 3 2 4 5 6\\n1 2 3 5 6\\n1 3 2 5 6\\n1 2 3 6 5\\n1 2 3 6 5\\n1 3 2 5 6\") == \"13\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 8') == '12'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\") == \"12\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 8\") == \"12\"\nassert solution(\"3 2\") == \"1\"\n\"\"\""
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 3 13 27\n3 5 23 24\n''') == '12'"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 8\") == \"12\"\nassert solution(\"5 10\") == \"18\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 3 13 27\\n3 5 23 24') == '12'\nassert solution('5\\n100\\n3\\n5\\n3\\n10\\n4\\n2\\n1\\n4\\n20\\n27\\n') == '1'\nprint(solution(input()))\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 2 4\") == \"12\"\nassert solution(\"1 2 2 3\") == \"1\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\n  \"3\",\n  \"1 2 1 10\",\n  \"2 4 11 16\",\n  \"2 1 9 12\",\n  \"3 5 28 100\",\n  \"1 2 3 8\",\n  \"4 3 20 21\",\n  \"1 3 13 27\",\n  \"3 5 23 24\",\n]) == \"12\""
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n    3\n    15 5 3\n    12 4 4\n    20 10 5\n    \"\"\"\n) == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n15 5 3\n12 4 4\n''') == '3'\nassert solution('''\n3\n15 5 3\n12 4 4\n20 10 5\n''') == '4'\nassert solution('''\n1\n3 2\n4 6\n8 7\n''') == '0'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 1\n5 2 4\n5 1\n1 2 4\n1 1 2\n2 2 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1\n1 5\n1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 3\n4 2 3\n4 2 1\n4 1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n8 5\n8 3 4 1\n8 5 4 1\n8 3 1 4\n8 2 4 1\n8 1 2 4\n8 1 1 2\n8 2 1 1\n8 1 1 1\n\"\"\") == \"3\""
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n15 5 3\n12 4 4\n20 10 5''') == '3'\nassert solution('''6\n15 5 3\n12 4 4\n20 10 5\n7 8 5\n10 9 6\n11 12 3\n5 8 4\n10 10 6\n4 12 3''') == '5'\nassert solution('''5\n12 1 1\n10 3 1\n4 5 1\n11 5 1\n8 11 1\n7 4 1\n3 7 1''') == '1'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == \"3\""
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n10\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n10 5 3\n12 4 4\n20 10 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n12\n12 4 4\n12 4 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n10 10 3\n12 4 4\n20 10 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n20\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n7\n2 2 1\n3 2 2\n4 5 3\n4 6 3\n6 7 5\n3 6 3\n5 7 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n10\n1 3 10\n10 1 5\n10 1 2\n5 1 5\n5 1 3\n5 1 6\n2 1 6\n2 1 5\n2 1 3\n3 1 4\n3 1 3\n3 1 4\n4 1 4\n4 1 3\n4 1 2\n5 1 2\n5 1 4\n5 1 3\n5 1 4\n5 1 2\n5 1 3\n5 1 2\n5 1 3\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 3\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6 1 5\n6 1 6\n6 1 2\n6 1 3\n6 1 4\n6"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 3\n1 1 4\n''') == '1'\nassert solution('''\n3 20\n15 5 3\n12 4 4\n20 10 5\n''') == '3'\n'''"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 19\n15 5 3\n12 4 4\n20 10 5\n''') == '3'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n1 2\n''') == '1'\nassert solution('''\n2 1\n1 2\n''') == '2'\nassert solution('''\n10 1\n1 1\n1 2\n1 3\n1 4\n2 2\n2 4\n3 2\n3 4\n4 1\n4 2\n4 3\n4 4\n''') == '6'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 1\n2 1\n''') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('3 3') == '2'\nassert solution('5 5') == '8'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n2 1') == '2'\nassert solution('5\\n5 1') == '1'\nassert solution('10\\n10 1') == '10'"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n1 1\\n1 2') == '2'\nassert solution('3\\n1 1\\n1 2\\n1 3') == '3'\nassert solution('4\\n1 1\\n1 2\\n1 3\\n1 4') == '3'\nassert solution('5\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5') == '4'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\n\nassert solution('2') == '2'\n\nassert solution('3') == '2'\n\nassert solution('4') == '4'\n\nassert solution('5') == '4'"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n1 2\n2 1''') == '1'\n\nassert solution('''1 2\n1 1\n1 2''') == '2'\n\nassert solution('''3 1\n1 1\n2 1''') == '4'\n\nassert solution('''2 1\n1 1\n1 2''') == '1'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RGRG') == '1'\nassert solution('GRGR') == '2'\nassert solution('BYBY') == '3'\nassert solution('YRYR') == '3'"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('RGRG') == '2'\nassert solution('RGBG') == '3'\nassert solution('BBBY') == '5'\nassert solution('YRYR') == '4'"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''RGGR\nGBGB\nBYBY\nYRYR''') == '3'\nassert solution('''RGGB\nGBGB\nBYBY\nYRYR''') == '3'\n'''"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('RGGR') == '1'\nassert solution('GBGB') == '2'\nassert solution('BYBY') == '3'\nassert solution('YRYR') == '4'\n\"\"\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RGGR') == '3'\nassert solution('GBGB') == '2'\nassert solution('BYBY') == '5'\nassert solution('YRYR') == '4'\n\n---------------------------------------------------\nAssumption: It is not possible to go from a cell back to itself.\n\n#####   Solution1   #####"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''RGR\nGBGB\nBYBY\nYRYR''') == '3'\nassert solution('''RGR\nGBGB\nBYBY\nYRYR''') == '3'\nassert solution('''RGR\nGBGB\nBYBY\nYRYR''') == '3'\nassert solution('''RGR\nGBGB\nBYBY\nYRYR''') == '3'\nassert solution('''RGR\nGBGB\nBYBY\nYRYR''') == '3'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RGBGR\") == \"3\"\nassert solution(\"GGBRG\") == \"2\"\nassert solution(\"YRYB\") == \"3\"\nassert solution(\"RBYB\") == \"2\"\nassert solution(\"GBRG\") == \"2\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\nRGGR\nGBGB\nBYBY\nYRYR\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\nR\nG\nB\nY\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\nR\nG\nB\nY\nR\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\nR\nG\nB\nY\nR\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\nR\nG\nB\nY\nR\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RRRGGBBYYRBGYYYBGYBGGR\") == \"4\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"RGGR\"\n) == \"3\"\nassert solution(\n    \"GBGB\"\n) == \"3\"\nassert solution(\n    \"BYBY\"\n) == \"4\"\nassert solution(\n    \"YRYR\"\n) == \"3\"\n\"\"\"\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAAAA'\nassert solution('''\n5\n0 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAA'\nassert solution('''\n5\n0 1 0 -1 -2\n2 1 0 -1 -2\n''') == 'AAA'\nassert solution('''\n5\n0 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAAAA'\n\nassert solution('''\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'BBBBB'\n\nassert solution('''\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAABB'\n\nassert solution('''\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAABB'\n\nassert solution('''\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'BBBBB'"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\n-1 2\\n2 1\\n-1 -2\\n3 4\\n4 3\\n-2 -1\\n5 6\\n6 5\\n-3 -4\\n7 8\\n8 7\\n-4 -3\\n9 10\\n10 9\\n-5 -6\\n11 12\\n12 11\\n-6 -5\\n13 14\\n14 13\\n-7 -8\\n15 16\\n16 15\\n-8 -7\\n17 18\\n18 17\\n-9 -10\\n19 20\\n20 19\\n-10 -9\\n21 22\\n22 21\\n-11 -12\\n23 24\\n24 23\\n-12 -11\\n25 26\\n26 25\\n-13 -14\\n27 28\\n28 27\\n-14 -13\\n29 30\\n30 29\\n-15 -16\\n31 32\\n32 31\\n-16 -15\\n33 34\\n34 33\\n-17 -18\\n35 36\\n36 35\\n-18 -17\\n37 38\\n38 37\\n-19 -20\\n39 40\\n40 39\\n-20 -19\"\n) == \"AAAAA\":\n    print(\"TEST CASE A PASSED\")\n\nassert solution(\n    \"6\\n-6 7\\n7 -6\\n-7 -6\\n8 -7\\n7 8\\n-5 -4\\n9 -10\\n10 9\\n-4 -3\\n11 12\\n12 11\\n-3 -2\\n13 14\\n14 13\\n-2 -1\\n15 16\\n16 15\\n-1 -2\\n17 18\\n18 17\\n-2 -1\\n19 20\\n20 19\\n-1 -2\\n21 22\\n22 21\\n-2 -1\\n23 24\\n24 23\\n-1 -2\\n25 26\\n26 25\\n-2 -1\\n27 28\\n28 27\\n-1 -2\\n29 30\\n30 29\\n-2 -1\\n31 32\\n32 31\\n-1 -2\\n33 34\\n34 33\\n-2 -1\\n35 36\\n36 35\\n-2 -1\\n37 38\\n38 37\\n-1 -2\\n39 40\\n40 39\\n-2 -1\\n41 42\\n42 41\\n-1 -2\\n43 44\\n44 43\\n-1 -2\\n45 46\\n46 45\\n-1 -2\\n47 48\\n48 47\\n-2 -1\\n49 50\\n50 49\\n-1 -2\\n51 52\\n52 51\\n-2 -1\\n53 54\\n54 53\\n-1 -2\\n55 56\\n56 55\\n-2 -1\\n57 58\\n58 57\\n-1 -2\\n59 60\\n60 59\\n-2 -1\\n61 62\\n62 61\\n-1 -2\\n63 64\\n64 63\\n-2 -1\\n65 66\\n66 65\\n-1 -2\\n67 68\\n68 67\\n-2 -1\\n69 70\\n70 69\\n-1 -2\\n71 72\\n72 71\\n-2 -1\\n73 74\\n74 73\\n-1 -2\\n75 76\\n76 75\\n-1 -2\\n77 78\\n78 77\\n-2 -1\\n79 80\\n80 79\\n-1 -2\\n81 82\\n82 81\\n-2 -1\\n83 84\\n84 83\\n-1 -2\\n85 86\\n86 85\\n-2 -1\\n87 88\\n88 87\\n-1 -2\\n89 90\\n90 89\\n-2 -1\\n91 92\\n92 91\\n-1 -2\\n93 94\\n94 93\\n-2 -1\\n95 96\\n96 95\\n-1 -2\\n97 98\\n98 97\\n-2 -1\\n99 100\\n100 99\\n-2 -1\\n101 102\\n102 101\\n-1 -2\\n103 104\\n104 103\\n-2 -1\\n105 106\\n106 105\\n-1 -2\\n107 108\\n108 107\\n-2 -1\\n109 110\\n110 109\\n-1 -2\\n111 112\\n112 111\\n-2 -1\\n113 114\\n114 113\\n-1 -2\\n115 116\\n116 115\\n-2 -1\\n117 118\\n118 117\\n-1 -2\\n119 120\\n120 119\\n-2 -1\\n121 122\\n122 121\\n-1 -2\\n123 124\\n124 123\\n-2 -1\\n125 126\\n126 125\\n-1 -2\\n127 128\\n128 127\\n-2 -1\\n129 130\\n130 129\\n-1 -2\\n131 132\\n132 131\\n-2 -1\\n133 134\\n134 133\\n-1 -2\\n135 136\\n136 135\\n-2 -1\\n137 138\\n138 137\\n-1 -2\\n139 140\\n140 139\\n-1 -2\\n141 142\\n142 141\\n-2 -1\\n143 144\\n144 143\\n-1 -2\\n145 146\\n146 145\\n-1 -2\\n147 148\\n148 147\\n-2 -1\\n149 150\\n150 149\\n-1 -2\\n151 152\\n152 151\\n-2 -1\\n153 154\\n154 153\\n-1 -2\\n155 156\\n156 155\\n-2 -1\\n157 158\\n158 157\\n-1 -2\\n159 160\\n160 159\\n-2 -1\\n161 162\\n162 161\\n-1 -2\\n163 164\\n164 163\\n-1 -2\\n165 166\\n166 165\\n-1 -2\\n167 168\\n168 167\\n-2 -1\\n169 170\\n170 169\\n-1 -2\\n171 172\\n172 171\\n-1 -2\\n173 174\\n174 173\\n-1 -2\\n175 176\\n176 175\\n-2 -1\\n177"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == 'AAAAA'\nassert solution('''5\n-2 -1 0 1 2\n2 2 0 -1 -2''') == 'BAAA'\nassert solution('''5\n-2 -1 0 1 2\n2 3 0 -1 -2''') == 'AABB'\nassert solution('''5\n-2 -1 0 1 2\n2 3 1 -1 -2''') == 'AAAB'\nassert solution('''5\n-2 -1 0 1 2\n2 3 1 2 -2''') == 'AAAB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"A\"\nassert solution(\"3\") == \"AABB\"\nassert solution(\"2\") == \"ABBB\""
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5,-2,-1,0,1,2]) == \"AAAAA\"\nprint(solution([5,-2,-1,0,1,2]))\n\"\"\""
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"AAAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'AAAAA'\nassert solution('5') == 'ABABA'\nassert solution('3') == 'AAAB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAABA'\nassert solution('''\n10\n3 6 7 9 5 -1\n4 1 -2 -3 4\n''') == 'AABAA'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\nassert solution(\"10\\n10\\n5 5\\n3 6\") == \"5\"\nassert solution(\"3 4\\n0 0\\n1 1\\n2 1\") == \"4\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n0 1\\n5 0\\n1 2\\n3 3\\n') == \"IMPOSSIBLE\"\nassert solution('4 3\\n0 1\\n4 0\\n1 3\\n') == \"1\"\nassert solution('4 3\\n0 1\\n3 0\\n1 4\\n') == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n2 3\n4 0\n0 2\n6 1\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n6 3\n2 3\n4 0\n0 2\n6 1\n''') == '2'\n\nassert solution('''\n7 5\n1 3\n1 4\n4 2\n0 2\n0 1\n0 3\n''') == '3'\n\nassert solution('''\n8 8\n1 3\n3 1\n5 2\n6 4\n2 4\n4 2\n''') == '10'\n\nassert solution('''\n8 9\n1 4\n0 1\n0 2\n3 4\n2 4\n4 4\n''') == '10'"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"IMPOSSIBLE\"\nassert solution(\"6 3\") == \"1\"\nassert solution(\"6 1\") == \"0\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n6 3\n2 3\n4 0\n0 2\n6 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n6 3\n1 2\n0 2\n1 3\n6 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n6 3\n2 3\n4 0\n0 2\n6 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n6 3\n4 4\n0 0\n0 1\n3 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1 1\n1 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4 4\n0 0\n1 3\n0 0\n\"\"\") == \"1\""
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"IMPOSSIBLE\"\n\n__name__ == \"__main__\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'IMPOSSIBLE'"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n\"\"\") == \"\"\"12\n4\n11\n3\n2\n\"\"\".strip()\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\n\" + \n                \"austria\\n\" + \n                \"autocorrect\\n\" + \n                \"program\\n\" + \n                \"programming\\n\" + \n                \"computer\\n\" + \n                \"autocorrelation\\n\" + \n                \"programming\\n\" + \n                \"competition\") == \"12\\n4\\n11\\n3\\n2\"\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(100000)"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria') == '12\\n4\\n11\\n3\\n2\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '''\n12\n4\n11\n3\n2\n'''\n\nimport math"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''austria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx''') == '12'"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '12'\nassert solution('''\n3 3\naustria\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '3'\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '7'\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '8'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '12'\n\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '4'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"austria\\n\"\n    \"autocorrect\\n\"\n    \"program\\n\"\n    \"programming\\n\"\n    \"computer\\n\"\n    \"autocorrelation\\n\"\n    \"programming\\n\"\n    \"competition\\n\"\n    \"zyx\\n\"\n    \"austria\\n\"\n) == \"12\\n\" * 2 + \"4\\n\" * 3 + \"11\\n\" * 2 + \"3\\n\" * 2 + \"2\\n\" * 2\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '12'\n\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '4'\n\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '11'\n\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '3'\n\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '2'"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\") == \"12\"\nassert solution(\"2 2\") == \"6\"\nassert solution(\"10 4\") == \"12\"\nassert solution(\"5 5\") == \"12\"\nassert solution(\"1 1\") == \"3\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 1\\n') == '2'\nassert solution('2\\n1 1 1\\n') == '3'\nassert solution('5\\n3 1 1 1 1\\n') == '2'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 1\\n\") == \"3\"\nassert solution(\"3\\n0 2\\n2 3\\n\") == \"1\"\nassert solution(\"3\\n0 1\\n1 2\\n2 3\\n\") == \"3\"\nassert solution(\"3\\n0 1\\n1 2\\n2 3\\n\") == \"1\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n0 1 1\") == \"3\"\nassert solution(\"4\\n0 2 1 1\\n3 1 1 1\") == \"4\"\nassert solution(\"2\\n0 1 1\") == \"2\"\nassert solution(\"3\\n0 1 1\") == \"impossible\"\nassert solution(\"3\\n1 1 1\") == \"impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 1\\n') == '3'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n0 0\n''') == '3'\nassert solution('''\n4\n1 0 1 1\n''') == '2'\nassert solution('''\n3\n0 1 0\n''') == '3'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 1 1\nSample Input:\n4\n3 4\nSample Output:\n5\n''') == '5'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3, 0, 1, 1]) == \"3\", \"First\"\nassert solution([3, 1, 0]) == \"3\", \"Second\"\nassert solution([3, 0, 0, 1, 1, 1]) == \"4\", \"Third\"\nassert solution([3, 1, 1]) == \"4\", \"Fourth\"\nassert solution([3, 1, 1, 0, 1]) == \"4\", \"Fifth\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n2 3 4\") == \"4\"\nassert solution(\"2\\n3 1 2\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"3\"\nassert solution(\"3\\n1 2 3 4\") == \"4\"\nassert solution(\"4\\n1 2 3 4\") == \"3\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '2'\nassert solution('3') == 'impossible'\nassert solution('4') == 'impossible'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('HFBBIGEDCJABIGEDCJFAH') == 'Pre In Post In Pre'\nassert solution('HFBBIGEDCJABIGEDCJFAH') == 'HFBJCDEGIA'\nassert solution('HFBBIGEDCJABIGEDCJFAH') == 'BIGEDCJFAH'\nassert solution('HFBBIGEDCJABIGEDCJFAH') == 'HFBJCDEGIA'\n\nSample Input:\nHBDHBCDCDEDCBA\nBDEDCBAHCDEDCBDH\nHBDHBCDCDEDCBA\nSample Output:\nPre Post In Post In Pre\nDEDCBDHCDEDCBA\nEDCBDCDCDEDCBAH\nHBDHBCDCDEDCBA\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"HFIJKMNTRQZ\") == \"HIBJKCENQRZ\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('HFBIGEDCJA') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('HFBIGEDCJA') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"DFKBHJA\") == \"Pre In Post In Pre\"\n\n\"\"\"\n\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.left = None\n        self.right = None\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre In In Post In Pre'\nassert solution('BIGEDCJFAH') == 'Pre In In Post In Pre'\nassert solution('BIGEDCJFAH') == 'Pre In In Post In Pre'\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"HFIEGDEJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGIEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre Post In Post In Pre\""
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('HFBIGEDCJA') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'\nassert solution('BIGEDCJFAH') == 'IGEDCJBAFH'\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre In Post In Pre Pre In Post'"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"2\\n10 0\") == \"10\"\nassert solution(\"2\\n10 0\\n3 1 1\") == \"11\"\nassert solution(\"2\\n5 1 0\\n3 1 2 1\") == \"8\"\nassert solution(\"2\\n5 1 0\\n3 1 2 1\\n4 1 2 0\") == \"10\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1 1\n1\n3 1 1\n1\n3 1 1\n''') == '10'\nassert solution('''2\n2\n1\n''') == '3'\nassert solution('''10\n3 1 1\n1\n3 1 1\n1\n3 1 1\n''') == '6'\nassert solution('''12\n1\n1\n3 1 1\n3 1 1\n1\n3 1 1\n1\n3 1 1\n1\n3 1 1\n''') == '22'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"7\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '10'\nassert solution('1') == '1'\nassert solution('4') == '5'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '10'\nassert solution('2') == '10'\nassert solution('2') == '10'\nassert solution('2') == '10'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"10\"\nassert solution(\"2\") == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '11'\n\"\"\"\n\nimport sys\nimport itertools"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0\\n') == '10'\nassert solution('4\\n2\\n3 1 1\\n1\\n4 1 0\\n') == '8'\nprint('all tests passed')\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '10'\nassert solution('5') == '16'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''1\n0 0 100 100\n''') == '1000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '10000.00'\nassert solution('1') == '1000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0 100 100\\n30 30 60 60\\n') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''1\n0 0 100 100''') == '0.00'\nassert solution('''0\n0 0 100 100''') == '0.00'\n\nSample Input:\n2\n0 0 100 100\n10 10 100 100\nSample Output:\n400000.00''') == '400000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n0 0 100 100\n30 30 60 60''') == '10000.00'\nassert solution('''3\n0 0 100 100\n30 30 60 60\n30 30 60 60''') == '10000.00'\nassert solution('''10\n0 0 100 100\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60\n30 30 60 60''') == '40000.00'\nassert solution('''1\n0 0 100 100\n''') == '100.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2 2 3 4\") == \"5\"\nassert solution(\"4\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0 100 100\\n30 30 60 60\\n\") == \"10000.00\"\nprint(solution(\"3\\n-10 10 100 100\\n100 100 100 100\\n-10 -10 100 100\\n-100 -100 100 100\\n-10 -100 100 100\\n\"))"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 2.5 3.5\\n1 1.5 2.5\\n') == '10000.00'\nassert solution('3\\n1 2 2.5\\n2 3 2.5\\n') == '7000.00'\nassert solution('3\\n0 0 100 100\\n30 30 60 60\\n') == '10000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n0 0 100 100\n1.2 0.3 0.4 0.5\n''') == '4000000.00'\nassert solution('''2\n1.2 1.3 1.4 1.5\n2.2 2.3 2.4 2.5\n3.2 3.3 3.4 3.5\n''') == '7733600.00'\nassert solution('''3\n1.2 1.3 1.4 1.5\n2.2 2.3 2.4 2.5\n3.2 3.3 3.4 3.5\n''') == '1388900.00'\nassert solution('''4\n1.2 1.3 1.4 1.5\n2.2 2.3 2.4 2.5\n3.2 3.3 3.4 3.5\n4.2 4.3 4.4 4.5\n''') == '2040000.00'\nassert solution('''5\n1.2 1.3 1.4 1.5\n2.2 2.3 2.4 2.5\n3.2 3.3 3.4 3.5\n4.2 4.3 4.4 4.5\n5.2 5.3 5.4 5.5\n''') == '2505000.00'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"1 3\") == \"4\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"2 4\") == \"2\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 1\n2 3\n3 4\n3 5\n3 6\n''') == '5'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '5'\nassert solution('10 2') == '9'\nassert solution('1 100') == '99999'"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n1 3\\n2 4\\n3 4\") == \"5\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n1 3\\n2 4\\n3 4\\n4 5\") == \"7\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n1 3\\n2 4\\n3 4\\n4 5\\n5 5\") == \"7\"\nassert solution(\"5 3\\n1 3\\n4 5\\n2 4\\n1 3\\n2 4\\n3 4\\n4 5\\n5 5\\n6 6\") == \"10\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1', \"Wrong\"\nassert solution('2 2') == '2', \"Wrong\"\nassert solution('5 3') == '0', \"Wrong\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 3\n4 5\n2 4\n''') == '5'\n\nassert solution('''\n3 4\n1 3\n4 5\n2 4\n''') == '6'\n\nassert solution('''\n1 2\n1 2\n1 2\n''') == '6'\n\nassert solution('''\n1 2\n1 3\n1 4\n''') == '1'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3') == '1'\nassert solution('4\\n5') == '2'\nassert solution('2\\n4') == '1'\nassert solution('3\\n5') == '2'\nassert solution('4\\n4') == '2'\nprint(solution(*[*map(int, input().split())]))"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3\n4 5\n2 4''') == '2'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 3\n4 5\n2 4\n''') == '5'\nassert solution('''\n1 3\n1 2\n''') == '3'\nassert solution('''\n1 2\n2 2\n''') == '2'\nassert solution('''\n1 2\n1 1\n''') == '1'\nassert solution('''\n1 3\n2 3\n''') == '3'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n11 13 17\n5 2 4\n0 0 0\n''') == '2095'\nassert solution('''\n17 10 17\n17 2 6\n0 0 0\n''') == '1555'\nassert solution('''\n17 12 17\n2 1 9\n0 0 0\n''') == '1555'\nassert solution('''\n10 10 13\n1 2 7\n0 0 0\n''') == '1045'\nassert solution('''\n8 6 8\n1 2 2\n0 0 0\n''') == '1045'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n11 13 17\n5 2 4\n0 0 0\n''') == '2095'\nassert solution('''\n17 13 11\n4 3 5\n0 0 0\n''') == '2095'\nassert solution('''\n17 13 11\n5 2 4\n0 0 0\n''') == '2095'\nassert solution('''\n17 13 11\n3 2 3\n0 0 0\n''') == '2095'\nassert solution('''\n17 13 11\n5 3 3\n0 0 0\n''') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2095'\nassert solution([11, 13, 17]) == '2095'\nassert solution([5, 2, 4]) == '2095'\nassert solution([0, 0, 0]) == '2095'"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 13 17') == '2095'\nassert solution('5 2 4') == '2095'\nassert solution('0 0 0') == '2095'"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11 13 17\\n5 2 4\\n0 0 0\") == \"2095\"\nassert solution(\"4 3 2\\n8 5 4\\n1 2 3\") == \"2097\""
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"11 13 17\") == \"2095\"\nassert solution(\"13 17 11\") == \"2095\"\nassert solution(\"17 11 13\") == \"2095\"\nassert solution(\"13 17 11 0\") == \"4199\"\nassert solution(\"17 11 13 0 1\") == \"4198\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 6 3') == '5'\nassert solution('1 2 3') == '1'\nassert solution('1 1 2') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 13 17') == \"2095\""
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print(c); print(`My name is ${b}`); end.\") == \"My name is Gon\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print(c); print(`My name is ${b}`); end.end\") == \"My name is Gon\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print(c); print(`My name is ${b}`); end.end.end\") == \"My name is Gon\"\nassert solution(\"print(`My name is ${a}`); print(`My name is ${b}`); end.end.end\") == \"My name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == '''My name is Gon\nMy name is Gon'''\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint `My name is ${a}`;\nend.\n''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint `My name is ${c}`;\nend.\n''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${c}`;\nprint `My name is ${a}`;\nend.\n''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint `My name is ${c}`;\nprint `My name is ${a}`;\nend.\n''') == 'My name is Gon'"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nprint `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon\\n'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint `My name is ${c}`;\nend.\n''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint `My name is ${c}`;\nprint `My name is ${c}`;\nend.\n''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nprint `My name is ${c}`;\nprint `My name is ${c}`;\nend.\n''') == 'My name is Gon'"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''print `My name is ${a}`;\nprint `My name is ${a}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''print `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''print `My name is ${b}`;\nprint `My name is ${b}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${a}`;\nend.\n''') == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n7 8\n10\nSample Output:\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n''') == 'discard 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\n7 8\\n10\"\n    ) == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\"\n\nassert solution(\n    \"1\\n0\\n1\\n2\\n1\\n2\\n1\\n\"\n    ) == \"fill 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\nfill 1\\ntransfer 1 2\\ntransfer 1 0\\ndiscard 1\"\n\nassert solution(\n    \"1\\n0\\n\"\n    ) == \"fill 1\\ndiscard 1\\nfill 1\\ntransfer 1 0\\n\"\n\nassert solution(\n    \"1\\n1\\n\"\n    ) == \"fill 1\\ndiscard 1\\nfill 1\\ntransfer 1 0\\n\"\n\nassert solution(\n    \"4\\n2\\n1\\n2\\n3\\n3\\n\"\n    ) == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n7 8\\n10\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\"\nassert solution(\"3\\n5 9 1\\n8\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\"\nassert solution(\"7\\n10 8 2 5 9 3\") == \"fill 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1 2\\n') == '0\\n0\\n0\\n0\\n0\\n0\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 6 7\\n10') == 'discard 7\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1'\nassert solution('2\\n5 6\\n10') == 'discard 6\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ndiscard 1'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n7 8\n10\nSample Output:\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\n\"\"\") == \"discard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\ndiscard 1\\"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('1\\n100') == 'impossible'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n7 8\n10\n\"\"\") == \"\"\"\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\n\"\"\".strip()\n\nassert solution(\"\"\"\n2\n2\n\"\"\") == \"\"\"\nimpossible\n\"\"\".strip()\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    5 4 1\n    ''') == '1'\n    \nassert solution('''\n    10 4 3\n    ''') == '3'\n    \n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n10 4 3') == '27'\nassert solution('10\\n10 4 3') == '10'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"15 4 3\") == \"3\"\nassert solution(\"1 10 3\") == \"10\"\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.split()]"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"10 10 10\") == \"10\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 10 10\") == \"2\"\nassert solution(\"1 1 100\") == \"100\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('4\\n') == '1'\nassert solution('10\\n') == '10'\nassert solution('100\\n') == '100'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 3') == '27'\nassert solution('10 4 3') == '27'\n\nprint(solution(input()))\n\n\nclass TestSolution:\n    def test_solution(self):\n        assert solution('10 4 3') == '27'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 4 3''') == '27'\nassert solution('''10 2 5''') == '10'\nassert solution('''10 10 5''') == '8'\nassert solution('''10 10 3''') == '4'\nassert solution('''1000000000 1''') == '1000000000'\n''')\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '27'"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '4\\n'\nprint(solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n'))\nassert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '4\\n'"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n\"\"\") == \"\"\"\n3\n-1\n4\n\"\"\"\n\nassert solution(\"\"\"\n4 3 5\n2 3 1 2\n1 3 3\n2\n1 1 1\n2\n\"\"\") == \"\"\"\n3\n-1\n4\n\"\"\"\n\nassert solution(\"\"\"\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n\"\"\") == \"\"\"\n3\n-1\n4\n\"\"\"\n\nassert solution(\"\"\"\n3 3 5\n1 2 1 2\n2\n1 1 1\n2\n\"\"\") == \"\"\"\n3\n-1\n4\n\"\"\"\n\nassert solution(\"\"\"\n3 3 5\n1 2 2 1\n2\n1 1 1\n2\n\"\"\") == \"\"\"\n3\n-1\n4\n\"\"\""
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 5') == '3'\nassert solution('2 3 1 2') == '-1'\nassert solution('2') == '4'\nassert solution('2 1 1 1') == '4'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"3\"\n\nassert solution(\"4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\") == \"4\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 1 2\") == \"3\"\nassert solution(\"2\") == \"4\"\nassert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 5\") == \"3\"\nassert solution(\"2 3 1 2\") == \"2\"\nassert solution(\"2\") == \"4\"\nassert solution(\"1 3 3\") == \"1\"\nassert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2') == '3'\nassert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2') == '-1'\nassert solution('6 2\\n5\\n1 2 3 4 5\\n5\\n1 2 3 4 5\\n1\\n2\\n3\\n4\\n5\\n2\\n4\\n5\\n1\\n3\\n1') == '3'\nassert solution('6 2\\n5\\n1 2 3 4 5\\n5\\n1 2 3 4 5\\n1\\n2\\n3\\n4\\n5\\n2\\n4\\n5\\n1\\n3\\n1') == '-1'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 5\") == \"3\"\nassert solution(\"1 3 5\") == \"-1\"\nassert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 5\") == \"3\"\nassert solution(\"5 1 2 3 4\") == \"3\"\nassert solution(\"5 1 1 1 1 1\") == \"2\"\nassert solution(\"2 2 2 2 2 2 2\") == \"2\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3 5') == '3'\nassert solution('2 3 1 2') == '-1'\nassert solution('2') == '4'\n\n\"\"\"\n\nn, k, m = map(int, input().split())\n\narr = list(map(int, input().split()))\n\nquery = []\n\nfor i in range(m):\n    x = input()\n    if x.startswith('1'):\n        _, p, v = x.split()\n        p = int(p)\n        v = int(v)\n        arr[p] = v\n    else:\n        n = int(x)\n        a, b = 0, 0\n        if a == n:\n            return -1\n        if n <= k:\n            print(b)\n            continue\n        while a < n:\n            if arr[a] == 1:\n                if arr[b] == 1:\n                    b += 1\n                a += 1\n                continue\n            elif arr[a]!= 1:\n                if arr[b]!= 1:\n                    b += 1\n                a += 1\n            if arr[a] == k:\n                print(b)\n                break\n\n\"\"\"\nhttps://www.codewars.com/kata/51eec6a4e9e7d5f0e00019c/train/python\n\nYour task is to write a function, which can receive a non-negative integer (signed) and\nreturn a non-negative integer (signed) which is the result of dividing the given integer by 2.\n\nThe function should be able to handle negative numbers as well (negative signs must be removed)\n\"\"\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('\\n'.join(['10 3 3', '100 1000 1000', '500 500 500', '10 5 5', '8 8 8'])) == '533.3333333333'\nassert solution('\\n'.join(['500 5 5', '10 3 3', '100 1000 1000', '500 500 500', '10 5 5', '8 8 8'])) == '1000.3333333333'\nassert solution('\\n'.join(['500 1 0', '10 3 3', '100 1000 1000', '500 500 500', '10 5 5', '8 8 8'])) == '0.0'\nassert solution('\\n'.join(['1000 3 3', '100 1000 1000', '500 500 500', '10 5 5', '8 8 8'])) == '1000.0'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1000 1000\\n') == '533.3333333333'\nassert solution('1000 10 0\\n') == '0'\nassert solution('10000 1 0\\n') == '5.6'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 1\\n') == '533.3333333333'\nassert solution('3 3 3\\n') == '3333.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('5 5 5') == '10'\nassert solution('100 0 100') == '1000'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    1000 3000 1000\n\"\"\") == \"533.3333333333\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 3000 1000\") == \"533.3333333333\"\nassert solution(\"1000 3000 2000\") == \"873.3333333333\"\nassert solution(\"1000 3000 3000\") == \"100000000000\"\nassert solution(\"1000 0 1000\") == \"0.000000000000\"\nassert solution(\"0 1000 1000\") == \"0.000000000000\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('10 10 10') == '0.0'\nprint(solution(input))\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 3000 1000') == \"533.3333333333\"\nassert solution('1000 3000 1000','101 0 0') == \"533.3333333333\""
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '6.666666666666'\nassert solution('1000 3000 1000') == '533.3333333333'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '0.33333333333333333333333333333333333333'\nassert solution('10 10 10') == '16.8'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0') == '14.14'\nassert solution('3 10') == '12.12'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 0\\n10 0\\n10 10') == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n10 10\n10 0\n0 10\n3 3\n''') == '14.14'\nassert solution('''\n10 5\n0 5\n1 6\n2 3\n3 4\n4 5\n5 4\n6 3\n7 2\n8 1\n9 0\n10 0\n''') == '11.89'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 0\n10 0\n10 10\n''') == '14.14'\nassert solution('''\n2 0\n1 0\n2 0\n''') == '5.00'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n3\n5 5\n6 8''') == \"14.14\"\n\"\"\"\n\nfrom math import sqrt\n\nN, M = map(int, input().split())\n\nx_list = []\ny_list = []\n\nfor i in range(N):\n    x, y = map(int, input().split())\n    x_list.append(x)\n    y_list.append(y)\n\nx_list = sorted(x_list)\ny_list = sorted(y_list)\n\nsum = 0\ndist = 0\nwhile True:\n    if x_list[0] == 0:\n        break\n    elif y_list[0] == 0:\n        dist = sqrt((x_list[0] - x_list[1])**2 + (y_list[0] - y_list[1])**2)\n        break\n    else:\n        dist = sqrt((x_list[0] - x_list[1])**2 + (y_list[0] - y_list[1])**2)\n    sum += dist\n    x_list.pop(0)\n    y_list.pop(0)\n\nprint(sum)"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2 0\\n'\n    '10 0\\n'\n    '10 10'\n) == '14.14'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'\nprint('Solution:', solution(''))\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 0\n10 0\n10 10\n\"\"\") == \"14.14\"\n\nassert solution(\"\"\"\n2 0\n0 0\n0 0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2 0\n10 0\n10 10\n\"\"\") == \"16.16\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n0\\n0') == '0.00'\nassert solution('1\\n5\\n0\\n0') == '0.00'\nassert solution('2\\n5\\n0\\n0') == '0.00'\nassert solution('5\\n5\\n0\\n0') == '0.00'\nassert solution('5\\n10\\n0\\n0') == '14.14'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n''') == '123457 0\\n0 2\\n123458 1\\n'\nassert solution('''\n2 4\n3 5\n4 7\n1 3\n''') == '3 3\\n3 4\\n4 5\\n4 7\\n'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"123456 0\\n0 2\\n123458 1\"\nassert solution(\"6 3\") == \"123456 7\\n7 0\\n123458 8\\n0 1\\n123457 9\\n9 1\""
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\n123456 14323 1700000\\n123458 41412 1900000\\n123456\\n123458\\n123457\\n') == '123457 0\\n0 2\\n'\nassert solution('2 4\\n123456 14323 1700000\\n123456\\n123458\\n123457\\n123456\\n') == '123456 0\\n0 2\\n'\nassert solution('2 3\\n123456 14323 1700000\\n123456\\n123458\\n123457\\n123456\\n') == '123456 0\\n0 2\\n'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n', 'First'\nassert solution('''\n4 1\n123456\n123458\n123457\n123456\n''') == '123456\\n123458\\n123457\\n123456\\n', 'Second'\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == \"123457 0\"\n\n\"\"\"\n\n--- Day 1: Report Repair ---\nYour flight departs in a few days from the coastal airport; the easiest way down to the coast from here is via toboggan.\n\nThe shopkeeper at the North Pole Toboggan Rental Shop is having a bad day. \"Something's wrong with our computers; we can't log in!\" You ask if you can take a look.\n\nTheir password database seems to be a little corrupted: some of the passwords wouldn't have been allowed by the Official Toboggan Corporate Policy that was in effect when they were chosen.\n\nTo try to debug the problem, they have created a list (your puzzle input) of passwords (according to the corrupted database) and the corporate policy when that password was set.\n\nFor example, suppose you have the following list:\n\n1-3 a: abcde\n1-3 b: cdefg\n2-9 c: ccccccccc\nEach line gives the password policy and then the password. The password policy indicates the lowest and highest number of times a given letter must appear for the password to be valid. For example, 1-3 a means that the password must contain a at least 1 time and at most 3 times.\n\nIn the above example, 2 passwords are valid. The middle password, cdefg, is not; it contains no instances of b, but needs at least 1. The first and third passwords are valid: they contain one a or nine c, both within the limits of their respective policies.\n\nHow many passwords are valid according to their policies?\n\n\"\"\""
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'''"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n''') == '123457 0\\n0 2'\nassert solution('''\n2\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n''') == '123457 0\\n0 2'\nassert solution('''\n3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n''') == '123457 0\\n0 2'"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2\\n1 2\\n2 3\\n') == '0 2'\nassert solution('10\\n3 4\\n4 5\\n1 2\\n5 6\\n3 7\\n') == '5 6 1'\nassert solution('15\\n1 2\\n2 3\\n3 4\\n5 6\\n6 7\\n7 8\\n9 10\\n10 11\\n11 12\\n') == '11 2'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 1\n1 2\n1 2\n\"\"\") == \"2 0\nassert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"1 0\n\"\"\")"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"90\"\nassert solution(\"100\") == \"1000000\"\nassert solution(\"123\") == \"123\"\nassert solution(\"1 2 3\") == \"9\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('10 20 5 10 2') == '90'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\") == \"90\"\nassert solution(\"10\\n8 1 9 3 6 2 5 7 4\\n6 4 5 7 1 8 9 3 2\") == \"120\"\nassert solution(\"6\\n4 1 2 3 4 5\\n5 6 7 8 9\") == \"200\"\nassert solution(\"10\\n5 5 8 2 1 6 4 3 7 9\\n5 9 4 7 6 3 2 1 8\") == \"200\"\nassert solution(\"3\\n2 3 2 1\\n1 2 1 1\") == \"3\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n') == '90'\nassert solution('7\\n2 4 5 1 3 2 5 6\\n1 2 3') == '46'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n') == '3\\n'\nassert solution('2\\n') == '5\\n'\nassert solution('1\\n') == '1\\n'\nassert solution('2\\n2\\n2\\n1\\n1\\n') == '90\\n'\nassert solution('1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n3\n5 10 2 5\n2 4 5 1 3\n'''\n    ) == '90'\nassert solution(\n    '''\n10\n7 5 6 8 9 3 2 1 4 10\n2 1 4 3 10 5 9 8 7 6\n'''\n    ) == '55'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n10 5 10 2 5\\n2 4 5 1 3') == '90'\nprint(solution(input))\n\n\"\"\""
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2\\n1 2') == '90\\n'\nassert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n') == '90\\n'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '90'\nassert solution('4') == '60'\nassert solution('3') == '36'\nassert solution('2') == '36'\nassert solution('1') == '36'"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == \"90\"\nassert solution(\"5\\n9 1 3 9 9 5\\n1 2 6 3 7 8 9\\n2 3 1 1 2 1\\n\") == \"39\"\nassert solution(\"5\\n4 6 6 3 4 4\\n1 2 3 1 2 3\\n3 4 3 4 3 4\\n\") == \"32\"\nassert solution(\"5\\n4 5 3 4 4\\n1 2 3 1 2 3\\n3 4 3 4 3 4\\n\") == \"56\"\nassert solution(\"5\\n4 6 6 4 4 4\\n1 2 3 1 2 3\\n3 4 3 4 3 4\\n\") == \"56\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n') == '6.000000'\nprint(solution())\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 10\n1 2 6\n0 4 3\n0 8 2\n''') == '6.000000', 'First'\nassert solution('''\n3 10\n1 2 6\n0 4 3\n0 8 2\n''') == '8.000000', 'Second'\n'''\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 10\n1 2 6\n0 4 3\n0 8 2\n''') == '6.000000', 'Should be 6'\nassert solution('''\n3 5\n0 1 1\n0 2 2\n1 3 1\n''') == '3.828288', 'Should be 3.828288'\nassert solution('''\n6 3\n1 2 6\n0 4 3\n0 8 2\n0 10 1\n''') == '6.000000', 'Should be 6'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"6.000000\"\n\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n') == '6.000000'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4 3') == '2.000000'\nassert solution('10 2 1') == '2.000000'\nassert solution('5 7 2') == '5.000000'\nassert solution('1 4 3') == '2.000000'\nassert solution('2 3 2') == '1.000000'"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\") == \".\\n.\\n\"\nassert solution(\"2\\n0 0\\n0 0\\n1.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n."
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1.\\n..\\n1.'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0\n0 0\n1.\n..\n0\n''') == '''\n2.\n..\n1.\n'''\nassert solution('''\n5\n3.\n.\n.\n.\n.\n.\n.\n.\n4\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n.\n."
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n0 0\n0 0\n1.''') == '1.\n3\n0 0\n0 0\n1.\n.\n0 0\nSample Input:\n2\n0 0\n0 0\n1.\n..\n0\n2.\n0 0\n1.\nSample Output:\n1.\n.\n0 0\n0 0\n0 0\n'''\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n0 0\n0 0\n2\n..\n0\nSample Input 2:\n3\n1 1\n1 0\n2\n2\n3\nSample Output 2:\n.\n.\n.\n''') == '3.\n.\n.\nSample Input 3:\n50\n15 20\n20 10\n30\n30\n15 20\nSample Output 3:\n3.\n.\n.\n''')\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.') == '1.\\n..\\n0'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.1.1.1') == '1.1.1.1'\nassert solution('1.1.1.1\\n2.2.2.2') == '1.1.1.1\\n2.2.2.2'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\") == \".\\n.\\n.\\n\"\nassert solution(\"5\\n0 0\\n0 0\\n0 0\\n1.\\n.\\n.\\n.\\n.\\n.\\n.\\n\") == \".\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n\"\nassert solution(\"10\\n0 0\\n0 0\\n0 0\\n1.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n\") == \".\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\"\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.') == '1.\\n.\\n'\n'''\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1\n1\n1.\n1.\n1.\n1.\n\"\"\"\n) == \"\"\"\n1.\n1.\n1.\n1.\n1.\"\"\"\n\nprint(solution(\n\"\"\"\n1\n2\n1.\n.\n1.\n\"\"\"\n))\n\nassert solution(\n\"\"\"\n2\n3\n1.\n.\n1.\n2.\n\"\"\"\n) == \"\"\"\n.\n1.\n2.\n2.\n2.\n2.\n2.\n\"\"\"\n\nassert solution(\n\"\"\"\n2\n3\n2.\n1.\n2.\n3.\n\"\"\"\n) == \"\"\"\n.\n1.\n2.\n3.\n3.\n3.\n3.\n3.\n\"\"\"\n\nassert solution(\n\"\"\"\n1\n4\n2.\n1.\n2.\n3.\n\"\"\"\n) == \"\"\"\n2.\n1.\n2.\n1.\n2.\n1.\n2.\n1.\n\"\"\"\n\nassert solution(\n\"\"\"\n2\n5\n2.\n1.\n3.\n3.\n2.\n1.\n\"\"\"\n) == \"\"\"\n2.\n1.\n2.\n1.\n2.\n1.\n2.\n1.\n\"\"\""
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\na\nbc\nabc\nab\nac\nSample Output:\na\nc\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nabca\\nbc\\n') == '1\\n'"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\n\nhttps://www.hackerrank.com/challenges/sherlock-and-anagrams/problem\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n\n\"\"\""
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1\\n1\\n1\\n'\n'''\n\nimport math"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n5\na\nbc\nabc\nabc\na\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n10\nabcdefghijklmnopqrstuvwxyz\na\nabca\nabc\nab\nabc\nab\na\nab\na\nab\na\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n13\nabcdefghijklmnopqrstuvwxyz\na\nabca\nabc\nab\na\nab\na\nab\na\nab\na\nab\na\nab\na\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n1\nabc\nabc\na\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n5\na\nbc\nabc\nabc\na\n    \"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('\\n'.join([\n    '4',\n    'a',\n    'bc',\n    'abc',\n    '3',\n    '1 abca',\n    '2 1',\n    '2 3',\n])) == '1'\nassert solution('\\n'.join([\n    '5',\n    'abca',\n    'abcd',\n    'cde',\n    'cdab',\n    'abcd',\n    'abcd',\n    'abcd',\n    'abcd',\n])) == '6'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '1'\n\nassert solution('''\n4\nam\nank\nann\nb\na\nb\na\n''') == '1'\n\nassert solution('''\n4\nap\nac\nap\n''') == '0'\n\nassert solution('''\n4\nan\nca\nap\n''') == '0'\n\nassert solution('''\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '1'"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('abc') == '1'\nassert solution('abc') == '1'"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 3 2 4') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('1 2 5 2') == 'NO'\nassert solution('1 4 1 2') == 'YES'\nassert solution('1 1 3 1') == 'YES'\nassert solution('2 1 2 2') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 3 4 5') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2 1\") == \"NO\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\nassert solution('''\n1 1 1 1\n''') == 'YES'\nassert solution('''\n10 10 10 10\n''') == 'NO'\n''')\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 2 2\n''') == 'YES'\nassert solution('''\n1 1 1 1\n''') == 'YES'\nassert solution('''\n1 1 1 1\n''') == 'YES'\nassert solution('''\n1 1 1 1\n''') == 'YES'\nassert solution('''\n0 0 0 0\n''') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1 1 1''') == 'YES'\nassert solution('''1 2 1 2''') == 'NO'\n'''\n\nW, S, C, K = map(int, input().split())\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 1 1''') == 'YES'\nassert solution('''4 4 4 4''') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('1 1 1 1') == 'YES'"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 1\") == \"YES\"\nassert solution(\"4 4 4 4\") == \"NO\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n''') == '80.5696000000'\n\nassert solution('''\n3 5\n-2.00000 -1.5417 -25.0000\n-2.00000 -1.5417 -25.0000\n-2.00000 -1.5417 -25.0000\n''') == '-2.00000 1.5417 -25.0000'\n\nassert solution('''\n2 6\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\n''') == '80.5696000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 96') == '80.5696000000'\nassert solution('2 1.00000 1.00000 1.00000') == '3.00000'\nassert solution('2 -0.0080 1.5417 25.0000') == '3.00000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 96 -0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"2 96 1.0417 25.0000\") == \"75.8940000000\"\n\n'''"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 96\") == \"80.5696\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 96') == \"80.5696000000\""
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 96 -0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('2 96 -0.0080 0.0080 25.0000 -0.0080 0.0080 25.0000') == '80.5696000000'\n\n--\nSample Input:\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000\nSample Output:\n80.5696000000\n\n--\nSample Input:\n3 1\n-1\n-3\n-1\nSample Output:\n100.0\n\n--\nSample Input:\n2 1\n-1\n-1\nSample Output:\n100.0\n\n--\nSample Input:\n2 2\n0.0 1.0\n0.0 1.0\nSample Output:\n80.5696000000\n\n--\n\n\"\"\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 96 -0.0080 1.5417 25.0000 -0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('2 96 -0.0000 1.5417 25.0000 -0.0000 1.5417 25.0000') == '80.5696000000'\nassert solution('2 97 1.5417 25.0000 -0.0000 1.5417 25.0000') == '91.5417000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 96\") == \"80.56999999999999\"\nassert solution(\"100 0.2 0.5 0.25\") == \"49.70000000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 96\") == \"80.5696000000\"\nassert solution(\"-0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"-0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"-0.0080 1.5417 25.0000\") == \"80.5696000000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 96\") == \"80.5696000000\"\nassert solution(\"2 96 -0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"3 96 -0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"4 96 -0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"5 96 -0.0080 1.5417 25.0000\") == \"80.5696000000\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '2'\nassert solution('''\n5 0 0 0 1 1 0 0 0\n''') == '3'\nassert solution('''\n2 2 1 1 1 1 1 1\n''') == '4'\nassert solution('''\n2 2 2 2 2 2 2 2\n''') == '2'\n''')"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '4'\nassert solution('50') == '11'\nassert solution('100') == '9'"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 3 1 1 1 1 1 1\\n0 1 1 0 1 1 0 1 1\\n1 0 1 1 1 1 1 0 1\\n0 0 1 1 1 1 1 1 1\\n1 1 0 1 1 1 1 0 1\\n1 0 1 1 1 1 1 1 0\\n1 1 0 1 1 1 1 1 0\\n0 1 1 1 1 1 1 1 0\\n1 1 0 1 1 1 1 1 1\\n1 0 1 1 1 1 1 1 1\\n0 1 1 1 1 1 1 1 1\\n1 1 0 1 1 1 1 1 0') == '4'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('4 1 1 1 1 1 1 1 1') == '1'\n\"\"\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4 0 0 1 1 1 0 0 1\n''') == '2'\nassert solution('''3\n-1 1 -1 1 -1 -1 -1\n0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''3\n-1 -1 1 -1 -1 1 1 1\n0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1\n''') == '2'\nassert solution('''3\n2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1\n''') == '3'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('1') == '0'\nassert solution('2') == '0'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 0 0 1 1 1 0 0 1\n''') == '2'\n'''\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '2'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('5 0 0 1 1 1 0 0 1') == '2'\nassert solution('6 0 0 1 1 1 0 0 1') == '2'\nassert solution('5 0 0 1 1 1 0 0 1') == '1'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\n\n'''\n\n'''\nIn fact, the number of lines for $n$ holes is the number of cuts in the two sides (for the $n$th hole) minus the number of cuts in the third side (for the $n$th hole).\n'''\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"1400\"\nassert solution(\"4\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 3') == '1400'\nassert solution('1 1 1') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'\nprint(solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150'''))\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\") == \"impossible\"\nassert solution(\"1 2 1\") == \"0\"\nassert solution(\"5 5 3\") == \"1400\""
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 3') == 'impossible'\n\nassert solution('3 2 3') == '1400'\n\nassert solution('1000000000 2 2 5') == 'impossible'"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n\"\"\") == \"1400\"\nassert solution(\"\"\"\n10 10 10\n0 0 0\n1000 0 0\n2000 0 0\n3000 0 0\n3000 0 0\n5000 0 0\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 3') == 'impossible'\nassert solution('1 1 1') == 'impossible'\nassert solution('5 1 1') == '400'\nassert solution('5 5 1') == '1400'\nassert solution('5 5 5') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n3 0 150\n1300 0 150\n\"\"\") == \"1400\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 3\") == \"impossible\"\nassert solution(\"1 1 1\") == \"impossible\"\nassert solution(\"2 2 1\") == \"impossible\"\nassert solution(\"3 2 2\") == \"impossible\"\nassert solution(\"3 2 3\") == \"1000\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 15\") == \"3907\"\nassert solution(\"12 1\") == \"3907\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london''') == '3907':\n    print('Success!')\nelse:\n    print('Failed!')"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam''') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\n''') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 15\") == \"3907\"\n\n\"\"\""
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173''') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\"\"\") == \"3907\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15 20\\n'\n                'stockholm\\n'\n                 'amsterdam\\n'\n                 'london\\n'\n                 'berlin\\n'\n                 'copenhagen\\n'\n                 'oslo\\n'\n                 'helsinki\\n'\n                 'dublin\\n'\n                'reykjavik\\n'\n                 'brussels\\n'\n                 'oslo stockholm\\n'\n                'stockholm helsinki\\n'\n                 'oslo london\\n'\n                 'oslo copenhagen\\n'\n                'stockholm copenhagen\\n'\n                 'copenhagen berlin\\n'\n                 'copenhagen amsterdam\\n'\n                 'helsinki berlin\\n'\n                 'london amsterdam\\n'\n                 'berlin amsterdam\\n'\n                 'london dublin\\n'\n                 'rykjavik dublin\\n'\n                 'rykjavik oslo\\n'\n                 'london brussels\\n'\n                 'brussels amsterdam\\n'\n                'stockholm amsterdam') == '3907'"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam''') == '3907'\n\nprint(solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam'''))\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 15\") == \"3907\"\nassert solution(\"20 3\") == \"15\"\nassert solution(\"10 15\") == \"3907\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '1'\nassert solution('''\n6 6\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '4'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '1'\nassert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '1'\nassert solution('''\n3 2\n1 1\n1 3\n''') == '2'\nassert solution('''\n3 2\n1 1\n2 2\n''') == '1'\nassert solution('''\n2\n0 0\n''') == '0'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"3 1 3 4 2\") == \"1\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"4 5\") == \"1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '1'\n\nfor i in range(int(input())):\n    n, q = map(int, input().split())\n    a = list(map(int, input().split()))\n    ans = []\n    for i in range(q):\n        if len(a) > 1:\n            a.append(a.pop(0) - (a.pop(0) // 2))\n            if i == q - 1:\n                print(a.pop(0))\n                ans.append(a.pop(0))\n        else:\n            ans.append(a[0])\n            a.pop(0)\n    print(min(ans))\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"4 2\") == \"1\""
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\nassert solution(\"10 5\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n8 7\\n7 6\\n6 5\\n3 1\") == \"9\"\nassert solution(\"10 5\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n7 5\\n5 3\\n3 4\") == \"2\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 5\n01001\n11100\n10111\nSample Input:\n6 5\n01001\n11100\n10111\n01001\n01011\n01111\nSample Output:\n00011\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5\n01001\n11100\n10111\n''') == '00010', solution('''\n3 5\n01001\n11100\n10111\n''')\nassert solution('''\n5 8\n00100\n11001\n11010\n10010\n00010\n00001\n''') == '00010', solution('''\n5 8\n00100\n11001\n11010\n10010\n00010\n00001\n''')\nassert solution('''\n5 8\n01100\n11000\n11100\n10010\n00010\n00001\n''') == '00010', solution('''\n5 8\n01100\n11000\n11100\n10010\n00010\n00001\n''')\nassert solution('''\n5 8\n01100\n11100\n10010\n00010\n00001\n''') == '00010', solution('''\n5 8\n01100\n11100\n10010\n00010\n00001\n''')\nassert solution('''\n5 8\n01100\n11100\n10010\n00010\n00001\n''') == '00010', solution('''\n5 8\n01100\n11100\n10010\n00010\n00001\n''')\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '000'\n\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom collections import Counter\nfrom functools import lru_cache"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"00010\"\nassert solution(\"3 5\") == \"00010\"\nassert solution(\"3 5\") == \"00010\"\n\nSample Input:\n4 5\n01101\n01000\n10001\n100001\nSample Output:\n00001\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n11111') == '111110'\nassert solution('5 5\\n111111\\n101111\\n110001\\n101111') == '000010'\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5\n01001\n11100\n10111\n''') == '00010'\n'''\n)"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\n\n\"\"\"\n\nn,k = list(map(int,input().split()))\n\ns = []\nfor _ in range(n):\n    s.append(list(map(int,input().split())))\n\nfor i in range(n):\n    for j in range(n):\n        if i == j:\n            continue\n        for k in range(k):\n            if s[i][k] == 1 and s[j][k] == 1 or s[i][k] == 0 and s[j][k] == 0:\n                s[i][k] += 1\n\nmaxx = 0\nmaxx_idx = -1\n\nfor i in range(n):\n    curr_max = 0\n    curr_max_idx = -1\n    for j in range(k):\n        curr_max += s[i][j]\n        if curr_max > maxx:\n            maxx = curr_max\n            maxx_idx = j\n        elif curr_max == maxx:\n            curr_max_idx = j\n    if maxx_idx == -1:\n        break\n    for j in range(k):\n        if j == maxx_idx:\n            continue\n        s[i][j] = 0\n\nfor i in range(n):\n    for j in range(k):\n        if s[i][j] == 1:\n            s[i][j] = 0\n\nfor i in range(n):\n    print(''.join(map(str,s[i])))"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n01001\\n11100\\n10111\\n') == '00010'\nassert solution('10 4\\n01001\\n11100\\n10111\\n') == '00001'\nassert solution('1 4\\n01001\\n11100\\n10111\\n') == '00011'\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '00010'\nassert solution('''01100\n11100\n10111\nSample Input 2:\n5 7\n01111\n11111\n11111\n10010\n10101\nSample Output:\n11111''') == '11111'\nassert solution('''2465\n9821\n8821\n9231\n8921\n9321\n8912\n9231\n8912\n9321\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n9231\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\nassert solution('5 5\\n01001\\n11100\\n10111') == '00011'\nassert solution('3 5\\n01001\\n11100\\n10111') == '00100'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2 1\n3 3\n4 5\n6 7\n\"\"\") == \"possible\"\n\nassert solution(\"\"\"\n2\n1 0\n1 2\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n4 3\n3 4\n3 5\n4 4\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n0 4\\n6 12') == 'possible'\nassert solution('5 3\\n0 2\\n6 12') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('2\\n0 1\\n2 2\\n2 3\\n2 4\\n3 4\\n4 4\\n5 4\\n5 5\\n5 5\\n5 6\\n5 6\\n5 7\\n5 7\\n5 8\\n5 8\\n5 8\\n5 9\\n5 9\\n5 9\\n5 10\\n5 10\\n5 11\\n5 11\\n5 11\\n5 12\\n5 12\\n5 12\\n5 13\\n5 13\\n5 13\\n5 14\\n5 14\\n5 14\\n5 15\\n5 15\\n5 15\\n5 16\\n5 16\\n5 16\\n5 17\\n5 17\\n5 17\\n5 18\\n5 18\\n5 18\\n5 19\\n5 19\\n5 19\\n5 20\\n5 20\\n5 20\\n5 21\\n5 21\\n5 21\\n5 22\\n5 22\\n5 22\\n5 23\\n5 23\\n5 23\\n5 24\\n5 24\\n5 24\\n5 25\\n5 25\\n5 25\\n5 26\\n5 26\\n5 26\\n5 27\\n5 27\\n5 27\\n5 28\\n5 28\\n5 28\\n5 29\\n5 29\\n5 29\\n5 30\\n5 30\\n5 30\\n5 31\\n5 31\\n5 31\\n5 32\\n5 32\\n5 32\\n5 33\\n5 33\\n5 33\\n5 34\\n5 34\\n5 34\\n5 35\\n5 35\\n5 35\\n5 36\\n5 36\\n5 36\\n5 37\\n5 37\\n5 37\\n5 38\\n5 38\\n5 38\\n5 39\\n5 39\\n5 39\\n5 40\\n5 40\\n5 40\\n5 41\\n5 41\\n5 41\\n5 42\\n5 42\\n5 42\\n5 43\\n5 43\\n5 43\\n5 44\\n5 44\\n5 44\\n5 45\\n5 45\\n5 45\\n5 46\\n5 46\\n5 46\\n5 47\\n5 47\\n5 47\\n5 48\\n5 48\\n5 48\\n5 49\\n5 49\\n5 49\\n5 50\\n5 50\\n5 50\\n5 51\\n5 51\\n5 51\\n5 52\\n5 52\\n5 52\\n5 53\\n5 53\\n5 53\\n5 54\\n5 54\\n5 54\\n5 55\\n5 55\\n5 55\\n5 56\\n5 56\\n5 56\\n5 57\\n5 57\\n5 57\\n5 58\\n5 58\\n5 58\\n5 59\\n5 59\\n5 59\\n5 60\\n5 60\\n5 60\\n5 61\\n5 61\\n5 61\\n5 62\\n5 62\\n5 62\\n5 63\\n5 63\\n5 63\\n5 64\\n5 64\\n5 64\\n5 65\\n5 65\\n5 65\\n5 66\\n5 66\\n5 66\\n5 67\\n5 67\\n5 67\\n5 68\\n5 68\\n5 68\\n5 69\\n5 69\\n5 69\\n5 70\\n5 70\\n5 70\\n5 71\\n5 71\\n5 71\\n5 72\\n5 72\\n5 72\\n5 73\\n5 73\\n5 73\\n5 74\\n5 74\\n5 74\\n5 75\\n5 75\\n5 75\\n5 76\\n5 76\\n5 76\\n5 77\\n5 77\\n5 77\\n5 78\\n5 78\\n5 78\\n5 79\\n5 79\\n5 79\\n5 80\\n5 80\\n5 80\\n5 81\\n5 81\\n5 81\\n5 82\\n5 82\\n5 82\\n5 83\\n5 83\\n5 83\\n5 84\\n5 84\\n5 84\\n5 85\\n5 85\\n5 85\\n5 86\\n5 86\\n5 86\\n5 87\\n5 87\\n5 87\\n5 88\\n5 88\\n5 88\\n5 89\\n5 89\\n5 89\\n5 90\\n5 90\\n5 90\\n5 91\\n5 91\\n5 91\\n5 92\\n5 92\\n5 92\\n5 93\\n5 93\\n5 93\\n5 94\\n5 94\\n5 94\\n5 95\\n5 95\\n5 95\\n5 96\\n5 96\\n5 96\\n5 97\\n5 97\\n5 97\\n5 98\\n5 98\\n5 98\\n5 99\\n5 99\\n5 99\\n6 0\\n6 1\\n6 2\\n6 3\\n6 4\\n6 5\\n6 6\\n6 7\\n6 8\\n6 9\\n6 10\\n6 11\\n6 12\\n6 13\\n6 14\\n6 15\\n6 16\\n6 17\\n6 18\\n6 19\\n6 20\\n6 21\\n6 22\\n6 23\\n6 24\\n6 25\\n6 26\\n6 27\\n6 28\\n6 29\\n6 30\\n6 31"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n6 2\\n6 12') == 'possible'\nassert solution('1\\n6 2\\n1 3\\n2 2\\n3 2\\n3 2') == 'impossible'\nassert solution('1\\n6 2\\n6 3\\n3 3\\n1 2\\n2 2\\n3 3') == 'possible'\nassert solution('1\\n6 2\\n6 2\\n3 2\\n1 1\\n1 2\\n2 1') == 'impossible'\nassert solution('1\\n6 2\\n6 2\\n1 2\\n1 2\\n1 3\\n2 2\\n3 2') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('1\\n3 2\\n3 4\\n3 5') == 'impossible'"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n0 3\n0 1\n''') == 'impossible'\nassert solution('''\n1\n0 2\n0 1\n''') == 'possible'\nassert solution('''\n5\n2 10\n2 9\n3 10\n3 1\n3 4\n''') == 'impossible'\nassert solution('''\n5\n0 4\n0 1\n1 4\n1 2\n2 4\n''') == 'possible'"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n0 4\n6 12\n''') == 'possible'\nassert solution('''\n1\n1\n''') == 'impossible'\nassert solution('''\n2 2\n0 1\n1 2\n''') == 'possible'\nassert solution('''\n3\n1 3\n1 5\n''') == 'impossible'\nassert solution('''\n4\n0 1\n1 5\n2 3\n3 2\n''') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1\n2\n3\"\"\") == \"possible\"\nassert solution(\"\"\"2\n5\n3\n2\"\"\") == \"impossible\"\nassert solution(\"\"\"4\n4\n5\n4\"\"\") == \"impossible\"\nassert solution(\"\"\"2\n2\n3\n1\"\"\") == \"possible\"\nassert solution(\"\"\"2\n3\n5\n3\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == 'impossible'\nassert solution('6 2\\n') == 'possible'\nassert solution('6 12\\n') == 'possible'\nassert solution('6 8\\n') == 'impossible'\nassert solution('6 8\\n') == 'possible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 0 1') == '2', \"Wrong\"\nassert solution('10 0 1') == '2', \"Wrong\"\nassert solution('0 5 1') == '1', \"Wrong\"\nassert solution('0 -5 1') == '1', \"Wrong\"\nassert solution('-5 0 1') == '1', \"Wrong\"\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == '2'\nassert solution('''6\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n0 0 1\n''') == '4'\nassert solution('''7\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n0 0 1\n''') == '2'\n'''\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"9\"\nassert solution(\"99999\") == \"99999\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\", '1'\nassert solution(\"5 0 1\") == \"2\", '2'\nassert solution(\"10 0 1\") == \"2\", '2'\nassert solution(\"0 5 1\") == \"2\", '2'\nassert solution(\"0 -5 1\") == \"2\", '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2 -1 1\n0 -5 1\n0 -5 1\n-5 2 1\n''') == '1'\nassert solution('''\n8\n1 1 1\n-1 -1 1\n-1 1 -1\n1 -1 -1\n1 1 -1\n-1 1 1\n-1 -1 1\n-1 -1 -1\n''') == '3'\nassert solution('''\n10\n1 0 1\n-1 0 1\n-1 0 -1\n-1 -1 1\n0 -1 1\n0 -1 -1\n1 0 -1\n1 0 1\n0 -1 -1\n-1 0 1\n-1 0 -1\n0 -1 -1\n1 0 -1\n1 0 -1\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n0 1 -1\n0 -1 1\n0 1 -1\n0 -1 0\n0 -1 0\n0 -1 0\n-1 0 0\n-1 0 0\n1 0 -1\n1 0 -1\n0 -1 0\n0 -1 0\n0 -1"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution('''\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == '2'\n\"\"\"\n\nimport math\nimport time\nfrom typing import List\n\nstart_time = time.time()"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n\n''') == '2'\nassert solution('''\n2\n5 0 1\n5 0 1\n\n''') == '1'\nassert solution('''\n1\n1 0 1\n\n''') == '1'\nassert solution('''\n2\n0 0 1\n0 1 0\n\n''') == '0'\nassert solution('''\n1\n0 0 1\n\n''') == '1'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == '2'\n''')\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2'\nassert solution('2\\n5 0 1\\n0 5 1\\n') == '1'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n2\nE bobby_died\nS 1!bobby_died\nS 2!bobby_died\n''') == 'Plot Error'\nassert solution('''\n1\nE jr_does_bad_things\nS 1!jr_does_bad_things\nS 2!jr_does_bad_things\n''') == 'Yes'\nassert solution('''\n1\nE it_goes_on_and_on\nS 1!it_goes_on_and_on\nS 2!it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n2\nE stuff_happens\nS 1 stuff_happens\nS 2 stuff_happens\n''') == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nE business_as_usual\\nS 1 bobby_died\\nE stuff_happens\\nS 2 bobby_died\\nE it_goes_on_and_on\\nS 3 bobby_died') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nS 3 bobby_died') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nS 2!bobby_dies\\nE it_goes_on_and_on\\nS 3 bobby_died') == 'Yes'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nS 2 bobby_died\\nE it_goes_on_and_on\\nS 3 bobby_died') == 'No'\nassert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nS 2 bobby_died\\nE it_goes_on_and_on\\nS 3 bobby_died\\nE bobby_dies\\nS 4 bobby_dies\\nE stuff_happens\\nE bobby_dies\\nS 5 bobby_dies\\nS 6 bobby_dies\\nE stuff_happens\\nS 7 bobby_dies\\nS 8 bobby_dies\\nE stuff_happens\\nS 9 bobby_dies\\nS 10 bobby_dies\\nS 11 bobby_dies\\nS 12 bobby_dies\\nS 13 bobby_dies\\nS 14 bobby_dies\\nS 15 bobby_dies\\nS 16 bobby_dies\\nS 17 bobby_dies\\nS 18 bobby_dies\\nS 19 bobby_dies\\nS 20 bobby_dies\\nS 21 bobby_dies\\nS 22 bobby_dies\\nS 23 bobby_dies\\nS 24 bobby_dies\\nS 25 bobby_dies\\nS 26 bobby_dies\\nS 27 bobby_dies\\nS 28 bobby_dies\\nS 29 bobby_dies\\nS 30 bobby_dies\\nS 31 bobby_dies\\nS 32 bobby_dies\\nS 33 bobby_dies\\nS 34 bobby_dies\\nS 35 bobby_dies\\nS 36 bobby_dies\\nS 37 bobby_dies\\nS 38 bobby_dies\\nS 39 bobby_dies\\nS 40 bobby_dies\\nS 41 bobby_dies\\nS 42 bobby_dies\\nS 43 bobby_dies\\nS 44 bobby_dies\\nS 45 bobby_dies\\nS 46 bobby_dies\\nS 47 bobby_dies\\nS 48 bobby_dies\\nS 49 bobby_dies\\nS 50 bobby_dies\\nS 51 bobby_dies\\nS 52 bobby_dies\\nS 53 bobby_dies\\nS 54 bobby_dies\\nS 55 bobby_dies\\nS 56 bobby_dies\\nS 57 bobby_dies\\nS 58 bobby_dies\\nS 59 bobby_dies\\nS 60 bobby_dies\\nS 61 bobby_dies\\nS 62 bobby_dies\\nS 63 bobby_dies\\nS 64 bobby_dies\\nS 65 bobby_dies\\nS 66 bobby_dies\\nS 67 bobby_dies\\nS 68 bobby_dies\\nS 69 bobby_dies\\nS 70 bobby_dies\\nS 71 bobby_dies\\nS 72 bobby_dies\\nS 73 bobby_dies\\nS 74 bobby_dies\\nS 75 bobby_dies\\nS 76 bobby_dies\\nS 77 bobby_dies\\nS 78 bobby_dies\\nS 79 bobby_dies\\nS 80 bobby_dies\\nS 81 bobby_dies\\nS 82 bobby_dies\\nS 83 bobby_dies\\nS 84 bobby_dies\\nS 85 bobby_dies\\nS 86 bobby_dies\\nS 87 bobby_dies\\nS 88 bobby_dies\\nS 89 bobby_dies\\"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nE stuff_happens\nE bobby_dies\nS 2!bobby_dies stuff_happens''') == 'Yes'\nassert solution('''5\nE business_as_usual\nS 1 bobby_dies\nS 2!bobby_dies stuff_happens\nE stuff_happens\nS 1 bobby_dies''') == 'Yes'\nassert solution('''10\nE business_as_usual\nS 2!bobby_dies\nS 3!bobby_dies\nS 4!bobby_dies\nS 5!bobby_dies\nS 6!bobby_dies\nS 7!bobby_dies\nS 8!bobby_dies\nS 9!bobby_dies\nS 10!bobby_dies\nS 11!bobby_dies\nS 12!bobby_dies\nS 13!bobby_dies\nE stuff_happens\nS 14!bobby_dies\nS 15!bobby_dies\nS 16!bobby_dies\nS 17!bobby_dies\nS 18!bobby_dies\nS 19!bobby_dies\nS 20!bobby_dies\nS 21!bobby_dies\nS 22!bobby_dies\nS 23!bobby_dies\nS 24!bobby_dies\nS 25!bobby_dies\nS 26!bobby_dies\nS 27!bobby_dies\nS 28!bobby_dies\nS 29!bobby_dies\nS 30!bobby_dies''') == 'Yes'\nassert solution('''12\nE yogi_fails\nS 1 yogi_fails\nS 2 yogi_fails\nS 3 yogi_fails\nS 4 yogi_fails\nS 5 yogi_fails\nS 6 yogi_fails\nS 7 yogi_fails\nS 8 yogi_fails\nS 9 yogi_fails\nS 10 yogi_fails\nS 11 yogi_fails\nS 12 yogi_fails\nS 13 yogi_fails\nS 14 yogi_fails\nS 15 yogi_fails\nS 16 yogi_fails\nS 17 yogi_fails\nS 18 yogi_fails\nS 19 yogi_fails\nS 20 yogi_fails\nS 21 yogi_fails\nS 22 yogi_fails\nS 23 yogi_fails\nS 24 yogi_fails\nS 25 yogi_fails\nS 26 yogi_fails\nS 27 yogi_fails\nS 28 yogi_fails\nS 29 yogi_fails\nS 30 yogi_fails''') == 'Yes'\nassert solution('''6\nE yogi_fails\nE yogi_loses\nS 1 yogi_loses\nS 2 yogi_loses\nS 3 yogi_loses\nS 4 yogi_loses\nS 5 yogi_loses\nS 6 yogi_loses\nS 7 yogi_loses\nS 8 yogi_loses\nS 9 yogi_loses\nS 10 yogi_loses\nS 11 yogi_loses\nS 12 yogi_loses\nS 13 yogi_loses\nS 14 yogi_loses\nS 15 yogi_loses\nS 16 yogi_loses\nS 17 yogi_loses\nS 18 yogi_loses\nS 19 yogi_loses\nS 20 yogi_loses\nS 21 yogi_loses\nS 22 yogi_loses\nS 23 yogi_loses\nS 24 yogi_loses\nS 25 yogi_loses\nS 26 yogi_loses\nS 27 yogi_loses\nS 28 yogi_loses\nS 29 yogi_loses\nS 30 yogi_loses''') == 'Yes'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"Plot Error\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"3 Just A Dream\"\nassert solution(\"2\") == \"3 Just A Dream\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n'\n                'E 0\\n'\n                'D 1\\n'\n                'S 1 stuff_happens\\n'\n                'S 2 bobby_dies\\n'\n                'E 1\\n'\n                'E 2\\n'\n                'D 3\\n'\n                'E 1\\n'\n                'S 1\\n'\n                'S 2\\n') == 'Yes\\n'\n    assert solution('1\\n'\n                'E 0\\n'\n                'D 1\\n'\n                'S 1 stuff_happens\\n'\n                'S 2 bobby_dies\\n'\n                'E 1\\n'\n                'E 2\\n'\n                'D 3\\n'\n                'E 1\\n'\n                'S 1\\n'\n                'S 2\\n') == 'Yes\\n'\n    assert solution('2\\n'\n                'E 1\\n'\n                'E 2\\n'\n                'D 3\\n'\n                'E 1\\n'\n                'S 1\\n'\n                'S 2\\n') == 'Plot Error\\n'\n    assert solution('1\\n'\n                'E 0\\n'\n                'S 1 stuff_happens\\n'\n                'S 2 bobby_dies\\n'\n                'E 1\\n'\n                'E 2\\n'\n                'D 3\\n'\n                'E 1\\n'\n                'S 1\\n'\n                'S 2\\n') == 'Yes\\n'\n    assert solution('1\\n'\n                'E 0\\n'\n                'S 1 stuff_happens\\n'\n                'S 2 bobby_dies\\n'\n                'E 1\\n'\n                'E 2\\n'\n                'D 3\\n'\n                'E 1\\n'\n                'S 1\\n'\n                'S 2\\n') == 'Yes\\n'\n    "
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == \"Yes\"\nassert solution(sample_input_2) == \"Plot Error\"\nprint(solution(stdin))"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input) == \"Plot Error\"\nassert solution(input) == \"Yes\""
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n1\nE\nS\n''') == 'Yes'\nassert solution('''\n1\nD\n''') == 'Plot Error'\nassert solution('''\n2\nE\nD\n''') == 'Yes'\nassert solution('''\n3\nD\n''') == 'Plot Error'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_dies it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Plot Error\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_dies it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_dies it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\"\nassert solution(\"10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nS 3!bobby_dies it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on\") == \"Yes\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\n\nassert solution('''5\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies\nS 3!bobby_dies\nS 4!bobby_dies\nS 5!bobby_dies\nS 6!bobby_dies\nS 7!bobby_dies\nS 8!bobby_dies\nS 9!bobby_dies\nS 10!bobby_dies\nS 11!bobby_dies\nS 12!bobby_dies\nS 13!bobby_dies\nS 14!bobby_dies\nS 15!bobby_dies\nS 16!bobby_dies\nS 17!bobby_dies\nS 18!bobby_dies\nS 19!bobby_dies\nS 20!bobby_dies\nS 21!bobby_dies\nS 22!bobby_dies\nS 23!bobby_dies\nS 24!bobby_dies\nS 25!bobby_dies\nS 26!bobby_dies\nS 27!bobby_dies\nS 28!bobby_dies\nS 29!bobby_dies\nS 30!bobby_dies\nS 31!bobby_dies\nS 32!bobby_dies\nS 33!bobby_dies\nS 34!bobby_dies\nS 35!bobby_dies\nS 36!bobby_dies\nS 37!bobby_dies\nS 38!bobby_dies\nS 39!bobby_dies\nS 40!bobby_dies\nS 41!bobby_dies\nS 42!bobby_dies\nS 43!bobby_dies\nS 44!bobby_dies\nS 45!bobby_dies\nS 46!bobby_dies\nS 47!bobby_dies\nS 48!bobby_dies\nS 49!bobby_dies\nS 50!bobby_dies\nS 51!bobby_dies\nS 52!bobby_dies\nS 53!bobby_dies\nS 54!bobby_dies\nS 55!bobby_dies\nS 56!bobby_dies\nS 57!bobby_dies\nS 58!bobby_dies\nS 59!bobby_dies\nS 60!bobby_dies\nS 61!bobby_dies\nS 62!bobby_dies\nS 63!bobby_dies\nS 64!bobby_dies\nS 65!bobby_dies\nS 66!bobby_dies\nS 67!bobby_dies\nS 68!bobby_dies\nS 69!bobby_dies\nS 70!bobby_dies\nS 71!bobby_dies\nS 72!bobby_dies\nS 73!bobby_dies\nS 74!bobby_dies\nS 75!bobby_dies\nS 76!bobby_dies\nS 77!bobby_dies\nS 78!bobby_dies\nS 79!bobby_dies\nS 80!bobby_dies\nS 81!bobby_dies\nS 82!bobby_dies\nS 83!bobby_dies\nS 84!bobby_dies\nS 85!bobby_dies\nS 86!bobby_dies\nS 87!bobby_dies\nS 88!bobby_dies\nS 89!bobby_dies\nS 90!bobby_dies\nS 91!bobby_dies\nS 92!bobby_dies\nS 93!bobby_dies\nS 94!bobby_dies\nS 95!bobby_dies\nS 96!bobby_dies\nS 97!bobby_dies\nS 98!bobby_dies\nS 99!bobby_dies\nS 100!bobby_dies\nS 101!bobby_dies\nS 102!bobby_dies\nS 103!bobby_dies\nS 104!bobby_dies\nS 105!bobby_dies\nS 106!bobby_dies\nS 107!bobby_dies\nS 108!bobby_dies\nS 109!bobby_dies\nS 110!bobby_dies\nS 111!bobby_dies\nS 112!bobby_dies\nS 113!bobby_dies\nS 114!bobby_dies\nS 115!bobby_dies\nS 116!bobby_dies\nS 117!bobby_dies\nS 118!b"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 5 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo conse| |tatte | |\\n|Duis aute irure dolor in| |re|\\n+------------------------+-+\\ndef solution(stdin: str) -> str:\\n    pass\\n\\n\\n\\nprint(solution(\\\"6 5 7\\\"))\"\n\nThe Adventure of the Ancient Thumb\n\nIn ancient times, the mythical creature of the Ancient Thumb, known as the Adventure of the Ancient Thumb, was a large and peculiar man of 1,870,000 feet tall, with a thick, black, red, and heavy beard and ample texture. He was a 5 foot tall man with a large, flat-topped, white, long, heavy, and evergreen beard. He was always a leader in the ancient age, when in the 16th century many of the modern scholars began to say that \u201cthe Human in the Shadow of the Ancient Thumb is an adult.\u201d\n\nThe Adventures of the Ancient Thumb\n\nTo the younger, the creature of the Ancient Thumb sometimes lacked the notion of being a man. As for a man, it was known that the ancient Greeks would never even try to say \u201cthey are an old man.\u201d They also made a habit of starting their own brand new life at their graves. The Ancient Thumb would be an alien body of modern time that may not even have been recorded by the majority of the modern Greeks.\n\nIn the dark ages and before the present, the ancient Greeks had no idea that the Ancient Thumb was a man, but the modern Greeks did have the sense that the ancient creatures were the man. If you were to travel to the Ancient Thumb in the future, you would never be able to tell if you are an adult or not.\n\nIn the present, you are now aware of the fact that the Ancient Thumb is an artificial creature and that you should know how to tell if it is a man or not. The first thing you should do is to check if the user is even a man. If they are not, the Ancient Thumb will fall into the abyss of unknownness.\n\n(defun question (age) (/ (age 2) (age 3))\n\n(defun is_adult (age) (question (age) (/ (age 2) (age 3)) (question (age) (/ (age 1) (age 2))))\n\n(defun is_child (age) (question (age) (/ (age 1) (age 2)) (question (age) (/ (age 1) (age 3))))\n\n(defun is_teen (age) (question (age) (/ (age 1) (age 2)) (question (age) (/ (age 1) (age 3)) (question (age) (/ (age 2) (age 3))))))\n\n(defun is_old (age) (question (age) (/ (age 1) (age 2)) (question (age) (/ (age 1) (age 3)) (question (age) (/ (age 2) (age 3))))))\n\n(defun is_young (age) (question (age) (/ (age 1) (age 2)) (question (age) (/ (age 1) (age 3)) (question (age) (/ (age 2) (age 3)) (question (age) (/ (age 1) (age 2)) (question (age) (/ (age 1) (age 3))))))\n\n(defun is_adult_m (age) (question (age) (/ (age 1) (age 2)) (question (age) (/ (age 1) (age 3)) (question (age) (/ (age 2) (age 3))))))\n\n(defun is_adult_f (age) (question (age) (/ (age 1) (age 2)) (question (age) (/ (age 1) (age 3)) (question (age) (/ (age 2) (age 3))))))\n\n(defun is_child_m (age) (question (age) (/ (age 1) (age 2)) (question (age) (/ (age 1) (age 3)) (question (age) (/ (age 2) (age 3)) (question (age) (/ (age 1) (age 2)) (question (age) (/ (age"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('24 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"24 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\nassert solution(\"26 4 6 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\nassert solution(\"30 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\nassert solution(\"28 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\nassert solution(\"22 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\n\nSample Input:\n5\n3\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n\nSample Output:\n\n|+------------------+\n||exercitation ullamco|\n|+------------------+\n||laboris nisi ut |\n||aliquip ex    |\n||ea commodo    |\n||consequat    |\n|+------------------+\n||Duis aute    |\n||irure dolor in |\n||reprehenderit    |\n|||aliquip    |\n|||accusantium    |\n|+------------------+\n||ut    |\n||mollit    |\n||anim    |\n||id    |\n||ut    |\n|+------------------+\n||ad    |\n||ecum    |\n||maiores    |\n||consectetur    |\n|+------------------+\n|+------------------+\n\n\"\"\"\n\nfrom collections import deque\nimport math\nfrom unittest import TestCase\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"24 5 8 7\") == \"+----------------------------------------+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+----------------------------------------+\\n\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"24 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '+----------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in | |\\n|reprehenderit in        |v|\\n+----------------------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('24 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n\"\"\""
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 5 6\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\\naliquip ex ea commodo consequat Duis aute irure dolor in\\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\\nmimim veniam quis nostrud exercitation ullamco laboris nisi ut\\naliquip ex ea commodo consequat Duis aute irure dolor in\\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur Excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt mollit anim id est laborum'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\"\"\") == \"\"\"+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n24 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua Ut enim ad\nminim veniam quis nostrud exercitation ullamco laboris nisi ut\naliquip ex ea commodo consequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\npariatur Excepteur sint occaecat cupidatat non proident sunt in\nculpa qui officia deserunt mollit anim id est laborum\n''') == '''+------------------------+-+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in| |\n|reprehenderit in        |v|\n+------------------------+-+'''\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 10\") == \"possible\"\nassert solution(\"10 0 3 2 1\") == \"impossible\"\nassert solution(\"4 0 3 2 1\") == \"impossible\"\nassert solution(\"10 3 0 2 1\") == \"impossible\"\nassert solution(\"10 3 0 1 2\") == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 10') == \"possible\"\nassert solution('10 10') == \"impossible\"\nassert solution('8 10') == \"possible\"\n\"\"\"\n\nfrom itertools import combinations"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('5 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n5 3 2 1\\n5 3 2 0\\n5 3 1 1\\n4 3 1 1\\n4 2 1 1\\n4 1 1 2') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == \"impossible\"\nassert solution('2') == \"possible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == 'possible'\n'''\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"impossible\"\nassert solution(\"1 10\") == \"impossible\"\nassert solution(\"10 1\") == \"possible\"\nassert solution(\"10 5\") == \"impossible\"\nassert solution(\"8 9\") == \"impossible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 10\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == \"impossible\"\nassert solution('''2 14\n0 3 2 1\n3 0 1 3\n2 1 0 2\n1 3 2 0\n''') == \"possible\""
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n') == 'possible'\nprint('\"Solved\"')"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"impossible\"\nprint(\"Done!\")"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == 'impossible'\nassert solution('4 10') == 'possible'\n\"\"\""
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1\\n1') == '1'\nassert solution('2 1 1\\n2') == '1.00000000'\nassert solution('1 1 1\\n1') == '1.00000000'\nassert solution('1 1 1\\n2') == '0.9999999'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1') == \"1\"\nassert solution('1') == \"0\"\nassert solution('0') == \"0\"\nassert solution('10') == \"1\"\nassert solution('0 0') == \"0.5\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1\\n1') == '1'\nassert solution('3 5 6\\n3 3 2 3\\n3 4 2 4') == '1.5'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 1\\n1\\n2\\n') == \"1.0\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 1\") == \"1.00000000\"\nassert solution(\"2 3 1\") == \"1.0\"\nassert solution(\"100 3 1\") == \"1.000000\"\nassert solution(\"1000 3 1\") == \"1.0\""
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"1.00000000\"\nassert solution(\"3 3 1\") == \"2.00000000\"\nassert solution(\"10 10 10\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '1.00000000'\nassert solution('5 5 5') == '3.9999999'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '1'\nassert solution('2 2 2') == '1'\nassert solution('2 1 2') == '0'\nassert solution('1 2 1') == '0.5'\nassert solution('1 1 2') == '0'\n\n---\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == '1.00000000'\nassert solution(input_string) == '0.99999995'\nassert solution(input_string) == '0.99999997'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n2 3') == '2\\n1\\n3'\n\"\"\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3 3 2\") == \"3\"\nassert solution(\"5 4 3 3 1\") == \"1\"\nassert solution(\"5 5 5 5 5 5 5 5 5\") == \"1\"\nassert solution(\"5 5 5 5 5 5 5 5 5 5\") == \"3\"\nassert solution(\"5 5 5 5 5 5 5 5 5 5\") == \"1\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 3 2\") == \"2\"\nassert solution(\"5 5 5 5 5 5\") == \"1\"\nassert solution(\"2 5 3 1 2 3\") == \"1\"\nassert solution(\"5 5 5 5 5 5 5 5 5 5 5 5 5 5\") == \"1\"\nassert solution(\"2 2 2 2 2 2 2 2 2 2 2 2\") == \"1\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4 3 3 2\") == \"2\"\nassert solution(\"5 4 3 3 2\") == \"3\"\nassert solution(\"5 4 3 3 2\") == \"2\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n5 4 3 3 2') == '2'\nassert solution('2\\n1 2') == '1'\nassert solution('5\\n5 6 7 8') == '3'\nassert solution('3\\n1 2') == '0'\nassert solution('5\\n5 6 7 8') == '3'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n3\\n3\\n2') == '1'\nassert solution('5\\n4\\n3\\n3\\n2') == '3'\nassert solution('5\\n4\\n3\\n4\\n5') == '4'\nassert solution('5\\n2\\n1') == '1'\nassert solution('5\\n1\\n2') == '1'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n5 4 3 3 2') == '3'\nassert solution('6\\n5 4 3 3 2\\n2\\n1 2') == '2'\nassert solution('6\\n5 4 3 3 2\\n3\\n1 2') == '1'\nassert solution('6\\n5 4 3 3 2\\n3\\n1 2') == '3'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2'\nassert solution('''\n3\n1 2\n3\n2\n''') == '1'\nassert solution('''\n5\n5 4 3 3 2\n3\n3\n1 2\n1 1\n2 4\n''') == '2'\n'''\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '1'\nassert solution('''5\n5 4 3 3 2\n1 2\n1 1\n2 4\n''') == '3'\nassert solution('''5\n5 4 3 3 2\n2 3\n1 1\n2 4\n''') == '3'\nassert solution('''5\n5 4 3 3 2\n4 1\n1 1\n2 4\n''') == '3'\nassert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == '1'\nassert solution('''\n5 3\n1 1\n2 2\n3 3\n4 4\n0 0\n''') == '4'\nassert solution('''\n2 2\n1 1\n1 2\n1 3\n''') == '1'\nassert solution('''\n3 2\n1 1\n2 2\n1 3\n''') == '5'\nassert solution('''\n1 1\n0 2\n1 2\n1 3\n''') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\""
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == '1'\nassert solution('''\n3 3\n0 0\n1 1\n2 2\n''') == '5'\nassert solution('''\n3 4\n0 1\n1 1\n2 2\n0 2\n''') == '3'\nassert solution('''\n3 5\n0 1\n1 1\n2 2\n0 2\n1 2\n''') == '5'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n0 1\n1 2\n0 2\n''') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('6 10') == '1'\nassert solution('16 10') == '2'\nassert solution('1 4') == 'never'"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2\\n0 1\\n1 2\\n0 2\\n') == '1'\nassert solution('5 2\\n0 1\\n1 2\\n0 2\\n2 3') == '2'\nassert solution('10 3\\n1 4\\n2 3\\n5 6\\n7 8\\n9 10\\n') == '10'\nassert solution('2 6\\n0 1\\n0 1') == 'never meet'\nassert solution('5 7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 5') == '1'\n\"\"\""
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '2'\nassert solution('7 7') == '9'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"10 2\") == \"10\"\nassert solution(\"3 2\") == \"never meet\""
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n\") == \"0\"\nassert solution(\"5\\n\") == \"1\"\nassert solution(\"5\\n\") == \"0\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 3') == '0.945'\nassert solution('2 2 4') == '0.99999998'\n\"\"\"\nfrom math import gcd\nfrom math import sqrt\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 3\n2 2\n1 1\n3 3\n1 1\n1 1\n3 2\n1 3\n2 1\n1 1\n1 2\n1 3\n2 1\n2 2\n3 3\n2 2\n3 2\n3 3\n3 2\n1 3\n1 2\n2 3\n1 3\n2 2\n1 2\n2 2\n2 2\n2 2\n3 3\n2 2\n1 1\n1 1\n2 3\n2 3\n1 3\n2 1\n1 1\n1 2\n2 2\n2 3\n1 1\n2 1\n2 3\n1 2\n1 1\n2 2\n1 1\n2 1\n3 3\n2 2\n1 3\n1 1\n1 3\n1 3\n2 2\n1 3\n1 2\n1 2\n1 2\n2 2\n2 1\n2 2\n3 3\n1 3\n2 3\n1 3\n1 3\n1 3\n1 2\n2 3\n1 3\n1 3\n1 3\n1 3\n1 2\n2 3\n2 1\n3 3\n1 2\n1 3\n1 3\n2 2\n1 3\n2 1\n2 2\n1 2\n2 3\n1 1\n1 2\n1 1\n1 2\n1 2\n2 1\n2 1\n2 1\n2 1\n2 1\n3 3\n2 2\n3 3\n1 3\n1 2\n2 3\n1 3\n1 3\n1 3\n1 3\n1 3\n1 3\n2 3\n2 2\n1 3\n1 3\n2 3\n2 2\n1 1\n1 3\n2 2\n1 3\n2 3\n1 3\n1 3\n1 3\n2 2\n2 1\n2 3\n1 3\n2 1\n3 3\n1 3\n2 3\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n2 2\n2 1\n2 2\n2 2\n2 2\n1 1\n1 2\n2 2\n1 1\n1 3\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n2\n2\n2\n''') == '14500000001'\nassert solution('''\n5 4 2\n1\n2\n3\n''') == '1764757578000000000'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 2') == '14500000001'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 2') == '0'\nassert solution('3 2 2') == '1'\nassert solution('3 1 2') == '1'\nassert solution('2 1 2') == '0'\nassert solution('10 1 2') == '1'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4 2\n2\n2''') == '100000001'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\\n\") == \"1\"\nassert solution(\"5 6 3\\n\") == \"3\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 2') == '14500000001'\nassert solution('5 4 3') == '11131310001'\nassert solution('5 4 3') == '11131310001'\nassert solution('5 5 5') == '111000110011100101011'\nassert solution('100 100 100') == '49999999999999999999999999999999999999999999999'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2\\n'\nassert solution('5\\n1 4\\n3 7\\n1 6\\n2 6\\n3 6') == '0\\n1\\n2\\n3\\n4\\n'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 3') == '2'\nassert solution('10 2') == '9'\nassert solution('100 1') == '99'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0\\n1\\n1\\n2\\n'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4') == '0'\nassert solution('3 7') == '1'\nassert solution('1 6') == '1'\nassert solution('2 6') == '2'\nprint(solution(input()))\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 4\n3 7\n1 6\n2 6\n''') == '2'\nassert solution('''\n10\n2 2\n4 4\n1 2\n5 5\n7 7\n2 2\n1 2\n8 8\n3 4\n''') == '3'\nassert solution('''\n20\n1 1\n3 3\n1 1\n5 5\n7 7\n2 2\n1 2\n8 8\n3 4\n''') == '6'\nassert solution('''\n20\n1 1\n3 3\n1 1\n5 5\n7 7\n2 2\n1 2\n8 8\n3 4\n''') == '5'\nassert solution('''\n20\n1 1\n3 3\n1 1\n5 5\n7 7\n2 2\n1 2\n8 8\n3 4\n''') == '4'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 4\n3 7\n1 6\n2 6\n''') == '2'\nassert solution('''\n1 10\n10 4\n10 8\n6 6\n4 4\n5 8\n1 6\n1 3\n8 8\n''') == '1'\nassert solution('''\n2 7\n3 5\n5 7\n2 8\n2 6\n3 8\n3 4\n4 6\n4 8\n''') == '2'\nassert solution('''\n10 10\n1 2\n2 3\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '10'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 2\n3 5\n''') == '0'\nassert solution('''\n4\n1 4\n2 3\n2 4\n''') == '1'\nassert solution('''\n3\n3 5\n2 4\n''') == '1'\nassert solution('''\n10\n1 2\n3 5\n2 4\n5 6\n5 7\n1 4\n2 3\n4 5\n2 6\n5 6\n''') == '0'\nassert solution('''\n6\n2 2\n1 3\n4 4\n1 4\n1 4\n2 4\n''') == '1'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '0'\nassert solution('10') == '0'\nassert solution('100') == '4'\nassert solution('100000') == '0'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 4\n3 7\n1 6\n2 6\n''') == '2'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 3 4\") == \"1\""
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '3600'\nassert solution('2 3') == '3200'\nassert solution('4 5 500') == '4500'\nassert solution('1 4 300') == '4000'\nassert solution('3 5 300') == '3000'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '3300'\nassert solution('1 2 1000') == '1300'\nassert solution('1 4 300') == '300'\nassert solution('1 2 1000') == '1300'\n\n\"\"\"\n\nimport unittest\nimport os\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"3100\"\nassert solution(\"6 3\") == \"3000\"\nassert solution(\"6 2\") == \"1250\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '3100'\nassert solution('1 1') == '1'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    3 5 300\n    '''\n) == \"3100\"\nassert solution(\n    '''\n    5 3\n    1 2 1000\n    2 3 1000\n    4 5 500\n    2\n    1 4 300\n    3 5 300\n    1 2 500\n    2 3 500\n    2 4 100\n    3 5 500\n    3 1 2\n    '''\n) == \"3490\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"30100\"\nassert solution(\"10 4\") == \"18000\"\nassert solution(\"10 2\") == \"9000\""
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''10 4\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3880'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 4 1000\n2 3 1000\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n6 5 500\n2 4 1000\n1 3 1000\n2\n3 4 300\n1\n4 5 400\n''') == '3600'\nassert solution('''\n1 4 500\n1 5 1000\n2 3 1000\n3\n4 5 300\n''') == '4000'\n'''\n    Explanation:\n    Given flight connection in the list:\n        1 4 1000\n        2 3 1000\n        2\n        1 4 300\n        3 5 300\n    And flights that can be taken:\n        1 4 300\n        3 5 300\n    We can make all the reviews and return to Stockholm. Thus, the answer is:\n        3100\n'''\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n2\\n4\\n') == \"5.25\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"5.25\""
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"5.250000000\"\nassert solution(\"5 2\") == \"4.50000000\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2\\n4 5\\n7 5\\n2 5\\n2 9') == '5.25'\nassert solution('5 5\\n1 6\\n7 5\\n3 3\\n5 5') == '3.75'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '5.250000000'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1.5\"\nassert solution(\"3 4\") == \"2\""
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3\\n2 2') == '1.50000000'\nassert solution('1 3\\n1 1\\n1 4\\n1 5\\n1 3') == '1.50000000'\nassert solution('1 6\\n2 5\\n2 5\\n1 5') == '2.5000000'\nassert solution('1 6\\n2 5\\n1 5\\n1 7') == '2.5000000'\nassert solution('1 1\\n1 2') == '2.5000000'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n10 10\\n1 1\\n2 2\\n5 5') == '5.25000000000'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n1 8\n6 5\n2 5\n2 9\n7 13\n''') == '5.25'\nassert solution('''\n10 20\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19 20\n21 22 23 24 25 26 27 28 29 30\n31 32 33 34 35 36 37 38 39 40\n41 42 43 44 45 46 47 48 49 50\n51 52 53 54 55 56 57 58 59 60\n61 62 63 64 65 66 67 68 69 70\n71 72 73 74 75 76 77 78 79 80\n''') == '2.0000000000000001'\n'''\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\") == \"5.250000000\"\nassert solution(\"2 5\") == \"3.805555556\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 1 2 1 1\\n5\\n1 3 1 2 3') == '2'\nassert solution('7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n5 2 1 2') == '2'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '0'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n5 2 1 2\n6 2 1 2\n7 2 1 2\n''') == '7\\n2\\n0\\n4\\n5\\n4\\n'\n\nassert solution('''1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n5 2 1 2\n6 2 1 2\n7 2 1 2\n''') == '7\\n2\\n0\\n4\\n5\\n4\\n'\n\nassert solution('''\n20\n1 2 1 3 1 3 2 2 4 1 2 1 2 3 1 4 1 4\n3\n1 1 1 1 2\n1 1 1 2\n1 1 1 2\n1 1 1 2\n1 2 1 1\n1 2 1 2\n1 2 1 1\n1 2 1 2\n''') == '3\\n2\\n1\\n3\\n4\\n'\n\nassert solution('''\n15\n1 2 1 3 1 2 1 1 2 3 2 2 1 2 1 2 3 3 1 1 2 1 2 3\n2\n1 2 1 2 1 2 1 2 1 2 3\n1 2 1 2 1 2 1 2 1 2 3\n2 3 1 2 1 2 1 2 1 2 3\n3 2 1 2 1 2 1 2 1 2 3\n4 2 1 2 1 2 1 2 1 2 3\n5 2 1 2 1 2 1 2 1 2 3\n6 2 1 2 1 2 1 2 1 2 3\n7 2 1 2 1 2 1 2 1 2 3\n8 2 1 2 1 2 1 2 1 2 3\n9 2 1 2 1 2 1 2 1 2 3\n10 2 1 2 1 2 1 2 1 2 3\n11 2 1 2 1 2 1 2 1 2 3\n12 2 1 2 1 2 1 2 1 2 3\n13 2 1 2 1 2 1 2 1 2 3\n14 2 1 2 1 2 1 2 1 2 3\n15 2 1 2 1 2 1 2 1 2 3\n16 2 1 2 1 2 1 2 1 2 3\n17 2 1 2 1 2 1 2 1 2 3\n18 2 1 2 1 2 1 2 1 2 3\n19 2 1 2 1 2 1 2 1 2 3\n20 2 1 2 1 2 1 2 1 2 3\n''') == '''6\\n2\\n1\\n3\\n4\\n'''\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 1 2 1 1') == '7'\nassert solution('1 2 3 1 2 1 1 1 2 2 3') == '7'\nassert solution('1 2 3 1 2 1 1 1 2 2 3 2 1 2 3 1') == '7'\nassert solution('1 2 3 1 2 1 1 1 2 2 3 2 1 2 3 1') == '7'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 1 2 1 1') == '7'\nassert solution('1 2 3 1 2 1 1') == '7'\nassert solution('1 2 3 1 2 1 1') == '7'\nassert solution('1 2 3 1 2 1 1') == '7'\nassert solution('1 2 3 1 2 1 1') == '7'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 1 2 1 1') == '7'\nassert solution('5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n') == '2'\nassert solution('6\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n5 2 1 2\n6 2 1 2\n') == '4'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\") == \"2\"\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))\nq = int(input())\nsubset = []\nfor i in range(q):\n    subset = list(map(int, input().split()))\n\nmax_seq = 1\nfor i in subset:\n    max_seq = max(max_seq, longest_consecutive(i, arr, subset))\n\nprint(max_seq)\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4\\n'\nassert solution('''\n7\n1 1 1 1 1 1 1\n5\n1 2 2 1 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n2\\n2\\n4\\n'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5\n2 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n2\n1\n2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n5\n1\n2\n3\n4\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == '7\\n2\\n1\\n4\\n0'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '4'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nprint(solution('''\n3\n-10.12 -5.62 0.98\n0.42 0.28 0.1\n-0.3 0.26 0.21\n'''))"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2''') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n1 2\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n1\n1 4\n\"\"\") == \"1 4\"\nassert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n5\n1 2 3 5\n\"\"\") == \"3 5 1 2\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4\\n2 1 4 3\"\n    ) == \"2 3 4 1\"\n\nassert solution(\n    \"20\\n1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"\n
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '3 4 2 1'\n\nassert solution('''\n10\n4 1 3 6 7 4 5 2 5 6 2 3 6 4 4 5\n''') == '4 3 6 7 5 2 5 4 4 1 6 2'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 3 1 5\n''') == '1 5 2 3 4'\nassert solution('''\n5\n1 2 3 4 5\n3 5 2 1 4\n''') == '2 4 3 1 5'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1 4 3\\n') == '2 3 1 4'\n\"\"\"\n\nn = int(input())\na = list(map(int,input().split()))\n\nfor i in range(len(a)):\n    m = i\n    for j in range(i+1,len(a)):\n        if a[j]<a[m]:\n            m = j\n    if i!=m:\n        a[i],a[m] = a[m],a[i]\n\nprint(\" \".join(list(map(str,a))))\n\n\n\"\"\""
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n10\n3 1 5 2 4 6 7 8 9 10\n\"\"\") == \"1 3 4 2 5 6 7 8 9 10\"\nassert solution(\"\"\"\n100\n4 1 5 2 4 6 7 8 9 10\n\"\"\") == \"4 1 5 2 6 7 8 9 10\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"1 3 4 2 5\"\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3 4') == '1 2 3 4'\nassert solution('1 2 3 4 5 6 7 8') == '1 2 3 4 5 6 7 8'\nassert solution('2 4 5 3 1') == '2 4 5 3 1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'\nprint('all tests passed')\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\", \"Test 1 (empty string): Empty list\"\nassert solution(\"2 1 4 3\") == \"2 3 4 1\", \"Test 2 (three Gagglers): One Gaggler has two previous mentors\"\nassert solution(\"2 1 4 3 4\") == \"4 1 2 3\", \"Test 3 (three Gagglers): One Gaggler has two previous mentors\"\nassert solution(\"2 1 4 3 4 3\") == \"3 4 1 2 3\", \"Test 4 (three Gagglers): One Gaggler has two previous mentors\"\nassert solution(\"4 4 2 2 3\") == \"4 3 2 1\", \"Test 5 (four Gagglers): One Gaggler has three previous mentors\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10\n1 4 5 3 2 2 2 2 2 2\n\"\"\") == \"1 3 4 5 2 2 2 2 2\"\nassert solution(\"\"\"\n2\n2 1 3\n\"\"\") == \"1 3 2\"\nassert solution(\"\"\"\n2\n2 4 1\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n3\n1 2 5 3\n\"\"\") == \"2 1 3\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 1 4 3') == '2 3 4 1'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('5\\n1 2\\n3 3\\n4 4\\n1 2\\n3 2\\n5 2') == '9.0'\nassert solution('4\\n1 2\\n3 4\\n2 3\\n3 2\\n4 2') == '5.4721359551056'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 2') == '7.656854249492381'\nassert solution('1\\n1 3') == '7.656854249492381'\nassert solution('2\\n1 2') == '7.656854249492381'\nassert solution('2\\n1 3') == '7.656854249492381'\nassert solution('3\\n1 2') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"4\\n3 3\\n2 2\\n1 2\\n1 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"4\\n3 3\\n2 2\\n1 2\\n1 2\\n2 1\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\nassert solution('''\n10\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n4 4\n4 3\n4 2\n3 1\n''') == '13.416856464181596'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n2 3\") == \"7.656854249492381\"\nassert solution(\"4\\n1 2 3 4 5\\n2 4 5 1 3\\n2 3 6 5 4\\n3 1 4 5 2\\n3 2 4 1 5\\n3 3 5 4 2\\n3 4 1 5 2\\n3 5 6 4 3\\n3 6 5 4 2\\n3 7 5 4 3\\n3 8 5 2 5\\n3 9 5 4 3\\n3 10 5 2 5\\n3 11 5 4 3\\n3 12 5 4 3\\n3 13 5 4 3\\n4 2 4 5 5\\n4 2 1 5 4\\n4 3 6 5 4\\n4 6 2 1 4\\n4 6 3 1 5\\n4 6 4 2 1\\n4 6 5 3 1\\n4 7 6 5 4\\n4 8 6 5 4\\n4 9 6 5 4\\n4 10 6 5 4\\n4 11 6 5 4\\n4 12 6 5 4\\n5 2 4 5 5\\n5 2 5 4 5\\n5 3 6 5 5\\n5 3 6 4 5\\n5 3 7 5 5\\n5 3 8 5 5\\n5 3 9 5 5\\n5 3 10 5 5\\n5 3 11 5 5\\n5 3 12 5 5\\n5 4 2 4 5\\n5 4 1 2 4\\n5 4 3 6 5\\n5 4 4 2 1 5\\n5 4 4 3 1 5\\n5 4 5 2 1 5\\n5 4 5 3 1 5\\n5 4 6 2 1 5\\n5 4 6 3 1 5\\n5 4 7 2 1 5\\n5 4 7 3 1 5\\n5 4 8 2 1 5\\n5 4 8 3 1 5\\n5 4 9 2 1 5\\n5 4 9 3 1 5\\n5 4 10 2 1 5\\n5 4 10 3 1 5\\n5 5 2 4 4 5\\n5 5 1 2 4 5\\n5 5 2 3 4 5\\n5 5 3 2 4 5\\n5 5 3 3 4 5\\n5 5 3 4 2 4\\n5 5 4 1 2 4\\n5 5 4 3 2 4\\n5 5 4 4 2 4\\n5 5 4 5 2 4\\n5 5 5 2 1 4\\n5 5 5 3 1 4\\n5 5 5 4 1 4\\n5 6 2 3 4 5\\n5 6 2 4 5 5\\n5 6 2 5 5 5\\n5 6 3 2 5 5\\n5 6 3 3 5 5\\n5 6 3 4 5 5\\n5 6 3 5 5 5\\n5 6 4 2 5 5\\n5 6 4 3 5 5\\n5 6 4 4 5 5\\n5 6 4 5 2 5\\n5 6 5 2 3 5\\n5 6 5 3 2 5\\n5 6 5 4 2 5\\n5 6 5 5 2 5\\n5 6 6 2 3 5\\n5 6 6 3 2 5\\n5 6 6 4 2 5\\n5 7 2 3 4 5\\n5 7 2 4 5 5\\n5 7 2 5 5 5\\n5 7 3 2 5 5\\n5 7 3 3 5 5\\n5 7 3 4 5 5\\n5 7 3 5 2 5\\n5 7 4 2 5 5\\n5 7 4 3 5 5\\n5 7 4 4 5 5\\n5 7 4 5 2 5\\n5 7 5 2 3 5\\n5 7 5 3 2 5\\n5 7 5 4 2 5\\n5 7 5 5 2 5\\n5 8 2 3 4 5\\n5 8 2 4 5 5\\n5 8 2 5 5 5\\n5 8 3 2 5 5\\n5 8 3 3 5 5\\n5 8 3 4 5 5\\n5 8 3 5 2 5\\n5 8 4 2 5 5\\n5 8 4 3 5 5\\n5 8 4 4 5 5\\n5 8 4 5 2 5\\n5 8 5 2 3 5\\n5 8 5 3 2 5\\n5 8 5 4 2 5\\n5 9 2 3 4 5\\n5 9 2 4 5 5\\n5 9 2 5 5 5\\n5 9 3 2 5 5\\n5 9 3 3 5 5\\n5 9 3 4 5 5\\n5 9 3 5 2 5\\n5 9 4 2 5 5\\n5 9 4 3 5 5\\n5 9 4 4 5 5\\n5 9 4 5 2 5\\n5 9 5 2 3 5\\n5 9 5 3 2 5\\n5 9 5 4 2 5\\n6 2 3 4 5 5\\n6 2 3 5 5 5\\n6 2 4 5 5 5\\n6 2 4 5 4 5\\n6 2 5 4 5 5\\n6 2 5 5 4 5\\n6 2 6 4 5 5\\n6 2 6 5 4 5\\n6 2 7 4 5 5\\n6 2 7 5 4 5\\n6 2 8 4 5 5\\n6 2 8 5 4 5\\n6 3 2 4 5 5\\n6 3 2 5 5 5\\n6 3 3 2 5 5\\n6 3 3 3 5 5\\n6 3 3 4 5 5\\n6 3 3 5 4 5\\n6 3 4 2 5 5\\n6 3 4 3 5 5\\n6 3 4 4 5 5\\n6 3 4 5 2 5\\n6 3 5 2 3 5\\n6 3 5 3 2 5\\n6 3 5 4 2 5\\n6 3 5 5 2 5\\n6 4 2 3 4 5\\n6 4 2 4 5 5\\n6 4 2 5 5 5\\n6 4 3 2 5 5\\n6 4 3 3 5 5\\n6 4 3 4 5 5\\n6 4 3 5 2 5\\n6 4 4 2 5 5\\n6 4 4 3 5 5\\n6 4 5 2 3 5\\n6 4 5 3"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n2 3\\n3 2\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\nassert solution('''\n4\n1 2\n2 3\n3 4\n3 2\n3 1\n''') == '5.361961387457957'\nassert solution('''\n2\n1 2\n1 3\n''') == '2'\nassert solution('''\n2\n1 2\n1 3\n''') == '1.8968773473448276'\nassert solution('''\n3\n1 2\n2 1\n3 4\n3 2\n2 3\n''') == '3.7734375'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n\"\n) == \"7.656854249492381\"\nassert solution(\n    \"6\\n-4 -4\\n-4 -4\\n-4 -4\\n-4 -4\\n-4 -4\\n-4 -4\\n\"\n) == \"10.724687830395663\"\nassert solution(\n    \"6\\n5 5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n\"\n) == \"7.656854249492381\"\nassert solution(\n    \"6\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n\"\n) == \"8.06389488374327\"\nassert solution(\n    \"6\\n2 2\\n2 1\\n2 1\\n2 1\\n2 1\\n2 1\\n\"\n) == \"6.396463016978584\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 3') == '2'\nassert solution('5 5 5') == '1'\nassert solution('5 4 3') == '0'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''10 5 3\n0 0\n1 1\n2 2\n2 2\n1 3\n2 3\n2 3\n3 2\n4 4\n4 4\n0 0\n1 1\n2 2\n3 3\n3 3\n2 2\n3 2\n1 2\n2 3\n3 2\n0 0\n0 3\n1 4\n2 2\n1 4\n1 4\n0 2\n0 2\n0 3\n1 4\n2 4\n1 4''') == '2'\nassert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\nSample Output:\n4''') == '4'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3\") == \"2\"\nassert solution(\"2 2\") == \"1\""
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '2'\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n1 2\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '0'\nassert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '1'"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '2'\nassert solution('1\\n2\\n0\\n3\\n0\\n2\\n0\\n1\\n0\\n1\\n1\\n0\\n2\\n0\\n') == '1'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution(\"\") == \"0\"\nassert solution(\"3 5 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\n\nassert solution('''\n3 1 3\n0 0\n1 4\n3 3\n3 0\n''') == '1'\n\nassert solution('''\n5 5 3\n0 0\n0 3\n1 1\n2 2\n0 2\n1 3\n0 1\n1 4\n3 4\n3 3\n''') == '1'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\"\"\") == \"2\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '9'\nassert solution('1 2') == '3'\nassert solution('2 1') == '3'\nassert solution('2 2') == '5'"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"9\"\nassert solution(\"8 6\") == \"37\"\nassert solution(\"7 10\") == \"238\"\nassert solution(\"10 0\") == \"10\"\nassert solution(\"10 2\") == \"12\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '9'\nassert solution('1 2') == '9'\nassert solution('2 1') == '8'\nassert solution('2 2') == '8'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '9'\nassert solution('1 5') == '1'\nassert solution('10 3') == '6'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"5 1\") == \"3\"\nassert solution(\"7 1\") == \"0\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '9'\nassert solution('1 100') == '99'\nassert solution('100 10') == '10'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"2 2\") == \"4\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"9\"\n\"\"\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '9'\nassert solution('2 2') == '12'\nassert solution('2 3') == '21'\nassert solution('2 4') == '34'\nassert solution('2 5') == '55'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '9'\nassert solution('5 3') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12\\n') == '12'\nassert solution('9\\n-2\\n-2\\n-3\\n4\\n-1\\n1\\n-4\\n7\\n') == '7'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2\n5\n7\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n6\n5\n9\n8\n7\n10\n5\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n8\n1\n5\n6\n7\n3\n5\n8\n9\n10\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n2\n3\n1\n5\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n1\n5\n\"\"\") == \"1\""
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"4\") == \"12\"\nassert solution(\"3\") == \"12\"\nassert solution(\"2\") == \"12\"\nassert solution(\"1\") == \"12\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2\n3\n5\n7\n12\nSample Output:\n12\n''') == '12'\n\nassert solution('''\n10\n7\n1\n10\n2\n4\n8\n15\n6\n12\n13\n9\n''') == '8'\n\nprint('solution is done!')\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n5\\n7\\n12') == '12'\nassert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n') == ''\nassert solution('5\\n2\\n3\\n5\\n7\\n12\\n') == ''"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n5\\n7\\n12') == '12'\nassert solution('5\\n2\\n3\\n5\\n7\\n12') == ''\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '', '1+1+1'\nassert solution('6') == '', '1+1+2'\nassert solution('8') == '', '1+1+3'\nassert solution('10') == '', '1+2+3'\nassert solution('12') == '', '1+2+4'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n4\n-5\n2\n-7\n10\n\"\"\") == \"12\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n{\n    4\n    1\n    2\n    3\n    5\n}\n{\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n}\n{\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n}\n''') == '11'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"5\"\nassert solution(\"5\") == \"5\"\nassert solution(\"7\") == \"12\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0\" * 20000) == \"111\"\nassert solution(\"1\" * 20000) == \"11\"\nassert solution(\"0\" * 20000 + \"1\" * 20000) == \"11\"\nassert solution(\"00\" * 20000) == \"11\"\nassert solution(\"10\" * 20000) == \"11\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '100'\nassert solution('4') == '100'\nassert solution('3') == '110'\nassert solution('2') == '111'\nassert solution('1') == '110'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111''') == '111'\nassert solution('''3\n00\n01\n10''') == '10'\nassert solution('''2\n00\n10''') == '-1'\n\"\"\""
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == '11', \"Wrong\"\nassert solution('5\\n00\\n01\\n10\\n110\\n111\\n111') == '11', \"Wrong\"\nassert solution('5\\n01\\n10\\n11\\n110\\n111\\n111') == '11', \"Wrong\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '1'\nassert solution('1000000000') == '1111111111'\nassert solution('01010000') == '0101'\nassert solution('000111') == '00011'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '11'\nassert solution('100') == '100'\nassert solution('1') == '0'\nassert solution('10001') == '10001'\nassert solution('10000111') == '10000111'"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111''') == '10'\n\nassert solution('''5\n00\n01\n10\n110\n111''') == '10'\n\nassert solution('''2\n00\n00''') == '00'\n\nassert solution('''2\n00\n00''') == '00'\n\nassert solution('''3\n00\n00\n00''') == '00'"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"-1\"\nassert solution(\"5\") == \"01\"\nassert solution(\"7\") == \"010\"\nassert solution(\"13\") == \"0001010101\"\nassert solution(\"17\") == \"100010110001\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == -1\nassert solution(\"01\") == \"01\"\nassert solution(\"111\") == \"111\"\nassert solution(\"010010\") == \"10\"\nassert solution(\"111110111\") == \"11\"\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5\n00\n01\n10\n110\n111\n\"\"\") == \"11\"\nassert solution(\"\"\"8\n001100010001011101110111010011\n01011000100010111011101110100\n000100010111011101110111010011\n11010011000100010111011101110100\n000100010111011101110111010011\n11010011000100010111011101110100\n01110111011101110111011101001101\n01110111011101110111011101001101\n11010011000100010111011101110100\n000100010111011101110111010011\n000100010111011101110111010011\n11010011000100010111011101110100\n000100010111011101110111010011\n000100010111011101110111010011\n11010011000100010111011101110100\n01110111011101110111011101001101\n01110111011101110111011101001101\n11010011000100010111011101110100\n000100010111011101110111010011\"\"\") == \"11\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"100 250 320\"\nprint(\"Congratulations! All test cases passed!\")\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"100 250 320\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n20 100\n100 10''') == '100 250 320'\nassert solution('''5\n2\n20 100\n100 10\n1\n150 50\n1\n150 100''') == '100 250 320 100 150 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '100 250 320'\nassert solution('3') == '200 400 500 600'\nassert solution('5') == '200 400 400 400 100'\n\"\"\"\nfrom collections import defaultdict\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n20 100\\n100 10\\n1') == '100 250 320'\nassert solution('3\\n2\\n20 100\\n100 10\\n1') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n20 100\n100 10\n1\n150 50\n1''') == '100 250 320'\nassert solution('''5\n10 100\n50 10\n20 20\n10 10\n10 100''') == '10 10 10 100'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n3\n3\n30 50\n50 20\n1\n40 60\n1\n60 30\nSample Output:\n30 50\n100 80\n''') == '100 80'"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n1\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n1\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n1\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '100 250 320'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('80 50') == '3 7 2 15'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n50 100\n''') == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('10 0') == '1 2 3 4 5 6 7 8 9'\nassert solution('10 1') == '1 2 3 4 5 6 7 8 9'\nassert solution('10 2') == '1 2 3 4 5 6 7 8 9'\nassert solution('10 3') == '1 2 3 4 5 6 7 8 9'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''50 100''') == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n50 100\n''') == '3 7 4 6 5 7 2 15 2'\nassert solution('''\n50 200\n''') == '3 7 4 6 5 7 2 15 2'\nassert solution('''\n100 200\n''') == '3 7 4 6 5 7 2 15 2'\nassert solution('''\n1000 200\n''') == '3 7 4 6 5 7 2 15 2'\nassert solution('''\n50 100\n''') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''80 8''') == '9 2 7 5 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n2 1\\n3 1') == '40.0000000000'\nassert solution('5\\n-4 2\\n-1 5\\n-2 1\\n-3 2\\n1 0') == '39.0000000000'\nassert solution('3\\n0 0\\n0 14\\n15 14\\n15 0\\n3\\n8 3\\n4 6\\n7 10\\n11 7\\n') == '40.0000000000'"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '41.0000000000'\nassert solution('''\n3\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '41.0000000000'\nassert solution('''\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '41.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == '40.0000000000'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n2 1\\n3 1\\n4 1\\n5 1\\n6 0\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n\\n1\\n0 0\\n0 1\\n1 0\\n2 1\\n3 1\\n4 1\\n5 1\\n6 0\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n\\n1\\n0 0\\n0 1\\n1 0\\n2 1\\n3 1\\n4 1\\n5 1\\n6 0\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43 1\\n44 1\\n45 1\\n46 1\\n47 1\\n48 1\\n49 1\\n50 1\\n51 1\\n52 1\\n53 1\\n54 1\\n55 1\\n56 1\\n57 1\\n58 1\\n59 1\\n60 1\\n61 1\\n62 1\\n63 1\\n64 1\\n65 1\\n66 1\\n67 1\\n68 1\\n69 1\\n70 1\\n71 1\\n72 1\\n73 1\\n74 1\\n75 1\\n76 1\\n77 1\\n78 1\\n79 1\\n80 1\\n81 1\\n82 1\\n83 1\\n84 1\\n85 1\\n86 1\\n87 1\\n88 1\\n89 1\\n90 1\\n91 1\\n92 1\\n93 1\\n94 1\\n95 1\\n96 1\\n97 1\\n98 1\\n99 1\\n100 1\\n\\n1\\n0 0\\n0 1\\n1 0\\n2 1\\n3 1\\n4 1\\n5 1\\n6 0\\n7 1\\n8 1\\n9 1\\n10 1\\n11 1\\n12 1\\n13 1\\n14 1\\n15 1\\n16 1\\n17 1\\n18 1\\n19 1\\n20 1\\n21 1\\n22 1\\n23 1\\n24 1\\n25 1\\n26 1\\n27 1\\n28 1\\n29 1\\n30 1\\n31 1\\n32 1\\n33 1\\n34 1\\n35 1\\n36 1\\n37 1\\n38 1\\n39 1\\n40 1\\n41 1\\n42 1\\n43"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n') == '40.0000000000'\nassert solution('3\\n0 0\\n0 10\\n10 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7\\n') == '83.3333333333'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n0 0\n0 14\n15 14\n15 0\n''') == '40.0000000000'\nassert solution('''\n2\n0 0\n0 14\n15 14\n15 0\n''') == '40.0000000000'\nassert solution('''\n2\n0 0\n0 0\n0 0\n''') == '0.0000000000'\nassert solution('''\n1\n0 0\n0 0\n''') == '40.0000000000'\nassert solution('''\n3\n0 0\n0 0\n0 0\n''') == '0.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 3\\n4 2\\n4 4\\n3\\n0 1\\n1 0\\n\") == \"1.0\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n3 0\\n0 14\\n1 14\\n14 0\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == '40.0000000000'\nassert solution('2\\n2 1\\n2 1\\n2 1') == '1.0'\nassert solution('1\\n100000\\n100000\\n1\\n') == '1.0'\n\"\"\"\n\nfrom collections import deque\nimport unittest"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n0 0\n0 14\n15 14\n15 0\n3\n8 3\n4 6\n7 10\n11 7''') == '40.0000000000', solution.__doc__\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''\n3\n0 0\n1 2\n3 4\n4 5\n5 6\n6 7\n8 9\n10 11\n''') == '8.0000000000'\nassert solution('''\n1\n0 0\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3.0000000000'\nassert solution('''\n5\n0 0\n1 2\n2 3\n3 4\n4 5\n5 6\n7 8\n''') == '7.0000000000'\nassert solution('''\n4\n0 0\n1 2\n2 3\n3 4\n4 5\n5 6\n7 8\n10 11\n''') == '0.0000000000'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\\n1\"\nassert solution(\"3\") == \"1\\n1\\n2\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n3\n2 1 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n2 1 3') == '2'\n\nassert solution('1\\n4\\n1 2 3 4') == '1'"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 1 3') == '1'\nassert solution('5\\n3 1 2 4 3') == '1'\nprint('Congratulations! All tests are done!')"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3\\n4') == '1'\nassert solution('1\\n3\\n2 4\\n3') == '2 1'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 1 3\n''') == '1'\nassert solution('''\n2\n2 1 4\n''') == '0'\nassert solution('''\n3\n1 2 4\n''') == '1'\nassert solution('''\n3\n1 2 3\n''') == '2'\nassert solution('''\n3\n1 2 3\n''') == '0'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n3\n2 1 3\n''') == '2'\nassert solution(\n'''\n4\n2 1 2 3\n''') == '1'\n\n'''"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n3\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n3\n5 2 1 1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1\n5 2 1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n3\n5 2 1 1 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 1 3\n''') == '1'\nassert solution('''\n4\n3 1 4 2\n''') == '1,2,3,4'\nassert solution('''\n4\n1 3 4 2\n''') == '1,2,3,4'\nassert solution('''\n6\n1 2 1 1 1 2\n''') == '1,2,1,2'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5.0 1.5\n1.0 1.1\n3.5 1.1\n5.0 2.2\n6.0 2.5\n''') == '199 162'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0.00 1.71 0.00 2.38\n''') == 'none'\nassert solution('''\n325.00 1.00 2.00\n''') == 'none'\nassert solution('''\n0.00 1.71 2.38\n''') == 'none'\nassert solution('''\n0.00 0.00 2.38\n''') == 'none'\nassert solution('''\n0.00 2.38 0.00\n''') == 'none'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\nassert solution('555.00 1.00 5.00') == 'None'\nprint(solution(input()))\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"100.00 1.00 2.00\") == \"100 200\"\nassert solution(\"250.00 1.00 2.00\") == \"250 2\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '199 162'\nassert solution([7.25, 1.71, 2.38]) == '199 162'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n73.00 8.00 2.00\n72.00 7.00 7.00\n''') == '199 162'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n100.00 1.71 2.38\n250.00 2.31 3.21\n300.00 3.31 3.21\n400.00 3.71 4.30\n450.00 5.00 6.30\n600.00 6.00 6.30\n750.00 6.30 6.00\n900.00 6.30 6.00\n1000.00 6.30 6.00\n1100.00 6.30 6.00\n1200.00 6.30 6.00\n1300.00 6.30 6.00\n''') == '199 162\\n'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0.00 0.00 1.71 2.38\") == \"0 2\"\nassert solution(\"325.75 4.00 1.71 2.38\") == \"0 2\"\nassert solution(\"200.00 2.00 1.71 2.38\") == \"0 1\"\nassert solution(\"0.00 2.00 1.71 2.38\") == \"0 1\"\nassert solution(\"0.00 2.00 0.00 2.00\") == \"1 1\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('725.85 1.71 2.38') == '199 162'\nassert solution('10.90 2.15 6.35 9.80 7.55 9.80 7.95 8.95 8.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95 7.95"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"5 3\\n3 1 -1\\n1 3 2\\n2 1 1\\n3 3 0\") == \"10\"\nassert solution(\"4 4\\n3 1 -1\\n1 3 2\\n1 2 3\\n3 1 -1\") == \"4\""
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0\n''') == '16'\nprint('All tests passed!')"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n-1\n2\n1\n0\n1\n0\n0\n1\n3\n0\n3\n''') == '16'\nassert solution('''\n100\n-1\n2\n1\n0\n1\n0\n0\n1\n3\n0\n3\n''') == '42'\nassert solution('''\n1000\n-1\n2\n1\n0\n1\n0\n0\n1\n3\n0\n3\n''') == '4596'\nassert solution('''\n1000\n1\n-2\n-1\n1\n0\n0\n0\n1\n3\n0\n3\n''') == '14'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"16\"\nassert solution(\"3 3\") == \"18\"\nassert solution(\"3 5\") == \"12\"\nassert solution(\"3 1\") == \"7\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"16\"\nprint(solution())"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '16'\nassert solution('10 1') == '6'\nassert solution('10 0') == '10'"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"16\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0''') == '16'"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\"\nassert solution(\"5 4\\n-1 2 -1\\n-1 3 4\\n1 -1 -1\\n-1 -1 -1\\n3 4 1\") == \"10\"\nassert solution(\"5 2\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"20\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16\\n', 'Should cover the largest sum possible'\nassert solution('10 3\\n0 0 0\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n9 9 9') == '18\\n', 'Should cover the largest sum possible'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\") == \"2 1 4\"\n\nprint(solution('''1\nO 2\nO 1\n1 2\n2 1\n1 1\n1 2'''))\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\nO 1\\nE 1\\nI 5\\nI 2\\nI 2\") == \"2 1 5\"\n\"\"\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    O 3\n    I 1\n    O 7\n    I 3\n    O 1\n    I 2\n    O 4\n    I 7\n    O 2\n    I 8\n    O 9\n    I 6\n    O 5\n    I 7\n    O 8\n    I 9\n    O 9\n    I 2\n    O 9\n    I 6\n    O 5\n    I 8\n    O 8\n    I 7\n    O 7\n    I 5\n    O 6\n    I 4\n    O 9\n    I 3\n    O 4\n    I 5\n    O 3\n    I 1\n    O 2\n    I 7\n    O 5\n    I 9\n    O 1\n    I 1\n    O 7\n    I 6\n    O 2\n    I 1\n    O 6\n    I 2\n    O 1\n    I 9\n    O 2\n    I 6\n    O 9\n    I 9\n    O 9\n    I 4\n    O 3\n    I 7\n    O 8\n    I 2\n    O 1\n    I 9\n    O 1\n    I 3\n    O 2\n    I 8\n    O 8\n    I 5\n    O 6\n    I 2\n    O 4\n    I 5\n    O 8\n    I 1\n    O 3\n    I 2\n    O 7\n    I 5\n    O 2\n    I 6\n    O 4\n    I 3\n    O 7\n    I 3\n    O 3\n    I 1\n    O 6\n    I 1\n    O 6\n    I 7\n    O 5\n    I 2\n    O 6\n    I 4\n    O 7\n    I 5\n    O 7\n    I 3\n    O 4\n    I 7\n    O 8\n    I 2\n    O 7\n    I 8\n    O 6\n    I 2\n    O 3\n    I 7\n    O 9\n    I 1\n    O 5\n    I 8\n    O 6\n    I 7\n    O 6\n    I 5\n    O 8\n    I 6\n    O 8\n    I 5\n    O 7\n    I 9\n    O 7\n    I 3\n    O 6\n    I 3\n    O 1\n    I 9\n    O 1\n    I 5\n    O 2\n    I 9\n    O 6\n    I 3\n    O 1\n    I 5\n    O 3\n    I 4\n    O 9\n    I 5\n    O 2\n    I 8\n    O 2\n    I 7\n    O 4\n    I 1\n    O 4\n    I 4\n    O 2\n    I 2\n    O 8\n    I 9\n    O 8\n    I 9\n    O 1\n    I 1\n    O 5\n    I 2\n    O 2\n    I 4\n    O 5\n    I 8\n    O 9\n    I 5\n    O 6\n    I 4\n    O 4\n    I 7\n    O 1\n    I 3\n    O 4\n    I 8\n    O 4\n    I 3\n    O 4\n    I 7\n    O 2\n    I 9\n    O 6\n    I 4\n    O 6\n    I 2\n    O 6\n    I 1\n    O 8\n    I 4\n    O 6\n    I 4\n    O 7\n    I 5\n    O 8\n    I 2\n    O 5\n    I 6\n    O 7\n    I 5\n    O 4\n    I 7\n    O 4\n    I 7\n    O 9\n    I 7\n    O 2\n    I 7\n    O 2\n    I 1\n    O 5\n    I 2\n    O 3\n    I 3\n    O 4\n    I 9\n    O 5\n    I 7\n    O 7\n    I 2\n    O 6\n    I 2\n    O 3\n    I 5\n    O 4\n    I 3\n    O 7\n    I 9\n    O 1\n    I 5\n    O 2\n    I 9\n    O 4\n    I 9\n    O 4\n    I 5\n    O 4\n    I 2\n    O 8\n    I 5\n    O 4\n    I 4\n    O 5\n    I 1\n    O 4\n    I 4\n    O 2\n    I 9\n    O 7\n    I 5\n    O 8\n    I 2\n    O 6\n    I 6\n    O 2\n    I 8\n    O 1\n    I 9\n    O 2\n    I 3\n    O 4\n    I 1\n    O 3\n    I 3\n    O 6\n    I 1\n    O 9\n    I 3\n    O 1\n    I 7\n    O 5\n    I 4\n    O 1\n    I 1\n    O 7\n    I 2\n    O 1\n    I 8\n    O 1\n    I 7\n    O 9\n    I 3\n    O 2\n    I 1\n    O 9\n    I 3\n    O 7\n    I 5\n    O 9\n    I 2\n    O 7\n    I 6\n    O 5\n    I 4\n    O 4\n    I 5\n    O 3\n    I 3\n    O 8\n    I 5\n    O 1\n    I 5\n    O 2\n    I 4\n    O 8\n    I 2\n    O 2\n    I 4\n    O 7\n    I 7\n    O 5\n    I 3\n    O 9\n    I 2\n    O 3\n    I 5\n    O 8\n    I 3\n    O 3\n    I 4\n    O 7\n    I 5\n    O 5\n    I 4\n    O 9\n    I 4\n    O 1\n    I 7\n    O 2\n    I 5\n    O 9\n    I 1\n    O 3\n    I 4\n    O 4\n    I 7\n    O 8\n    I 7\n    O 7\n    I 4\n    O 6\n    I 2\n    O 5\n    I 6\n    O 2\n    I 7\n    O 9\n    I 9\n    O 1\n    I 2\n    O 3\n    I 4\n    O 5\n    I 3\n    O 1\n    I 2\n    O 6"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nO 4\\nO 2\\nE 4\\nE 3\\nI 4\\nE 2\\nE 3\\nI 4\\nI 3\\nI 2\\nI 1\\n') == '2 1 4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2 1 4'\nassert solution('3') == '1 1 3'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nO 4\nO 1\nE 2\nI 4\nO 1\nO 7\nI 8\nI 9\n''') == '2 1 4'\n\nassert solution('''\nE 9\nI 7\nI 6\nI 5\nI 4\nO 4\nO 7\nO 1\nO 1\n''') == '1 4 7 2'\n\nassert solution('''\nI 7\nI 6\nI 5\nI 4\nE 9\nI 7\nI 6\nI 5\nI 4\nO 4\nO 7\nO 1\nO 1\n''') == '1 4 7 2'\n\nassert solution('''\nO 7\nI 6\nI 5\nI 4\nE 9\nI 7\nI 6\nI 5\nI 4\nO 4\nO 7\nO 1\nO 1\n''') == '1 4 7 2'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nO 4') == '2 1 4'\nassert solution('2\\nO 1\\nI 4') == '1 2 2 4'\n'''"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nO 8\\nE 4\\n') == '2 1 4'\nassert solution('3\\nI 5\\nO 4\\n') == '3 1 4'\n\n--------------------"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\nO 4\") == \"2 1 4\"\nassert solution(\"1\\ne 3\") == \"2 1 3\"\nassert solution(\"1\\ne 4\") == \"2 1 4\"\nassert solution(\"1\\ne 5\") == \"2 1 5\"\nassert solution(\"1\\ne 6\") == \"2 1 6\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2 1 4'\nassert solution('2') == '1 1 3'\nassert solution('3') == '3 2 2'\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"5 1 12 4\") == \"3\"\nassert solution(\"5 5 9 10\") == \"2\"\nassert solution(\"1 6 4 10\") == \"1\"\nassert solution(\"2 11 7 14\") == \"3\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 5\n1 2 3 4 5\n6 7 8 9 10\n1 4 8 7 6\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1 1 3 4 5\n1 3 3 3 3\n1 2 3 3 3\n1 4 2 3 3\n1 5 2 3 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 5\n1 2 3 4 5\n1 3 3 3 3\n1 4 3 3 3\n1 5 3 3 3\n1 6 3 3 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n10 10\n1 2 3 4 5\n1 3 3 3 3\n1 4 3 3 3\n1 5 3 3 3\n1 6 3 3 3\n1 7 3 3 3\n1 8 3 3 3\n1 9 3 3 3\n1 10 3 3 3\n1 11 3 3 3\n1 12 3 3 3\n1 13 3 3 3\n1 14 3 3 3\n1 15 3 3 3\n1 16 3 3 3\n1 17 3 3 3\n1 18 3 3 3\n1 19 3 3 3\n1 20 3 3 3\n1 21 3 3 3\n1 22 3 3 3\n1 23 3 3 3\n1 24 3 3 3\n1 25 3 3 3\n1 26 3 3 3\n1 27 3 3 3\n1 28 3 3 3\n1 29 3 3 3\n1 30 3 3 3\n1 31 3 3 3\n1 32 3 3 3\n1 33 3 3 3\n1 34 3 3 3\n1 35 3 3 3\n1 36 3 3 3\n1 37 3 3 3\n1 38 3 3 3\n1 39 3 3 3\n1 40 3 3 3\n1 41 3 3 3\n1 42 3 3 3\n1 43 3 3 3\n1 44 3 3 3\n1 45 3 3 3\n1 46 3 3 3\n1 47 3 3 3\n1 48 3 3 3\n1 49 3 3 3\n1 50 3 3 3\n1 51 3 3 3\n1 52 3 3 3\n1 53 3 3 3\n1 54 3 3 3\n1 55 3 3 3\n1 56 3 3 3\n1 57 3 3 3\n1 58 3 3 3\n1 59 3 3 3\n1 60 3 3 3\n1 61 3 3 3\n1 62 3 3 3\n1 63 3 3 3\n1 64 3 3 3\n1 65 3 3 3\n1 66 3 3 3\n1 67 3 3 3\n1 68 3 3 3\n1 69 3 3 3\n1 70 3 3 3\n1 71 3 3 3\n1 72 3 3 3\n1 73 3 3 3\n1 74 3 3 3\n1 75 3 3 3\n1 76 3 3 3\n1 77 3 3 3\n1 78 3 3 3\n1 79 3 3 3\n1 80 3 3 3\n1 81 3 3 3\n1 82 3 3 3\n1 83 3 3 3\n1 84 3 3 3\n1 85 3 3 3\n1 86 3 3 3\n1 87 3 3 3\n1 88 3 3 3\n1 89 3 3 3\n1 90 3 3 3\n1 91 3 3 3\n1 92 3 3 3\n1 93 3 3 3\n1 94 3 3 3\n1 95 3 3 3\n1 96 3 3 3\n1 97 3 3 3\n1 98 3 3 3\n1 99 3 3 3\n1 100 3 3 3\n1 101 3 3 3\n1 102 3 3 3\n1 103 3 3 3\n1 104 3 3 3\n1 105 3 3 3\n1 106 3 3 3\n1 107 3 3 3\n1 108 3 3 3\n1 109 3 3 3\n1 110 3 3 3\n1 111 3 3 3\n1 112 3 3 3\n1 113 3 3 3\n1 114 3 3 3\n1 115 3 3 3\n1 116 3 3 3\n1 117 3 3 3\n1 118 3 3 3\n1 119 3 3 3\n1 120 3 3 3\n1 121 3 3 3\n1 122 3 3 3\n1 123 3 3 3\n1 124 3 3 3\n1 125 3 3 3\n1 126 3 3 3\n1 127 3 3 3\n1 128 3 3 3\n1 129 3 3 3\n1 130 3 3 3\n1 131 3 3 3\n1 132 3 3 3\n1 133 3 3 3\n1 134 3 3 3\n1 135 3 3 3\n1 136 3 3 3\n1 137 3 3 3\n1 138 3 3 3\n1 139 3 3 3\n1 140 3 3 3\n1 141 3 3 3\n1 142 3 3 3\n1 143 3 3 3\n1 144 3 3 3\n1 145 3 3 3\n1 146 3 3 3\n1 147 3 3 3\n1 148 3 3 3\n1 149 3 3 3\n1 150 3 3 3\n1 151 3 3 3\n1 152 3 3 3\n1 153 3 3 3\n1 154 3 3 3\n1 155 3 3 3\n1 156 3 3 3\n1 157 3 3 3\n1 158 3 3 3\n1 159 3 3 3\n1 160 3 3 3\n1 161 3 3 3\n1 162 3 3 3\n1 163 3 3 3\n1 164 3 3 3\n1 165 3 3 3\n1 166 3 3 3\n1 167 3 3 3\n1 168 3 3 3\n1 169 3 3 3\n1 170 3 3 3\n1 171 3 3 3\n1 172 3 3 3\n1 173 3 3 3\n1 174 3 3 3\n1 175 3 3 3\n1 176 3 3 3\n1 177 3 3 3\n1 178 3 3 3\n1 179 3 3 3\n1 180 3 3 3\n1 181 3 3 3\n1 182 3 3 3\n1 183 3 3 3\n1 184 3 3 3\n1 185 3 3 3\n1 186 3 3 3\n1 187 3 3 3\n1 188 3 3 3\n1 189 3 3 3\n1 190 3 3 3\n1 191 3 3 3\n1 192 3 3 3\n1 193 3 3 3\n1 194 3 3 3\n1 195 3 3 3\n1 196 3 3 3\n1 197 3 3 3\n1 198 3 3 3\n1 199 3 3 3\n1 200 3 3 3\n1 201 3 3 3\n1 202 3 3 3\n1 203 3 3 3\n1 204 3 3 3\n1 205 3 3 3\n1"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\"\nprint(solution(*(stdin.split())))"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"5 1 12 4\") == \"3\"\nassert solution(\"5 5 9 10\") == \"2\"\nassert solution(\"1 6 4 10\") == \"1\"\nassert solution(\"2 11 7 14\") == \"3\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14''') == \"4\"\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1''') == \"1\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution('5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '5'\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\") == \"4\"\nassert solution(\"20 8\\n1 1 2 3\\n4 2 5 3\\n3 1 6 7\\n7 8 9 10\\n8 1 9 2\\n2 1 10 3\\n1 1 1 1\\n4 5 6 7\\n6 7 8 9 10\\n9 9 9 9 9\\n3 3 4 4 5\\n1 5 5 5 5\") == \"13\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 4 5\") == \"4\"\nassert solution(\"5 1 12 4\") == \"5\"\nassert solution(\"5 5 9 10\") == \"10\"\nassert solution(\"1 6 4 10\") == \"10\"\nassert solution(\"2 11 7 14\") == \"14\""
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == \"4\"\nassert solution('5 8') == \"8\""
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\nassert solution('5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '3'\nassert solution('1 5 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '1'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '9.585073'\nassert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"10 1 2 3\") == \"1.0\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('99 9 999 9999') == '9.585073'\nassert solution('-99.99 99.99 9999.99') == '9.585073'\n\"\"\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\\\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\nassert solution('''\\\n0 0 0 0\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n''') == '4.0'\nassert solution('''\\\n9999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n99999999999999999999999999999999999999999\n999999999999999999999999999999999999"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\"\nassert solution(\"9 99 9 999 9\") == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n100\n1\n1\n1\n1\n1\n1\n1''') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"99 9 999 9999\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\n\"\"\""
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.858503'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('99 99 9999 9999') == '9.585073'\nassert solution('99 99 99999 9999') == '9.585073'\nassert solution('99 99 99999 9999') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.676944'\nassert solution('9 99 9 99 9') == '9.98962'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 30') == '12.74 127.83'\nassert solution('1 10 20 2 24 18 28 10') == '12.74 127.83'\nassert solution('1 2') == 'impossible'\nassert solution('4 3') == 'impossible'\nassert solution('40 30') == 'impossible'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 20\") == \"12.74\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 30') == '12.74 127.83'\nassert solution('4 1 5 2 2 1') == 'impossible'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 30') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '12.74 127.83'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20 30\") == \"12.74 127.83\"\nassert solution(\"2 10 20 2 24 18 28 10\") == \"12.74 127.83\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == \"impossible\"\nassert solution(\"2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == \"impossible\"\nassert solution(\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\") == \"impossible\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\"\n\nassert solution() == \"12.74 127.83\"\nassert solution() == \"16.47 15.94\"\nassert solution() == \"2.05 36.01\"\nassert solution() == \"9.82 3.76\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 20\") == \"12.75\"\nassert solution(\"12 20\") == \"12.75\"\nassert solution(\"6 20\") == \"impossible\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 30\") == \"12.74 127.83\"\nassert solution(\"20 20\") == \"impossible\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"20 30\n2 10 20 2 24 18 28 10\n\"\"\") == \"12.74 127.83\"\nprint(solution(input()))\n\n\u041e\u0431\u044a\u044f\u0432\u0438\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 w, l, r, x1, y1, x2, y2, x3, y3, h. \u0417\u0430\u0434\u0430\u0435\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445: w, l, r, x1, y1, x2, y2, x3, y3, h. \u0412 \u0434\u0430\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u044b \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432:"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\\n0\\n4\") == \"1234\"\nassert solution(\"4\\n3\\n0\\n1\") == \"11111\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sorted(stdin.splitlines())) == \"0116\"\n\ninput = sorted(stdin.splitlines())\noutput = ''\nfor i in range(len(input)):\n    temp = input[i]\n    for j in range(len(temp)-1):\n        temp = temp[:j] + temp[j+1:]\n        if len(temp) > 1 and temp!= '0':\n            output = output + str(temp)\nprint(output)\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1\n2\n3\n''') == '13'\n\nassert solution('''\n3\n1\n9\n9\n''') == '30'\n\nassert solution('''\n5\n1\n1\n1\n1\n1\n''') == '100'\n\nassert solution('''\n3\n1\n8\n9\n''') == '10'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0116\"\nassert solution(\"1\\n6\") == \"066\"\nassert solution(\"110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n110\\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n110\n6\nSample Input:\n3\n110\n6\nSample Output:\n0116\n''') == '0246'\nassert solution('''\n4\n110\n6\n9\nSample Output:\n0116\n''') == '0116'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '012'\nassert solution('4') == '120'\nassert solution('10') == '1010'\nassert solution('40') == '0201'\nassert solution('2') == '00'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n110\\n6\") == \"0116\""
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n77\n31\n\"\"\") == \"01237\"\n\nassert solution(\"\"\"\n2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n22\n5\n10\n1\n\"\"\") == \"1321\"\n\nassert solution(\"\"\"\n3\n9\n3\n8\n\"\"\") == \"988\"\n\nassert solution(\"\"\"\n5\n20\n5\n20\n20\n\"\"\") == \"05020\""
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"01\", \"First\"\n\nassert solution(\"\"\"\n2\n11\n\"\"\") == \"11\", \"Second\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n110\\n6') == '0116'\nassert solution('3\\n000\\n000\\n0011\\n0009\\n0101\\n') == '0101'\n\n'''\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n2\n1\n''') == '0 2'\nassert solution('''10\n4\n3 4 4\n''') == '0 1 3'\nassert solution('''100\n5\n1 2 3 3 4\n''') == '0 1 1 1 1'\nassert solution('''5\n3\n3 3 3\n''') == '0 1 2'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == '0 2 4'\n\n\"\"\""
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 3\") == \"0 2 4\"\nassert solution(\"25 8\") == \"0 2 4 1 8 5\"\nassert solution(\"20 8\") == \"0 2 4 1 8 5 6 7\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"2 3 0\"\nassert solution(\"16 3\") == \"0 0 2 4\""
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8 3\n4 4 4\n''') == '0 2 4'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '0 2 4'\nassert solution('2 4 1 3') == '0 2 4'\nassert solution('4 5 1 3') == '0 2 4'\nassert solution('8 3') == '0 2 4'\nassert solution('12 3') == '0 2 4'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n1 4\n2 1\n1 3\n2 2\n3 4''') == '0 2 4'\nassert solution('''6 5\n0 0 0\n0 1 0\n0 2 0\n0 3 0\n0 4 0\n1 1 1''') == '0 1 1'\nassert solution('''10 2\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0''') == '0 0 0'\nassert solution('''10 2\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0''') == '0 0 0'\nassert solution('''10 3\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0''') == '0 0 0'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 3\n1 1 1\n\"\"\") == \"0 1 0 0 0\"\n\nassert solution(\"\"\"\n5 5\n1 1 2 3 4\n\"\"\") == \"1 1 2 3 4\"\n\nassert solution(\"\"\"\n4 4\n2 1 3\n\"\"\") == \"0 0 2 3\"\n\nassert solution(\"\"\"\n3 6\n1 2 3 4 5\n\"\"\") == \"0 0 0 1 1\"\n\nassert solution(\"\"\"\n3 2\n2 1 3\n\"\"\") == \"0 1 0 1\""
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 3\n4 4 4\n4 4 4''') == '0 2 4'"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == '0 2 4'\nassert solution('16 3') == '0 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == \"impossible\"\nassert solution('''\n3\n3 2\n2 2 1\n3\n4\n1 1 2 2\nSample Output:\nimpossible\n''') == \"impossible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\") == \"impossible\"\nassert solution(\"2\\n2\\n1 2 5\\n2 1 5\\n2 5 7\") == \"impossible\"\nassert solution(\"3\\n3\\n1 2 3\\n1 2 4\\n2 3 4\") == \"possible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n2 5 7\\n2 6 5\\n2 6 5') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n2 5 7\\n2 6 5\\n2 6 5\\n3 3 3') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n2 5 7\\n2 6 5\\n2 6 5\\n3 3 3') == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n2 5 7\\n2 6 5\\n2 6 5\\n3 3 3') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4\n2 3 2 1\n1 1 1 3\n2 3 4 2\n3 4 4 3\n1 1\n''') == 'impossible'\nassert solution('''5\n1 1 1 3\n2 3 2 1\n1 1 1 3\n2 3 4 2\n3 4 4 3\n1 1\n''') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution('4\\n7\\n3 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'possible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == \"impossible\"\nassert solution('''\n5\n4\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == \"impossible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open(\"test.in\").read()) == \"impossible\"\nassert solution(open(\"input.in\").read()) == \"possible\"\nprint(solution(open(\"input.in\").read()))\n\"\"\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == 'impossible'\nassert solution('8') == 'impossible'\nassert solution('4') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\") == \"impossible\"\nassert solution(\"3\\n5\\n1 2\") == \"impossible\"\nassert solution(\"4\\n9\\n1 2 3 4 5 6 7 8 9\\n2 3 4 5 6 7 8\\n4 5 6 7 8 9\\n3 1 2 3 4 5 6 7 8 9\\n5 6 7 8 9\\n5 1 2 3 4 5\\n6 7 8 9\\n6 1 2 3 4 5\\n7 8 9\\n7 1 2 3 4 5\\n8 9\\n8 1 2 3 4 5\\n9\\n9 1 2 3 4 5\\n1 2 3 4 5 6 7 8 9\") == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.00000'\nassert solution('3') == '-1.00000'\nassert solution('4') == '0.00000'\nassert solution('5') == '0.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0 0\") == \"Impossible\"\nassert solution(\"2\\n0 10\") == \"1.00000\"\nassert solution(\"2\\n4 10\") == \"1.00000\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Impossible'\nassert solution('3') == '3.00000'\nassert solution('4') == 'Impossible'\nassert solution('5') == 'Impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1\\n0 0\\n0 10\\n2\\n4 10\\n4 0\\n\") == \"4.00000\"\nassert solution(\n    \"2\\n0 0\\n0 10\\n1\\n3 10\\n1 0\\n\") == \"impossible\"\nassert solution(\n    \"3\\n0 0\\n0 10\\n1\\n2 10\\n1 0\\n\") == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'Impossible'\nassert solution('0 0') == '4.00000'\nassert solution('0 10') == '4.00000'\nassert solution('2') == 'Impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\nassert solution('''\n1\n0 0\n1\n0 0\n1\n0 0\n1\n0 0\n2\n0 0\n''') == 'impossible'\nassert solution('''\n5\n0 0\n0 10\n2\n4 10\n4 0\n''') == '3.9000'\nassert solution('''\n8\n0 0\n1 1\n2 2\n3 3\n4 4\n4 5\n5 5\n6 6\n6 7\n7 7\n7 8\n''') == 'impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 2\\n1 3\\n2 0\\n2 10') == '4.00000'\nassert solution('3\\n5 7\\n0 0\\n1 4\\n2 5\\n2 3\\n2 4\\n3 2\\n3 3') == 'Impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"4.00000\"\nassert solution(\"1\\n0 0\\n0 10\\n2\\n4 10\\n4 0\") == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Impossible'\nassert solution('2 1') == '4.00000'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '0'\nassert solution('''\n5 5 4\n4 2\n2 1\n2 2\n2 3\n3 2\n''') == '1'\nassert solution('''\n5 5 4\n1 1\n2 1\n2 2\n2 3\n3 2\n''') == '0'\nassert solution('''\n5 5 4\n1 1\n2 1\n2 2\n2 3\n3 2\n''') == '1'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1'\nassert solution('4 3 4\\n1 1\\n3 2\\n3 2\\n1 3\\n2 2\\n') == '0'\nassert solution('6 6 7\\n5 1\\n4 2\\n5 3\\n1 1\\n1 2\\n2 1\\n2 2\\n3 1\\n4 1\\n5 3\\n1 2\\n2 3\\n') == '0'"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n\") == \"1\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 3') == '1'\nassert solution('2 2 4') == '0'\nassert solution('5 5 3') == '1'\nassert solution('5 5 3') == '1'"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n5 3 5\n1 1\n1 2\n2 1\n3 3\n4 4\n5 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 5\") == \"1\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\") == \"1\"\nassert solution(\"3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\") == \"0\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\nassert solution('''\n3 3\n3 3\n3 3\n3 3\n3 3\n3 3\n''') == '0'\n'''\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1', 'Wrong Answer'\nassert solution('''3 3 3\n1 1 1\n1 1 1\n1 1 1\n2 1 1\n''') == '0', 'Wrong Answer'\nassert solution('''6 4 7\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '1', 'Wrong Answer'\n\n'''\n\n\n'''"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n2 2\\n1 2\\n') == '1'\nassert solution('1 1\\n1 2\\n1 1\\n') == '0'\nassert solution('1 1\\n1 1\\n1 1\\n') == '1'\nassert solution('1 1\\n1 2\\n1 2\\n') == '1'\nassert solution('1 1\\n1 3\\n1 2\\n') == '1'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 3 4\n1 1\n1 1\n1 1\n3 3\n2 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '5 3'\nassert solution('7 1') == 'impossible'\nassert solution('5 1') == 'impossible'\nassert solution('10 10') == 'impossible'\nassert solution('5 10') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'impossible'\n\nstdin = \"\"\"\n3 1\n0 2\n1 3\n2 3\n\"\"\"\nassert solution(stdin) == 'impossible'\n\nstdin = \"\"\"\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\nSample Output:\n5 2\n1 0\n2 4\n\"\"\"\nassert solution(stdin) == 'impossible'\n\nstdin = \"\"\"\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n\"\"\"\nassert solution(stdin) == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '5 3'\nassert solution('5 6') == '1 0'\nassert solution('7 4') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"3 1 0 2 4\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '3 1\\n2 4\\n'\nassert solution('''\n10 15\n1 2\n0 3\n4 5\n7 8\n10 9\n3 7\n5 6\n8 9\n11 12\n''') == '7 8\\n11 10\\n12 7\\n'\nassert solution('''\n3 4\n1 2\n1 3\n2 4\n''') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 2\\n') == '2 1\\n2 1'\n\"\"\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '5 3\\n1 0\\n2 4'\nassert solution('''5 6\n1 3\n1 2\n2 3\n2 3\n1 2\n4 3\n''') == 'impossible'\nassert solution('''3 3\n1 3\n1 2\n2 3\n''') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == '1 3'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '1 0\\n2 4'\nassert solution(\n'''5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == 'impossible'\nassert solution(\n'''5 1\n0 1\n''') == 'impossible'\nassert solution(\n'''5 3\n0 1\n1 2\n2 3\n''') == '1 0\\n2 4'\nassert solution(\n'''5 4\n0 1\n1 2\n2 3\n4 3\n''') == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"2 1\") == \"3 2\"\nassert solution(\"3 2\") == \"3 1\"\nassert solution(\"3 3\") == \"4 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '2'\nassert solution('3 1') == '2'\nassert solution('2 1') == '1 2'\nassert solution('5 1') == '1 2'\nassert solution('1 1') == '1 2'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\n0 0\n0 1\n1 0\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 3\n0 0\n0 1\n1 0\n1 1\n1 2\n1 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"2 1\") == \"0\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '3'\nassert solution('10 1') == '5'\nassert solution('4 1') == '3'\nassert solution('5 1') == '5'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 1\n0 0\n0 1\n1 0\n1 1''') == '2'\nassert solution('''4 3\n0 0\n0 1\n0 2\n1 0\n1 1\n2 0\n2 1''') == '3'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 1\n0 0\n0 1\n1 0\n1 1\n''') == '2\n4 1\n0 0\n1 0\n1 1\n'''"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('4 1') == '2'\nassert solution('3 4') == '2'\nassert solution('10 10') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n4 1\n0 0\n0 1\n1 0\n1 1\n\"\"\") == \"2\"\n\nassert solution(r\"\"\"\n5 1\n1 0\n0 1\n0 2\n2 3\n3 2\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1') == '2'\nassert solution('3 3') == '2'\nassert solution('5 4') == '2'\nassert solution('2 0') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n4 2\n3 5 8 9\n''') == '0'\nassert solution('''\n2 4\n10 9\n8 12\n''') == '0'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n10 2\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution('''\n10 3\n1 2 5 10 10 10 11\n2 3 5 9\n3 4 5 8\n4 5 7 9\n5 6 7 9\n6 7 8 9\n''') == '0'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nassert solution(\"10 3\\n1 3 1 2 3 4 5 6 7 8 9 10\\n1 3 2 2 2 3 3 3\\n1 3 4 5 6 7 8 9 10\") == \"1\"\nprint(\"All test cases passed...\")\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 4\n1 4 3 2 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 4\n2 3 5 6 7\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 5\n1 3 5 7 9 11 13 15 17 16\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 5\n1 4 3 2 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 10\n1 3 5 7 9 11 13 15 17 16\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n3 7 8\n3 8 8 9\n''') == '1'\nassert solution('''\n3 3\n3 9 9 9\n3 9 8 7\n''') == '3'"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '1'\nassert solution('20 3') == '3'\nassert solution('20 2') == '0'\nassert solution('100 3') == '0'\nassert solution('100 2') == '-1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(stdin=\"1 2\") == \"1\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''10 2\n10 30 50 10 50 30 50 10 20\n''') == '0'\nassert solution('''10 2\n10 20 20 20 20 20 20 20 20\n''') == '1'\nassert solution('''10 2\n10 20 20 20 20 20 20 20 20\n''') == '1'"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4'"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 5\\nACDBB') == '7 4'\nassert solution('7 5\\n4 7') == '10 9'\nassert solution('7 5\\n8 9\\n3 7') == '7 4'\nassert solution('7 5\\n4 7') == '10 9'\nassert solution('7 5\\n4 7') == '7 4'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5\\nABDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n') == '7 4'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n4 5\n1 2\n3 4\n2 4\nSample Input 2:\n7 5\nACDBB\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\nSample Output 2:\n6 2\n''') == '6 2'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"5 6\") == \"6 5\", \"vertical\"\nassert solution(\"8 9\") == \"9 8\", \"horizontal\"\nassert solution(\"4 13\") == \"13 4\", \"diagonal\"\nassert solution(\"1 10\") == \"10 1\", \"diagonal\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4'\nassert solution('2\\nA\\nB') == '0 0'\nassert solution('4\\nD\\nB\\nA\\nC') == '0 1'\nassert solution('3\\nA\\nB\\nC') == '1 2'\nassert solution('4\\nA\\nB\\nC\\nD') == '0 1'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\nassert solution('''\n4 6\nABDC\n4 7\n2 4\n5 6\n8 9\n9 10\n''') == '8 9'\nassert solution('''\n5 5\nACDBC\n1 2\n''') == '1 2'\nassert solution('''\n4 5\nBACD\n1 2\n''') == '1 2'\nassert solution('''\n8 5\nDADBC\n1 2\n''') == '1 2'\n'''\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nCBDBB') == '7 4'\n\"\"\"\n\nfrom itertools import product\nfrom math import sqrt\n\nn, k = map(int, input().split())\ndic = {}\nfor i in range(n):\n    dic[input()] = []\nfor i in range(k):\n    x, y = map(int, input().split())\n    dic[input()].append((x, y))\n\ndistance = [(i, j) for i, j in product(range(1, 101), range(1, 101))]\nresult = []\nfor i in range(len(distance)):\n    current_dist = 0\n    for j in range(len(dic)):\n        for k in range(len(dic[dic.keys()[j]])):\n            cur_x, cur_y = dic[dic.keys()[j]][k]\n            next_x, next_y = distance[i]\n            dist = sqrt((next_x - cur_x) ** 2 + (next_y - cur_y) ** 2)\n            current_dist += dist\n    if current_dist > 1000000000:\n        continue\n    else:\n        result.append(current_dist)\nresult.sort(reverse=True)\nprint(result[0])\n\n\"\"\"\nfrom itertools import product\nfrom math import sqrt\n\nn, k = map(int, input().split())\ndic = {}\nfor i in range(n):\n    dic[input()] = []\nfor i in range(k):\n    x, y = map(int, input().split())\n    dic[input()].append((x, y))\n\ndistance = [(i, j) for i, j in product(range(1, 101), range(1, 101))]\nresult = []\nfor i in range(len(distance)):\n    current_dist = 0\n    for j in range(len(dic)):\n        for k in range(len(dic[dic.keys()[j]])):\n            cur_x, cur_y = dic[dic.keys()[j]][k]\n            next_x, next_y = distance[i]\n            dist = sqrt((next_x - cur_x) ** 2 + (next_y - cur_y) ** 2)\n            current_dist += dist\n    if current_dist > 1000000000:\n        continue\n    else:\n        result.append(current_dist)\nresult.sort(reverse=True)\nprint(result[0])\n\"\"\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\n\nassert solution('''\n8 5\nA B\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '8 9'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nDCBA\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == \"7 4\"\n\nassert solution('''\n4\nAABB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == \"7 4\"\n\nassert solution('''\n3\nCCAA\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == \"10 9\"\n\nassert solution('''\n2\nDDCC\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == \"8 9\"\n\nassert solution('''\n1\nCCCD\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == \"10 9\""
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\n----Hints----\n* Read the instructions carefully before you attempt this problem.\n* Read the input by line and split it into a list of tokens.\n* Perform all computations and return the computed value as a string.\n* If you are not careful, it is easy to generate the wrong output.\n* We've provided a hint on the expected output format. You can also use a REPL to test it.\n\"\"\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\"\nassert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"10 LET A = 0\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\\n\") == \"HELLO THERE 0\\nHELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"\\n') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \\\"HELLO THERE \\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 LET A = 1\\n20 PRINT \"HELLO THERE \"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \"DONE\"') == 'HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 0 1\n0 1\n''') == '3'\n\nassert solution('''\n4 5 2 0\n2 1\n3 1\n''') == '5'\n\nassert solution('''\n5 1 3 0\n3 2\n2 3\n''') == '0'\n\nassert solution('''\n10 3 1 2 3 2 3 3 1\n0 1 1 2 1 3 1\n3 1 1 1 1 2 1\n''') == '0'"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3 0 1\") == \"4\"\nassert solution(\"3 0 1 2\") == \"5\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 0\n1 1''') == '2'\n\"\"\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('3 0 1') == '3'\nassert solution('0 1') == '1'\nassert solution('0 1 0') == '2'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 0 1') == '3'\nassert solution('3 0 1') == '3'\nassert solution('1 2 3') == '1'\nassert solution('2 2 2') == '4'\nassert solution('0 1') == '1'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3\\n\"\n    \"3 0 1\\n\"\n    \"0 1\\n\"\n) == \"3\"\nassert solution(\n    \"5\\n\"\n    \"1 1 3 5\\n\"\n    \"0 0 1 1\\n\"\n    \"0 1 2 3\\n\"\n    \"0 2 2 3\\n\"\n) == \"5\"\nassert solution(\n    \"2\\n\"\n    \"0 1\\n\"\n    \"1 0\\n\"\n) == \"2\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 0 1\\n0 1\\n') == '3'\nassert solution('10 0 0\\n0 0\\n') == '3'\nassert solution('10 0 0\\n0 0\\n') == '4'\n\"\"\"\nfrom collections import Counter\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 0 1\n0 1\n3 0 2\n''') == '3'\n\nSample Input:\n4\n3 0 1\n0 1\n0 1\n1 1\nSample Output:\n6\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 0 1\n0 1\n''') == '3', \"Should return 3\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5, 1, 2, 3, 5, 4, 3, 5]) == 'RRRLLRRLL'\nassert solution([2, 5, 1, 3, 5, 4, 3, 5]) == 'LLRLRRLR'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'\nassert solution('10\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n5 5\\n2 4') == 'LLRRRRLL'\nassert solution('30\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n5 5\\n2 4') == 'RRRLLRLLRRRRLL'\nassert solution('100\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n5 5\\n2 4') == 'RRRLLRRLRRRRLL'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2\n2 5\n2 3\n1 3\n''') == 'LLRRRRLL', 'Should be LLRRRRLL'\nassert solution('''\n3\n1 2\n2 5\n3 4\n''') == 'LLRLRRLR', 'Should be LLRLRRLR'\n\n'''"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'RRRRRRLL'\nassert solution('''10\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n5 4\n4 5\n5 6\n5 7\n6 8\n7 9\n4 10\n''') == 'RRRLLRLL'\nassert solution('''100\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n5 4\n4 5\n5 6\n5 7\n6 8\n7 9\n4 10\n''') == 'LLRRRRLLRRLL'\nassert solution('''5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n5 4\n4 5\n5 6\n5 7\n6 8\n7 9\n4 10\n''') == 'RRRRRRLLRRRRLL'\nassert solution('''4\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n5 4\n4 5\n5 6\n5 7\n6 8\n7 9\n4 10\n''') == 'impossible'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'LLRRRRLL'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n2 4') == 'RRRRRRRR'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1 2\") == \"RLR\"\nassert solution(\"2 5\") == \"LLLRRRLL\"\nassert solution(\"2 3\") == \"RLR\"\nassert solution(\"1 3\") == \"LLR\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRRRRLL\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"LLRLRLLRR\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"impossible\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"RRLLRRRLR\"\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\") == \"impossible\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 1\n1 3\n2 5\n''') == 'LLRRRRLL'\nassert solution('''\n10\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n3 4\n1 3\n3 4\n1 3\n3 4\n1 3\n3 4\n
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\""
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1001 2011\\n1017 2011') == '1\\n2011'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1\\n2011'\nassert solution('2\\n2001') == '2\\n2001'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1009 2011\n1017 2011\n''') == '1\\n2011'\nassert solution('''\n4\n1009 2011\n1017 2011\n1011 2012\n1014 2012\nSample Output:\n2\n2012\n''') == '2\\n2012\\n'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"1\""
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1001 2011\\n1017 2011') == '1\\n2011'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '3'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1009 2011\n1017 2011\n''') == '1\\n2011\\n'"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1009 2011\n1017 2011\n''') == '1'\nprint(solution('''\n2\n1009 2011\n1017 2011\n'''))\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0 3\"\nassert solution(\"2 5 4 2 6\") == \"2 4 6\"\nassert solution(\"3 2 4 1 3\") == \"1 2 3 4\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0 2\\n1 3\\n2 3') == '0 3'\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"0 2\"\nassert solution(\"3 3\") == \"0 1 2\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n\nassert solution('''\n3\n0 1\n1 2\n2 3\n''') == '0 2'\n\nassert solution('''\n10\n0 1 100\n0 2 100\n1 3 100\n2 4 100\n3 5 100\n4 6 100\n5 7 100\n6 8 100\n7 9 100\n8 10 100\n9 10 100\n10 11 100\n11 12 100\n12 13 100\n13 14 100\n14 15 100\n15 16 100\n16 17 100\n17 18 100\n18 19 100\n19 20 100\n20 21 100\n21 22 100\n22 23 100\n23 24 100\n24 25 100\n25 26 100\n26 27 100\n27 28 100\n28 29 100\n29 30 100\n30 31 100\n31 32 100\n32 33 100\n33 34 100\n34 35 100\n35 36 100\n36 37 100\n37 38 100\n38 39 100\n39 40 100\n40 41 100\n41 42 100\n42 43 100\n43 44 100\n44 45 100\n45 46 100\n46 47 100\n47 48 100\n48 49 100\n49 50 100\n50 51 100\n51 52 100\n52 53 100\n53 54 100\n54 55 100\n55 56 100\n56 57 100\n57 58 100\n58 59 100\n59 60 100\n60 61 100\n61 62 100\n62 63 100\n63 64 100\n64 65 100\n65 66 100\n66 67 100\n67 68 100\n68 69 100\n69 70 100\n70 71 100\n71 72 100\n72 73 100\n73 74 100\n74 75 100\n75 76 100\n76 77 100\n77 78 100\n78 79 100\n79 80 100\n80 81 100\n81 82 100\n82 83 100\n83 84 100\n84 85 100\n85 86 100\n86 87 100\n87 88 100\n88 89 100\n89 90 100\n90 91 100\n91 92 100\n92 93 100\n93 94 100\n94 95 100\n95 96 100\n96 97 100\n97 98 100\n98 99 100\n99 100\n0 1 100\n0 2 100\n1 3 100\n2 4 100\n3 5 100\n4 6 100\n5 7 100\n6 8 100\n7 9 100\n8 10 100\n9 10 100\n10 11 100\n11 12 100\n12 13 100\n13 14 100\n14 15 100\n15 16 100\n16 17 100\n17 18 100\n18 19 100\n19 20 100\n20 21 100\n21 22 100\n22 23 100\n23 24 100\n24 25 100\n25 26 100\n26 27 100\n27 28 100\n28 29 100\n29 30 100\n30 31 100\n31 32 100\n32 33 100\n33 34 100\n34 35 100\n35 36 100\n36 37 100\n37 38 100\n38 39 100\n39 40 100\n40 41 100\n41 42 100\n42 43 100\n43 44 100\n44 45 100\n45 46 100\n46 47 100\n47 48 100\n48 49 100\n49 50 100\n50 51 100\n51 52 100\n52 53 100\n53 54 100\n54 55 100\n55 56 100\n56 57 100\n57 58 100\n58 59 100\n59 60 100\n60 61 100\n61 62 100\n62 63 100\n63 64 100\n64 65 100\n65 66 100\n66 67 100\n67 68 100\n68 69 100\n69 70 100\n70 71 100\n71 72 100\n72 73 100\n73 74 100\n74 75 100\n75 76 100\n76 77 100\n77 78 100\n78 79 100\n79 80 100\n80 81 100\n81 82 100\n82 83 100\n83 84 100\n84 85 100\n85 86 100\n86 87 100\n87 88 100\n88 89 100\n89 90 100\n90 91 100\n91 92 100\n92 93 100\n93 94 100\n94 95 100\n95 96 100\n96 97 100\n97 98 100\n98 99 100\n99 100\n0 1 100\n0 2 100\n1 3 100\n2 4 100\n3 5 100\n4 6 100\n5 7 100\n6 8 100\n7 9 100\n8 10 100\n9 10 100\n10 11 100\n11 12 100\n12 13 100\n13 14 100\n14 15 100\n15 16 100\n16 17 100\n17 18 100\n18 19 100\n19 20 100\n20 21 100\n21 22 100\n22 23 100\n23 24 100\n24 25 100\n25 26 100\n26 27 100\n27 28 100\n28 29 100\n29 30 100\n30 31 100\n31 32 100\n32 33 100\n33 34 100\n34 35 100\n35 36 100\n36 37 100\n37 38 100\n38 39 100\n39 40 100\n40 41 100\n41 42 100\n42 43 100\n43 44 100\n44 45 100\n45 46 100\n46 47 100\n47 48 100\n48 49 100\n49 50 100\n50 51 100\n51 52 100\n52 53 100\n53 54 100\n54 55 100\n55 56 100\n56 57 100\n57 58 100\n58 59 100\n59 60 100\n60 61 100\n61 62 100\n62 63 100\n63 64 100\n64 65 100\n65 66 100\n66 67 100\n67 68 100\n68 69 100\n69 70 100\n70 71 100\n71 72 100\n72 73 100\n73 74 100\n74 75 100\n75 76 100\n76 77 100\n77 78 100\n78 79 100\n79 80 100\n80 81 100\n81 82 100\n82 83 100\n83 84 100\n84 85 100\n85 86 100\n86 87 100\n87 88 100\n88 89 100\n89 90 100\n90 91 100\n91 92 100\n92 93 100\n93 94 100\n94 95 100\n95 96 100\n96 97 100\n97 98 100\n98 99 100\n99 100\n0 1 100\n0 2 100\n1 3 100\n2 4 100\n3 5 100\n4 6 100\n5 7 100\n6 8 100\n7 9 100\n8 10 100\n9 10 100\n10 11 100\n11 12 100\n12 13 100\n13 14 100\n14 15 100\n15 16 100\n16 17 100\n17 18 100\n18 19 100\n19 20 100\n20 21 100\n21 22 100\n22 23 100\n23 24 100\n24 25 100\n25 26 100\n26 27 100\n27 28 100\n28 29 100\n29 30 100\n30 31 100\n31 32 100\n32 33 100\n33 34 100\n34 35 100\n35 36 100\n36 37 100\n37 38 100\n38 39 100\n39 40 100\n40 41 100\n41 42 100\n42 43 100\n43 44 100\n44 45 100\n45 46 100\n46 47 100\n47 48 100\n48 49 100\n49 50 100\n50 51 100\n51 52 100\n52 53 100\n53 54 100\n54 55 100\n55 56 100\n56 57 100\n57 58 100\n58 59 100\n59 60 100\n60 61 100\n61 62 100\n62 63 100\n63 64 100\n64 65 100\n65 66 100\n66 67 100\n67 68 100\n68 69 100\n69 70 100\n70 71 100\n71 72 100\n72 73 100\n73 74 100\n74 75 100\n75 76 100\n76 77 100\n77 78 100\n78 79 100\n79 80 100\n80 81 100\n81 82 100\n82 83 100\n83 84 100\n84 85 100\n85 86 100\n86 87 100\n87 88 100\n88 89 100\n89 90 100\n90 91 100\n91 92 100\n92 93 100\n93 94 100\n94 95 100\n95 96 100\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''5 5\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n\"\"\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\") == \"0 3\"\nassert solution(\"9 9\") == \"0 1 2 3 4 5 6 7 8 9\"\nprint(solution(input()))\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0 3\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\"\n) == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '20'\nassert solution(input_string=\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n\", expected_output=\"20\")\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\nprint(solution('''\n1.0 1.0\n0 0 0 0\n1 2 3 4\n5 6 7 8\n9 0 0 0\n10 11 12 13\n14 15 16 17\n18 19 20 21\n'''))\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\nprint('All tests passed')"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2.0 10.0') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\nassert solution('''\n4.0 5.0\n5 2 3 4 3\n1 1 0 0\n''') == '7'\nassert solution('''\n2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\n''') == '20'\nassert solution('''\n5.0 5.0\n4 1 1 1 1\n1 1 0 0\n''') == '7'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2.0 10.0') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2.0 10.0\") == \"20\"\nassert solution(\"1.0 10.0\") == \"0\"\nassert solution(\"1.0 100.0\") == \"0\""
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"20\""
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3.0 10.0\\n') == '20'\nassert solution('3.0 10.0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\nSample Input:\n2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0\nSample Output:\n20\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"5\\n2 1 3 4 5 6\") == \"2\"\nassert solution(\"6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\") == \"3\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 3 4 5 1\n3 1 4 5 2\n2 1 2 3 4\n1 1 2 3 4\n2 1 2 3 4\n''') == \"4\"\nassert solution('''\n9\n2 1 3 4 5 8 7 6 9\n1 1 3 4 5 8 7 6 9\n2 2 3 4 5 8 7 6 9\n1 1 2 3 4 5 8 7 6 9\n2 2 1 2 3 4 5 8 7 9\n2 2 3 1 4 5 8 7 6 9\n1 1 2 3 4 5 8 7 6 9\n1 1 2 2 3 4 5 8 7 9\n1 1 2 2 3 4 5 8 7 6\n1 1 2 2 3 4 5 8 6 9\n1 1 2 2 3 4 5 8 6 7\n1 1 1 2 3 4 5 8 7 6 9\n1 1 1 2 2 3 4 5 8 7 6\n1 1 1 2 2 3 4 5 8 6 9\n1 1 1 2 2 3 4 5 8 6 7\n''') == \"4\"\nassert solution('''\n6\n0 1 3 4 5 6\n1 1 2 3 4 5\n1 1 1 2 3 4\n1 1 1 1 2 3\n1 1 1 1 1 2\n1 1 1 1 1 1\n''') == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2', \"Should be 2\"\nassert solution('6') == '4', \"Should be 4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n''') == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '4'\nassert solution('5\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '3'\nassert solution('10\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n3 1 2 3 4 5\\n4 1 2 3 4 5 6\\n5 1 2 3 4 5 6\\n6 1 2 3 4 5 6\\n7 1 2 3 4 5 6\\n8 1 2 3 4 5 6\\n9 1 2 3 4 5 6\\n10 1 2 3 4 5 6\\n') == '5'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 1\\n1 6 5 4 2 1') == '3'\nassert solution('6\\n5 2 3 4 1 1\\n3 2 1 6 4 5\\n6 5 4 2 1 1 1\\n4 4 1 6 2 5 3\\n2 6 1 5 4 3 2\\n1 1 3 4 5 6') == '4'"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n0 2 3 4 5 6\n0 1 3 4 5 6\n1 6 5 4 2 1\n2 6 5 3 2 1\n1 1 2 3 4 6\n2 1 2 3 4 5\n''') == \"4\"\nprint(solution('''\n2\n0 0 0 0 0 0\n1 1 1 1 1 1\n'''))"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 5 6 7\\n') == '4'"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 2\\n2 2 1\\n2 3 4\\n1 1\\n1 2 3 4') == '4'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8') == '7'"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 1\n1 2 2 3 4\n2 3 4 4 5\n3 4 5 6 7\n4 5 6 7 8\n5 5 6 7 8 9\n\"\"\") == \"8\"\nassert solution(\"\"\"\n10\n1 1\n1 2 1 2 3 1 1\n2 2 1 1 2 1 1 1 1 1\n1 2 3 3 3 3 1 1 2\n2 3 1 1 2 1 1 1 1 2\n3 1 2 2 2 1 2 1 1 1\n1 1 1 1 1 1 1 1 1 1\n2 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"12\"\nassert solution(\"\"\"\n15\n1 1\n1 2 3 1 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15 1\n3 4 5 6 7 8 9 1 10 11 12 1 13 14 15 1\n5 6 7 8 9 1 10 11 12 1 13 14 15 1\n6 7 8 9 1 10 11 12 1 13 14 15 1\n7 8 9 1 10 11 12 1 13 14 15 1\n1 2 3 4 5 1 6 7 8 9 1 10 11 12 1 13 14 15\n2"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4') == '4'\nassert solution('2\\n1 1') == '1'\n'''\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3 4 5\\n4 5 6\\n4 5 6\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nassert solution('10\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7 8\\n6 7 8 9\\n7 8 9 10') == '10'"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7''') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6', \"Wrong answer\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1''') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n\"\"\") == \"6\"\n\"\"\"\n--- Part Two ---\n\nThe network is now a two-dimensional grid, with each point in the grid being one of the coverage regions. Now that you've got a grid, you need to figure out how many ways there are to travel from your current location to any point within the coverage region.\n\nEach point in the grid is either a 0 (no region) or a 1 (one or more coverage subregions). A point that is in more than one region is not connected to any other region and, therefore, there are no valid paths from that point to any other point.\n\nIn other words, a point is not connected to itself.\n\nNote that you're not allowed to travel between points in different coverage subregions. (Of course you can connect points within different coverage subregions, but you must connect them in such a way that every point in the coverage region is connected to at least one other point.)\n\nFor example, consider the following grid:\n\n0 0 0 0 0 0\n0 1 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\nIf you started at the bottom-left corner, you would only be able to go to your current location, so there is one valid path from your location to itself. However, you cannot go outside the grid (which means there is only one path from your location to any other point in the grid).\n\nSimilarly, if you started in the top-right corner, you would only be able to go to your current location, so there is one valid path from your location to itself. However, if you were to travel outside the grid (which means there would be two paths from your location to any other point in the grid), there are four valid paths to any point: to the top-left, top-right, bottom-left, or bottom-right.\n\nGiven the current state of the grid, return the number of paths from your current location to any point in the coverage region.\n\n-----Input-----\nEach input consists of a single test case. The first line of input consists of a single integer $n$ ($1 \\le n \\le 5000$) denoting the number of existing towers. The next $n$ lines, each with $2$ space-separated floating-point numbers $x$ and $y$ ($0 \\le x, y \\le 100000$, at most $5$ digits after the decimal point), denoting the location of a tower in km. It is guaranteed that the optimal number of towers will not change even if the coverage radius of all the towers is increased or decreased by $10^{-6}\\text { km}$.\n\n-----Output-----\nOutput a single integer, denoting the total number of paths that can be taken to travel from your current location to any point within the coverage region.\n\n-----Examples-----\nSample Input:\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\nSample Output:\n4\n\"\"\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('2\\n1.0 1.0\\n1.0 3.1\\n3.1 3.1\\n3.1 4.2\\n4.2 4.2\\n4.2 5.0\\n') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == '6'\nassert solution('1\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == '4'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == '5'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1''') == '6'\nassert solution('''5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1''') == '5'"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6', 'First Test Failed'\n\nassert solution('''\n4\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '5', 'Second Test Failed'\n\nassert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6', 'Third Test Failed'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n''') == '6', 'Should be 6'\n\nassert solution('''\n3\n1.0 1.0\n1.0 3.1\n3.1 3.1\n''') == '3', 'Should be 3'\n\nassert solution('''\n4\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n''') == '3', 'Should be 3'\n\nassert solution('''\n9\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1\n3.1 3.1\n4.2 3.1\n3.1 3.1\n4.2 3.1\n''') == '4', 'Should be 4'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n''') == '1'\nassert solution('''\n1\n5\n''') == '1'\nassert solution('''\n3\n2\n''') == '3'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n2\n2\n''') == '1'\nassert solution('''\n2\n2\n2\n''') == '3'\nassert solution('''\n3\n2\n2\n''') == '3'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2\n2\n2''') == '2'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n2\\n2\\n') == '0'\nassert solution('3\\n2\\n2\\n') == '1'\nassert solution('4\\n2\\n2\\n') == '2'\nassert solution('5\\n2\\n2\\n') == '3'\nassert solution('5\\n3\\n2\\n') == '5'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2\n2\n''') == '5'\nassert solution('''\n1\n2\n''') == '4'\nassert solution('''\n1\n3\n''') == '5'\nassert solution('''\n5\n5\n5\n5\n''') == '10'\nassert solution('''\n1\n1\n2\n1\n3\n''') == '10'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\n2') == '2'\nassert solution('3\\n2\\n2') == '4'\nassert solution('5\\n4\\n3') == '2'\nassert solution('10\\n5\\n3') == '5'\nassert solution('2\\n7\\n2') == '7'"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n\nSample Input:\n4\n2\n1\n5\n3\nSample Output:\n1\n\"\"\""
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\n\nassert solution('4') == '4'\nassert solution('5') == '5'"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n2') == '5'\nassert solution('3\\n2\\n2') == '6'\nassert solution('4\\n2\\n2') == '4'\nassert solution('1\\n3\\n2') == '3'\nassert solution('5\\n2\\n2') == '5'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2\\n2\\n\") == \"1\"\nassert solution(\"3\\n2\\n2\\n\") == \"0\"\nassert solution(\"4\\n2\\n2\\n\") == \"3\"\nassert solution(\"5\\n2\\n2\\n\") == \"3\"\nassert solution(\"8\\n2\\n2\\n\") == \"7\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"1 1\"\nassert solution(\"1 1\") == \"1 1\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\n2 2 2 1\n''') == '1 2'\n'''\n\nfrom math import ceil"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 3\n2 2 2 1\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n2 2\n1 2 1\n\"\"\") == \"2 2\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2 2 1') == '1 1'\nassert solution('1 2\\n2 3') == '2 3'\nassert solution('4 5\\n4 5') == '1 1'\n'''"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"2 4\\n1 2 3 4\\n1 5 2 1 6\") == \"1 1\"\n\nstdin = \"\"\"1 3\n2 2 2 1\n\"\"\"\nassert solution(stdin) == \"1 1\"\n\nstdin = \"\"\"5 3\n2 2 2 1\n\"\"\"\nassert solution(stdin) == \"1 2\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '1 1'\n\nfrom typing import List\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1 1'\nassert solution('4 5') == '1 1'\nassert solution('5 6') == '1 2'\nassert solution('6 7') == '2 1'\nassert solution('8 10') == '1 1'\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1 2 2 1\n2 3 2 2\"\"\") == \"1 3\"\n\nassert solution(\"\"\"1 2 2 1\n1 3 2 2\"\"\") == \"1 3\"\n\nassert solution(\"\"\"1 2 2 1\n2 3 2 2\"\"\") == \"1\"\n\nassert solution(\"\"\"1 2 2 1\n2 3 2 2\"\"\") == \"1\"\n\nassert solution(\"\"\"1 2 2 1\n2 3 2 2\"\"\") == \"1\""
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 3\n2 2 2 1\n''') == '1 1'\nassert solution('''\n1 100000\n5 3 4 9\n''') == '1 50847'\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1 1\"\nassert solution(\"2 3\") == \"1 1\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '10'\nassert solution('10') == '32'\nassert solution('99') == '75'\nassert solution('12') == '12'\nassert solution('123') == '9'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '11'\nassert solution('3') == '11'\nassert solution('4') == '12'\nassert solution('5') == '11'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"12\"\nassert solution(\"4\") == \"13\"\nassert solution(\"5\") == \"14\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n') == '10'\nassert solution('10\\n') == '5'\nassert solution('101\\n') == '5'\n\nimport math"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1000\") == \"10010\"\nassert solution(\"10000\") == \"10000\"\nassert solution(\"100009\") == \"10001\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"10\""
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '10'\nassert solution('12') == '42'\nassert solution('123') == '342'\nassert solution('1234') == '1764'\nassert solution('12345') == '7585'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '0.001'\n\n\"\"\"\n\nfrom math import sqrt\n\nk = int(input())\nn = int(input())\n\ncands = [[int(i) for i in input().split()] for _ in range(n)]\n\nr = []\n\nfor cand in cands:\n    r.append(cand[2])\n\nr.sort(reverse=True)\n\nv = []\n\nfor i in range(k):\n    val = 1\n    for j in r:\n        if j >= i+1:\n            val *= j\n    v.append(val)\n\nans = sum(v)\n\nprint(f\"{ans:.3f}\")\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2\n1000 1 0\n1 1000 1\n''') == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 1\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100 100 100\n100"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 1 0\\n1 1000 1\\n1 1000 1\\n') == '0.001320'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0.001\"\nassert solution(\"1 1 1\") == \"0.5\"\nassert solution(\"1 1000 1\") == \"0.5\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2 3\n1 2\n2 3\n3 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3') == '0'\nassert solution('4 8 2 100000\\n1 2\\n3 4\\n3 1\\n2 4\\n3 1\\n3 4\\n') == '2'\nassert solution('5 4 2 100000\\n1 2\\n3 4\\n3 1\\n2 4\\n3 1\\n3 4\\n') == '4'\nassert solution('9 8 2 100000\\n1 2\\n3 4\\n3 1\\n2 4\\n3 1\\n3 4\\n') == '1'\nassert solution('12 8 2 100000\\n1 2\\n3 4\\n3 1\\n2 4\\n3 1\\n3 4\\n') == '1'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\") == \"0\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2 10000\\n1 2\\n2 3\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 10000\") == \"0\""
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2 10000\\n1 2\\n2 3\\n3 1\\n\") == '0'"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 2 10000') == '0'\nassert solution('1 2') == '1'\nassert solution('2 3') == '2'\nassert solution('3 1') == '2'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 3 2 10000\n1 2\n2 3\n3 1\"\"\") == \"0\"\n\nassert solution(\"\"\"5 3 2 10000\n1 2\n2 3\n3 4\n4 5\n5 6\"\"\") == \"3\"\n\nassert solution(\"\"\"5 3 2 10000\n1 2\n2 3\n3 4\n4 5\n5 6\"\"\") == \"2\"\n\nassert solution(\"\"\"5 3 2 10000\n1 2\n2 3\n3 4\n4 5\n5 6\"\"\") == \"1\"\n\nassert solution(\"\"\"5 3 2 10000\n1 2\n2 3\n3 4\n4 5\n5 6\"\"\") == \"0\""
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1') == '0'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 2 10000') == '1'\nassert solution('6 4 1') == '0'\nassert solution('5 5 2') == '4'\n\"\"\"\n\n\"\"\"-----SOLUTION-----\"\"\"\nfrom collections import defaultdict\n\nn, m, k, p = map(int, input().split())\ngraph = defaultdict(list)\nfor i in range(m):\n    u, v = map(int, input().split())\n    graph[u].append(v)\n    graph[v].append(u)\n\ncount = 0\nfor i in range(1, n+1):\n    if len(graph[i]) >= k + 2:\n        continue\n    else:\n        for j in range(k, 0, -1):\n            if i in graph[j]:\n                break\n        else:\n            count += 1\nprint(count % p)\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 0\n1 3 0 0\n''') == '26'\nassert solution('''\n5\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 0\n''') == '29'\nassert solution('''\n10\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 0\n1 3 0 0\n0 4 1 0\n0 4 2 0\n0 4 3 0\n0 4 0 0\n''') == '46'''"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n') == '0\\n'\nassert solution('4\\n') == '6\\n'\nassert solution('5\\n') == '14\\n'\nassert solution('6\\n') == '10\\n'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 0\n''') == '26'\n\nassert solution('''\n3\n0 1 1\n1 0 2\n1 2 3\n''') == '15'"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n') == '26'\nassert solution('5\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n1 3 0 2\\n') == '27'"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 1 1\n1 0 2\n1 2 0\n1 2 3\n''') == '26'\n\nassert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '20'\n'''"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == '26'\nprint(solution(input()))"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0') == '26'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 2\n''') == '26'\nassert solution('''\n6\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n1 3 0 2\n1 4 0 3\n''') == '26'\nassert solution('''\n2\n1 1\n1 1\n''') == '2'\nassert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 3 0 2\n''') == '26'\nassert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 3 0 2\n''') == '26'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '26'\nassert solution('5') == '0'"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1 1\n1 0 2\n1 2 0\n''') == '26'\n\nassert solution('''4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '33'\n\nassert solution('''9\n0 1 2 1 1 2 1 1\n1 0 2 2 1 1 2 1 1\n1 1 0 1 1 1 2 1 1\n1 1 1 0 2 1 1 1 1\n1 1 1 1 0 1 1 2 1 1\n1 1 1 2 0 2 1 1 1 1\n1 1 1 2 1 1 1 1 1 1\n1 1 1 2 1 1 1 1 1 1\n1 1 1 2 1 1 1 1 1 1\n1 1 1 2 1 1 1 1 1 1\n1 1 1 2 1 1 1 1 1 1\n1 1 1 2 1 1 1 1 1 1\n1 1 1 2 1 1 1 1 1 1\n''') == '75'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n20 20 20 40\\nX.X') == '0.333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '0.333333333'\nassert solution('3 10') == '0.363636364'\nassert solution('100 2') == '0.153846154'\nassert solution('3 100') == '0.2666666666'\nassert solution('20 100') == '0.3333333333333333'"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n20 20 20 40\n.T.\n.T.\n''') == '0.49999999999999994'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n20 20 20 40\\nX.X\\nT.T') == '0.333333333'\nassert solution('2\\n4\\n60 60 60 60\\nT.X\\nT.T\\nT.X\\nX.X\\nT.T') == '0.333333333333333333333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\n50 50 50 50\nX.X\nT.T\nX.X\n''') == '0.333333333'\nassert solution('''3 3\n20 20 20 40\nX.X\nT.T\nX.X\n''') == '0.333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0.3333333333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.3333333333333333'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.6666666666666666'\nassert solution('3 2\\n20 20 20 40\\nT.T\\nT.T') == '0.6666666666666666'\nassert solution('3 2\\n20 20 20 40\\nX.X\\nT.T') == '0.5'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '0.33333'\nassert solution('3 3') == '0.5'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '0.333333333'\nassert solution('6 6') == '0.0'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '0.16666666667'\nassert solution('6 2') == '0.5'\nassert solution('9 10') == '0.5'\nassert solution('20 20 20 40') == '0.16666666667'\nassert solution('10 10 10 10 10 10') == '0.16666666667'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('2 2 0 0') == '0.75'\nassert solution('3 2 0 0') == '0.0'\nassert solution('3 3 0 0') == '1.0'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''45 45 0 0\n''') == '0.75'\nassert solution('''10 0 0 0\n''') == '0.0'\n'''"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''45 45 0 0\n0.25''') == '0.75'\nassert solution('''0 0 0.25\n0 0 0.25\n0 0 0.25\n0 0 0.25\n0 0 0.25''') == '0.125'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('0.01 0.01 0.01 0.01') == '0.00999'"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('1 1 1 1') == '0.0'\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"45 45 0 0\"\"\") == \"0.75\"\nassert solution(\"\"\"0 45 0 0\"\"\") == \"1.00\"\nassert solution(\"\"\"35 50 45 50\"\"\") == \"0.75\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 45 45') == '0.75'\nassert solution('0 0 0 45') == '0.6'\nassert solution('0 0 0 45') == '0.5'\n\"\"\"\nimport re"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('45 0 0 0') == '0.75'\nassert solution('45 45 45 45') == '0.75'\nassert solution('45 45 45 45') == '0.75'\nassert solution('45 45 45 45') == '0.75'"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n45 45 0 0\n''') == '0.75'\n\nassert solution('''\n20 20 0 0\n''') == '0.5'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == '4'\nprint('PASSED')"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == \"4\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '4'\nassert solution('5 20') == '9'\nassert solution('5 20') == '4'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '4'\nassert solution('3 3') == '0'\nassert solution('1 2') == '24'\nassert solution('2 3') == '12'\nassert solution('2 3 2') == '0'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"6 5\") == \"3\"\nassert solution(\"5 5\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n') == '0'\nassert solution('2\\n') == '0'\nassert solution('5\\n') == '4'\nassert solution('10\\n') == '29'\nassert solution('100\\n') == '3998'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == \"4\"\n\nassert solution('10 12\\n0 2 3\\n2 4 5\\n4 6 7\\n6 8 9\\n8 10 11\\n10 12 13\\n12 14 15\\n14 16 17\\n16 18 19\\n18 20 21\\n20 22 23\\n22 24 25\\n24 26 27\\n26 28 29\\n28 30 31\\n30 32 33\\n32 34 35\\n34 36 37\\n36 38 39\\n38 40 41\\n40 42 43\\n42 44 45\\n44 46 47\\n46 48 49\\n48 50 51\\n50 52 53\\n52 54 55\\n54 56 57\\n56 58 59\\n58 60 61\\n60 62 63\\n62 64 65\\n64 66 67\\n66 68 69\\n68 70 71\\n70 72 73\\n72 74 75\\n74 76 77\\n76 78 79\\n78 80 81\\n80 82 83\\n82 84 85\\n84 86 87\\n86 88 89\\n88 90 91\\n90 92 93\\n92 94 95\\n94 96 97\\n96 98 99\\n98 100 101\\n100 102 103\\n102 104 105\\n104 106 107\\n106 108 109\\n108 110 111\\n110 112 113\\n112 114 115\\n114 116 117\\n116 118 119\\n118 120 121\\n120 122 123\\n122 124 125\\n124 126 127\\n126 128 129\\n128 130 131\\n130 132 133\\n132 134 135\\n134 136 137\\n136 138 139\\n138 140 141\\n140 142 143\\n142 144 145\\n144 146 147\\n146 148 149\\n148 150 151\\n150 152 153\\n152 154 155\\n154 156 157\\n156 158 159\\n158 160 171\\n160 162 171\\n162 164 165\\n164 166 167\\n166 168 169\\n168 170 171\\n170 172 173\\n172 174 175\\n174 176 177\\n176 178 179\\n178 180 181\\n180 182 183\\n182 184 185\\n184 186 187\\n186 188 189\\n188 190 191\\n190 192 193\\n192 194 195\\n194 196 197\\n196 198 199\\n198 200 201\\n200 202 203\\n202 204 205\\n204 206 207\\n206 208 209\\n208 210 211\\n210 212 213\\n212 214 215\\n214 216 217\\n216 218 219\\n218 220 221\\n220 222 223\\n222 224 225\\n224 226 227\\n226 228 229\\n228 230 231\\n230 232 233\\n232 234 235\\n234 236 237\\n236 238 239\\n238 240 241\\n240 242 243\\n242 244 245\\n244 246 247\\n246 248 249\\n248 250 251\\n250 252 253\\n252 254 255\\n254 256 257\\n256 258 259\\n258 260 261\\n260 262 263\\n262 264 265\\n264 266 267\\n266 268 269\\n268 270 271\\n270 272 273\\n272 274 275\\n274 276 277\\n276 278 279\\n278 280 281\\n280 282 283\\n282 284 285\\n284 286 287\\n286 288 289\\n288 290 291\\n290 292 293\\n292 294 295\\n294 296 297\\n296 298 299\\n298 300 301\\n300 302 303\\n302 304 305\\n304 306 307\\n306 308 309\\n308 310 311\\n310 312 313\\n312 314 315\\n314 316 317\\n316 318 319\\n318 320 321\\n320 322 323\\n322 324 325\\n324 326 327\\n326 328 329\\n328 330 331\\n330 332 333\\n332 334 335\\n334 336 337\\n336 338 339\\n338 340 341\\n340 342 343\\n342 344 345\\n344 346 347\\n346 348 349\\n348 350 351\\n350 352 353\\n352 354 355\\n354 356 357\\n356 358 359\\n358 360 361\\n360 362 363\\n362 364 365\\n364 366 367\\n366 368 369\\n368 370 371\\n370 372 373\\n372 374 375\\n374 76 375\\n76 376 377\\n76 378 379\\n78 380 381\\n80 382 383\\n82 384 385\\n84 386 387\\n86 388 389\\n88 390 391\\n90 392 393\\n92 394 395\\n94 396 397\\n96 398 399\\n98 400 401\\n100 402 403\\n102 404 405\\n104 406 407\\n106 408 409\\n108 410 411\\n110 412 413\\n112 414 415\\n114 406 417\\n116 408 419\\n118 406 421\\n120 408 422\\n122 406 425\\n124 406 426\\n126 406 427\\n128 406 428\\n130 406 429\\n132 406 430\\n134 406 431\\n136 406 432\\n138 406 433\\n140 406 434\\n142 406 435\\n144 406 436\\n146 406 437\\n148 406 438\\n150 406 439\\n152 406 440\\n154 406 441\\n156 406 442\\n158 406 443\\n160 406 444\\n162 406 445\\n164 406 446\\n166 406 447\\n168 406 448\\n170 406 449\\n172 406 450\\n174 406 451\\n176 406 452\\n178 406 453\\n180 406 454\\n182 406 455\\n184 406 456\\n186 406 457\\n188 406 458\\n190 406 459\\n192 406 460\\n194 406 461\\n196 406 462\\n198 406 463\\n200 406 464\\n202 406 465\\n204 406 466\\n206 406 467\\n208 406 468\\n210 406 469\\n212 406 470\\n214 406 471\\n216 406 472\\n218 406 473\\n220 406 474\\n222 406 475\\n224 406 476\\n226 406 477\\n228 406 478\\n230 406 479\\n232 406 480\\n234 406 481\\n236 406 482\\n238 406 483\\n240 406 484\\n242 406 485\\n244 406 486\\n246 406 487\\n248 406"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9') == '4'\nassert solution('5 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\\n5 6\\n0 1 2\\n0 3 8\\n1 2 11') == '12'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('100') == '100'\nassert solution('10000') == '10000'\nassert solution('100000') == '100000'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n10 0 3 5\n10 0 3 5\n''') == '200'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n10 10 0 5\n\"\"\") == \"100\"\nassert solution(\"\"\"\n1\n10 10 0 0\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n10 10 0 5\n''') == '100'\nassert solution('''\n3\n3 1 0 5\n3 1 0 5\n3 1 0 5\n''') == '4'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n10 10 0 5\\n') == '100'\nassert solution('2\\n30 30 0 5\\n') == '170'\nassert solution('3\\n40 40 0 5\\n') == '210'\nassert solution('4\\n70 70 0 5\\n') == '210'\nassert solution('5\\n100 100 0 5\\n') == '200'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n10 10 0 5') == '100'\nassert solution('2\\n
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '1'\nassert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '0'\n\nstdin = '5\\n-1 -1 -1 -1\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8'\nprint(solution(stdin))\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"0\""
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\n\nassert solution('''\n4\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n1 1 1 1\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n2\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\nassert solution(\n'''\n1\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '0'\nassert solution(\n'''\n1\n10 -2 8 3\n1 -1 3 4\n2 4 6 10\n''') == '1'\n'''\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2 3 4\\n5 6 7 8') == '1'\nassert solution('2\\n1 3 4\\n5 6 7 8') == '0'\nassert solution('4\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n3 5 6 4') == '1'\n\"\"\""
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n0 0 2 2\n1 1 3 4\n5 7 6 8\n7 7 1 5\n''') == '1'\nassert solution('''\n10\n-10 0 0 10\n-20 -10 0 10\n0 0 -10 10\n0 -10 -20 10\n0 0 -10 -20\n0 -10 -20 -20\n''') == '1'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n') == '1'\nassert solution('1\\n10\\n-10 -10\\n-10 -10\\n') == '1'"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '1'\nprint(solution(input))\n\"\"\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"17\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"0 0\\n1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n1 1\\n0 0\\n1 1\\n\") == \"0\""
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '17'\nassert solution('5 5') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"0\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"0\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"0\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"0\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '17'\nassert solution('1 2 3 4 5') == '17'\nassert solution('5 4 3 2 1') == '17'\nassert solution('-2 -2 -2 -2 -2') == '17'\nassert solution('8 8 8 8 8') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '17'\nassert solution('5 5\\nE E E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n\"\"\"\n) == \"17\"\n\nassert solution(\n\"\"\"6 5\nE E E E E E E\n1 2 3 4 5 6\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8 8\n9 9 9 9 9 9\nS S S S S S\n1 1 1 1 1 1\n\"\"\"\n) == \"26\"\n\nassert solution(\n\"\"\"3 3\nE E E E\n1 2 3\n-1 -1 -1\n8 8 8\nS S S S\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n\"\"\"\n) == \"18\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5 5\") == \"17\"\nassert solution(\"5 4 3 2 1\") == \"16\"\nassert solution(\"-2 -2 -2 -2 -2\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"0\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1 4 3 5 2\"\nassert solution(\"5\") == \"1 4 3 5 2\"\n\"\"\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'impossible'\nassert solution('4') == '1 2 3 4'\nassert solution('10') == '4 6 3 2 1'\nassert solution('15') == '5 7 2 1 3 4 6 8'\nassert solution('20') == '5 7 3 1 4 2 8 6 9 6 5 2 1'"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2\\n3 4\\n2 3\\n5 6') == '1 4 3 5 2'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"impossible\"\nassert solution(\"3 2 3 1 1\") == \"1 4 3 5 2\""
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '1 3 5 2 4'\nassert solution('3') == '1 3 5 2 4'\nassert solution('4') == 'impossible'\nassert solution('5') == '1 4 3 5 2'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 3 1 1') == '1 4 3 5 2'\nassert solution('5 2 3 1 1') == '1 4 3 5 2'\nassert solution('1000000000 3 2 3 1 1') == '1 4 3 5 2'\nassert solution('1000000000 5 2 3 1 1') == '1 4 3 5 2'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3 2 3 1 1\n''') == '1 4 3 5 2 '\nassert solution('''5\n2 3 5 1 4\n''') == '2 3 5 1 4 '\nassert solution('''5\n1 2 1 2 1\n''') == 'impossible '\nassert solution('''5\n2 3 5 1 4\n''') == '1 4 3 5 2 '\nassert solution('''5\n3 2 3 1 1\n''') == '1 4 3 5 2 '\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"2 2 2\") == \"1 4 3 5 2\"\nassert solution(\"3 1\") == \"1 3 5 2 4\"\n\nSolution:\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3 2 3 1 1\n''') == '1 4 3 5 2', 'incorrect'\nassert solution('''5\n3 3 3 1 1\n''') == '1 4 3 5 2', 'incorrect'\nassert solution('''5\n1 1 1 2 3\n''') == '2 1 3 1 1', 'incorrect'\nassert solution('''5\n4 4 4 4 4\n''') == '4 4 4 4 4', 'incorrect'\nassert solution('''10\n3 5 1 6 4 8 5 4 8 2 2\n''') == '2 4 1 5 8 2', 'incorrect'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'impossible'\nassert solution('5 3 2 3 1 1') == '1 4 3 5 2'\nassert solution('6') == 'impossible'\nassert solution('6 3 2 3 1 1') == '1 4 3 5 2'\nassert solution('7') == 'impossible'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3 0 1\n1 4\n''') == '0.76772047'\nassert solution('''\n2\n-3 1 -2\n1 4\n''') == '0.66961786'\nassert solution('''\n1\n1 5\n''') == '0.3333333333333333'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == '0.76772047'\n\n--input\n6\n4 0 1\n1 4\n5 5\n6 6\n5 5\n7 7\nSample Output\n0.96673737\n'''\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == '0.76772047'\n\nassert solution('2\\n3 1 1\\n1 1\\n') == '1.3333333333333333'\n\nassert solution('5\\n3 2 4 2\\n1 3\\n2 2\\n3 3\\n2 4\\n') == '0.15843525'\n\nassert solution('2\\n3 1 1\\n1 4\\n') == '1.3333333333333333'\n\nassert solution('5\\n3 2 4 2\\n1 3\\n2 2\\n3 3\\n2 4\\n') == '0.15843525'\n\"\"\"\n\n\nfrom math import *\nimport random\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('1\\n1\\n2') == '0.5'\nassert solution('1\\n1\\n3') == '0.3333333333333333'"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6\n1 4\n2 0\n1 1\n2 4\n3 2\n1 3\n\"\"\") == \"0.65470095\"\nassert solution(\"\"\"\n1\n1 1\n\"\"\") == \"0.8\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('2') == '0.81407859'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n3 0 1\n1 4\n''') == '0.76772047'\nassert solution('''\n6\n0 1\n2 5\n5 1\n1 1\n4 4\n4 1\n''') == '0.6928689'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('3 0 1\\n1 4') == '0.76772047'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n0 1 2 1') == '0.5'\nassert solution('10\\n0 1 1 0.5 1 1 1 0.5 1 1 1 1 0.5 1 1 1 1') == '0.16666666666666666'\nassert solution('20\\n0 1 1 0.5 1 1 1 0.5 1 1 1 1 0.5 1 1 1 1') == '0.25'\nassert solution('50\\n0 1 1 0.5 1 1 1 0.5 1 1 1 1 0.5 1 1 1 1') == '0.41666666666666666'\nassert solution('100\\n0 1 1 0.5 1 1 1 0.5 1 1 1 1 0.5 1 1 1 1') == '0.41666666666666666'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == '0.76772047'\nassert solution('2\\n0 0 1\\n1 1') == '1.000000000'\nassert solution('3\\n2 0 0\\n1 1\\n2 1') == '0.619567916'"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''zdas\na\ned\nedas\n''') == '4'\n\nassert solution('''z\nb\nc\nd\ne\nf\ng\nh\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '26'\n\nassert solution('''def\ng\nh\ni\nj\nk\nl\nm\nn\no\np\nq\nr\ns\nt\nu\nv\nw\nx\ny\nz\n''') == '19'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nhello teams\n''') == '27'\nassert solution('''\nhello teams\n''') == '27'\nassert solution('''\naaaba\nb''') == '4'\nassert solution('''\naaaba\na''') == '3'\nassert solution('''\naabbbbaaaa\naaabbbaaaa\n''') == '4'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"hel lo aes\") == \"1+1+1=3\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\ns_1 = \"hello teams\"\ns_2 = \"teams\"\n\n## Shifts Forward ##\ns_1 = \"hello teams\"\ns_2 = \"teams\"\ns_1 = ''.join(reversed(s_1))\ns_2 = ''.join(reversed(s_2))\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello hello') == '0'"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('hello teams') == '27'\nassert solution('abcd') == '6'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '14'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hello teams') == '27'\nassert solution('a a b') == '1'\nassert solution('helo ddde') == '1'\nassert solution('hello world') == '1'\nassert solution('hello zzz') == '0'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"shelmp\") == \"2\"\nassert solution(\"helmp\") == \"3\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"hello there\") == \"14\"\nassert solution(\"\") == \"\""
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''hello teams\n    ''') == '27'\nassert solution('''hello\n    teams\n    ''') == '27'\nassert solution('''hello\n    baba\n    babar\n    babaz\n    ''') == '5'\nassert solution('''bb\n    bab\n    bba\n    bab\n    ''') == '4'\nassert solution('''he\n    hel\n    helo\n    helol\n    helolol\n    helololol\n    helolololol\n    helololololol\n    helolololololol\n    helololololololol\n    helololololololol\n    helolololololololol\n    helololololololololol\n    helololololololololol\n    helolololololololololol\n    helolololololololololol\n    helololololololololololol\n    helololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol\n    helolololololololololololol"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3') == \"2\"\nassert solution('15 7\\n0 5 5\\n0 6 0\\n2 0 0\\n1 0 1\\n3 2 1\\n0 3 2\\n2 4 2\\n1 3 2\\n2 4 2\\n4 5 2\\n1 6 2\\n2 7 2\\n1 8 2\\n3 9 2\\n0 9 2\\n2 10 2\\n2 11 2\\n4 12 2\\n2 13 2\\n1 14 2\\n0 14 2\\n0 15 2\\n0 16 2\\n16 17 2\\n4 18 2\\n17 19 2\\n0 19 2\\n18 20 2\\n1 21 2\\n19 22 2\\n10 23 2\\n2 24 2\\n25 26 2\\n6 27 2\\n18 28 2\\n19 29 2\\n10 30 2\\n1 31 2\\n25 32 2\\n23 33 2\\n19 34 2\\n12 35 2\\n4 36 2\\n13 37 2\\n16 38 2\\n23 39 2\\n10 40 2\\n19 41 2\\n8 42 2\\n0 43 2\\n12 44 2\\n19 45 2\\n22 46 2\\n11 47 2\\n8 48 2\\n2 49 2\\n10 50 2\\n1 51 2\\n19 52 2\\n4 53 2\\n5 54 2\\n0 55 2\\n2 56 2\\n11 57 2\\n6 58 2\\n2 59 2\\n4 60 2\\n7 61 2\\n6 62 2\\n11 63 2\\n10 64 2\\n8 65 2\\n0 66 2\\n7 67 2\\n0 68 2\\n17 69 2\\n3 70 2\\n4 71 2\\n1 72 2\\n2 73 2\\n1 74 2\\n4 75 2\\n1 76 2\\n2 77 2\\n1 78 2\\n2 79 2\\n1 80 2\\n3 81 2\\n0 82 2\\n4 83 2\\n1 84 2\\n0 85 2\\n14 86 2\\n13 87 2\\n11 88 2\\n8 89 2\\n0 90 2\\n9 91 2\\n2 92 2\\n12 93 2\\n13 94 2\\n18 95 2\\n17 96 2\\n16 97 2\\n14 98 2\\n10 99 2\\n4 100 2\\n19 101 2\\n4 102 2\\n7 103 2\\n6 104 2\\n3 105 2\\n0 106 2\\n2 107 2\\n1 108 2\\n3 109 2\\n0 110 2\\n4 111 2\\n3 112 2\\n2 113 2\\n2 114 2\\n1 115 2\\n2 116 2\\n1 117 2\\n2 118 2\\n1 119 2\\n0 120 2\\n16 121 2\\n11 122 2\\n1 123 2\\n5 124 2\\n0 125 2\\n7 126 2\\n2 127 2\\n11 128 2\\n5 129 2\\n0 130 2\\n4 131 2\\n19 132 2\\n17 133 2\\n11 134 2\\n4 135 2\\n8 136 2\\n1 137 2\\n0 138 2\\n18 139 2\\n10 140 2\\n8 141 2\\n6 142 2\\n3 143 2\\n0 144 2\\n4 145 2\\n7 146 2\\n2 147 2\\n6 148 2\\n1 149 2\\n1 150 2\\n2 151 2\\n2 152 2\\n1 153 2\\n4 154 2\\n1 155 2\\n5 156 2\\n0 157 2\\n6 158 2\\n2 159 2\\n3 160 2\\n0 161 2\\n4 162 2\\n5 163 2\\n0 164 2\\n5 165 2\\n1 166 2\\n2 167 2\\n1 168 2\\n2 169 2\\n1 170 2\\n4 171 2\\n7 172 2\\n6 173 2\\n1 174 2\\n3 175 2\\n0 176 2\\n4 177 2\\n1 178 2\\n0 179 2\\n6 180 2\\n18 181 2\\n10 182 2\\n8 183 2\\n0 184 2\\n7 185 2\\n4 186 2\\n5 187 2\\n8 188 2\\n0 189 2\\n3 190 2\\n1 191 2\\n2 192 2\\n1 193 2\\n4 194 2\\n3 195 2\\n0 196 2\\n2 197 2\\n1 198 2\\n2 199 2\\n1 200 2\\n1 201 2\\n2 202 2\\n1 203 2\\n1 204 2\\n4 205 2\\n1 206 2\\n3 207 2\\n0 208 2\\n4 209 2\\n1 210 2\\n0 211 2\\n5 212 2\\n0 213 2\\n4 214 2\\n4 215 2\\n1 216 2\\n1 217 2\\n2 218 2\\n1 219 2\\n1 220 2\\n2 221 2\\n1 222 2\\n4 223 2\\n1 224 2\\n2 225 2\\n1 226 2\\n4 227 2\\n1 228 2\\n2 229 2\\n1 230 2\\n1 231 2\\n1 232 2\\n2 233 2\\n1 234 2\\n2 235 2\\n1 236 2\\n4 237 2\\n1 238 2\\n2 239 2\\n1 240 2\\n1 241 2\\n2 242 2\\n1 243 2\\n1 244 2\\n2 245 2\\n1 246 2\\n1 247 2\\n1 248 2\\n1 249 2\\n2 250 2\\n1 251 2\\n2 252 2\\n1 253 2\\n1 254 2\\n2 255 2\\n1 256 2\\n1 257 2\\n2 258 2\\n1 259 2\\n2 260 2\\n1 261 2\\n1 262 2\\n1 263 2\\n1 264 2\\n2 265 2\\n1 266 2\\n1 267 2\\n2 268 2\\n1 269 2\\n2 270 2\\n1 271 2\\n1 272 2\\n1 273 2\\n1 274 2\\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n\"\"\") == \"2\"\nprint(\"Solution:\")\nprint(solution(input))\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '2'\nassert solution('''\n5 5\n0 0\n2 2\n4 4\n1 1\n5 5\n0 1\n''') == '2'\nassert solution('''\n5 5\n0 0\n2 2\n4 4\n1 1\n5 5\n0 1\n''') == '1'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '2'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n5\n4''') == '2'\nassert solution('''6\n1\n5\n4\n7\n9\n16\n17\n4\n6\n3\n1\n12\n6\n3\n1''') == '3'\nassert solution('''10\n1\n5\n4\n7\n9\n16\n17\n4\n6\n3\n1\n12\n6\n3\n1''') == '4'\nassert solution('''30\n1\n5\n4\n7\n9\n16\n17\n4\n6\n3\n1\n12\n6\n3\n1\n12\n6\n3\n1\n12\n6\n3\n1\n12\n6\n3\n1''') == '34'"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '2'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == \"2\""
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"3 3\") == \"4\"\nassert solution(\"2 4\") == \"3\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '1'\nassert solution('6 3') == '2'\nassert solution('1 8') == '0'\nassert solution('5 4') == '1'\nassert solution('7 7') == '0'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n3 5\n1 6\n2 5\n6 4\n3 4\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\na\nb\nc\nd\ne\ncad\n''') == '26'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 3\na\nb\nc\nd\ne\ncad\n\"\"\"\n) == \"26\"\n\nassert solution(\n\"\"\"\n4 5\naaa\naa\na\nb\n\"\"\"\n) == \"5\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"1 1\") == \"3\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"10 10\") == \"1\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '26'\nassert solution('1 2') == '1'\nassert solution('4 5') == '5'\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str):\n        ans = 1\n        string = stdin.split()\n        for i in range(1,int(string[0])+1):\n            ans += (int(string[0])*i)\n        return str(ans)\n\nsolution = Solution()\nprint(solution.solution(stdin))"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\\n10\\n20\\n25\\n30\\n35\\n20\\n15\\n30\\n45\\n40\\n50\\n65\\n90\\n95\\n50\\n95\\n55\\n95\\n65\\n90\\n85\\n75\\n95\\n90\\n90\\n95\\n100\\n95\\n95\\n95\\n90\\n85\\n75\\n85\\n75\\n85\\n95\\n90\\n85\\n75\\n85\\n75\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85\\n85\\n85\\n90\\n85"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2\\n4\\n\") == \"26\"\nassert solution(\"3\\n2\\n5\\n\") == \"1\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n\") == \"26\"\nassert solution(\"4 5\\n\") == \"10\"\nassert solution(\"2 5\\n\") == \"0\"\nassert solution(\"2 2\\n\") == \"4\"\nassert solution(\"1 5\\n\") == \"7\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n1') == '2'\nassert solution('1\\n2\\n1\\n3') == '2'\nassert solution('1\\n2\\n3\\n4') == '3'\nassert solution('1\\n2\\n3\\n4\\n5') == '4'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\nabc\\n') == '26'\nassert solution('2\\n4\\nacb\\n') == '25'\nassert solution('3\\n7\\nabc\\nabc\\nacb\\n') == '11'\nassert solution('5\\n7\\nabc\\nabc\\nacb\\n') == '10'\nassert solution('6\\n12\\nabcabc\\nabcabc\\nabcabc\\n') == '2'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('10 5 3 1 3') == '3 5 2 1 4'\nassert solution('20 8 3 2 1') == '3 5 2 1 4'\nassert solution('20 10 8 3 2 1') == '3 5 2 1 4'\nassert solution('20 15 8 3 2 1') == '3 5 2 1 4'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10 30\") == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('2 5 4 3') == '2 3 1 4 5'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('5 10 30') == '4 5 3 1 2'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10'"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10 30') == '1 2 3 4 5'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4', 'Wrong answer'\nassert solution('1 5 3') == '1 5 3', 'Wrong answer'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('2 1 2 2') == '2 1 3'\nassert solution('5 4 5 5 3') == '5 4 3 5'\nassert solution('5 5 5 5 5 5 5 5 5') == '5 5 5 5'\nassert solution('5 5 5 5 5 5 5 5 5 5 5') == '5 5 5 5'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 10 30\n10 5 3 1 3\n''') == \"3 5 2 1 4\"\nassert solution('''\n5 10 30\n10 5 2 1 3\n''') == \"3 5 2 1 4\"\nassert solution('''\n5 10 30\n10 5 3 1 3\n''') == \"3 5 2 1 4\"\nassert solution('''\n5 10 30\n10 5 3 1 3\n''') == \"3 5 2 1 4\"\nassert solution('''\n5 10 30\n10 5 3 1 3\n''') == \"3 5 2 1 4\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2\n1 1\n2 3\n2 3\"\"\") == \"2\"\n\nassert solution(\"\"\"4\n1 2\n1 3\n2 3\n2 4\"\"\") == \"1\"\n\nassert solution(\"\"\"10\n1 1\n1 2\n1 3\n2 2\n2 3\n2 4\n3 3\n3 4\n4 4\"\"\") == \"3\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1 1') == '1'\nassert solution('3\\n2 3') == '1'\nassert solution('3\\n1 5') =='shovel time!'\n\"\"\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"shovel time!\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 1\n2 3\n2 3\n''') =='shovel time!'\nassert solution('''\n2\n2 1\n2 3\n''') =='shovel time!'\n'''\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2 1\n1 2\n2 3\n''') == '2'\n\nassert solution('''\n3\n1 1\n2 3\n2 3\n''') =='shovel time!'"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n1 1\n2 3\n3 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n0 1\n1 1\n1 3\n2 2\n2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n0 0\n1 1\n2 2\n\"\"\") == \"shovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 1\n2 3\n2 3\n''') == '2'\nassert solution('''\n4 5\n5 6\n6 7\n''') == '1'\n'''"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') =='shovel time!'\nassert solution('4') =='shovel time!'\nassert solution('5') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') =='shovel time!'\nassert solution('2') =='shovel time!'\nassert solution('1') =='shovel time!'\nassert solution('2') =='shovel time!'\nassert solution('3') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n3\n1 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n2 1\n2 2\n1 2\n3 3\n3 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"3\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"7\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == '3'\n\nassert solution('''\n4\n2 3 2 4\n''') == '2'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n1 2 1 2\\n\"\n) == \"3\"\n\nassert solution(\n    \"1\\n1\\n1\\n1\\n\"\n) == \"1\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 2 2 1\\n\"\n) == \"1\"\nassert solution(\n    \"1 2 2 3\\n\"\n) == \"2\"\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n8\n1 2 1 2 1 1 2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n11\n1 2 2 2 2 1 2 2 1 1 2 1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n13\n1 2 1 2 2 2 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1 2') == '3'\nassert solution('3 3 3 3') == '3'\nassert solution('3 3 2 3') == '3'\nassert solution('4 4 4 4') == '3'\nassert solution('3 3 2 3') == '3'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nprint(solution())\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n1 2 1 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n8\n1 2 5 5 3 7 5 4 6\n\"\"\") == \"6\""
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"3\", \"Should give 3\"\nassert solution(\"4\") == \"3\", \"Should give 3\""
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 999999937\") == \"79\"\nassert solution(\"3 3 999999937\") == \"30\"\nassert solution(\"5 5 2\") == \"6\"\nassert solution(\"5 5 1\") == \"1\"\nassert solution(\"5 5 1\") == \"1\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4 999999937') == '79'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4 999999937''') == '79'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 999999937') == '79'\nassert solution('3 4 999999937') == '42'\nassert solution('3 5 999999937') == '24'\nassert solution('2 5 999999937') == '13'\nassert solution('1 5 999999937') == '7'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 4 1\") == \"4\"\nassert solution(\n    \"4 4 899999999\") == \"80\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4 999999937') == '79'\nprint(solution(input()))\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1\") == \"0\"\nassert solution(\"2 2 1 1\") == \"3\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 1') == '1'\nassert solution('2 3 4') == '1'\nassert solution('3 4 1') == '3'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 1\n1''') == '1'\nassert solution('''1 2 2\n1''') == '2'\nassert solution('''2 2 1\n1''') == '1'\nassert solution('''4 4 999999937\n9999999999''') == '59'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\nassert solution(\"4 4 999999999\") == \"4\"\nassert solution(\"4 4 9999999\") == \"4\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmushrooms\\nartichoke'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '1\\n'\n    '4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\n'\nassert solution(\n    '1\\n'\n    '5 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\n'\nassert solution(\n    '1\\n'\n    '3 +zucchini +mozzarella -mushrooms\\n'\n    '7 +zucchini +mozzarella -mushrooms\\n'\n    '8 +zucchini +mozzarella -mushrooms\\n') == 'zucchini\\nmushrooms\\n'\nassert solution(\n    '1\\n'\n    '2 +zucchini +mozzarella -mushrooms\\n'\n    '1 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini\\nmushrooms\\n'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'zucchini'\nassert solution('2') == 'zucchini'\nassert solution('3') == 'zucchini'\nassert solution('4') == 'zucchini'\nassert solution('5') == ''"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'zucchini'\nassert solution(\"\"\"4 +zucchini +mozzarella +mushrooms -artichoke\"\"\") == 'zucchini'\nprint('All Tests Passed!')"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke\\n') == 'zucchini'\nassert solution('2\\n1 +zucchini\\n-mozzarella\\n') == ''\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini\\nmushrooms\\nmozzarella\\nartichoke'\nassert solution('''\n2\n+mushrooms -tofu +banana +mushrooms\n''') == 'banana\\nmushrooms'\n''')\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 +zucchini +mozzarella +mushrooms -artichoke''') == 'zucchini\\nmushrooms\\nartichoke'\nassert solution('''5 +goat +cow +chicken -goat''') == 'goat\\ncow\\nchicken'\nassert solution('''1 +flower +monkey +dog +giraffe +giraffe +tiger +monkey''') == 'flower\\ngiraffe\\ngiraffe\\ntiger\\nmonkey'\nassert solution('''1 +apple +cherry +apple +cherry +cherry +cherry''') == 'apple\\ncherry\\ncherry\\ncherry\\ncherry\\ncherry\\ncherry'\nassert solution('''3 +cheese +pork +honey +chicken +cheese +pork +honey''') == 'cheese\\npork\\nhoney\\ncheese\\npork\\nhoney'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n4 +zucchini +mozzarella +mushrooms -artichoke\") == \"zucchini\\nmushrooms\\nmozzarella\\nartichoke\"\n\"\"\"\n\nn = int(input())\n\nfor i in range(n):\n    wishes = input().split()\n    result = ''\n    for w in wishes:\n        if w[0]!= '-':\n            if w in result:\n                result = result.replace(w, '', 1)\n            else:\n                result += w\n    print(result)"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n+bananas +beef +mushrooms +potato\n+pepperoni +pickles +mushrooms +bacon +pomelos +carrot\n''') == 'bananas'\nassert solution('''\n1\n+garlic +onions +potatoes +mushrooms +peppers +salt\n+cheese +peppers +onions +tofu +potatoes +peppers +cheese\n+garlic +beef +mushrooms +pizza +sauce +peppers +pickles +peppers\n''') == 'garlic'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini\\nmushrooms\\nmozzarella'\n\n'''\nThe first part of this problem is to count the toppings that are mentioned in each list of wishes. Given a list of wishes, we\u2019ll get a dictionary which counts the number of times a specific topping has been mentioned. For instance, if we have a list of wishes:\n\n+zucchini +mozzarella +mushrooms -artichoke\nthen the dictionary will contain the number of times that \u2018zucchini\u2019 and \u2018artichoke\u2019 appear in any of the lists.\n\nNow, after making this dictionary, we can iterate over the list of lists of wishes and get the toppings that have been mentioned more than once and get a count of how many times they appeared. For instance, if we have a list of lists of wishes:\n\n+zucchini +mozzarella +mushrooms -artichoke\nthen we will get a dictionary, counting how many times \u2018zucchini\u2019 and \u2018artichoke\u2019 appeared.\n\nSo, let\u2019s make a function, which, given a list of lists of wishes, calculates how many times each topping appears and then returns a dictionary.\n'''"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\nRPSRPS\\nPPSRPS\") == \"RPSRPS\"\nassert solution(\"2\\nPPPSRPS\\nPPSRPS\") == \"RPSRPS\"\nassert solution(\"3\\nRPSRPSRPS\\nPPPSRPS\\nPPSRPS\") == \"PPPSRPS\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nR') == 'R'\nassert solution('1\\nP') == 'P'\nassert solution('1\\nR') == 'R'\n\nSample Input:\n3 5\nPPPS\nRPPP\nPSPS\nSSSS\nSample Output:\nPSPS\nSSSS\nRPPP\nPPPS\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'PS'\nassert solution('4') == 'PP'\nassert solution('4') == 'PS'\n\nassert solution('5') == 'PP'\nassert solution('5') == 'PS'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nR\\nP\\nR') == 'R'\nassert solution('2\\nR\\nR\\nR') == 'R'\nassert solution('3\\nR\\nR\\nR') == 'R'\nassert solution('4\\nR\\nR\\nR\\nR') == 'R'\nassert solution('5\\nR\\nR\\nR\\nR\\nR') == 'R'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"PS\"\nassert solution(\"3 4\") == \"PP\"\nassert solution(\"1 3\") == \"SS\"\nprint('Challenge 1 Success: %s!' % ('\\033[92m' + solution('\\n'.join(stdin.splitlines())) + '\\033[0m'))"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\nPP\nRR\nPS\n''') == 'PS'\nassert solution('''\n1\nRP\n''') == 'RP'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nRPSR\\nPPP') == 'PPPPP'\nassert solution('1\\nRRRRR\\nPPPP') == 'RRRRRR'\nassert solution('3\\nRPSSS\\nPPPSS') == 'PPPSSS'\nassert solution('5\\nRPSRR\\nPPPPR\\nRRRRP\\nPPPPS') == 'RRRRRR'\nassert solution('5\\nRPSRS\\nPPPPR\\nRRRRR\\nPPPPS') == 'RRRRRR'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\nRR\nPP\nSS''') == 'SS'\n\nassert solution('''4\nRR\nPP\nPP\nSS''') == 'RR'\n\nassert solution('''2\nRR\nPP\nSS''') == 'PP'\n\nassert solution('''1\nSS''') == 'SS'\n\nassert solution('''4\nSS\nSS\nSS\nSS''') == 'SS'"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"PS\"\nassert solution(\"1 10\") == \"PS\"\nassert solution(\"3\") == \"PS\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == 'PP'\n\n--Input:--\n3 4\nPP\nRR\nPS\nSS\n--Output:--\nSS\nPP\nRR\n--Explanation:--\nThe order of the predictions is decided by the order of the random numbers generated in the tie-breaking process. The above is equivalent to randomizing the order of the predictions and taking the first one.\n\nSample Input:\n3 5\nPS\nSS\nSS\nPS\nPS\nSample Output:\nSS\nPS\nPS\nSS\n--Explanation:--\nThe above shows how two random sequences that are the same length of choice, but different order, can appear sometime during the match.\n\n--Input:--\n3 10\nPS\nPS\nSS\nPS\nSS\nPS\nSS\nSS\nPS\nPS\nPS\nPS\n--Output:--\nPS\nPS\nSS\nPS\nPS\nPS\n--Explanation:--\nThe above shows how three sequences that are the same length of choice, but different order, can appear sometime during the match.\n\n--Input:--\n3 5\nPS\nPS\nPS\nPS\nPS\n--Output:--\nPS\nPS\nPS\n--Explanation:--\nThe above shows how two random sequences that are the same length of choice, but different order, can appear sometime during the match.\n'''\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n0.1 2.0\\n0\\n0\\n0\\n0\\n\") == \"288.0\"\n\nprint(solution('''\n2\n0.1 1.0\n0.01\n1\n0.1\n0.01\n0\n0.1\n0.01\n0\n0.1\n0.01\n0\n0.1\n0.01\n0\n0.1\n0.01\n0\n'''))\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n0.1 2.0') == '288.0'\nassert solution('10\\n0.1 2.0') == '648.0'\nassert solution('20\\n0.1 2.0') == '908.0'\nassert solution('30\\n0.1 2.0') == '1132.0'\nassert solution('40\\n0.1 2.0') == '1760.0'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0.1 2.0\n1\n1\n1\n1\n1\n''') == '288.000000'\nassert solution('''\n4\n0.1 2.0\n1\n1\n1\n1\n''') == '31.9999998'\nassert solution('''\n3\n0.1 2.0\n1\n1\n1\n1\n''') == '241.9699988'\nassert solution('''\n5\n0.1 2.0\n1\n1\n1\n1\n1\n''') == '241.9699988'\nassert solution('''\n1\n0.1 1.0\n1\n1\n1\n1\n''') == '241.9799988'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '288'\nassert solution('10') == '3600'"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0\nSample Output:\n288\n''') == '288.0'\n\nassert solution('''4\n0.1 2.0\n0\n0\n0\n0\nSample Output:\n408\n''') == '408.0'\n\nassert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0\nSample Output:\n288\n''') == '288.0'\n\nassert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0\nSample Output:\n288\n''') == '288.0'\n\nassert solution('''6\n0.1 2.0\n0\n0\n0\n0\n0\n0\n0\n0\nSample Output:\n288\n''') == '288.0'"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0''') == '288.0000'\n\nassert solution('''8\n0.1 2.0\n0\n0\n0\n0\n0\n0\n0''') == '541.6782'"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"5\n0.1 2.0\n0\n0\n0\n0\n0\"\"\") == \"288.00000\"\nassert solution(r\"\"\"5\n0.1 0.1\n1\n0\n0\n0\n0\"\"\") == \"0.00000\"\nassert solution(r\"\"\"1\n0.1 0.1\n1\n0\n0\n0\n0\"\"\") == \"0.00000\"\nassert solution(r\"\"\"5\n0.1 0.1\n1\n0\n0\n0\n0\"\"\") == \"0.00000\"\nassert solution(r\"\"\"5\n0.1 0.1\n1\n0\n0\n0\n0\"\"\") == \"0.00000\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\n0.1 1.0\n1\n1\n1\n1\n1\n0\n0\n0\n''') == '288'\n\nassert solution('''\n6\n0.1 1.0\n2\n1\n2\n1\n1\n0\n0\n''') == '512'\n\nassert solution('''\n3\n0.1 1.0\n2\n1\n0\n''') == '0'\n\nassert solution('''\n3\n0.1 1.0\n1\n1\n0\n''') == '0'\n\nassert solution('''\n3\n0.1 1.0\n1\n1\n0\n''') == '0'"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n0.1 2.0\n0\n0\n0\n0\n0\n''') == '288'\nassert solution('''\n3\n0.2 1.2\n0.4 1.2\n0.6 1.2\n''') == '5.2'\n\nimport math\n\nclass Rain_to_Rain:\n    def __init__(self, n=1):\n        self.num = n\n    def rain_to_rain(self, rain):\n        return math.pow(rain, 2)\n\nclass Avg_Speed:\n    def __init__(self, speed=1, dist=0):\n        self.dist = dist\n        self.speed = speed\n    def avg_speed(self, speed_all, dist_all):\n        return float(self.dist * speed_all)"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0''') == \"288.00000\"\n\nassert solution('''4\n0.1 2.0\n0\n0\n0\n0''') == \"288.00000\"\n\nassert solution('''3\n0.1 2.0\n0\n0\n0''') == \"288.00000\"\n\nassert solution('''2\n0.1 2.0\n0\n0\n0''') == \"0.00000\"\n\nassert solution('''1\n0.1 2.0\n0\n0\n0''') == \"0.00000\""
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('pastimeofwhimsy') == '1'\nassert solution('meowfactordictionary') == '1'\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nmeow\nmeow\nmeow\nmeow\nmeow\nmeow\nmeow\nmeow\nmeow\nmeow\n''') == '2'\n\nassert solution('''\na\na\na\na\na\na\na\na\na\na\n''') == '1'\n\nassert solution('''\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\nz\n''') == '1'\n\nassert solution('''\nab\nab\nab\nab\nab\nab\nab\nab\nab\nab\n''') == '2'\n\nassert solution('''\nac\nac\nac\nac\nac\nac\nac\nac\nac\nac\n''') == '1'"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('pastimeofwhimsy') == '1'\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == 1\n\n\"\"\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('pastimeofwhimsy') == 1\n\n\nInput:\n\n0\n7\na\nb\nb\nb\na\n\nOutput:\n\n0\n3\n3\n2\n2\n\nExplanation:\n\nThe 0 is because there are no meow factors of this string.\nThe 3 is because there is no operation to swap b with a, so it will not change the string.\nThe 2 is because of the second b, since it is swapped with another character,\nit will change the string to pastimeofwhimsy, so the meow factor will be 3.\nThe 3 is because all the other operations will change the string into pastimeofwhimsy.\nThe 4 is because if a had been swapped, it would change the string into pastimeofwhimsy,\nand the meow factor would be 2.\nThe 5 is because b had been deleted, so it would change the string into pastimeofwhimsy,\nand the meow factor would be 2.\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('pastimeofwhimsy') == '1'\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('pastimeofwhimsy') == \"1\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('pastimeofwhimsy') == '1'\nassert solution('wallecollin') == '2'\nassert solution('abb') == '1'\nassert solution('aabaa') == '1'\nassert solution('zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('1 2 2 1') == 'NO'"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('1 2 2 1') == 'YES'\nassert solution('1 2 2 1 3 4 5') == 'NO'\nassert solution('1 1 1 1 1') == 'YES'\nassert solution('1 1 1 1 2') == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n1 2 2 1 \n''') == 'YES'\nassert solution('''\n5 4\n1 5 5 1 2 3 \n''') == 'NO'\nassert solution('''\n4 6\n1 2 1 2 2 2 \n''') == 'YES'\n\n-----------------------------------------\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1 2 2 1\") == \"YES\"\nassert solution(\"7 7\\n3 3 1 1 2 1 1 2\") == \"NO\""
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n1 2 2 1 \n''') == 'YES'\n\nassert solution('''\n1 3\n2 1 2 \n''') == 'NO'\n\nassert solution('''\n4 5\n1 2 2 1 \n''') == 'NO'\n\nassert solution('''\n20 10\n1 2 2 1 1 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1 2 2 1 1"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin) == \"YES\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 2 2 1\\n') == 'YES'\nassert solution('6 5\\n1 2 1 3 2 4\\n') == 'NO'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n        \"\"\"\n        3 4\n        1 2 2 1 \n        \"\"\"\n    ) == \"YES\"\nassert solution(\n        \"\"\"\n        2 1\n        \"\"\"\n    ) == \"NO\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4\n1 2 2 1 \n''') == 'YES', 'YES'\n\nassert solution('''\n3 4\n2 2 2 1 \n''') == 'NO', 'NO'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n1 2 2 1\n''') == 'YES'\n'''\n$k$\n$n$\n$1, 2, 2, 1$\n$1, 2, 2, 1$\n''')\nassert solution('''\n3 5\n1 2 2 2 1\n''') == 'NO'\n'''\n$k$\n$n$\n$1, 2, 2, 2, 1$\n$1, 2, 2, 2, 1$\n''')\nassert solution('''\n1 1000000000\n1\n''') == 'NO'\nassert solution('''\n1 1000000000\n1\n''') == 'NO'\nassert solution('''\n2 1000000000\n1\n1\n''') == 'YES'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n6\n7\n3\n5\n1\n1\n4\n4\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 2\n3\n4\n\"\"\") == \"3/1\"\nassert solution(\"\"\"\n1 3\n4\n\"\"\") == \"1/1\"\nassert solution(\"\"\"\n1 2\n3\n4\n\"\"\") == \"1/2\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1\n2\n3\n4\n''') == '3/1'\n\nassert solution('''\n10\n2\n8\n5\n4\n7\n2\n4\n8\n9\n8\n''') == '3/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1/1\"\nassert solution(\"3\\n4\") == \"3/1\"\nassert solution(\"5\\n6\\n7\\n8\") == \"5/2\"\nassert solution(\"5\\n6\\n7\\n8\\n4\") == \"5/3\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n    1 2\n    3\n\"\"\") == \"3/1\"\n\nassert solution(\"\"\"\n    1 2\n    3\n\"\"\") == \"1/2\"\n\nassert solution(\"\"\"\n    1 1\n    2\n\"\"\") == \"1/2\"\n\nassert solution(\"\"\"\n    1\n    2\n\"\"\") == \"1/1\"\n\nassert solution(\"\"\"\n    1\n\"\"\") == \"1/1\""
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3/1'\nassert solution('6 5') == '5/1'\nassert solution('2 1') == '1/1'\nassert solution('2 6') == '2/1'\nassert solution('2 9') == '2/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 2\n3\n4\n''') == '3/1'\nassert solution('''\n1\n1\n1\n''') == '1/1'\nassert solution('''\n3\n1 3\n2\n2\n3\n''') == '1/2'\nassert solution('''\n1\n1\n1\n''') == '1/1'\nassert solution('''\n4\n1 2\n3\n4\n''') == '2/1'\n'''\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n4') == '3/1'\nassert solution('4\\n5\\n6\\n7') == '1/2'\nassert solution('1\\n2\\n3') == '1/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n7\\n4\\n3\\n10\\n') == '3/1'\nassert solution('6\\n10\\n8\\n11\\n6\\n7\\n') == '2/1'\nassert solution('9\\n10\\n8\\n11\\n6\\n7\\n') == '1/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3/1'\nassert solution('2') == '3/1'\nassert solution('2') == '3/1'\nassert solution('2') == '3/1'\nassert solution('2') == '3/1'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nassert solution('3\\n1.2 2.2\\n2.2 1.2\\n3.2 1.2') == '0.276522427'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1.12973842'\nassert solution('5') == '2.55503486'\nassert solution('10') == '4.87436941'\n\nassert solution('20') == '7.92908819'\nassert solution('100') == '10.30449848'\n\"\"\""
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\nassert solution(\"5\\n1.2 10.2\\n2.2 15.2\\n3.2 10.2\\n4.2 15.2\\n5.2 10.2\") == \"0.18602614056\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nassert solution('1\\n5 1\\n3 4') == '4.166253199'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\nassert solution(\"3\\n1.2 10.2\\n2.2 15.2\\n3.2 5.5\") == \"1.762946897\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nprint(solution(input()))\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1.114672365'\nassert solution('1.2 10.2') == '1.114672365'\nassert solution('2.2 15.2') == '1.114672365'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1.2 10.2\n2.2 15.2\n4.3 20.3\n''') == '1.112807197'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1.11\"\nassert solution(\"5\") == \"1.51\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n') == '0.01'\nassert solution('5\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n') == '0.038'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"0 2 3 1 1 0 0 1\") == \"1 2 3\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 3\n1 1\n2 1\n2 0\n''') == '''\n3\n1 2 3 2\n'''"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1 2 3 2'\nassert solution('4') == '1 2 3 2'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3 1 2 3\"\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\\n2 2\") == \"2 2\"\nassert solution(\"3\\n1 1 1\\n2 1 2\\n1 2\") == \"3 2 1 2\""
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 2 3 3'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8\n0 3\n1 1\n2 1\n2 0\n''') == '2 1 3 2 1 2 0'\nprint(solution('''\n3\n0 4\n1 2\n2 3\n''')) == '2 3 4 1 2 3'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 2 3 2 4 5'\nassert solution('6') == '1 2 3 4 5 2 3 4 5 6'\nassert solution('7') == '1 2 3 4 5 6 2 3 4 5 6 7'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1 2 3 2 1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1 2 3 2 1'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3 1 2 3'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2 3\n''') == '1'\nassert solution('''\n3\n1 2 3\n''') == '2'\nassert solution('''\n4\n1 2 1 3\n''') == 'none'"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3\\n') == '1'\nassert solution('5\\n1 2 2 3\\n') == '2'\nassert solution('5\\n1 2 2 3 4\\n') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''3\n1 2 1 3\n''') == 'none'\nassert solution('''4\n1 2 1 3\n''') == 'none'"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('4') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n4\n1 1 2 3\n''') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1 2 3\") == \"1\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n3\n1 1 2\n''') == '2'\nassert solution('''\n4\n1 2 1 3\n''') == '3'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('4') == 'none'\nassert solution('5') == 'none'\nassert solution('6') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\\n2\\n3\"\nassert solution(\"3\\n1 1 2\") == \"none\"\nassert solution(\"4\\n1 1 1 2\") == \"none\""
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '7'\nassert solution('4') == '4'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"7\"\nassert solution(\"\"\"\n7\n1 1 0 1 2 3 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5\n1 1 0 1 2 3 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1\n0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\n1 2 1 2 1 2 1 1 1 2 1 1 1 1\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n2 1 0 1 2 3 3') == '5'\nassert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('5') == '4'\nassert solution('1000000000') == '500000001'\n\"\"\"\nimport sys"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2\n2 5\n5 8\n''') == '8'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n2 1 0 1 2 3\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 1\\n1 2 3\\n') == '3'\nassert solution('2\\n1 2\\n0 1\\n') == '1'\nassert solution('2\\n1 2\\n1 0\\n') == '2'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n2 1 0 1 2 3 3') == '5'\nassert solution('100\\n12222222') == '12222222'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '3\\n'\n    '0 1 2\\n'\n    '3\\n'\n    '1\\n'\n    '2\\n'\n    '3\\n'\n    '4\\n'\n    ) == '5'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 1 0 1 2 3 3') == '5'\nassert solution('10\\n7 2 3 4 5 1 2 3') == '8'\nassert solution('10\\n7 2 3 4 5 1 2 3 1 2 4') == '7'\nassert solution('10\\n7 2 3 4 5 1 2 3 1 2 4 5') == '7'\nassert solution('20\\n
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1 0 1 2 3 3\n''') == '5'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"1 1 2 3\"\nassert solution(\"10 3\") == \"-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"1 4 5 6 -1\"\nassert solution(\"10 10\") == \"10 10 10 10 10 10 10 10 10 10 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '-1 -1 -1 -1 -1'\nassert solution('2 1') == '1 0 1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6\\n#####\\n#...#\\n_###\\n_M.#\\n#####') == '-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n_###\\n_M.#\\n#####') == '-1 -1 -1 -1 -1'\nassert solution('5 6\\n#####\\n#...#\\n_###\\n_M.#\\n#####') == '-1 -1 -1 -1 -1'\nassert solution('5 5\\n#_#_#\\n_#_#_\\n_#_#_\\n_#_#_\\n#_#_#\\n') == '4 4 -1 -1 -1 -1 -1'\nassert solution('5 5\\n_#_#_\\n_#_#_\\n_#_#_\\n_#_#_\\n_#_#_\\n') == '4 4 -1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '-1 -1 -1 -1 -1'"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 6\\n\" +\n    \"#####\\n\" +\n    \"#...#\\n\" +\n    \"#_###\\n\" +\n    \"#__.#\\n\" +\n    \"#####\"\n) == \"1 1 2 2 1 -1\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"1 1 1 1 1\"\nassert solution(\"2 3\") == \"1 1 1 1\"\nassert solution(\"10 10\") == \"2 2 2 2 2 2 2 2 2 2 2\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"impossible\"\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(input())"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 1') == '4'\nassert solution('5 3 2') == 'Impossible'\nassert solution('10 10 2') == 'Impossible'\n\n\"\"\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == \"6\"\nprint(solution(input_string))\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 6 1') == '6'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2\") == \"3\"\nassert solution(\"3 6 1\") == \"3\"\nassert solution(\"3 6 2\") == \"4\"\nassert solution(\"10 10 1\") == \"10\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3''') == '6'\nassert solution('''4 6 2\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4''') == 'impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6'\nassert solution('4 6 1') == '6'\nassert solution('4 6 1') == '6'\nassert solution('4 6 1') == '6'\nassert solution('4 6 1') == '6'"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '7'\nassert solution('3') == 'Impossible'\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"01001\"\nassert solution(\"3 4 2 1\") == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('5 5 2 5') == '101010'\nassert solution('8 3 5 2') == '101010'\nassert solution('5 5 3 5') == '101010'\n\"\"\""
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"3 4 2 0\") == \"impossible\"\n\nSample Input:\n5 4 2 1\nSample Output:\n01101\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 2 1') == '01001'\nassert solution('10 4 2 1') == '01101'"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('10 9 2 4 1') == '10100'"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('15 8 5 2') == '11110000'\nassert solution('1 1 1 1') == 'impossible'"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"01001\""
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0001\"\n\nassert solution(\"2\") == \"01010\"\n\nassert solution(\"3\") == \"01100\"\n\nassert solution(\"4\") == \"01111\"\n\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 4 2 1\n\"\"\") == \"01001\"\nassert solution(\"\"\"\n10 11 5 6\n\"\"\") == \"100011\"\nassert solution(\"\"\"\n1 2 3 4\n\"\"\") == \"10011\"\nassert solution(\"\"\"\n0 1 1 0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n0 0 1 0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible', solution.__doc__\nassert solution('''\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible', solution.__doc__\nassert solution('''\n6 6 4\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible', solution.__doc__\nassert solution('''\n4 4 2\n1 1\n2 2\n3 3\n3 3\n3 3\n''') == 'impossible', solution.__doc__\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\nassert solution('''\n3 4 6\n1 2\n1 2\n2 3\n2 3\n3 3\n3 4\n''') == 'impossible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"possible\"\nassert solution(\"5 5 6\\n1 1\\n1 2\\n2 3\\n2 4\\n4 5\") == \"impossible\"\nassert solution(\"10 10 10\\n1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\") == \"impossible\"\nassert solution(\"2 2\\n1 1\\n1 2\") == \"possible\"\nassert solution(\"2 2\\n1 1\\n1 2\\n3 3\\n3 4\") == \"impossible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == \"possible\"\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == \"impossible\"\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == \"impossible\"\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == \"possible\"\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == \"possible\""
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n') == 'possible'\nassert solution('3 4 2\\n3 4\\n3 2\\n') == 'impossible'\nassert solution('3 4 10\\n1 1\\n1 2\\n2 3\\n3 4\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n') == 'possible'\nassert solution('4 10\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n') == 'impossible'\nassert solution('5 2\\n1 2\\n1 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n') == 'impossible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4 6') == 'possible'\nassert solution('4 5 6') == 'impossible'\nassert solution('1 1') == 'impossible'\nassert solution('1 2') == 'impossible'\nassert solution('2 2') == 'impossible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == \"possible\"\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n''') == \"impossible\"\nassert solution('''\n3 4 6\n3 3\n3 4\n''') == \"impossible\"\n'''\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 2') == 'possible'\nassert solution('3 4 5') == 'impossible'\nassert solution('8 4 7') == 'impossible'\nassert solution('12 8 4') == 'impossible'\n\"\"\""
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 6') == 'impossible'\nassert solution('3 4 3') == 'impossible'\nassert solution('3 4 6') == 'possible'\nassert solution('3 4 3') == 'possible'\nassert solution('5 5 2') == 'possible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4') == 'possible'\nassert solution('3 4 3\\n1 1\\n1 2\\n2 2\\n2 3') == 'impossible'\nassert solution('3 5 5\\n1 2\\n1 3\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4') == 'possible'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\") == \"2.0\"\nassert solution(\"6\\n0 0 0\\n0 1 0\\n2 0 2\\n2 1 2\\n4 0 4\\n4 1 4\") == \"5.0\"\nassert solution(\"100\\n0 0 0\\n0 100 100\\n2 0 2\\n2 100 2\\n4 0 4\\n4 100 4\") == \"50.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n''') == '2.0'''\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"2\") == '1'\n\nassert solution(\"4\") == '4'\n\"\"\"\n\nimport math\n\ninput_data = []\n\nfor i in range(1):\n    input_data.append(input())"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6.0'\nassert solution('2') == '1.0'\nassert solution('4') == '1.73205080756888'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'\nassert solution('5\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n5 0 4\\n5 1 4\\n6 0 5\\n6 1 5\\n7 0 6\\n7 1 6\\nSample Input 2:\n10\n0 0 0 1\n1 0 0 1\n2 0 0 1\n3 0 0 1\n4 0 0 1\n5 0 0 1\n6 0 0 1\n7 0 0 1\n8 0 0 1\n9 0 0 1\n10 0 0 1\nSample Output 2:\n7.0\n'''"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'\nassert solution('3\\n0 0 1\\n0 1 1\\n2 0 3') == '3.0'\nassert solution('3\\n0 0 0\\n0 1 1\\n2 0 2') == '6.0'\nassert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '4.0'\nassert solution('3\\n0 0 1\\n0 1 1\\n0 0 1') == '0.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == '2.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n\") == \"2.0\"\nprint(solution(input()))\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\"\"\") == \"2.0\nassert solution(\"\"\"\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\"\"\") == \"1.750000000000003\"\nassert solution(\"\"\"\n9\n0 0 0\n0 1 0\n0 2 0\n0 2 1\n1 0 1\n1 1 0\n1 2 0\n1 2 1\n\"\"\") == \"6.0\nassert solution(\"\"\"\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\"\"\") == \"1.500000000000003\"\n\"\"\"\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n2.0\n\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n1.750000000000003\n\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n6.0\n\n9\n0 0 0\n0 1 0\n0 2 0\n0 2 1\n1 0 1\n1 1 0\n1 2 0\n1 2 1\n\n6.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.500000000000003\n\n7\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n2.0\n\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n1.750000000000003\n\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n6.0\n\n9\n0 0 0\n0 1 0\n0 2 0\n0 2 1\n1 0 1\n1 1 0\n1 2 0\n1 2 1\n\n6.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.500000000000003\n\n7\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n2.0\n\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n1.750000000000003\n\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n6.0\n\n9\n0 0 0\n0 1 0\n0 2 0\n0 2 1\n1 0 1\n1 1 0\n1 2 0\n1 2 1\n\n6.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.500000000000003\n\n7\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n2.0\n\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n1.750000000000003\n\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n6.0\n\n9\n0 0 0\n0 1 0\n0 2 0\n0 2 1\n1 0 1\n1 1 0\n1 2 0\n1 2 1\n\n6.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.500000000000003\n\n7\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n6\n0 0 0\n0 1 0\n1 0 1\n1 1 0\n0 2 0\n0 2 1\n\n1.0\n\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n2.0\n\n3\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n1.750000000000003\n\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n\n6.0\n\n9\n0 0 0\n0 1 0\n0 2 0\n0 2 1\n1 0 1\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == '2.0'"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\n\nassert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\n''')\n\nstdin = input()\nn, k = (int(x) for x in stdin.split())"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\"\nassert solution(\"10\\n10 10 10 10 10 10 10\\n10 10 10 10 10 10 10\\n10 10 10 10 10 10 10\") == \"7\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\nassert solution('''\n5\n4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '0'\nassert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '1'\nassert solution('''\n7\n4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '2'\n'''"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n5 6 7\\n3 4 5 6\\n') == '4'\nassert solution('4\\n3 3 3 3\\n1 1 1 1\\n') == '2'\nassert solution('5\\n1 2 3\\n3 4 5\\n5 6 7\\n1 1 1 1\\n') == '0'\nassert solution('10\\n10 10 10\\n10 10 10\\n10 10 10\\n') == '0'\nassert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\\n') == '4'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n4 5 6\\n7 8 9') == '5'\nassert solution('4\\n5 5 1 1\\n1 2 3 4\\n5 6 7 8\\n1 2 3 4 5') == '2'\nassert solution('5\\n5 5 1 1\\n1 2 3 4\\n5 6 7 8\\n1 2 3 4 5') == '0'\nassert solution('9\\n9 9 1 1\\n1 2 3 4\\n5 6 7 8\\n1 2 3 4 5') == '0'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join(['5 4 3 2 1 6 7', '5 5 1 1 3 4 7', '3 7 1 4 5 6 2'])) == '4'\nassert solution('\\n'.join(['5 4 3 2 1 6 7', '5 5 1 1 3 4 7', '2 2 2 1 1 3 5'])) == '5'\nassert solution('\\n'.join(['5 4 3 2 1 6 7', '5 5 1 1 3 4 7', '7 7 7 7 7 7'])) == '0'\n\"\"\"\nn = int(input())\nn_rows = n\n\ncolumns = []\nfor _ in range(n):\n    columns.append(list(map(int, input().split())))\n\nsorted_columns = sorted(columns, key=lambda x: sorted(x))"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == \"4\"\nassert solution('4\\n3 2 1 6 7\\n2 5 1 1 3 4 7\\n4 5 7 1 6 3 2') == \"2\"\nassert solution('3\\n1 1 2\\n2 2 2\\n3 3') == \"1\""
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('-10 0') == '2'\nassert solution('-10 10') == '2'\n\n---"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n-10 0\n-10 10\nSample Input 2:\n12\n10 10\nSample Output 2:\n15''') == '15'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n-10 0\n-10 10\n''') == '2'\n\nassert solution('''\n50\n-10 0\n-10 10\n''') == '7'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n-10 0\\n-10 10\") == \"2\"\nassert solution(\"5\\n-15 -10\\n-15 -10\\n-15 -10\\n-15 -10\") == \"3\"\nprint('Runtime: {}'.format(round(solution_py(\"2\\n-10 0\\n-10 10\")[0], 1)))"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n-10 0\\n-10 10') == '2'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '0'\nassert solution('6') == '0'\nassert solution('7') == '3'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('100') == '100'\nassert solution('-10 -10') == '2'\nassert solution('-10 10') == '2'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '2'"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"0\""
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '1'\nassert solution('2 1') == '1'\nassert solution('5 5') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 5\n''') == '0'\nassert solution('''\n10 1\n''') == '0'\nassert solution('''\n1 50\n''') == '0'\nassert solution('''\n10 10\n''') == '100'\nassert solution('''\n10 100\n''') == '1000'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5') == '0'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '0'\nassert solution('10 10') == '1'\n\n\"\"\"\n\n\"\"\"\nSample Tests:\n\nTest 1\nInput:\n1 5\nOutput:\n0\n\nTest 2\nInput:\n10 10\nOutput:\n1\n\"\"\""
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"6 9\") == \"2\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '0'\nassert solution('1 4') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '2'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5') == '0'\nassert solution('3 2') == '2'\nassert solution('3 4') == '2'\nassert solution('10 6') == '9'\nassert solution('100 10') == '10'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n1 10\n\"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n2 20\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n5 1\n\"\"\"\n) == \"0\"\n\nassert solution(\n    \"\"\"\n1 1\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0 0\\n1 1\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2 2\n1 0\n0 1\"\"\") == \"0 0\"\n\nassert solution(\"\"\"3 3\n1 0 0\n0 1 0\n0 0 1\"\"\") == \"0 0 1\"\n\nassert solution(\"\"\"8 2\n1 0\n0 1\n0 1 1\n0 0 1\n0 0 0\n0 0 1\n1 1 1\n1 1 1\"\"\") == \"1 1 0 1 0 0 1 1\"\n\nassert solution(\"\"\"25 25\n1 0 1\n0 1 1\n0 0 1\n0 0 0\n1 1 1\n1 1 1\n1 0 1\n1 0 1\n0 0 1\n0 0 1\n1 1 1\"\"\") == \"1 1 1 1 1 1 1 1 1 1 1 1 0 0 1\"\n\nassert solution(\"\"\"10000 10\n1 0\n0 1\n0 0\n1 0 0\n0 0 1\n0 0 0\n1 0 0\n0 1 1\n0 0 0\n0 0 1\n1 0 1\n1 0 1\"\"\") == \"0 1 1 1 0 0 1 1 1 1 0 0 1\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n1 0\\n0 1\") == \"0 0\\n1 1\"\nassert solution(\"3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"1 1\"\nassert solution(\"5 5\\n1 0 0 0 0\\n0 1 0 0 0\\n0 0 1 0 0\\n0 0 0 1 0\\n0 0 0 0 0\") == \"0 1\"\nassert solution(\"5 5\\n1 0 0 0 0\\n0 1 0 0 0\\n0 0 1 0 0\\n0 0 0 1 0\\n0 0 0 0 0\") == \"2 3\"\nassert solution(\"3 3\\n1 0 0 0\\n0 1 0 0\\n0 0 1 0\") == \"0 0\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0 0\"\n\"\"\"\n\nSample Input:\n1 5\n0 0 0 0 0\n1 1 1 1 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n2 2 2 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0 0\\n1 1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '0 0\\n1 1\\n'''\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0 0\\n1 1\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0 0\\n1 1\\n\"\"\", \"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\")\n\nassert solution(\"\"\"\n1 1\n1 0\n1 1\n\"\"\") == \"1 2\\n2 1\\n\"\"\", \"\"\"\n1 1\n2 2\n3 3\n1 2\n2 1\n\"\"\")\n\nassert solution(\"\"\"\n2 2\n0 0\n1 1\n1 0\n0 0\n\"\"\") == \"0 1\\n1 0\\n\"\"\", \"\"\"\n1 1\n2 2\n3 3\n2 1\n1 0\n0 0\n\"\"\")\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '0 0\\n1 1\\n'''\n\npass\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '0 0\\n1 1\\n'''\nassert solution('''\n2 4\n0 0 1 0\n1 1 0 0\n1 1 0 1\n0 0 0 1\n0 0 0 1\n''') == '0 0\\n1 1\\n1 1\\n0 0\\n0 0\\n'''"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == \"44.975\"\nassert solution('0 0.950000\\n0.700000 50') == \"0\""
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 0.950000\n0.700000 50\n''') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 0.950000\\n0.700000 50\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\nassert solution('1 2 0.950000\\n0.700000 50') == '44.9755'\nassert solution('1 2 0.950000\\n0.700000 50') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 0.950000') == '44.975'\nassert solution('1 2 0.950000 0.70000') == '11.875'"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50\\n') == '44.975'\nassert solution('5 2 0.950000\\n0.700000 50\\n') == '43.7875'\nassert solution('7 2 0.950000\\n0.700000 50\\n') == '42.75'\nassert solution('10 3 0.950000\\n0.700000 50\\n') == '41.02'\nassert solution('15 3 0.950000\\n0.700000 50\\n') == '40.41'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 0.950000\n0.700000 50\n''') == '44.975', 'First'\n\nassert solution('''\n1 1 0.990000\n0.950000 50\n''') == '32.9548', 'Second'\n\nassert solution('''\n1 2 0.950000\n0.950000 50\n''') == '32.852', 'Third'\n\nassert solution('''\n1 2 0.950000\n0.950000 50\n''') == '32.852', 'Fourth'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2 0.950000\n0.700000 50\n\"\"\") == \"44.975\"\nassert solution(\"\"\"\n1 10 0.950000\n0.700000 50\n\"\"\") == \"44.975\"\nassert solution(\"\"\"\n1 20 0.950000\n0.700000 50\n\"\"\") == \"44.975\"\nassert solution(\"\"\"\n1 50 0.950000\n0.700000 50\n\"\"\") == \"44.975\"\nassert solution(\"\"\"\n1 100 0.950000\n0.700000 50\n\"\"\") == \"44.975\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 0.950000') == '44.975'"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 0.950000') == \"44.975\"\nassert solution('0.700000 50') == \"44.9750\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 3') == 'IMPOSSIBLE'\nassert solution('1 1') == '1'\nassert solution('5 2') == '2'\nassert solution('1 3') == '3'\nassert solution('3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == '2'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1') == 'IMPOSSIBLE'\nassert solution('3 2 3\\n1 1\\n5 2\\n1 3\\n3\\n3\\n2\\n1\\n') == '2'\nassert solution('10 5 1\\n1 3\\n10 3\\n5 1\\n9 1\\n1 3\\n3 1\\n2 1\\n1 3\\n') == '2'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('5 2') == '2'\nassert solution('1 3') == 'IMPOSSIBLE'\nassert solution('3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 3 1\n3 5\n1 3\n1 1\n2 4\n2 6\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n5 3 2\n5 5\n1 4\n2 4\n3 5\n4 5\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n10 2 3\n3 5\n4 3\n7 2\n7 3\n8 6\n7 6\n5 2\n6 1\n8 1\n7 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('1 1') == 'Impossible'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('3 3 3') == 'IMPOSSIBLE'\nassert solution('10 10 10') == '3'\nassert solution('1 10 10') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\\n1 1\\n5 2\\n1 3\\n3\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3') == 'IMPOSSIBLE', solution\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('3.1 3.2') == '3.3'\nassert solution('2.3 2.4') == '3.5'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == \"4.0\"\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n-4.0 4.0\\n-10.0 4.0\\n-4.0 10.0') == \"2.0\"\nassert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n-10.0 4.0\\n-10.0 10.0\\n-10.0 10.0') == \"4.0\"\n\n\"\"\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '3.00'\nassert solution('1 1') == '2.00'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('5 5') == '12.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n0.0 6.0\\n6.0 0.0\") == \"4.0\"\nassert solution(\"1\\n0.0 6.0\\n6.0 0.0\") == \"3.0\"\nassert solution(\"2 3\\n0.0 6.0\\n6.0 0.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"11.0\"\nassert solution(\"2 3\\n0.0 6.0\\n6.0 0.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n1.0 5.0\\n8.0 5.0\\n5.0 8.0\\n\") == \"11.0\"\nassert solution(\"2 3\\n0.0 6.0\\n6.0 0.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n1.0 5.0\\n8.0 5.0\\n5.0 8.0\\n5.0 8.0\\n4.0 10.0\\n\") == \"11.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0\n\"\"\") == \"4.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == \"4.0\"\nassert solution('1.1 1.1') == \"2.2\"\nassert solution('1.1 1.1') == \"2.2\"\n\"\"\"\n\nimport math\nimport sys"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('2 1') == '1.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('1 2') == '1.0000'\n\"\"\"\nimport math\nimport sys"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0.5\"\nassert solution(\"3 2\") == \"2.0\"\nassert solution(\"4 1\") == \"1.0\"\nassert solution(\"4 2\") == \"2.0\"\nassert solution(\"2 0 0\") == \"0.0\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '18000'"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\nassert solution('1\\n330 90\\n180 60\\n120 30\\n230 40\\n220 30\\n255 20\\n250 20\\n180 30\\n240 30\\n180 40\\n180 60') == '45000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n220 29\n195 20\n200 9\n180 30\n180 30\n\"\"\") == \"18000\"\n\nassert solution(\"\"\"\n3\n220 29\n195 20\n180 30\nSample Output:\n800\n\"\"\") == \"800\"\n\nassert solution(\"\"\"\n2\n100 50\n100 50\nSample Output:\n100\n\"\"\") == \"100\"\n\nassert solution(\"\"\"\n6\n100 100 100 100 100 100\n100 100 100 100 100 100\nSample Output:\n20000\n\"\"\") == \"20000\"\n\nassert solution(\"\"\"\n3\n100 100 100\n100 100 100\nSample Output:\n8500\n\"\"\") == \"8500\""
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '18000'\nassert solution('2') == '18000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\nassert solution('3\\n220 29\\n195 20\\n180 30') == '17700'\nassert solution('1\\n') == '0'\nassert solution('1\\n1\\n') == '0'\n\n----------------------------------------------------------------------\n\n--- Day 3: Toboggan Trajectory ---\n\nThe toboggan_map examples in the previous section (Figure 3.3) are a good example of a map that needs to be navigated around. (Map Design Problem)\n\nIn a city with many buildings, represented by the 2D array\n\nbuilding_grid = [\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0],\n    [0, 0, 0, 0, 0, 0],\n]\n\nYou start at the top-left building and need to reach the bottom-right building. You only can move right or down.\n\nThe toboggan_trajectory_map gives you the path as a 2D array.\n\nStarting at the top-left, you first need to reach the bottom-right. The path from top-left to bottom-right is composed of a series of up-right turns, then a series of up-left turns, and finally a down-left turn. The up-right and down-left turns will need to be taken in order, and the up-left turn needs to be taken last.\n\nHere is a visual representation of the path:\n\n\n\nWhile trying to reach the bottom-right, you encounter two down-left turns. You then need to take the left down-left turn. The down-left turn needs to be taken last, so you now need to traverse the path in the reverse order: left down-left, left down-right, left up-right, down up-left, up up-right, right up-left, right down-left.\n\nThe current location you are at is marked with a #, the path from the current location to the target location is marked with a., and the path from the target location to the current location is marked with a ^.\n\nWhat is the shortest path to get to the bottom-right?\n\n-----Input-----\nThe input begins with a line containing the number of buildings, $N$, in the map. It then contains $N$ lines each containing a building's left edge coordinate $x_1$, building's right edge coordinate $x_2$ and building's top edge coordinate $y_1$. The left edge and right edge coordinates should be integers ranging from 0 to x, while the top edge should be an integer ranging from 0 to y.\n\nEach building is located at an unreachable location with coordinates -1, -1 if it is located at the bottom right corner of the map. This location is represented by a ^, but this also means the path from there to the end of the map cannot exist and is represented by a #.\n\n-----Output-----\nOutput one line, giving the shortest distance (in terms of number of turns and/or moves) to get from the top-left to the bottom-right in the map.\n\nIf the shortest path does not exist, output a line containing $-1$ for the shortest distance.\n\n-----Examples-----\nSample Input:\n3\n-2 -2\n0 -1\n2 3\nSample Output:\n3\n\nSample Input:\n6\n-1 -1\n2 -2\n4 -2\n3 -3\n4 -1\n2 1\nSample Output:\n-1\n\n----------------------------------------------------------------------\n\n--- Part Two ---\n\nLet's examine the map again. This time, it is much more challenging. You still start at the top-left building and need to reach the bottom-right building. However, this time, you need to avoid obstacles. An obstacle is a square building with one of its sides having length exactly one.\n\nThe path from top-left to bottom-right is composed of a series of up-right turns, then a series of up-left turns, and finally a down-left turn.\n\nAs in the previous example, the up-right and down-left turns need to be taken in order, and the up-left turn needs to be taken last.\n\nThe first obstacle on the map is at the bottom-right, so the path from top-left to it is:\n\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n^\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n220 29\n195 20\n200 9\n180 30\n''') == '18000'\n\nassert solution('''\n4\n220 300\n195 200\n200 9\n180 30\n''') == '50000'\n\nassert solution('''\n1\n100 300\n200 200\n''') == '0'\n\nassert solution('''\n5\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == '0'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\n\"\"\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\nassert solution('5\\n1212 22\\n1229 14\\n1112 1\\n1234 6\\n1256 4') == '6320'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"BUYSTICKERS\") == \"IMPOSSIBLE\"\nassert solution(\"STICKY\") == \"IMPOSSIBLE\"\nassert solution(\"TICKERS\") == \"IMPOSSIBLE\"\nassert solution(\"ERS 8\") == \"28\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nBUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\n''') == '28'\n\"\"\""
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BUYSTICKERS') == 'POSSIBLE', \"First\"\nassert solution('STICKY TICKERS') == 'IMPOSSIBLE', \"Second\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n\") == \"28\"\n\n[input]\n5\n7\nTICKER 1\nERS 4\nTICKER 2\nTICKER 3\nTICKER 4\nTICKER 5\n\n[output]\n0\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"GRACIELLE\\n5\\nROUTERI 10\\nROUTER 5\\nSTICKY 5\\nROUTERI 9\\nROUTERI 8\\nROUTERI 7\\nROUTERI 6\\nROUTERI 5\\nSTICKY 4\\nGRACIELLE 2\\nGRACIELLE 3\\nGRACIELLE 1\\nSTICKY 3\\nGRACIELLE 3\\nSTICKY 2\\nROUTERI 1\\nROUTERI 3\\nSTICKY 1\\nROUTERI 3\\nSTICKY 2\\nSTICKY 1\\nGRACIELLE 3\\nGRACIELLE 2\\nSTICKY 2\\nSTICKY 3\\nSTICKY 1\\nROUTERI 2\\nROUTERI 1\\nROUTERI 3\\nROUTERI 1\\nROUTERI 1\\nSTICKY 1\\nROUTERI 2\\nROUTERI 2\\nROUTERI 2\\nROUTERI 2\\nROUTERI 2\\nROUTERI 2\\nROUTERI 2\\nROUTERI 2\\nROUTERI 2\\nROUTERI 2\\nSTICKY 1\\nROUTERI 1\\nSTICKY 1\\nSTICKY 1\\nROUTERI 1\\nROUTERI 1\\nROUTERI 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1\\nSTICKY 1"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\n''') == '28'\n\nprint(solution('''\nBUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8\n'''))\n\nimport sys"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"BUYSTICKERS\") == \"IMPOSSIBLE\"\nassert solution(\"STICKY\") == \"IMPOSSIBLE\"\nassert solution(\"ERS\") == \"ERST\"\nassert solution(\"BUYER\") == \"ERST\"\nassert solution(\"TICKERS\") == \"ITKTKTS\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28'\n\n'''\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\") == \"28\"\nassert solution(\"BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\nERS 16\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 8') == 'INDV 1 CORP 1 CORP 2 INDV 3 CORP 3 INDV 4 CORP 5'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n''') == 'INDV 4\\n'\n\nassert solution('''5 3 4\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n''') == 'INDV 1\\nINDV 2\\nINDV 3\\nCORP 4\\nCORP 2\\nINDV 4\\nCORP 2\\nINDV 5\\nCORP 3\\nINDV 1\\nCORP 2\\nCORP 3\\nINDV 2\\nCORP 1\\nCORP 3\\n'''\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 8') == 'INDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 5\\nCORP 3\\nINDV 1\\nCORP 2\\nINDV 3\\nCORP 1\\n'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 8\\n1 1\\n2 1\\n3 1\\n4 2\\n5 2\\n3 3\\n4 3\\n5 3') == 'INDV 1 CORP 1 INDV 2 INDV 4 CORP 1 INDV 3 CORP 2'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3 8\") == \"CORP 1\"\nassert solution(\"1 1\") == \"INDV 1\"\nassert solution(\"5 2\") == \"CORP 2\"\nassert solution(\"4 3\") == \"CORP 1\"\nassert solution(\"3 3\") == \"INDV 1\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3 8\n1 1\n2 1\n3 1\n4 2\n5 2\n3 3\n4 3\n5 3\n\"\"\") == \"\"\"INDV 1\nINDV 2\nINDV 4\nCORP 2\nINDV 3\nCORP 3\nINDV 5\"\"\".strip()\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 4') == 'INDV 1'\nassert solution('5 3 8') == 'INDV 1 CORP 1 INDV 2'\nassert solution('4 4 2') == 'INDV 1 INDV 2 CORP 1'\nassert solution('5 1 2') == 'INDV 5 CORP 4 CORP 2'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\", \"Empty input\"\nassert solution(\"3 3 8\") == \"INDV 2 CORP 1 CORP 2 CORP 1 INDV 4 CORP 2\", \"Incorrect next line\"\nassert solution(\"1 1\") == \"INDV 1\", \"Incorrect next line\"\nassert solution(\"2 2\") == \"CORP 1\", \"Incorrect next line\"\nassert solution(\"3 3\") == \"INDV 4 CORP 2 CORP 2 CORP 1 INDV 3 CORP 3\", \"Incorrect next line\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 8') == 'INDV 2'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\"\nassert solution(\"3 4 5\") == \"CORP 1\\nCORP 2\\nCORP 3\\nCORP 4\\nINDV 1\\nINDV 2\\nINDV 3\\nINDV 4\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n10 1') == '2.4142135624'\nassert solution('1\\n10 1') == '2.25'\nassert solution('1\\n100 1') == '99.90625'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n10 1\n1\n0\n10\n10\nSample Output:\n2.4142135624\n''') == '2.4142135624'\nassert solution('''\n5\n10 1\n1\n0\n10\n10\nSample Output:\n0\n''') == '0'\nassert solution('''\n5\n10 1\n1\n0\n10\n10\nSample Output:\n6\n''') == '6'\nassert solution('''\n5\n10 1\n1\n0\n10\n10\nSample Output:\n1.220458984\n''') == '1.220458984'"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n8 1\\n0\\n10\\n10\\n') == '3.4142135624'\nassert solution('100000\\n1000 1000\\n') == '0.0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '4\\n10 1\\n1\\n0\\n10\\n10\\n'\n    'Sample Output:'\n    '2.4142135624\\n') == '2.4142135624'\nassert solution(\n    '4\\n20 1\\n1\\n0\\n20\\n20\\n'\n    'Sample Output:'\n    '2.0\\n') == '2.0'\nassert solution(\n    '5\\n20 1\\n1\\n0\\n20\\n20\\n'\n    'Sample Output:'\n    '1.4142135624\\n') == '1.4142135624'\nassert solution(\n    '10\\n10 1\\n1\\n0\\n10\\n10\\n'\n    'Sample Output:'\n    '4.828427124\\n') == '4.828427124'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n10 1\n1\n0\n10\n10\n\"\"\") == \"2.4142135624\"\nassert solution(\"\"\"\n8\n3 1\n1\n0\n3\n1\n0\n2\n1\n\"\"\") == \"5.30000000000001\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2.4142135624'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 1\\n1\\n0\\n10\\n10\") == \"2.4142135624\"\nassert solution(\"10\\n100 100\\n50 50\\n1 50\\n100 100\\n50 50\") == \"2.4142135624\"\nassert solution(\"1000\\n1000 1000\\n1000 1000\\n1000 1000\\n1000 1000\") == \"3.6084276032\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1.0\"\nassert solution(\"10000\\n10000 10000\\n10000 10000\\n10000 10000\") == \"5.0\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"4.4142135624\"\nassert solution(\"10\") == \"5.4021845801\"\nassert solution(\"10000\") == \"10000.000000\"\nassert solution(\"50000\") == \"50000.0000\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n10 1\\n1\\n0\\n10\\n10\\n') == '2.4142135624'\nassert solution('3\\n1 1\\n1\\n') == '1.0'\nassert solution('10\\n10 1\\n1\\n0\\n10\\n10\\n') == '1.2'\nassert solution('10\\n10 1\\n1\\n0\\n10\\n10\\n10\\n') == '1.2'\nassert solution('10000\\n1000 1\\n1\\n') == '10000.0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\n\nassert solution('''\n8\n16 1\n2\n1\n2\n2\n2\n2\n''') == '1.4142135624'\n\nassert solution('''\n16\n2 2\n2 2\n3 3\n3 3\n4 4\n4 4\n5 5\n5 5\n4 4\n4 4\n3 3\n3 3\n2 2\n2 2\n1 1\n1 1\n''') == '13.82842712474619'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n3 1 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\nassert solution(\"\"\"\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\nassert solution(\"\"\"\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\nassert solution(\"\"\"\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\""
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n8\n0 1 6\n0 2 4\n0 3 1\n1 5\n2 3 5\n3 2 3\n3 6 7\n4 5 2\n4 6 1\n4 7 5\n''') == '21'\n'''\n\n\nimport math\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n1\n2 1\n1 2\n1 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n5 0\n1 3\n\"\"\") == \"0\""
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    '1',\n    '2',\n    '5',\n    '3',\n    '1',\n    '5',\n    '0',\n    '1',\n    '3'\n]) == '15'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 1, 2, 5], [[3, 1, 5], [1, 2, 5], [2, 1], [5, 0]]) == '15'\n\nassert solution([3, 1, 2, 5], [[3, 1, 5], [1, 2, 5], [2, 1], [5, 0], [0, 3, 5]]) == '15'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == \"15\"\nassert solution('''\n5\n0 1\n1 2\n3 4\n5 6\n7 8\nSample Output:\n0\n''') == \"0\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    2\n    3 1 5\n    3 1 5\n    2 1\n    5 0\n    1 3\n''') == '15'"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == '-1'\nassert solution('1\\n2\\n3\\n') == '5'\nassert solution('1\\n3\\n5\\n') == '7'\nassert solution('5\\n0\\n1\\n3\\n') == '2'\nassert solution('2\\n1\\n3\\n5\\n') == '5'\n\"\"\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n2\n1 2\n1 3\n3 2\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n1\n2\n2\n3\n3\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n5\n1 3\n1 2\n2 1\n2 3\n3 1\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n10\n1 2 5\n3 1 5\n2 1\n2 3\n3 1\n5 0\n1 3\n4 3\n4 2\n2 1\n5 0\n1 3\n\"\"\") == \"28\"\n\nassert solution(\"\"\"\n100000\n1 3\n1 2\n2 1\n2 3\n3 1\n5 0\n1 3\n4 3\n4 2\n2 1\n5 0\n1 3\n\"\"\") == \"2399999\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 3 3 4') == '.ABCD'\n\n--Input--\n5 5 3 3 4\n--Output--\n.ABB..\n..ABC\n.CDCD\n@DDDD"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 3 3 4\") == \".BC..\"\nassert solution(\"3 4 5 4 4\") == \".D.A.B\"\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 4\") == \".@.@.\"\nassert solution(\"4 4 4 4\") == \"..@.@.\"\nassert solution(\"4 5 5 5\") == \"...@..\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5 3 3 4\n@ABC\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5 3 3 4\n''') == '..BBC\\n..A.C\\n....C\\n@DDDD\\n'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 3 3 4') == '...@.BC..'\n\"\"\""
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 3 4\") == \"..ABC...\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5 3 3 4\\n\") == \"...BBB\\n...AAB\\n...C.C\\n....CCC\\n@DDDDD\"\n\n\"\"\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD'\nassert solution('10 20 15 1') == '.......\\n................\\n................\\n..............\\n...............\\n...............\\n...............\\n...............\\n................\\n................\\n..............\\n..............\\n................\\n................\\n..............\\n..............\\n'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@\n@"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '001'\nassert solution('5 2') == '001'\nassert solution('4 3') == '001'\nassert solution('3 3') == '001'\nassert solution('4 2') == '001'"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n111\n001\n000\n111\n000''') == '001'\n\nSample Input:\n5 4\n10\n1\n2\n0\n3\nSample Output:\n1\n0\n0\n3\n2\n'''\n    return \"\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\nassert solution('10 2\\n2 4 8 6 2 1\\n5 3\\n8 1 0 3\\n1 2 3 4 5 6 7 8 9\\n8 1 2 3 4 5 6 7 8 9 10') == '1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 8 1 2 3 4 5 6 7 8 9'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n81214''') == '81214'\n\nassert solution('''4\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == '00101'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3\n1\n1\n2\n\"\"\") == \"12\"\nassert solution(\"\"\"\n3 2\n1\n1\n2\n\"\"\") == \"21\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5') == '5 4 3 2 1'\nassert solution('1 1 2 3 3 3 2') == '1 2 3 2 1 3'\nassert solution('1 3 5 4 2 3 2 1 3') == '1 3 3 3 2 2 1 2 1'\nassert solution('1 1 1 1 2 2 1 2') == '1 1 2 1 1 2 1 2'\nassert solution('1 1 1 1 2 2 1 2') == '1 1 1 2 2 1 1 1'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n111\n001\n000\n111\n000''') == '000'\nassert solution('''5 3\n111\n001\n000\n111\n000''') == '001'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == \"001000\"\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == \"0111111\"\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == \"001000\"\n\nassert solution('''\n5 3\n111\n001\n000\n111\n000\n''') == \"0111111\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n111\\n001\\n000\\n111\\n000\") == \"001\\n001\\n001\\n111\\n200\"\nassert solution(\"1\\n1\") == \"1\""
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"19 20\\n17 15 14 13 7 2\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('19/13') == '10 20'\nassert solution('10/1') == '10'\nassert solution('19/14') == '10 20'\nassert solution('4/3') == '7'\nassert solution('20/7') == '2 7'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"19/13\") == \"19 20\"\nassert solution(\"10/1\") == \"10\"\nassert solution(\"19/14\") == \"19\"\nassert solution(\"4/3\") == \"2 4 1\"\nassert solution(\"20/7\") == \"20\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"19/13\") == \"10 20\"\nassert solution(\"19/14\") == \"10 20\"\nassert solution(\"4/3\") == \"20 7\"\nassert solution(\"20/7\") == \"20 10\"\nassert solution(\"19/7\") == \"20 10\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"19/13\") == \"19 20\"\nassert solution(\"10/1\") == \"10 20\"\nassert solution(\"19/14\") == \"20 20\"\nassert solution(\"4/3\") == \"20 20\"\nassert solution(\"20/7\") == \"20 20\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/13\\n19/2\\n19/17\\n10/7\\n20/13\\n19/15\\n10/7\\n20/13\\n19/15') == '19 20\\n17 15 14 13 7 2'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"19/13\") == \"19 20\"\nassert solution(\"10/1\") == \"10\"\nassert solution(\"19/14\") == \"19\"\nassert solution(\"4/3\") == \"4 5\"\nassert solution(\"20/7\") == \"20\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('19/13') == '19 20'\nassert solution('10/1') == '10 10'\nassert solution('19/14') == '19 20'\nassert solution('4/3') == '4 4 4 4 4 4 4'\nassert solution('20/7') == '20 7 7 7 7 7 7'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''19/13\n10/1''') == '19 20'\nassert solution('''19/14\n10/1''') == '19 20'\nassert solution('''4/3\n20/7''') == '4 3'\nassert solution('''20/13\n10/7''') == '20 13'\nassert solution('''19/15\n10/7''') == '19 15'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('19/13\\n10/1\\n19/14\\n4/3') == '19 20'\nassert solution('19/13\\n10/1\\n19/14\\n4/3') == '19 20'\nassert solution('19/13\\n10/1\\n19/14\\n4/3') == '19 20'\nassert solution('19/13\\n10/1\\n19/14\\n4/3') == '19 20'\nassert solution('19/13\\n10/1\\n19/14\\n4/3') == '19 20'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2\n0 0\n2 0\n3 0 3\n2 2 2\n3 0 3\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n3\n3\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"possible\"\nassert solution(\"\"\"\n1\n1\n0 0\n\"\"\") == \"possible\"\nassert solution(\"\"\"\n3\n3\n2 0\n1 2 3\n2 2 2\n3 0 3\n\"\"\") == \"impossible\""
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'possible'\nassert solution('10 5') == 'impossible'\nassert solution('7 2') == 'impossible'\n\"\"\""
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == \"possible\"\nassert solution('0 0') == \"possible\"\nassert solution('0 2') == \"impossible\"\nassert solution('2 0') == \"impossible\"\nassert solution('1 2 3') == \"impossible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''3 3\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    ''') == 'possible'\n\nassert solution(\n    '''2 4\n    -4 4\n    5 1 5\n    -4 2 2\n    ''') == 'impossible'\n\nassert solution(\n    '''4 2\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    ''') == 'impossible'\n\nassert solution(\n    '''4 2\n    0 0\n    0 2\n    2 0\n    1 2 3\n    2 2 2\n    3 0 3\n    ''') == 'impossible'\n\nassert solution(\n    '''3 4\n    1 1\n    0 1\n    2 2\n    3 3\n    1 1\n    0 1\n    2 2\n    3 3\n    ''') == 'impossible'\n''')\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'possible'\nassert solution('1 5') == 'impossible'\nassert solution('100 5') == 'impossible'\nassert solution('4 1') == 'impossible'\nassert solution('1 4') == 'impossible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n1 2 3\n2 2 2\n3 0 3\n''') == 'impossible'\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n1 2 3\n2 2 2\n3 0 3\n''') == 'possible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'possible'\nassert solution('10 5') == 'possible'\nassert solution('5 5') == 'impossible'\nassert solution('4 4') == 'impossible'\nassert solution('1000 1000') == 'impossible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'possible'\nassert solution('2 3') == 'impossible'\n\n'''"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n1\n1\n''') == '2'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n2\\n') == '1\\n2\\n'\nprint(solution(input()))"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3\n1\n''') == '4'\nassert solution('''\n5\n4\n2\n4\n3\n''') == '6'\nassert solution('''\n8\n4\n1\n1\n1\n2\n3\n2\n''') == '5'\nassert solution('''\n5\n4\n2\n2\n1\n''') == '4'\nassert solution('''\n4\n3\n1\n1\n1\n''') == '3'\n''')\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n2\n2\n2\n''') == '4'\nassert solution('''\n4 2\n2\n1\n2\n''') == '3'\nassert solution('''\n5 2\n3\n2\n1\n''') == '3'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 2\"\n    \"2\"\n    \"2\"\n    \"2\"\n    ) == \"4\"\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '4'\nassert solution('5 3') == '5'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '4'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([4, 2, 2, 2]) == \"4\"\nassert solution([2, 2, 2, 2]) == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '4'\nassert solution('1 4') == '4'\nassert solution('1 5') == '3'\nassert solution('2 2') == '3'\nassert solution('1 1') == '1'\nprint('Tests passed')\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == 'Mirko'\nassert solution('10\\n2 4\\n6 5\\n1 3\\n4 5\\n3 6\\n2 7\\n4 8\\n7 8\\n5 9\\n5 1\\n6 9\\n4 8\\n8 1\\n2 5\\n5 1\\n6 7\\n4 8\\n8 1\\n5 9\\n7 8\\n3 6\\n1 2\\n3 4\\n6 7\\n9 8\\n1 3\\n2 3\\n5 4\\n7 4\\n8 4\\n4 4\\n1 2\\n9 3\\n2 3\\n9 5\\n5 6\\n2 3\\n1 3\\n9 4\\n1 5\\n7 4\\n6 5\\n1 2\\n6 7\\n4 5\\n2 5\\n6 7\\n6 7\\n4 5\\n4 5\\n6 7\\n5 6\\n4 5\\n4 6\\n5 4\\n6 4\\n9 3\\n5 3\\n6 4\\n3 3\\n7 4\\n8 3\\n4 2\\n5 3\\n9 5\\n1 3\\n4 3\\n8 4\\n2 4\\n5 4\\n9 5\\n3 4\\n9 3\\n6 4\\n4 4\\n8 4\\n3 3\\n1 3\\n4 4\\n8 4\\n8 4\\n8 3\\n2 4\\n9 3\\n9 3\\n6 5\\n6 7\\n3 7\\n8 7\\n9 8\\n2 3\\n6 7\\n7 8\\n7 7\\n9 7\\n8 7\\n8 8\\n6 8\\n8 7\\n3 7\\n7 8\\n2 3\\n4 8\\n7 8\\n6 8\\n7 8\\n3 7\\n9 7\\n4 8\\n8 8\\n7 8\\n9 8\\n1 3\\n4 8\\n1 4\\n5 9\\n8 8\\n2 3\\n4 8\\n6 8\\n7 8\\n1 3\\n8 8\\n7 8\\n5 9\\n5 9\\n6 8\\n1 4\\n4 8\\n8 8\\n5 9\\n9 8\\n9 7\\n5 9\\n1 4\\n2 4\\n6 8\\n8 8\\n1 4\\n4 8\\n6 8\\n8 8\\n5 9\\n9 8\\n4 8\\n4 8\\n1 4\\n6 7\\n5 7\\n2 4\\n8 7\\n9 7\\n5 9\\n8 8\\n1 4\\n5 9\\n7 8\\n3 7\\n5 8\\n1 3\\n6 7\\n4 7\\n2 4\\n8 7\\n7 8\\n8 8\\n5 8\\n9 7\\n2 7\\n1 4\\n4 7\\n6 8\\n7 8\\n2 4\\n8 7\\n8 8\\n6 8\\n7 8\\n2 4\\n6 7\\n6 7\\n4 7\\n6 7\\n4 7\\n9 7\\n1 3\\n4 5\\n2 4\\n8 4\\n5 4\\n7 4\\n1 3\\n9 5\\n3 5\\n5 7\\n4 7\\n1 4\\n2 4\\n5 7\\n3 7\\n6 7\\n1 5\\n4 7\\n1 4\\n6 5\\n6 5\\n2 4\\n5 7\\n3 5\\n9 5\\n8 5\\n4 7\\n1 4\\n7 8\\n2 4\\n7 8\\n9 8\\n5 8\\n7 8\\n1 4\\n3 5\\n2 4\\n7 7\\n8 7\\n2 4\\n7 8\\n8 8\\n7 7\\n4 8\\n7 8\\n7 7\\n8 7\\n9 8\\n4 8\\n7 7\\n9 8\\n7 7\\n8 8\\n9 8\\n8 8\\n7 8\\n5 8\\n5 8\\n9 8\\n6 7\\n6 7\\n4 7\\n9 7\\n1 3\\n4 8\\n2 4\\n1 3\\n9 5\\n6 7\\n7 8\\n3 7\\n6 7\\n4 7\\n8 7\\n1 3\\n9 5\\n4 8\\n2 4\\n6 7\\n7 8\\n7 7\\n9 7\\n5 8\\n5 8\\n6 7\\n1 4\\n2 4\\n7 8\\n8 8\\n6 8\\n6 8\\n6 8\\n4 8\\n8 7\\n5 8\\n3 7\\n8 7\\n8 7\\n7 8\\n5 8\\n3 7\\n1 4\\n6 7\\n9 7\\n6 7\\n7 8\\n5 8\\n6 7\\n8 8\\n8 8\\n5 8\\n5 8\\n9 7\\n9 7\\n6 7\\n8 7\\n2 4\\n7 7\\n8 7\\n6 7\\n6 7\\n4 7\\n9 7\\n9 7\\n5 8\\n5 7\\n4 7\\n8 7\\n5 7\\n4 7\\n5 7\\n8 7\\n1 3\\n9 5\\n6 7\\n7 8\\n3 7\\n1 3\\n8 7\\n9 7\\n2 4\\n4 8\\n6 8\\n7 8\\n8 8\\n4 8\\n6 8\\n7 8\\n8 7\\n5 8\\n7 8\\n2 4\\n6 7\\n3 7\\n9 7\\n9 7\\n8 7\\n8 7\\n6 7\\n9 7\\n5 8\\n1 3\\n2 4\\n7 8\\n6 8\\n5 8\\n9 7\\n1 3\\n4 8\\n2 4\\n8 7\\n6 7\\n7 8\\n5 7\\n7 8\\n9 7\\n1 3\\n4 8\\n3 7\\n8 7\\n6 7\\n7 8\\n5 7\\n6 7\\n7 8\\n6 7\\n7 8\\n8 7\\n8 7\\n7 8\\n4 8\\n7 7\\n7 8\\n9 7\\n9 7\\n6 7\\n6 7\\n1 3\\n4 8\\n1 4\\n5 9\\n8 8\\n9 7\\n4 8\\n6 7\\n7 8\\n9 7\\n2 4\\n4 8\\n1 3\\n5 9\\n8 8\\n2 4\\n6 7\\n7 8\\n9 7\\n4 8\\n1 3\\n2 4\\n6 8\\n7 8\\n1 3\\n5 9\\n8 8\\n2 4\\n6 7\\n7 8\\n9 7\\n9 7\\n5 9\\n4 8\\n8 8\\n6 7\\n7 8\\n9 7\\n9 7\\n5 9\\n5 9\\n6 8\\n1 4\\"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"Mirko\"\nassert solution(\"1 1 1\") == \"Slavko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6\n1 1\n1 2\n1 3\n3 2\n4 1\n4 2\n\"\"\") == \"Mirko\"\n\nassert solution(\"\"\"\n3\n2 4\n3 4\n3 3\n\"\"\") == \"Slavko\"\n\nassert solution(\"\"\"\n3\n1 1\n1 2\n1 3\n2 4\n2 2\n\"\"\") == \"Slavko\"\n\nassert solution(\"\"\"\n3\n1 1\n2 1\n2 2\n1 3\n\"\"\") == \"Slavko\"\n\nassert solution(\"\"\"\n3\n1 1\n2 1\n3 1\n1 2\n1 3\n\"\"\") == \"Slavko\""
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n5 1\n5 3\n1 5\n1 4\n1 1\n''') == 'Mirko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 1\n1 2\n1 3\n2 2\n2 3\n''') == 'Mirko'\nassert solution('''\n5\n1 1\n1 2\n1 3\n2 2\n2 3\n''') == 'Slavko'\n\n'''"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 4\\n1 2\\n1 2\\n1 2\\n1 2\") == \"Slavko\"\nassert solution(\"3\\n2 1\\n3 1\\n1 3\\n1 2\\n2 2\\n2 2\\n2 4\\n2 2\\n2 3\\n2 4\\n2 2\\n3 3\\n3 4\\n3 4\\n3 4\\n3 4\\n3 4\\n4 4\\n3 2\\n2 4\\n4 4\\n3 4\\n2 4\\n1 2\\n3 4\\n2 4\\n1 4\\n2 4\\n3 4\\n1 2\\n3 2\\n2 4\\n1 2\\n2 2\\n1 2\\n3 2\\n3 2\\n2 4\\n2 4\\n2 4\\n3 2\\n1 2\\n3 2\\n2 4\\n3 2\\n3 2\\n2 4\\n2 4\\n2 4\\n3 2\\n1 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4\\n1 2\\n1 2\\n3 2\\n3 2\\n2 4"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3') == 'Mirko'"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'Mirko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Mirko'\nassert solution('5') == 'Slavko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Slavko'\nassert solution('100000') == 'Mirko'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1\n9\n12\n3\n''') == '2 4'\nassert solution('''\n4\n100\n200\n300\n''') == '2 4'\nassert solution('''\n1\n1\n1\n1\n''') == '2'\nassert solution('''\n4\n12\n33\n333\n''') == '3'\nassert solution('''\n9\n1\n2\n3\n5\n8\n10\n13\n14\n''') == '4 5 8'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n34\n38\nSample Output:\n2 4''') == '2 4'\nassert solution('''3\n6\n34\n38\nSample Output:\n2 4''') == '2 4'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n') == '2 4'\nassert solution('2\\n3\\n') == '2 4'\nassert solution('3\\n') == '2 4'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '2 1'\nassert solution('3 4 1') == '4 1'\nassert solution('4 1 2') == '2 1'\nassert solution('4 3 1') == '3 1'\nassert solution('5 1 2') == '1 1'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9') == '2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100'\nassert solution
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2 4 5 7'\nassert solution('1') == '0'\n\nassert solution('5 3 4') == '3 4'\nassert solution('4 5 3') == '3 4'\n\nassert solution('4 1 5 4') == '2 4 5'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2 4'"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n4') == '2 4'\nassert solution('3\\n6') == '2 4'\nassert solution('1\\n2') == '1 2'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2 4'\nassert solution('4') == '1 2 3'\nassert solution('10') == '8 9 6 5 4 3 2 1'\nassert solution('100') == '10 8 12 6 5 4 3 2 1'\n\nimport sys"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n6\n34\n38\n\"\"\") == \"2 4\""
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"4\") == \"3\"\nassert solution(\"100\") == \"3\"\nassert solution(\"100000\") == \"3\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2\n1\n4\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n5\n7\n4\n3\n3\n5\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n10\n7\n3\n5\n7\n1\n3\n2\n5\n3\n3\n\"\"\") == \"12\"\n\nassert solution(\"\"\"\n30\n10\n3\n10\n7\n2\n1\n5\n3\n9\n3\n4\n\"\"\") == \"24\"\n\nassert solution(\"\"\"\n40\n10\n10\n5\n10\n7\n5\n10\n7\n7\n8\n7\n10\n4\n8\n8\n10\n7\n10\n4\n10\n10\n3\n10\n10\n7\n10\n\"\"\") == \"62\""
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4'\n) == '12'\nassert solution(\n    '5'\n) == '12'\nassert solution(\n    '3'\n) == '4'\n\nassert solution(\n    '3'\n    '4'\n    '5'\n) == '9'\n\nassert solution(\n    '7'\n    '5'\n    '6'\n) == '8'"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\nassert solution('''\n6\n3 5 1 8 9 7\n''') == '9'\nassert solution('''\n8\n8 10 2 1000000 30556926000\n''') == '9'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\nprint('You passed! :)')\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n100000 400000 500000\n900000''') == '12'\nassert solution('''4\n10000 400000 500000 900000\n30556926000''') == '12'\nassert solution('''5\n8 10 2 1000000 30556926000\n30556926000''') == '12'\nassert solution('''5\n3\n9\n10\n7\n8''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\nassert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n0\n''') == 'NO'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 8') == 'YES', 'Sample Test'\nassert solution('9 1') == 'NO', 'Sample Test'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('20 20') == 'YES'\nassert solution('100 100') == 'NO'\nassert solution('10 10') == 'NO'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 8') == 'YES'\nassert solution('5 2') == 'NO'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\nassert solution('''16 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n4 6 0\n9 2 0\n8 8 0\n''') == 'NO'\nassert solution('''12 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n4 6 0\n9 2 0\n8 8 0\n4 5 0\n''') == 'NO'\nassert solution('''23 8\n0\n1 5 0\n2 6 0\n3 7 0\n4 8 0\n5 9 0\n6 10 0\n7 11 0\n8 12 0\n''') == 'NO'\nassert solution('''7 7\n0\n1 6 0\n2 5 0\n3 4 0\n4 7 0\n5 7 0\n6 8 0\n''') == 'NO'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES'"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 8') == 'YES'\nassert solution('0') == 'NO'\nassert solution('1') == 'NO'\nassert solution('8 5 0') == 'NO'\nassert solution('8 9 0') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n8 2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\\n') == 'YES'\n\n'''\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\nassert solution('''5 8\n0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n0\n1 4 0\n''') == 'NO'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == \"YES\"\nassert solution('''\n8 9\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == \"NO\"\n\n\"\"\"\n\nimport collections\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 3 3') == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n''')"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4 5 6 1 2''') == '5 6 1 2 3 4'\nassert solution('''4 6 3 1 2''') == '1 2 3 4 5'\nassert solution('''3 7 4 2 1 6''') == '1 2 3 4 5 6 7'\nassert solution('''4 4 4 5 5 4 6 5''') == '1 2 3 4 5 6 7'\nassert solution('''5 6 3 1 6 6''') == '1 2 3 4 5 6 7'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2\\n3 4 5 6 1 2\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '5 6 1 2 3 4'"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"5 6 1 2 3 4\"\n\nstdin = \"\"\"\n2 2\n1 2\n\"\"\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n5 4 5 6 1 2''') == '5 6 1 2 3 4'\nassert solution('''2\n3 4 5 6 1 2''') == 'Impossible'\nprint(solution('''2\n2 1 4 1 2'''))\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1\\n') == '1'\nassert solution('2 5 2 2\\n') == '212'\nassert solution('4 5 2 5\\n') == '212'\nassert solution('6 6 5 5\\n') == '9999'\nassert solution('9 9 9 9\\n') == 'IMPOSSIBLE'"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('1 2 3 4 5') == 'IMPOSSIBLE'\n\"\"\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('100 11 4') == 'IMPOSSIBLE'\nassert solution('2 3 4') == 'IMPOSSIBLE'\nassert solution('9 9 9') == 'IMPOSSIBLE'\n\n---Input---\n9 8 0 7\n7 9 9\n9 9 9\n\n---Output---\n\n0\n0\n\n---Input---\n9 8 7 0\n9 9 9\n9 9 9\n\n---Output---\n\n0\n0\n\n---Input---\n2 4 5 0\n2 4 6\n2 5 2\n\n---Output---\n\n2\n2\n\n---Input---\n6 7 9 0\n5 9 4\n6 8 3\n\n---Output---\n\n6\n3\n\n---Input---\n7 8 9 0\n6 7 3\n9 8 5\n\n---Output---\n\n7\n3\n\n---Input---\n8 9 0 0\n1 9 9\n2 7 8\n\n---Output---\n\nIMPOSSIBLE\n\n---Input---\n2 3 4 0\n1 2 4\n3 1 2\n\n---Output---\n\nIMPOSSIBLE\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 8 4\n''') == '20512'\nassert solution('''0 0 0 0\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n5 5 5 5''') == '5'\nassert solution('''5 1 0 0\n2 2 2 2\n3 3 3 3\n4 4 4 4\n5 5 5 5''') == '5'\nassert solution('''3 8 7 0\n6 7 7 7\n8 9 8 8\n9 9 9 9\n10 1 1 1\n11 1 1 1\n12 1 1 1\n13 1 1 1\n14 1 1 1\n15 1 1 1\n16 1 1 1\n''') == 'IMPOSSIBLE'\nassert solution('''0 0 0 0\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n5 5 5 5\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'IMPOSSIBLE'\n\"\"\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"20512\"\n\n## Test Case 2\nSample Input:\n20 19 8 7\nSample Output:\nImpossible\n\n## Test Case 3\nSample Input:\n20 30 24 40\nSample Output:\nImpossible\n\n## Test Case 4\nSample Input:\n1 1 1 1\nSample Output:\n1\n\n## Test Case 5\nSample Input:\n3 1 1 2\nSample Output:\n1\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5 2 8') == '2052'\nassert solution('5 2 1 4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n\"\"\"\n) == \"20512\"\n\nassert solution(\n\"\"\"\n1 1 1 1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n5 2 8 4\n\"\"\"\n) == \"20512\"\n\nassert solution(\n\"\"\"\n1 1 1 1\n\"\"\"\n) == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n2 2 2 2\n\"\"\"\n) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"100 2 25 2\") == \"10100\"\nassert solution(\"10 10 10 10 10 10 10 10 10 10\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('100 2 8 4') == '20410'\nassert solution('1 1 1 1 1') == 'IMPOSSIBLE'\n\n\"\"\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"3 8\") == \"3\"\nassert solution(\"4 8\") == \"4\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == 2\nassert solution(\"2 3 1\") == 3\nassert solution(\"3 1 2\") == 3\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 8') == '3'"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"3 8\") == \"3\""
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"3 8\") == \"3\"\nassert solution(\"4 5\") == \"5\"\nassert solution(\"6 9\") == \"6\"\nassert solution(\"7 9\") == \"7\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 8') == '3'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == '2'\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == '3'\nassert solution('''\n100 20\nACACB\nACCCB\nACCB\nACCC\nBACCC\nBCCCB\nBCCC\nBCCCC\nBACCB\nACCBB\n''') == '10'\nassert solution('''\n100 50\nAAAB\nAAAB\n''') == '0'\nassert solution('''\n3 5\nABCDEF\nABC\nBCD\nAB\n''') == '3'\n\nimport collections"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == '2'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == 2\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == 3\nassert solution('''\n5 20\nPQWKJYJDF\nWKJYDMQLH\nYKDMQLHPRJ\nKJYQDLMHPR\nMQLHPRJWK\n''') == 4\nassert solution('''\n5 3\nABC\nCDEF\nGHEI\nABC\nABC\n''') == 3"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('10 10') == '18'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n') == '3'\nassert solution('2 2\\n') == '2'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"5 7\") == \"330\"\nassert solution(\"1 10\") == \"33000\"\nassert solution(\"1 100\") == \"350000\"\nassert solution(\"1 200\") == \"3500000\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"13\"\nassert solution(\"4 4\") == \"13\"\nassert solution(\"5 5\") == \"80\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"3\"\nassert solution(\"3 3\") == \"13\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n2 2\n3 3''') == '3'\n\nassert solution('''1 1\n1 1\n2 2\n3 3''') == '6'\n\nassert solution('''3 3\n1 1\n2 2\n3 3''') == '15'\n\nassert solution('''2 2\n1 1\n2 2\n3 3''') == '10'\n\nassert solution('''2 2\n1 1\n2 2\n1 3''') == '10'"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('3 3') == '6'\nassert solution('3 3') == '6'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n''') == '3'\nassert solution('''\n1 1\n''') == '2'\nassert solution('''\n1 1\n''') == '1'\nassert solution('''\n1 1\n''') == '1'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"3 3\") == \"12\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 1') == '1'\nassert solution('10 20') == '28'\nassert solution('10 10') == '27'\nassert solution('1 2 3 4 5 6 7 8 9') == '137'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\nassert solution('5 3\\n3 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '4'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\nassert solution('5 5\\n0 1 0 0 0\\n0 0 1 1 1\\n0 0 1 0 0\\n0 0 0 0 0\\n0 0 0 0 0') == '0'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\"\nassert solution(\"10 3\\n1 0 2 3 4 5 6 7 8 9 10\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"20 6\\n1 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10 10\n1 1 1 1 1 1 1 1 1 1 1\n1 1 2 2 2 2 2 2 2 2\n2 1 4 4 4 4 4 4 4 4\n1 1 4 4 4 4 4 4 4 4\n4 1 5 5 5 5 5 5 5 5\n4 1 2 3 3 3 3 3 3\n2 2 2 2 2 2 2 2 2\n3 2 3 3 3 3 3 3 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10 10\n0 0 0 0 0 0 0 0 0 0\n0 1 2 3 4 5 6 7 8 9\n1 1 2 3 4 5 6 7 8 9\n2 1 2 3 4 5 6 7 8 9\n3 1 2 3 4 5 6 7 8 9\n4 1 2 3 4 5 6 7 8 9\n5 1 2 3 4 5 6 7 8 9\n6 1 2 3 4 5 6 7 8 9\n7 1 2 3 4 5 6 7 8 9\n8 1 2 3 4 5 6 7 8 9\n9 1 2 3 4 5 6 7 8 9\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '3'\nassert solution('1 1 2') == '0'\nassert solution('3 0 2 3') == '5'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_sample_1) == '3'\nassert solution(input_sample_2) == '4'\nassert solution(input_sample_3) == '4'\nassert solution(input_sample_4) == '5'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 3\n1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 3\n1 1 1\n1 0 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '3'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"3\"\nassert solution(\"5 3 1 1 2 3 1 3 4 3 2 4\") == \"3\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 2\") == \"2\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\") == 'YES'"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\nSample Output:\nYES\nNO\n''') == 'YES'\n\nassert solution('''1\n3\n2\nSample Output:\nNO\n''') == 'NO'\n\nassert solution('''5\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\nSample Output:\nYES\nNO\n''') == 'YES'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'YES'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n2 1\n2 3\n3 1\n3 2\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n3 1\n3 2\n3\n1 1\n1 2\n2 1\nSample Output:\nYES\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3\n5 5 5\n1 1\n3 3\n2 1\nSample Output:\nYES\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n2\n4 7 8\n6 9\n8 7\nSample Output:\nYES\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n2\n3 3 3\n2 2\n2 3\n3 2\nSample Output:\nNO\n\"\"\") == \"NO\"\n\nprint(\"Tests finished.\")\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\nSample Output:\nYES\nNO\n''') == 'YES'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3') == 'YES'\nassert solution('3\\n1 1\\n1 2\\n2 1\\nSample Output:') == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'YES'\nassert solution('4') == 'YES'\nassert solution('2') == 'NO'\nassert solution('4') == 'NO'\n'''\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3.000000000'\nassert solution('2') == '3.000000000'\nassert solution('1') == '3.000000000'\nassert solution('0') == '3.000000000'\n\"\"\""
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0.3333333333333334'\nassert solution('2') == '3.00000000000'\nassert solution('1') == '3.00000000000'\nassert solution('0') == '0.00000000000'\nassert solution('1000') == '1000000000000.00000000000'\n\nprint(solution())\n\n\"\"\""
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1.000000000'\nassert solution('10') == '10.000000000'\n\"\"\"\nfrom math import exp"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '3.000000000'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('1') == '1.000000000'\nassert solution('3') == '4.000000000'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n'''"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3.000000000'\nassert solution('6') == '4.000000000'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('5') == '10.000000000'\n\n----------------"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3.000000000'\nassert solution('3') == '1.000000000'\nassert solution('5') == '0.000000000'"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '2.000000000'\nassert solution('4') == '4.000000000'\n\n'''"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2''') == '1'\nassert solution('''5 6\n2 2 5 3''') == '2'\nassert solution('''3 1\n1 2 3''') == '0'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('3') == '1'\nassert solution('3 4') == '1'\nassert solution('3 4 5') == '1'\nassert solution('3 4 5 3') == '2'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1 2\n3\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n4 5 6\n''') == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2\n3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10 4\n3 3 3 3 1 1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10 4\n5 5 3 3 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n12 4\n3 3 3 3 2 2 2 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n15 10\n4 6 6 6 3 3 3 1 1 1 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3 4 5\") == \"3\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 2 1\") == \"2\"\nassert solution(\"3 2 1 2\") == \"3\"\nassert solution(\"3 2 1 2 3\") == \"3\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('3') == '2'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('3') == '1'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution(\"0 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"3\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 1 2') == '3'\nassert solution('1 3 4') == '2'\nassert solution('1 3 2') == '3'\nassert solution('1 3 1') == '2'\nassert solution('1 3') == '3'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n') == '3'\nassert solution('4 5 7\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n') == '2'\nassert solution('5 5 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n') == '2'\n\nassert solution('0 0 0\\n0 2 2 3\\n1 3 2\\n1 2 4\\n') == '1'\nassert solution('1 0 0\\n0 2 2 3\\n1 3 2\\n1 2 4\\n') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n\nassert solution('''\n4 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n\nassert solution('''\n4 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '1'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '1'"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 5') == '3'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"3\"\nassert solution(\"0 2 2 3 2\") == \"2\"\nassert solution(\"1 3 2\") == \"3\"\nassert solution(\"1 2 4\") == \"1\"\nassert solution(\"1 1 4\") == \"4\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n') == '3'\n\nassert solution('2\\n2\\n1\\n2\\n3\\n') == '3'\n\nassert solution('2\\n2\\n0\\n3\\n1\\n2\\n4\\n1\\n') == '2'\n\nassert solution('3\\n1\\n1\\n1\\n2\\n') == '1'\n\nassert solution('3\\n2\\n1\\n1\\n2\\n') == '2'"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == \"2\"\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == \"3\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3', 'First'\n\nassert solution('''\n3 4 5\n0 3 4\n1 2 3\n1 3 2\n2 1 4\n2 2 4\n''') == '2', 'Second'\n\nassert solution('''\n3 4 5\n0 3 4\n1 2 3\n1 3 2\n2 1 4\n2 2 4\n''') == '3', 'Third'\n\nassert solution('''\n5 4 5\n0 3 4\n1 2 3\n1 3 2\n2 1 4\n2 2 4\n''') == '1', 'Fourth'\n\nprint('All tests passed!')\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2 HelloWorld.c\"\nassert solution(\"10\") == \"2 HelloWorld.c\"\n\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***''') == '2 Main'\n\nSample Input:\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nSample Output:\n2\nHelloWorld.c\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nHelloWorld.c\\n\\nAdd.c\\nint Main() { \\nfor (int i=0; i<10; i++) \\nsum += i; \\nprintf(\"SUM %d\", sum); \\n}') == '2 HelloWorld.c\\nAdd.c\\ndef solution(stdin: str) -> str: \\npass \\n'\n\nassert solution('2\\n***END***\\nHelloWorld.c\\n\\n***END***\\nint Main() { \\nfor (int i=0; i<10; i++) \\nsum += i; \\nprintf(\"SUM %d\", sum); \\n}') == '0\\nHelloWorld.c\\nAdd.c\\ndef solution(stdin: str) -> str: \\npass \\n'\n\nassert solution('3\\n***END***\\nHelloWorld.c\\n\\n***END***\\nint Main() { \\nfor (int i=0; i<10; i++) \\nsum += i; \\nprintf(\"SUM %d\", sum); \\n}') == '0\\nHelloWorld.c\\n***END***\\n***END***\\ndef solution(stdin: str) -> str: \\npass \\n'\n\"\"\"\n\nimport sys\nimport collections"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\nHelloWorld.c\\nint Main() { \\nprintf(\"Hello %d\\n\",i);\\n}\") == \"HelloWorld.c\"\n\n=======\nWhile reviewing code recently being checked into the repository, Jim discovered that some employees now and then seemed to copy code right from the Internet into the company code base. This would be a potential disaster as the company then risks getting sued by copyright holders of the original code. The obvious solution, talking to the employees and kindly ask them not to submit any stolen code, seemed to solve the problem. Still, it was decided that a screening process should be introduced to detect newly stolen code. \n\nThe screening would work as follows: Every time new code was checked in, the full contents of the changed files where matched against a repository of known open source code. For each file the longest match, in number of consecutive lines, should be reported.\n\nComparison is done line by line. Empty lines, and lines only containing space, are ignored during comparison and not counted. Leading and trailing spaces should be ignored completely and consecutive space characters inside the lines are treated as one single space. The comparison is case-sensitive.\n\n-----Input-----\nTest data starts with the number $0 \\le N \\le 100$ of code fragments in the repository. Then follows, for each code fragment, one line containing the file name that the fragment was fetched from and the contents of the fragment on subsequent lines. File names will neither contain whitespace nor be guaranteed to be unique. The name is at most 254 characters long. Each fragment is terminated by ***END*** on a line by its own. This line is not considered being part of the fragment.\n\nAfter the fragments in the repository have all been listed, comes the actual code snippet to find matches for. This snippet is also terminated by ***END*** on a line by its own.\n\nLines are guaranteed to be no longer than $254$ characters. No code fragment will be longer than $10000$ lines. Any code and file name lines will only contain the ASCII characters 32-126. The total size of the input file will not exceed $10^6$ characters.\n\n-----Output-----\nOutput the number of matching consecutive lines (empty lines not counted) in a longest match from the repository, followed by a space-separated list of the file names of each fragments containing a match of this length, given in the order that the matching fragments were presented in the repository description. If no fragments match, write the number 0 on a line of its own.\n\n-----Examples-----\nSample Input:\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\nSample Output:\n2 HelloWorld.c\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\nHelloWorld.c\\nint Main() {\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\npass\"\n\"\"\""
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0\\nint Main() {\\n  printf(\"Hello %d\\n\",i);\\n}\\n0') == '2 Add.c'\n\"\"\"\n\nimport re\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}''') == '2 Add.c\\ndef solution(stdin: str) -> str\\n\\nassert solution('''2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}'''"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n2 HelloWorld.c\n3 Add.c\n4 Main()''') == \"2 HelloWorld.c\"\n\nassert solution('''5\n2 HelloWorld.c\n3 Add.c\n4 Main()\n5 Add.c''') == \"2 HelloWorld.c\""
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\nHelloWorld.c\\nint Main() {\\n    printf(\\\"Hello %d\\n\\\",i);\\n}\") == \"2 HelloWorld.c def solution(stdin: str) -> str: \\n    pass\"\nassert solution(\"1\\nadd.c\\nint main() {\\n    printf(\\\"Hello %d\\n\\\",i);\\n}\") == \"1 add.c def solution(stdin: str) -> str: \\n    pass\"\n\"\"\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"HelloWorld.c\\nint Main() { printf('Hello %d\\n',i); }\\n***END***\\nAdd.c\\nint Main() { sum += i; printf('SUM %d', sum); }\\n***END***\") == \"2 HelloWorld.c\""
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"1\\n2\\n2\""
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '2 1 2'\n\nassert solution('''\n3 5\n1 1 1\n2 2 2\n3 3 3\n4 4 4\n5 5 5\n''') == '1 1 1 1'\n\nassert solution('''\n5 7\n1 1 1 1 1 1\n2 2 2 2 2 2\n3 3 3 3 3 3\n4 4 4 4 4 4\n5 5 5 5 5 5\n''') == '5'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"1\\n2\\n2\"\nassert solution(\"3 3\") == \"1\\n2\\n2\"\nassert solution(\"10 3\") == \"10\\n9\\n9\"\n\n\"\"\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n2 2 2\\n4 2 1\\n4 4 1\\n') == '1 2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n2 2 2\n3 2 1\n4 2 1\n4 4 1\n''') == '1\\n2\\n2\\n2\\n1\\n1\\n1\\n2\\n2\\n1\\n'''\n\nn, h = map(int, input().split())\np = []\nfor _ in range(n):\n    p.append(list(map(int, input().split())))\n\nres = {}\nfor i in range(1, h+1):\n    tmp = 0\n    for j in range(n):\n        tmp += p[j][i-1]\n        if tmp > i:\n            break\n    res[i] = tmp\nprint(min(res.values()))\n\n'''\n2 2\n2 2 2\n4 2 1\n4 4 1\n4 4 1\n'''\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n3\n4\n1\n3\n2\n''') == '1'\nassert solution('''\n4\n1\n2\n3\n1\n3\n2\n''') == '2'\nassert solution('''\n5\n1\n2\n3\n1\n3\n2\n''') == '2'\nassert solution('''\n4\n1\n2\n3\n1\n3\n2\n''') == '2'\nassert solution('''\n4\n1\n2\n3\n1\n3\n2\n''') == '2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1\\n2\\n2\\n'\nassert solution('4 4') == '1\\n2\\n2\\n'"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '1\\n2\\n2\\n'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n2 2 2\\n4 2 1\\n4 4 1') == '1\\n2\\n2'\nassert solution('3 5\\n2 5 3\\n4 5 2\\n4 4 1\\n5 5 2') == '2\\n1\\n1'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\n\nassert solution('''\n5 10\n10 20 5 10\n15 20 5 10\n10 20 10 15\n''') == '3'\n\nassert solution('''\n3 10\n10 20 5 10\n15 20 5 10\n10 20 10 15\n''') == '2'\n\nassert solution('''\n5 10\n10 20 5 10\n15 20 5 10\n10 20 10 15\n''') == '5'\n'''\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\nassert solution('''\n1 100 1\n''') == '1'\nassert solution('''\n1 1 1\n''') == '2'\n''')"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'\n'''\n\nimport sys\nimport os\nimport math\n\nsys.setrecursionlimit(10**5)"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"5\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"1\"\nassert solution(\"2\\n10\\n20\\n30\\n40\\n50\\n60\\n70\\n80\\n90\\n100\\n\") == \"2\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 20') == '5'\nassert solution('5 10') == '3'\nassert solution('20 80 100') == '5'\nassert solution('80 200 100') == '10'\nassert solution('100 200 10') == '3'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\nassert solution('''\n4 3\n0 0 0\n3 5 5\n4 5 7\n3 6 10\n''') == '0'\n\"\"\"\nYou are given a set of data that includes information about different servers that are currently streaming music. The data is represented as a 2D array where the first dimension represents the user, and the second dimension represents the time since the last server update. The users and their corresponding times are given in the code below:"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    10 50 10\n    1 10 4\n    2 10 5\n    3 10 6\n    4 10 7\n    5 10 8\n    6 10 9\n    7 11 8\n    8 11 9\n    9 12 7\n    10 12 6\n    11 12 5\n    12 12 4\n    13 12 3\n    14 12 2\n    15 12 1\n    16 13 0\n    17 14 0\n    18 15 0\n    19 16 0\n    20 17 0\n    ''') == '20'\n''')\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 20\") == \"5\"\nassert solution(\"3 20\") == \"5\"\nassert solution(\"3 20\") == \"5\"\nassert solution(\"3 20\") == \"5\"\nassert solution(\"10 20 3\") == \"9\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 20\n50 70 10\n100 110 4\n150 190 16\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1 20\n50 70 10\n100 110 4\n150 190 16\n\"\"\") == \"10\"\nassert solution(\"\"\"\n10\n5\n2\n1\n3\n3\n1\n\"\"\") == \"10\"\n\nimport sys\nimport io\nsys.stdin = io.StringIO(\"\"\"\n3 20\n50 70 10\n100 110 4\n150 190 16\n\"\"\")\nassert solution() == \"5\""
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\nassert solution('''\n3 2\n1 1 1\n2 2 2\n''') == '1'\n'''"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"IMPOSSIBLE\"\nassert solution(\"2\") == \"26\"\nassert solution(\"3\") == \"IMPOSSIBLE\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\nassert solution(\"5\") == \"26\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'\nassert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.##..\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\nSample Output:\n26\n''') == '26'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n....\n.#.#.\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == 'IMPOSSIBLE'\nassert solution('''\n4 4\n.....\n##..#\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"26\"\nassert solution(\"5 5\\n(2 5) (5 3)\\n.....\\n.#.#.\\n#.#.#\\n....#\\n#.##\\n1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '26'\nassert solution('5 5') == 'Impossible'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\n(2 5)\\n(5 3)\\n.....\\n.#.#.\\n1') == '26'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"26\""
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'failure'\n\nSample Input:\n3\n2\n2\n1\nSample Output:\nsuccess\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') =='success'\nassert solution('''\n6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure'\nassert solution('''\n10\n-2 -100\n-1 -100\n-100 -2\n-100 -1\n-1 -100\n0 -100\n-100 0\n-1 1\n1 1\n0 2\n''') =='success'\nassert solution('''\n10000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-1000 1000\n-"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '1\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1'\n) == 'failure'\nassert solution(\n    '5\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n2 2\\n3 3'\n) =='success'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"failure\""
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n-1 0\\n0 0\\n1 0\") == \"failure\"\nassert solution(\"3\\n-1 0\\n0 0\\n1 0\") == \"success\"\nassert solution(\"4\\n-1 0\\n0 0\\n1 0\\n-1 0\\n0 0\\n1 0\") == \"failure\"\n\"\"\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'failure', \"Your solution doesn't meet the requirements\"\nassert solution('2') =='success', \"Your solution doesn't meet the requirements\"\nassert solution('3') == 'failure', \"Your solution doesn't meet the requirements\"\nassert solution('5') =='success', \"Your solution doesn't meet the requirements\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure'\nassert solution('''\n5\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') =='success'\n''')"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"success\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1') == \"failure\"\nassert solution('5\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == \"success\"\nassert solution('7\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n-1 2\\n0 3\\n1 2') == \"success\"\n\"\"\"\nfrom functools import reduce"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\nassert solution('5\\n1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') =='success'\nassert solution('9\\n1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') =='success'\nassert solution('15\\n0 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1\\n0 2\\n1 2\\n-1 2\\n2 0\\n1 2\\n-1 2\\n2 0\\n1 2\\n-1 2\\n2 0\\n1 2\\n-1 2\\n2 0\\n1 2') == 'failure'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('3 3') == 'possible'\nassert solution('5 2 2') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n3 4\n5 2 2\n5 2 2\n''') == 'possible'\nassert solution('''\n2 2\n3 3\n5 2 2\n5 2 2\n''') == 'impossible'\nassert solution('''\n1 1\n5 2 2\n2 2\n''') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3') == 'possible'\nassert solution('5 2 2\\n1 2\\n3 3') == 'impossible'\n\"\"\"\nfrom itertools import permutations\nfrom collections import deque, Counter"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2\\n3 3') == 'impossible'\nassert solution('1 2\\n1 2') == 'possible'"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 2\n1 2\n3 3\n5 2 2\n5 2 2\n''') == 'possible'\nassert solution('''\n3 3\n5 2 2\n5 2 2\n''') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3\\n5 2 2') == 'impossible'\nassert solution('4 2 2\\n1 2\\n3 3\\n5 2 2') == 'possible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\") == \"possible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 2\\n1 2\\n3 3') == 'possible'\nassert solution('2 2 1\\n3 3\\n5 2 2\\n6 2 1') == 'impossible'\n\nstdin = \"\"\"\n3 2 4\n0 1 1\n0 1 1\n3 3\n4 1 1\n4 2 1\n\"\"\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2\\n3 3\") == \"impossible\"\nassert solution(\"5 2 2\\n5 2 2\\n5 2 2\") == \"possible\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'\nassert solution('1\\n1 2\\n1 2 1') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3 1 2\n3 1 2\n-1 1 2\n''') == '0'\nassert solution('''\n3\n2 3 2\n1 3 1\n-1 1 2\n''') == '0'\nassert solution('''\n5\n3 1 3 1\n1 3 2 1\n-1 1 2 1\n1 3 2 1\n-1 2 3 1\n''') == '2'\nassert solution('''\n2\n3 1 2\n1 2 2\n-1 1 2\n''') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'\nassert solution('2 2\\n1 2 1\\n1 2 1') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2 1 1 2') == '0'\nassert solution('-1 1 2 1 2') == '2'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 3') == '1'\nassert solution('1 1 3') == '0'\nassert solution('3 3 -1') == '1'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 3') == '1'\nassert solution('3 3') == '1'\nassert solution('4 2') == '1'\nassert solution('5 5') == '1'"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '0'\nassert solution('2 2') == '1'\nassert solution('1 1 2') == '1'\nassert solution('1 2 1') == '1'\nassert solution('-1 1 2') == '2'"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n7\n''') == '3'\nassert solution('''\n6 2\n1\n''') == '2'\nassert solution('''\n4 2\n3\n''') == '4'\nassert solution('''\n5 4\n2\n7\n''') == '2'\nassert solution('''\n5 3\n6\n''') == '3'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\nassert solution(\"7\") == \"6\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 2') == '4'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('15') == '15'\nassert solution('3') == '3'\nassert solution('13') == '13'\nassert solution('15453453') == '3453'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(x) == y\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2 2\\n\"\n    \"34\\n\"\n) == \"3\\n\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '3'\nassert solution('5 3') == '4'\nassert solution('5 4') == '5'\nassert solution('5 5') == '5'\nassert solution('5 6') == '6'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"8 2\") == \"7\"\nassert solution(\"11 2\") == \"11\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\n\ninput = \"\"\"\n3 2\n353\n\"\"\"\n\ninput = \"\"\"\n7 2\n4020\n\"\"\""
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 2') == '4'\nassert solution('5 2') == '5'\nassert solution('8 2') == '8'\nassert solution('9 2') == '9'\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"12 30 45 3 11\\n\"\n) == \"NO\\n\"\nassert solution(\n    \"3 47 0 4 9\\n\"\n) == \"YES\\n\"\nassert solution(\n    \"10 10 0 5\\n\"\n) == \"YES\\n\"\nassert solution(\n    \"3 47\\n\"\n) == \"YES\\n\"\nassert solution(\n    \"10 10 5\\n\"\n) == \"YES\\n\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == 'YES'\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''12 30 45 3 11''') == \"NO\"\nassert solution('''12 0 1 12 1''') == \"YES\"\nassert solution('''3 47 0 4 9''') == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([12, 30, 45, 3, 11]) == \"NO\"\nassert solution([3, 47, 0, 4, 9]) == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 47 0 4 9\") == \"YES\"\nassert solution(\"12 30 45 3 11\") == \"NO\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\""
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''12 30 45 3 11''') == 'NO'\nassert solution('''12 0 1 12 1''') == 'YES'\nassert solution('''3 47 0 4 9''') == 'YES'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1 1 2 3 1 0\\n2 4 20'\n) == '3'\n\nassert solution(\n    '1 1 2 3 1 0\\n2 2 1'\n) == '0'\n\nassert solution(\n    '1 1 2 3 1 0\\n15 27 26'\n) == '2'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n1 1 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n2 5 5') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1 1 2 3 1 0\n2 4 20\"\"\") == \"3\"\nassert solution(\"\"\"1 1 2 3 1 0\n15 27 26\"\"\") == \"2\"\nassert solution(\"\"\"1 1 2 3 1 0\n3 4 1\"\"\") == \"0\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1 2 3 1 0\n2 4 20''') == '3'\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '2'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n2 2 1') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 2 3 1 0') == '3'\nassert solution('2 4 20') == '2'\nassert solution('1 1 2 3 1 0') == '0'\nassert solution('15 27 26') == '0'\nassert solution('1 1 2 3 1 0') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 1, 2, 3, 1, 0]) == 3\nassert solution([1, 1, 2, 3, 1, 0]) == 0\nassert solution([1, 1, 2, 3, 1, 0]) == 0\nassert solution([1, 1, 2, 3, 1, 0]) == 0\nassert solution([1, 1, 2, 3, 1, 0]) == 0\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 2 3 1 0\n2 4 20\n''') == '3'\nassert solution('''\n1 1 2 3 1 0\n15 27 26\n''') == '0'\nassert solution('''\n1 1 2 3 1 0\n2 2 1\n''') == '0'\nassert solution('''\n1 1 2 3 1 0\n15 27 26\n''') == '2'\nassert solution('''\n1 1 2 3 1 0\n0 0 1\n''') == '0'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == \"4\"\nassert solution('2') == \"6\"\nassert solution('3') == \"8\"\nassert solution('4') == \"8\"\nassert solution('5') == \"8\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(t1) == \"4\"\nassert solution(t2) == \"6\"\nassert solution(t3) == \"8\""
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('3') == '4'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n\n3\n0 0 1\n2 0 1\n4 0 1\n\n''') == '4'\n\n\nassert solution('''\n\n3\n0 0 2\n2 0 2\n1 1 2\n\n''') == '6'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n\n''') == '4'\n\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n\n''') == '8'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 0 1\\n2 0 1\\n3 0 2') == '4'\nassert solution('3\\n0 0 2\\n2 0 2\\n1 1 2') == '8'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0 0 1\\n2 0 1\\n4 0 1') == '4'\nassert solution('3\\n0 0 2\\n3 0 2\\n6 0 2') == '8'\nassert solution('3\\n0 0 2\\n2 0 2\\n1 1 2') == '8'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 0 1\\n2 0 1\\n4 0 1\\n\") == '4'\nassert solution(\"3\\n0 0 2\\n3 0 2\\n6 0 2\\n\") == '6'\nassert solution(\"3\\n0 0 3\\n2 0 3\\n1 1 3\\n\") == '8'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n''') == \"4\"\n\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n''') == \"8\"\n\n'''"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0 0 1\n2 0 1\n4 0 1\n''') == '4'\n\nassert solution('''\n0 0 2\n3 0 2\n6 0 2\n''') == '6'\n\nassert solution('''\n0 0 2\n3 0 2\n6 0 2\n''') == '8'\n\nassert solution('''\n0 0 4\n3 0 2\n6 0 2\n''') == '10'\n\nassert solution('''\n1 1 1\n1 2 2\n2 1 2\n''') == '4'"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 6 0 6 6 0 6') == 'Yes'\nassert solution('1 3 3 5 5 3 3 1') == 'No'"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES', 'First'\nassert solution('''\n0 0 6 0 6 6 0 6\n7 4 4 7 7 10 10 7\n''') == 'NO', 'Second'\nassert solution('''\n1 1 4 1 4 4 1 1\n4 1 4 1 4 4 1 1\n''') == 'YES', 'Third'\n\nassert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES', 'Fourth'\nassert solution('''\n0 0 6 0 6 6 0 6\n7 4 4 7 7 10 10 7\n''') == 'NO', 'Fifth'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1') == 'YES'\nassert solution('0 0 6 0 6 6 0 6\\n7 4 4 7 7 10 10 7') == 'NO'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 6 0 6 6 0 6') == 'YES'\nassert solution('1 3 3 5 5 3 3 1') == 'NO'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n\n''') == 'YES'\nassert solution('''0 0 6 0 6 6 0 6\n7 4 4 7 7 10 10 7\n\n''') == 'NO'\nassert solution('''6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n\n''') == 'YES'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\", \"First\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"YES\", \"Second\"\nprint(\"All passed!\")\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\") == \"YES\"\nassert solution(\"0 0 6 0 6 6 0 6\\n7 4 4 7 7 10 10 7\") == \"NO\""
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES'\n\nassert solution('''6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == 'YES'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n') == 'YES'\nassert solution('6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n') == 'NO'"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 6 0 6 6 0 6') == 'YES'\nassert solution('1 3 3 5 5 3 3 1') == 'NO'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') =='sjfnb'\nassert solution('2') == 'cslnb'\nassert solution('3') =='sjfnb'\nassert solution('4') == 'cslnb'\n\nimport io, sys\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'cslnb'\nassert solution('2') == 'cslnb'\nassert solution('3') =='sjfnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n0\\n\") == \"cslnb\"\nassert solution(\"2\\n1 0\\n\") == \"cslnb\"\nassert solution(\"2\\n2 2\\n\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\\n\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == \"cslnb\"\nassert solution('2') == \"sjfnb\"\nassert solution('3') == \"cslnb\"\nassert solution('4') == \"sjfnb\"\nassert solution('5') == \"cslnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == \"sjfnb\"\nassert solution('2') == \"cslnb\"\nassert solution('3') == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'cslnb'\nassert solution('2') =='sjfnb'\nassert solution('3') =='sjfnb'\nassert solution('4') == 'cslnb'"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n0\n\n''') == \"sjfnb\"\nassert solution('''2\n1 0\n\n''') == \"cslnb\"\nassert solution('''2\n2 2\n\n''') == \"sjfnb\"\nassert solution('''3\n2 3 1\n\n''') == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') =='sjfnb'\nassert solution('2') == 'cslnb'\nassert solution('3') =='sjfnb'\nassert solution('4') == 'cslnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"cslnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n0\n''') == \"cslnb\"\nassert solution('''\n2\n1 0\n''') == \"cslnb\"\nassert solution('''\n2\n2 2\n''') == \"sjfnb\"\nassert solution('''\n3\n2 3 1\n''') == \"sjfnb\"\nprint(solution(input()))\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '0'"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\\n1 5 3\") == \"2\"\nassert solution(\"1 2\\n1\") == \"1\"\nassert solution(\"1 1\\n1\") == \"0\"\nassert solution(\"1 1\\n1\") == \"0\"\nassert solution(\"1 1\\n1\") == \"0\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('3') == '0'"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '1'\nassert solution('3 5') == '2'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '0'\nassert solution('2 3') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n1 5 3\n''') == '2'\nassert solution('''\n1 2\n1\n''') == '1'\nassert solution('''\n1 1\n1\n''') == '0'\nassert solution('''\n1 1\n1\n''') == '0'\nassert solution('''\n1 1\n1\n''') == '0'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 5, 3]) == 2\nassert solution([1, 2, 1]) == 1\nassert solution([1, 1, 1]) == 0\n\"\"\""
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n1 5 3\\n\") == \"2\"\nassert solution(\"1 2\\n1\\n\") == \"1\"\nassert solution(\"1 1\\n1\\n\") == \"0\"\nassert solution(\"3 1\\n1\\n\") == \"0\"\nassert solution(\"3 3\\n1\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('-1') == '-1'\nassert solution('0') == '0 1'\n\n\"\"\""
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n''') == '1\nassert solution('''\n2\n''') == '-1 0 1'\n''')\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '-1 0 1'\nassert solution('10') == '-1 0 1'\n\nassert solution('15') == '-1 0 1'\nassert solution('20') == '-1 0 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n\n2\n\n3\n\n4\n\n5\n\n''') == '2 4 5 -1 0 1'\n\nassert solution('''\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n''') == '2 4 5 -1 0 1'\n\nassert solution('''\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n''') == '1 1 1 -1 0 1'\n\nassert solution('''\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n''') == '1 1 1 -1 0 1'\n\nassert solution('''\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n1\n\n''') == '1 1 1 -1 0 1'"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\nassert solution('3') == '-1 0 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\nassert solution('10') == '2 -1 0 1'\nassert solution('50') == '-1 -2 2 -1 1'\nassert solution('100') == '-1 -2 0 2 -1 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n-1 0 1\n1\n0 1''') == '2'\nassert solution('''2\n-1 0 1\n1\n0 1''') == '2'\nassert solution('''3\n-1 0 1\n1\n0 1''') == '2'\nassert solution('''4\n-1 0 1\n1\n0 1''') == '2'\nassert solution('''5\n-1 0 1\n1\n0 1''') == '2'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2\\n-1 0 1'\nassert solution('1') == '1\\n0 1'\n\nassert solution('5') == '-1 0 1\\n-1 0 1'\n\"\"\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\n\n'''\n\nfrom itertools import accumulate"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '1 3 3'\n\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '2 3 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 1 5 4\n1 2 1 3\n\"\"\") == \"1 3 3\"\n\nassert solution(\"\"\"\n3 1 5 3\n1 3 1\n\"\"\") == \"1 2 2\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '2 3 2'\nassert solution('1 2 5 3') == '1 2 2'\nassert solution('1 5 3 4') == '1 3 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3\") == \"2 3 3\", 'test'\nassert solution(\"3 2 5 3\") == \"2 3 3\", 'test'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '1 2 3 3'\n\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '1 2 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 5 4\") == \"1 3 3\"\nassert solution(\"3 1 5 3\") == \"1 3 1\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 5 4') == '1 3 3'\nassert solution('3 1 5 3') == '2 3 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 1 5 4\") == \"1 3 3!\"\nassert solution(\"3 1 5 3\") == \"1 3 1!\"\nassert solution(\"3 2 5 3\") == \"1 2 2!\""
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 3') == '1 3 3'\nassert solution('3 1 5 3') == '1 3 3'"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1 5 4\n    1 2 1 3\n    ''') == '1 3 3'\nassert solution('''3 1 5 3\n    1 3 1\n    ''') == '2 3 2'\nassert solution('''3 3 5 3\n    1 3 1\n    ''') == '2 3 2'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\nassert solution('100') == '4'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"110\") == \"3\"\nassert solution(\"111111011\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"110\") == \"3\"\nassert solution(\"111111011\") == \"169\""
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\nassert solution('123445678') == '48'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '110'\n) == '3'\nassert solution(\n    '111111011'\n) == '169'\n\n\"\"\"\n\nnum = int(stdin.readline().strip())\nk = int(stdin.readline().strip())"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('110') == 3\nassert solution('111111011') == 169\nassert solution('100000011100') == 1769\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"110\") == \"3\"\nassert solution(\"111111011\") == \"169\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"3\"\nassert solution(\"23\") == \"9\"\nassert solution(\"1234\") == \"168\"\nassert solution(\"23456\") == \"3696\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '3'\nassert solution('110') == '3'\nassert solution('111111011') == '169'\nassert solution('110011111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n110\n2\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n111111011\n2\n\"\"\") == \"169\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n\"\"\") == \"11.084259940083\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 1 2 0 0') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n\"\"\") == \"11.084259940083\"\nassert solution(\"\"\"\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n\"\"\") == \"33.121375178000\"\nassert solution(\"\"\"\n2 0 5 2 5\n2\n2 2\n\"\"\") == \"6.6354957160488\"\nassert solution(\"\"\"\n1 2\n1\n\"\"\") == \"1.23606797749979\"\nassert solution(\"\"\"\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n\"\"\") == \"33.121375178000\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 1, 1, 2, 0, 0]) == '11.084259940083'\nassert solution([5, 0, 4, 2, 2, 0]) == '33.121375178000'\nassert solution([5, 0, 4, 2, 2, 0]) == '33.121375178000'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'\nassert solution('5 0 4 2 2 0') == '33.121375178000'\nassert solution('5 0 4 2 2 0') == '33.121375178000'\nassert solution('5 0 4 2 2 0') == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n\"\"\") == \"11.084259940083\"\nassert solution(\"\"\"\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n\"\"\") == \"33.121375178000\""
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n\"\"\") == '11.084259940083'\nassert solution(\"\"\"\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n\"\"\") == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 1 2 0 0') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 1 2 0 0\\n3\\n1 1') == '11.084259940083'\nassert solution('5 0 4 2 2 0\\n5\\n5 2\\n3 0\\n5 5\\n3 5\\n3 3\\n') == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n\n''') == \"11.084259940083\"\nassert solution('''5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n\n''') == \"33.121375178000\"\nassert solution('''5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n\n''') == \"36.012348340947\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'\nassert solution('30000000 40000000') == '500000'"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8 5\n''') == '2'\nassert solution('''\n8 15\n''') == '1'\nassert solution('''\n7 20\n''') == '0'\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 5') == '2'\nassert solution('8 15') == '1'\nassert solution('7 20') == '0'\nassert solution('1000000000000 1000000000001') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"8 5\n\"\"\") == \"2\"\nassert solution(\"\"\"7 20\n\"\"\") == \"1\"\nassert solution(\"\"\"1000000000000 1000000000001\n\"\"\") == \"500000000000\"\nassert solution(\"\"\"10 3\n\"\"\") == \"1\"\nassert solution(\"\"\"20 1000\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n10\n''') == \"1\"\nassert solution('''\n1\n2\n''') == \"0\"\nassert solution('''\n1\n3\n''') == \"1\"\nassert solution('''\n8\n5\n''') == \"2\"\nassert solution('''\n7\n20\n''') == \"1\"\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 5\n2\n1''') == '2'\nassert solution('''8 15\n2\n1''') == '1'\nassert solution('''7 20\n1\n2''') == '0'\nassert solution('''1000000000000 1000000000001\n500000000000\n''') == '500000000000'"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 5') == \"2\"\nassert solution('8 15') == \"1\"\nassert solution('7 20') == \"0\"\nassert solution('1000000000000 1000000000001') == \"500000000000\""
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '11'\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1 5\") == \"0\"\nassert solution(\"10 2 5\") == \"11\"\nassert solution(\"10 10 1\") == \"11\"\nassert solution(\"8 1 9\") == \"8\"\nassert solution(\"5 5 4\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1 10\n01000\n''') == '11'\nassert solution('''7 2 3\n1111111\n''') == '0'\n\ninput()\nprint(solution(input()))\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5, 1, 10]) == '11'\nassert solution([5, 10, 1]) == '2'\nassert solution([7, 2, 3]) == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == str(11)\nassert solution(input()) == str(0)\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 10') == '11'\nassert solution('5 10 1') == '2'\nassert solution('7 2 3') == '0'\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '11'\nassert solution(input(\"\")) == '0'\nassert solution(input(\"1\\n\")) == '0'\nassert solution(input(\"1\\n0\")) == '0'\nassert solution(input(\"1\\n0\\n\")) == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1 10\") == \"11\"\nassert solution(\"5 10 1\") == \"2\"\nassert solution(\"7 2 3\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == str(11)\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 2') == '19 5'\nassert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '-1'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n\n'''\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 2') == '19 5'\nassert solution('5 1 1') == '2 1'\nassert solution('3 1 1') == '2 1'"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1 1\n''') == '2 1'\nassert solution('''5 1 2\n''') == '19 5'\nprint('all tests passed')"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\nassert solution(\"2 2 2\") == \"-1\""
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\nassert solution('5 1 2') == '-1'\nassert solution('3 2 2') == '-1'"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n7''') == '6'\nassert solution('''10 2\n''') == '4'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n\n-------Running Tests-------\n\n##Test Case 1\n>>> solution(\"7 1\")\n'6'\n\n##Test Case 2\n>>> solution(\"10 2\")\n'4'\n\n##Test Case 3\n>>> solution(\"2 3\")\n'6'\n\n##Test Case 4\n>>> solution(\"4 1\")\n'6'\n\n##Test Case 5\n>>> solution(\"3 2\")\n'2'\n\n##Test Case 6\n>>> solution(\"10 6\")\n'4'\n\n##Test Case 7\n>>> solution(\"8 2\")\n'2'\n\n##Test Case 8\n>>> solution(\"6 1\")\n'6'\n\n##Test Case 9\n>>> solution(\"6 2\")\n'2'\n\n##Test Case 10\n>>> solution(\"12 2\")\n'2'\n\n##Test Case 11\n>>> solution(\"6 3\")\n'6'\n\n##Test Case 12\n>>> solution(\"12 3\")\n'2'\n\n##Test Case 13\n>>> solution(\"2 2\")\n'4'\n\n##Test Case 14\n>>> solution(\"2 3\")\n'6'\n\n##Test Case 15\n>>> solution(\"2 4\")\n'2'\n\n##Test Case 16\n>>> solution(\"4 2\")\n'4'\n\n##Test Case 17\n>>> solution(\"3 2\")\n'2'\n\n##Test Case 18\n>>> solution(\"12 6\")\n'4'\n\n##Test Case 19\n>>> solution(\"6 3\")\n'6'\n\n##Test Case 20\n>>> solution(\"2 2\")\n'4'\n\n##Test Case 21\n>>> solution(\"10 10\")\n'4'\n\n##Test Case 22\n>>> solution(\"6 6\")\n'4'\n\n##Test Case 23\n>>> solution(\"3 2\")\n'6'\n\n##Test Case 24\n>>> solution(\"12 2\")\n'2'\n\n##Test Case 25\n>>> solution(\"12 12\")\n'4'\n\n##Test Case 26\n>>> solution(\"2 5\")\n'2'\n\n##Test Case 27\n>>> solution(\"2 2\")\n'4'\n\n##Test Case 28\n>>> solution(\"10 10\")\n'4'\n\n##Test Case 29\n>>> solution(\"1 2\")\n'1'\n\n##Test Case 30\n>>> solution(\"12 4\")\n'2'\n\n##Test Case 31\n>>> solution(\"12 3\")\n'2'\n\n##Test Case 32\n>>> solution(\"4 6\")\n'2'\n\n##Test Case 33\n>>> solution(\"4 5\")\n'2'\n\n##Test Case 34\n>>> solution(\"5 3\")\n'2'\n\n##Test Case 35\n>>> solution(\"3 5\")\n'2'\n\n##Test Case 36\n>>> solution(\"6 6\")\n'2'\n\n##Test Case 37\n>>> solution(\"2 1\")\n'2'\n\n##Test Case 38\n>>> solution(\"2 2\")\n'4'\n\n##Test Case 39\n>>> solution(\"3 3\")\n'2'\n\n##Test Case 40\n>>> solution(\"5 5\")\n'2'\n\n##Test Case 41\n>>> solution(\"5 5\")\n'2'\n\n##Test Case 42\n>>> solution(\"3 3\")\n'6'\n\n##Test Case 43\n>>> solution(\"5 1\")\n'6'\n\n##Test Case 44\n>>> solution(\"7 6\")\n'4'\n\n##Test Case 45\n>>> solution(\"4 6\")\n'2'\n\n##Test Case 46\n>>> solution(\"3 5\")\n'2'\n\n##Test Case 47\n>>> solution(\"6 2\")\n'2'\n\n##Test Case 48\n>>> solution(\"1 1\")\n'1'\n\n##Test Case 49\n>>> solution(\"8 8\")\n'4'\n\n##Test Case 50\n>>> solution(\"2 2\")\n'4'\n\n##Test Case 51\n>>> solution(\"3 4\")\n'2'\n\n##Test Case 52\n>>> solution(\"2 3\")\n'6'\n\n##Test Case 53\n>>> solution(\"4 4\")\n'2'\n\n##Test Case 54\n>>> solution(\"4 4\")\n'2'\n\n##Test Case 55\n>>> solution(\"2 1\")\n'1'\n\n##Test Case 56\n>>> solution(\"2 1\")\n'1'\n\n##Test Case 57\n>>> solution(\"1 1\")\n'1'\n\n##Test Case 58\n>>> solution(\"5 1\")\n'6'\n\n##Test Case 59\n>>> solution(\"3 2\")\n'2'\n\n##Test Case 60\n>>> solution(\"3 4\")\n'2'\n\n##Test Case 61\n>>> solution(\"4 2\")\n'4'\n\n##Test Case 62\n>>> solution(\"2 6\")\n'4'\n\n##Test Case 63\n>>> solution(\"4 3\")\n'6'\n\n##Test Case 64\n>>> solution(\"10 2\")\n'4'\n\n##Test Case 65\n>>> solution(\"5 5\")\n'2'\n\n##Test Case 66\n>>> solution(\"1 2\")\n'1'\n\n##Test Case 67\n>>> solution(\"4 3\")\n'2'\n\n##Test Case 68\n>>> solution(\"8 8\")\n'4'\n\n##Test Case 69\n>>> solution(\"2 1\")\n'1'\n\n##Test Case 70\n>>> solution(\"8 8\")\n'4'\n\n##Test Case 71\n>>> solution(\"4 3\")\n'6'\n\n##Test Case 72\n>>> solution(\"10 2\")\n'4'\n\n##Test Case 73\n>>> solution(\"5 5\")\n'2'\n\n##Test Case 74\n>>> solution(\"1 2\")\n'1'\n\n##Test Case 75\n>>> solution(\"10 4\")\n'2'\n\n##Test Case 76\n>>> solution(\"3 3\")\n'6'\n\n##Test Case 77\n>>> solution(\"5 5\")\n'2'\n\n##Test Case 78\n>>> solution(\"4 4\")\n'2'\n\n##Test Case 79\n>>> solution(\"2 2\")\n'4'\n\n##Test Case 80\n>>> solution(\"1 1\")\n'1'\n\n##Test Case 81\n>>> solution(\"3 4\")\n'2'\n\n##Test Case 82\n>>> solution(\"4 3\")\n'6'"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 1\n7''') == '6'\nassert solution('''10 2\n10''') == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 1\n''') == '6'\nassert solution('''10 2\n''') == '4'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'\n'''"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 1\\n') == '6'\nassert solution('10 2\\n') == '4'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == '4'\nassert solution('10 2') == '4'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 1\n6\n''') == '6'\n\nprint(solution('''10 2\n4\n'''))\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n\n''') == '1\nassert solution('''\n\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\n''') == '1\n\nassert solution('''\n\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\n''') == '2\nassert solution('''\n\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\n''') == '2\n\nassert solution('''\n\n2\n+127.0.0.1/32\n-127.0.0.1\n\n''') == '-1'"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\""
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('2') == '195.0.0.0/8'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('5') == '195.0.0.0/8'\nassert solution('1') == '0.0.0.0/0'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n-149.154.167.99\n''') == '1'\n\nassert solution('''\n1\n-149.154.167.99\n''') == '1'\n\nassert solution('''\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n''') == '2'\n\nassert solution('''\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n''') == '2'\n\nassert solution('''\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n''') == '2'"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0.0.0.0/0\"\nassert solution(\"4\") == \"0.0.0.0/0\"\nassert solution(\"5\") == \"195.0.0.0/8\"\nassert solution(\"2\") == \"195.0.0.0/8\""
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1\\n0.0.0.0/0\\n'\nassert solution('1') == '1\\n0.0.0.0/0\\n'\nassert solution('4') == '2\\n149.154.167.99\\n149.154.167.120/29\\n'\nassert solution('5') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n-149.154.167.99\n''') == '1'\n\nassert solution('''\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\n''') == '2'\n\nassert solution('''\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\n''') == '2'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == '-1'\nassert solution('1') == '0.0.0.0/0'\nassert solution('2') == '195.0.0.0/8'\nassert solution('3') == '-1'\nassert solution('4') == '0.0.0.0/0'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0.0.0.0/0\"\nassert solution(\"4\") == \"0.0.0.0/0\"\nassert solution(\"5\") == \"195.0.0.0/8\"\nassert solution(\"2\") == \"195.0.0.0/8\"\nassert solution(\"3\") == \"195.0.0.0/8\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11\n00000000008\n''') == '1'\nassert solution('''22\n0011223344556677889988\n''') == '2'\nassert solution('''11\n31415926535\n''') == '0'\nassert solution('''11\n31415926535\n''') == '0'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n11\n00000000008\n\n''') == '1'\nassert solution('''\n22\n0011223344556677889988\n\n''') == '2'\nassert solution('''\n11\n31415926535\n\n''') == '0'\n'''\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"11\", \"00000000008\"]) == \"1\"\nassert solution([\"22\", \"0011223344556677889988\"]) == \"2\"\nassert solution([\"11\", \"31415926535\"]) == \"0\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\""
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"11\"\n) == \"1\"\nassert solution(\n    \"22\"\n) == \"2\"\nassert solution(\n    \"11\"\n) == \"0\"\nassert solution(\n    \"31415926535\"\n) == \"0\"\nassert solution(\n    \"00000\"\n) == \"0\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n11\n00000000008\n''') == '1'\n\nassert solution(\n'''\n22\n0011223344556677889988\n''') == '2'\n\nassert solution(\n'''\n11\n31415926535\n''') == '0'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('22') == '0'\nassert solution('11') == '1'\nassert solution('1') == '1'\nassert solution('0123456789') == '1'\nassert solution('31415926535') == '1'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n11\n00000000008\n\n''') == \"1\"\nassert solution('''\n22\n0011223344556677889988\n\n''') == \"2\"\nassert solution('''\n11\n31415926535\n\n''') == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"21\") == \"0\"\nassert solution(\"1\") == \"0\""
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution('3 5') == '4'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 3') == '3'\nassert solution('5 7') == '-1'\n\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n\nn, m = map(int, input().split())\n\ngrid = []\nfor i in range(n):\n    row = list(map(int, input().split()))\n    grid.append(row)\n\nstart_grid = defaultdict(int)\nfor i in range(n):\n    for j in range(m):\n        start_grid[(i, j)] = grid[i][j]\n\nans = -1\nfor i in range(n):\n    for j in range(m):\n        if grid[i][j] == 0:\n            for r in range(n):\n                if grid[r][j]!= 0:\n                    for c in range(m):\n                        if grid[i][c]!= 0:\n                            grid[i][j] += 1\n                            grid[r][c] += 1\n                            if grid[i][j] == start_grid[(i, j)]:\n                                ans = max(ans, r + 1)\n                            if grid[i][j] == start_grid[(i, j)]:\n                                ans = max(ans, c + 1)\n                            grid[i][j] -= 1\n                            grid[r][c] -= 1\n\nprint(ans)\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n\n''') == \"row 1\\nrow 1\\ncol 4\\nrow 3\\n\"\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n\n''') == \"3\\nrow 1\\nrow 2\\nrow 3\\n\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '4'\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5\\n2 2 2 3 2') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1') == '3'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '3'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '-1'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '-1'\n\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\n\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '-1'\n\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 3') == '3'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n2 2 2 3 2') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1') == '3'"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n2 3\\n1 2\\n') == '3'\nassert solution('2 2\\n2 1\\n1 2\\n') == '-1'\nassert solution('2 2\\n2 1\\n1 2\\n') == '1'\nassert solution('2 2\\n2 2\\n2 2\\n') == '2'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '3'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 6 4 5\n\n''') == 'YES'\nassert solution('''8 6 4 6\n\n''') == 'NO'\nassert solution('''10 3 11 4\n\n''') == 'YES'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 6 4 5''') == 'YES'\nassert solution('''8 6 4 6''') == 'NO'\nassert solution('''10 3 11 4''') == 'YES'\nassert solution('''4 2 1 4''') == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == 'YES'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"10 3 11 4\") == \"NO\"\nassert solution(\"4 2 1 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution(\"4 2 1 4\") == \"YES\"\nassert solution(\"10 3 11 4\") == \"NO\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '8 6 4 5'\n) == 'YES'\nassert solution(\n    '8 6 4 6'\n) == 'NO'\nassert solution(\n    '10 3 11 4'\n) == 'YES'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 2\n2 1''') == '6'\nassert solution('''7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3''') == '12'\nassert solution('''2 2\n1 2\n2 1''') == '-1'\nassert solution('''3 4\n3 2\n4 2\n4 1\n5 2''') == '-1'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6'\nassert solution('7 8') == '12'\nassert solution('2 2') == '-1'\nprint('All tests passed')\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n1 3\n1 4\n\nOutput\n6\n\nInput\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\nOutput\n12\n\nInput\n2 2\n1 2\n2 1\n\nOutput\n-1''') == '12'\n\nassert solution('''2 2\n1 2\n2 1\n\nOutput\n-1''') == '-1'\n\nassert solution('''4 2\n1 3\n1 4\n\nOutput\n6\n\nInput\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\nOutput\n12\n\nInput\n2 2\n1 2\n2 1\n\nOutput\n-1''') == '12'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n') == '6'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n') == '12'\nassert solution('2 2\\n1 2\\n2 1\\n') == '-1'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"4 2\n1 3\n1 4\n\nOutput\n6\n\"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\nOutput\n12\n\"\"\"\n) == \"12\"\n\nassert solution(\n    \"\"\"2 2\n1 2\n2 1\n\nOutput\n-1\n\"\"\"\n) == \"-1\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '6'\nassert solution('7 8') == '12'\nassert solution('2 2') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '6'\nassert solution('7 8') == '12'\nassert solution('2 2') == '-1'"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"7 8\") == \"12\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 3\n1 4\n''') == '6'\nassert solution('''7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\n\nassert solution('''2 2\n1 2\n2 1\n''') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == 6\nassert solution(\"7 8\") == 12\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n1 0\n1 1\n0 1\n''') == 'YES'\nassert solution('''\n5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n''') == 'NO'\nassert solution('''\n3 2\n1 0\n1 1\n0 1\n''') == 'YES'\n'''\n\n\n\n----------------------------------------------------------------------------------------------------------------------\n\n\n\nSnark and Philip are preparing the problemset for the upcoming semi-final round. They have a bank of n problems, and they want to select any non-empty subset of it as a problemset.\n\nk experienced teams are participating in the contest. Some of these teams already know some of the problems. To make the contest interesting for them, each of the teams should know at most half of the selected problems.\n\nSnark and Philip want to find an interesting problemset. The criteria for making an interesting problemset is that:\n\nthe set should be non-empty;\nthe set should contain only the numbers from 1 to n;\neach problem must be known by at most one team.\nSnark and Philip want to find an interesting problemset. If there is an interesting problemset, return \"YES\", otherwise return \"NO\".\n\n\n\n-----Input-----\n\nThe first line contains two integers n and k (1 \u2264 n \u2264 10^5, 1 \u2264 k \u2264 4) \u2014 the number of problems and the number of experienced teams.\n\nThe next n lines contain k integers, each equal to 0 or 1. The j-th number in the i-th line is 1 if j-th team knows i-th problem and 0 otherwise.\n\n\n-----Output-----\n\nPrint \"YES\" (quotes for clarity), if it is possible to find an interesting problemset, and \"NO\" otherwise.\n\nYou can print each character either upper- or lowercase (\"YeS\" and \"yes\" are valid when the answer is \"YES\").\n\n\n-----Examples-----\nInput\n6 4\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n\nOutput\nNO\n\nInput\n5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n\nOutput\nYES\n\n\n\n-----Note-----\n\nIn the first example you can't find an interesting problemset because the first team knows all problems.\n\nIn the second example you can choose the first and the third problems.\nSnark and Philip want to find an interesting problemset. The criteria for making an interesting problemset is that:\n\nthe set should be non-empty;\nthe set should contain only the numbers from 1 to n;\neach problem must be known by at most one team.\nSnark and Philip want to find an interesting problemset. If there is an interesting problemset, return \"YES\", otherwise return \"NO\".\n'''"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n''') == 'NO'\nassert solution('''3 2\n1 0\n1 1\n0 1\n''') == 'YES'\nassert solution('''3 3\n1 0 1\n1 1 0\n1 0 0\n1 1 1\n''') == 'YES'\nassert solution('''3 2\n1 1\n0 0\n1 0\n''') == 'NO'\n'''\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0''') == 'NO'\nassert solution('''3 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0''') == 'YES'\nassert solution('''5 2\n1 0\n1 1\n0 1\n1 0\n1 0\n\n''') == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n\nOutput\nNO''') == 'NO'\n\nassert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n\nOutput\nYES''') == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == \"NO\"\nassert solution('3 2\\n1 0\\n1 1\\n0 1') == \"YES\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example_input_string) == example_output\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 0 1\\n1 1 0\\n1 0 0\\n1 0 0\\n1 0 0') == 'NO'\nassert solution('3 2\\n1 0\\n1 1\\n0 1\\n') == 'YES'\n\"\"\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n2 3\\n') == 'Yes'\nassert solution('2\\n7\\n2 3\\n') == 'No'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 7\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 7\") == \"No\"\nassert solution(\"4 5\") == \"Yes\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 7\") == \"No\"\nassert solution(\"4 5\") == \"Yes\"\nprint(solution(input()))"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5') == 'Yes'\nassert solution('2 7') == 'No'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 5\n2 3\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n1 7\n2 3\n\"\"\") == \"No\"\nassert solution(\"\"\"\n1 2\n2 3\n\"\"\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5\n2 3 5 12\n''') == 'Yes'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5\\n2 3') == 'Yes'\nassert solution('2 7\\n2 3') == 'No'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 2\") == \"3\"\nassert solution(\"4 5 7\") == \"8\"\nassert solution(\"5 6 10\") == \"2\"\nassert solution(\"2 4 2\") == \"-1\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 4 2') == '8'\nassert solution('3 4 1') == '6'\nassert solution('6 4 2') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 4') == '8'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 2 4 3') == '2'\nassert solution('3\\n4 1 1') == '0'\nassert solution('4\\n0 3 0 4') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 2 4 3') == '2'\nassert solution('3\\n4 1 1') == '0'\nassert solution('4\\n0 3 0 4') == '0'\nassert solution('0\\n4 1 1') == '-1'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n\"\n    \"1 2 2 4 3\"\n    ) == \"2\"\n\nassert solution(\n    \"4\\n\"\n    \"4 1 1\"\n    ) == \"0\"\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '0'\nassert solution('3') == '2'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2 2 4\") == \"2\"\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n1 2 2 4 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n4 1 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n0 3 0 4\n\"\"\") == \"0\"\n\nprint(solution(input()))"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '-1'\nassert solution('4\\n0 3 0 4\\n') == '2'\nassert solution('5\\n1 2 2 4 3\\n') == '2'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1\n1 2 2 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n0 3 0 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n1 2 2 4 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n2 4 1\n\"\"\") == \"0\"\nprint(solution(input()))\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('1 2 2 4 3') == '2'\nassert solution('3') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n1 2 2 4 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n1 2 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\n0 3 0 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n6\n0 3 0 4 0 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n8\n4 4 4 0 1 1 2 2\n\"\"\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n10000011\n''') == \"5\"\nassert solution('''\n2\n01\n''') == \"2\"\nassert solution('''\n2\n00\n''') == \"1\"\n\nassert solution('''\n1\n11\n''') == \"2\"\n\nassert solution('''\n1\n01\n''') == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n01\n\n''') == '1'\n\nassert solution('''4\n001\n\n''') == '2'\n\nassert solution('''8\n10000011\n\n''') == '5'\n\nassert solution('''2\n01\n\n''') == '2'\n\nassert solution('''3\n10011011\n\n''') == '4'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"5\"\n\n\n'''"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == 5\nassert solution('2') == 2"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 5\nassert solution(input()) == 2"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '2'\nassert solution('0') == '0'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '2'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10000011') == '5'\nassert solution('01') == '2'\n\n\"\"\"\nimport collections\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n''') == ''\nassert solution('''\n10000011\n''') == '5'\nassert solution('''\n01\n''') == '2'\nassert solution('''\n10001000\n''') == '1'\nassert solution('''\n10001001\n''') == '2'\n''')\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10000011') == '5'\nassert solution('01') == '2'"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 1 4\") == \"3\"\nassert solution(\"4 4 4 4\") == \"-1\"\nassert solution(\"2 1 4 3\") == \"1\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n2 3 1 4\n''') == '3'\nassert solution('''4\n4 4 4 4\n''') == '-1'\nassert solution('''4\n2 1 4 3\n''') == '1'\nprint('Tests passed!')"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\""
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n4 4 4 4\n4 2 3 1''') == '3'\nassert solution('''5\n4 4 4 4\n4 2 3 1''') == '-1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2 3 1 4\n''') == '3'\n\nassert solution('''4\n4 4 4 4\n''') == '-1'\n\nassert solution('''4\n2 1 4 3\n''') == '1'\n\n\n'''\n\nimport math"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n2 3 1 4\n\n''') == '3'\nassert solution('''4\n2 2 2 3\n\n''') == '-1'\nassert solution('''4\n3 3 3 3\n\n''') == '-1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n2 3 1 4\n''') == '3'\nassert solution('''4\n4 4 4 4\n''') == '-1'\nassert solution('''4\n2 1 4 3\n''') == '1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3'\nassert solution('4') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 3 1 4\n\n''') == '3'\n\nassert solution('''\n4\n4 4 4 4\n\n''') == '-1'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2\n''') == '2'\nassert solution('''4\n1 3 2 0\n''') == '2'\nassert solution('''7\n1 3 3 2 1 2 3\n''') == '0'\nassert solution('''2\n2 2\n''') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '0'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"7\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 3 2 0\n\n''') == '2'\nassert solution('''\n7\n1 3 3 2 1 2 3\n\n''') == '0'\nassert solution('''\n2\n2 2\n\n''') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == '2'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"7\") == \"0\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('6') == '2'\nassert solution('10') == '3'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 3 2 0') == '2'\nassert solution('7\\n1 3 3 2 1 2 3') == '0'\nassert solution('2\\n2 2') == '1'\nassert solution('6\\n1 3 3 2 1 2 3') == '0'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(t1) == \"2\"\nassert solution(t2) == \"0\"\nassert solution(t3) == \"1\""
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n\n\n\"\"\""
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '504'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n\"\"\"\nimport math\nfrom math import gcd\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '504'\nassert solution('7') == '210'\nassert solution('9') == '504'\n\n\"\"\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '60'\nassert solution('5') == '30'\nassert solution('7') == '210'\nassert solution('9') == '504'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n9\n''') == '504'\nassert solution('''\n7\n''') == '210'\nassert solution('''\n10\n''') == '8960'\n\n---\n\n\u0417\u0430\u0434\u0430\u0447\u0430 1\n\u0412\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u0446\u0435\u043b\u043e\u0435 \u043d\u0435\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e. \u041d\u0443\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0441\u0430\u043c\u043e\u0435 \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043e\u0431\u0449\u0435\u0435 \u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044c, \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u043e\u0442 1.\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         5\n\u0412\u044b\u0445\u043e\u0434:        2\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  1\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         7\n\u0412\u044b\u0445\u043e\u0434:        2\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  1\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         5\n\u0412\u044b\u0445\u043e\u0434:        3\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  2\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         15\n\u0412\u044b\u0445\u043e\u0434:        3\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  2\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         1\n\u0412\u044b\u0445\u043e\u0434:        1\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  1\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         2147483647\n\u0412\u044b\u0445\u043e\u0434:        2\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  2\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         0\n\u0412\u044b\u0445\u043e\u0434:        1\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  1\n'''\n    ) == '2'\n\nassert solution('''\n\u0412\u0445\u043e\u0434:         5\n\u0412\u044b\u0445\u043e\u0434:        3\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  2\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         7\n\u0412\u044b\u0445\u043e\u0434:        2\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  1\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         5\n\u0412\u044b\u0445\u043e\u0434:        3\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  2\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         15\n\u0412\u044b\u0445\u043e\u0434:        3\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  2\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         1\n\u0412\u044b\u0445\u043e\u0434:        1\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  1\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         2147483647\n\u0412\u044b\u0445\u043e\u0434:        2\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  2\n'''\n    ) == '2'\n\nassert solution('''\n\u0412\u0445\u043e\u0434:         0\n\u0412\u044b\u0445\u043e\u0434:        1\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  1\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         2147483647\n\u0412\u044b\u0445\u043e\u0434:        2\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  2\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         1\n\u0412\u044b\u0445\u043e\u0434:        1\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  1\n\n\u041f\u0440\u0438\u043c\u0435\u0440:\n\u0412\u0445\u043e\u0434:         0\n\u0412\u044b\u0445\u043e\u0434:        1\n\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 0 \u0438\u043b\u0438 1:  1\n'''\n    ) == '1'"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 1'\nassert solution() == '3 4'\nassert solution() == '1 1'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '1 1'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n5\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\"\"\") == \"3 4\"\nassert solution(\"\"\"\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\"\"\") == \"3 4\"\nassert solution(\"\"\"\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\"\"\") == \"3 4\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"1 1\"\nassert solution(input) == \"2 4\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"1 1\"\nassert solution(\"5\") == \"3 4\"\nassert solution(\"4\") == \"1 1\"\nassert solution(\"5\") == \"3 4\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 1'\nassert solution('''\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\n\n'''\n3 5 6 7\n3 4 5 6\n5 6 5 6\n3 4 4 5\n'''"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\n\nassert solution('''\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\n\nassert solution('''\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '1 1'\n\nassert solution('''\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '1 1'\n\nassert solution('''\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '3 4'"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\n\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n\n''') == '1 1'\n\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\n''') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 1'\nassert solution() == '1 1'\nassert solution() == '1 1'\nassert solution() == '1 1'\nassert solution() == '1 1'"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1 1\"\nassert solution(\"4\") == \"1 1\"\nassert solution(\"5\") == \"3 4\"\n\n\n\n\n\n'''"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"7\") == \"NO\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n18 55 16 17') == 'YES', solution('3\\n18 55 16 17')\nassert solution('4\\n40 41 43 44 44 44') == 'YES', solution('4\\n40 41 43 44 44 44')\nassert solution('8\\n5 972 3 4 1 4 970 971') == 'YES', solution('8\\n5 972 3 4 1 4 970 971')\nassert solution('10\\n5 972 3 4 1 4 970 971\\n6 972 3 4 1 4 970 971\\n7 972 3 4 1 4 970 971') == 'YES', solution('10\\n5 972 3 4 1 4 970 971\\n6 972 3 4 1 4 970 971\\n7 972 3 4 1 4 970 971')\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n18 55 16 17') == \"YES\"\nassert solution('6\\n40 41 43 44 44 44') == \"NO\"\nassert solution('8\\n5 972 3 4 1 4 970 971') == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == 'NO'\nassert solution('8') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n18 55 16 17\n''') == 'YES'\nassert solution('''\n8\n5 972 3 4 1 4 970 971\n''') == 'YES'\nassert solution('''\n6\n40 41 43 44 44 44\n''') == 'NO'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n18 55 16 17\") == \"YES\"\nassert solution(\"6\\n40 41 43 44 44 44\\n\") == \"NO\"\nassert solution(\"8\\n5 972 3 4 1 4 970 971\\n\") == \"YES\"\n\n\"\"\"\nfrom typing import List\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n18 55 16 17\n''') == 'YES'\nassert solution('''\n6\n40 41 43 44 44 44\n''') == 'NO'\nassert solution('''\n8\n5 972 3 4 1 4 970 971\n''') == 'YES'"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('8') == 'NO'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"6\") == \"NO\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 9') == '9'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3 9'\n) == '9'\nassert solution(\n    '5 5'\n) == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 9\") == \"9\"\nassert solution(\"5 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\nassert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '10'\nassert solution('3 9') == '9'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == \"10\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\nprint(solution('''10 10\n1 2 3 4 5\n1 2 3 4 5\n'''))"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"3\") == \"Petya\"\nassert solution(\"4\") == \"Vasya\"\nassert solution(\"5\") == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'Petya'\nprint(solution(input()))\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Vasya'\nassert solution(input()) == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n\n1 2 3\n\n2 2 1\n\n5 5 2\n\n1\n\n7\n\n4 5 6 7 8 9 10 11 12''') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 3') == '0'\nassert solution('1 5 3') == '2'\nassert solution('4 3 6') == '1'"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"2 2 3\") == \"1\"\nassert solution(\"1 5 3\") == \"0\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\\n\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\\n\") == \"1\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 6') == '1'\nassert solution('4 3 6') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\") == \"0\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"4 3 6\") == \"1\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2 2 3\n1 2\n2 2\n2 1\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"1 5 3\n1 3\n1 1\n1 5\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3\") == \"0\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"4 3 6\") == \"1\""
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1\\n1 3\\n2 2\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\") == \"2\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\") == \"1\"\n\n'''\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 3') == '0'\nassert solution('2 5 3') == '1'\nassert solution('4 5 3') == '2'\nassert solution('8 5 3') == '3'\nassert solution('8 6 3') == '4'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 3') == '0'\nassert solution('2 5 3') == '2'\nassert solution('3 5 3') == '2'\nassert solution('4 5 3') == '1'\nassert solution('5 5 3') == '1'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nAB\\nBA\\nAB') == \"2\"\nassert solution('4\\nAA\\nAB\\nBA\\nBB') == \"1\"\nassert solution('10\\nAA\\nAB\\nBA\\nBB') == \"2\"\nassert solution('100\\nAA\\nAB\\nBA\\nBB') == \"2\"\nassert solution('10000\\nAA\\nAB\\nBA\\nBB') == \"1\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 2\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"15\") == \"3\"\nassert solution(\"20\") == \"4\"\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nAB\\nBA\\nAA\\nBB') == '2'\nassert solution('5\\nAB\\nBA\\nAA\\nBB') == '2'"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nAA\\nAB\\nBA\\nBB') == '2'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nA\nB\nB\nA''') == '2'\nassert solution('''5\nA\nB\nB\nA\n''') == '2'\nassert solution('''10\nA\nB\nB\nA\n''') == '5'\nassert solution('''16\nA\nB\nB\nA\n''') == '4'"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 4\\n') == '2'\nassert solution('5\\n2 3 4 6 7\\n') == '3'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 3 4 6 7\n''') == '3'\nassert solution('''\n3\n2 3 4\n''') == '2'\nassert solution('''\n5\n2 2 4 4 6\n''') == '2'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution(\"\") == \"0\"\nassert solution(\"5\") == \"3\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 3 4 6 7') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3 4\\n') == '2'\nassert solution('5\\n2 3 4 6 7\\n') == '3'"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 4') == '2'\nassert solution('5 2 3 4 6 7') == '3'\n'''\n\nfrom math import gcd\n\nn = int(input())\np = set(map(int, input().split()))\n\np = list(p)\ng = gcd(p[0], p[1])\n\nfor i in range(2, n):\n    g = gcd(g, p[i])\n\nprint(g)\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 3 4 6 7\") == \"3\"\nassert solution(\"5\\n2 3 4 6 7 8\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\"\nassert solution(\"10\\n2 3 4 5 6 7 8 9 10\") == \"8\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 4\") == \"2\"\nassert solution(\"5 2 3 6 7\") == \"3\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3 4') == '2'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 4\\n2 3 4\") == \"2\"\nassert solution(\"5 2 3 4 6 7\\n3 2 4 7 6\") == \"3\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nassert solution(\"6\\nABCAABCA\") == \"12\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\nABABC\") == \"5\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nABAC\") == \"11\"\nassert solution(\"6\\nABAACABBCDCCBCDDDCCCDCDDBBCDABABDCBA\") == \"35\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nABAAC') == '11'\nassert solution('6\\nABC') == '6'\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '11'\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nABAAC') == '11'\nassert solution('6\\nABBDBCAB') == '3'\nassert solution('1\\nABB') == '0'\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"5\") == \"11\"\nassert solution(\"5\") == \"11\"\nassert solution(\"5\") == \"11\"\nassert solution(\"5\") == \"11\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nABAAC') == '11'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('1023') == '-1'\nassert solution('3') == '1'\nassert solution('20') == '5'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\", \"Should return 3\"\nassert solution(\"1023\") == \"-1\", \"Should return -1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n4 2\\n1 1\\n0 1\\n2 3') == '3'\nassert solution('1023\\n1 2\\n1 0\\n1 2\\n1 1\\n') == '-1'\n\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    "
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1023\") == \"-1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"0 1\") == \"1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"1023\") == \"-1\""
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n4 2\n1 1\n0 1\n2 3\n''') == '3'\nassert solution('''1023\n1 2\n1 0\n1 2\n1 1\n''') == '-1'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"1023 1 2 1 1\") == \"-1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4 2\n1 1\n0 1\n2 3\n''') == '3'\nassert solution('''\n1023\n1 2\n1 0\n1 2\n1 1\n''') == '-1'\n'''"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n4 2\n1 1\n0 1\n2 3\n''') == '3'\n\nassert solution('''1023\n1 2\n1 0\n1 2\n1 1\n''') == '-1'\n\nprint(solution('''3\n4 2\n1 1\n0 1\n2 3\n'''))\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"3\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\n\"\"\""
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n4 5\\n') == '2'\nassert solution('5\\n1 2 3 4 5\\n') == '1'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4 5\\n\") == \"2\"\nassert solution(\"2\\n4 5\\n\") == \"1\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\n'''\n\nfrom itertools import combinations\nfrom collections import Counter"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == ''\nassert solution('2') == '2'\nassert solution('3') == '2'\n\"\"\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"2 2\") == \"3\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n4 5\\n') == '2'\nassert solution('4\\n3 5\\n') == '1'"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\"\n    \"4 5\"\n    \"\") == \"2\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('4') == '2'\nassert solution('7') == '4'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n4 5\n''') == '2'\n\nassert solution('''5\n8 10 2 5 4\n''') == '2'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n2 2 2 1\n\"\"\") == \"YES\"\n\nassert solution(r\"\"\"\n1 2 3 4\n\"\"\") == \"NO\"\n\nassert solution(r\"\"\"\n2 2 2 3\n\"\"\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\n\n\n'''\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'NO'\nassert solution(__import__('sys').stdin.read()) == 'YES'"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\nassert solution(\"1 2 2 3\") == \"YES\"\n\n'''\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 2 1') == 'YES'\nassert solution('2 2 2 3') == 'NO'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 2 1''') == 'YES'\nassert solution('''1 2 3 4''') == 'NO'\nassert solution('''2 2 2 3''') == 'NO'"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2 2 1''') == 'YES'\nassert solution('''1 2 3 4''') == 'NO'\nassert solution('''2 2 2 3''') == 'NO'"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"3 6\") == \"NO\""
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2') == \"YES\"\nassert solution('4 4\\n1 2 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == \"YES\"\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 4\n1 3 2 4\n1 3 4 2\n''') == 'YES'\nassert solution('''3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n''') == 'NO'\nassert solution('''4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'YES'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    [\"1\", \"3\", \"2\", \"4\"],\n    [\"1\", \"3\", \"4\", \"2\"],\n    [\"1\", \"2\", \"3\", \"4\"],\n    [\"1\", \"2\", \"4\", \"3\"]\n    ]) == 'NO'\n\nassert solution([\n    [\"1\", \"3\", \"2\", \"4\"],\n    [\"1\", \"3\", \"4\", \"2\"],\n    [\"1\", \"2\", \"3\", \"4\"],\n    [\"1\", \"2\", \"4\", \"3\"]\n    ]) == 'YES'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4\n1 3 2 4\n1 3 4 2\n3 4 1 2\n4 1 2 3\n''') == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\n    [1, 2, 3, 4],\n    [1, 4, 3, 2],\n    [1, 3, 2, 4],\n    [1, 2, 3, 4],\n    [1, 2, 3, 4],\n]) == 'YES','sample'\nassert solution([\n    [1, 2, 3, 4],\n    [1, 4, 3, 2],\n    [1, 3, 2, 4],\n    [1, 2, 3, 4],\n    [1, 2, 3, 4],\n]) == 'NO', 'another'\nassert solution([\n    [1, 2, 3, 4],\n    [1, 2, 3, 4],\n    [1, 2, 3, 4],\n    [1, 2, 3, 4],\n    [1, 2, 3, 4],\n]) == 'NO', 'third'\n\n'''\n\nn, m = map(int, input().split())\na = list(map(int, input().split()))\n\ns = set()\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if sorted(a[i:j + 1]) == a[i:j + 1]:\n            s.add(i)\n            s.add(j)"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4\\n1 3 2 4\\n1 3 4 2') == 'YES'\nassert solution('2 4\\n1 3 2 4\\n1 3 4 2') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == 'YES'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2\\n') == 'YES'\nassert solution('4 4\\n1 2 3 4 5 6\\n1 2 3 4 6 5\\n1 2 3 4 6 5\\n') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 6\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1\n''') == '0'\n\nassert solution('''\n1 2 1\n''') == '666666672'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '0\\n'\nassert solution('1 2 2') == '666666672\\n'\nassert solution('1 1 2') == '3\\n'\nassert solution('1 3 2') == '0\\n'\nassert solution('2 1 1') == '0\\n'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"0\""
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1 1\n''') == '0'\n\nassert solution('''1 2 1\n''') == '666666672'"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\nassert solution(\"1 1 2\") == \"166666667\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\nassert solution('1 3 1') == '1110001000'\nassert solution('1 5 1') == '1110001000'\nassert solution('2 1 1') == '1'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\nassert solution('1 3 1') == '1'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 1\n''') == '0', \"First\"\nassert solution('''\n1 2 1\n''') == '666666672', \"Second\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n\nimport math"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('5\\n2 3 1 5 6') == '4'\nassert solution('4\\n5 4 4 5 6') == '3'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 5"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([7, 2, 3, 1, 5, 6]) == 5\nassert solution([3, 4, 1, 2, 5, 7]) == 3\nassert solution([6, 7, 2, 3, 4, 1]) == 4\nassert solution([1, 2, 4, 6, 5, 3]) == 2\nassert solution([1, 2, 3, 4, 5, 6]) == 3\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n8 1 2 3 4 5\n''') == '5'\nassert solution('''\n3\n7 1 2 3 4 5\n''') == '5'\nassert solution('''\n1\n1\n''') == '0'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"2\\n6 4 4 4 4\") == \"4\"\nassert solution(\"6\\n4 4 4 4 4\") == \"3\"\nassert solution(\"2\\n7 7 7 7 7\") == \"1\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '5'\nassert solution('1') == '0'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('5\\n1 2 3 4 5 6') == '4'\nassert solution('6\\n7 2 3 1 5 6') == '5'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1 8\n''') == '2'\nassert solution('''\n4 2 2 6\n''') == '3'\nassert solution('''\n3 7 4 6\n''') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\nassert solution(sys.stdin.read()) == \"2\"\nassert solution(sys.stdin.read()) == \"3\""
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1 1 8''') == '2'\nassert solution('''4 2 2 6''') == '3'\nassert solution('''3 7 4 6''') == '1'"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1 1 8\n''') == '2'\n\nassert solution('''\n4 2 2 6\n''') == '3'\n\nassert solution('''\n3 7 4 6\n''') == '1'\n\nprint(solution('''\n'''))"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 1 8\n''') == '2'\nassert solution('''\n4 2 2 6\n''') == '3'\nassert solution('''\n3 7 4 6\n''') == '1'\nassert solution('''\n2 6 7\n''') == '0'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 1 8''') == '2'\nassert solution('''4 2 2 6''') == '3'\nassert solution('''3 7 4 6''') == '1'"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 8\") == '2'\nassert solution(\"4 2 2 6\") == '3'\nassert solution(\"3 7 4 6\") == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2 5''') == '2'\nassert solution('''-1 4 15''') == '4'\nassert solution('''0 -1 5''') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"4\"\n\nassert solution(\"1 -1 5\") == \"4\"\nassert solution(\"-1 -1 5\") == \"4\""
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 5\n''') == '2'\n\nassert solution('''\n-1 4 15\n''') == '4'\n\nassert solution('''\n0 -1 5\n''') == '-1'\n\nassert solution('''\n-1 0 5\n''') == '0'\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\nprint(solution(*[int(i) for i in stdin.split()]))"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 5\n''') == '2'\nassert solution('''-1 4 15\n''') == '4'\nassert solution('''0 -1 5\n''') == '-1'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"2 1 2 3 4 3\\n\") == \"0\"\nassert solution(\"2 1 2 3 4 3\\n\") == \"2\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 1\n2 1 2 3 4 3\n''') == '2'\nassert solution('''6 1\n1 1 2 2 3 3\n''') == '0'\nassert solution('''6 1\n2 1 2 3 4 3\n''') == '2'\nassert solution('''6 2\n2 1 2 3 4 3\n''') == '0'"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 1 2 3 4 3\\n') == '2'\nassert solution('5 1\\n1 1 2 2 3 3\\n') == '1'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 1\n2 1 2 3 4 3\n''') == '2'\nassert solution('''\n6 2\n1 1 2 2 3 3\n''') == '0'\nassert solution('''\n6 1\n1 1 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n1 1 2 2 3 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 1\n2 1 2 3 4 3\n''') == '2'\nassert solution('''\n6 2\n1 1 2 2 3 3\n''') == '0'\nassert solution('''\n6 1\n1 1 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 1\n2 1 2 3 4 3''') == '2'\nassert solution('''6 2\n1 1 2 2 3 3''') == '0'\nassert solution('''6 1\n2 1 2 3 4 3''') == '2'\nassert solution('''6 1\n1 1 2 2 3 3''') == '0'\nassert solution('''6 2\n1 1 2 2 3 3''') == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1') == '2'\nassert solution('6 2') == '0'\nassert solution('6 1') == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n1 1 2 2 3 3\") == \"0\""
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"monday\\ntuesday\\n\") == \"NO\"\nassert solution(\"saturday\\ntuesday\\n\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('monday\\ntuesday') == 'NO'\nassert solution('saturday\\ntuesday') == 'YES'\nassert solution('sunday\\ntuesday') == 'YES'\nassert solution('saturday\\nsunday') == 'NO'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''monday\n    tuesday\n\n''') == 'NO'\nassert solution('''saturday\n    sunday\n\n''') == 'YES'\nassert solution('''saturday\n    monday\n\n''') == 'YES'\nassert solution('''sunday\n    saturday\n\n''') == 'YES'\n\n\"\"\""
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"monday\\ntuesday\\n\") == \"YES\"\nassert solution(\"saturday\\ntuesday\\n\") == \"YES\"\nassert solution(\"sunday\\ntuesday\\n\") == \"NO\"\nassert solution(\"monday\\nsunday\\n\") == \"YES\"\nassert solution(\"saturday\\nsunday\\n\") == \"NO\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('monday\\ntuesday\\n') == 'NO'\nassert solution('saturday\\ntuesday\\n') == 'YES'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('monday') == 'YES'\nassert solution('saturday') == 'YES'\nassert solution('sunday') == 'YES'\nassert solution('tuesday') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"monday\\ntuesday\") == \"NO\"\nassert solution(\"saturday\\ntuesday\") == \"YES\"\nassert solution(\"saturday\\nsunday\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('monday\\ntuesday\\n') == 'YES'\nassert solution('saturday\\ntuesday\\n') == 'YES'\nassert solution('sunday\\ntuesday\\n') == 'YES'\nassert solution('saturday\\nsunday\\n') == 'NO'\nassert solution('saturday\\ntuesday\\n') == 'NO'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('monday\\ntuesday') == 'NO'\nassert solution('saturday\\ntuesday') == 'YES'\nassert solution('saturday\\tsat') == 'YES'\nassert solution('saturday\\tsat\\n') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"monday\\ntuesday\") == \"NO\"\nassert solution(\"saturday\\ntuesday\") == \"YES\"\nassert solution(\"saturday\\nsunday\") == \"YES\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('123') == '6'\nassert solution('0') == '0'\nassert solution('100') == '1'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10000000000') == '91'\nassert solution('12345678910111213141516171819202122232425262728293031323334353637383940414214314415146161718191') == '24'\nassert solution('10000000000000000000000000') == '24'\nassert solution('12345678910111213141516171819202122232425262728293031323334353637383940414214314415146161718191') == '24'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INP) == \"17\"\nassert solution(INP_2) == \"91\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('35\\n') == '17'\nassert solution('10000000000\\n') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"17\"\nassert solution(input()) == \"91\"\n\n\"\"\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == 'YES'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n\nassert solution(\"WOW\") == \"NO\"\nassert solution(\"CAT\") == \"YES\""
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\nstdin = input()\nprint(solution(stdin))"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AHA') == 'YES', solution('AHA')\nassert solution('Z') == 'NO', solution('Z')\nassert solution('XO') == 'NO', solution('XO')\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AHA\") == 'YES'\nassert solution(\"Z\") == 'NO'\nassert solution(\"XO\") == 'NO'\nassert solution(\"1234\") == 'NO'\nassert solution(\"\") == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('XO') == 'NO'\nassert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nprint(solution())"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\""
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 5\n''') == '0'\nassert solution('''3\n1 2 5\n''') == '1'\nprint(\"Congratulations, your solution is correct!\")\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\n\nprint(solution(open(0).read()))\n\n\n\"\"\"\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n\"\"\"\n\nn = int(input())\narray = list(map(int, input().split(' ')))\n\nfor i in range(len(array)):\n    for j in range(i + 1, len(array)):\n        if array[i] > array[j] and array[i]!= 0 and array[j]!= 0:\n            break\n    else:\n        print(1)\n        break\n    for j in range(i + 1, len(array)):\n        if array[i] < array[j] and array[i]!= 0 and array[j]!= 0:\n            break\n    else:\n        print(0)\n        break\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 5\n''') == '0'\nassert solution('''3\n1 2 5\n''') == '1'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1 1 2 2\") == \"3\"\nassert solution(\"3 3 2 2\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 5\\n') == '1'\nassert solution('1\\n1\\n') == '0'\nprint(solution(''))"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '2'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('-1 1000000000') == 'Yes'\nassert solution('0 0') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"1000000000 1\") == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\""
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\nRURD') == 'Yes'\nassert solution('1 2\\nRUL') == 'No'\nassert solution('0 0\\nD') == 'Yes'\nassert solution('-1 1000000000\\nLRRLU') == 'Yes'\n\n\"\"\""
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\nRURD''') == 'Yes'\nassert solution('''3 1\nRURD''') == 'No'\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('-1 1000000000') == 'No'\nassert solution('0 0') == 'Yes'"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\"\nprint(\"\u2705 Good job!\")\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 2\\nRU\\n\"\n    ) == \"Yes\"\nassert solution(\n    \"1 2\\nRU\\n\"\n    ) == \"No\"\nassert solution(\n    \"-1 1000000000\\nLRRLU\\n\"\n    ) == \"Yes\""
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 3 7''') == '1'\nassert solution('''10   3   7''') == '1'\nassert solution('''314''') == '0'\nassert solution('''22 19 3''') == '1'\nassert solution('''60''') == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\nassert solution('60') == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 7\n10 3 7\n10   3   7''') == '1'\nassert solution('''314\n159 265\n358''') == '0'\nassert solution('''22 19 3\n60''') == '1'\nassert solution('''\n''') == '0'\nassert solution('''3 7\n10 3 7\n10   3   7\n10 2 3\n19 6\n1 5 6\n''') == '0'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\nassert solution('60') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n5\n2 7\n3''') == '1'\nassert solution('''314\n159 265\n358\nSample Output 6:\n0\n''') == '0'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\nassert solution('60') == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\""
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n''') == '9'\nassert solution('''1\n''') == '0'\nassert solution('''2\n''') == '7'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '9'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '9'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('1') == '9'\nassert solution('2') == '6'\nassert solution('2') == '6'\nassert solution('3') == '7'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"2\"\n\"\"\""
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"9\"\nassert solution(\"12\\n\") == \"15\"\nassert solution(\"1\\n\") == \"9\"\nassert solution(\"9\\n\") == \"9\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '9'\nassert solution('5') == '27'\nassert solution('10') == '51'"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '7'\nassert solution('3') == '5'\nassert solution('4') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"9\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '10'\nassert solution('3') == '10'\nassert solution('4') == '10'\nassert solution('5') == '10'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_1) == '3'\nassert solution(input_2) == '4'\nassert solution(input_3) == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution('5') == '3'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '3'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 6 28 9\") == \"4\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\"\nassert solution(\"4\\n1 2 4 8\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'\nassert solution() == '-1'\n\"\"\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4\\n'\n    '3 6 28 9\\n'\n    ) == '4', \"Wrong\"\nassert solution(\n    '5\\n'\n    '5 12 9 16 48\\n'\n    ) == '3', \"Wrong\"\nassert solution(\n    '4\\n'\n    '1 2 4 8\\n'\n    ) == '-1', \"Wrong\"\n\n\n'''\nfrom collections import defaultdict"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n3 6 28 9\n''') == '4'\nassert solution('''5\n5 12 9 16 48\n''') == '3'\nassert solution('''4\n1 2 4 8\n''') == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6 28 9\\n\") == \"4\"\nassert solution(\"5 12 9 16 48\\n\") == \"3\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 4 8\") == \"3\"\nassert solution(\"4\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0 2\n''') == '2'\nassert solution('''\n5\n0 5 0 2 3\n''') == '2'\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1'"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0 5 0 2 3\n''') == '2'\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '1 7 3 5 6 4 2'\nassert solution('20') == '3'"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\"\n\nstdin = open(\"input.txt\")\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"2\", \"0\", \"0\", \"5\", \"0\", \"0\", \"2\"]) == \"2\"\nassert solution([\"1\", \"0\", \"0\", \"5\", \"0\", \"0\", \"2\"]) == \"1\"\nassert solution([\"3\", \"5\", \"4\", \"0\", \"0\", \"0\", \"0\", \"3\"]) == \"2\"\nassert solution([\"3\", \"0\", \"0\", \"5\", \"0\", \"0\", \"2\"]) == \"1\"\nassert solution([\"2\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"]) == \"2\""
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n0 5 0 2 3\n''') == '2'\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n0 5 0 2 3\n''') == '2'\n\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n0 5 0 2 3\") == \"2\"\nassert solution(\"7\\n1 0 0 5 0 0 2\") == \"1\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('7') == '1'\nassert solution('10') == '1'\nassert solution('100') == '2'\nassert solution('1000') == '2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n0 5 0 2 3''') == '2'\nassert solution('''7\n1 0 0 5 0 0 2''') == '1 7 3 5 6 4 2'\nprint('Do you see how it is solved?', '\\U0001f44d')\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '5'"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n3''') == '2'\nassert solution('''5\n5''') == '5'\nassert solution('''4\n3''') == '3'\nassert solution('''1\n2''') == '2'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"6\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 2\nassert solution('6') == 6\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\n\"\"\"\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2\n2 3\n3 4\n4 5\n''') == '5'\nassert solution('''4\n1 2\n2 3\n3 4\n''') == '4'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n''') == '5'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n''') == '5'\nassert solution('''3\n1 2\n2 3\n''') == '3'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3''') == '2'\n\nassert solution('''5\n1 2 3 4''') == '5'"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n') == '2'\nassert solution('5\\n') == '5'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\\n1 3 4 5 2\") == \"18\"\nassert solution(\"4 2 2\\n10 8 8 3\\n10 7 9 4\") == \"31\"\nassert solution(\"5 3 1\\n5 2 5 1 7\") == \"23\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('4 2 2') == '31'\nassert solution('5 3 1') == '1 3 5'\nassert solution('6 3 1 6 3') == '4'"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18'\nassert solution('''4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31'\nassert solution('''5 3 1\n5 2 5 1 7\n6 3 1 6 3\n''') == '23'\nassert solution('''3\n10 8 8 3\n10 7 9 4\n''') == '1 2'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18', 'Should be \"18\"'\nassert solution('''\n4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31', 'Should be \"31\"'\nassert solution('''\n5 3 1\n5 2 5 1 7\n6 3 1 6 3\n''') == '23', 'Should be \"23\"'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 2\") == \"18\"\nassert solution(\"5 3 1\") == \"1 2\"\nassert solution(\"4 2 2\") == \"31\""
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n''') == '18', 'Wrong answer with test case 1'\nassert solution('''\n4 2 2\n10 8 8 3\n10 7 9 4\n''') == '31', 'Wrong answer with test case 2'\nassert solution('''\n5 3 1\n5 2 5 1 7\n6 3 1 6 3\n''') == '23', 'Wrong answer with test case 3'\n\nprint(solution('''\n5 2 2\n1 3 4 5 2\n5 3 2 1 4\n'''))\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 2\") == \"18\", \"Wrong answer\"\nassert solution(\"4 2 2\") == \"31\", \"Wrong answer\""
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '18'\nassert solution(input()) == '1 2 3 4'\nassert solution(input()) == '1 3 5'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 2 2\"\n    \"1 3 4 5 2\"\n    \"5 3 2 1 4\"\n    \"2 3 2\"\n    \"1 2\"\n    \"1 3\"\n    \"4 5\"\n    \"1 2\"\n    \"3 1\"\n    \"4 5\"\n    \"2 4\"\n    \"3 2\"\n    \"5 2\"\n    \"3 1\"\n    \"6 3 1 6 3\"\n    \"6 3 1 6 3\"\n) == \"31 4 2 4 3 1 4 5\"\nprint(solution(\n    \"4 2 2\"\n    \"10 8 8 3\"\n    \"10 7 9 4\"\n    \"2 3 2\"\n    \"1 2\"\n    \"1 3\"\n    \"4 5\"\n    \"1 2\"\n    \"3 4\"\n    \"2 4\"\n    \"3 2\"\n    \"5 2\"\n    \"3 1\"\n    \"6 3 1 6 3\"\n    \"6 3 1 6 3\"\n))\nassert solution(\n    \"5 3 1\"\n    \"5 2 5 1 7\"\n    \"6 3 1 6 3\"\n) == \"23 1 3 5 4\"\nprint(solution(\n    \"5 3 1\"\n    \"5 2 5 1 7\"\n    \"6 3 1 6 3\"\n))\nassert solution(\n    \"5 3 1\"\n    \"5 2 5 1 7\"\n    \"6 3 1 6 3\"\n) == \"23 1 3 5 4\"\nprint(solution(\n    \"4 3 1\"\n    \"4 2 5 1 7\"\n    \"6 3 1 6 3\"\n))\nassert solution(\n    \"4 3 1\"\n    \"4 2 5 1 7\"\n    \"6 3 1 6 3\"\n) == \"23 1 3 5 4\"\nprint(solution(\n    \"5 2 2\"\n    \"10 8 8 3\"\n    \"10 7 9 4\"\n))\nassert solution(\n    \"5 2 2\"\n    \"10 8 8 3\"\n    \"10 7 9 4\"\n) == \"31 4 2 4 3 1 4 5\"\nprint(solution(\n    \"5 2 2\"\n    \"10 8 8 3\"\n    \"10 7 9 4\"\n))\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"18\\n3 4\\n1 2\\n3 4\\n\"\nassert solution(\"5 2 2\\n1 3 4 5 2\\n5 3 2 1 4\\n\") == \"31\\n1 3 5\\n4\\n\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == 'Yes'\nassert solution(\"4 3\") == 'No'\n\nimport sys\nimport io\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('4 3') == 'No'\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n1 2\\n') == 'Yes'\nassert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'No'\nassert solution('5 5\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n') == 'Yes'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == 'Yes'\nassert solution('4 3') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 1\n1 2\n\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n4 3\n1 2\n1 3\n1 4\n\n\"\"\") == \"No\"\nprint(solution(input()))"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1\n1 2\n\n''') == 'Yes'\nassert solution('''4 3\n1 2\n1 3\n1 4\n\n''') == 'No'\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'cc'\nassert solution(input()) == 'No'\nassert solution(input()) == 'aa'\n\n'''\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\") == \"Yes\\naa\\n\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == 'No'\nassert solution('4 3') == 'Yes'\n\n'''\n\n\n\nimport math\n\nn,m=map(int,input().split())\nd=list(map(int,input().split()))\n\ns=[]\n\nfor i in range(1,n+1):\n    if d[i-1] not in s:\n        s.append(d[i-1])\n    else:\n        continue\n\nfor i in range(len(s)):\n    for j in range(i+1,len(s)):\n        if s[i]==s[j]:\n            if j!=i+1:\n                continue\n            else:\n                if d[i]==d[j-1]:\n                    continue\n                else:\n                    print('No')\n                    break\n        else:\n            continue\n    if len(s)==len(set(s)):\n        print('Yes')\n        break\nelse:\n    print('No')\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == 'No'\nassert solution('2 3') == 'Yes'\nassert solution('2 2') == 'Yes'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('0 2 2') == '19'\nassert solution('0 3 1') == '87'\nassert solution('1 1 1') == '9'\nassert solution('1 2 2') == '17'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 1 1\n1 0 1\n1 1 0\n3\n''') == '7'\nassert solution('''\n0 2 1\n1 0 100\n1 2 0\n5\n''') == '87'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('0 2 1') == '19'\nassert solution('1 0 100') == '87'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('0 2 1') == '19'\nassert solution('0 3 2') == '17'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 1') == '7'\nassert solution('0 1 1') == '7'\nassert solution('1 0 1') == '7'\nassert solution('3') == '19'\nassert solution('0 2 1') == '87'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('1 0 1') == '19'\nassert solution('0 2 1') == '87'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '7'\nprint(solution())"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 1 1\n1 0 1\n1 2 0\n3\n''') == '7'\nassert solution('''\n0 2 1\n1 0 100\n1 2 0\n3\n''') == '19'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == '7'\nassert solution(\"2 1 1\") == '7'\nassert solution(\"0 1 1\") == '7'\nassert solution(\"0 2 1\") == '19'\nassert solution(\"0 2 1 2 3\") == '67'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\nassert solution(\"Flllll\") == \"0\"\nassert solution(\"FlllllFlllll\") == \"0\"\nassert solution(\"FlllllFlllllFllllll\") == \"1\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nHVCEIIGLMRHKPQXGZFZQYVZKNNZMIDDLESLKSXKMMMNQKSAQZWGQQXKKZCZKEZYDDG\nIIDZQKSSZCKKEZZKEZZQKSQZQZKSZKQZGQZKQZGQQZKQZQZKZGQZKZGQQZKQZQZGQQQQQ\nGQQQZGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQ\nGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQGQQQG"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'\nassert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\""
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"Bulbbasaur\n\"\"\") == \"1\"\n\nassert solution(\"\"\"F\n\"\"\") == \"0\"\n\nassert solution(\"\"\"aBddulbasaurrgndgbualdBdsagaurrgndbb\n\"\"\") == \"2\"\n\nassert solution(\"\"\"-fbkljol\n\"\"\") == \"0\""
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''Bulbbasaur\n\n''') == '1'\nassert solution('''F\n\n''') == '0'\nassert solution('''aBddulbasaurrgndgbualdBdsagaurrgndbb\n\n''') == '2'\nprint('You passed all tests!')"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '1'\nassert solution('Bulbbasaur') == '0'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'\nassert solution('bRgndgbULBbaurrgndbdsagaurrgndbb') == '0'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\n\"\"\""
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\n\"\"\"\nimport sys\n\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\narc\\nrac\\n') == 'YES'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == 'YES', \"wtf\"\nassert solution('5 3') == 'YES', \"wtf\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\narc\\nrac\\n\") == \"YES\"\n\n\"\"\"\n\nimport os\nimport sys\nimport datetime"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"3 4\") == \"NO\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 3\\ncat\\nrat\") == \"NO\"\nassert solution(\"2 3\\nabc\\nxyz\") == \"YES\"\nassert solution(\"3 3\\nabc\\nxyz\\naba\") == \"NO\"\nassert solution(\"3 3\\nabc\\nxzy\\naba\") == \"YES\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'YES'\n\nassert solution('4 5') == 'NO'\n\nassert solution('10 10') == 'NO'\n\nassert solution('10 10') == 'YES'\n\"\"\""
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\narc\nrac\n:\nrac\"\"\") == \"YES\"\n\nassert solution(\"\"\"2\narc\nrac\n:\narc\"\"\") == \"NO\"\n\nassert solution(\"\"\"4\narc\nrac\n:\narc\"\"\") == \"YES\"\n\nassert solution(\"\"\"6\narc\narc\narc\nrac\narc\nrac\n:\narc\"\"\") == \"YES\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\narc\nrac''') == 'YES'\n\nassert solution('''12\nFOLIAG\nRACECROW\nLACEGT''') == 'NO'\n\nassert solution('''5\nVYSINAP\nPQRST\nZPQRST\nABBCCD\nACBDCA''') == 'NO'\n\nassert solution('''8\nABCDE\nFGHIJ\nKLMNO\nPQRST\nUVXYZ''') == 'YES'\n\nassert solution('''16\nTTTTT\nGTTTT\nTETTT\nTTTTT\nTTTTT\nTETTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTTTTT\nTT"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 111') == '4'\nassert solution('100100') == '37'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 111') == '4'\nassert solution('3 822') == '2'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('3') == '5'\nassert solution('4') == '10'\nassert solution('5') == '22'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 111\n1111\n10111\n10010\n''') == '4'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''3 111\n1111\n10111\n10010\n''') == '4'\n\nassert solution(\n'''3 120\n1111\n10111\n10010\n''') == '1'\n\nassert solution(\n'''4 5\n100 101\n1110 101\n101 100\n100 10''') == '1'"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 111\n1111\n10111\n10010\n''') == '4'\nassert solution('''4\n0\n1\n2\n''') == '3'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 111\n1111\n10111\n10010''') == '4'\n\"\"\"\nimport math"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 111\\n1111\\n10111\\n10010\\n\") == \"4\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 111\") == \"4\"\nassert solution(\"2 1\") == \"3\"\nassert solution(\"6 10\") == \"4\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 111\") == \"4\"\nassert solution(\"10 10 10\") == \"1\"\nassert solution(\"3 1 2\") == \"3\"\n\"\"\"\nimport math\nimport sys\nimport collections\n\nsys.setrecursionlimit(10 ** 6)\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"11 11 5\"\n) == \"1\"\nassert solution(\n    \"11 2 3\"\n) == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11 11 5') == 1\nassert solution('11 2 3') == -1\nassert solution('1000000 1000000 1000000') == 1000000\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'\nassert solution('11 0 2 3') == '-1'\nassert solution('11 5 3') == '0'\nassert solution('11 1 0 0') == '0'"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\", \"Should return 1\"\nassert solution(\"11 2 3\") == \"-1\", \"Should return -1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11 11 5\") == \"1\", \"11 11 5\"\nassert solution(\"11 2 3\") == \"-1\", \"11 2 3\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11 11 5\\n\") == '1'\nassert solution(\"11 2 3\\n\") == -1\nassert solution(\"11 1 4\\n\") == '1'\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 5\") == \"1\"\nassert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''abacaba''') == \"YES\"\nassert solution('''jinotega''') == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abacaba') == 'YES', \"Not correct\"\nassert solution('jinotega') == 'NO', \"Not correct\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == 'YES'\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'\n\n'''"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'\nprint(solution(input()))\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'a'\nassert solution('abacaba') == 'abacaba'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"20.0\"\nassert solution(input()) == \"7.3333333333333335\"\nassert solution(input()) == \"8.333333333333334\"\nassert solution(input()) == \"8.333333333333334\"\nassert solution(input()) == \"8.333333333333334\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 6\n''') == '6.5', solution\n\nassert solution('''\n4 2 20\n''') == '20.0', solution"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2 20') == '20.0'\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3 2 6\"\"\") == \"6.5\"\nassert solution(\"\"\"4 2 20\"\"\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n\"\"\"\n\nimport math"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2 6\n3 2 6''') == '6.5'\nassert solution('''4 2 20\n4 2 20''') == '20.0'"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'\n\n\n-----Hint-----\n\nFirst, your solution should be only a single line of code. Secondly, when you want to test your solution, you need to have a function named `solution`.\n\nTo use `input`, we need to import the `input` function and then `print`.\n\nIn the function `solution`, we need to check if the input has length greater than 2.\n\nWe need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nWe need to use the `range` function to put in the list all the elements from 0 to the third argument.\n\nIn the `map` function, we need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nWe need to use the `len` function to add a new element to the beginning of the list and then use the `len` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nIn the `map` function, we need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nAfter we have used the `map` function and we have our list, we can use the `list` function to convert it to a list.\n\nIn the `list` function, we need to put in the list all the elements from the third argument (t) into a new list.\n\nIn the `map` function, we need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nWe need to use the `len` function to add a new element to the beginning of the list and then use the `len` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nIn the `map` function, we need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nAfter we have used the `map` function and we have our list, we can use the `list` function to convert it to a list.\n\nIn the `list` function, we need to put in the list all the elements from the third argument (t) into a new list.\n\nIn the `map` function, we need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nWe need to use the `len` function to add a new element to the beginning of the list and then use the `len` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nIn the `map` function, we need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nAfter we have used the `map` function and we have our list, we can use the `list` function to convert it to a list.\n\nIn the `list` function, we need to put in the list all the elements from the third argument (t) into a new list.\n\nIn the `map` function, we need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nWe need to use the `len` function to add a new element to the beginning of the list and then use the `len` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nIn the `map` function, we need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can put in the list the three arguments (k, d, t). We can use the `lambda` function to put in the values of the three arguments.\n\nAfter we have used the `map` function and we have our list, we can use the `list` function to convert it to a list.\n\nIn the `list` function, we need to put in the list all the elements from the third argument (t) into a new list.\n\nIn the `map` function, we need to use the `map` function to add a new element to the beginning of the list and then use the `map` function to add a new element to the end of the list, so that we can"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 6') == '6.5'\nassert solution('4 2 20') == '20.0'\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2 6\n''') == '6.5'\nassert solution('''\n4 2 20\n''') == '20.0'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"100 100\") == \"1\""
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 2\n....\n..\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n..\n..\n\nOutput\n2\n\nInput\n4 4\n....\n.##.\n....\n.#..\n\nOutput\n1\n\nInput\n3 4\n....\n.##.\n....\n\nOutput\n2\n\nInput\n4 4\n....\n.#..\n....\n\nOutput\n1\n''') == '1'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 4') == '1'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"4 4\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"3 4\") == \"2\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n..\n..\n\n''') == '1', \"First\"\nassert solution('''4 4\n....\n.##.\n....\n\n''') == '2', \"Second\"\nassert solution('''3 4\n...#\n.##.\n.##.\n\n''') == '1', \"Third\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n..\\n..') == '2'\nassert solution('4 4\\n....\\n#..\\n') == '1'\n\n'''\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"3 4\") == \"2\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"5 1 3\n3 5 2\n\"\"\") == r\"\"\"6\"\"\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '4'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n1 1 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n2\n1 1 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3\n1 1 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4\n1 1 3 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1 1 3 2 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"12\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1 3\n''') == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 3\\n') == '6'\nassert solution('5\\n1 1 4\\n') == '15'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 1 3\") == \"6\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 1 3\n''') == '6'\nassert solution('''4\n2 1 3\n''') == '3'\nassert solution('''5\n2 1 3\n''') == '1'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 1 3\n''') == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\"\n    \"1 1 3\"\n    ) == \"6\"\n\nprint(solution(\n    \"3\"\n    \"1 1 3\"\n    ))\n\"\"\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"22\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 4 3 7 5\\n') == '11\\n3'"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5') == '12'\nassert solution('1 2 3 7 5') == '18'\nassert solution('1 4 3 7 5') == '13'\nassert solution('1 4 3 7 6') == '14'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\n''') == '6'\nassert solution('''5\n1 2 3 4 5\n''') == '12'\nassert solution('''15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '34'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"10\") == \"21\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11\\n3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9') == '14'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"30\") == \"30\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '11'\nassert solution('10') == '4'\nassert solution('12345') == '6'\nassert solution('151515') == '5'\nassert solution('1234') == '9'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"6\"\nassert solution(\"5\") == \"11\""
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 4 3 7 5\n''') == '11'\nassert solution('''\n5\n-1 -4 -3 -7 -5\n''') == '8'\nassert solution('''\n10\n3 4 -3 2 1 -5 7 6\n''') == '0'\nassert solution('''\n4\n1 -3 -5\n''') == '3'\nassert solution('''\n4\n1 2 3\n''') == '3'"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 1\n10.245''') == '10.25'\nassert solution('''6 2\n10.245''') == '10.3'\nassert solution('''3 100\n9.2''') == '9.2'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\n\n\n\n'''"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"10.0\"\nassert solution(\"1 2\") == \"10.5\"\nassert solution(\"2 2\") == \"10.0\"\nassert solution(\"4 100\") == \"10.0\"\n\nassert solution(\"4 2\") == \"10.2\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 1\n10.245\n\n6 2\n10.245\n\n3 100\n9.2\n\n3 100\n10.3''') == '10.3'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\n'''\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1\\n10.245\") == \"10.25\"\nassert solution(\"6 2\\n10.245\") == \"10.3\"\nassert solution(\"3 100\\n9.2\") == \"9.2\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\nassert solution('6 3') == '9.3'\nassert solution('6 5') == '10.2'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1\\n10.245') == '10.25'\nassert solution('6 2\\n10.245') == '10.3'\nassert solution('3 100\\n9.2') == '9.2'"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"0110\"\nassert solution(input()) == \"Impossible\""
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == \"Impossible\"\nassert solution('1 2 2 1') == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\".1 0 1 1\") == \"0110\"\nassert solution(\".1 0 0 0\") == \"Impossible\"\nassert solution(\".0 0 0 1\") == \"0001\"\n\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\nassert solution(\"1 2 1 2\") == \"0111\"\nassert solution(\"1 2 1 1\") == \"0111\"\nassert solution(\"1 2 1 1 1\") == \"0111\""
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 1\") == \"0110\"\nassert solution(\"1 2 1 1\") == \"0111\"\n\n\n\"\"\"\n\n\na_00, a_01, a_10, a_11 = map(int, stdin.strip().split())"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\n\n'''\n\nimport sys\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"Impossible\"\nassert solution(\"1 2 2 1\") == \"0110\"\nassert solution(\"0 0 0 0\") == \"Impossible\"\nassert solution(\"1 1 1 1\") == \"010111\"\nassert solution(\"1 1 0 0\") == \"010111\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0110'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 1\") == \"0110\""
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n.**P*P*\n''') == '2'\nassert solution('''\n10\n*..P*P*\n''') == '3'\nassert solution('''\n10\n*..P*P*\n''') == '4'\nassert solution('''\n10\n*..P*P*\n''') == '4'"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n*..P*P*\n''') == '3'\n\nassert solution('''\n10\n.**PP.*P.*\n''') == '2'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7\n*..P*P*\n\n''') == \"3\"\nassert solution('''10\n.**PP.*P.*\n\n''') == \"2\""
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n*..P.*\n''') == '3'\nassert solution('''\n4\n.**PP.*\n''') == '2'\nassert solution('''\n10\n.**PP.*P.*\n''') == '3'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7\n*..P*P*\n''') == '3'\nassert solution('''10\n.**PP.*P.*\n''') == '2'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7\n*..P*P*\n''') == '3'\n\nassert solution('''10\n.**PP.*P.*\n''') == '2'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '3'\nassert solution('10') == '2'\nassert solution('12') == '4'\nassert solution('10') == '2'"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n7\n*..P*P*\n''') == '3'\n\nassert solution(\n'''\n10\n.**PP.*P.*\n''') == '2'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\".*\") == 0\nassert solution(\"*.*\") == 0\nassert solution(\"PP.*PP\") == 3\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"16\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '4\\n'\nassert solution('2\\n') == '8\\n'\nassert solution('3\\n') == '16\\n'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '4\\n'\nassert solution('2\\n') == '8\\n'\nassert solution('3\\n') == '16\\n'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n') == '4'\nassert solution('3\\n') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n0\\n3\\n0\\n3') == '4'\nassert solution('6\\n0\\n0\\n2\\n0\\n4') == '7'\nassert solution('3\\n0\\n0\\n2\\n2') == '1'\nassert solution('4\\n0\\n0\\n0\\n0') == '0'\nassert solution('7\\n0\\n0\\n0\\n0\\n0\\n0') == '0'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'\nprint(solution(input()))\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"16\"\nassert solution(\"5\") == \"15\"\nassert solution(\"10\") == \"24\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n''') == '1'\nassert solution('''\n4\n''') == '4'\nassert solution('''\n6\n''') == '8'\nassert solution('''\n1\n''') == '4'\nassert solution('''\n2\n''') == '8'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n''') == '4'\nassert solution('''2\n''') == '8'\nassert solution('''3\n''') == '16'\nassert solution('''6\n''') == '16'\nassert solution('''8\n''') == '16'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 5 3') == '1 3 5'\nassert solution('6 5 3 2') == '1 3 5'\nassert solution('3 2 4 5') == '3 4'\nassert solution('3 3 4 5') == '2 4'\nassert solution('3 3 4 6') == '2 3'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 3 9 7'"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([[100, 100, 52, 50, 46, 56]]) == '17 8 86 92'\nassert solution([[100, 100, 52, 50, 46, 56], [101, 101, 52, 50, 47, 56], [102, 102, 52, 50, 46, 55], [103, 103, 52, 50, 47, 56]]) == '17 8 86 92'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n5 2\\n2 1\\n3 4\") == \"1 3\"\nassert solution(\"10\\n10 2\\n5 1\\n5 3\") == \"3 5\"\nassert solution(\"10\\n10 3\\n5 1\\n5 3\") == \"1 3\""
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\\\n6 6 5 5 2 1\n\"\"\") == \"1 3 9 7\"\nassert solution(\"\"\"\\\n100 100 52 50 46 56\n\"\"\") == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 2 1\\n') == '1 3 9 7'\nassert solution('100 100 52 50 46 56\\n') == '17 8 86 92'"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3 4\n5\n8\n12\n''') == '1 2 4'\n\nassert solution('''\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n10\n10 10 10 10\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 7 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"6 6 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"10 10 50 50 46 56\") == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('TTFFTTTFF') == 'No'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''FTFFTFFF\n4 2''') == 'Yes'\nassert solution('''FTTTFFT\n4 2''') == 'No'\nassert solution('''TTFFTFFF\n4 2''') == 'No'\nassert solution('''TTFFTFFF\n1 1''') == 'Yes'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'Yes'\nassert solution('FTFFTFFF') == 'Yes'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"FFF\") == \"No\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('F') == 'No'\nassert solution('TT') == 'No'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"TTTTTTTFFF\") == \"No\"\nassert solution(\"TTTTTFFF\") == \"Yes\"\nassert solution(\"TTTTFFF\") == \"No\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"Yes\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"FTFFTFFF\") == \"Yes\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\""
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"FTFFTFF\") == \"No\"\nassert solution(\"FTF\") == \"No\"\nassert solution(\"FF\") == \"No\"\nassert solution(\"FFT\") == \"Yes\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == '2'\nassert solution('''\n2\n''') == '3'\nassert solution('''\n3\n''') == '5'\nassert solution('''\n4\n''') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n\n''') == '2'\nassert solution('''\n3\n\n''') == '3'\nassert solution('''\n4\n\n''') == '5'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '5'\nassert solution('2') == '3'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '2\\n'\nassert solution('2\\n') == '3\\n'\nassert solution('3\\n') == '5\\n'\nassert solution('4\\n') == '6\\n'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n\n''') == '2'\nassert solution('''2\n\n''') == '3'\nassert solution('''3\n\n''') == '5'\nassert solution('''4\n\n''') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 2\nassert solution('2') == 3\nassert solution('3') == 5\nassert solution('4') == 6\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '2\\n'\nassert solution('2\\n') == '3\\n'\nassert solution('3\\n') == '5\\n'\nassert solution('4\\n') == '6\\n'\n\n\"\"\""
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n1\n1\n1\n''') == '2'\nassert solution('''2\n2\n1\n1\n1\n''') == '3'\nassert solution('''3\n3\n1\n1\n1\n''') == '5'\nassert solution('''4\n4\n1\n1\n1\n''') == '6'\nassert solution('''5\n5\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == '8'"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == \"1.3333333333\"\nassert solution('2\\n3\\n1 2\\n') == \"0.75\"\nassert solution('2\\n2\\n1 2\\n') == \"0.5\"\nassert solution('3\\n2\\n1 2\\n') == \"1.0\"\nassert solution('3\\n2\\n1 2\\n') == \"0.75\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n2\n3\n''') == '1.3333333333'\nassert solution('''\n3\n2\n1\n''') == '1.3333333333'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1.3333333333'\nassert solution('5') == '2.5'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1.'"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '1.3333333333'"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n3\n''') == '1.3333333333'\nprint(solution('''2\n3\n1\n2\n'''))\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n3\n\n2\n1 2\n\n''') == \"1\"\nassert solution('''\n5\n1 2 3 4 5\n2\n\n2\n2 5\n\n''') == \"1.166666666667\"\nassert solution('''\n7\n1 2 3 4 5 6 7\n3\n\n4\n1 2 3 4 5 6\n2\n\n4\n1 2 3 4 5\n3\n\n5\n1 2 3 4 5\n4\n\n''') == \"0\"\nassert solution('''\n7\n1 2 3 4 5 6 7\n3\n\n4\n1 2 3 4 5 6\n2\n\n5\n1 2 3 4 5 6\n4\n\n''') == \"2.09090909091\"\nassert solution('''\n7\n1 2 3 4 5 6 7\n3\n\n4\n1 2 3 4 5 6\n2\n\n5\n1 2 3 4 5 6\n4\n\n''') == \"1.66666666666667\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1.3333333333\"\nassert solution(\"1\") == \"1.0\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3\n3\n\n''') == '1.3333333333', solution.__doc__\nprint('All tests passed!')"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 2\") == \"13 7\"\nassert solution(\"3 1 1\") == \"13 13 13\"\nassert solution(\"5 1 5\") == \"13 13 13 13\"\nassert solution(\"10 1 5\") == \"13 13 13 13 13 13 13 13 13\"\nassert solution(\"8 2 5\") == \"9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1 2\\n9 7 11 15 5\\n') == '13 7'\nassert solution('2 100000 569\\n605 986\\n') == '986 605'"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 1 2\n9 7 11 15 5\n''') == '13 7'\nassert solution('''\n2 100000 569\n''') == '986 605'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1 2\n9 7 11 15 5''') == '13 7'\n\nassert solution('''2 100000 569''') == '986 605'\n\nassert solution('''3 3 8\n5 8 7\n7 8 8\n8 8 4\n2 3 1''') == '8 4'\n\nprint('Tests completed!')"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '13 7'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 2\") == \"13 7\"\nassert solution(\"5 1 2\") == \"6 5\"\nassert solution(\"6 5 1\") == \"6 5\"\nassert solution(\"1000000 1000000\") == \"995000 999999\"\nassert solution(\"1 1\") == \"1 1\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n9 7 11 15 5\") == \"13 7\"\nassert solution(\"2 1\\n9 7 11 15 5\") == \"986 605\"\nassert solution(\"10 1\\n0 0\\n\") == \"0 0\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n1\nOutput''') == '1 1'\nassert solution('''2 1\n100000 569\nOutput''') == '685 605'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1 2\n9 7 11 15 5\n\n''') == '13 7'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(inp1) == \"13 7\"\nassert solution(inp2) == \"986 605\""
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2 4 4\\n2 5 4 10\\n') == '1'\nassert solution('3 3 3 3 5\\n2 3 5 4 2\\n') == '0'\nassert solution('5 5 1 2 3\\n2 3 5 4 2\\n') == '3'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 2') == \"1\"\nassert solution('3 3 3 3 5') == \"0\"\nassert solution('5 5 1 2 3') == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"0\"\nassert solution(\"3 4 1 1 3\") == \"3\""
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5 1 2 3\n2 3 2''') == '0'\nassert solution('''3 3 3 3 5\n2 3 5 4 2\n''') == '1'\n\nassert solution('''5 5 1 2 3\n2 3 5 4 2\n''') == '3'\n\nassert solution('''5 5 1 2 3\n2 3 5 4 2\n''') == '-1'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"-1\"\nassert solution(\"3 4 1 1 3\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n\n'''\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 1\nassert solution(\"2 3 2 4 4\") == 0\nassert solution(\"3 3 3 3 5\") == 0\nassert solution(\"5 5 1 2 3\") == -1\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '-1'\nassert solution('3 4 1 1 3') == '3'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '3'\nassert solution('3 4 1 1 3') == '0'"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 3 3 5\") == \"0\"\nassert solution(\"3 3 3 3 5\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\n\"\"\""
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([5, 'R1', 'G1', 'R3', 'R4', 'B3', 'B1', 'G1', 'R2', 'Y2', 'R1']) == '0'\nassert solution([3, 'R1', 'R3', 'R2', 'Y2', 'Y3', 'Y1', 'G1', 'G3', 'G2']) == '2'\nassert solution([2, 'Y1', 'Y3', 'Y2', 'G1', 'G3', 'G2', 'R1', 'R3', 'R2']) == '1'\nassert solution([4, 'G1', 'Y3', 'Y1', 'Y2', 'Y3', 'Y2', 'Y1', 'G1', 'G1', 'R2', 'R3', 'R4', 'B3', 'B1', 'B2', 'B1', 'R1', 'R2', 'R4', 'B1', 'B1', 'B2', 'B2', 'R2', 'R4', 'B2', 'R1', 'G1', 'G1', 'R3', 'R2', 'G2', 'G1', 'G2', 'B1', 'B2', 'B3', 'R1']) == '0'\nassert solution([1, 'Y1', 'Y2', 'Y3', 'Y1', 'Y2', 'Y3', 'Y4', 'G1', 'G1', 'G2', 'G3', 'G2', 'G1', 'G3', 'G2', 'G3', 'G1', 'G3', 'G2', 'G3', 'G2', 'G1', 'R1', 'R1', 'R2', 'R3', 'R2', 'R3', 'R3', 'R3', 'R1', 'R2', 'R1', 'R3', 'R3', 'R3', 'R3', 'R2', 'R3', 'R2', 'R1', 'R2', 'R3', 'R1', 'R2', 'R3', 'R1', 'R3', 'R3', 'R2', 'R2', 'R1', 'R2', 'R2', 'R3', 'R1', 'R2', 'R1', 'R3', 'R3', 'R3', 'R1', 'R3', 'R3', 'R3', 'R2', 'R3', 'R2', 'R2', 'R2', 'R2', 'R1', 'R1', 'R2', 'R2', 'R1', 'R2', 'R2', 'R2', 'R2', 'R1', 'R3', 'R1', 'R2', 'R1', 'R1', 'R2', 'R3', 'R2', 'R3', 'R1', 'R2', 'R2', 'R3', 'R3', 'R2', 'R1', 'R3', 'R3', 'R3', 'R3', 'R3', 'R1', 'R2', 'R1', 'R3', 'R2', 'R3', 'R2', 'R2', 'R1', 'R2', 'R3', 'R3', 'R3', 'R1', 'R2', 'R2', 'R3', 'R2', 'R2', 'R2', 'R3', 'R1', 'R2', 'R1', 'R3', 'R2', 'R3', 'R2', 'R3', 'R3', 'R1', 'R2', 'R2', 'R3', 'R3', 'R3', 'R1', 'R2', 'R1', 'R3', 'R3', 'R1', 'R1', 'R2', 'R2', 'R3', 'R2', 'R1', 'R3', 'R1', 'R3', 'R2', 'R1', 'R2', 'R2', 'R2', 'R2', 'R1', 'R2', 'R3', 'R2', 'R2', 'R2', 'R2', 'R1', 'R3', 'R2', 'R1', 'R2', 'R1', 'R1', 'R2', 'R2', 'R3', 'R2', 'R2', 'R1', 'R2', 'R2', 'R1', 'R2', 'R3', 'R2', 'R1', 'R3', 'R1', 'R3', 'R2', 'R1', 'R2', 'R3', 'R2', 'R3', 'R2', 'R1', 'R2', 'R2', 'R3', 'R1', 'R2', 'R3', 'R1', 'R1', 'R2', 'R2', 'R3', 'R2', 'R1', 'R3', 'R1', 'R2', 'R2', 'R3', 'R2', 'R3', 'R1', 'R3', 'R1', 'R1', 'R2', 'R3', 'R1', 'R1', 'R2', 'R1', 'R2', 'R3', 'R1', 'R1', 'R3', 'R1', 'R3', 'R2', 'R2', 'R2', 'R3', 'R1', 'R2', 'R3', 'R2', 'R2', 'R1', 'R1', 'R2', 'R2', 'R3', 'R2', 'R1', 'R2', 'R1', 'R1', 'R2', 'R2', 'R3', 'R2', 'R2', 'R1', 'R2', 'R2', 'R2', 'R2', 'R1', 'R2', 'R3', 'R2', 'R2', 'R2', 'R2', 'R1', 'R2', 'R3', 'R2', 'R2', 'R1', 'R2', 'R2', 'R1', 'R2', 'R3', 'R1', 'R3', 'R1', 'R2', 'R3', 'R1', 'R2', 'R2', 'R1', 'R3', 'R3', 'R2', 'R1', 'R2', 'R1', 'R3',"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n\"\"\""
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"0\"\n\nINPUT:\n4\nB1 Y1 W1 G1 R1\n\nOUTPUT:\n4\n\nINPUT:\n5\nB1 Y1 W1 G1 R1\n\nOUTPUT:\n3\n\nINPUT:\n2\nG3 G3\n\nOUTPUT:\n0\n\nINPUT:\n1\nR1\n\nOUTPUT:\n1\n\nINPUT:\n4\nB1 Y1 W1 G1 R1\n\nOUTPUT:\n4\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\nassert solution() == '1'\nassert solution() == '2'\n\n\"\"\""
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nG3 G3\") == \"0\"\nassert solution(\"4\\nG4 R4 R3 B3\") == \"2\"\nassert solution(\"5\\nB1 Y1 W1 G1 R1\") == \"4\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2]) == 0\nassert solution([4]) == 4\nassert solution([5]) == 4\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '2'\nassert solution('5') == '4'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution('''\nG3 G3\n''') == '0'\nassert solution('''\nG4 R4 R3 B3\n''') == '2'\nassert solution('''\nB1 Y1 W1 G1 R1\n''') == '4'\n''')\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3 3 4 3\n4 7 6 5\n''') == '2 6'\nassert solution('''5\n10 30 5 6 24\n10 41 7 8 24\n''') == '3 11'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3 11'\nassert solution('2') == '1 1'"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2 6'"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1 1'\nassert solution('4') == '2 6'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1 1\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"4\") == \"1 2\"\nassert solution(\"5\") == \"2 3\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2 6\"\n\"\"\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == '2 6'\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == '3 11'\n''')\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 3 4 3\\n4 7 6 5\\n') == '2 6'\nassert solution('2\\n1 1\\n100 100\\n') == '1 1'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24\\n') == '3 11'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n3 3 4 3\n4 7 6 5\n\"\"\") == \"2 6\"\nassert solution(\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"3 11\"\nassert solution(\"\"\"\n4\n2 3 4 3\n4 7 6 5\n\"\"\") == \"3 11\""
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5') == '2 6'\nassert solution('2\\n1 1\\n100 100') == '1 1'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 4\n''') == \"3B\"\nassert solution('''2 2\n''') == \"Impossible\"\nassert solution('''3 2\n''') == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"3B\", 'Case 1'\nassert solution(\"2 2\") == \"Impossible\", 'Case 2'\nassert solution(\"3 2\") == \"1A1B\", 'Case 3'"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1A1B''') == '1A1B'\nassert solution('''3 2\n3B''') == 'Impossible'\nassert solution('''3 2\n2A2B''') == 'Impossible'\nassert solution('''1 1\n1A1B''') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'\nassert solution('1 2') == 'Impossible'\nassert solution('2 1') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 4\\n\") == \"3B\", \"First\"\nassert solution(\"2 2\\n\") == \"Impossible\", \"Second\"\nassert solution(\"3 2\\n\") == \"1A1B\", \"Third\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 4\\n\") == \"3B\"\nassert solution(\"2 2\\n\") == \"Impossible\"\nassert solution(\"3 2\\n\") == \"1A1B\"\nassert solution(\"3 3\\n\") == \"Impossible\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\nassert solution(\"3 3\") == \"Impossible\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 4\\n\") == \"3B\"\nassert solution(\"2 2\\n\") == \"Impossible\"\nassert solution(\"3 2\\n\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 4\\n\") == \"3B\"\nassert solution(\"2 2\\n\") == \"Impossible\"\nassert solution(\"3 2\\n\") == \"1A1B\"\nassert solution(\"123\\n\") == \"Impossible\""
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n''') == '3'\nassert solution('''5 4\n''') == '25'\nassert solution('''3 3\n''') == '10'\nassert solution('''3 2\n''') == '4'\nassert solution('''4 5\n''') == '10'"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\nassert solution(\"20 5\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\nassert solution(\"1 10\") == \"9\"\nassert solution(\"3.5 2\") == \"0\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\n\"\"\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '3'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\nassert solution('100 100') == '529495593011833'\n\"\"\""
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\n\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nassert solution('5 5\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '0'\nassert solution('7 7\\n0 0 0 1 2 3 4\\n1 -1 5\\n2 3\\n4 -2 6\\n5 7\\n6 7') == '2'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nassert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2') == '1'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"6 2\\n1 1 1\\n2 2\\n3 2\\n4 3\\n5 4\\n6 5\\n\") == \"1\"\nassert solution(\"6 2\\n1 2 3\\n2 3 4\\n3 4 5\\n4 5 6\\n5 6 7\\n6 7 8\\n7 8 9\\n8 9 10\\n9 10 11\\n10 11 12\\n\") == \"0\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n0 2 -3 1\\n1 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"3 3\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\") == \"1\"\nassert solution(\"2 2\\n0 -3 1\") == \"1\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"5 5\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"2\"\nassert solution(\"2 2\\n0 2\\n1 2\\n2 3\") == \"0\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 0 3') == '1'\nassert solution('4 4') == '0'\nassert solution('2 5 -3 1') == '1'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n') == '1'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 3\n.o\n.o.\no.T\n\"\"\") == \"2\"\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        h, w = map(int, stdin.split())\n        board = [[c for c in stdin] for _ in range(h)]\n        ans = 0\n        for i in range(h):\n            for j in range(w):\n                if board[i][j] == 'o':\n                    for k in range(1, h + 1):\n                        if i + k < h:\n                            if board[i + k][j] == 'o':\n                                ans += 1\n                        if i - k >= 0:\n                            if board[i - k][j] == 'o':\n                                ans += 1\n                        if j + k < w:\n                            if board[i][j + k] == 'o':\n                                ans += 1\n                        if j - k >= 0:\n                            if board[i][j - k] == 'o':\n                                ans += 1\n        if ans % 2 == 0:\n            return '2'\n        return '-1'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\nS.o\\n.o.\\no.T\\n\") == \"2\"\nassert solution(\"6 5\\n.o.S.\\no.o.\\no.T\\n.o.T\\no.o.\\no.S\\n\") == \"-1\"\n\"\"\"\n\nfrom collections import Counter\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"2\", \"First test case\"\nassert solution(\"3 3\") == \"1\", \"Second test case\"\nassert solution(\"3 4\") == \"2\", \"Third test case\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"2\"\n\n-----------------\n\nn = int(input())\nS = input()\nQ = int(input())"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 2\") == \"-1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"4\""
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1''') == '1'\nassert solution('''3 2''') == '3'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n\n\n\"\"\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\nprint(solution(input))\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\"\n\n\n\"\"\""
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n''') == '1'\nassert solution('''3 2\n''') == '3'\nassert solution('''199 200\n''') == '200'"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'Aoki'\nassert solution('5 2') == 'Takahashi'\n\n\"\"\"\n\nimport math\nfrom math import ceil"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n5 2') == 'Aoki'\nassert solution('2\\n3 3') == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == 'Aoki'\nassert solution(sample_input_2) == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'Aoki'\nassert solution('3') == 'Takahashi'"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Aoki'\nassert solution('1') == 'Takahashi'\n\n'''\n\nstdin = input()\nn = int(stdin)\na = list(map(int, stdin.split()))\nk_a = [0]*n\nk_b = [0]*n\nk_c = [0]*n\nfor i in range(n):\n    k_a[i] = a[i] % (n + 1)\n    k_b[i] = (a[i] + 1) % (n + 1)\n    k_c[i] = (a[i] + 2) % (n + 1)\nres_a = 0\nres_b = 0\nres_c = 0\nwhile True:\n    for i in range(n):\n        if k_a[i] == k_b[i] == k_c[i]:\n            res_a += 1\n            res_b = 1\n            res_c = 0\n            break\n    if res_a == n:\n        break\n    for i in range(n):\n        if k_b[i] == k_a[i] == k_c[i]:\n            res_b += 1\n            res_a = 0\n            res_c = 0\n            break\n    if res_b == n:\n        break\n    for i in range(n):\n        if k_a[i] == k_b[i] == k_c[i]:\n            res_c += 1\n            res_a = 0\n            res_b = 0\n            break\n    if res_c == n:\n        break\nprint('Aoki' if res_a > res_b else 'Takahashi')"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"2\n5 2\n3 3\n\"\"\") == \"Aoki\"\nassert solution(\n\"\"\"2\n4 3\n1 3\n\"\"\") == \"Takahashi\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"3\\n2 2\\n1 3\") == \"Takahashi\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Aoki\"\nassert solution(\"1\") == \"Takahashi\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3\\n3\\n4\\n5\\n\") == \"Aoki\"\nassert solution(\"2\\n3\\n3\\n4\\n5\\n\") == \"Takahashi\"\n\"\"\"\nimport math\nfrom itertools import combinations_with_replacement\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Aoki'\nassert solution('1') == 'Takahashi'\nassert solution('5') == 'Takahashi'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2\n''') == '0'\nassert solution('''3 3\n''') == '8'\nassert solution('''4 6\n''') == '10'\nassert solution('''4 4\n''') == '4'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n''') == '8'\nassert solution('''\n5 5\n''') == '17'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\""
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n3 2''') == '0'\nassert solution('''3 3\n1 3\n3 2\n2 3''') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n''') == '0'\nassert solution('''3 3\n''') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '0'\nassert solution('2 2\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '-1'\nassert solution('2 3\\n1 2 4 5\\n1 5 6 4\\n') == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"3 2\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2,2]) == '1'\nassert solution([2,2]) == '0'\nassert solution([2,3]) == '-1'\nassert solution([3,4]) == '1'\nassert solution([1,2,3,4,5,6,7,8,9,10,11,12]) == '10'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 2 3 4\n1 5 3 4\n''') == '1'\n\nassert solution('''2 2\n1 2 3 4\n1 5 3 4\n''') == '0'\n\nassert solution('''2 3\n1 2 4 5\n1 2 1 3 2 3\n''') == '-1'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"1\"\nassert solution(input_2) == \"0\"\nassert solution(input_3) == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 3') == '0'\nassert solution('1 2') == '0'\nassert solution('2 1') == '1'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"0\"\nassert solution(\"2 3\\n1 2 3 4\\n1 2 1 3 2 3\\n\") == \"-1\"\nassert solution(\"3 3\\n1 2 3 4\\n1 2 1 3 2 3\\n\") == \"0\"\nassert solution(\"3 4\\n1 2 3 4\\n1 2 1 3 2 3\\n\") == \"-1\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '-1'\nassert solution('2 3') == '0'"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '-1'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '-1'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"12:00\"\nassert solution(\"24\") == \"12:00\"\n\nassert solution(\"12\") == \"12:00\"\nassert solution(\"24\") == \"12:00\"\n\nassert solution(\"24\") == \"12:00\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('24') == '07:09'\nassert solution('12') == '17:30'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == '1:0'\nassert solution('24') == '2:0'\nassert solution('99') == '17:99'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"12:00\"\nassert solution(\"24\") == \"00:00\"\nassert solution(\"99:99\") == \"09:09\""
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''24\n17:30\n''') == '17:30'\nassert solution('''12\n17:30\n''') == '07:30'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('24') == '99:99'\nassert solution('12') == '17:30'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"17:30\"\nassert solution(input()) == \"07:09\"\nassert solution(input()) == \"17:00\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"09:09\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == '12'\nassert solution('24') == '00'\nassert solution('99') == '99'\n\n\"\"\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '00:00'\nassert solution('24') == '00:00'\nassert solution('17:30') == '17:30'\nassert solution('99:99') == '09:09'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n2\n1 2 1\n2 3 1\n3 1 1\n''') == '6', 'TEST CASE 1 FAILED!'\nassert solution('''5 2\n1 2\n2 3\n3 4\n4 2\n''') == '2', 'TEST CASE 2 FAILED!'"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r'''5 2\n1 2 1\n2 3 1\n3 1 1\n1 4 1\n4 3''') == '6'"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 4') == '1'\nassert solution('3 4') == '0'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4 4\\n\"\n    \"1 2 1\\n\"\n    \"2 3 1\\n\"\n    \"3 1 1\\n\"\n    ) == \"6\"\nassert solution(\n    \"6 5\\n\"\n    \"4 1 1\\n\"\n    \"2 2 1\\n\"\n    \"3 2 1\\n\"\n    \"5 1 1\\n\"\n    \"3 1 1\\n\"\n    \"2 3 1\\n\"\n    \"2 3 1\\n\"\n    \"1 2 1\\n\"\n    \"2 2 1\\n\"\n    ) == \"3\"\nassert solution(\n    \"10 20\\n\"\n    \"1 3 5\\n\"\n    \"2 4 5\\n\"\n    \"3 6 5\\n\"\n    \"4 7 5\\n\"\n    \"5 7 5\\n\"\n    \"6 8 5\\n\"\n    \"7 9 5\\n\"\n    \"8 9 5\\n\"\n    \"9 9 5\\n\"\n    \"1 2 2\\n\"\n    \"2 3 2\\n\"\n    \"3 4 2\\n\"\n    \"4 5 2\\n\"\n    \"5 6 2\\n\"\n    \"6 7 2\\n\"\n    \"7 8 2\\n\"\n    \"8 9 2\\n\"\n    \"9 10 2\\n\"\n    \"1 3 2\\n\"\n    \"2 4 2\\n\"\n    \"3 5 2\\n\"\n    \"4 6 2\\n\"\n    \"5 7 2\\n\"\n    \"6 8 2\\n\"\n    \"7 9 2\\n\"\n    \"8 10 2\\n\"\n    \"9 11 2\\n\"\n    \"10 12 2\\n\"\n    \"1 4 2\\n\"\n    \"2 5 2\\n\"\n    \"3 6 2\\n\"\n    \"4 7 2\\n\"\n    \"5 8 2\\n\"\n    \"6 9 2\\n\"\n    \"7 10 2\\n\"\n    \"8 11 2\\n\"\n    \"9 12 2\\n\"\n    \"10 13 2\\n\"\n    \"1 5 2\\n\"\n    \"2 6 2\\n\"\n    \"3 7 2\\n\"\n    \"4 8 2\\n\"\n    \"5 9 2\\n\"\n    \"6 10 2\\n\"\n    \"7 11 2\\n\"\n    \"8 12 2\\n\"\n    \"9 13 2\\n\"\n    \"10 14 2\\n\"\n    \"1 6 2\\n\"\n    \"2 7 2\\n\"\n    \"3 8 2\\n\"\n    \"4 9 2\\n\"\n    \"5 10 2\\n\"\n    \"6 11 2\\n\"\n    \"7 12 2\\n\"\n    \"8 13 2\\n\"\n    \"9 14 2\\n\"\n    \"10 15 2\\n\"\n    \"1 7 2\\n\"\n    \"2 8 2\\n\"\n    \"3 9 2\\n\"\n    \"4 10 2\\n\"\n    \"5 11 2\\n\"\n    \"6 12 2\\n\"\n    \"7 13 2\\n\"\n    \"8 14 2\\n\"\n    \"9 15 2\\n\"\n    \"10 16 2\\n\"\n    \"1 8 2\\n\"\n    \"2 9 2\\n\"\n    \"3 10 2\\n\"\n    \"4 11 2\\n\"\n    \"5 12 2\\n\"\n    \"6 13 2\\n\"\n    \"7 14 2\\n\"\n    \"8 15 2\\n\"\n    \"9 16 2\\n\"\n    \"10 17 2\\n\"\n    \"1 11 2\\n\"\n    \"2 12 2\\n\"\n    \"3 13 2\\n\"\n    \"4 14 2\\n\"\n    \"5 15 2\\n\"\n    \"6 16 2\\n\"\n    \"7 17 2\\n\"\n    \"8 18 2\\n\"\n    \"9 19 2\\n\"\n    \"10 20 2\\n\"\n    \"1 15 2\\n\"\n    \"2 16 2\\n\"\n    \"3 17 2\\n\"\n    \"4 18 2\\n\"\n    \"5 19 2\\n\"\n    \"6 20 2\\n\"\n    \"7 21 2\\n\"\n    \"8 22 2\\n\"\n    \"9 23 2\\n\"\n    \"10 24 2\\n\"\n    \"1 23 2\\n\"\n    \"2 24 2\\n\"\n    \"3 25 2\\n\"\n    \"4 26 2\\n\"\n    \"5 27 2\\n\"\n    \"6 28 2\\n\"\n    \"7 29 2\\n\"\n    \"8 30 2\\n\"\n    \"9 31 2\\n\"\n    \"10 32 2\\n\"\n    \"1 31 2\\n\"\n    \"2 32 2\\n\"\n    \"3 33 2\\n\"\n    \"4 34 2\\n\"\n    \"5 35 2\\n\"\n    \"6 36 2\\n\"\n    \"7 37 2\\n\"\n    \"8 38 2\\n\"\n    \"9 39 2\\n\"\n    \"10 40 2\\n\"\n    \"1 37 2\\n\"\n    \"2 38 2\\n\"\n    \"3 39 2\\n\"\n    \"4 40 2\\n\"\n    \"5 41 2\\n\"\n    \"6 42 2\\n\"\n    \"7 43 2\\n\"\n    \"8 44 2\\n\"\n    \"9 45 2\\n\"\n    \"10 46 2\\n\"\n    \"1 45 2\\n\"\n    \"2 46 2\\n\"\n    \"3 47 2\\n\"\n    \"4 48 2\\n\"\n    \"5 49 2\\n\"\n    \"6 50 2\\n\"\n    \"7 51 2\\n\"\n    \"8 52 2\\n\"\n    \"9 53 2\\n\"\n    \"10 54 2\\n\"\n    \"1 53 2\\n\"\n    \"2 54 2\\n\"\n    \"3 55 2\\n\"\n    \"4 56 2\\n\"\n    \"5 57 2\\n\"\n    \"6 58 2\\n\"\n    \"7 59 2\\n\"\n    \"8 60 2\\n\"\n    \"9 61 2\\n\"\n    \"10 62 2\\n\"\n    \"1 61 2\\n\"\n    \"2 62 2\\n\"\n    \"3 63 2\\n\"\n    \"4 64 2\\n\"\n    \"5 65 2\\n\"\n    \"6 66 2\\n\"\n    \"7 67 2\\n\"\n    \"8 68 2\\n\"\n    \"9 69 2\\n\"\n    \"10 70 2\\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n2\n1 2 1\n2 3 1\n3 1 1\n''') == '6'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\") == '3'\nassert solution(\"2 3 1\") == '6'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1\\n\") == \"6\""
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 2\n1 3 3\n2 3 4\n2 4 2\n3 4 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5 7\n1 2 1\n1 3 1\n1 4 1\n2 3 1\n2 4 1\n3 4 1\n3 5 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 7\n1 2 2\n2 3 1\n1 4 1\n2 4 2\n3 4 3\n4 5 1\n5 6 1\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 1\n2 5\n3 3\n3 6\n5 6''') == '5'\nassert solution('''1\n0''') == '0'\nassert solution('''6\n3 2 2 2 1 1\n''') == '-1'"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n2 0 3 0 1 1\n''') == '5'\n\nassert solution('''6\n0 0 0 0 1 1\n''') == '0'\n\nassert solution('''6\n0 0 0 0 1 1\n''') == '-1'\n\nassert solution('''3\n3 2 2\n''') == '0'\n\nassert solution('''6\n3 2 2 2 1 1\n''') == '-1'"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n0 0 3 0 1 1\n''') == '5'\nassert solution('''\n6\n2 0 3 0 1 1\n''') == '-1'\nassert solution('''\n5\n2 1\n2 5\n3 3\n3 6\n5 6\n''') == '2 1'\nassert solution('''\n4\n0 0 0 0\n1 1 1 1\n2 2 2 2\n3 3 3 3\n''') == '-1'\n'''\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n2 0 3 0 1 1\") == \"5\\n2 1\"\nassert solution(\"1\\n0\") == \"0\"\nassert solution(\"6\\n3 2 2 2 1 1\") == \"-1\"\n\nfor i in range(1,10):\n    print(i)"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 3 2 2 1 1') == '-1'\nassert solution('6\\n2 0 3 0 1 1') == '5\\n2 1'\nassert solution('6\\n3 2 2 2 1 1') == '4\\n3 3'\nassert solution('6\\n3 2 2 2 1 1') == '5\\n3 3'\nassert solution('6\\n3 2 2 2 1 1') == '5\\n3 3'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n2 0 3 0 1 1\n''') == '5'\nassert solution('''\n1\n0\n''') == '0'\nassert solution('''\n6\n3 2 2 2 1 1\n''') == '-1'"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '-1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\n2 0 3 0 1 1\n''') == '5'\nassert solution('''1\n0\n''') == '0'\nprint(solution('''6\n3 2 2 2 1 1\n'''))\n\n## Write your code here\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 8') == '2'\nassert solution('3 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10\\n12 20\") == \"2\"\nassert solution(\"3 10\\n10 20 30\") == \"1\"\nassert solution(\"4 10\\n10 20 30 40\") == \"1\"\nassert solution(\"5 10\\n10 20 30 40 50\") == \"1\"\n\nsolution(\"6 10\\n10 20 30 40 50 60\") == \"0\"\nsolution(\"7 10\\n10 20 30 40 50 60 70\") == \"0\"\nsolution(\"8 10\\n10 20 30 40 50 60 70 80\") == \"0\"\nsolution(\"9 10\\n10 20 30 40 50 60 70 80 90\") == \"0\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 8') == '2'\nassert solution('3 10') == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10') == '1'\nassert solution('2 8') == '2'"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 8') == '2'\nassert solution('3 10') == '1'"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 8\n12 20''') == \"2\"\nassert solution('''3 10\n10 20 30''') == \"1\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 8]) == '2'\nassert solution([3, 10]) == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 8\n12 20\n''') == \"2\"\nassert solution('''\n3 10\n10 20 30\n''') == \"1\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 8\") == \"2\"\nassert solution(\"3 10\") == \"1\"\nassert solution(\"1000000000\") == \"0\"\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 10\n10 20 30\n''') == '2'\n\nassert solution('''\n3 8\n12 20\n''') == '2'"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('100 1000') == '11.547005383792516398'\nassert solution('-50 0') == '2.48266601693271124'\nassert solution('50 0') == '2.48266601693271124'\nassert solution('-3 0') == '2.48266601693271124'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('100 1000') == '11.547005383792516398'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == '3.729935587093555327'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('0 0 0 1000') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3.729935587093555327'\nassert solution() == '11.547005383792516398'\nassert solution() == '0.9994522841559049911'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('3 2') == '1.120900697751839037'\nassert solution('-1 -1') == '1.120900697751839037'\nassert solution('-1 0') == '1.120900697751839037'"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3.729935587093555327\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3.729935587093555327'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('3 2') == '1.783290175067552372'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3.729935587093555327'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n10\n2\n1 2''') == 'Second'\nassert solution('''1\n1\n10\n2\n1 2''') == 'First'\nassert solution('''2\n1\n10\n2\n1 2''') == 'First'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Second\"\nassert solution(\"3\") == \"Second\"\nassert solution(\"12\") == \"Second\"\nassert solution(\"123\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'First'\nassert solution('1') == 'Second'\nassert solution('2') == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second\\n'\nassert solution('''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'First\\n'\nassert solution('''\n4\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'First\\n'\nassert solution('''\n5\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second\\n'\n'''\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"First\"\nassert solution(\"10\") == \"Second\"\nassert solution(\"2\") == \"Second\"\nassert solution(\"1 2\") == \"First\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second\\nFirst\\nSecond'\nassert solution('''\n3\n1\n10\n2\n1 2\n21\n
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n1''') == 'First'\nassert solution('''2\n1\n2''') == 'Second'\nassert solution('''3\n1\n2\n2''') == 'Second'\nassert solution('''3\n2\n2\n1''') == 'First'\nassert solution('''4\n3\n3\n3\n3\n3''') == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"First\"\nassert solution(\"1 2\") == \"Second\"\nassert solution(\"2 1\") == \"First\"\nassert solution(\"2 21\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1\\n10\\n2\\n1 2') == 'Second'\nassert solution('5\\n1\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n1\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n1\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n1\\n21\\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\\n2\\n1 2') == 'First'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 2\n4 3 1 5 2''') == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 2') == '1'\nassert solution('1') == '0'\nassert solution('1 2') == '1'\nassert solution('5 2') == '1'\nassert solution('5 3 4 2') == '2'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"5 4 1 2\") == \"0\"\nassert solution(\"6 7 3 5 4\") == \"1\"\nassert solution(\"6 8 3 4 7 5\") == \"1\"\nassert solution(\"6 7 3 5 4 8\") == \"0\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3 2\n4 3 1 5 2''') == '1'"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\") == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"1\"\nassert solution(\"4 4 4 5 5 5 6 7\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"5 3 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string=\"5 3 2\") == \"1\"\nassert solution(input_string=\"1 3 2\") == \"1\"\nassert solution(input_string=\"1 1 2\") == \"0\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''3 2''') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\nprint(solution(input()))"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"1\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 2\n''') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 1]) == 1\nassert solution([3, 2]) == 24\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 2\n''') == '24'\nassert solution('''\n3 5\n''') == '81'"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2\\n') == '6\\n'\nassert solution('4 4\\n') == '3\\n'\nassert solution('7 3\\n') == '1196\\n'\nassert solution('31 8\\n') == '64921457\\n'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 2\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n4 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n7 3\n\"\"\") == \"1196\"\n\nassert solution(\"\"\"\n31 8\n\"\"\") == \"64921457\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '6'\n\nassert solution('4 4') == '3'\n\nassert solution('7 3') == '1196'\n\n\"\"\"\n\nfrom collections import deque, defaultdict"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\n\nassert solution() == \"6\"\n\nassert solution() == \"1196\"\n\nassert solution() == \"64921457\"\n\nassert solution() == \"84217957\""
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n''') == '6'\nassert solution('''4 4\n''') == '3'\nassert solution('''7 3\n''') == '1196'\nassert solution('''31 8\n''') == '64921457'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '3'\nassert solution('31 8') == '64921457'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\n\nUse 'py -3 simple_testing.py' to test your code.\n\"\"\""
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '3'\nassert solution('31 8') == '64921457'\nassert solution('31 10') == '53743528'\n\"\"\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\nassert solution('31 8') == '64921457'\n\n\n\"\"\""
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 2') == '#.X#\\nX.#.\\n#...\\n'\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 4 2\"\n    ) == \"\\n#.X#\\nX.#.\\n#...\\n\"\n\nassert solution(\n    \"5 4 5\"\n    ) == \"\\n#XXX\\n#X#.\\nX#..\\n...#\\n#.#.#\"\n\nassert solution(\n    \"1 2 2\"\n    ) == \"\\n.XX\\n#.X\\n.X#\\n\"\n\nprint(\"Solution 1: PASSED\")\n\nassert solution(\n    \"2 2 2\"\n    ) == \"\\n.XX\\n#.X\\n.X#\\n\"\n\nprint(\"Solution 2: PASSED\")\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 2') == '#.X#\\nX.#.\\n#...\\n#.XX'\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 2') == '#.X#\\nX.#.\\n#...'\nassert solution('5 4 5') == '#X#.\\n#X#.\\n#.X#\\n#..X\\n#.X#'"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 4 2\\n\"\n    \"#..#\\n\"\n    \"#..#\\n\"\n    \"#...\\n\"\n    ) == \"X#.\\nX#..\\nX#..\\nX#..\\n\"\nassert solution(\n    \"5 4 5\\n\"\n    \"#...\\n\"\n    \"#.#.\\n\"\n    \"#.#.\\n\"\n    \"#.#.\\n\"\n    ) == \"X#X.\\nX#X#.\\nX#X#.\\nX#X#.\\nX#X#.\\n\""
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 5') == '#X#.X#'"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4 2\") == \"######\\n#.X#\\n#.#.\\n######\"\nassert solution(\"5 4 5\") == \"#####.\\n#X#.\\n#.#.#\\n#...#\\n######\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 2\") == \"X.X\\nX.#\\nX#X\"\nassert solution(\"5 4 5\") == \"X.X\\nX#.\\nX..\\n...\\n#.#\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\"\n) == \"1\"\nassert solution(\n    \"3\"\n) == \"2\"\n\nassert solution(\n    \"5\"\n) == \"4\"\nassert solution(\n    \"1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\"\n) == \"4\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 1\n''') == '1'\nassert solution('''5\n1 2 2 2\n''') == '3'\nassert solution('''18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '4'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 1\n''') == '1'\nassert solution('''\n5\n1 2 2 2\n''') == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n') == '1'\nassert solution('5\\n1 2 2 2\\n') == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 2 2\") == \"3\"\nassert solution(\"18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\") == \"4\""
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 1\n''') == '1'\nassert solution('''\n5\n1 2 2 2\n''') == '3'\nassert solution('''\n18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '4'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 1''') == '1'\n\nassert solution('''5\n1 1 1 4 4 3 2 2 2 2 10 8 9 9 9 10 10 4''') == '4'"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"4 3 1 5 2\"\n\"\"\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3,4,2,5,1,3,6,7]) == '4 2 6 1 5 3 7'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"10 5 3 2\") == \"-1\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"4 3 1 5 2\"\nassert solution(\"4 6 3 2\") == \"4 3 3 2 6\"\nassert solution(\"5 2 4 1 3\") == \"5 2 4 3 1\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'\nassert solution('10 3 6') == '-1'"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '1 4 3 2'\nassert solution('5 3 2') == '-1'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 2\n\n''') == '3 4 1 5 2'\nassert solution('''5 3 2\n\n''') == '2 4 1 3 5'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 2\") == \"3 2 1\"\nassert solution(\"4 3 2\") == \"3 4 2 1\"\nassert solution(\"4 3 1\") == \"3 4 1 2\"\nassert solution(\"5 5 2\") == \"3 5 1 4 2\""
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"5\",\"3\",\"2\",\"\"]) == \"4 3 1 5 2\""
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1 3 2'\nassert solution('5 3 2') == '1 2 3 5'"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n6\n9\n18 36 108\n''') == 'Yes'\nassert solution('''2\n7\n17\n''') == 'No'\nassert solution('''9\n4 8 10 12 15 18 33 44 81\n''') == 'Yes'\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"Yes\"\nassert solution([3,6,9,18,36,108]) == \"Yes\"\nassert solution([4,8,10,12,15,18,33,44,81]) == \"Yes\"\nassert solution([7,17]) == \"No\"\nassert solution([9,4,8,10,12,15,18,33,44,81]) == \"No\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n3 6 9 18 36 108') == 'Yes'\nassert solution('2\\n7 17') == 'No'\nassert solution('9\\n4 8 10 12 15 18 33 44 81') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n3 6 9 18 36 108\n\n2\n7 17\n\n3\n4 8 10 12 15 18 33 44 81\n\n9\n4 8 10 12 15 18 33 44 81''') == 'Yes'\nassert solution('''8\n1 4 3 6 2 7 5 8 9\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15''') == 'Yes'\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 6 9 18 36 108\n''') == 'Yes'\n\nassert solution('''\n2\n7 17\n''') == 'No'\n\nassert solution('''\n9\n4 8 10 12 15 18 33 44 81\n''') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3 6 9 18 36\n2 7 17''') == \"Yes\"\nassert solution('''9\n4 8 10 12 15 18 33 44 81\n2 7 17''') == \"No\"\nassert solution('''7\n2 4 8 6\n2 3 6''') == \"No\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"No\"\n\n\"\"\"\nfrom itertools import product"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 -6 4 5 3\n''') == '12'\nassert solution('''\n3\n1 2 -6 4 5\n''') == '9'\nassert solution('''\n10\n-1 2 -6 4 5 3 -8''') == '100'\nassert solution('''\n20\n-1 2 -6 4 5 3 -8 0 -1''') == '0'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"10\"\nassert solution(\"4\") == \"5\"\nassert solution(\"15\") == \"11\"\nassert solution(\"3\") == \"6\""
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '12'\nassert solution('9') == '45'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"12\"\nassert solution(\"3\") == \"6\"\nassert solution(\"8\") == \"24\"\nassert solution(\"10\") == \"28\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"2 2 -6 4 5 3\") == \"12\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '0'\nassert solution('6') == '12'\nassert solution('10') == '23'\nassert solution('12') == '41'\nassert solution('16') == '55'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 2 -6 4 5 3\n''') == '12'\nassert solution('''\n3\n1 2 -5 3\n''') == '15'\nassert solution('''\n6\n1 2 -6 4 5 3\n''') == '12'\nassert solution('''\n12\n1 2 -5 3\n''') == '15'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2 4 -6''') == '12'\nassert solution('''\n1\n2 3 4''') == '4'\nassert solution('''\n2\n3 4''') == '5'\nassert solution('''\n6\n7 8 9 10 11''') == '29'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 -6 4 5 3') == '12'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '12'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 1, 4, 2]) == 5\n\nassert solution([3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n3 1 4 2\") == \"5\"\nassert solution(\"2 2\\n1 1\") == \"2\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '5'\nassert solution('4 3') == '5'\nassert solution('6 5') == '5'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\n3 1 4 2') == '5'\nassert solution('6 1\\n1 2 3 4 5 2\\n') == '6'\nprint(solution(input()))\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '5'\nassert solution('12 1') == '12'\nassert solution('13 1') == '13'\nassert solution('1 2 3') == '4'\nassert solution('3 4 1') == '4'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 5\n\"\"\""
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n3 1 4 2') == \"5\"\nassert solution('4 3\\n3 1 4 2') == \"5\"\nassert solution('5 3\\n3 1 4 2') == \"4\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '5'\nassert solution('10 20 30 40 50 60') == '8'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0 0\"\nassert solution(\"3\\n3 2 1\\n\") == \"2 1\"\nassert solution(\"3\\n3 2 1\\n\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == (\"0 0\", \"0\")\nassert solution(\"3\") == (\"0 1\", \"1\")\nassert solution(\"3\") == (\"2 1\", \"1\")\n\nimport itertools\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 3 1\n''') == '0 0'\nassert solution('''\n3\n3 2 1\n''') == '0 1'\nassert solution('''\n3\n1 2 3\n''') == '0 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2 3\n''') == '0 0'\nassert solution('''\n3\n2 3 1\n''') == '0 1'\nassert solution('''\n3\n3 2 1\n''') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"0 0\"\nassert solution(\"3\") == \"0 1\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"3\") == \"0 1\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3 2 1\") == \"0 0\"\nassert solution(\"3\\n3 2 1\") == \"2 1\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0 0\"\nassert solution(\"3\") == \"0 1\"\nassert solution(\"3\") == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 3\n''') == '0 0'\nassert solution('''3\n2 3 1\n''') == '0 1'\nassert solution('''3\n3 2 1\n''') == '2 1'\nassert solution('''3\n3 2 1\n''') == '0 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '0 0'\nassert solution('3 2 1') == '0 1'\nassert solution('3 2 1') == '1 1'\nassert solution('3 2 1') == '1 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3 2 1') == '0 1'\nassert solution('3\\n1 2 3') == '0 0'\nassert solution('3\\n3 2 1') == '1 1'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4\naa\nbb''') == '6'\nassert solution('''3 3\naba\nbba''') == '8'\nassert solution('''4 5\nabbb\nbaaa''') == '8'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == 6\nassert solution(\"3 3\") == 8\nassert solution(\"4 5\") == 8\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 5\naaaa\naaaab\naaaaa\naaaaaa\naaaaaaaa\naaaaaaaaa\naaaaaaaaaa\n''') == '8'\nprint(solution('''5 3\nabcdef\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(inp) == out"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\\naa\\nb\") == \"6\"\nassert solution(\"3 3\\naba\\nb\") == \"8\"\nassert solution(\"4 5\\nabbb\\nbaaa\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(test_input_1) == test_output_1\nassert solution(test_input_2) == test_output_2\nassert solution(test_input_3) == test_output_3\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 4\") == \"6\"\nassert solution(\"3 3\") == \"8\"\nassert solution(\"4 5\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\\naa\\nbb\") == \"6\"\nassert solution(\"3 3\\naba\\nbaa\\n\") == \"8\"\n\n\n'''\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 4\naa\nbb\n''') == '6'\nassert solution('''3 3\naba\nbba\n''') == '8'\nassert solution('''4 5\nabbb\nbaaa\n''') == '8'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 0\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == 'YES'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n''') == 'YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 1 1\") == \"YES\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'YES'\nassert solution('''\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\nassert solution('''\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\nassert solution('''\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n''') == \"YES\"\nassert solution('''\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"NO\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 3 6 7\n\n5\n6 15 35 77 22\n\n5\n6 10 15 1000 75\n\n''') == 'YES'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 6 7') == 'YES'\nassert solution('5 6 15 35 77 22') == 'YES'\nassert solution('5 6 10 15 1000 75') == 'NO'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == \"YES\", \"Test #1\"\nassert solution('5') == \"NO\", \"Test #2\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4\\n\"\n    \"2 3 6 7\"\n) == \"YES\"\nassert solution(\n    \"5\\n\"\n    \"6 15 35 77 22\"\n) == \"NO\"\nassert solution(\n    \"5\\n\"\n    \"6 10 15 1000 75\"\n) == \"YES\""
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n3\n6\n7''') == 'YES'\nassert solution('''5\n6\n10\n15\n35\n77\n22''') == 'YES'\nassert solution('''5\n6\n10\n15\n35\n77''') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4\\n\"\n    \"2 3 6 7\\n\"\n) == \"YES\\n\"\n\nassert solution(\n    \"5\\n\"\n    \"6 10 15 1000 75\\n\"\n) == \"NO\\n\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n60\\n70\\n') == '40'\nassert solution('110\\n60\\n70\\n') == '5'\nassert solution('100\\n60\\n70\\n') == '0'"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n100\n60\n70\n''') == '40'\nassert solution('''\n410\n55\n70\n''') == '5'\nassert solution('''\n600\n60\n70\n''') == '0'\nprint(solution('''\n10\n55\n70\n'''))"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''100\n60\n70''') == '40'\nassert solution('''410\n55\n70''') == '5'\nassert solution('''600\n60\n70''') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"40\"\nassert solution(input()) == \"5\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"100\") == \"40\"\nassert solution(\"410\") == \"5\"\nassert solution(\"600\") == \"0\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"40\"\nassert solution(\"410\") == \"5\"\nassert solution(\"600\") == \"0\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n60\n70''') == '40'\nassert solution('''410\n55\n70''') == '5'\nassert solution('''600\n60\n70''') == '0'\nassert solution('''1000\n60\n70''') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n100\n60\n70\n''') == '40'\nassert solution('''\n410\n55\n70\n''') == '5'\nassert solution('''\n600\n60\n70\n''') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"0\"\nassert solution(\"100\") == \"1\"\nassert solution(\"410\") == \"5\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100\\n60\\n70') == '40'\nassert solution('410\\n55\\n70') == '5'\nassert solution('600\\n60\\n70') == '0'\nprint(solution(*input()))\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '12'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''12\n3 1 4 1 5 9 2 6 5 3 5 8\n''') == '12\\n3 4\\n1 2 3 5\\n3 1 5 4\\n5 6 8 9\\n'"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3 4\"\nassert solution(input()) == \"1 2 3 5\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == '12'\nassert solution('3 1 4 1 5 9 2 6 5 3 5 8') == '3 4'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == '12'\nassert solution('5') == '1'\nassert solution('10') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '10'"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"6\\n2 2 2 1 3\\n2 2 2 1 3\""
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1 1\n''') == '1'\nassert solution('''5\n1 1 1 1 1\n''') == '1'\nassert solution('''4\n1 1 1 1\n''') == '1'\nassert solution('''6\n3 3 3 3 3 3\n''') == '6'\nassert solution('''8\n3 1 2 3 3 3 3 2\n''') == '5'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"2 4\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\\n1 3 3\") == \"6\"\nassert solution(\"3 1\\n1 2 2\") == \"6\"\n\"\"\"\nimport sys\n\nN, M = map(int, sys.stdin.readline().split())\ncolors = list(map(int, sys.stdin.readline().split()))\n\ndp = [[0 for _ in range(N + 1)] for _ in range(N + 1)]\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1\\n1 3 3') == '6'\n\"\"\"\nn, m = list(map(int, input().split()))\nsqrs = [[int(i) for i in input().split()] for _ in range(n)]\n\ncolor = {1: 0, 2: 0, 3: 0}\nfor sqr in sqrs:\n    color[sqr[1]] += 1\n\nx = color[1]\ny = color[2]\nz = color[3]"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1\n1 2 1\n''') == '6'\nassert solution('''3 1\n1 2 3\n''') == '4'\nassert solution('''3 1\n1 2 3\n''') == '3'\nassert solution('''3 2\n1 2 3\n''') == '7'\nassert solution('''4 1\n1 2 3\n''') == '5'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1\n1 3 3\n''') == '6'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '6'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"3 3\") == \"14\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"3 1\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '6'\nassert solution('10 3') == '3628800'"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 1\n1 3 3\n\n''') == '6'\nprint(solution(input()))"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 1\n1 3 3\n''') == '6'\nassert solution('''3 1\n1 3 3\n''') == '5'\nassert solution('''5 1\n1 3 3\n''') == '6'\n\nassert solution('''6 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '32'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '10'\nassert solution('87654') == '10'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"123\") == \"123\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"123456789\") == \"123456789\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '10'\nassert solution('87654') == '10'\nassert solution('87654') == '10'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"-1\"\nassert solution(\"-1\") == \"-1\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n7''') == '-1'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n2\n''') == '-1'\nassert solution('''4\n8\n''') == '-1'\nassert solution('''5\n3\n''') == '2'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('87654') == '10'\nassert solution('30') == '-1'\nassert solution('1000') == '-1'"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '-1'\nassert solution('10') == '10'\nassert solution('12345') == '-1'\nassert solution('123456') == '-1'\nassert solution('12') == '1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"100\") == \"100\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"-1\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"First\"\n\"\"\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aba') == 'Second'\nassert solution('abcd') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaaa\") == \"First\"\nassert solution(\"cc\") == \"Draw\"\n\"\"\"\n\nfrom collections import Counter"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'Second'\nassert solution('aba') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaa\") == \"First\"\nassert solution(\"abaacb\") == \"Second\""
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aa\") == \"First\"\nassert solution(\"aaa\") == \"First\"\nassert solution(\"aaba\") == \"Second\"\nassert solution(\"aabb\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaba\") == \"First\"\nassert solution(\"aa\") == \"First\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"aaab\") == \"First\"\nassert solution(\"aaabb\") == \"First\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'First'\nassert solution('a') == 'Second'\nassert solution('aba') == 'Second'\nassert solution('abca') == 'Second'\nassert solution('abaab') == 'Second'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"hgfdgdf\") == \"First\"\n\n\"\"\"\n\ns = input()"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 4\n1 5\n6 7\n''') == '6'\nassert solution('''\n7\n146860712476154256693517807034340708077655267643688295471781449149635583965154936751679021289322565237002123456789\n156830661548564539298724081522117224180151383100594617968508518888524110551447158516497751185797498568034357219251899800590086754077\n''') == '12'\nassert solution('''\n16\n166693739450265593058821846793988045802697849282236814583375861844909990203944602741195595151194136717203987731798762090872436581829669589614721331119256324406759600691223\n''') == '8'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"40\"\nassert solution(\"\"\"\n1\n1\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n1\"\"\") == \"0\"\nassert solution(\"\"\"\n100\n4\"\"\") == \"20\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16') == '40'\nassert solution('10') == '6'\nassert solution('12345') == '6'\nassert solution('439873893693495623498263984765') == '40'\nassert solution(''.join(stdin.split())) == '40'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '40'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '8'\nassert solution('12') == '4'\nassert solution('11') == '3'\nassert solution('13') == '2'"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('10') == '2'\nassert solution('100') == '2'\nassert solution('1') == '1'\nassert solution('0') == '1'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"6\"\nassert solution(\"12345\") == \"6\"\nassert solution(\"439873893693495623498263984765\") == \"40\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2''') == '4'\nassert solution('''\n10\n12''') == '6'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"6\"\nassert solution(\"16\") == \"40\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '332748119'"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\n\nassert solution('''\n1 2\n1\n1\n''') == '3'\n\nprint(solution(input()))"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '332748119'\nassert solution('''1 2\n1\n1''') == '3'\nassert solution('''3 3\n0 1 1\n4 3 5\n\n''') == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"332748119\"\nassert solution(\"1 2\") == \"332748119\""
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '332748119'\nassert solution('''1 2\n1\n1''') == '3'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119'\nassert solution('1 2\\n1\\n1\\n') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '3'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '332748119'\nassert solution('''1 2\n1\n1''') == '3'\nassert solution('''3 3\n0 1 1\n4 3 5\n\nOutput\n160955686\n185138929\n974061117''') == '160955686'\n\n\n'''\nstdin = '''2 1\n0 1\n2 1'''\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '332748119'\nassert solution(input_) == '185138929'\nassert solution(input_) == '974061117'"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\nassert solution('''\n1 2\n1\n1\n''') == '3'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AA') == 'A'\nassert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OZ') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'OZ'\nassert solution('OZ') == '0'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AA') == 'AA'\nassert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'OZ'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'ORZ'\nassert solution('OZ') == 0"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin) == \"ORZ\"\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    'AJKEQSLOBSROFGZ'\n    'OVGURWZLWVLUXTH'\n    'OZ'\n) == 'ORZ'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"AA\") == \"0\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'ORZ'\nassert solution('OZ') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''AA\nA\nA\n\n''') == 'AA'\nassert solution('''AA\nA\nAA\n\n''') == 'AA'\nassert solution('''AA\nA\nAA\n\n''') == 'AA'\nassert solution('''AA\nA\nAA\n\n''') == 'AA'\nassert solution('''AA\nA\nAA\n\n''') == 'AA'\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100\\n') == '99\\n'\nassert solution('100 100 100\\n1 1 1\\n1 1 1\\n') == '0\\n'\nprint('Tests passed')"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(\"input.txt\", \"r\")) == \"99\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\") == \"99\"\nassert solution(\"1 100 1\") == \"0\"\nassert solution(\"100 100 100\") == \"0\"\nassert solution(\"1 1 1\") == \"99\"\nassert solution(\"1 1 1\") == \"99\"\n\"\"\""
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\") == \"99\"\nassert solution(\"1 100 1\") == \"0\"\nassert solution(\"1 100 100\") == \"0\"\nassert solution(\"1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('1 100 1') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 1\n1 100 1\n1 100 100\n''') == '99'\nassert solution('''\n100 100 100\n1 1 1\n1 1 1\n''') == '0'\nassert solution('''\n1 1 1\n1 100 1\n1 100 100\n''') == '0'\nassert solution('''\n100 100 100\n100 100 100\n''') == '0'\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('1 100 1') == '0'\nassert solution('1 100 100') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\\n\") == \"99\"\nassert solution(\"1 2 1\\n1 100 1\\n1 100 100\\n\") == \"0\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\\n\") == \"0\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\\n\") == \"99\"\n\n\"\"\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\") == '99'\nassert solution(\"1 100 1\") == '0'\nassert solution(\"1 100 100\") == '0'\nassert solution(\"100 100 100\") == '0'\nassert solution(\"1 1 1\") == '0'\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == '99'\nassert solution(\"1 100 1\") == '0'\nassert solution(\"100 100 100\") == '0'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 100\") == \"0\"\nassert solution(\"1 1000\") == \"0\"\nassert solution(\"1 1000000\") == \"1\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1', \"first\"\nassert solution('3 2') == '1', \"second\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('1000000000000 1048576') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 2\n''') == '1'\nassert solution('''\n3 3\n''') == '0'\nassert solution('''\n1000000000000 1048576\n''') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 1\"\n) == \"1\"\nassert solution(\n    \"3 2\"\n) == \"1\"\nassert solution(\n    \"3 3\"\n) == \"0\"\nassert solution(\n    \"1000000000000 1048576\"\n) == \"118606527258\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"1000000000000 1048576\") == \"118606527258\""
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n1 2\n''') == '0'\nassert solution('''\n2 2\n''') == '0'\nassert solution('''\n1000000000000 1048576\n''') == '1186606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1 1\n    ''') == '1'\nassert solution('''\n    1 2\n    ''') == '1'\nassert solution('''\n    1 3\n    ''') == '0'\nassert solution('''\n    2 2\n    ''') == '1'\nassert solution('''\n    2 3\n    ''') == '0'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n10000000 1000000\n''') == '118606527258'\nassert solution('''\n100000 100000\n''') == '0'\nassert solution('''\n100000 100000\n''') == '0'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"+-\") == \"No\"\nassert solution(\"++\") == \"Yes\"\nassert solution(\"-++\") == \"Yes\"\nassert solution(\"+\") == \"Yes\"\nassert solution(\"-\") == \"No\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-') == 'No'\nassert solution('++') == 'Yes'\nassert solution('-+') == 'No'\nassert solution('-++') == 'No'\nassert solution('++-') == 'Yes'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''+-\n-++-''') == \"No\"\nassert solution('''-\n+--''') == \"Yes\"\nassert solution('''+--''') == \"No\"\nassert solution('''+--\n+--+''') == \"Yes\"\nassert solution('''+--+''') == \"Yes\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+-') == 'No'\nassert solution('++') == 'Yes'\nassert solution('+-++-') == 'Yes'\nassert solution('+-++-++-') == 'No'\nassert solution('+-++-++-++-') == 'Yes'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-') == 'No'\nassert solution('++-') == 'No'\nassert solution('+--+') == 'Yes'\nassert solution('+--+-') == 'Yes'\nassert solution('+--+--') == 'Yes'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('+--') == 'No'\nassert solution('-++') == 'Yes'\nassert solution('++--') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''+-\n\n-++-\n\n++''') == 'Yes'\n\nassert solution('''+\n\n-++\n\n++''') == 'No'\n\nassert solution('''+-\n\n-+''') == 'Yes'\n\nassert solution('''+\n\n-''') == 'No'\n\nassert solution('''+-\n\n-+-''') == 'Yes'"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"++-\") == \"Yes\", \"Wrong answer with inputs {}, {}\".format(\n        \"++-\", solution(\"++-\"))\nassert solution(\n    \"+-\") == \"Yes\", \"Wrong answer with inputs {}, {}\".format(\n        \"+-\", solution(\"+-\"))\nassert solution(\n    \"++\") == \"No\", \"Wrong answer with inputs {}, {}\".format(\n        \"++\", solution(\"++\"))\nassert solution(\n    \"+\") == \"No\", \"Wrong answer with inputs {}, {}\".format(\n        \"+\", solution(\"+\"))\nassert solution(\n    \"\") == \"Yes\", \"Wrong answer with inputs {}, {}\".format(\n        \"\", solution(\"\"))\nprint(\"The local tests are done.\")\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('+-') == 'No'\nassert solution('++') == 'Yes'\nassert solution('+-+') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+-\") == 'No'\nassert solution(\"+-\") == 'No'\nassert solution(\"++\") == 'No'\nassert solution(\"+-\") == 'Yes'\nassert solution(\"++\") == 'Yes'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(INPUT) == OUTPUT\n\"\"\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '12.566370614359172464'"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 0 0\n0 1\n-1 2\n1 2''') == '12.566370614359172464'\n\nassert solution('''4 1 -1\n0 0\n1 2\n2 0\n1 1''') == '21.991148575128551812'"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"12.566370614359172464\"\n\nassert solution(\"4 1 -1\") == \"21.991148575128551812\"\n\n\"\"\""
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 0 0\n0 1\n-1 2\n1 2\n''') == '12.566370614359172464', 'First'\n\nassert solution('''\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n''') == '21.991148575128551812', 'Second'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == stdout_string, \"Should be %s but was %s\" % (stdout_string, solution(input_string))\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 0 0\n0 1\n-1 2''') == '12.566370614359172464'\nassert solution('''4 1 -1\n0 0\n1 2\n2 0\n1 1''') == '21.991148575128551812'''\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\") == \"21.991148575128551812\""
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 0 0\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\") == \"21.991148575128551812\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '12.566370614359172464'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('48\\n') == '9 42'\nassert solution('6\\n') == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''48\n6\n''') == '9 42'\nassert solution('''6\n6\n''') == '6 6'"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2\n4\n1 2\n1\n1 2''') == '11 4'\nassert solution('''4\n1 2\n1\n1 2''') == '2 2'\nassert solution('''4\n1 2\n1\n1 2''') == '2 3'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('48') == '9 42'\nassert solution('6') == '6 6'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"6 6\"\nassert solution(\"48\") == \"9 42\""
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('42') == '6 6'\nassert solution('48') == '9 42'"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 1'\nassert solution('12') == '2 2'\nassert solution('16') == '3 2'\nassert solution('28') == '3 3'\nassert solution('64') == '4 3'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3\n2\n2\n1\n''') == '3 43'\n\nassert solution('''5\n3\n2\n2\n1\n''') == '3 43'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '3 4'\nassert solution('6') == '6 6'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    48\n    ''') == '9 42'\n\nassert solution('''\n    6\n    ''') == '6 6'\n\nassert solution('''\n    1\n    ''') == '1 1'\n\nassert solution('''\n    3\n    ''') == '2 2'\n\nassert solution('''\n    2\n    ''') == '1 1'"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n))\n''') == 'Yes'\n\nassert solution('''\n2\n()\n''') == 'Yes'\n\nassert solution('''\n10\n))\n''') == 'No'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"10\") == \"No\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"())\") == \"Yes\"\nassert solution(\"(())\") == \"Yes\"\nassert solution(\"()())\") == \"Yes\"\nassert solution(\"))())\") == \"Yes\""
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n))\n\n''') == 'Yes'\n\nassert solution('''3\n((\n\n''') == 'No'\n\nassert solution('''10\n))))((((\n\n''') == 'No'\n\nassert solution('''10\n)))\n\nassert solution('''5\n()\n\n''') == 'Yes'"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n())\") == \"Yes\"\nassert solution(\"2\\n(()\") == \"No\"\nassert solution(\"3\\n(()\") == \"Yes\"\nassert solution(\"4\\n((()))\") == \"Yes\"\nassert solution(\"5\\n()())\") == \"Yes\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n2\n)\n''') == 'Yes'\nassert solution(\n'''\n3\n((\n\n''') == 'No'\nassert solution(\n'''\n10\n)))))(((((\n\n''') == 'No'\nassert solution(\n'''\n4\n(()()\n''') == 'Yes'\nassert solution(\n'''\n10\n))(\n''') == 'No'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'Yes'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == 'Yes'\n\"\"\""
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'Yes'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50 50 100\") == \"1\"\nassert solution(\"2 50\\n50 50\") == \"5\"\nassert solution(\"3 100\\n50 50 100\") == \"5\"\nassert solution(\"4 100\\n50 50 100\") == \"3\"\nassert solution(\"5 100\\n50 50 100\") == \"2\""
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 50\\n50 50 100\") == \"1\"\nassert solution(\n    \"2 50\\n50 50\") == \"2\"\nassert solution(\n    \"3 100\\n50 50 100\") == \"5\"\n\n'''"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '1 50\\n50 50\\n') == '1', \"First\"\nassert solution(\n    '2 50\\n50 50\\n') == '5', \"Second\"\n\nprint(solution(\n    '2 50\\n50 50\\n'))\nprint(solution(\n    '3 100\\n50 50 100\\n'))\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 50') == '1'\nassert solution('3 100') == '5'\nassert solution('2 50') == '2'\nassert solution('2 50') == '0'\nassert solution('4 50') == '-1'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 50\n50 50 100\n''') == '1'\n\nassert solution('''\n2 50\n50 50\n''') == '5'\n\nassert solution('''\n3 100\n50 50 100\n''') == '2'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 50\n50 50\n''') == '1'\n\nassert solution('''2 50\n50 50\n''') == '5'\n\nassert solution('''3 100\n50 50 100\n''') == '5'\n\nassert solution('''5 100\n50 50 100\n''') == '2'\n\nassert solution('''1 500\n50 50\n''') == '-1'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 50\n50 50 100''') == '1'\nassert solution('''2 50\n50 50''') == '2'\nassert solution('''3 50\n50 50 100''') == '5'\nassert solution('''5 50\n50 50 100''') == '2'\nassert solution('''6 50\n50 50 100''') == '3'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 50\") == \"1\"\nassert solution(\"3 100\") == \"5\"\nassert solution(\"2 50\") == \"0\"\n\n\n\n\"\"\"\n\nfrom math import floor"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 50\") == \"1\"\nassert solution(\"3 100\") == \"5\"\nassert solution(\"2 50\") == \"2\"\nassert solution(\"4 50\") == \"0\"\nassert solution(\"5 100\") == \"0\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 100\\n50 50 100') == '5'\nassert solution('2 50\\n50 50') == '2'\nassert solution('1 50\\n50 50') == '1'\n\n'''"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"1\""
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '1'\nassert solution('4') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 6 8\\n\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\\n\") == \"4\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n5 7 2 9') == '1'\nassert solution('5\\n2 3 4 9 12') == '2'\nassert solution('3\\n2 6 8') == '2'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3\\n') == '1'\nassert solution('4\\n5 7 2 9\\n') == '4'\nassert solution('3\\n6 8\\n') == '2'\nassert solution('4\\n5 7 2 9\\n') == '1'\nassert solution('3\\n6 8\\n') == '0'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n2 6 8\\n\") == \"2\"\nassert solution(\"4\\n5 7 2 9\\n\") == \"1\"\nassert solution(\"5\\n8 7 2 9\\n\") == \"0\"\nassert solution(\"5\\n8 7 2 9\\n\") == \"0\"\nassert solution(\"5\\n8 7 2 9\\n\") == \"0\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 6 8\n''') == '2'\nassert solution('''\n5\n2 3 4 9 12\n''') == '4'\nassert solution('''\n4\n5 7 2 9\n''') == '1'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"2 3 4 9 12\") == \"2\"\nassert solution(\"3 3 4 9 12\") == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '-1'\nassert solution('5') == '5'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6'\nassert solution('''\n5\n90 108\n45 105\n75 40\n''') == '5'\nassert solution('''\n2\n10 16\n7 17\n''') == '-1'\nassert solution('''\n2\n5 4\n3 2\n''') == '-1'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n17 18\\n15 24\\n12 15') == '6'\nassert solution('5\\n90 108\\n45 105\\n75 40') == '5'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '6'\nprint(solution(input))\nassert solution(input) == -1"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n17 18\\n15 24\\n12 15\\n') == '6'\nassert solution('5\\n90 108\\n45 105\\n75 40\\n') == '5'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    90 108\n    45 105\n    75 40\n''') == '5'\nassert solution('''\n    1\n    2\n    3\n''') == '-1'\nprint(solution('''\n    3\n    17 18\n    15 24\n'''))"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('2') == -1\nassert solution('5') == '5'"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6\"\nassert solution() == \"-1\"\nassert solution() == \"5\"\n\n\n\"\"\"\nfrom functools import reduce\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 6\nassert solution('''\n3\n17 18\n15 24\n12 15\n''') == 6\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == 5\nassert solution('''\n2\n10 16\n7 17\n''') == -1\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 18, 15, 24, 12, 15, 17, 18, 36, 60, 18, 18, 36, 60, 90, 90]) == 6\nassert solution([3, 18, 15, 24, 12, 15, 17, 18, 36, 60, 18, 18, 36, 60, 90, 90]) == 5\nassert solution([3, 6, 18, 12, 36, 60, 90, 90, 180, 180]) == -1\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bab\\nbb\") == \"2\\n1 0\\n1 3\"\nassert solution(\"bbb\\naaa\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bab\") == \"2 0 1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bbbb\") == \"0\"\nassert solution(\"aaa\") == \"1 0\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bbbb') == '0'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bbbb') == '0'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bab\\nbb\\n') == '2\\n0 1'\n\nassert solution('bbbb\\naa\\n') == '0\\n0 3'"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bab') == '2 0'\nassert solution('bbbb') == '0'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bbbb') == '1 3'\n\n\n\n\"\"\"\n\ns = input()\nt = input()\n\nop_cnt = 0\n\nfor i in range(len(s)):\n    if s[i]!= t[i]:\n        for j in range(i, len(s)):\n            if s[j]!= t[j]:\n                s = s[:i] + t[i] + s[i+1:]\n                t = t[:j] + s[j] + t[j+1:]\n                op_cnt += 1\n                break\n        break\n\nprint(op_cnt)\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bbbb') == '0'\n\n\"\"\""
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n4 3 2\\n') == 'POSSIBLE'\n\"\"\"\nn = int(stdin.readline().strip())\nparent = {}\nfor i in range(n):\n    parent[i+1] = i\n\nx = list(map(int, stdin.readline().split()))\nfor i in range(len(x)):\n    x[i] = (i+1, x[i], parent[i+1])"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"IMPOSSIBLE\", \"First example failed\"\nassert solution(\"\"\"\n3\n1 2\n\"\"\") == \"POSSIBLE\", \"Second example failed\"\nassert solution(\"\"\"\n3\n0 2\n\"\"\") == \"POSSIBLE\", \"Third example failed\"\n\n\"\"\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 1, 1, 4, 3, 2]) == \"POSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'POSSIBLE'\nassert solution('1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n4 3 2\") == \"POSSIBLE\"\nassert solution(\"4\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n1 1\n4 3 2\n\"\"\") == \"POSSIBLE\"\nassert solution(\"\"\"1\n1 1\n1 1\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('4\\n1 1\\n4 3 2') == 'IMPOSSIBLE'\nassert solution('3\\n1 1\\n3 1 1') == 'IMPOSSIBLE'\n\"\"\"\nfrom itertools import permutations\nn = int(input())\nparent = list(map(int, input().split()))\ncolor = list(map(int, input().split()))\nweight = list(map(int, input().split()))\n\nc_map = {}\nfor i in range(1, n + 1):\n    c_map[i] = {'color': color[i - 1], 'weight': weight[i - 1]}\n    \nall_color = []\nfor i in range(1, n + 1):\n    all_color.append(c_map[i])\n    \n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n2 3\\n\") == \"POSSIBLE\"\nassert solution(\"2 3\\n1 3\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('5\\n1 1\\n3 4 2') == 'IMPOSSIBLE'\nassert solution('5\\n1 1\\n2 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'POSSIBLE'\nassert solution('2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 1\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1000000007\\n') == '2'\nassert solution('4 1000000007\\n') == '3'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"4\"\nassert solution(\"4 1000000007\") == \"3\""
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1000000007') == '2'\n\"\"\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 10\") == \"2\""
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1000000007') == '2'\nassert solution('1') == '1'\nassert solution('1 2') == '0'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n100000007\\n') == '0'\nassert solution('2\\n100000007\\n') == '1'\nassert solution('4\\n1001001007\\n') == '2'\nassert solution('8\\n1001001007\\n') == '1'\nassert solution('16\\n1001001007\\n') == '2'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1') == '2'\nassert solution('6 2') == '2'\nassert solution('3 1') == '3'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1000000007\\n\") == \"2\"\nassert solution(\"100 1000000007\\n\") == \"6\"\nassert solution(\"200 2000000007\\n\") == \"10\"\nassert solution(\"300 3000000007\\n\") == \"17\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1000000007') == '2'\nassert solution('3 100000007') == '3'"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 3 3''') == '7'\nassert solution('''4 1 5 1''') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 3 3''') == '7'\nassert solution('''4 1 5 1''') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2 3 3\n+-+\n''') == '7'\n\nassert solution('''\n4 1 5 1\n-\n''') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"7\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3 3') == '7'\nassert solution('4 1 5 1') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2 3 3\n+-+\n''') == '7'\n\nassert solution('''4 1 5 1\n-\n''') == '999999228'\n\n'''\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 3 3''') == '7'\nassert solution('''4 1 5 1''') == '999999228'\nassert solution('''3 1 2''') == '4'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 3 3') == '7'\nassert solution('4 1 5 1') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3 3') == '7'\nassert solution('4 1 5 1') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2 3 3\n+-+\n''') == '7'\nassert solution('''4 1 5 1\n-''') == '999999228'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == \"4\", \"First test\"\nassert solution(\"1 2 3 1\") == \"2\", \"Second test\"\nassert solution(\"10 2 1 7\") == \"0\", \"Third test\"\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n1 1 1 2\n''') == 4\n\nassert solution(\n'''\n1 2 3 1\n''') == 2\n\nassert solution(\n'''\n10 2 1 7\n''') == 0\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1 1 2''') == '4'\nassert solution('''1 2 3 1''') == '2'\nassert solution('''10 2 1 7''') == '0'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'\nprint(solution(input()))\n\n\n'''"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n1 2 3''') == '8'\nprint(solution('''5 2\n0 2 1 3 2'''))"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\n\"\"\") == \"6\"\nassert solution(\"\"\"\n10 3\n\"\"\") == \"45\"\nassert solution(\"\"\"\n10 5\n\"\"\") == \"28\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '6'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n1 3 1\n1 2 1\n2 1 2''') == \"6\"\nassert solution('''3 2\n1 1 1\n1 1 1\n1 1 1''') == \"7\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n''') == '6'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3\\n') == '6'\nassert solution('1 2\\n') == '4'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '6'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '6'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"3 2\n1 3\n1 2\n2 1\n\"\"\"\n) == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1\\n') == '1'\nassert solution('2\\n1 1\\n') == '1'\nassert solution('3\\n3 2\\n') == '0'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"2\\n1 2\") == \"1\"\n\n\"\"\"\n\nfrom itertools import product\n\nN = int(stdin.readline().strip())"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 2\n''') == '2'\nprint(solution('''\n1\n2\n'''))\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 2') == '2'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''2\n1 1\n''') == '1'\n\n---\nclass Solution:\n    def niceness(self, a, b):\n        return max(a, b)\n    def sumNice(self, N, a, b):\n        if N <= 1:\n            return 0\n        return self.niceness(a, b) * (N-2) + self.sumNice(N-1, a, b)\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2') == '2'\nassert solution('2\\n1 2') == '1'\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\""
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('11') == '18'\n\n\"\"\"\n\n\"\"\"\n---Submission---\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ncounter = 0\nwhile len(a) > 0 and len(b) > 0:\n    if a[0] > b[-1]:\n        counter += len(a)\n        a.pop(0)\n    else:\n        counter += len(b)\n        b.pop()"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 2 0\n3 0 1\n''') == '2'\nassert solution('''\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == '18'\n\n\n'''\n--- Day 10: Adapter Array ---\nhttps://adventofcode.com/2020/day/10\n\nIn your preliminary testing, you determined that the correct solution only requires 7 operations to determine the adapters that connect the charging outlet to your device's built-in adapter supply, but your device has much more than that.\n\nTo test this, you need to write a function that determines the minimum number of operations required to determine the adapters that connect the charging outlet to your device's built-in adapter supply.\n\nEach of the 7 input test cases contains one or more lines of code, each with a single number.\n\nThe 7-card sample input is marked with a single `#`. The actual input to the AoC 2020 test is a few hundred cards:\n\nThe input contains 7 lines: the first line contains the number of test cases, and the next $n$ lines contain one or more lines of test case input each. The first line contains a single integer $n$ ($1\\le n\\le 2\\cdot 10^5$).\nThe second line contains $n$ integers $a_1,a_2,\\ldots,a_n$ ($0\\le a_i\\le n$) \u2014 the initial cards in Nauuo's hands. $0$ represents an empty card.\nThe third line contains $n$ integers $b_1,b_2,\\ldots,b_n$ ($0\\le b_i\\le n$) \u2014 the initial cards in the pile, given in order from top to bottom. $0$ represents an empty card.\n\nExample\n\nThe seven-card sample input:\n\n7\n3 1 2 4 5 6 7\n3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n5 1 2 3 4 5\n1 2 3 4 5 6\n1 2 3 4 5 6 7\n1 2 3 4 5 6 7 8\n1 2 3 4 5 6 7 8 9\n\nThe output for each of the 7 test cases is the minimum number of operations required to determine the adapters that connect the charging outlet to your device's built-in adapter supply:"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"4\""
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('11') == '18'\nassert solution('55') == '14'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n') == '2'\nassert solution('11\\n0 0 0 5 0 0 0 4 0 0 11\\n9 2 6 0 8 1 7 0 3 0 10') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('6') == '5'\n\n\"\"\"\n\n\nfrom typing import List\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('11') == '18'"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('11') == '18'\n\n'''\n\nfrom collections import deque\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\ncard_q = deque(a)\ncard_pile = deque(b)\n\ncard_pile_numbers = list(enumerate(card_pile, 1))\ncard_pile_numbers.sort(key=lambda x: x[1])\n\nplay_card = 0\n\nresult = 0\n\nfor card in card_q:\n    if play_card >= len(card_pile_numbers):\n        result += 1\n        play_card = 0\n    card_pile_numbers[play_card] = (card_pile_numbers[play_card][0] + 1, card_pile_numbers[play_card][1])\n    play_card += 1\n    \nprint(result)\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"YES\"\nassert solution(input_string2) == \"YES\"\nassert solution(input_string3) == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 10') == 'YES'\nassert solution('1 1') == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 10\ncode*s\ncodeforces\n\n''') == 'YES'\nassert solution('''\n6 5\nvk*cup\nvkcup\n\n''') == 'YES'\nassert solution('''\n1 1\nv\nk\n\n''') == 'NO'\nassert solution('''\n9 6\ngfgf*gfgf\ngfgfgf\n\n''') == 'NO'\n\nprint(solution('''\n6 5\nvk*cup\nvkcup\n\n'''))"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 10\ncode*s\ncodeforces\n\n''') == \"YES\"\nassert solution('''\n1 1\nv\nk\n\n''') == \"NO\"\nassert solution('''\n9 6\ngfgf*gfgf\ngfgfgf\n\n''') == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"v\") == \"YES\"\nassert solution(\"vk\") == \"YES\"\nassert solution(\"vkcup\") == \"YES\"\nassert solution(\"gfgf*gfgf\") == \"YES\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 5\") == \"YES\", \"First\"\nassert solution(\"1 1\") == \"NO\", \"Second\"\nassert solution(\"9 6\") == \"NO\", \"Third\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0.1 0.2\n''') == '0.260000000000'\nassert solution('''\n4\n0.1 0.2 0.3 0.8\n''') == '0.800000000000'\nassert solution('''\n5\n0.1 0.2 0.3 0.4 0.5\n''') == '0.4000000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n0.1 0.2 0.3 0.8\n''') == '0.800000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0.260000000000'\nassert solution('4\\n0.1 0.2 0.3 0.8\\n') == '0.800000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == '0.26'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0.260000000000\"\nassert solution(\"4\") == \"0.800000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0.1 0.2 0.3 0.8\\n\") == '0.800000000000'\nassert solution(\"2\\n0.1 0.2\\n\") == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8\\n') == '0.800000000000'\nassert solution('2\\n0.1 0.2\\n') == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '0.800000000000'\n\n\"\"\"\n\nimport sys\nimport math\nimport decimal\n\ndecimal.getcontext().prec = 10\n\nn = int(input())\nfriends = [float(x) for x in input().split()]\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n0.2 0.2 0.3 0.8\n''') == '0.260000000000'\nassert solution('''4\n0.1 0.2 0.3 0.8\n''') == '0.800000000000'\nassert solution('''2\n0.1 0.2\n''') == '0.260000000000'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\nassert solution('5 7 1 3 5') == '5.0000000000'"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\n\nassert solution('3 6 1 2 1') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10 1 2 5\\n') == '5.0'\nassert solution('3 6 1 2 1\\n') == '4.714285714'\nassert solution('1 2 3 4 5\\n') == '5.0'\nassert solution('1 2 5 3 4\\n') == '7.3333333333'\nassert solution('1 2 3 4 5\\n') == '7.3333333333'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\nassert solution('20 20 1 2 2 1') == '17.7647058824'\n\n'''\n\n\nn, l, v_1, v_2, k = list(map(int, input().split()))\ntotal_time = (n*v_1 + n*v_2) / k\nprint('{:.6f}'.format(total_time))"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 1 2 5\\n') == \"5.0000000000\"\nassert solution('3 6 1 2 1\\n') == \"4.7142857143\"\n\"\"\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\nassert solution('2 0 2 3 1') == '3.0'"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5.0000000000\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"\nassert solution(\"5 3 1 2 1\") == \"7.4285706276\"\nassert solution(\"3 3 1 2 1\") == \"7.4285706276\"\nassert solution(\"5 6 1 2 1\") == \"8.4285706276\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 10 1 2 5\n4 6 1 2 1\n5 7 2 3 6\n1 5 2 3 1\n3 6 1 2 1\n2 6 1 5\n3 6 1 2''') == '5.0000000000'\nassert solution('''3 10 1 2 5\n3 6 1 2 1\n2 6 1 5\n1 5 2 3\n5 6 1 2''') == '4.7142857143'\n\nprint(solution('''4 7 4 2 4\n4 9 2 4\n2 4 2 3\n3 4 4 1\n4 5 3 1'''))"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\nassert solution('4 1 1 1 1') == '5'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n2\n0.000 0.500 0.750 1.000 2.000 3.000\n\n\"\"\"\n) == \"0.250\"\n\nassert solution(\n    \"\"\"\n3\n0.000 0.500 0.750 1.000 2.000 3.000\n\n\"\"\"\n) == \"0.279\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0.250\"\nassert solution(\"3\") == \"0.279\"\nassert solution(\"2\") == \"0.125\"\nassert solution(\"1\") == \"0.0625\"\nassert solution(\"0\") == \"0.0000\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.250'\nassert solution('3') == '0.279'\n\n\n\n\"\"\""
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000\\n') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\\n') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0.000 0.500 0.750 1.000 2.000 3.000\n''') == '0.250'\nassert solution('''3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\n''') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n0.000 0.500 0.750 1.000 2.000 3.000''') == '0.250'\nassert solution('''3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896''') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n0.000 0.500 0.750 1.000 2.000 3.000\n''') == '0.250'\nassert solution('''3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\n''') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0.250\"\nassert solution(\"3\") == \"0.279\"\nassert solution(\"5\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0.250\"\nassert solution(\"3\") == \"0.279\""
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == \"18\"\nassert solution('0 1') == \"8\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '18'\nassert solution('0 1') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5\\n5 2') == '18'\nassert solution('0 1\\n0 0') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"18\"\nassert solution(\"0 1\") == \"8\"\n\n'''"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '18'\nassert solution('0 1') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '6'\nassert solution('1 1') == '4'\nassert solution('5 5') == '5'\nassert solution('0 1') == '5'\nassert solution('0 0') == '0'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"0 0\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5\\n5 2') == '18'\nassert solution('0 1\\n0 0') == '8'\nassert solution('2 1\\n-2 2') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5\\n5 2') == '18'\nassert solution('0 1\\n0 0') == '8'\nprint(solution(*stdin.split()))"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 5\n5 2\"\"\") == \"18\"\nassert solution(\"\"\"0 1\n0 0\"\"\") == \"8\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n6''') == '4'\nassert solution('''10\n11''') == '244'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\n\n\"\"\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '4'\nassert solution('2\\n') == '10'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\nassert solution('10') == '244'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n''') == '4'\nassert solution('''\n2\n''') == '10'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n''') == '4'\nassert solution('''2\n''') == '10'\nassert solution('''10\n''') == '244'"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == '4\\n'\nassert solution(\"10\\n\") == '244\\n'"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1''') == '4'\nassert solution('''10''') == '244'\nassert solution('''11''') == '10'\nassert solution('''15''') == '2'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\nassert solution('10') == '244'"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 2 3') == '0'\nassert solution('4\\n1 4 1 4 9') == '2'\nassert solution('5\\n1 4 1 4 9') == '2'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\\n\") == \"0\"\nassert solution(\"4 1 4 1 4 9\\n\") == \"2\"\nassert solution(\"5 1 4 1 4 9\\n\") == \"2\"\nassert solution(\"5 1 4 1 4 9\\n\") == \"3\"\nassert solution(\"1 1 2 2\\n\") == \"0\"\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 4 1 4 9\n''') == '2'\nassert solution('''4\n1 1 2 2\n''') == '0'\nassert solution('''4\n1 2 2\n''') == '1'\nassert solution('''5\n1 4 1 4 9\n''') == '0'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 2 3\n''') == '0'\n\nassert solution('''\n4\n1 4 1 4 9\n''') == '2'\n\nassert solution('''\n5\n1 4 1 4 9\n''') == '2'\n\nassert solution('''\n5\n3 3 2 5\n''') == '1'\n\nassert solution('''\n5\n1 3 4 1\n''') == '0'"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n1 1 2 2\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open(0).read()) == '0'\nassert solution(open(1).read()) == '2'\nassert solution(open(2).read()) == '2'\nassert solution(open(3).read()) == '3'\nassert solution(open(4).read()) == '3'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3') == '0'\nassert solution('4\\n1 4 1 4 9') == '2'\nassert solution('5\\n1 4 1 4 9') == '3'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n1 4 1 4 9\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\"\nassert solution(\"10\\n1 2 4 3 5 7 8 9\") == \"2\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaabccc') == 'YES', 'first example'\nassert solution('bbacc') == 'NO','second example'\nassert solution('aabc') == 'YES', 'third example'\n\n\"\"\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'NO', \"First\"\nassert solution('aaabccc') == 'YES', \"Second\"\nassert solution('bbacc') == 'NO', \"Third\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n\"\"\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaabccc') == 'YES', \"Short example\"\nassert solution('bbacc') == 'NO', \"Short example\"\nassert solution('aabc') == 'YES', \"Short example\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aabc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aaabccc\") == \"YES\"\nassert solution(\"abccc\") == \"NO\"\nassert solution(\"abc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'YES'\nassert solution('aabc') == 'YES'\nassert solution('bbacc') == 'NO'"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\", \"a\"\nassert solution(\"bbacc\") == \"NO\", \"b\"\nassert solution(\"aabc\") == \"YES\", \"a\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"2\"\nassert solution(input) == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n4 1 2 5 3\n''') == '2'\nassert solution('''\n4\n4 1 3 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '4'\nassert solution('''\n2\n1 2\n''') == '1'\nassert solution('''\n3\n4 1 2\n''') == '3'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == \"2\"\nassert solution(input_2) == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4 1 2 5 3\\n') == '2'\nassert solution('4\\n4 1 3 2\\n') == '2'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n4 1 2 5 3\n''') == '2'\nassert solution('''4\n4 1 3 2\n''') == '2'\nassert solution('''5\n4 1 3 2 5\n''') == '1'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution(\"4 1 2 5 3\") == '2'\nassert solution(\"4 1 2 5 3\") == '2'\nassert solution(\"4 1 2 5 3\") == '2'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n4 1 2 5 3\n''') == '2'\nassert solution('''4\n4 1 3 2\n''') == '2'\nassert solution('''5\n4 2 1 3 5\n''') == '2'\nassert solution('''5\n4 5 1 2 3\n''') == '1'"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '2'"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == '1.750000000000'\nassert solution(stdin + '\\n') == '4.958333333333'\n'''"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1\\n') == '3.500000000000'\nassert solution('6 3\\n') == '4.958333333333'\nassert solution('2 2\\n') == '1.750000000000'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 1\n''') == '3.500000000000'\nassert solution('''2 3\n''') == '4.958333333333'\nassert solution('''6 1\n''') == '4.958333333333'\nassert solution('''6 3\n''') == '4.958333333333'"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\") == \"3.500000000000\"\nassert solution(\"6 3\") == \"4.958333333333\"\nassert solution(\"2 2\") == \"1.750000000000\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '2.5'\nassert solution('4 1') == '2'\nassert solution('5 2') == '4'\nassert solution('4 2') == '4'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"3.500000000000\""
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '3.5'\n\"\"\"\nimport math"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1') == '3.500000000000'\nassert solution('6 3') == '4.958333333333'\nassert solution('2 2') == '1.750000000000'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 1\n''') == '3.500000000000'\nassert solution('''\n6 3\n''') == '4.958333333333'\nassert solution('''\n2 2\n''') == '1.750000000000'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>''') == '3'\n\nassert solution('''5\n<-\n3\n>>>>>\n2\n<->\n1\n<->\n0''') == '5'\n\nassert solution('''10\n<-\n5\n>>>>>\n4\n<->\n0\n<->\n3\n<->\n2\n<->\n1\n<->\n0''') == '8'\n\nassert solution('''100\n<->\n99\n<->\n98\n<->\n97\n<->\n96\n<->\n95\n<->\n94\n<->\n93\n<->\n92\n<->\n91\n<->\n90\n<->\n89\n<->\n88\n<->\n87\n<->\n86\n<->\n85\n<->\n84\n<->\n83\n<->\n82\n<->\n81\n<->\n80''') == '168'\n\nassert solution('''10\n<->\n9\n<->\n8\n<->\n7\n<->\n6\n<->\n5\n<->\n4\n<->\n3\n<->\n2\n<->\n1''') == '3'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '5'\n\nassert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '4'\n\nassert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '1'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n>->-\n5\n<>''') == '3'\nassert solution('''4\n>->-\n3\n<-<''') == '5'\nassert solution('''5\n<-<-<''') == '4'\nassert solution('''5\n<-<-<->''') == '0'\nassert solution('''2\n->->''') == '2'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n4\\n-><-\\n5\\n>>>>>\") == \"3\"\nassert solution(\"2\\n5\\n<--\\n3\\n<->\") == \"5\"\nassert solution(\"3\\n8\\n<-<-\") == \"0\"\nassert solution(\"4\\n10\\n-><-\") == \"1\"\nassert solution(\"5\\n17\\n<-<-\") == \"1\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n-><-\\n5\\n>>>>>') == '3'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n\n''') == '3'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '3'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n    \"\"\") == \"3\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == \"5\"\nassert solution('''1\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == \"3\"\nassert solution('''4\n1\n-><-\n5\n>>><\n2\n>->\n3\n<>\n''') == \"4\""
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '16'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n4 5\\n4 5\\n4 10\\n') == '16'\nassert solution('3\\n1 1\\n100 100\\n1 1\\n') == '101 101 101 101'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n10 10\n9 9\n9 8\n9 7\n9 6\n9 5\n''') == '16'\nassert solution('''\n4\n10 5\n9 9\n9 8\n9 7\n9 6\n9 5\n''') == '9 9 10'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\nassert solution('3') == '202'\nassert solution('4') == '101 101 101 101'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"16\"\nassert solution(\"3\") == \"9 9 10\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '16'\nassert solution('2') == '-1'\nassert solution('3') == '202'\nassert solution('4') == '101 101 101 101'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 4\n1 5\n2 6\n2 5\n2 6\n''') == \"16\"\nassert solution('''\n3\n1 100\n100 1\n1 100\n100 1\n''') == \"9 9 10\"\nassert solution('''\n4\n1 100\n100 1\n1 100\n100 1\n''') == \"202\""
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\nassert solution('5') == '202'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '202'\nassert solution('''5\n1 1\n1 1\n1 1\n1 1\n1 1''') == '101 101 101 101 101'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '202'\nassert solution('3') == '9 9 10'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5]) == \"0 1 2 3\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1 2 3 2 2'\nassert solution('3') == '0 2'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 2 2\\n\") == \"0 2\\n\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2 2 2 1 1'\nassert solution('3') == '1 3'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 3''') == '1 2'\nassert solution('''5\n1 2 3 2 2''') == '0 2'\nassert solution('''5\n1 2 3 2 2''') == '0 1 3'\nassert solution('''5\n1 2 3 2 2''') == '0 1 3'\nassert solution('''5\n1 2 3 2 2''') == '0 1 3'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 1 1 1 1\n''') == '1 2 2'\nassert solution('''\n3\n1 2 3\n''') == '0 2'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 1 1 1 1\\n') == '1 2 2'\nassert solution('3\\n1 2 3\\n') == '0 1 3'\nassert solution('5\\n1 2 3 2 2\\n') == '0 1 3'"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '2'\nassert solution('3') == '0 2'\nassert solution('5') == '0 1 3'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 1 1 1 1''') == '1 2 2'\nassert solution('''3\n1 2 3''') == '0 1 3'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''101101\n110''') == '110110'\nassert solution('''10010110\n100011\n\n''') == '01100011'\nassert solution('''10\n11100\n\n''') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"10\"\nassert solution(\"10010110\") == \"01010001\"\nassert solution(\"11100\") == \"11100\"\nassert solution(\"1111100\") == \"1111100\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"110110\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"111101\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10010110\n100011\n\n10''') == '01'\nassert solution('''10010110\n110\n\n10''') == '00'\nassert solution('''10010110\n100011\n\n10''') == '110101010'\nassert solution('''10010110\n110\n\n10''') == '0111010101'\nassert solution('''10010110\n100011\n\n10''') == '10011111011'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''101101\n110''') == '110110'\nassert solution('''10010110\n100011''') == '01100011'\nassert solution('''10''') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10010110') == '01100011'\nassert solution('10') == '01'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"111110\"\nassert solution(input()) == \"111101\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 4 1\\n\"\n    \"1 0 0 1\\n\"\n    \"0 1 1 0\"\n) == \"0\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5 2\") == \"1\"\nassert solution(\"3 4 1\") == \"0\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 2\") == \"1\"\nassert solution(\"3 4 1\") == \"0\"\nassert solution(\"2 1 2\") == \"1\""
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\nOutput\n0\n\nInput\n3 4 1\n1 0 0 1\n0 1 1 0\n1 0 0 1\n\nOutput\n-1\n''') == '-1'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 1') == '0'\nassert solution('5 5 2') == '1'\nassert solution('10 10 1') == '-1'\nassert solution('100 10 1') == '-1'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('''\n4 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1'\nassert solution('''\n3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\nOutput\n0\n''') == '-1'\nassert solution('''\n3 5 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '0'\nassert solution('''\n3 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n\nOutput\n-1\n''') == '-1'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2 2 3 1 2\"\nassert solution(\"10\") == \"5 5 5 5 5 5 5 5 5 5\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2 2 3 1 2'\nassert solution('3') == '9999 10000 9998'"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2 2 3 1 2'\nassert solution('3') == '9999 10000 9998'\nassert solution('123') == '9999 10000 9998'\nassert solution('2 3 4 5 6 7 8') == '999 10000 9998'\nassert solution('0 4 6 2 4') == '2 2 3 1 2'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2 2 3 1 2\", solution(\"3\")\nassert solution(\"4\") == \"2 2 3 1 2\", solution(\"4\")\nassert solution(\"5\") == \"2 2 3 1 2\", solution(\"5\")\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n''') == '2 2 3 1 2'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n''') == '2 2 3 1 2'\nprint(solution('''5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''')) == '1 1 1 1 1 1'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2 2 3 1 2\"\nassert solution(\"4\") == \"2 2 3 1 2\"\n\n----Hints----\nhttps://www.youtube.com/watch?v=isj5fQa6DgQ&ab_channel=GeeksForGeeks"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n''') == \"2 2 3 1 2\""
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n''') == '2 2 3 1 2'\nprint(solution('''3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0\n\nOutput\n9999 10000 9998'''))\nassert solution('''3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0\n\nOutput\n9999 10000 9998''') == '9999 10000 9998'\nassert solution('''4\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n\nOutput\n2 2 3 1 2''') == '2 2 3 1 2'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2 2 3 1 2\"\nassert solution(\"3\") == \"9999 10000 9998\""
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"22\"\nassert solution(\"5\") == \"105\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"22\"\nassert solution(\"5\") == \"0\"\nassert solution(\"3\") == \"0\""
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n11 6') == '22'\nassert solution('5\\n11 1') == '105'\nassert solution('6\\n11 19') == '105'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '22'\nassert solution('5') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"22\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '22'\nassert solution() == '0'\nassert solution() == '105'\nassert solution() == '0'\nassert solution() == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"22\"\nassert solution(\"6\") == \"105\""
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n''') == '22'\nassert solution('''3\n00 5000\n00 5000\n00 5000\n''') == '0'\nassert solution('''6\n11 19\n10 22\n00 18\n00 29\n11 29\n10 28\n''') == '105'\nassert solution('''6\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n''') == '0'\nassert solution('''5\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n''') == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '22'\nassert solution('5') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('11') == '22'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"22\"\nassert solution(\"6\") == \"103\"\nassert solution(\"3\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 4 9\n1 3 1 2\n2 1 3\n4 3 6\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 4 10\n2 3 1 2\n2 1 3\n4 3 6\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 4 5\n1 3 1 2\n2 1 3\n5 3 6\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4 9\n1 3 1 2\n2 1 3\n4 3 6''') == \"YES\"\n\nassert solution('''3 4 10\n2 3 1 2\n2 1 3\n4 3 6''') == \"YES\"\n\nassert solution('''3 4 5\n1 3 1 2\n2 1 3\n5 3 6''') == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 9') == 'YES', \"Wrong\"\nassert solution('3 4 10') == 'YES', \"Wrong\"\nassert solution('3 4 9') == 'YES', \"Wrong\"\nassert solution('3 4 5') == 'NO'\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample1) == sample2\nassert solution(sample2) == sample3\n\n\"\"\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'YES'\nassert solution('3 4 5') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'NO'\nassert solution('3 4 10') == 'NO'"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'YES'"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"NO\"\nassert solution(\"3 4 10\") == \"NO\"\nassert solution(\"3 4 5\") == \"NO\"\n\n\n\"\"\""
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'YES'\nassert solution('3 4 9') == 'YES'\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 1 2\n2 3 1\n''') == 'NO'\nassert solution('''3 2\n4 3 1 2\n3 1 2 3\n''') == 'NO'\nassert solution('''3 2\n4 3 1 2\n2 3 1\n''') == 'NO'\nassert solution('''3 2\n3 2 4 1\n2 3 1\n''') == 'YES'\nassert solution('''3 2\n3 2 4 1\n2 3 1\n''') == 'NO'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 1\n2 3 4 1\n1 2 3 4\n''') == 'NO'\nassert solution('''\n4 1\n4 3 1 2\n3 4 2 1\n''') == 'YES'\nassert solution('''\n4 3\n4 3 1 2\n3 4 2 1\n''') == 'YES'\nassert solution('''\n4 2\n4 3 1 2\n2 1 4 3\n''') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"NO\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"4 1\") == \"YES\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == 'YES'\nassert solution('4 1') == 'NO'\nassert solution('4 3') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('4 1') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n4 3 1 2\n4 3 1 2''') == 'NO'\nassert solution('''2 1\n4 3 1 2\n2 1 4 3\n\nOutput\nYES''')\nassert solution('''3 1\n4 3 1 2\n3 4 2 1\n\nOutput\nYES''')\nassert solution('''4 1\n4 3 1 2\n3 4 2 1\n\nOutput\nYES''')\nassert solution('''4 2\n4 3 1 2\n2 1 4 3\n\nOutput\nYES''')"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"NO\"\nassert solution(\"4 1\") == \"NO\"\nassert solution(\"4 1\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\nassert solution(\"4 2\") == \"YES\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1\n2 3 4 1\n1 2 3 4\n''') == 'NO'\nassert solution('''4 1\n4 3 1 2\n3 4 2 1\n''') == 'YES'\nassert solution('''4 3\n4 3 1 2\n3 4 2 1\n''') == 'YES'\nassert solution('''4 2\n4 3 1 2\n2 1 4 3\n''') == 'YES'\nassert solution('''4 1\n4 3 1 2\n2 1 4 3\n''') == 'NO'"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'NO'\nassert solution('4 1') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('4 1') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1') == 'NO'\nassert solution('4 1') == 'NO'\nassert solution('4 3') == 'NO'\nassert solution('4 2') == 'YES'\nassert solution('4 1') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n4 3 1 2\\n') == 'YES'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1 1\"\nassert solution(\"7\") == \"2 1\"\nassert solution(\"5\") == \"1 2\"\nassert solution(\"4\") == \"2 6\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '1 1'\nassert solution('7') == '2 1\\n3 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'\nassert solution('8') == '2 1\\n3 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n7 7'\nassert solution('9') == '2 1\\n3 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n7 7\\n8 8'\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\""
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 1\n3 1\n1 5\n4 4\n''') == '''1 1\n3 1\n1 5\n4 4\n'''\n\nassert solution('''7\n''') == '''2 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n'''\n\nassert solution('''7\n1 1\n3 1\n1 5\n4 4\n''') == '''1 1\n3 1\n1 5\n4 4\n'''"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7\\n') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nassert solution('10\\n') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n7 6\\n7 6\\n6 6\\n6 6\\n5 7\\n4 4\\n3 1\\n2 1\\n1 5\\n'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"2 1\\n3 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\""
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n') == '-1'\nassert solution('3\\n1 2 3\\n') == '3'\n\n\n\"\"\"\nimport re"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1\n1\n\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n3\n1 2 3\n\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 2 3') == '3'\nassert solution('3\\n1 2 3') == '-1'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '-1'\nassert solution('1\\n1') == '3'\nassert solution('1\\n2 3') == '3'\nassert solution('1\\n2 3\\n4 5 6') == '4'\nassert solution('1\\n2 3\\n4 5 6\\n7 8 9') == '7'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"2\\n1 2\\n\") == \"2\\n1\\n\"\nassert solution(\"1\\n1\\n\") == \"2\\n\"\n\n\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3 3 1 2\n''') == \"3\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '-1'"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1\n''') == '3'\nassert solution('''\n3\n1 2 3\n''') == '3'\nassert solution('''\n2\n3 1\n''') == '-1'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''46 2\n\nOutput\n7\n\n''') == '7'\nassert solution('''2018 214\n\nOutput\n3\n\n''') == '92 205 1'"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'\nprint(solution(input()))\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"46 2\") == \"7\"\nassert solution(\"2018 214\") == \"3\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'\nassert solution('46 5 3 5 1') == '92 205 1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"46 2\") == \"7\"\nassert solution(\"2018 214\") == \"3\"\nprint(solution(input()))"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '3'\nassert solution('50 38') == '-1'\nassert solution('-3 50') == '-1'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"46 2\") == \"7\"\nassert solution(\"2018 214\") == \"92 205 1\""
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 20 20\\n6 2\\n1 3\\n2 6\\n') == '5.000000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '1'\nassert solution('4 1 1') == '0.4'\nassert solution('5 5 2') == '2.8'"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\n'''\nimport math\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '0.400000000000000'\nassert solution('2 2 2') == '0.700000000000000'\nassert solution('3 2 3') == '0.800000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('5 3 1') == '0.400000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1\\n1 3\\n2 2\\n3 2') == '5.000000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_data) == \"1.000000000000000\"\n\n\"\"\"\nimport math\nn, p, q = map(int, input().split())\na, b = list(map(int, input().split()))\nc = 0\nfor i in range(n):\n    if i == 0:\n        if a[i] > c:\n            c = a[i]\n        elif a[i] < c:\n            c = a[i]\n    elif a[i] > c:\n        c = a[i]\n    elif a[i] < c:\n        c = a[i]\n    if b[i] > c:\n        c = b[i]\n    elif b[i] < c:\n        c = b[i]\nprint(math.ceil(c / p))"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('9 1 1') == '10.00000000000000'\nassert solution('3 1 1') == '5.000000000000000'\nassert solution('7 1 1') == '10.00000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 20 20\") == \"5.000000000000000\"\nassert solution(\"4 1 1\") == \"0.400000000000000\"\nassert solution(\"3 6 5\") == \"10.00000000000000\"\nassert solution(\"3 1 2\") == \"4.00000000000000\"\n\nYour code should output a single line with the real number rounded to six decimal places.\n\"\"\"\n\nfrom math import floor\n\nn, p, q = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(int(input()))\n\nb = []\nfor i in range(n):\n    b.append(int(input()))\n\na = sorted(a, reverse=True)\nb = sorted(b, reverse=True)\n\nans = []\nfor i in range(n):\n    ans.append(round((a[i]*(p/100)*(1 + (a[i]/q)*((p-100)/100))*(1 + (a[i]/q)*((p-100)/100))*(1 + (a[i]/q)*((p-100)/100))))/floor((1 + (a[i]/q)*((p-100)/100)*(1 + (a[i]/q)*((p-100)/100)*(1 + (a[i]/q)*((p-100)/100))))))\n\nprint(ans[0])"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 20 20\") == '5.000000000000000'\nassert solution(\"4 1 1\") == '0.400000000000000'"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_sample) == '0.400000000000000'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([2, 3]) == \"4\"\nassert solution([8, 2]) == \"5\"\nprint(solution(input()))\n\n\n'''\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([2, 3]) == '4'\nassert solution([8, 2]) == '5'\n\n\n\"\"\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n\") == \"4\"\nassert solution(\"8 2\\n\") == \"5\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2 3'\n) == '4'\n\nassert solution(\n    '8 2'\n) == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'\n\nINPUT = '3 2'\nOUTPUT = '4'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'\nassert solution('7 2') == '2'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n''') == '4'\nassert solution('''\n8 2\n''') == '5'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4 5 7\n5 6 8''') == 'Agasa'\nassert solution('''2\n1 1\n''') == 'Conan'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n4 5 7\\n') == 'Conan'\nassert solution('2\\n1 1\\n') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1\") == \"Agasa\"\nassert solution(\"2\\n3\") == \"Conan\""
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4 5 7') == 'Conan'\nassert solution('2\\n1 1') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Conan'\nassert solution('2') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Conan'\nassert solution('2') == 'Agasa'\nassert solution('1') == 'Conan'\nassert solution('0') == 'Agasa'\nassert solution('9') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Agasa'\nassert solution('3') == 'Conan'\nassert solution('5') == 'Agasa'\nassert solution('6') == 'Conan'\nassert solution('1') == 'Conan'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n4 5 7\n''') == 'Conan'\n\nassert solution('''2\n1 1\n''') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n2 2 2 2\n''') == 'Conan'\nassert solution('''5\n3 2 3 2 3\n''') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n4 5 7') == 'Conan'\nassert solution('2\\n1 1') == 'Agasa'"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == '##.\\n#.#\\n##.'\n\n'''\n\nfrom collections import deque\n\nn, m = input().split()\nn, m = int(n), int(m)"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"2 1\"\nassert solution(\"2 1\") == \"2 2\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"###\"\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3 3\\n##.\\n..#\\n#.#', \"Should be 3 3\\n##.\\n..#\\n#.#\"\nassert solution('1 2') == '2 2\\n##.#\\n#.#.#', \"Should be 2 2\\n##.#\\n#.#.#\"\nassert solution('3 1') == '3 1\\n#.#.\\n###.', \"Should be 3 1\\n#.#.\\n###.\"\nassert solution('10 10') == '10 10\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1 2\n1 1\"\"\") == \"\"\"2\n1\n\"\"\", \"First test case\"\n\nassert solution(\"\"\"2 2\n1 1\"\"\") == \"\"\"3\n3\n3\n\"\"\", \"Second test case\"\n\nassert solution(\"\"\"2 2\n1 1\n1 1\"\"\") == \"\"\"3\n3\n3\n3\n3\n\"\"\", \"Third test case\"\n\nassert solution(\"\"\"5 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '\\n1\\n'\nassert solution('2') == '\\n.\\n'\nassert solution('1 1') == '\\n1\\n'\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '3 3', 'First'\nassert solution('4 4') == '3 3', 'Second'\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '\\n##\\n##\\n', \"Two squares painted white, c_1 and c_2, are called connected when the square c_2 can be reached from the square c_1 passing only white squares by repeatedly moving up, down, left or right to an adjacent square.\"\nassert solution('2') == '\\n##\\n##\\n#.\\n##\\n##\\n', \"Two squares painted white, c_1 and c_2, are called connected when the square c_2 can be reached from the square c_1 passing only white squares by repeatedly moving up, down, left or right to an adjacent square.\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\\n\") == \"3 3\\n.##\\n###.\"\n\n\"\"\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n+ 1\\n- 2\\n- 1\\n\") == \"4\\n1 3 4 5 \nassert solution(\"3 2\\n+ 1\\n- 2\\n\") == \"1\\n3 \nassert solution(\"2 4\\n+ 1\\n- 2\\n+ 2\\n+ 3\\n- 1\\n\") == \"0\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '1 2'\nassert solution('2 4') == '1 2 3 4'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n') == '4\\n1 3 4 5'\nassert solution('3 2\\n') == '1 3 4 5'\nassert solution('5 6\\n') == '0'\nassert solution('2 4\\n') == '3'\n\nstdin = '''\n2 4\n+ 1\n- 2\n+ 2\n- 1\n'''\nstdin = '''\n5 4\n+ 1\n- 2\n- 1\n+ 2\n+ 3\n- 4\n'''\nassert solution(stdin) == '3\\n2 3 5'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '1 3'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1\n\n''') == '4'\n\nassert solution('''5 2\n+ 1\n- 2\n\n''') == '1'\n\nassert solution('''3 2\n+ 1\n- 2\n+ 2\n- 1\n\n''') == '0'\n\nassert solution('''5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\n''') == '3'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1\n''') == '4'\nassert solution('''5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n''') == '3'\nassert solution('''2 4\n+ 1\n- 2\n+ 2\n- 1\n''') == '0'\nassert solution('''4 5\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n''') == '2'\nassert solution('''5 10\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n+ 5\n- 5\n+ 6\n- 6\n+ 7\n- 7\n+ 8\n- 8\n+ 9\n- 9\n+ 10\n- 10\n''') == '1 3 5 8 9 10'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '1 3'\nassert solution('2 4') == '0'\nassert solution('5 6') == '3'\nassert solution('2 5') == '2 3 5'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1\n\nOutput\n4\n1 3 4 5 \nInput\n3 2\n+ 1\n- 2\n+ 2\n- 1\n\nOutput\n1\n3 \nInput\n2 4\n+ 1\n- 1\n+ 2\n- 2\n\nOutput\n0\nInput\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\nOutput\n3\n2 3 5 \nInput\n2 4\n+ 1\n- 2\n+ 2\n- 1\n\nOutput\n0\n''') == '4'\n\nassert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1\n\nOutput\n4\n1 3 4 5 \nInput\n3 2\n+ 1\n- 2\n+ 2\n- 1\n\nOutput\n1\n3 \nInput\n2 4\n+ 1\n- 2\n+ 2\n- 1\n\nOutput\n0\n\nInput\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\nOutput\n3\n2 3 5 \nInput\n2 4\n+ 1\n- 2\n+ 2\n- 1\n\nOutput\n0\nInput\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\nOutput\n3\n2 3 5 \nInput\n2 4\n+ 1\n- 2\n+ 2\n- 1\n\nOutput\n0\nInput\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\nOutput\n3\n2 3 5 \nInput\n2 4\n+ 1\n- 2\n+ 2\n- 1\n\nOutput\n0\nInput\n5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\nOutput\n3\n2 3 5 \nInput\n2 4\n+ 1\n- 2\n+ 2\n- 1\n\nOutput\n0\n''') == '4'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '3'\nassert solution('2 4') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '4', \"ERROR\"\nassert solution('3 2') == '1', \"ERROR\"\nassert solution('2 4') == '0', \"ERROR\"\nassert solution('5 6') == '3', \"ERROR\"\nassert solution('2 4') == '2 3 5', \"ERROR\""
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"5\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '4'\nassert solution('5 1') == '1'\nassert solution('5 1') == '0'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 1\") == \"0\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1') == '1'\nassert solution('5 1') == '0'\nassert solution('4 1') == '0'\nassert solution('3 3') == '4'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1\n5 4 2 4 5\n2''') == '1', solution('''5 1\n5 4 2 4 5\n2''')\nassert solution('''10\n10 1 2 3 4 5 6 7 8 9\n1''') == '0', solution('''10\n10 1 2 3 4 5 6 7 8 9\n1''')\nassert solution('''10\n10 1 2 3 4 5 6 7 8 9\n4''') == '2', solution('''10\n10 1 2 3 4 5 6 7 8 9\n4''')\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '4'\nassert solution('5 1') == '1'\nassert solution('5 4 2 4 5') == '1'\nassert solution('1 2 3 4 5') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 1\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\\n5 4 2 4 5\\n2\") == \"1\"\nassert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"4\""
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 3],\n    [1, 2, 3],\n    [1, 2, 3],\n    5) == '1'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\ncba\") == \"NO\"\nassert solution(\"4 4\\nabcd\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'NO'\nassert solution('4 4') == 'NO'\nassert solution('5 5') == 'NO'\nassert solution('2 2') == 'NO'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"NO\"\nassert solution(\"abc\") == \"NO\"\nassert solution(\"aa\") == \"NO\"\nassert solution(\"abcd\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"NO\"\nassert solution(\"3 4\") == \"cbd\"\nassert solution(\"4 4\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'cbd'\nassert solution('4 4') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"NO\"\n\n\nclass Solution:\n    def solution(self, stdin):\n        pass\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\ncba\n\n''') == 'NO'\nassert solution('''3 4\ncba\n\n''') == 'cbd'\nassert solution('''4 4\nabcd\n\n''') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'cbd'\nassert solution('4 4') == 'abda'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"NO\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'abda'\nassert solution('4 4') == 'abda'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"tokitsukaze\"\nassert solution(\"6 5\") == \"once again\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"tokitsukaze\"\n\n\"\"\"\n\n\nimport collections\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == 'tokitsukaze'\nassert solution('6 1') == 'once again'\nassert solution('6 5') == 'tokitsukaze'\nassert solution('4 1') == 'once again'"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == 'tokitsukaze'\nassert solution('6 1') == 'tokitsukaze'\nassert solution('6 5') == 'quailty'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n0101\n\n''') == 'tokitsukaze'\nassert solution('''\n6 1\n010101\n\n''') == 'quailty'\nassert solution('''\n6 5\n010101\n\n''') == 'once again'\nassert solution('''\n4 1\n0011\n\n''') == 'once again'\nprint('all tests passed')\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(open(0).read()) in {'once again', 'tokitsukaze', 'quailty'}, \\\n    f\"solution({stdin}) == {solution(stdin)}\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 1\n0101''') == 'tokitsukaze'\nassert solution('''6 5\n010101''') == 'once again'\nassert solution('''4 1\n0011''') == 'once again'\nassert solution('''4 1\n010101''') == 'once again'\nassert solution('''6 3\n0101010101\n0101''') == 'tokitsukaze'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) in [\"once again\", \"tokitsukaze\", \"quailty\"]\n\"\"\"\n\nimport unittest"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"quailty\"\nassert solution(\"6 1\") == \"tokitsukaze\"\nassert solution(\"6 5\") == \"once again\"\n\n\n\"\"\"\nfrom itertools import chain"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == 'tokitsukaze'\nassert solution('6 1') == 'quailty'\nassert solution('6 5') == 'once again'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 10\\n11\\n15 7\\n') == '7'\nassert solution('3 2 10\\n15 5 10\\n10 5 20\\n') == '18'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 4 50\n20 100\n60 10 40 80\n''') == '50'\nassert solution('''\n1 2 10\n11\n15 7\n''') == '7'\n\n\"\"\"\n\n\"\"\"\n\n1 2 10\n11\n15 7\n\n1 3 5\n7\n\n1 2 3\n7\n\n2 3 5\n7\n\n2 2 2\n7\n\n2 4 1\n7\n\n2 2 4\n7\n\n2 3 5\n7\n\n2 2 3\n7\n\n2 3 1\n7\n\n2 4 1\n7\n\n2 2 2\n7\n\n2 3 1\n7\n\n2 2 3\n7\n\n\"\"\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"7\"\nassert solution(\"2 4 50\") == \"50\""
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '50'\nassert solution(\"2 2 50\") == '50'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 50') == '50'\nassert solution('1 2 10') == '7'\n\n'''\n\nimport math"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80\\n') == '50'\nassert solution('1 2 10\\n11\\n15 7\\n') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4 50\n20 100\n60 10 40 80\n''') == '50'\nassert solution('''1 2 10\n11\n15 7\n''') == '7'\nassert solution('''1 5 7\n20 8\n11\n60\n10\n''') == '40'"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 50\\n20 100\\n60 10 40 80\\n\") == \"50\"\nassert solution(\"1 2 10\\n11\\n15 7\\n\") == \"7\"\nassert solution(\"1 1 1\\n0\\n0\") == \"0\"\nassert solution(\"1 1 1\\n0\\n1\") == \"1\"\nassert solution(\"1 1 1\\n1\\n1\") == \"1\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 50') == '50'\nassert solution('1 2 10') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 50') == '50'\nassert solution('1 2 10') == '7'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1 6'\nassert solution('3 2') == '1 3'\nassert solution('1 10') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 1\n\n1 1''') == '1 6'\nassert solution('''2 5\n1 1\n\n1 3\n\n2 1\n\n2 5''') == '1 6'\nassert solution('''2 3\n0 0\n\n1 1\n\n1 3\n\n2 1\n\n2 5''') == '1 6'\nassert solution('''1 10\n5 3\n\n1 1\n\n1 3\n\n2 1\n\n2 5''') == '1 6'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 6\"\nassert solution(\"\"\"2 3\n1 1\n\"\"\") == \"1 6\"\nassert solution(\"\"\"3 2\n0 0\n\"\"\") == \"1 3\"\nassert solution(\"\"\"1 10\n5 3\n\"\"\") == \"5 5\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 1\n''') == '1 6'\nassert solution('''3 2\n0 0\n''') == '1 3'\nassert solution('''1 10\n5 3\n''') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '1 6'\nassert solution('3 2') == '1 3'\nassert solution('1 10') == '5 5'\nassert solution('5 2') == '6 6'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"1 6\"\nassert solution(input_) == \"1 3\"\nassert solution(input_) == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1 6'\nassert solution('3 2') == '1 3'\nassert solution('1 10') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 1\n''') == '1 6'\nassert solution('''\n3 2\n0 0\n''') == '1 3'\nassert solution('''\n1 10\n5 3\n''') == '5 5'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"1 6\"\nassert solution(\"3 2\") == \"1 3\"\nassert solution(\"1 10\") == \"5 5\""
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3\\n0 0') == '1 6'\nassert solution('2 3\\n1 1') == '1 6'\nassert solution('1 10\\n5 3') == '5 5'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n-2 5 -1') == '2\\n2 3'\n\n\"\"\"\nimport sys\n\nsys.setrecursionlimit(10 ** 9)\n\nn = int(input())\na = list(map(int, input().split()))"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 3\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n-2 5 -1\\n\") == \"2 3\"\nassert solution(\"2\\n1 2\\n\") == \"1 3\"\nassert solution(\"1\\n0 1\\n\") == \"1 1\"\nassert solution(\"2\\n3 3\\n\") == \"1 2\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"-10\") == \"4\"\nassert solution(\"-3\") == \"3\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('8') == '4'\nassert solution('13') == '5'\nassert solution('20') == '5'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2 3\"\n\n\"\"\"\nfrom math import inf\n\nN = int(input())\n\nseq = list(map(int, input().split()))"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2 3'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2 3'\nassert solution('3 2') == '2 3'\nassert solution('5 4 3') == '2 3 3'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n-2 5 -1') == '2 3'\n'''\nimport sys"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n0 3\n1 5\n\n''') == \"3\"\n\nassert solution('''\n1\n0 4\n\n''') == \"1\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([0, 3, 1, 5]) == \"3\"\nassert solution([1, 5, 0, 4]) == \"1\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\"\nassert solution(\"1\\n0 4\\n\") == \"1\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n0 3\\n1 5') == '3'\nassert solution('1\\n0 4\\n') == '1'\nassert solution('2\\n1 10\\n2 2') == '3'\n\"\"\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 0, 3, 5]) == \"3\"\nassert solution([1, 1, 2, 3]) == \"2\"\nassert solution([1, 1, 1, 2]) == \"1\"\nassert solution([1, 1, 1, 1]) == \"0\"\nassert solution([1, 0, 1, 1]) == \"1\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"./inputs/sample.in\") == \"3\"\nassert solution(\"./inputs/input.in\") == \"3\"\nassert solution(\"./inputs/test.in\") == \"1\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 3\n1 5\n''') == '3'\nassert solution('''\n1 10\n2 2\n''') == '3'\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 3\\n1 5\") == \"3\"\n\nassert solution(\"1\\n0 4\\n\") == \"1\"\n\nassert solution(\"2\\n1 10\\n2 2\\n\") == \"3\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n0 3') == '3'\nassert solution('1\\n0 4') == '1'\nassert solution('2\\n1 10') == '3'\nassert solution('1\\n1 1') == '1'\nassert solution('2\\n2 2') == '2'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n4 5\n4 3 6 5 7\n    '''\n) == '0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\\n0 25 50\\n0 50 25 50\n\nassert solution(\n    '''\n7 11\n11 9 30 12 1 35 6 42\n'''\n) == '16 17 18\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 12 1 35 6 42\\n0 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 30 12 1 35 6 42\\n'''\n) == '16 17 18\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42\\n0 11 9 30 12 1 35 6 42\\n0 1 35 6 42\\n0 30 12 1 35 6 42\\n0 1 35 6 42\\n0 9 30 12 1 35 6 42"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"16 0 25 50\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 50\") == \"3 0 25 50\"\n\nassert solution(\"6 18\") == \"16 0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6 1 10 12 2\n2 4 5''') == '0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18 \nassert solution('''5 50\n25 25 50''') == '0 25 50'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 18\n5 6 1 10 12 2\n''') == '16'\nassert solution('''\n3 50\n25 25 50\n''') == '3'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 18') == '16'\nassert solution('3 50') == '3'\nassert solution('10 20 30 40 50 60 70 80 100 200 300 400 500 600 700 800 1000 1200 1400 1600 1800 2000 2500 2600 2700 2800 2900 3000 3100 3200 3400 3600 3700 3800 4000 4300 4500 4600 4700 4800 5000 5100 5200 5600 5700 5800 6000 6100 6300 6400 6500 6600 6700 6800 7000 7100 7200 7300 7400 7500 7600 7700 7800 7900 8100 8300 8400 8500 8600 8700 8800 8900 9100 9200 9300 9400 9500 9600 9700 9800 9900 10100 10200 10500 1123123 12341234 1234567 8901234567"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '12'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"6 18\\n5 6 1 10 12 2\\n\") == \"16\\n0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\nassert solution(\n    \"3 50\\n25 25 50\\n\") == \"3\\n0 25 50\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '2 2\\n3 2 4\\n') == '0 1 2'\nassert solution(\n    '1 100\\n10\\n') == '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n6\\n5 6 1 10 12 2\\n') == '16'\nassert solution('2\\n5\\n5 6 1 10 12 2\\n') == '3'\nassert solution('3\\n6\\n5 6 1 10 12 2\\n') == '0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"2\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n6\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n2\n\"\"\") == \"2\"\n\"\"\"\n)\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n''') == '2'\nassert solution('''\n3\n''') == '3'\nassert solution('''\n6\n''') == '3'\nassert solution('''\n10\n''') == '10'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n\") == \"3\"\nassert solution(\"2\\n\") == \"2\"\n\n'''\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'\n\n----\n\nsolution('1')\n\nsolution('2')\n\nsolution('3')\n\nsolution('4')\n\nsolution('5')\n\nsolution('6')\n\nsolution('7')\n\nsolution('8')\n\nsolution('9')\n\nsolution('10')\n\nsolution('11')\n\nsolution('12')\n\nsolution('13')\n\nsolution('14')\n\nsolution('15')\n\nsolution('16')\n\nsolution('17')\n\nsolution('18')\n\nsolution('19')\n\nsolution('20')\n\nsolution('21')\n\nsolution('22')\n\nsolution('23')\n\nsolution('24')\n\nsolution('25')\n\nsolution('26')\n\nsolution('27')\n\nsolution('28')\n\nsolution('29')\n\nsolution('30')\n\nsolution('31')\n\nsolution('32')\n\nsolution('33')\n\nsolution('34')\n\nsolution('35')\n\nsolution('36')\n\nsolution('37')\n\nsolution('38')\n\nsolution('39')\n\nsolution('40')\n\nsolution('41')\n\nsolution('42')\n\nsolution('43')\n\nsolution('44')\n\nsolution('45')\n\nsolution('46')\n\nsolution('47')\n\nsolution('48')\n\nsolution('49')\n\nsolution('50')\n\nsolution('51')\n\nsolution('52')\n\nsolution('53')\n\nsolution('54')\n\nsolution('55')\n\nsolution('56')\n\nsolution('57')\n\nsolution('58')\n\nsolution('59')\n\nsolution('60')\n\nsolution('61')\n\nsolution('62')\n\nsolution('63')\n\nsolution('64')\n\nsolution('65')\n\nsolution('66')\n\nsolution('67')\n\nsolution('68')\n\nsolution('69')\n\nsolution('70')\n\nsolution('71')\n\nsolution('72')\n\nsolution('73')\n\nsolution('74')\n\nsolution('75')\n\nsolution('76')\n\nsolution('77')\n\nsolution('78')\n\nsolution('79')\n\nsolution('80')\n\nsolution('81')\n\nsolution('82')\n\nsolution('83')\n\nsolution('84')\n\nsolution('85')\n\nsolution('86')\n\nsolution('87')\n\nsolution('88')\n\nsolution('89')\n\nsolution('90')\n\nsolution('91')\n\nsolution('92')\n\nsolution('93')\n\nsolution('94')\n\nsolution('95')\n\nsolution('96')\n\nsolution('97')\n\nsolution('98')\n\nsolution('99')\n\nsolution('100')\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n''') == '2'\n\nassert solution('''3\n''') == '3'\n\nassert solution('''5\n''') == '2'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n''') == '2'\nassert solution('''1\n''') == '1'\nassert solution('''2\n''') == '1'\nassert solution('''3\n''') == '1'\nassert solution('''12\n''') == '2'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 10\n1 1\n1 2\n1 3\n2 2\n2 3\n3 3\n3 4\n4 4\n5 5\n6 6\n7 7\n7 8\n8 8\n7 9\n\"\"\") == \"180\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n\"\n    \"10 1\\n\"\n    \"20 2\\n\"\n    \"30 3\"\n) == \"180\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '180'\nassert solution('1') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\\n\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\\n\") == \"21\"\nassert solution(\"1\\n5 10\\n\") == \"50\"\nassert solution(\"0\\n\") == \"\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3\n10 1\n20 2\n30 3\n''') == '180'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n10 1\n20 2\n30 3\n''') == '180'\nassert solution('''\n3\n3 1\n2 2\n4 3\n''') == '21'\nassert solution('''\n1\n5 10\n''') == '50'\nassert solution('''\n2\n3 2\n5 8\n''') == '6'\nassert solution('''\n3\n3 2\n3 5\n''') == '6'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '180'\nassert solution('3') == '21'\nassert solution('3') == '50'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == \"180\"\nassert solution('3') == \"180\"\nassert solution('3') == \"180\""
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n10 1\\n20 2\\n30 3\") == \"180\"\nassert solution(\"3\\n3 1\\n2 2\\n4 3\") == \"21\"\nassert solution(\"3\\n1 5\\n20 2\\n30 3\") == \"50\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n10 1\n20 2\n30 3\n\n''') == '180'\nassert solution('''\n3\n3 1\n2 2\n4 3\n\n''') == '21'\nassert solution('''\n1\n5 10\n\n''') == '50'\nassert solution('''\n2\n4 1\n1 2\n\n''') == '25'\nassert solution('''\n2\n2 1\n1 2\n\n''') == '1'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 0 10\\n') == '2'\nassert solution('5\\n0 1 2 3 4\\n') == '1'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n0 0 10') == '2'\nassert solution('5\\n0 1 2 3 4') == '1'\nassert solution('9\\n0 1 2 3 4') == '3'\nassert solution('4\\n0 0 0 0') == '4'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 0 10\n''') == '2'\nassert solution('''\n5\n0 1 2 3 4\n''') == '1'\nassert solution('''\n4\n0 0 0 0\n''') == '4'\nassert solution('''\n9\n0 1 2 3 4 5 6 7 8\n''') == '3'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n0 0 10\n''') == '2'\nassert solution('''4\n0 0 0 0\n''') == '4'\nassert solution('''9\n0 1 2 3 4\n''') == '3'\nassert solution('''5\n0 1 2 3 4\n''') == '4'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n0 0 10''') == '2'\nassert solution('''5\n0 1 2 3 4''') == '1'\nassert solution('''4\n0 0 0 0''') == '4'\nprint('all tests passed')\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('9') == '3'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"9\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n0 1 2 3\n''') == '2'\nassert solution('''5\n0 1 2 3 4\n''') == '1'\nassert solution('''9\n0 1 2 3 4 5 6 7 8\n''') == '3'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n\n-----------------------------------------------------\n\n\u0423\u0437\u043d\u0430\u0439\u0442\u0435, \u043a\u0430\u043a \u0441 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u0437\u0430\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043c \u043e\u0434\u043d\u0430 \u043f\u0430\u043b\u043e\u0447\u043a\u0430 \u0432 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u0440\u0435. \u0423 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c n \u043f\u0430\u043b\u043e\u0447\u0435\u043a, \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0430 \u043c\u0430\u0441\u043a\u0430 \u0438 \u0432\u0435\u0441. \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e solution, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u043b\u043e\u0447\u0435\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043c \u043e\u0434\u043d\u0430 \u043f\u0430\u043b\u043e\u0447\u043a\u0430 \u0432 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u0440\u0435.\n\n\u041f\u0430\u043b\u043e\u0447\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0440\u0430\u0437\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430, \u0440\u0430\u0437\u043d\u044b\u0435 \u0441\u0438\u043b\u044b.\n\n\u041f\u0430\u043b\u043e\u0447\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u0440\u0435.\n\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435. \u041f\u0430\u043b\u043e\u0447\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u043c\u0430\u0441\u043a\u0443, \u0438 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0435.\n\n\u0423 \u0432\u0430\u0441 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u0440\u0435.\n\n\u041f\u0430\u043b\u043e\u0447\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043d\u0430\u0445\u043e\u0434\u0438\u043c\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c. \u0412 \u043f\u0430\u043b\u043e\u0447\u043a\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043c\u0430\u0441\u043a\u0430 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 \u0447\u0435\u043c \u043d\u0430 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0443 \u0440\u0430\u0437\u043c\u0435\u0440\u0430. \u041f\u043e \u043c\u0435\u0440\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u0441\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u043c\u0438.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u0434\u0430\u044e\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u0430 n \u0438 m (1 \u2264 m, n \u2264 100, 0 \u2264 m \u2264 n). \u0414\u0430\u043b\u0435\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0442 mn \u0441\u0442\u0440\u043e\u043a, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0435 \u043c\u0430\u0441\u043a\u0438 \u0438 \u0432\u0435\u0441 \u043f\u0430\u043b\u043e\u0447\u043a\u0438, \u043a\u0430\u0436\u0434\u0430\u044f \u043d\u0430 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435.\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u043b\u043e\u0447\u0435\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 \u0447\u0435\u043c \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u0440\u0435.\n\n\u041f\u0430\u043b\u043e\u0447\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0440\u0430\u0437\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430, \u0440\u0430\u0437\u043d\u044b\u0435 \u0441\u0438\u043b\u044b.\n\n\u041f\u0430\u043b\u043e\u0447\u043a\u0438 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0432 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u0440\u0435.\n\n\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0430\u0441\u0441\u0438\u0432\u0435. \u041f\u0430\u043b\u043e\u0447\u043a\u0430 \u0438\u043c\u0435\u0435\u0442 \u043c\u0430\u0441\u043a\u0443, \u0438 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0435.\n\n\u041f\u0430\u043b\u043e\u0447\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043d\u0430\u0445\u043e\u0434\u0438\u043c\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c. \u0412 \u043f\u0430\u043b\u043e\u0447\u043a\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043c\u0430\u0441\u043a\u0430 \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 \u0447\u0435\u043c \u043d\u0430 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0443 \u0440\u0430\u0437\u043c\u0435\u0440\u0430. \u041f\u043e \u043c\u0435\u0440\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0432\u0441\u0435 \u043f\u0430\u043b\u043e\u0447\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n0 0\n0 1\n1 0\n1 1\n''') == '5'\nassert solution('''4\n0 0\n0 1\n1 0\n1 1\n''') == '5'\nassert solution('''5\n0 0\n0 1\n1 0\n1 1\n0 2\n1 2\n''') == '0'"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '5'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1\n''') == '5'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5'"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 0, 0, 1, 1]) == \"5\"\nassert solution([4, 0, 0, 1, 1]) == \"5\"\nassert solution([4, 0, 0, 1, 1]) == \"5\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == '1'\nassert solution(\"2\") == '2'\nassert solution(\"5\") == '3'\nassert solution(\"3\") == '1'\nassert solution(\"9\") == '5'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5'\nprint(solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n'))\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\"\nassert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"6\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"5\"\n\"\"\""
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '4'\nassert solution('1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '5'\nassert solution('10\\nW 5\\nW 4\\nB 2\\nW 7\\nB 7\\nW 6\\nB 6\\nW 3\\nB 1\\nW 9\\nW 8\\nW 2\\nW 7\\nB 4\\nW 1\\nB 8\\nW 9\\nW 3\\nB 5\\nW 10\\nW 6\\nB 9\\nW 2\\nW 6\\nB 4\\nW 3\\nB 8\\nW 4\\nW 7\\nB 9\\nW 2\\nW 5\\nB 3\\nW 8\\nW 10\\nW 2\\nW 9\\nW 7\\nW 1\\nB 7\\nW 6\\nB 10\\nW 10\\nB 6\\nW 5\\nB 4\\nW 8\\nW 3\\nW 9\\nW 2\\nB 8\\nW 3\\nW 4\\nB 2\\nW 2\\nW 5\\nW 3\\nB 5\\nW 9\\nB 1\\nW 6\\nB 2\\nW 4\\nW 6\\nW 8\\nW 9\\nW 10\\nB 3\\nW 6\\nB 10\\nW 8\\nB 7\\nW 9\\nB 1\\nW 3\\nW 9\\nB 5\\nW 2\\nB 6\\nW 9\\nB 4\\nW 7\\nW 9\\nB 8\\nW 7\\nW 3\\nW 8\\nW 1\\nW 10\\nB 6\\nW 5\\nW 1\\nW 2\\nB 2\\nW 9\\nW 6\\nB 6\\nW 1\\nB 1\\nW 4\\nW 7\\nW 8\\nW 1\\nW 9\\nW 2\\nW 10\\nB 3\\nW 5\\nW 4\\nB 1\\nW 6\\nB 3\\nW 8\\nW 10\\nW 9\\nB 6\\nW 1\\nB 3\\nW 8\\nW 2\\nW 9\\nW 7\\nB 8\\nW 4\\nW 7\\nW 10\\nW 2\\nW 3\\nW 9\\nW 1\\nW 9\\nW 5\\nW 10\\nW 4\\nW 8\\nW 7\\nW 6\\nW 5\\nW 2\\nW 8\\nW 10\\nW 3\\nW 5\\nW 8\\nW 6\\nW 1\\nW 4\\nB 1\\nW 9\\nW 8\\nB 3\\nW 5\\nB 8\\nB 2\\nW 4\\nB 3\\nW 1\\nW 7\\nW 2\\nW 10\\nB 1\\nW 7\\nW 5\\nW 4\\nW 9\\nB 4\\nW 3\\nB 2\\nW 2\\nW 10\\nW 5\\nW 6\\nB 3\\nW 9\\nB 6\\nW 5\\nB 10\\nW 1\\nW 5\\nW 8\\nW 6\\nB 4\\nW 8\\nB 7\\nW 2\\nW 8\\nB 5\\nW 10\\nB 2\\nW 7\\nW 8\\nW 7\\nW 5\\nW 9\\nW 3\\nB 2\\nW 7\\nW 6\\nW 4\\nW 10\\nW 9\\nB 3\\nB 7\\nW 9\\nB 3\\nW 1\\nW 3\\nW 2\\nB 4\\nW 9\\nB 4\\nW 9\\nB 7\\nW 7\\nB 5\\nW 5\\nB 6\\nW 5\\nB 8\\nW 4\\nW 2\\nW 10\\nW 3\\nW 7\\nB 7\\nW 4\\nW 9\\nW 1\\nB 5\\nW 5\\nB 1\\nW 2\\nW 9\\nB 4\\nW 5\\nB 4\\nW 9\\nB 1\\nW 4\\nW 1\\nB 7\\nW 3\\nW 9\\nW 7\\nW 6\\nW 8\\nB 7\\nW 9\\nW 4\\nW 8\\nW 2\\nW 9\\nW 1\\nW 5\\nB 3\\nW 6\\nW 1\\nW 2\\nW 4\\nW 5\\nW 9\\nW 7\\nB 1\\nB 8\\nW 1\\nB 7\\nW 1\\nW 7\\nW 5\\nW 8\\nW 2\\nW 3\\nW 4\\nW 9\\nB 2\\nW 9\\nW 1\\nW 2\\nW 5\\nW 5\\nW 10\\nW 7\\nW 3\\nW 8\\nB 3\\nW 5\\nB 7\\nW 4\\nW 8\\nW 1\\nW 9\\nW 2\\nW 10\\nW 6\\nB 3\\nW 9\\nB 6\\nW 1\\nB 3\\nW 8\\nW 5\\nW 4\\nW 7\\nB 4\\nW 3\\nB 8\\nW 6\\nB 2\\nW 4\\nW 3\\nW 2\\nB 5\\nW 5\\nB 1\\nW 2\\nW 5\\nB 7\\nW 3\\nW 7\\nW 6\\nW 4\\nW 1\\nB 7\\nW 4\\nW 2\\nW 9\\nW 8\\nW 5\\nW 10\\nW 2\\nW 3\\nW 4\\nW 8\\nW 9\\nW 7\\nW 6\\nW 5\\nW 3\\nB 1\\nW 9\\nW 8\\nB 7\\nW 3\\nW 8\\nW 4\\nW 10\\nW 1\\nW 5\\nW 7\\nW 6\\nW 8\\nW 9\\nW 5\\nW 2\\nW 10\\nW 10\\nW 2\\nW 8\\nW 1\\nW 3\\nW 9\\nB 2\\nW 10\\nB 3\\nW 5\\nB 4\\nW 1\\nW 6\\nW 2\\nW 8"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n''') == '4'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\nB 1\nB 2\nW 3\nW 1\nW 2\nB 4\nB 3\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\nassert solution(\"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"3\"\nassert solution(\"2\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\n\nprint(solution(input()))"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n') == '4'"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n''') == '4'\nassert solution('''5\nB 4\nW 3\nB 1\nW 5\nB 2\n''') == '7'\nassert solution('''4\nW 2\nW 3\nB 2\n''') == '3'\nassert solution('''2\nW 1\nW 3\n''') == '1'\nassert solution('''3\nW 4\nW 5\nB 3\n''') == '1'\n'''"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\nW 1\\nB 2') == '4'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n''') == '4'"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n2\") == \"4\"\nassert solution(\"5\\n3\\n5\") == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n6\\n3') == '4'\nassert solution('5\\n3\\n5') == '4'\nassert solution('10\\n4\\n2') == '3'\nassert solution('10\\n7\\n3') == '4'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n6\n3\n\n''') == '4'\nassert solution('''5\n3\n5\n\n''') == '4'"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([5, 6, 3]) == 4\nassert solution([5, 3, 5]) == 4\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n6\\n3') == '4'\nassert solution('5\\n3\\n5') == '4'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '6'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n6\n3\n''') == '4', 'One'\n\nassert solution('''5\n3\n5\n''') == '4', 'Two'\n\nassert solution('''5\n2\n5\n''') == '3', 'Three'"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('8 1 2 4 8 16 32 64 576') == '32'"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2\n''') == '2'\nassert solution('''\n8\n1 2 4 8 16 32 64 576\n''') == '32'\nassert solution('''\n2\n4\n''') == '4'\n''')"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('8 1 2 3 4 5 6 7 8') == '32'\nassert solution('100 10 20 30 40 50 60 70 80 90 100') == '100'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 2\nassert solution('4 2') == 2\nassert solution('8 1 2 4 8 16 32 64 576') == 32\nassert solution('3 1 4 5 6 7 8 9') == 29\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 2\nassert solution([1, 2, 4, 8, 16, 32, 64, 576]) == 32\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 4 8 16 32 64 576\") == '32'\nassert solution(\"4 2\") == '4'\n\n\nimport math\n\nclass Solution:\n    def solve(self, a):\n        ans = math.sqrt(a[0])\n        for i in a[1:]:\n            ans = max(ans, math.sqrt(i))\n        return ans\n\nassert Solution().solve([4, 2]) == 2\nassert Solution().solve([8, 1, 2, 4, 8, 16, 32, 64, 576]) == 32\nassert Solution().solve([4, 2, 6, 8, 16, 32, 64, 576]) == 32"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n4 2\n''') == '2'\nassert solution('''8\n1 2 4 8 16 32 64 576\n''') == '32'\nprint(solution('''2\n4 2\n'''))"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 4 8 16 32 64 576') == '32'"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('8') == '32'\n'''\nfrom math import sqrt\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"1 2\\n100 250\") == \"1\""
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n5\\n10 2 5 3 4\\n\") == \"3\"\nassert solution(\"2 2\\n4\\n4 2 5 1 5\\n\") == \"2\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n100 300 450 500\n''') == '2'\n\nassert solution('''50 2\n100 25\n''') == '3'"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([400, 4], [100, 300, 450, 500]) == \"2\"\nassert solution([50, 2], [100, 25]) == \"3\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\n100 300 450 500\n''') == '2'\n\nassert solution('''50 2\n100 25\n''') == '3'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n100 300 450 500\n''') == '2'\n\nassert solution('''\n50 2\n100 25\n''') == '3'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n\"\n    \"100 300 450 500\"\n) == \"2\"\n\nassert solution(\n    \"50 2\"\n    \"100 25\"\n) == \"3\""
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''400 4\n100 300 450 500\n''') == '2'\n\nassert solution('''50 2\n100 25\n''') == '3'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('400 4') == '2'\nassert solution('50 2') == '3'\nprint(solution(input()))\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == '3'\nprint(solution(input_string))\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 2\"\n) == \"6\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"6\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '6'"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"10 20\") == \"24\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '6'\nassert solution('1 3') == '6'\nassert solution('3 2') == '6'\nassert solution('1 4') == '5'\nassert solution('4 2') == '5'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"6\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"5 5\") == \"17\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"499122178\"\nassert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\nassert solution(\"5\") == \"499122178\"\nassert solution(\"6\") == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"499122178\"\nassert solution(\"2\") == \"499122178\"\nassert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\nassert solution(\"5\") == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '499122178'\nassert solution('4') == '499122178'"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"3/2=1 ~(mod 998244353)=499122178\", solution\nassert solution(\"2\") == \"2/2=1 ~(mod 998244353)=499122178\", solution\nassert solution(\"3\") == \"1/2=1 ~(mod 998244353)=499122178\", solution\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    2\n    ''') == '3/2'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"2\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\nassert solution(\"100\") == \"50212863179781666383801616745025941379518353128399462748217243728642990447566336479288399251888521829528224375890549731239165122875182657892766154873595225147939556924585080863127156963248026971491597383733543984781110202611082718136495147481888398710891292704330199588544947516747526701194045328013676202213072409861278247159449838878773565667368655187087683579451264436029111328794562217809928095749531278242114424889738994189470834754329671369378562874917651729683750870542227992869229195749331507888125670963\""
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '499122178'\n\"\"\""
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '499122178'\nassert solution('5') == '499122178'\nassert solution('6') == '499122178'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('5') == '0'\n\n---\n\nx = lambda a: (a+1)%2\ns = int(input())\nq = int(input())\ncnt_black_at_end_of_game = 1\nfor i in range(1, s+1):\n    cnt_black_at_end_of_game *= x(q)\nprint(cnt_black_at_end_of_game)\n\"\"\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    ''') == '6669'\n\nassert solution('''\n    5\n    ''') == '6669'\n\nassert solution('''\n    10\n    ''') == '-1'"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"10\") == \"-1\""
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\n\nassert solution('101') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n''') == '1 4 3 2 0'\nassert solution('''2\n''') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '-1'\nassert solution('5') == '1 4 3 2 0'\nassert solution('10') == '1 0 2 4 3'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n''') == '-1'\n\nassert solution('''\n5\n''') == '1 4 3 2 0'\n\nassert solution('''\n2\n''') == '-1'\n\nassert solution('''\n3\n''') == '1 0 2'\n\nassert solution('''\n4\n''') == '0 1 2 3'"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '-1'\n\nimport sys"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\n\n\"\"\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n0 1 2') == '-1'\nassert solution('2\\n1 1') == '1 4 3 2 0'\nassert solution('1\\n0 1') == '1 0 2 4 3'\n\n'''"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == \"Yes\"\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == \"No\""
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 2\\n1 3\\n2 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"No\"\nassert solution(\"1\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"2\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\"\n\nstdin = \"\"\"3\n1 2\n1 3\n2 4\n1 2 4 3\n\"\"\"\n\nassert solution(stdin) == \"Yes\"\n\nstdin = \"\"\"5\n1 2\n1 3\n1 4\n2 4\n2 5\n3 4\n4 5\n1 2 3 4\n1 2 4\n1 3 4\n1 4 5\n\"\"\""
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\nassert solution('''\n5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == 'Yes'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'No'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n') == 'Yes'\nassert solution('3\\n1 2\\n1 3\\n2 4\\n') == 'No'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\\n1\\n2\\n1\\n2\\n1\\n3\\n\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\\n\") == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No'"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"6\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 3 4 2\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 3 4 2\") == \"No\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\n\n\nprint(\"solution success!\")\n\n\n\"\"\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n1 3\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\") == \"No\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\") == \"Yes\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 6 5') == '24500'\nassert solution('2 4 5') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 6 5') == '24500'\nassert solution('2 4 5') == '-1'\nassert solution('3 2 0 5500') == '24500'\nassert solution('2 2 0 6000') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n''') == '24500'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 6 5') == '24500'\nassert solution('2 4 5') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"1 1 0 5000\") == \"24500\"\nassert solution(\"2 4 5\") == \"24500\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500') == '24500'\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n') == '-1'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n''') == '24500'\nassert solution('''2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n''') == '-1'\nassert solution('''3 4 5\n1 2 0 5000\n3 2 0 5500\n2 2 0 6000\n8 0 1 7000\n''') == '24500'\nassert solution('''2 4 5\n1 2 0 5000\n3 2 0 5500\n2 2 0 6000\n8 0 1 7000\n''') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n\"\"\") == \"24500\"\nassert solution(\"\"\"\n1 1 0 5000\n3 2 0 5500\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n\"\"\") == \"24500\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"24500\"\nassert solution() == \"-1\"\nassert solution() == \"-1\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n''') == '24500'\nassert solution('''\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n''') == '-1'"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 45\") == \"0.828427125\"\nassert solution(\"6 4 30\") == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 45\\n\") == \"0.828427125\"\nassert solution(\"6 4 30\\n\") == \"19.668384925\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 45\\n') == '0.828427125'\nassert solution('6 4 30\\n') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 45\\n') == '0.828427125'\nassert solution('6 4 30\\n') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 1 45\n\"\"\") == \"0.828427125\"\nassert solution(\"\"\"\n6 4 30\n\"\"\") == \"19.668384925\"\n\"\"\")\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3000\"\nassert solution(\"3 4\") == \"992\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"3 1\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3000\"\nassert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '3000'\nassert solution('3 4') == '992'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3000'\nassert solution('3 4') == '992'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 3]) == '3000'\nassert solution([3, 4]) == '992'\nassert solution([2, 4]) == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n\") == \"3000\"\nassert solution(\"2 4\\nDEF 0\\nATK 0\\n0\\n1\\n\") == \"1\""
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3000'\nassert solution([\n    'ATK 10',\n    'ATK 100',\n    'ATK 1000',\n    '1',\n    '11',\n    '101',\n    '1001',\n    ]) == '992'\nassert solution([\n    'ATK 2000',\n    'DEF 0',\n    'ATK 0',\n    '0',\n    '0',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1',\n    '1"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3000\""
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n''') == '3000'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n\n''') == '6'\nassert solution('''\n2 2\n1 2\n0 0\n2 1 -100 -100\n\n''') == '2'\nassert solution('''\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n\n''') == '62'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4') == '6'\nassert solution('2 2') == '2'\nassert solution('5 4') == '62'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\nassert solution('''2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2'\nassert solution('''5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62'\n\n\"\"\"\n\nfrom typing import List\nimport math\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '6'\nassert solution('2 2') == '2'\nassert solution('1 2') == '1'\nassert solution('3 3 1 2 1') == '1'\nassert solution('10 10 10 10 10 10 10 10 10 10 10') == '100'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n\") == \"6\"\nassert solution(\n    \"5 4\\n4 3 2 1 1\\n0 2 6 7 4\\n\") == \"2\"\n\n\"\"\""
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == str(output)\n\n\n\"\"\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n') == '6'\nassert solution('2 2\\n0 2\\n2 1 -100 -100\\n') == '2'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\nassert solution('''\n2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2'\nassert solution('''\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62'\n'''\n\nstdin = '''\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n'''\nprint(solution(stdin))\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n\"\"\") == \"6\"\nassert solution(\"\"\"\n2 2\n1 2\n0 0\n2 1 -100 -100\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 4\n4 3 2 1 1\n0 2 6 7 4\n\"\"\") == \"10\"\nassert solution(\"\"\"\n5 4\n4 3 2 1 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n\"\"\") == \"18\"\nassert solution(\"\"\"\n5 4\n4 3 2 1 1\n0 2 6 7 4\n1 2 3 4 5 6 7 8 9\n\"\"\") == \"22\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaba\") == \"YES\", \"Not correct\"\nassert solution(\"abaa\") == \"YES\", \"Not correct\"\nassert solution(\"aabb\") == \"NO\", \"Not correct\"\nassert solution(\"bbaa\") == \"NO\", \"Not correct\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abab') == 'NO'\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaba') == \"YES\"\nassert solution('aabb') == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\naaba\nabaa\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\naabb\nabab\n\"\"\"\n) == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"bbaa\") == \"YES\"\n\n'''\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"abab\") == \"NO\"\nassert solution(\"baaa\") == \"YES\"\nassert solution(\"bbab\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n') == 'YES'\nassert solution('5\\n') == 'NO'\nassert solution('2\\n2\\n') == 'YES'\nassert solution('1\\n') == 'NO'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"1\") == \"NO\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == \"YES\"\nassert solution('1') == \"NO\"\nassert solution('2') == \"NO\"\n\nInput\n1\n\nOutput\nYES\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n\nOutput\nNO\n\nInput\n1\n\nOutput\nYES\n''') == 'NO'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1\n''') == 'NO'\nassert solution('''1\n2\n''') == 'YES'\nassert solution('''9\n1\n''') == 'YES'\nassert solution('''5\n2\n1\n4\n3\n''') == 'YES'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n\n4\n''') == 'NO'\nassert solution('''\n2\n\n3\n\n''') == 'YES'\nassert solution('''\n1\n\n3\n\n''') == 'YES'\nassert solution('''\n4\n\n4\n\n''') == 'YES'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"NO\""
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == \"NO\"\nassert solution('2') == \"YES\"\nassert solution('3') == \"YES\"\nassert solution('4') == \"NO\"\nassert solution('5') == \"YES\""
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 2\nab\nac\ncd\n1 2\n\"\"\") == 'Yes'\n\nassert solution(\n\"\"\"\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\"\"\") == 'Yes'\n\nassert solution(\n\"\"\"\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\"\"\") == 'No'"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\nab\nac\ncd\n1 2\n''') == 'Yes'\nassert solution('''\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n''') == 'Yes'\nassert solution('''\n4 4\na\nb\nc\ndd\n1 2 3 4\n''') == 'No'\nassert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == 'Yes'\nassert solution('''\n1 2 3\n''') == 'Yes'\n'''"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''5 2\nab\nac\ncd\n1 2\n\n'''\n) == 'Yes'\n\nassert solution(\n'''4 4\na\nb\nc\ndd\n1 2 3 4\n\n'''\n) == 'No'\n\nassert solution(\n'''6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\n'''\n) == 'Yes'"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('5 3') == 'Yes'\nassert solution('4 4') == 'No'\nassert solution('6 3') == 'No'"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\naaaa\nbbbb\nccc\ndddd\n1 2 3 4\n\n''') == \"Yes\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2\\nab\\nac\\n') == 'Yes'\nassert solution('5 3\\ntest\\ntezt\\ntest.\\nest\\n1 4 5\\n') == 'Yes'\nassert solution('6 3\\n.svn\\n.git\\n....\\n...\\n..\\n.\\n1 2 3\\n') == 'No'\nassert solution('7 3\\nab\\nabc\\n.123\\n1.2\\n3.\\n1\\n') == 'Yes'\nassert solution('8 3\\nab\\nac\\n.123\\n1.2\\n3.\\n1\\n') == 'Yes'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\nab\\nac\\ncd\\n1 2 3 4\\n\") == \"Yes\\n?es?\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\nab\nac\ncd\n1 2\n\nOutput\nYes\na?\n\nInput\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\nOutput\nYes\n?es?\n\nInput\n4 4\na\nb\nc\ndd\n1 2 3 4\n\nOutput\nNo\n''') == '''Yes\n?es?\n\nInput\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\nOutput\nNo\n'''"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('5 3') == 'Yes'\nassert solution('4 3') == 'No'\nassert solution('6 3') == 'No'\nassert solution('5 4') == 'Yes'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"6 3\") == \"No\"\nassert solution(\"7 3\") == \"No\"\nassert solution(\"10 10\") == \"Yes\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('3') == '2'\nassert solution('3') == '2'\nassert solution('3') == '2'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"4\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 5 3\") == \"2\"\nassert solution(\"1 2 5 5 2\") == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == '2'\nassert solution(\"5\") == '2'"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 3') == '2'\nassert solution('3\\n1 2 3') == '3'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('4\\n1 2 3 4') == '3'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '10'\nassert solution('1') == '1'\nassert solution('12') == '1'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"4\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n') == \"2\"\nassert solution('2\\n1 2 3\\n') == \"2\"\nassert solution('3\\n1 2 1\\n') == \"1\"\nassert solution('3\\n1 2 2\\n') == \"1\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '3'\nassert solution('''4\n1 2\n2 3\n3 4\n5 6\n7 8\n''') == '4'\nassert solution('''10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n''') == '5'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"4\"\nassert solution(\"10\") == \"8\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '3'\nassert solution('5') == '1'\n\"\"\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2\n2 3\n3 4\n''') == '2'\n\nassert solution('''4\n1 2\n2 3\n3 4\n''') == '1'\n\nassert solution('''10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n''') == '3'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''3\n1 2\n2 3\n3 4\n''') == '1'\nassert solution('''4\n1 2\n2 3\n3 4\n''') == '1'\nassert solution('''3\n1 2\n2 3\n3 4\n''') == '1'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([4]) == '2'\nassert solution([1, 2, 3, 4]) == '2'"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"3\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\") == \"3\"\n\"\"\"\n\nimport sys\nfrom collections import deque\nsys.setrecursionlimit(100000)\ninput = sys.stdin.readline\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\n\"\"\""
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2 5') == \"4\"\nassert solution('10 3 10') == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\nprint('done!')"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 3 10\") == \"5\"\nassert solution(\"7 2 5\") == \"4\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 10') == '4'\nassert solution('10 3 10') == '5'\nassert solution('1 2') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 5') == '4'\nassert solution('10 3 10') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 2 5\n\n''') == '4'\nassert solution('''5 2 10\n\n''') == '4'\nassert solution('''0 2 7\n\n''') == '5'"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '2'\nassert solution('''5 4\n1 2\n1 3\n1 4\n3 4\n''') == '1'\nassert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '2'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"1 2 3\"\nassert solution(\"4 4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([5,6]) == '1'\nassert solution([4,4]) == '1'\nassert solution([4,5]) == '2'\nassert solution([4,1]) == '2'\nassert solution([1,2]) == '1'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5''') == '2'\nassert solution('''5 5\n1 2\n1 3\n1 4\n2 3\n2 4\n3 5''') == '1'\nassert solution('''4 4\n1 2\n1 3\n1 4\n3 4\n''') == '1'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\") == \"1 2 3 4 5\"\nassert solution(\"4 4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n\"\"\") == \"2\n\nassert solution(\n\"\"\"\n4 4\n1 2\n1 3\n1 4\n3 4\n\n\"\"\") == \"1\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"2\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n''') == '2'\nassert solution('''\n4 4\n1 2\n1 3\n1 4\n3 4\n''') == '1'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('5') == 'No'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n75 150 75 50\n''') == 'Yes'\nassert solution('''\n3\n100 150 250\n''') == 'No'\n\n'''\nThe tests run quickly when we don't have a huge set of input files.\n\nOnce we have a set of input files, we need to be clever and choose a good set of algorithms.\n\nThis set of algorithms is most useful for finding the right one. In the example above, we found the solution by brute force.\n\nNext, we need to handle the case when the player tries to win a casino.\n\nIn this case, we can use a brute force algorithm. In the first sample, it is possible to make all bids equal.\n\nIn the second sample, it is impossible.\n'''\n\n'''\nA better approach could be to think about the problem as a tree-like graph. We can use this graph to find the solution:\n\nLet the list of pairs be pairs = [(1, 2), (1, 3), (2, 3), (2, 4), (3, 4), (4, 5)], where each pair is a bid.\n\nWe can create a graph by the following:\n\nLet graph be a graph G = (V, E) with vertices from 1 to n, and edges from pairs.\n\nTo check whether the solution is possible, we need to find all the vertices of G with degree 1.\n\nTo find the degree of each node v in G, we can iterate over all edges of G,\nand for each edge of the graph, compute v_u = v_v, and add the edge to the graph.\n\nLet's go over an example:\n\n\nAt the first iteration, graph is empty (graph is empty, so its degrees are empty).\n\nNow we want to add an edge from (1, 2) to (2, 3) so that graph contains two vertices: 1 and 3.\n\nNow we want to add an edge from (1, 2) to (2, 4) so that graph contains two vertices: 1 and 4.\n\nNow we want to add an edge from (1, 2) to (2, 5) so that graph contains two vertices: 1 and 5.\n\nNow we want to add an edge from (2, 3) to (2, 4) so that graph contains two vertices: 2 and 4.\n\nNow we want to add an edge from (2, 3) to (2, 5) so that graph contains two vertices: 2 and 5.\n\nNow we want to add an edge from (2, 3) to (3, 4) so that graph contains two vertices: 2 and 4.\n\nNow we want to add an edge from (3, 4) to (3, 5) so that graph contains two vertices: 3 and 5.\n\nNow we want to add an edge from (3, 4) to (4, 5) so that graph contains two vertices: 4 and 5.\n\nLet's check whether the solution is possible:\n\nNow we can check if a graph is connected by iterating over its vertices:"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n75 150 75 50\\n') == \"Yes\"\nassert solution('2\\n100 150 250\\n') == \"No\"\nassert solution('3\\n100 150 250\\n') == \"Yes\"\nassert solution('4\\n75 150 75 50\\n') == \"Yes\"\nassert solution('5\\n100 150 250\\n') == \"No\"\n\"\"\"\n\nn = int(input())\narr = list(map(int, input().split()))\nsum = 0\n\nfor i in range(n):\n    sum += arr[i]\n    if sum == 0:\n        return \"Yes\"\n    elif sum < 0:\n        sum = 0\n\nreturn \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1\n10\n''') == 'Yes'\nassert solution('''3\n3\n10\n9\n''') == 'No'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n75 150 75 50\\n') == 'Yes'\nassert solution('3\\n100 150 250\\n') == 'No'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'Yes'\n\nassert solution() == 'No'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n75 150 75 50') == \"Yes\"\nassert solution('3\\n100 150 250') == \"No\""
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == 'Yes'\nassert solution('3') == 'No'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n75 150 75 50\n''') == \"Yes\"\nassert solution('''3\n100 150 250\n''') == \"No\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n50 50 50 50\n''') == '150'\nassert solution('''\n2\n-1 -100 -1\n''') == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n50 50 50\n''') == '150'\nassert solution('''2\n-1 -100 -1\n''') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"150\"\nassert solution(\"2\") == \"100\"\nassert solution(\"100\") == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n50 50 50\\n') == '150'\nassert solution('2\\n-1 -100 -1\\n') == '100'\nassert solution('3\\n-1 -1 -1\\n') == '0'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '150'\nprint(solution(input))\n\n\"\"\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([10, 20, 30, 40, 50, 60, 70, 80, 90, 100]) == 150\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == '150'\nassert solution(\"2\") == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n10 20 30 40 50\\n') == '150'\nassert solution('5\\n10 -20 -30 -40 50\\n') == '100'\nprint(solution(input()))\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 2, 4, 1, 1]) == '150'\nassert solution([1, -1, 1, -1]) == '100'\nassert solution([-1, -1, -1, 1, -1]) == '0'\nprint('All test cases passed')\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '150'\nassert solution('2') == '100'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5\\n'\n                'ab a\\n'\n                'cc c\\n'\n                'ca a\\n'\n                'ee c\\n'\n                'ff d\\n') == '4'\n\nassert solution('6 2\\n'\n                'bb a\\n'\n                'ba a\\n') == '1'\n\nassert solution('6 1\\n'\n                'bb a\\n') == '0'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\nab a\ncc c\nca a\nee c\nff d''') == \"4\"\nassert solution('''6 2\nbb a\nba a''') == \"0\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5\nab a\ncc c\nca a\nee c\nff d\n\n''') == \"4\"\n\nassert solution('''\n2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n\n''') == \"1\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 8') == '4'\nassert solution('3 5') == '4'\nassert solution('6 2') == '1'\nassert solution('10 10') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == \"1\", \"Input 1\"\nassert solution('3 5') == \"4\", \"Input 2\"\nassert solution('6 2') == \"1\", \"Input 3\"\nassert solution('6 0') == \"0\", \"Input 4\"\nassert solution('6 2') == \"0\", \"Input 5\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5\nab a\ncc c\nca a\nee c\nff d''') == '4'\n\nassert solution('''2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c''') == '1'\n\nassert solution('''6 2\nbb a\nba a\n''') == '0'"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\nab a\\nc\\nca a\\nee c\\ncc d\\ndc c\\ncc f\") == \"4\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"6 2\") == \"1\"\nassert solution(\"6 0\") == \"0\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"6 3\") == \"0\"\n\n------ Notes ------\n\n1. solution = solution() only works for input of length >= 1.\n2. Solution only works for values of q <= 36.\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"2 8\") == \"1\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5') == '4'\nassert solution('2 8') == '1'\nassert solution('6 2') == '0'"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3''') == '3'\nassert solution('''1\n3\n3''') == '4'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n''') == '3'\nassert solution('''3\n''') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n\n'''"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution() == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '10'\nassert solution('4') == '14'\nassert solution('6') == '17'\nassert solution('7') == '20'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1.000000000000'\nassert solution('3 3') == '1.250000000000'\n\n\n\"\"\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\n\n\"\"\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1.000000000000\"\nassert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"3 3\") == \"-1\"\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"4 1\") == \"1.250000000000\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1\n''') == '1.000000000000'\nassert solution('''1 3\n''') == '-1'\nassert solution('''4 1\n''') == '1.250000000000'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == '1.000000000000'\nassert solution(\"1 3\") == '-1'\nassert solution(\"4 1\") == '1.250000000000'\n\n\"\"\""
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1.000000000000'\nassert solution('3 3') == '1.250000000000'\nassert solution('10 10') == '1.000000000000'\nassert solution('1 1.000') == '1.000000000000'\nassert solution('2 2.0000') == '-1.000000000000'\n\n\n>>> solution('1 3')\n1.000000000000\n\n>>> solution('1 1.000')\n1.000000000000\n\n>>> solution('10 10.000')\n1.000000000000\n\n>>> solution('1 1.000')\n1.000000000000\n\n>>> solution('2 2.0000')\n-1.000000000000\n\n>>> solution('2 2')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"C:/Users/User/Desktop/Python/DS/DS_Algo/DS_Algo_DS.py\", line 65, in solution\n    raise ValueError\nValueError: Invalid input\n>>> solution('4 1')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"C:/Users/User/Desktop/Python/DS/DS_Algo/DS_Algo_DS.py\", line 65, in solution\n    raise ValueError\nValueError: Invalid input\n>>> solution('-10 -10')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"C:/Users/User/Desktop/Python/DS/DS_Algo/DS_Algo_DS.py\", line 65, in solution\n    raise ValueError\nValueError: Invalid input\n\n\"\"\""
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\n\nassert solution('0 0') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"1.250000000000\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '10.0000000000'\n\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"10.0000000000\"\nassert solution([3, 1, 1, 4, 6, 3, 3, 5, 6, 3, 6, 5, 3, 5, 6]) == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '10.0000000000'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '10.0000000000'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n12\n11 8\n''') == '10.0000000000'\n\nassert solution('''\n3\n1\n1 4 1\n2 5 3\n''') == '-1'\n\nassert solution('''\n6\n2\n4 6 3 3 5 6\n2 6 3 6 5 3\n''') == '85.4800000000'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n2\n1\n1 4 1\n2 5 3\n\"\"\"\n) == \"10.0000000000\"\nassert solution(\n    \"\"\"\n3\n1\n1 4 1\n2 5 3\n\"\"\"\n) == \"-1\"\nassert solution(\n    \"\"\"\n6\n2\n4 6 3 3 5 6\n2 6 3 6 5 3\n\"\"\"\n) == \"85.4800000000\"\nassert solution(\n    \"\"\"\n6\n2\n4 6 3 3 5 6\n2 6 3 6 5 3\n\"\"\"\n) == \"10.0000000000\"\nassert solution(\n    \"\"\"\n4\n10\n100 20 10 20\n10 20 10 20\n\"\"\"\n) == \"1000.0000000000\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"10.0000000000\"\nassert solution(\"3\") == \"85.4800000000\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"10.0000000000\"\nassert solution(\"3\") == \"-1\""
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '10.0000000000'\n\"\"\"\nfrom math import log\nfrom math import floor"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n4\n2 4 1\n2 6 3 6 5 3\n''') == \"10.0000000000\"\nassert solution('''\n3\n1\n1 4 1\n2 5 3\n''') == \"-1\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1\n3\n2\n1\n5\n''') == '4'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '0'\nassert solution(sys.stdin.read()) == '4'\n\"\"\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 0, \"1st example test\"\nassert solution('10') == 4, \"2nd example test\"\nassert solution('1000') == 0, \"3rd example test\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 0"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"0\""
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n''') == '0'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 0\nassert solution('10') == 4\n\"\"\"\n\nn = int(input())\n\ndp = [0] * (n+1)\n\nfor i in range(1, n+1):\n    for j in range(i, 0, -1):\n        dp[i] += max(dp[j], dp[i-j])\nprint(dp[n])"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 0\nassert solution('10') == 4\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'abdf'\nassert solution('1 111111111111') == 'Wh'\nassert solution('2 194') == 'Hey'\nassert solution('2 139') == 'Hey'\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Wh.\\n') == 'abdef'\nassert solution('5\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n') == 'Areyoubusy'\nassert solution('10\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n') == 'Wh.\\n'\n\nimport math\nimport functools\n\nf = input().split()\na = math.ceil(len(f)/2)\nprint(f[:a] + '.' + f[a:])\n\nx = math.ceil(len(f)/2)\nprint(f[:x] + '.' + f[x:])\n\n\nprint(f)\nprint(f[:a] + '.' + f[a:])\n\nprint(f[:x] + '.' + f[x:])"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n1 2\n1 111111111111\n''') == 'Wh.'\nassert solution('''\n5 0\n0 69\n1 194\n1 139\n0 47\n1 66\n''') == 'abdef'\nassert solution('''\n10 4\n4 1825\n3 75\n3 530\n4 1829\n4 1651\n3 187\n4 584\n4 255\n4 774\n2 474\n''') == 'Areyoubusy'\n''')"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Wh\"\nassert solution(\"1 2\") == \"abdef\"\nassert solution(\"1 111111111111\") == \"Areyoubusy\"\nassert solution(\"2 1\") == \"Areyoubusy\"\nassert solution(\"2 2\") == \"Wh\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n1 2\n1 111111111111''') == 'Wh.'\nassert solution('''5\n0 69\n1 194\n1 139\n0 47\n1 66\n''') == 'Areyoubusy'''\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n') == 'Wh'\nassert solution('10\\n4 1825\\n3 75\\n3 530\\n4 1829\\n4 1651\\n3 187\\n4 584\\n4 255\\n4 774\\n2 474\\n') == 'Areyoubusy'\nassert solution('1000\\n0 69\\n1 194\\n1 139\\n0 47\\n1 66\\n') == 'Wh'\n'''\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'abdef'\nassert solution('1 111111111111') == 'abdef'\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == '?'\nassert solution('1 111111111111') == '?'\nassert solution('2 3') == '?'\nassert solution('3 4') == '?'\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1') == 'Wh'\nassert solution('1 1') == 'Wh'\nassert solution('1 2') == 'Wh'\nassert solution('1 111111111111') == 'Wh'\nassert solution('2 4') == 'Areyoubusy'\n\n\"\"\""
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"Wh\"\nassert solution(\"1 2\") == \"ab\"\nassert solution(\"1 111111111111\") == \"Areyoubusy\"\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('? +? -? +? = n') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('?+?+?+?+?-?+?+?=42') == 'Possible'\nassert solution('?-?') == 'Impossible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? +? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Possible'\nassert solution(input()) == 'Impossible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"? +? -? +? = n\") == \"Possible\"\nassert solution(\"? +? -? +? = n\") == \"Possible\"\nassert solution(\"? -? = 1\") == \"Impossible\"\nassert solution(\"? = 1000000\") == \"Possible\"\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? +? -? +? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\nprint('ok')\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? +? -? +? = 42') == 'Impossible'\nassert solution('? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''? +? -? +? +? = 42''') == 'Possible'\nassert solution('''? +? -? +? +? = 43''') == 'Impossible'\nassert solution('''? = 1''') == 'Impossible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''? +? -? +? +? = 42''') == 'Possible'\nassert solution('''? +? -? +? +? = 43''') == 'Impossible'\nassert solution('''? = 1''') == 'Impossible'\nassert solution('''? = 1000000''') == 'Possible'\nassert solution('''? = -100''') == 'Impossible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"7 4 5\"\n\"\"\""
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"7 4 5\"\nassert solution(\"4\") == \"7 4 5\"\nassert solution(\"5\") == \"7 4 5\"\nassert solution(\"6\") == \"7 4 5\"\nassert solution(\"7\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"./tests/test_input_0.txt\") == \"7 4 5\"\nassert solution(\"./tests/test_input_1.txt\") == \"7 4 5\"\nassert solution(\"./tests/test_input_2.txt\") == \"7 4 5\"\nassert solution(\"./tests/test_input_3.txt\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '7 4 5'\nassert solution('4') == '7 4 5'\nassert solution('100') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 2 0 2\n0\n0\n0\n\n\"\"\") == \"7 4 5\"\nassert solution(\"\"\"\n5\n1 2 0 2 1\n0\n0\n0\n\n\"\"\") == \"9 7 7\"\nassert solution(\"\"\"\n20\n1 2 0 2 1 2 2 1 1 2 2 2 1 2 2 2 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 1 1 2 2 2 2 1 2 1 1 2 1 1 1 2 2 2 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n0 1 0 2\\n0') == '7 4 5'\nassert solution('3\\n0 1 0') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 0 2\\n0\\n0\\n0') == '7 4 5'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0 2\\n0') == '7 4 5'\nassert solution('1\\n0\\n0\\n0\\n0') == '7 4 5'\nassert solution('1\\n0\\n0\\n0\\n0\\n0') == '7 4 5'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0') == '7 4 5'\nassert solution('1\\n0\\n0\\n0\\n0\\n0\\n0\\n0') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"7 4 5\"\nassert solution(\"3\") == \"6 4 5\"\nassert solution(\"5\") == \"6 4 5\"\nassert solution(\"6\") == \"6 4 5\"\nassert solution(\"10\") == \"8 7 6 5 4 3 2 1\"\n\na = [1, 2, 0, 2, 0, 1]"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\nabcd\\n') == 'Yes'\nassert solution('3\\nabc\\n') == 'No'\nassert solution('3\\njjj\\n') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nzzzzzzzzz\") == \"Yes\"\nassert solution(\"3\\nabcd\") == \"No\""
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"Yes\"\n\n\"\"\"\n\nn = int(input())\ns = input()\n\na = s.count('a')\nb = s.count('b')\nc = s.count('c')"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6\naabddc\n\n3\nabc\n\n3\njjj\n\n3\naaa\n\n4\naaa\naaa\naaa\naaa\n''') == \"Yes\"\n\nassert solution('''8\nbaaad\n\n3\naaa\naaa\naaa\naaa\naaa\naaa\naaa\n''') == \"No\"\n\nassert solution('''10\naaaaa\n\n3\naaa\naaa\naaa\naaa\naaa\naaa\naaa\naaa\n''') == \"Yes\"\n\nassert solution('''1\nz\n\n1\nz\n''') == \"No\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"6\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"5\") == \"No\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\naabddc\n\n3\nabc\n\n3\njjj\n''') == 'Yes'\nassert solution('''\n4\naabddc\n\n3\nabc\n\n3\njjj\n''') == 'No'\nassert solution('''\n4\naabddc\n\n3\nabc\n\n3\njjj\n''') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nabababc\") == \"Yes\"\nassert solution(\"3\\naaa\") == \"No\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == 'Yes'\nassert solution('3') == 'No'\nassert solution('3') == 'Yes'"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'Yes'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n5 8\n3 1\n''') == '54'\nassert solution('''\n7 5\n7 1\n''') == '54'\nassert solution('''\n5 2\n5 8\n3 1\n''') == '54'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n3\n1\n4\n1''') == '54'\nassert solution('''7 4\n1\n2\n1\n2''') == '1728'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '0', 'Wrong'\nassert solution('5 2') == '54', 'Wrong'\nassert solution('7 4') == '1728', 'Wrong'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n\"\"\") == \"\"\"1\n\nassert solution(\"\"\"\n3\n\"\"\") == \"\"\"0\n\nassert solution(\"\"\"\n3\n\"\"\") == \"\"\"1\n\nassert solution(\"\"\"\n8\n\"\"\") == \"\"\"35894\n\nassert solution(\"\"\"\n8\n\"\"\") == \"\"\"35894"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 4\") == \"1728\"\nassert solution(\"5 2\") == \"54\"\nassert solution(\"6 3\") == \"7\"\nassert solution(\"3 1\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n4 5''') == '54'\nassert solution('''7 4\n5 5''') == '1728'\nassert solution('''15 4\n2 1\n3 5\n6 7''') == '2512'\nassert solution('''15 4\n1 3\n2 4\n3 7''') == '1428'\nassert solution('''1 1\n1 1\n1 1\n1 1''') == '1'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\""
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '18690'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\nassert solution(\"3 3\\nWWW\\nBWW\\nWWW\") == \"2 1\"\nprint(solution(input()))"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\") == \"2 4\"\nassert solution(\"3 3\") == \"2 1\""
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"2 4\"\nassert solution(\"3 3\") == \"2 1\"\nassert solution(\"5 6\") == \"2 4\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '2 1'\nassert solution('3 3') == '2 1'\nassert solution('1 1') == '1 1'\nprint('Congratulations, have you finished the solution! You\\'ve done it correctly!')\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"2 4\"\nassert solution(\"3 3\") == \"2 1\"\nassert solution(\"4 1\") == \"2 3\"\nassert solution(\"10 10\") == \"8 9\"\nassert solution(\"10 10\") == \"8 9\""
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\\n\") == \"2 4\"\nassert solution(\"10 5\\nWWWWWWBBBBBBWWWWWWBBBBWWWWWW\\nWWWWWWBBBBWWWWWWWWBBBBWWWWWW\\nWWWWWWWWBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWWWBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWWWBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWWWBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWWWBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWWWBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWWWBBBBWWWWWWWWWWWWWWWWWW\\n\") == \"1 5\"\nassert solution(\"10 5\\nWWWWWWBBBBBBWWWWWWWWBBBBWWWWWW\\nWWWWWWBBBBBBWWWWWWWWWWBBBBWWWW\\nWWWWWWBBBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWBBBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWBBBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWBBBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWBBBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWBBBBBBWWWWWWWWWWWWWWWWWW\\nWWWWWWBBBBBBWWWWWWWWWWWWWWWWWW\\n\") == \"3 4\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '2 4'\nassert solution('3 3') == '2 1'"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\n\nassert solution('''\n3 3\nWWW\nBWW\nWWW\n''') == '1 1'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10 10\nWBWBWBWBWBWBWBWBWB\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWBWBWBWBWBWB\nBWBWBWBWBWBWBWBWBW\nWBWBWBWB"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '2 4'\nassert solution('3 3') == '2 1'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"5 6\"\nassert solution(\"2 3\") == \"5 6\"\nassert solution(\"4 5\") == \"5 6\"\nassert solution(\"5 5\") == \"5 6\"\nassert solution(\"10 10\") == \"10 9 10 10 9\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"10 9 10 10 9\""
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(test_input_1) == \"10 9 10 10 9\"\nassert solution(test_input_2) == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input) == \"10 9 10 10 9?\"\nassert solution(input) == \"10 9 10 10 9?\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"5 6\"\nassert solution(\"5 7\") == \"10 9 10 10 9\"\nassert solution(\"2 3\") == \"5 6\"\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"5 9 10 10 9\""
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9', solution('''\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''')\nassert solution('''\n2 3\n1 2\n1 2\n1 2\n''') == '5 6', solution('''\n2 3\n1 2\n1 2\n1 2\n''')\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7') == '10 9 10 10 9'\nassert solution('2 3') == '5 6'"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"5 6\"\nassert solution(\"2 4\") == \"7 7\"\nassert solution(\"5 1\") == \"10 9 10 10 9\"\nassert solution(\"3 5\") == \"7 7\""
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n-1 -1\\n2') == '2'\nassert solution('1 1\\n-1 -1\\n3') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '2'\nassert solution('-1 -1') == '2'\nassert solution('3') == '2'\nassert solution('1 0 0') == '1'\nassert solution('0 1 0') == '1'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1\n-1 -1\n2''') == '2'\nassert solution('''1 1\n-1 -1\n3\n0 1 0\n1 0 0\n1 1 -3\n\nOutput\n2\n''') == '2'"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\n-1 -1\\n2') == '2'\nassert solution('1 1\\n-1 -1\\n3') == '2'\nassert solution('1 1\\n-1 -1\\n0 0 0') == '2'\nassert solution('1 1\\n-1 -1\\n1 0 0') == '2'\nassert solution('1 1\\n-1 -1\\n1 0 0\\n0 1 0\\n0 0 0') == '1'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n-1 -1\n2\n0 1 0\n1 0 0\n''') == '2'\nassert solution('''\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3\n''') == '2'\nassert solution('''\n1 1\n-1 -1\n4\n-1 -2\n1 0 0\n0 0 0\n1 1 0\n0 1 0\n''') == '4'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\\n0 1 0\\n1 0 0\\n\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('2 1') == '1'\nassert solution('1 1') == '2'\nassert solution('1 1 2 3 4') == '3'\nassert solution('1 1 2 3 4 5') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\\n1 1 -3\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '2'\nassert solution('-1 -1') == '2'\nassert solution('2') == '0'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n-1 -1\n2\n0 1 0\n1 0 0\n''') == '2'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'\nassert solution('1 2\\n6') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == \"Kevin\"\nassert solution('2 1') == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == 'Kevin'\nassert solution('1 2') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"Kevin\"\nassert solution(\"1 2\") == \"Nicky\"\nassert solution(\"1 1\") == \"Nicky\"\nassert solution(\"1 1\") == \"Nicky\"\nassert solution(\"2 1\") == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n3\\n') == 'Kevin'\nassert solution('2 1\\n3\\n') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n3\\n') == 'Nicky'\nassert solution('2 1\\n3\\n') == 'Kevin'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'Kevin'\nassert solution('2 2') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n2\n3\n''') == 'Kevin'\n\nassert solution('''2 1\n1\n2\n''') == 'Nicky'"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == '3\\n1 2 3\\n1 2 3'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"1 2 3\") == \"2 2 2\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1') == '3'\nassert solution('1 2 3') == '3'\nassert solution('1 1 1') == '2'\nassert solution('1 1') == '-1'\n\n\n'''"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 2 2 2 2\n\nOutput\n3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '1'\nassert solution('''\n10\n1 3 7 9 2 8 5 4 6 7 8\n\nOutput\n10\n1 3 7 9 2 8 5 4 6 7 8\n1 3 7 9 2 8 5 4 6 7 8\n1 3 7 9 2 8 5 4 6 7 8\n1 3 7 9 2 8 5 4 6 7 8\n1 3 7 9 2 8 5 4 6 7 8\n1 3 7 9 2 8 5 4 6 7 8\n1 3 7 9 2 8 5 4 6 7 8\n1 3 7 9 2 8 5 4 6 7 8\n1 3 7 9 2 8 5 4 6 7 8\n1 3 7 9 2 8 5 4 6 7 8\n''') == '10'\nassert solution('''\n5\n6 2 1 3 1\n\nOutput\n6\n2 1 3 1\n2 1 3 1\n2 1 3 1\n2 1 3 1\n2 1 3 1\n''') == '6'\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n10\n4 3 1 5 2 6 4 3 1\n\nOutput\n-1\n''') == '-1'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('1') == '-1'\nassert solution('2 1') == '2 1'\nassert solution('2 1 2') == '2 1'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('1 1 1') == '1 1 1'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2 2\n''') == '1 2 3'\nassert solution('''\n3\n2 2 2\n''') == '1 2 3'\nassert solution('''\n3\n2 2 2\n''') == '1 2 3'"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '2 1'\nassert solution('3 2') == '3 2'\nassert solution('4 5') == '-1'\nprint('All tests passed!')"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == '1'\nassert solution(\"2 1\") == '1 1 1'\nassert solution(\"2 1 2\") == '1 1 1'\nassert solution(\"2 1 2 2\") == '1 1 1'\nassert solution(\"3\") == '1 2 3'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('0') == '1'\nprint('\"Run\" is good practice')"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''11\n''') == '6'\nassert solution('''01\n''') == '2'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('10') == '1'"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('0') == '1'\nassert solution('1') == '0'\nassert solution('00') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10001''') == '6'\nassert solution('''10010''') == '1'\nassert solution('''1111''') == '3'\nassert solution('''0000''') == '1'\nassert solution('''1011''') == '1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '11'\n) == '6'\n\nassert solution(\n    '01'\n) == '2'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '2'\nprint(solution(input))\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '6'\nassert solution('101') == '10'\nassert solution('01') == '2'\nassert solution('000') == '1'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n15\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"2\\n5 7\") == \"4\"\nassert solution(\"1\\n3 1 5\") == \"2\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '2'\nassert solution(\"4\") == '2'\nassert solution(\"5\") == '4'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n3 2 1\n''') == '4'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('2') == '3'\nassert solution('5 7') == '4'\nassert solution('10') == '9'"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1\n15\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n5 7\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"3\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '3'\nassert solution('1 1 2') == '3'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n1 0 2\n2 0 1\n2 0 3\n1 1 4\n4 2 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n1 0 2\n2 0 1\n1 0\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\n1 0 2\n2 0 1\n2 0 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n1 0 2\n2 0 1\n1 1 4\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n4\n1 2 3 0\n0 1 3 2\n0 2 1 3\n0 1 2 3\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('2\\n1 0\\n0 1\\n') == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n') == 'NO'\n\n\n\n------Extension------\n\nIn addition to the first sample, the islanders can have more than one island in their network.\n\nThe problem can be further extended to include more than 2 islands. The following example illustrates the problem:\n\nFor the following network, the islanders can first move statue 1 from island 1 to island 2, then move statue 2 from island 2 to island 1.\n\nIn the second sample, the islanders can simply move statue 1 from island 1 to island 2.\n\nIn the third sample, the islanders can move statues 1 and 2 (sitting on the pedestals of islands 1 and 3) to the empty pedestal.\n\nIn the fourth sample, the islanders can move the statue 1 from island 3 to island 1.\n\nGiven the network as input, determine if it is possible for the islanders to arrange the statues in the desired order.\n\n\"\"\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2 3 0\n0 3 2 1\n''') == 'YES'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 0 2\\n2 0 1\\n') == 'YES'\nassert solution('2\\n1 0\\n0 1\\n') == 'YES'\nassert solution('4\\n1 2 3 0\\n0 3 2 1\\n') == 'NO'\n\n\n'''\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"NO\""
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '9000'\nassert solution('6') == '1160'"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '9000'\nassert solution('6') == '1160'\n\n\"\"\"\n\nimport math\n\nn = int(stdin.readline())\n\ntasks = list(map(int, stdin.readline().split()))\n\nprocessors = list(map(int, stdin.readline().split()))\n\nm = int(math.ceil(sum(tasks) / len(processors)))\n\nprint(math.ceil(sum(tasks) / len(processors)))\n\nprint(m * math.ceil(sum(tasks) / len(processors)))\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '9000'\nassert solution('10') == '1160'\n\"\"\""
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\") == \"9000\"\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\") == \"1160\"\n\nimport os, sys\nfrom collections import deque\nimport math\nimport heapq\nfrom collections import defaultdict\nimport itertools\nimport time\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\n\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\n\nassert solution('''6\n8 10 9 9 8 10\n1 1 1 1 1 1\n''') == '9000'\n\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '9000'\n\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '9000'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n8 10 9 9 8 10\n1 1 1 1 1 1\n''') == '9000'\nassert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\nassert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\nassert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\nassert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == '9000'\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == '1160'\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '9000'\nassert solution('6') == '1160'\nassert solution('6') == '1163'\nassert solution('6') == '1167'\nassert solution('6') == '1171'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == '9000'\nassert solution(\"6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n\") == '1160'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2\\n2 3') == '6'\nassert solution('8 6\\n5 6\\n5 7\\n5 8\\n6 2\\n2 1\\n7 3\\n1 3\\n1 4') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6'\nassert solution('8 6') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n2 3\n1 4\n1 4\n2 1\n''') == '6', \"Simple test\"\nassert solution('''\n8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4\n''') == '1', \"More complex test\"\n\n'''\n    n, p = [int(x) for x in stdin.split()]\n    dp = [[0]*(n+1) for _ in range(n+1)]\n    for i in range(n):\n        for j in range(i+1):\n            dp[i+1][j+1] = dp[i][j]\n            if j+1 < n:\n                dp[i+1][j+1] += (dp[i][j]*(n-j))%p\n    print(dp[n][n])\n'''\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n2 3\n1 4\n1 4\n2 1''') == '6'\nassert solution('''8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4''') == '1'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 2\n2 3\n1 4\n1 4\n2 1''') == '6'\nassert solution('''8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4''') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"8 6\") == \"1\""
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2\") == \"6\"\nassert solution(\"4 2\") == \"4\""
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '6'\nassert solution('8 6') == '1'\nassert solution('5 6') == '1'\nassert solution('5 7') == '1'\nassert solution('5 8') == '1'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n2 3\\n1 4\\n1 4\\n2 1\") == \"6\"\nprint(solution(input()))\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '-1'\nassert solution('4') == '4'\nassert solution('3') == '4'"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 2 1\") == \"2\"\nassert solution(\"4 4 4 4\") == \"4\"\nassert solution(\"4 5 4 4\") == \"3\"\nassert solution(\"5 5 5 5\") == \"5\"\nassert solution(\"5 5 5 5\") == \"5\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 2 3 4 6') == '5'\nassert solution('4\\n2 4 6 8') == '-1'\nassert solution('3\\n2 6 9') == '4'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == \"5\"\nassert solution('4') == \"-1\"\nassert solution('3') == \"4\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 4 6 8\") == \"4\"\nassert solution(\"5\\n2 2 3 4 6\") == \"5\"\nassert solution(\"4\\n2 4 6 8\") == -1"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n2 4 6 8''') == '-1'\n\nassert solution('''5\n2 2 3 4 6''') == '5'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(open(0).read()) == '-1'\nassert solution(open(1).read()) == '5'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '-1'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 0\nassert solution('abacabaca') == 3\nassert solution('abaca') == 0\nassert solution('abaca') == 0\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '3'\n\n\"\"\""
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abacabaca\") == \"3\"\nassert solution(\"abaca\") == \"0\"\nassert solution(\"abacaabacaca\") == \"3\"\nassert solution(\"abacabaca\") == \"0\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 0\nassert solution('abacabaca') == 3\nassert solution('abaca') == 0\nassert solution('abacaaba') == 0\nassert solution('abacabac') == 3\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"0\"\n\nassert solution('abacabaca') == \"3\"\n\nassert solution('abaca') == \"0\"\n\nassert solution('abaca') == \"3\""
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\nassert solution('abacaba') == '0'\nassert solution('aba') == '1'\nassert solution('abc') == '0'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"5 5\") == \"2\"\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5\\n11.2.23.3.333\\n') == '2'\nassert solution('8 8\\n11.22.33\\n4.2.1\\n') == '-1'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nprint(\"Congratulations, have a nice day!\")\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 5\\n11..2\\n#..22\\n#.323\\n\"\n) == \"2\"\n\nassert solution(\n    \"2 1\\n1#2#3\"\n) == \"-1\""
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 5\n11..2\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '2'\nassert solution('4 5') == '1'\nassert solution('1 5') == '-1'"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 3\\n1 1 #2\\n1 1\") == \"1\"\nassert solution(\"3\\n3 3\\n1 1.2\\n1 1\") == \"1\"\nassert solution(\"5\\n5 3\\n1 1 #2\\n1 1.2\\n1 1.3\\n1 1.4\\n1 1.5\") == \"2\"\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\\n11.2\\n#.22\\n#.323\\n\") == \"2\"\nprint(solution(input()))"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5') == '2'\nassert solution('1 5') == '-1'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '-1'\nassert solution('8') == '6'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"-1\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(8) == \"6\"\nassert solution(3) == \"-1\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"-1\"\nassert solution(\"5\") == \"6\"\nassert solution(\"12\") == \"12\"\nassert solution(\"10\") == \"0\"\nassert solution(\"8\") == \"5\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"6\"\nassert solution(input) == \"2\"\n\"\"\"\n\nstdin = input()\nstdin = stdin.split('(')\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(tuple(open(\"/dev/stdin\"))) == '6'\nassert solution(tuple(open(\"/dev/stdin\"))) == '-1'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"(()()())(\") == \"6\"\nassert solution(\")))((\") == \"0\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5 4') == '1'\nassert solution('2 5 4') == '2 3 4'\nassert solution('4 5 6') == '2'"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('4 5 4') == '1,3'\nassert solution('3 2') == '1,2'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"4 5 4\") == \"4\"\nassert solution(\"8 9 9\") == \"3\"\nassert solution(\"4 5 4\") == \"3\"\nassert solution(\"5 6 6\") == \"2\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution('3 3 5') == '1'\nassert solution('4 5 4') == '4'\nassert solution('2 1 0 3') == '1 2 3'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('4 5 4') == '3'\nassert solution('4 5 4') == '4'"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('4 5 4') == '4'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 5\n4 4 0\n1 3\n3 2\n3 1\n''') == '1'\n\nassert solution('''\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4'\n\nassert solution('''\n6 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4'\n\nassert solution('''\n10 10 6\n1 1 3\n2 4\n5 1\n1 3\n1 5\n6 5\n6 5\n4 7\n3 5\n4 5\n2 4\n5 5\n3 5\n1 5\n''') == '3'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2 3 5\") == \"2\"\nassert solution(\"4 5 4\") == \"1\""
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4 4\\n0 1 0 3\\n2 1\\n1 2') == '3'\nassert solution('5 3 6\\n0 3 1 3 2\\n3 3\\n2 4') == '4'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 3 5\\n\"\n    \"4 4 0\\n\"\n    \"1 3\\n\"\n    \"3 2\\n\"\n    \"3 1\\n\"\n) == \"1\\n3\\n\"\n\nassert solution(\n    \"4 5 4\\n\"\n    \"2 1 0 3\\n\"\n    \"4 3\\n\"\n    \"3 2\\n\"\n    \"1 2\\n\"\n    \"1 4\\n\"\n    \"1 3\\n\"\n) == \"4\\n1 2 3 4\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'\nassert solution('5 6') == '19'\n\n\n'''\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"6 5\") == \"4\"\nassert solution(\"2 2\") == \"4\"\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2,3]) == 8"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"8\"\n\n\"\"\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == 8\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '8'\n\n\"\"\"\n\nn, m = list(map(int, input().split()))\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '8'\nassert solution('1 1') == '1'\nassert solution('2 2') == '4'\nassert solution('2 2 3') == '6'\nassert solution('3 3') == '12'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n2\n2 2 1\n1 1 2\n1 1 1\n''') == '8'\n'''\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"8\"\n\"\"\"\nimport math\nfrom functools import reduce\nfrom operator import mul\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"100 3\") == \"100\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n\n\n\nIn the first sample Dima constructed a beautiful array. For this problem we need to find the maximum amount of money that Sereja can pay.\n\nIn the second sample Sereja can pay 5 rubles. Dima constructs a beautiful array with one element. It is optimal to use the element 1.\n\nIn the third sample Dima cannot construct a beautiful array. Because of the constraints, Sereja has to use 2 elements.\n\nIn the fourth sample Sereja can pay 10 rubles, because Dima built a beautiful array with 2 elements.\n\n'''"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '5'\nassert solution('1 2') == '2'\nassert solution('100 3') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 2\n1 2\n2 3\n''') == '5'\nassert solution('''\n10 2\n1 2\n2 1\n3 1\n''') == '4'\nassert solution('''\n100 3\n1 2\n2 1\n3 1\n''') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '5'\nassert solution('1 2') == '2'\nassert solution('2 3') == '2'\nassert solution('3 1') == '100'\nassert solution('100 3') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 2') == '5'\nassert solution('100 3') == '100'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"100 3\") == \"100\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '5'\nassert solution('5 2') == '5'\nassert solution('1 2') == '5'\n\n\"\"\"\n\nimport sys\ninput = sys.stdin.readline\n\nn, m = map(int, input().split())\na = []\nfor i in range(n):\n    a.append(int(input()))"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_str) == '4'\nassert solution(input_str_2) == '100'\n\n'''\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\n'''\nimport math"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"1 2\") == \"5\"\nassert solution(\"1 1\") == \"100\"\n\n'''"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"1\"\n\n\n\"\"\""
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaabb\") == \"6\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\""
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aaaaa\") == '6'\nassert solution(\"Bessie the cow has just intercepted a text that Farmer John sent to Burger Queen! However, Bessie is sure that there is a secret message hidden inside.') == '6'\nassert solution(\"lol\") == '2'\nassert solution(\"usaco\") == '1'\nassert solution(\"Bessie the cow has just intercepted a text that Farmer John sent to Burger Queen! However, Bessie is sure that there is a secret message hidden inside.\") == '6'"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2\n\"\"\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('usaco') == '1'\nassert solution('lol') == '2'\n\n\n\"\"\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaabb\") == 6\nassert solution(\"usaco\") == 1\nassert solution(\"lol\") == 2\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n\n''') == '1'\nassert solution('''4\n\n''') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n\"\"\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n\n''') == '2'\nassert solution('''\n4\n\n''') == '1'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"8\") == \"2\"\nassert solution(\"7\") == \"2\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n\n''') == '1'\nassert solution('''4\n\n''') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n''') == '2'\nassert solution('''10\n''') == '3'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''4\n''') == '2'\nassert solution('''5\n''') == '3'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 4\n2 5\n3 6\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n3\n3 1\n2 3\n1 2\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n3\n1 4\n2 5\n3 6\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n1\n1 1\n2 2\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n2\n1 1\n2 1\n\"\"\") == \"1 1\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 2\n2 1\n''') == '2 1'\n\nassert solution('''\n3\n1 2\n2 4\n2 5\n''') == '2 1'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 4\n2 5\n3 6\n''') == '1 2'\nassert solution('''\n1 4\n3 2\n2 5\n''') == '1 2'\nassert solution('''\n1 5\n2 4\n3 6\n''') == '1 2'\nassert solution('''\n1 5\n3 2\n2 4\n''') == '1 2'\nassert solution('''\n1 5\n3 2\n2 4\n''') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 2\n1 2\n''') == '2 1\nassert solution('''\n10\n1 1\n2 1\n3 2\n3 1\n4 2\n4 1\n5 2\n5 1\n6 3\n6 1\n7 2\n7 1\n8 2\n8 1\n9 2\n9 1\n10 3\n10 1\n''') == '2 1\n'''\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 2'\nassert solution('2') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3\\n1 2\\n2 1') == '2 1'\nassert solution('3\\n2\\n1 2\\n2 1') == '2 1'\nassert solution('4\\n3\\n1 2\\n2 1') == '1 2'\nassert solution('3\\n4\\n1 2\\n2 1') == '2 1'\nassert solution('5\\n6\\n1 2\\n2 1') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == -1\nassert solution('1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2') == '2'\nassert solution('2\\n2\\n1') == '1'\nassert solution('10\\n1\\n10\\n1\\n10\\n2\\n3\\n3\\n5\\n5\\n5\\n5\\n5') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 4\n2 5\n3 6\n''') == '1 2'\nassert solution('''\n3\n1 4\n2 5\n3 6\n''') == '2 1'\nassert solution('''\n3\n1 2\n2 1\n3 1\n''') == '1 2'\nassert solution('''\n3\n1 2\n2 1\n3 1\n''') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1 2\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"4\") == \"2 1\"\nassert solution(\"4\") == \"1 2\"\nassert solution(\"5\") == \"1 2\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n2\\n3\\n') == '1 2'\nassert solution('2\\n5\\n3\\n6\\n') == '2 1'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1]) == [1]\nassert solution([2]) == [1, 2]\nassert solution([3]) == [1, 2, 3]\nassert solution([8]) == [4, 1, 1, 2, 1, 1, 1, 2]\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '2 1 1'\nassert solution('8') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('8') == '4'\nprint('Congratulations! All test cases passed.')\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '2 1'"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n\n2\n\n3\n\n4''') == \"1 2 3 4\"\n\nassert solution('''1\n\n2\n\n3\n\n4''') == \"2 1 2 1\"\n\nassert solution('''8\n\n1\n\n2\n\n3\n\n4''') == \"4\""
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"2\\n3\") == \"2 1\"\nassert solution(\"8\\n4\") == \"4\"\n\"\"\"\n\nfrom typing import List\n\nn = int(input())"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '2 1 1'\nassert solution('4') == '2 2'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '8'\nassert solution('aA') == 'a A'\nprint(solution('0rTTrT022'))\nprint(solution('aA'))\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\naabaac\n''') == 'aba aca', 'First example'\nassert solution('''\n5\naabaac\n''') == 'aba aca', 'Second example'\nassert solution('''\n6\n0rTrT022\n''') == '02TrrT20', 'Third example'\nassert solution('''\n8\n0rTrT022\n''') == '0123456789', 'Fourth example'\nassert solution('''\n1\naA\n''') == 'a A', 'Fifth example'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0rTrT022') == '02TrrT20'\nassert solution('aA') == 'a A'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1 2\"\nprint(solution(sys.stdin.read()))"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == (1, 'a A')\nassert solution('aA') == (1, 'a A')\nassert solution('aAa') == (2, 'a A a')\nassert solution('aAaa') == (2, 'a A a a')\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n\"\nassert solution(\"010110111010011101\") == \"1\\n\"\nassert solution(\"01011011101001110100110110111\") == \"2\\n\"\nassert solution(\"\") == \"1\\n\"\nassert solution(\"011011101001101\") == \"2\\n\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"8\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"0rTrT022\") == \"02 Trr T 20\""
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\\n0 A 1\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\na**d\\n2\\nabcd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\nlover\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\naaa\\n\") == \"1\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\nabcd\\nabc') == '2'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n' +\n    'lo*er' +\n    '\\n' +\n    '2' +\n    '\\n' +\n    'abcd' +\n    '\\n' +\n    'acbd') == '2'\nprint(solution('3\\n' +\n    'a*a' +\n    '\\n' +\n    '2' +\n    '\\n' +\n    'aaa'))\nprint(solution('4\\n' +\n    'a**d' +\n    '\\n' +\n    '2' +\n    '\\n' +\n    'abcd' +\n    '\\n' +\n    'acbd'))\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n*er\\n2\\naaa\\naba') == '1'\nassert solution('4\\n**d\\n2\\nabc\\naba') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\na**d\n2\nabcd\nacbd\n\n''') == '2'\nassert solution('''5\nlo*er\n2\nlover\nloser\n\n''') == '0'\nassert solution('''3\na*a\n2\naaa\naba\n\n''') == '1'\n\nsolution(\"\")"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n    aa*d\n    2\n    abcd\n    acbd\n    ''') == '2'\n\nassert solution('''5\n    lo*er\n    2\n    lover\n    loser\n    ''') == '0'\n\nassert solution('''3\n    a*a\n    2\n    aaa\n    aba\n    ''') == '1'"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1 1\n1 0 0 0 4\n''') == '1'\nassert solution('''\n6 1 2\n3 8 0 1 0 0\n''') == '2'\n'''\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1 1') == '1'\nassert solution('6 1 2') == '2'"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 1') == '1'\nassert solution('6 1 2') == '2'"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0') == '2'\nassert solution('20 3 2\\n1 9 0 1 0 0\\n1 3 0 0 0 0') == '2'"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 1') == '1'\nassert solution('6 1 2') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1 1\") == \"1\"\nassert solution(\"6 1 2\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\\n\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\\n\") == \"2\"\nassert solution(\"5 1 1\\n3 5 2 3 3 2\\n\") == \"2\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n''') == \"40\"\nassert solution('''1 42\n''') == \"1\"\nassert solution('''6 4\n''') == \"172\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1''') == '40'\nassert solution('''1 42''') == '1'\nassert solution('''6 4''') == '172'"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\"\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == \"40\"\nassert solution('1 42') == \"1\"\nassert solution('6 4') == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2 1 4\n''') == '5'\nassert solution('''4\n3 1 4 1\n''') == '6'\nassert solution('''5\n3 1 4 1 5\n''') == '11'\nassert solution('''5\n3 1 4 1 6\n''') == '8'\nassert solution('''5\n2 1 4\n''') == '5'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '6'\nassert solution('4') == '11'\nassert solution('3') == '6'\n\n\"\"\"\n\nn = int(input())\nk = list(map(int, input().split()))"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '6'\nassert solution('4') == '11'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"11\"\nassert solution(\"5\") == \"12\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n3 1 4 1 5') == '11'\nassert solution('4\\n2 1 4 1') == '6'\nassert solution('10\\n3 1 4 1 2 5 6 7 8 9 10') == '15'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('5') == '11'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"11\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 1 4\n''') == '5'\n\nassert solution('''\n4\n3 1 4 1\n''') == '6'\n\nassert solution('''\n5\n3 1 4 1 5\n''') == '11'\n\nassert solution('''\n5\n4 4 4 2 2\n''') == '10'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 1 4\n3 1 4 1\n4 1 4 1 5''') == '11'\nassert solution('''3\n2 1 4\n3 1 4 1\n4 1 4 1 5''') == '6'\nassert solution('''5\n3 1 4 1 2\n4 1 4 1 3\n5 1 4 1 4\n6 1 4 1 5\n7 1 4 1 5''') == '15'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 0 0 -1\n2 0 0 -1\n2 0 1 -1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n-1 0 -1 -1 -1\n-1 0 1 1 0\n1 1 1 1 1\n1 1 0 0 0\n1 0 -1 -1 1\n\"\"\") == \"4\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n-1\n-3\n-1\n1\n-2\n-1\n-2\n-1\n1\n-2\n-1\n1\n-2\n-1\n2\n1\n1\n-2\n-2\n''') == '1'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 0 -1') == '1'\nassert solution('4 2 4 -1') == '2'\nassert solution('7 4 5 3 -1') == '3'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n-1\n''') == '2'\nassert solution('''2\n-1\n''') == '2'\nassert solution('''3\n2 -1\n''') == '2'\nassert solution('''4\n1 0 0 -1\n''') == '1'\nassert solution('''3\n-1\n''') == '2'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 0 -1') == '1'\nassert solution('3 -1') == '2'\nassert solution('4 -1') == '2'\nassert solution('5 -1') == '2'\nassert solution('6 -1') == '2'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\n\nassert solution(\"1 0 0 -1\") == \"1\"\n\nassert solution(\"2 1\") == \"2\"\n\n'''\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n0 0 0 -1\n\n''') == '1'\n\nassert solution('''\n2\n1 -1\n\n''') == '2'\n\nassert solution('''\n3\n1 -1\n\n''') == '1'\n\nassert solution('''\n4\n1 -1\n\n''') == '2'\n\nassert solution('''\n5\n1 -1\n\n''') == '1'"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 0 0 -1\") == \"1\"\nassert solution(\"2\\n1 -1\") == \"2\"\nassert solution(\"1\\n-1\") == \"1\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0 0 -1\") == \"1\"\nassert solution(\"2 -1\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0 0 -1\") == \"1\"\nassert solution(\"1 -1\") == \"2\"\nassert solution(\"1 -1 2\") == \"2\"\nassert solution(\"1 -1 2 3\") == \"2\"\nassert solution(\"1 -1 2 3 4\") == \"2\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1, 2]) == 0\nassert solution([1, 2, 3]) == 0\nassert solution([1, 2, 3, 4]) == 0\nassert solution([1, 2, 3, 4, 5]) == 0\nassert solution([1, 2, 3, 4, 5, 6]) == 0\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('2 1 0') == '1'\nassert solution('2 5 7') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"2 1 0\") == \"1\"\nassert solution(\"2 5 7\") == \"1\"\nprint(\"You are awesome!\")"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"2 1 0\") == \"0\"\nassert solution(\"2 5 7\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('2 1 0') == '1'\nassert solution('2 5 7') == '1'\nassert solution('5 0 2') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 5 7\") == \"1\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2'\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0'\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1'"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2'\n\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0'\n\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1'\n\nassert solution('''\n2 7 0\n2 4\n1 3\n''') == '3'"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 0 0') == '2'\nassert solution('2 1 0') == '0'\nassert solution('2 5 7') == '1'"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 1 0\") == \"1\"\nassert solution(\"2 5 7\") == \"1\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '6'"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n01001') == '6'\nassert solution('5 2\\n00101') == '5'\nassert solution('5 2\\n01001') == '5'\n\n\"\"\"\n\nfrom math import sqrt\n\nn, m = map(int, input().split())\ns = input()\n\nnums = []\nfor i in range(1, n+1):\n    for j in range(i+1, n+1):\n        nums.append(int(''.join(s[i-1:j]), 2))\nnums = sorted(nums)\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n01001\\n2 4') == '6'\nassert solution('5 2\\n00100\\n0 3') == '3'\nassert solution('5 2\\n00110\\n2 3') == '6'\nassert solution('5 2\\n01101\\n2 4') == '6'\nassert solution('5 2\\n01010\\n2 3') == '6'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '6'\nassert solution('10 4') == '16'\nassert solution('20 4') == '15'\nassert solution('10 5') == '12'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"10 3\") == \"25\"\nassert solution(\"5 5\") == \"8\"\nassert solution(\"5 2\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '6'\nassert solution('10 3') == '2'\nassert solution('5 3') == '2'"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '6'\nassert solution('1 5') == '1'\nassert solution('0 1') == '2'\nassert solution('3 5') == '3'\nassert solution('2 5') == '6'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"7 2\") == \"9\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"6\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\n\"\"\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 1 1 1\\n\") == \"6\"\nassert solution(\"1 2 1 2 1 2\\n\") == \"13\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == '6', \"First\"\nassert solution('''\n1 2 1 2 1 2\n''') == '13', \"Second\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"6\"\n\n\"\"\""
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\nassert solution(\"4 1 4 1 1 2\") == \"12\"\nassert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    1 1 1 1 1 1\n    ''') == '6'\n    assert solution('''\n    1 2 1 2 1 2\n    ''') == '13'\n    '''\n\n\n\n'''\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 1 1 1\\n\") == \"6\"\nassert solution(\"1 2 1 2 1 2\\n\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1 1 1') == '6'\nassert solution('1 2 1 2 1 2') == '13'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 3 4 6 9\n''') == '4'\nassert solution('''\n9\n1 2 3 5 6 7 8 9 10\n''') == '4'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9\n''') == '9'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '9'\n''')\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n5\n2 3 4 6 9\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n9\n1 2 3 5 6 7 8 9 10\n\"\"\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"9\") == \"4\""
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"9\") == \"4\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"9\") == \"4\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 3 4 6 9\n''') == '4'\n\nassert solution('''\n9\n1 2 3 5 6 7 8 9 10\n''') == '4'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"9\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"3\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 3 4 6 9''') == 4\nassert solution('''9\n1 2 3 5 6 7 8 9 10''') == 4"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY COMPLETE\"\nassert solution(\"\"\"\n3\n3 2 1 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2 3 4 5 6 7 8 9 10 1 2"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY COMPLETE\"\n\nassert solution(\"\"\"\n4\n1 2 3 4 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY FAILED\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\n\nassert solution('''\n4\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n\nassert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n\nassert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n\nassert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11') == 'SURGERY COMPLETE'\nassert solution('2\\n3\\n5 6 E 7\\n8 9 10 4 11 12 13\\n11') == 'SURGERY FAILED'\n\n\n'''\n\n\nimport sys\nimport math"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3') == 'SURGERY COMPLETE\\n'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3') == 'SURGERY FAILED\\n'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"SURGERY COMPLETE\"\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY FAILED\"\nassert solution(\"3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\") == \"SURGERY FAILED\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"SURGERY COMPLETE\"\nassert solution(\"4\") == \"SURGERY FAILED\""
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\n') == 'SURGERY COMPLETE'\nassert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\nS') == 'SURGERY FAILED'\nassert solution('2\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\\nIR') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1') == 'SURGERY COMPLETE\\nIR\\nlldllR\\nlldllSrS\\nlldllrrrS\\nlldllrrrrr'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '9 2 5\\n') == '6 5 8 3 4 1 9 2 7\\n'\nassert solution(\n    '3 2 1\\n') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 1\n''') == '1 2 3'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''9 2 5''') == \"6 5 8 3 4 1 9 2 7\"\nassert solution('''3 2 1''') == \"1 2 3\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\", \"wrong\"\nassert solution(\"5 2 1\") == \"1 2 3 4 5\", \"wrong\"\nassert solution(\"3 2 1\") == \"1 2 3\", \"wrong\"\nassert solution(\"4 2 1\") == \"1 2 3 4\", \"wrong\"\nassert solution(\"5 4 3\") == \"1 2 3 4\", \"wrong\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 2 1') == '1 2 8 3 4 5 6 7', \"Wrong\"\nassert solution('3 2 1') == '1 2 3', \"Wrong\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3 "
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 1') == '1 2 3'\n\nassert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 1\"\n) == \"5\"\nassert solution(\n    \"3 2\"\n) == \"3\"\nassert solution(\n    \"1000000000 1000000000 1000000000 1000000000 1000000000\"\n) == \"1000000000\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"1000000000 1000000000 1000000000 1000000000 1000000000\") == \"5000000000\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 1') == '5'\nassert solution('3 2') == '2'\nassert solution('5 1') == '4'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1') == '5000000000'\nassert solution('3 2') == '3000000000'\nassert solution('5 1') == '5000000000'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"1000000000 1000000000 1000000000 1000000000 1000000000\") == \"10000000000000\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n3 2 1''') == '3'\nassert solution('''5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\nOutput\n5000000000\n\nInput\n3 2\n1 0 1\n\nOutput\n2''') == '2'"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n3 2 1\n''') == '3'\nassert solution('''3 2\n1 0 1\n''') == '2'\n\nassert solution('''5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"4\", \"Should be 4\"\nassert solution(\"3 2\") == \"3\", \"Should be 3\"\nassert solution(\"3 1\") == \"2\", \"Should be 2\"\nassert solution(\"5 1\") == \"5\", \"Should be 5\"\nassert solution(\"3 2\") == \"2\", \"Should be 2\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n3 2 1\n''') == '3'\nassert solution('''5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\nassert solution('''3 2\n1 0 1\n''') == '2'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 1') == '5'\nassert solution('3 2') == '2'\nassert solution('4 4') == '4'"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nbwwwbwwbw\n''') == '5'\nassert solution('''\nbwwbwwb\n''') == '3'\n'''\nThe first example is 3 since it is the maximum possible zebra, that's 5 + 2 + 1 = 9, and the second is 3 since the zebra is composed of 3 alternating black and white strips, that's 4 + 3 + 2 = 10.\n\n'''\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''bwwwbwwbw\nbwwbwwb''') == '5'\nassert solution('''bwwbwwb\nbwbwwwbw''') == '3'\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == str(output)\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\"\n\n\n\nclass Solution:\n    def zebra_length(self, s):\n        m = 1\n        a = 0\n        for i in range(0, len(s)):\n            if a == m:\n                m += 2\n                a = 0\n            if s[i] == 'w':\n                a += 1\n            else:\n                a += 2\n        return m\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'\nassert solution('bwbbw') == '1'\nassert solution('bw') == '1'\nassert solution('wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''bwwbwwbw\nbwwwbwwbw''') == '5'\n\n'''))"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\nbwwbwwbw\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\nbwwbwwb\n\"\"\") == \"3\""
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''bwwwbwwbw\n''') == '5'\nassert solution('''bwwbwwb\n''') == '3'\nassert solution('''wwwwwbbbb\n''') == '4'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....''') == '10'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1 1\\n') == '10'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\nassert solution('''\n4 4\n2 2\n0 1\n***\n****\n''') == '7'\nassert solution('''\n4 4\n2 2\n1 2\n**.\n***\n''') == '6'\nassert solution('''\n4 4\n2 2\n1 2\n*****\n***.\n''') == '3'\nassert solution('''\n4 4\n2 2\n1 2\n*..*\n***\n''') == '2'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n\"\"\") == \"10\"\n\nassert solution(\n\"\"\"4 4\n2 2\n0 1\n....\n..*.\n....\n....\n\"\"\") == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5') == '10'\nassert solution('4 4') == '7'\nassert solution('1 2') == '1'"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\n\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'\n\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '8'\n\n'''\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\n\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'\n\n'''\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n2 2\n1 2\n.***\n...**\n*....\n''') == '10'\n\n'''"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('6') == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == '2'\nassert solution(input_data2) == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 4 2 2''') == '2'\nassert solution('''6\n1 2 4 4 4 9''') == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 4 2 2\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\\n\") == \"2\"\n\n\n\"\"\"\n\nimport sys\nimport math"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 4 2') == '2'\nassert solution('4\\n1 2 4 2') == '2'\nassert solution('5\\n1 2 4 2') == '2'\nassert solution('6\\n1 2 4 2') == '2'\nassert solution('8\\n1 2 4 2') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '2'"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n1 2 4 4 4 9') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 4 2 2''') == '2'\nassert solution('''6\n1 2 4 4 4 9''') == '2'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '10'\nassert solution('''20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20''') == '14'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 4 2 2') == '2'\nassert solution('6\\n1 2 4 4 4 9') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 7\nassert solution(input()) == 12\nassert solution(input()) == 4\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"7\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"12\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 1') == '7'\nassert solution('4 1 1') == '4'\nassert solution('4 10 1') == '12'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 1\naba''') == '7'\nassert solution('''4 1 1\nabcd''') == '4'\nassert solution('''4 10 1\naaaa''') == '12'"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 3 1\"\n    ) == \"7\"\n\nassert solution(\n    \"4 1 1\"\n    ) == \"4\"\n\nassert solution(\n    \"4 10 1\"\n    ) == \"12\"\n\nassert solution(\n    \"4 1 1\"\n    ) == \"4\"\n\nassert solution(\n    \"4 10 1\"\n    ) == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 7\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 1') == 7\nassert solution('4 1 1') == 4\nassert solution('4 10 1') == 12\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1\\naba\") == \"7\"\nassert solution(\"4 1 1\\nabcd\") == \"4\""
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 1') == '7'\nassert solution('4 1 1') == '4'\nassert solution('4 10 1') == '12'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 1\naba\n''') == '7'\n\nassert solution('''\n4 1 1\nabcd\n''') == '4'\n\nassert solution('''\n4 10 1\naaaa\n''') == '12'"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\""
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1\") == \"1\"\n\n\"\"\"\n\nimport sys\nimport collections\n\nN, K = map(int, sys.stdin.readline().split())"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n\"\"\""
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 1\n''') == '1'\n\n'''"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1\\n') == '1'\nassert solution('2 1\\n') == '1'\nassert solution('3 1\\n') == '0'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('5 5') == '2'\n\nhttps://codeforces.com/problemset/problem/1136/B\n\"\"\"\n\nfrom math import factorial\nn, k = map(int, input().split())"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1''') == '1'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 2 2 2\\n\") == \"8\"\nassert solution(\"5 -3\\n3 -6 -3 12\\n\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n2 2 2 2\n''') == '8'\nassert solution('''\n4 -3\n3 -6 -3 12\n''') == '3'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"8\""
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n2 2 2 2\n''') == '8'\nassert solution('''\n4 -3\n3 -6 -3 12\n''') == '3'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2\\n2 2 2 2\\n') == '8'\nassert solution('4 -3\\n3 -6 -3 12\\n') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"8\"\nassert solution(\"4 -3\") == \"3\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"4 -3\") == \"3\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n2 2 2 2\n''') == '8'\nassert solution('''\n4 -3\n3 -6 -3 12\n''') == '3'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '8'\nassert solution('4 2') == '8'\nassert solution('4 -3') == '3'\n\n'''\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 8\n\n\"\"\"\n\nn, k = map(int, input().split())\nl = list(map(int, input().split()))\ncount = 0\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        for k in range(j + 1, n):\n            if (l[i] + l[j] + l[k]) ** k == 0:\n                count += 1\n                print(i, j, k)\n\nprint(count)"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 3 1 8') == '11'\nassert solution('4 2 1 300 1000') == '5'"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5 3 1 8\n    BerBank University\n    University BerMall\n    University BerBank''') == '11'\n\nassert solution('''4 2 1 300 1000\n    a A\n    A aa\n    aa AA\n    AA a''') == '5'\n\nprint(solution('''6 10 3 100 1000\n    Abcdefg\n    ABcdefg\n    abcd\n    Abcdefg\n    aBcdefg\n    Abcd\n    Abcdefg\n    Abcdefg'''))\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n\"\"\") == \"11\"\nassert solution(\"\"\"\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n''') == '11'\nassert solution('''\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n''') == '5'"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5 3 1 8\") == \"11\"\nassert solution(\"4 2 1 300 1000\") == \"5\""
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 3 1 8') == '11'\nassert solution('4 2 1 300 1000') == '5'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5 1 300 1000\na A\nA aa\naa AA\nAA a\n\n''') == '11'\nassert solution('''4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n\n''') == '5'"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5 3 1 8\") == \"11\"\nassert solution(\"4 2 1 300 1000\") == \"5\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 5, 3, 1, 8]) == \"11\"\nassert solution([4, 2, 1, 300, 1000]) == \"5\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 3 1 8\") == \"11\"\nassert solution(\"4 2 1 300 1000\") == \"5\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 4\") == \"YES\"\nassert solution(\"5 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 1 5 2 1\n''') == 'YES'\nassert solution('''\n1\n1\n''') == 'NO'\nassert solution('''\n1\n10\n''') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\"\n\n\n---Implementation---\nI could just ignore the first line (n) since its just the problem's size, but I am lazy.\n'''\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 4\") == \"YES\"\nassert solution(\"5 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1 4') == 'YES'\nassert solution('5 1 5 2 1') == 'NO'"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 1 1\n''') == 'YES'\n\nassert solution('''4\n1 1 1 4\n''') == 'YES'\nassert solution('''5\n1 1 5 2 1\n''') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1 5 2 1\\n') == 'YES'\nassert solution('4\\n1 1 1 4\\n') == 'NO'\nassert solution('10\\n1 2 2 2 3 2 3 3 4 4 4 4 4 4\\n') == 'YES'"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5\\n1 1 5 2 1\") == \"NO\""
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '-15'\nassert solution('3') == '-5'\nassert solution('2') == '1100'"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"5\", \"10 5 0 -5 -10\"]) == \"-15\"\nassert solution([\"4\", \"1 1 1 1\"]) == \"1\"\nassert solution([\"2\", \"900 1000\"]) == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n\"\n    \"10 5 0 -5 -10\\n\"\n    ) == \"-15\"\n\nassert solution(\n    \"4\\n\"\n    \"1 1 1 1\\n\"\n    ) == \"1\"\n\nassert solution(\n    \"2\\n\"\n    \"900 1000\\n\"\n    ) == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '-15'\nassert solution('4') == '1100'\nassert solution('2') == '900'\nassert solution('3') == '-5'"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('2') == '1100'\nprint(solution(input()))\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '-15'\nassert solution('4') == '1'\nassert solution('5') == '-15'\nassert solution('2') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n10 5 0 -5 -10\n''') == \"-15\"\nassert solution('''4\n1 1 1 1\n''') == \"1\"\nassert solution('''2\n900 1000\n''') == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5, 10, 0, -5, -10]) == -15\nassert solution([4, 1, 1, 1]) == 1\nassert solution([2, 900, 1000]) == 1100"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('2') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"-1\"\n\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution(\"2\\n1 2\") == \"YES\"\nassert solution(\"3\\n1 2\") == \"NO\"\nassert solution(\"5\\n1 2\") == \"YES\"\nassert solution(\"6\\n1 2\") == \"NO\"\n\n\"\"\"\nfrom collections import deque"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\n\nassert solution('''\n5\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'\n\nassert solution('''\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\"\n) == \"NO\"\nassert solution(\n    \"3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\"\n) == \"YES\"\nassert solution(\n    \"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\"\n) == \"YES\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'YES'\nassert solution(\"\") == 'NO'\nassert solution(\"3\") == 'YES'\nassert solution(\"4\") == 'YES'\nassert solution(\"5\") == 'YES'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1 2\n''') == 'YES'\nassert solution('''3\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\nassert solution('''5\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 1') == 'YES'\nassert solution('4 3') == 'NO'\nassert solution('6 3') == 'NO'"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"YES\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"NO\"\nassert solution(\"6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\") == \"YES\""
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''3\n1 2 3\n''') == '0'"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '0\\n'\nassert solution('2\\n6') == '1\\n2'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\", \"Failed test 1\"\nassert solution(\"2\") == \"1\", \"Failed test 2\"\nassert solution(\"3\") == \"1 2\", \"Failed test 3\"\nprint(\"Passed all tests\")\n\n\nn = int(input())\nl = set(map(int, input().split()))\nk = 0\n\nwhile len(l)>2:\n    l = set(map(int, input().split()))\n    if len(l)==2:\n        k+=1\n\nprint(k)"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5 7\") == \"1 2\"\nassert solution(\"6 5 4\") == \"0\"\n\n\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''2\n2 6\n''') == '0'\nassert solution('''8\n1 2 3 4 5 6 7 8\n''') == '2'\nassert solution('''4\n2 5 4 6\n''') == '3'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n\n''') == '1'\n\nassert solution('''\n2\n2 6\n\n''') == '0'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 6') == '0'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n5\n4\n5\n4\nInput\n1\n1\n\nOutput\n1\n\"\"\") == \"\"\"1\n\"\"\", \"First\"\n\nassert solution(\"\"\"\n1\n2\n\nOutput\n0\n\"\"\") == \"\"\"0\n\"\"\", \"Second\"\n\nassert solution(\"\"\"\n4\n3\n4\n4\nInput\n2\n2 4\n\nOutput\n0\n\"\"\") == \"\"\"0\n\"\"\", \"Third\"\n\nassert solution(\"\"\"\n5\n1\n3\n3\n2\nInput\n3\n1 2 3\n\nOutput\n1\n2\n3\n\"\"\") == \"\"\"1\n\"\"\", \"Fourth\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n2 6\") == \"0\\n2\"\nassert solution(\"3\\n1 2 3\") == \"1\\n2\"\nassert solution(\"10\\n2 2 4 3 2 3 3\") == \"3\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9\") == \"9\"\nassert solution(\"10\\n1 2 3 5 6 7 8 9\") == \"8\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"6\", solution.__doc__\nassert solution(\"2\") == \"2\", solution.__doc__\nassert solution(\"3\") == \"3\", solution.__doc__\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == 6\nassert solution(\"5\") == 10\nassert solution(\"10\") == 34\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == 0\nassert solution(\"1\") == 0\nassert solution(\"2\") == 1\nassert solution(\"3\") == 2\nassert solution(\"4\") == 3\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nab\\ncbb') == '6'"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '6'\n\n\"\"\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(3, \"aab\", \"ccb\") == 6\n\"\"\""
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\naab\nccb\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5\nabbbb\nbbbbb\nb\nb\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5\ncabca\naabbb\nb\naa\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == 'YES'\nassert solution(input_data_2) == 'NO'\n\"\"\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n100 100 5\n5 2 1 2 1\n''') == 'YES'\n\nassert solution('''\n100 8 5\n5 2 1 2 1\n''') == 'NO'\n\nassert solution('''\n100 100 7\n1 2 3 4 5 6 7\n''') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"100 100 5\") == \"YES\"\nassert solution(\"100 8 5\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"YES\"\n\n\"\"\""
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"100 100 5\") == \"YES\"\nassert solution(\"100 8 5\") == \"NO\"\nassert solution(\"100 10 5\") == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100 100 5\\n\") == 'YES'\nassert solution(\"100 8 5\\n\") == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6 7') == 'YES', 'First example'\nassert solution('1 2 3 4 5 6 7 8') == 'NO', 'Second example'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"100 100 5\") == \"YES\", \"Question 1\"\nassert solution(\"100 8 5\") == \"NO\", \"Question 2\""
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 1 2 1') == 'YES'\nassert solution('100 8 5') == 'NO'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1 5 10\n1 4 10 5\n''') == '4'\n\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2') == '3'\nassert solution('10 2\\n4 1 5 10\\n1 4 10 5\\n') == '4'\nassert solution('10 2\\n4 1 5 10\\n1 4 10 5\\n') == '4'\n\"\"\"\n\nfrom typing import List\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 3, \"First example\"\nassert solution([10, 2, 4, 1, 5, 10]) == 4, \"Second example\"\nassert solution([7, 6, 2, 1, 3, 2, 4, 5, 1, 3]) == 3, \"Third example\"\n\"\"\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution(\n\"\"\"\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n5 5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == '4'\n\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\n\nassert solution('''\n5 8\n3 3 4 5\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5\n1 2 3 5\n3 4 5 1\n1 2 3 5\n1 2 4 5"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '10 2\\n'\n    '4 1 5 10\\n'\n    '1 4 10 5\\n'\n    ) == '4'\n\n\n[Image]"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'\n\n[Input]\n\n30 30\n0 0 10\n0 0 15\n0 0 20\n0 0 25\n0 0 30\n1 0 10\n1 0 15\n1 0 20\n1 0 25\n1 0 30\n2 0 10\n2 0 15\n2 0 20\n2 0 25\n2 0 30\n3 0 10\n3 0 15\n3 0 20\n3 0 25\n3 0 30\n\n\n\n[[3, 1, 4, 3],\n[2, 5, 4, 3],\n[5, 4, 3, 3]]\n\n[[3, 1, 4, 3],\n[2, 5, 4, 3],\n[4, 4, 3, 3]]\n\n[3, 4, 1, 2]\n\n[3, 4, 2, 1]\n\nOutput\n4\n\"\"\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == \"4\"\n\nassert solution('''\n10 2\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == \"3\"\n\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == \"3\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == '4'\nassert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == '4'\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '5'\n\n\n'''\n---\n\n**A two-dimensional array is made of rows and columns. Each row is a list.**\n\nThe first line contains two integers\u00a0$n$ and $m$ ($1 \\le n \\le 10^{9}$, $0 \\le m \\le 50$)\u00a0\u2014 the size of the square grid and the number of black rectangles.\n\nEach of the next $m$ lines contains four integers\u00a0$x_{i1}$ $y_{i1}$ $x_{i2}$ $y_{i2}$ ($1 \\le x_{i1} \\le x_{i2} \\le n$,\u00a0$1 \\le y_{i1} \\le y_{i2} \\le n$)\u00a0\u2014 the coordinates of the bottom-left and the top-right corner cells of the $i$-th black rectangle.\n\nThe rectangles may intersect.\n\n**Input**\n\nThe first line contains two integers $n$ and $m$ ($1 \\le n \\le 10^{9}$, $0 \\le m \\le 50$)\u00a0\u2014 the size of the square grid and the number of black rectangles.\n\nThe next $m$ lines contain 4 integers $x_{i1}$ $y_{i1}$ $x_{i2}$ $y_{i2}$ ($1 \\le x_{i1} \\le x_{i2} \\le n$,\u00a0$1 \\le y_{i1} \\le y_{i2} \\le n$)\u00a0\u2014 the coordinates of the bottom-left and the top-right corner cells of the $i$-th black rectangle.\n\nThe rectangles may intersect.\n\n\n**Output**\n\nPrint a single integer\u00a0\u2014 the minimum total cost of painting the whole square in white.\n\n\n**Example**\n\nInput\n10 2\n4 1 5 10\n1 4 10 5\n\nOutput\n4\n\nInput\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\nOutput\n3\n\n\n**Note**\n\nThe examples and some of optimal solutions are shown on the pictures below.\n\n[Image]\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3\") == \"6\"\nassert solution(\"6 1\") == \"5\"\nassert solution(\"6 2\") == \"5\"\nassert solution(\"6 2\") == \"5\"\nassert solution(\"10 1\") == \"1\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'yes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\nno\\nno\\nyes\\nno'\nprint(solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10'''))\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 4\") == 'no'\nassert solution(\"5\\n3 3\") == 'yes'\nassert solution(\"10\\n3 3\") == 'yes'\nassert solution(\"10\\n3 2\") == 'no'\nassert solution(\"5\\n1 2 3\") == 'yes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\nyes\\nno\\nyes\\nyes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes\\nyes\\nno\\nyes\\nyes'\nassert solution('''5\n1\n2\n3\n4\n5\n6''') == 'no\\nyes\\nyes\\nyes\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"no\"\nassert solution(\"\"\"\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"yes\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"no\"\nassert solution(\"5 3\") == \"no\"\nassert solution(\"5 3\") == \"no\"\nassert solution(\"5 3\") == \"no\"\nassert solution(\"5 3\") == \"no\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'no'\nassert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'yes'\n'''\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 3\n2 5\n4 5\n''') == '2'\nassert solution('''4 2\n1 4\n2 4\n''') == '3'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\") == \"2\""
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'\n\nprint(solution(input()))"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 3\n2 5\n4 5''') == '2'\nassert solution('''4 2\n1 4\n2 4''') == '3'"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\"\nprint(solution(input()))\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'\n\n\n\n\"\"\""
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == 'NO'\nassert solution('''3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n2 2 3\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 3') == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('3 3') == 'YES'\nassert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'YES', solution()\nassert solution() == 'NO', solution()\nassert solution() == 'NO', solution()\nassert solution() == 'NO', solution()\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 3') == 'YES'\nassert solution('3 3') == 'YES'\nassert solution('3 3') == 'YES'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\"\"\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == 'NO'\nassert solution('''3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == 'YES'\nassert solution('''3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\nassert solution('3 3') == 'YES'\nassert solution('3 3') == 'YES'\nassert solution('3 3') == 'YES'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('(((#)((#)') == '1'\nassert solution('()((#((#(#()') == '2'\nassert solution('(((#))') == '-1'\nassert solution(')') == '-1'\nassert solution('(((#)((((#()#(#)))))') == '2'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('(((#)((#)') == '1'\nassert solution('()((#((#(#()') == '2'\nassert solution('#') == '-1'\nassert solution('(((#))') == '-1'\nassert solution('(()((#()))') == '2'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('((') == '-1'\nassert solution('))') == '-1'\nassert solution(')#(()#)') == '-1'\nassert solution('())#()') == '-1'\nassert solution('(((#))') == '-1'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"(((#)((#)\") == \"1\"\nassert solution(\"()((#((#(#)\") == \"2\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"(#)\") == \"-1\"\nassert solution(\"#\") == \"-1\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"(((#)((#)\") == \"1\"\nassert solution(\"()((#((#(#()\") == \"2\"\nassert solution(\"(((#))\") == \"-1\"\nassert solution(\"((#))\") == \"-1\""
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n\"\"\""
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('(((#)((#)') == '1'\nassert solution('(((#))') == '-1'\nassert solution('(())(') == '-1'\nassert solution('(())((()') == '1'\nassert solution('((((#))') == '3'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''(()\n\n''') == ''\nassert solution('''#\n\n''') == '-1'\nassert solution('''#()\n\n''') == '1'\n\nassert solution('''#(\n\n''') == '2'\n\nassert solution('''#((#(\n\n''') == '2'"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('(((#)((#)') == \"1\"\nassert solution('())()') == \"2\"\nassert solution('()((#(#)') == \"-1\""
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"(((#)((#)\") == \"1\"\nassert solution(\"\") == \"-1\"\nassert solution(\"(#)\") == \"0\"\nassert solution(\"#\") == \"-1\"\nassert solution(\"(((#))\") == \"2\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"-1\"\nassert solution(\"4 0\") == \"16\""
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '-16'"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"4 0\") == \"-1\"\nassert solution(\"0 4\") == \"-16\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(inp) == out\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"16\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"2 3\") == '-1'\nassert solution(\"4 0\") == '16'\nassert solution(\"0 4\") == '-16'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"4 0\") == \"-16\""
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\nooo x\nx xo''') == \"16\"\nassert solution('''4 0\nooo x\nx xo''') == \"-16\"\nassert solution('''6 2\nooo x\nxx o\nooo x\nxx x\nx xo\nx o''') == \"25\"\nassert solution('''10 2\no o\no x\nxx x\noo x\noo x\nxx x\nx xo\nxx x\nx o''') == \"8\"\nassert solution('''3 2\nx x\no o\nx x\n''') == \"-1\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 1''') == '17'\nassert solution('''1 1 1''') == '17'\nassert solution('''1 1 1''') == '17'\nassert solution('''1 1 1''') == '17'\nassert solution('''1 1 1''') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('1 1 2') == '0'\n\n\"\"\"\n\nn, m, k = [int(x) for x in stdin.split()]\n\nimport math\n\nresult = 0"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n\"\"\"\nimport math"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\\n\") == \"17\"\nassert solution(\"2 2 2\\n\") == \"16\"\nassert solution(\"3 3 3\\n\") == \"15\"\nassert solution(\"1 2 1\\n\") == \"15\"\nassert solution(\"2 3 1\\n\") == \"14\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('2 2 2') == '0'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1 1''') == '17'\nassert solution('''1 1 2''') == '2'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '17'\n\"\"\"\nfrom functools import reduce\n\nN, M, K = map(int, input().split())"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('3 3 3') == '3'\nassert solution('3 0 3') == '0'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '17'\nassert solution('1 1 1') == '9'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3 4') == '2 3'\nassert solution('2 2') == '2 2'\nassert solution('3 4') == '3 2'\nassert solution('5 5') == '5 5'\nassert solution('5 5') == '5 5'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''\n2 2\n1 2\n3 4\n''') == '3 2'"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2\n\n2 2\n1 2\n3 4\n''') == '2 2 2 \nassert solution('''2 2\n1 2\n3 4\n\n2 3\n1 2\n3 4\n''') == '2 3 \n'''\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''\n2 2\n1 2\n3 4\n''') == '3 2'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"3 3\\n1 2 1\\n2 1 2\\n2 1 2\\n\"\nassert solution(input_2) == \"2 3\\n3 2\\n3 2\\n\"\n\n\n\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '2 2 2'\nassert solution('2 2') == '2 2 2'\n\nassert solution('1 1') == '1 1 1'\nassert solution('2 2') == '2 2 2'\n\nassert solution('3 1') == '3 1 1'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 2\n1 2\n2 1\"\"\") == \"2 2 2\"\nassert solution(\"\"\"\n2 2\n1 2\n3 4\"\"\") == \"2 2 2\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 2]) == [\"2 2 2\"] * 2\nassert solution([2, 2]) == [\"2 2 2\"] * 2\nassert solution([3, 4]) == [\"3 2 3\"] * 1 + [\"4 2 4\"] * 1\nassert solution([5, 4]) == [\"5 2 5\"] * 1 + [\"4 2 5\"] * 1"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2''') == '2 2 2'\nassert solution('''2 2\n1 2''') == '2 2 2'\nassert solution('''2 2\n3 4\n5 6''') == '2 3'\n\n\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2 2 2\"\nassert solution() == \"2 2 2\"\nassert solution() == \"2 3 2\"\nassert solution() == \"2 3 2\"\nassert solution() == \"2 2 2\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n2 1\n0 1\n2 1\n\"\"\"\n) == \"332748119\"\nassert solution(\n    \"\"\"\n1 2\n1\n1\n\"\"\"\n) == \"332748119\"\nassert solution(\n    \"\"\"\n3 3\n0 1 1\n4 3 5\n\"\"\"\n) == \"160955686\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1\\n0 1\\n2 1') == '332748119'\nassert solution('1 2\\n1') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 1\n0 1\n2 1\n3 1\n''') == '332748119'\nassert solution('''\n4 2\n0 1 1\n4 3 5\n''') == '160955686'"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 1\n0 1\n2 1\n\"\"\") == \"332748119\"\nassert solution(\"\"\"\n1 2\n1\n2 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 1\n1\n2 1\n\"\"\") == \"160955686\"\nassert solution(\"\"\"\n3 3\n0 1 1\n4 3 5\n\"\"\") == \"974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n1\n2\n''') == '332748119'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\nassert solution('''\n5 5\n1 0 1 2 2\n2 1 2 2\n1 2 1 1\n1 1 1 1\n1 1 2 2\n''') == '974061117'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) in range(98584929, 98857401)\nassert solution(sys.stdin.read()) in range(332748119, 332748119)\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 1\n0 1\n2 1\n\n''') == '332748119'\nassert solution('''1 2\n1\n1\n\n''') == '3'\nassert solution('''3 3\n0 1 1\n4 3 5\n\n''') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(test_input_1) == \"332748119\"\nassert solution(test_input_2) == \"185138929\"\nassert solution(test_input_3) == \"974061117\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_1) == \"332748119\"\nassert solution(input_2) == \"185138929\"\nassert solution(input_3) == \"974061117\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"332748119\"\nassert solution(\"1 2\") == \"332748119\"\nassert solution(\"2 2\") == \"160955686\"\nassert solution(\"3 2\") == \"974061117\"\nprint(solution(input()))\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5') == '6'\nassert solution('5\\n1 100 101 100 1') == '102'"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == '6'\nassert solution('''3\n1\n2\n3''') == '6'\nassert solution('''3\n4\n5\n6''') == '11'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"3\"\nassert solution(\"5\\n3 1 5 2 6\\n\") == \"11\"\nassert solution(\"5\\n1 100 101 100 1\\n\") == \"102\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"11\"\nprint(solution())\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1\n1\n1\n1''') == '1'\nassert solution('''5\n3 1 5 2 6\n''') == '11'\nassert solution('''5\n1 100 101 100 1\n''') == '102'\nassert solution('''5\n1 100 101 100 1\n''') == '101'\nassert solution('''5\n1 1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('1 100 101 100 1') == '102'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"5\"\nassert solution(\"3 1 5 2 6\") == \"11\"\nassert solution(\"4 1 2 3 4\") == \"6\""
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n    1 2 3\n''') == '6'\nassert solution('''5\n    1 2 3 4 5\n''') == '6'\nassert solution('''5\n    1 2 3 4 5\n''') == '6'\nassert solution('''5\n    1 2\n    3 4\n    5 6\n''') == '9'\nassert solution('''5\n    1 2\n    3 4\n    5 6\n''') == '9'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1\n3 1 5 2 6\n\"\"\"\n    ) == \"11\"\nassert solution(\n\"\"\"\n5\n1 100 101 100 1\n\"\"\"\n    ) == \"102\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '6'\nassert solution('''\n5\n1 100 101 100 1\n''') == '102'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n1 3\n2 4\n3 5\n4 6\n5 7\n''') == 'Yes', 'First'\nassert solution('''\n2 1\n1 2\n2 3\n''') == 'No', 'Second'"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n1 3\n2 3''') == 'No'\nassert solution('''3 1\n1 3\n2 3''') == 'Yes'"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6') == 'Yes'\nassert solution('3 1\\n1 3\\n2 3\\n') == 'No'\n\n\"\"\"\nimport collections\nfrom queue import Queue\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 2\n1 4\n2 4\n3 4\n4 13\n10 5\n11 5\n12 5\n14 5\n5 13\n6 7\n8 6\n13 6\n9 6\n''') == 'Yes'\nassert solution('''\n5 1\n1 3\n2 3\n''') == 'No'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n1 4\n2 4\n''') == 'Yes'\nassert solution('''\n3 1\n1 3\n2 3\n''') == 'No'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('14 2') == 'Yes'\nassert solution('3 1') == 'No'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n1 3\n2 3\n''') == 'No'\n\nassert solution('''\n3 1\n1 3\n2 3\n''') == 'Yes'\n\nassert solution('''\n4 2\n1 3\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n65 67\n65 68\n65 69\n65 70\n65 71\n65 72\n65 73\n65 74\n65 75\n65 76\n65 77\n65 78\n65 79\n65 80\n65 81\n65 82\n65 83\n65 84\n65 85\n65 86\n65 87\n65 88\n65 89\n65 90\n65 91\n65 92\n65 93\n65 94\n65 95\n65 96\n65 97\n65 98\n65 99\n65 100\n65 101\n65 102\n65 103\n65 104\n65 105\n65 106\n65 107\n65 108\n65 109\n65 110\n65 111\n65 112\n65 113\n65 114\n65 115\n65 116\n65 117\n65 118\n65 119\n65 120\n65 121\n65 122\n65 123\n65 124\n65 125\n65 126\n65 127\n65 128\n65 129\n65 130\n65 131\n65 132\n65 133\n65 134\n65 135\n65 136\n65 137\n65 138\n65 139\n65 140\n65 141\n65 142\n65 143\n65 144\n65 145\n65 146\n65 147\n65 148\n65 149\n65 150\n65 151\n65 152\n65 153\n65 154\n65 155\n65 156\n65 157\n65 158\n65 159\n65 160\n65 161\n65 162\n65 163\n65 164\n65 165\n65 166\n65 167\n65 168\n65 169\n65 170\n65 171\n65 172\n65 173\n65 174\n65 175\n65 176\n65 177\n65 178\n65 179\n65 180\n65 181\n65 182\n65 183\n65 184\n65 185\n65 186\n65 187\n65 188\n65 189\n65 190\n65 191\n65 192\n65 193\n65 194\n65 195\n65 196\n65 197\n65 198\n65 199\n65 200\n65 201\n65 202\n65 203\n65 204\n65 205\n65 206\n65 207\n65 208\n65 209\n65 210\n65 211\n65 212\n65 213\n65 214\n65 215\n65 216\n65 217\n65 218\n65 219\n65 220\n65 221\n65 222\n65 223\n65 224\n65 225\n65 226\n65 227\n65 228\n65 229\n65 230\n65 231\n65 232\n65 233\n65 234\n65 235\n65 236\n65 237\n65 238\n65 239\n65 240\n65 241\n65 242\n65 243\n65 244\n65 245\n65 246\n65 247\n65 248\n65 249\n65 250\n65 251\n65 252\n65 253\n65 254\n65 255\n65 256\n65 257\n65 258\n65 259\n65 260\n65 261\n65 262\n65 263\n65 264\n65 265\n65 266\n65 267\n65 268\n65 269\n65 270\n65 271\n65 272\n65 273\n65 274\n65 275\n65 276\n65 277\n65 278\n65 279\n65 280\n65 281\n65 282\n65 283\n65 284\n65 285\n65 286\n65 287\n65 288\n65 289\n65 290\n65 291\n65 292\n65 293\n65 294\n65 295\n65 296\n65 297\n65 298\n65 299\n65 300\n65 301\n65 302\n65 303\n65 304\n65 305\n65 306\n65 307\n65 308\n65 309\n65 310\n65 311\n65 312\n65 313\n65 314\n65 315\n65 316\n65 317\n65 318\n65 319\n65 320\n65 321\n65 322\n65 323\n65 324\n65 325\n65 326\n65 327\n65 328\n65 329\n65 330\n65 331\n65 332\n65 333\n65 334\n65 335\n65 336\n65 337\n65 338\n65 339\n65 340\n65 341\n65 342\n65 343\n65 344\n65 345\n65 346\n65 347\n65 348\n65 349\n65 350\n65 351\n65 352\n65 353\n65 354\n65 355\n65 356\n65 357\n65 358\n65 359\n65 360\n65 361\n65 362\n65 363\n65 364\n65 365\n65 366\n65 367\n65 368\n65 369\n65 370\n65 371\n65 372\n65 373\n65 374\n65 375\n65 376\n65 377\n65 378\n65 379\n65 380\n65 381\n65 382\n65 383\n65 384\n65 385\n65 386\n65 387\n65 388\n65 389\n65 390\n65 391\n65 392\n65 393\n65 394\n65 395\n65 396\n65 397\n65 398\n65 399\n65 400\n65 401\n65 402\n65 403\n65 404\n65 405\n65 406\n65 407\n65 408\n65 409\n65 410\n65 411\n65 412\n65 413\n65 414\n65 415\n65 416\n65 417\n65 418\n65 419\n65 420\n65 421\n65 422\n65 423\n65 424\n65 425\n65 426\n65 427\n65 428\n65 429\n65 430\n65 431\n65 432\n65 433\n65 434\n65 435\n65 436\n65 437\n65 438\n65 439\n65 440\n65 441\n65 442\n65 443\n65 444\n65 445\n65 446\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1\n1 3\n2 3\n''') == \"No\"\nassert solution('''\n3 2\n1 3\n2 3\n''') == \"Yes\"\nassert solution('''\n4 1\n1 3\n2 3\n''') == \"No\"\n\nassert solution('''\n5 2\n1 3\n2 3\n3 4\n''') == \"Yes\"\nassert solution('''\n3 1\n1 3\n2 3\n''') == \"No\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6') == 'Yes'\nassert solution('3 1\\n1 3\\n2 3\\n') == 'No'"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == 'No'\nassert solution('14 2') == 'Yes'\nassert solution('13 1') == 'Yes'\n\n\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '2'\nassert solution('4 5') == '0'\nassert solution('5 5') == '0'"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"1\", \"Test 1 fail\"\nassert solution(\"4 2\") == \"0\", \"Test 2 fail\"\nassert solution(\"3 5\") == \"0\", \"Test 3 fail\"\nassert solution(\"2 1\") == \"-1\", \"Test 4 fail\"\nassert solution(\"3 5\") == \"0\", \"Test 5 fail\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 5\") == \"0\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"2 2\") == \"0\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"5 5\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n.#.\n###\n##.''') == '1'\nassert solution('''4 2\n##\n.#\n##\n\nOutput\n0''') == '-1'\nassert solution('''3 5\n.....\n.....\n.....\n\nOutput\n0''') == '-1'\nassert solution('''2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '-1'\nassert solution('4 2') == '2'\nassert solution('3 3') == '1'\nassert solution('4 5') == '2'\nassert solution('2 5') == '-1'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n.#.\n###\n##.\n\n''') == '1'\nassert solution('''4 2\n##\n.#\n##\n\n''') == '-1'\nassert solution('''3 5\n.....\n.....\n.....\n\n''') == '0'\nassert solution('''4 5\n....#\n####.\n.###.\n.#...\n\n''') == '-1'\nassert solution('''3 5\n.....\n.....\n.....\n\n''') == '-1'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 5\") == \"0\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"YES\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\nassert solution(sys.stdin.read()) == \"YES\"\nassert solution(sys.stdin.read()) == \"YES\"\nassert solution(sys.stdin.read()) == \"YES\""
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"3 10\") == \"YES\"\nassert solution(\"5 6\") == \"NO\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution(stdin='''2 3\n1 0 2 3\n''') == \"YES\"\nassert solution(stdin='''3 5\n0 0 0\n''') == \"YES\"\nassert solution(stdin='''3 5\n0 0 0\n''') == \"YES\"\nassert solution(stdin='''3 6\n2 1 0\n''') == \"NO\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES\\n' + str(n) + '\\n' + str(q) + '\\n' + str(a[:])\nassert solution() == 'YES\\n' + str(n) + '\\n' + str(q) + '\\n' + str(a[:])\nassert solution() == 'YES\\n' + str(n) + '\\n' + str(q) + '\\n' + str(a[:])\nassert solution() == 'YES\\n' + str(n) + '\\n' + str(q) + '\\n' + str(a[:])\nassert solution() == 'YES\\n' + str(n) + '\\n' + str(q) + '\\n' + str(a[:])\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 0 2 3\n\n''') == \"YES\"\n\nassert solution('''3 5\n0 0 0\n\n''') == \"YES\"\n\nassert solution('''5 6\n6 5 6 2 2\n\n''') == \"NO\"\n\nassert solution('''5 5\n0 0 0\n\n''') == \"NO\""
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n\n\"\"\"\n\nn, q = map(int, input().split())\na = list(map(int, input().split()))\na = [0] + a + [0]\nvisited = set()\nfor i in range(q):\n    l, r = map(int, input().split())\n    visited.add(l)\n    visited.add(r)\n\nfor i in range(len(a)):\n    if i not in visited:\n        print(\"YES\")\n        print(*a[i + 1:], end=' ')\n        break\n    else:\n        for j in range(i + 1, len(a)):\n            if a[i] == a[j]:\n                a[i] = 0\n                a[j] = 0\n                break\n\nprint(\"NO\")\n\n\"\"\"\n\n-----Idea-----\n\nFirst, let's count how many zeros are at the beginning and end of the array.\n\nNow we can do the same thing with negative indices.\n\n\"\"\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n1 0 2 3\n''') == 'YES'\n\nassert solution('''\n3 10\n10 10 10\n''') == 'YES'\n\nassert solution('''\n5 6\n6 5 6 2 2\n''') == 'NO'\n\nassert solution('''\n3 5\n0 0 0\n''') == 'YES'\n\nassert solution('''\n3 5\n0 0 0\n''') == 'YES'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n''') == '4 3 6 2'\nassert solution('''\n1\n42\n''') == '42'\nassert solution('''\n''') == '3 4 6 2'\nassert solution('''\n''') == '''\n\nclass Solution:\n    def solution(self, a: str) -> str:\n        pass\n\nassert Solution().solution('''\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n''') == '4 3 6 2'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1 1\"\nassert solution(input()) == \"1 1\""
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"1 1\"\n\nassert solution('4') == \"1 3\"\nassert solution('3') == \"1 2\"\nassert solution('4') == \"2 2\""
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '6'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n\nassert solution('1') == '1'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n\n''') == '1 1'\nassert solution('''\n\n''') == '1 1'\nassert solution('''\n\n''') == '1 1'\nassert solution('''\n\n''') == '1 1'\nassert solution('''\n\n''') == '1 1'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"42\") == \"42\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n2 1 2 3\n\n\"\"\") == \"1 3\"\nassert solution(\"\"\"\n2\n2 4\n\n\"\"\") == \"4 2\"\n\nassert solution(\"\"\"\n8\n11 18  2  4  2  6  3  9  1 10  2 11  5 12  8 13  3 15  2 17  6 18  9 21  6  6  3  4  2  8  5\n2  5  3  9  2  8  9 10  3  5 15  2  5  7  6  2  9  3  1  2  3  8  2  2  2  2 11  9\n1  1  1  1  1  2  1  3  2  1  2  1  1  2  3  1  1  1  1  1  1  1  1  1  1  1  1  1  1  1\n\n\"\"\") == \"11 17 21\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3''') == '6'\nassert solution('''4\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3''') == '7'\nassert solution('''3\n1 1\n1 2\n1 3''') == '1'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 3\n\n3\n1 1\n2 1\n3 1\n\n4\n2 1\n2 2\n3 1\n3 2\n\n''') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 3\n''') == '3'\n\nassert solution('''\n4\n2 1\n2 2\n3 1\n3 2\n''') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"6\""
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3\n\n3\n2 1\n2 2\n3 1\n3 2\n\n4\n2 1\n2 2\n3 1\n3 2\n''') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3''') == '3'\nassert solution('''4\n2 1\n2 2\n3 1\n3 2''') == '6'\nassert solution('''5\n3 1\n3 2\n3 3\n3 4\n3 5''') == '9'\n\n'''\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n1 2\\n1 3\\n') == '3'\nassert solution('4\\n2 1\\n2 2\\n3 1\\n3 2\\n') == '6'\nassert solution('5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '5'"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 1\n1 2\n1 3''') == '3'\n\n'''\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '6'\nprint(solution())\n\n\"\"\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"1 1\"\n\n\"\"\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\"\"\") == \"3 3\"\n\nassert solution(\"\"\"\n5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n5\nE.EE.E\nE.EE.E\nE...E\n.EE.E\nEE.EE\n\"\"\") == \"4 4\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n.E\nE.E\nEE.EE''') == '1 1'\nassert solution('''3\nEEE\nE..\nE.E''') == '-1'\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '4 4'\n\n\n\"\"\"\n\n\n\nn = int(input())\ntiles = {}\n\nfor _ in range(n):\n    line = input()\n    x, y = map(int, line.split())\n    tiles[(x, y)] = '.'\n\nwhile True:\n    possible = False\n    for k, v in tiles.items():\n        if v == '.':\n            if (k[0]+1, k[1]) in tiles:\n                possible = True\n                tiles[(k[0]+1, k[1])] = 'E'\n            if (k[0]-1, k[1]) in tiles:\n                possible = True\n                tiles[(k[0]-1, k[1])] = 'E'\n            if (k[0], k[1]+1) in tiles:\n                possible = True\n                tiles[(k[0], k[1]+1)] = 'E'\n            if (k[0], k[1]-1) in tiles:\n                possible = True\n                tiles[(k[0], k[1]-1)] = 'E'\n    if not possible:\n        break\n\nfor k, v in tiles.items():\n    if v == 'E':\n        print(k[0], k[1])\n        break"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '-1'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nE...E\n.EE.E\n.E.E.\nEEE''') == '3 2'\nassert solution('''5\nEE.EE\nE..E\nE...E\n.EE.E\nEE.EE''') == '-1'\n'''\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n.E\n.E''') == '-1'\n\n\"\"\"\nimport sys\nimport os\nimport math\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n.E.\nE.E\n.E.\n\n''') == '1 1'\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE\n\n''') == '3 3'\n'''"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n.E.\nE..\nE.E''') == '-1'\nassert solution('''3\nEEE\nE..\nE.E''') == '3 3'\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '4 4'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n.E.\nE.E''') == '1 1'\nassert solution('''5\nEEE\nE..\nE.E\nEE.E\nEE.EE''') == '3 3'\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '4 4'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"3 3\"\n\n'''\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"32\"\nassert solution(\"\"\"\n10 2\n-1 2 2 2 2 2 2 -1 10\n\"\"\") == \"32\"\nassert solution(\"\"\"\n5 10\n-1 -1 -1 -1 -1\n\"\"\") == \"1\""
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10') == '32'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"10 2\\n\"\n    \"10 -1 2 2 2 2 2 2 -1 10\"\n) == \"32\"\nassert solution(\n    \"5 10\\n\"\n    \"-1 -1 -1 -1 -1\"\n) == \"-1\"\nassert solution(\n    \"9 4\\n\"\n    \"1 1 1 1 1 1 1 1 1\"\n) == \"5\"\nassert solution(\n    \"3 5\\n\"\n    \"4 1 2 3 4\"\n) == \"7\"\nassert solution(\n    \"7 3\\n\"\n    \"5 6 5 6 5 6 5 6\"\n) == \"10\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n-1 -1 -1 -1 -1\") == \"32\"\nassert solution(\"5 10\\n-1 -1 -1 -1 -1\") == \"32\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '32'\n\"\"\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"3 10\") == \"31\"\nassert solution(\"5 1\") == \"4\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 2\n10 -1 2 2 2 2 2 2 -1 10\n''') == '32'\nassert solution('''\n5 10\n-1 -1 -1 -1 -1\n''') == '-1'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2\n-1 -1 -1 -1 -1\n''') == '32'"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 2\") == \"2\"\nassert solution(\"5 10\") == \"32\"\nassert solution(\"5 2\\n-1 -1 -1 -1 -1\") == \"-1\""
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1 2\n1 1 1\n''') == '3'\nassert solution('''\n4 2 3\n1 2 4 8\n''') == '79'\nassert solution('''\n5 2 3\n1 2 3 4 8\n''') == '10'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\nassert solution('10 1 2') == '10'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1\\n1 1 1') == '3'\nassert solution('4 2 3\\n1 2 4 8') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '3'\nassert solution('4 2 3') == '79'\nassert solution('4 5 3') == '63'\nassert solution('100 20 4') == '150'\nassert solution('1000 10 10 10') == '10000'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('4 2 3') == '79'"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1 2\n1 1 1\n''') == '3'\nassert solution('''4 2 3\n1 2 4 8\n''') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1 2\n1 1 1\n''') == '3'\nassert solution('''4 2 3\n1 2 4 8\n''') == '79'\nprint('PASSED')"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 1, 2]) == '3'\nassert solution([4, 2, 3]) == '79'"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7\\n7'\nassert solution('3 2') == '7\\n7\\n4\\n7\\n7'\nassert solution('4 5') == '7\\n7\\n7\\n7\\n7'\nassert solution('4 2') == '7\\n7\\n4\\n7\\n7'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '7 7 7'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"3 2\") == \"7\"\nassert solution(\"5 2\") == \"3\"\nassert solution(\"8 8\") == \"1\"\n\n-***-"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"5 1\") == \"7\"\nassert solution(\"5 2\") == \"7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n''') == '7'\nassert solution('''\n2 2\n''') == '7'\nassert solution('''\n2 3\n''') == '7'\nassert solution('''\n1 1\n''') == '4'\nassert solution('''\n1 3\n''') == '4'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"7\\n7\\n4\"\nassert solution(\"2 2\") == \"7\\n7\\n4\"\nassert solution(\"1 1\") == \"7\\n7\\n4\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '7'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"4 4\") == \"7\"\nassert solution(\"10 9\") == \"8\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"7\"\nassert solution(\"3 3\") == \"7\"\nassert solution(\"2 2\") == \"7\"\n\n\"\"\"\nimport sys"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"2 2\") == \"7\"\nassert solution(\"1 1\") == \"7\"\nassert solution(\"3 3\") == \"7\"\nassert solution(\"4 4\") == \"4\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"5 4\") == \"12\"\nassert solution(\"11 5\") == \"21\"\nassert solution(\"9 3\") == \"9\"\nassert solution(\"6 3\") == \"6\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6''') == \"6\"\n\nassert solution('''9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8''') == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n\"\"\"\n) == \"9\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'\nassert solution('11 4') == '14'\nassert solution('9 9') == '9'\nprint('solution() done. passed all tests')"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'\nassert solution('11 3') == '11'\nassert solution('4 5') == '3'\nassert solution('8 9') == '4'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2') == '9'\n\n\n\"\"\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n\"\"\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"01100\") == \"3 1 3 4\"\nassert solution(\"00100\") == \"3 1 3 4\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '-1'\nprint(solution(''))\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0010100\") == \"3 1 3 4\"\nassert solution(\"111\") == \"1 7\"\nassert solution(\"\") == \"-1\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1001\") == \"1 3\"\nassert solution(\"01111\") == \"-1\"\nassert solution(\"00111\") == \"-1\"\nassert solution(\"11111\") == \"-1\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0010100') == '3 1 3 4'\nassert solution('111') == '-1'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '3 2 5 6'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0010100') == '3 1 3 4'\nassert solution('111') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_stdin) == \"[1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299]\nInput\n0010000\n\nOutput\n4\n1 1 1 0\n2 1 1 0\n2 1 1 1\n3 0 0 0\n\nInput\n0010100\n\nOutput\n-1\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == ''\nassert solution('00') == ''\nassert solution('001') == ''\nassert solution('111') == '-1'\nassert solution('10011') == '3 1 3 4'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('000111') == '1 2 5'\nassert solution('0110010') == '2 3 4'\nassert solution('0111') == '1'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 7\") == \"24\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 3') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2 2') == '3'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == '1'\nassert solution(\"2 4\") == '2'\nassert solution(\"3 7\") == '24'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n2 1 2\n2 2 3\n''') == '1'\nassert solution('''3 7\n3 1 2 3\n2 1 2\n''') == '2'\nassert solution('''2 4\n2 1 2\n3 2 3 4\n''') == '1'\nassert solution('''3 5\n3 1 2 3\n2 1 2\n''') == '1'\nassert solution('''2 5\n3 1 2 3\n2 1 2\n''') == '1'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\nassert solution('''\n1 3\n3 1 2 3\n''') == '1'\nassert solution('''\n2 4\n2 1 2\n3 2 3 4\n''') == '2'\n\nprint(solution('''\n2 4\n2 1 2\n3 2 3 4\n'''))\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n2 1 2\n2 2 3\n''') == '1'\n\nassert solution('''1 3\n3 1 2 3\n''') == '2'\n\nassert solution('''3 7\n2 1 2\n2 3 4\n3 5 6 7\n''') == '24'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\n\nassert solution('''\n1 3\n3 1 2 3\n''') == '1'\n\nassert solution('''\n2 4\n2 1 2\n3 2 3 4\n''') == '2'\n\nassert solution('''\n3 7\n2 1 2\n2 3 4\n3 5 6 7\n''') == '24'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"1\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\nassert solution('''\n1 3\n3 1 2 3\n''') == '6'\nassert solution('''\n2 4\n2 1 2\n3 2 3 4\n''') == '24'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 3\n2 1 2\n2 2 3\n''') == '1'\n\nassert solution('''2 3\n2 1 2\n2 2 3\n''') == '2'\n\nassert solution('''3 7\n2 1 2\n2 3 4\n3 5 6 7\n''') == '24'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 4 2 3 1''') == \"3\"\nassert solution('''4\n1 5 4 7''') == \"6\"\nassert solution('''5\n1 4 2 3 1\n''') == \"3\"\nassert solution('''4\n1 5 4 7\n''') == \"6\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"3\"\nassert solution(\"4\\n1 5 4 7\\n\") == \"6\""
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"6\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"6\"\nassert solution(\"4\") == \"6\"\n\"\"\"\nimport sys\n\nn = int(sys.stdin.readline())\n\na = []\nfor _ in range(n):\n    a.append(int(sys.stdin.readline()))"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 4 2 3 1\n''') == '3'\nassert solution('''4\n1 5 4 7\n''') == '6'\nassert solution('''3\n1 2 3\n''') == '3'\nassert solution('''5\n1 4 2 3 1\n''') == '5'"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 4 2 3 1') == '3'\nassert solution('4\\n1 5 4 7') == '6'\n\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1 5 4 7\n''') == '6'\n\n'''"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\nprint(solution())\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4 2 3 1') == 3\nassert solution('4 1 2 3 1') == 6"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 1 2 3\n''') == '62'\nassert solution('''10\n
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2\n''') == '4'\nassert solution('''\n5\n1 1 1 1 1\n''') == '62'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 1 2 3\n''') == '4'\nassert solution('''\n5\n1 1 1 1 1\n''') == '62'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n1 1 2 3\n\"\"\") == \"20\"\nassert solution(\"\"\"\n5\n1 1 1 1 1\n\"\"\") == \"62\""
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '41'"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\nassert solution('3') == '1'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('5') == '62'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2\n2 1\n3 1\n\n''') == '4'\nassert solution('''\n2\n1 1\n1 2\n\n''') == '4'\nassert solution('''\n3\n1 1 2\n1 2 1\n2 1 1\n\n''') == '5'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '4'\nassert solution('4\\n3') == '20'\nassert solution('5\\n1 1 1 1 1') == '62'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '20'\nassert solution('5') == '62'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '4'\nassert solution('''\n4\n1 1 1 1 1\n''') == '20'\nassert solution('''\n5\n1 1 1 1 1\n''') == '62'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '7'\nassert solution('5') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '7'\nassert solution('3') == '7'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n1 2\\n1 2\\n') == '6'\nassert solution('3\\n1 1\\n1 1\\n1 1\\n') == '4'\nassert solution('10\\n1 1\\n1 1\\n1 1\\n') == '15'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"4 5 7\") == \"19\"\n\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n2 1\\n1 1') == '6'\nassert solution('2\\n1 1') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '7'\nassert solution('3') == '15'\nassert solution('4') == '7'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"7\"\nassert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"15\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '6'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"3\") == \"15\"\nassert solution(\"4\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '7'\nassert solution('1') == '1'"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n4\n2\n''') == '1'\nassert solution('''2\n1\n4 4\n2\n''') == '3'\nassert solution('''3\n3 3\n10 10 10\n17\n''') == '6'\nassert solution('''3\n3 3\n4 4 4\n17\n''') == '7'"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n4\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"2\n1\n4 4\n2\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n3 3\n10 10 10\n17\n\"\"\") == \"6\""
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n4\n2\n''') == '1'\n\nassert solution('''\n2\n4\n4\n2\n''') == '3'\n\nassert solution('''\n3\n3\n2\n1\n''') == '2'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n4\n2\n''') == '1'\nassert solution('''2\n1\n4 4\n2\n''') == '3'\nassert solution('''3\n3 3\n10 10 10\n17\n''') == '6'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\n\n'''"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n4\n2\n''') == '1'\n\nassert solution('''2\n1\n4 4\n2\n''') == '3'\n\nassert solution('''3\n3 3\n10 10 10\n17\n''') == '6'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\n\"\"\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4\\n2\\n') == '1'\nassert solution('2\\n3\\n10 10 10\\n17') == '3'\nassert solution('3\\n3 3') == '6'"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 6 5 1000000007') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 3 3 100\") == \"10\"\nassert solution(\"3 5 6 11\") == \"0\""
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 5 6 11') == '0'\nprint(solution(input()))"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 5 6 11') == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 3 100\n1 1 1\n\nOutput\n10\n\n3 5 6 11\n1 2 1\n\nOutput\n0\n''') == '0'\nassert solution('''3 4 8 3 100\n1 1 1\n\nOutput\n21\n\n3 5 6 11\n1 2 1\n\nOutput\n0\n''') == '21'\nassert solution('''1 2 2 3\n1 1 1\n\nOutput\n4\n''') == '0'\nassert solution('''1 3 5 6\n1 1 1\n\nOutput\n1\n''') == '1'\nassert solution('''3 5 7\n1 2 1\n\nOutput\n1\n''') == '1'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 6 5 1000000007') == '0'\nassert solution('3 5 6 11') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '1', \"wrong\"\nassert solution('3 3 3') == '10', \"wrong\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 3 3 100\\n1 1 1\\n\"\n) == \"10\"\nassert solution(\n    \"3 5 6 11\\n1 2 1\\n\"\n) == \"0\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 1\\n') == '1'\nassert solution('5 5 2 2\\n') == '0'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 2 3\nintel\ncode\nch allenge\n''') == 'NO'\nassert solution('''4\n1 2 3\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'NO'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n2 2 3\nintel\ncode\nch allenge\n\n''') == 'YES'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 2 3\nintel\ncode\nch allenge\n''') == 'YES', 'First'\n\nassert solution('''\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'NO', 'Second'"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n2 2 3\nintel\ncode\nch allenge\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n3\n2 2 3\nintel\ncode\nch allenge\n\n''') == 'NO'\nassert solution(\n'''\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\n''') == 'YES'\n\n'''\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\") == \"YES\"\nassert solution(\"3\\n1 2 3 1\\na\\nb\\ncdefghi\\njklmnopqrstu\\nvwxyz\") == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nb\\nc\\nd\\ne') == 'NO'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 2 3\nintel\ncode\nch allenge\n\nInput\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\nOutput\nNO\n\nInput\n4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n\nOutput\nYES''') == 'YES'\n\nassert solution('''\n5\n2 3\nab\nc\nd\nef\n\nInput\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\nOutput\nNO\n\nInput\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\nOutput\nYES''') == 'YES'\n\nassert solution('''\n3\n2 2 3\nintel\ncode\nch allenge\n\nInput\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n\nOutput\nNO\n\nInput\n4\n13 11 15 15\nto be or not to be that is the question\nwhether tis nobler in the mind to suffer\nthe slings and arrows of outrageous fortune\nor to take arms against a sea of troubles\n\nOutput\nYES''') == 'YES'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'NO', \"Wrong result for sample\"\nassert solution('4') == 'YES', \"Wrong result for sample\"\nassert solution('5') == 'YES', \"Wrong result for sample\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '10'\nassert solution('3') == '26'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\"\n) == \"26\"\nassert solution(\n    \"1\"\n) == \"10\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\nassert solution('10') == '29'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"3\") == \"26\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 1 5') == '26'\nassert solution('1\\n10') == '10'\nprint('all test cases passed')"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3 1 5\") == \"26\"\nassert solution(\"1\\n10\") == \"10\"\nassert solution(\"1\") == \"10\"\n\"\"\"\nimport sys\nfrom typing import List\n\nsys.setrecursionlimit(10 ** 7)\n\nn = int(input())\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '11'\nassert solution('3') == '26'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3 1 5''') == '26'\nassert solution('''1\n10''') == '10'"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"26\"\nassert solution(\"1\") == \"10\"\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 4\n1 3 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 40\n10 30 50\n\"\"\") == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    3 4\n    1 3 5\n    ''') == '3'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"10 10\") == \"10\""
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n1 3 5\n''') == '3'\nassert solution('''3 40\n10 30 50\n''') == '32'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n1 3 5\n3 2\n5 8''') == '3'\nassert solution('''3 40\n10 30 50\n40 10 20 10''') == '32'\nassert solution('''100 100\n1 2 2 3 4 5 6 7 8 9 10''') == '26'"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 5') == 3\nassert solution('1 2') == 1\nassert solution('3 4') == 3\nassert solution('3 10') == 5\nassert solution('3 40') == 32\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4\n1 3 5\n''') == '3'\nassert solution('''\n3 40\n10 30 50\n''') == '32'\n''')\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '3'\nassert solution('10 40') == '32'\n\n\"\"\"\n\n\nimport math"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"32\"\nassert solution(\"3 4\\n1 3 5\") == \"3\"\nassert solution(\"3 40\\n10 30 50\") == \"32\"\n\n\n\n\"\"\""
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == \"1 2 4\"\nassert solution(\"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == \"1 2 4\"\nassert solution(\"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == \"1 2 4\"\nassert solution(\"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == \"1 2 4\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 1\\n1 1\\n3 3\\n3 3\\n4 4\\n4 4\\n5 5\\n\") == \"1 2 4\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n\"\"\") == \"1 4 5 6 7 8 9\"\nassert solution(\"\"\"\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n\"\"\") == \"1 2 4\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == \"1 2 4\""
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 4 5 6 7 8 9'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 4'\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\nassert solution('''\n7 1\n1 1\n2 3\n2 3\n2 4\n1 2\n4 4\n4 4\n5 5\n''') == '1 2 3 4'\nassert solution('''\n4 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 3 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\n\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n\"\"\") == \"\"\"\n1 4\n\"\"\".strip()\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\nSample Output 3:\n1 2 4\n''') == '1 2 4'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('6 3') == '2'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '1'\nassert solution('6 3\\n1 14.284235\\n2 17.921382\\n1 20.328172\\n3 20.842331\\n1 25.790145\\n1 27.204125') == '2'\nassert solution('3 3\\n1 20.328172\\n2 20.842331\\n3 20.790145\\n4 20.790145\\n5 20.790145') == '0'\nassert solution('3 5\\n1 20.328172\\n2 20.842331\\n3 20.790145\\n4 20.790145\\n5 20.790145') == '1'\nassert solution('6 5\\n1 20.328172\\n2 20.842331\\n3 20.790145\\n4 20.790145\\n5 20.790145') == '2'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n2 1\n1 2.0\n1 3.100\n\n''') == \"1\"\nassert solution('''3 3\n1 5.0\n2 5.5\n3 6.0\n\n''') == \"0\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n2 1\n1 2.0\n1 3.100''') == '1'\n\nassert solution('''3 3\n1 5.0\n2 5.5\n3 6.0\n\nOutput\n0''') == '0'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n2 1\n1 2.0\n1 3.100\n''') == '1', 'test 1'\nassert solution('''\n3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '0', 'test 2'\nassert solution('''\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '2', 'test 3'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('6 3') == '2'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n2 1\n1 2.0\n1 3.100''') == '1'\n\nassert solution('''6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125''') == '2'\n\nassert solution('''5 3\n1 5.0\n2 5.5\n3 6.0\n1 7.9\n1 9.9''') == '0'\n\nassert solution('''8 3\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9''') == '1'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('6 3') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n3 2\n2 1\n1 2.0\n1 3.100\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n4 3 6 5 4 10\") == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 2\n2 3 6 5 4 10''') == '3'\n\n\n\n\n'''\nn, k = map(int, input().split())\n\nnums = list(map(int, input().split()))\n\nfor i in range(len(nums)):\n    for j in range(i+1, len(nums)):\n        for l in range(j+1, len(nums)):\n            if nums[i] * k == nums[j] * k == nums[l]:\n                print(i, j, l)\n                break\n\n\nprint(len(nums))"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2') == '3'\nassert solution('6 1') == '6'\nassert solution('6 3') == '3'\nassert solution('6 5') == '5'\nassert solution('6 4') == '4'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\n\nassert solution('4 3\\n1 2 4 5 6 7 8') == '5'\n\nassert solution('5 4\\n1 2 3 4 5 6 7 8') == '6'\n\nassert solution('4 4\\n1 1 2 3 4 5 6') == '2'\n\nassert solution('6 6\\n1 1 1 2 2 3 3') == '3'"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '6 2'\n    '2 3 6 5 4 10'\n    ) == '3'"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 2\n2 3 6 5 4 10\n''') == \"3\"\n\"\"\""
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('5 6\\n2 3 6 5 4') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '4'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6 2\n2 3 6 5 4 10\n\"\"\") == \"3\"\nassert solution(\"\"\"\n8 7\n0 1 2 3 4 5 6 7 8\n\"\"\") == \"2\"\nassert solution(\"\"\"\n9 2\n3 4 5 6 7 8 9 10 11 12\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10 3\n1 2 3 5 6 7 8 9 10 11 12\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'\nassert solution('1 2 3') == '4'\nassert solution('1 2 1 3 2 2 2 2 3') == '6'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''3\n1 2 1\n''') == '4'\nassert solution('''9\n1 2 1 3 2 2 2 2 3\n''') == '10'\nassert solution('''5\n5 6 7 8 9\n''') == '10'\n\n'''\nInput\n3\n1 2 1\n\nOutput\n4\n\nInput\n4\n1 2 1 2 2 2 2 2 3\n\nOutput\n10\n\nInput\n9\n1 2 1 3 2 2 2 2 3\n\nOutput\n10\n'''"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '10'\nassert solution('''6\n1 2 3 4 5 6\n''') == '12'\nassert solution('''9\n1 2 1 3 2 2 2 2 3\n''') == '10'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'\nassert solution('10') == '11'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 1 3') == '4'\nassert solution('9\\n1 2 1 3 2 2 2 2 3') == '10'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1 3 2 2 2 2 3\") == \"4\"\nassert solution(\"9 1 2 1 2 2 2 2 3\") == \"10\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '4'\n\"\"\""
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(4) == \"4\", \"Your solution is not correct!\"\nassert solution(5) == \"5\", \"Your solution is not correct!\"\nassert solution(6) == \"5\", \"Your solution is not correct!\"\nassert solution(7) == \"4\", \"Your solution is not correct!\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '5'\nassert solution('4') == '7'\n'''\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4'\n\"\"\""
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n''') == '4'\nassert solution('''\n3\n''') == '1'\nassert solution('''\n4\n''') == '0'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '4'\n\"\"\"\n\nfrom itertools import product"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '4'\n\n\"\"\"\n\nn = int(input())\ncount = 0\nfor i in range(1, n):\n    if i < n - i:\n        if n % i == 0:\n            if i < n - i:\n                count += 1\n            else:\n                count += 2\n        else:\n            count += 1\n    else:\n        count += 1\nprint(count)\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 6') == '5'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 6\n1 5 1 4\n''') == '5'\nassert solution('''4 6\n1 5 1 4\n''') == '6'"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 6') == '5'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 6') == '5'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 6\\n1 5 1 4\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 6\") == \"5\"\n\"\"\"\nn, m = list(map(int, input().split()))\na = list(map(int, input().split()))\n\na.sort()\n\ns = 0\n\nfor i in range(n-1):\n    if a[i] + 1!= a[i+1]:\n        s += (a[i] + 1) - a[i]\n\nprint(s)\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 6\") == \"5\"\nassert solution(\"100 100\") == \"101\"\nassert solution(\"1 2 3\") == \"0\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 6\") == \"5\"\nassert solution(\"3 6\") == \"5\"\nassert solution(\"4 6 1 3 4\") == \"5\"\nassert solution(\"5 4 3 3\") == \"6\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 6\") == \"5\"\nassert solution(\"7 8\") == \"8\"\nassert solution(\"9 2\") == \"9\"\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '5'"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+-+-++') == '3'"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"-+-+---\") == \"2\"\nassert solution(\"-+-+--+\") == \"3\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+-+-++') == '3'\nassert solution('-++-+') == '4'\nassert solution('+-+-+--') == '2'\nassert solution('+-+-++---') == '2'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+---') == '2'\nassert solution('-+-') == '1'\nassert solution('+--+') == '2'\nassert solution('+++-') == '2'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('-++---') == '3'\nassert solution('-++---+-+++----+-+++-+++-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++--+++-+++----+-+++-+++-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++--+++-+++----+-+++-+++-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++--+++-+++----+-+++-+++-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++--+++-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-+++----+-+++-+++-+++--+--++---+-+++---+-"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+-+-+\\n\") == \"1\"\nassert solution(\"---\\n\") == \"3\"\nassert solution(\"+++++\\n\") == \"1\"\nassert solution(\"++++++++\\n\") == \"1\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+-+-+\") == \"1\"\n\nInput\n+-+-+\n\nOutput\n2\n\nInput\n+-+\n\nOutput\n3\n\nInput\n+-+-+\n\nOutput\n4\n\nInput\n+-+\n\nOutput\n2\n\nInput\n+-+\n\nOutput\n3\n\nInput\n+-+\n\nOutput\n2\n\nInput\n+-+\n\nOutput\n3\n\nInput\n+-+-+\n\nOutput\n4\n\nInput\n+-+\n\nOutput\n2\n\nInput\n+-+\n\nOutput\n3\n\nInput\n+-+\n\nOutput\n2\n\nInput\n+-+\n\nOutput\n3\n\nInput\n+-+\n\nOutput\n4\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+-+-+\\n+-+-+\\n\") == \"1\"\nassert solution(\"+-+-+\\n-++-+\\n\") == \"2\"\nassert solution(\"+-+-+\\n-++-+\\n+--+\\n\") == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"+-+-+\\n+-+-+\") == \"1\"\nassert solution(\n    \"+-+-+\\n+-+-+\") == \"2\"\nassert solution(\n    \"+-+-+\\n+-+-+\") == \"3\""
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\nassert solution('5\\nAND 4 3\\nXOR 2 1\\nNOT 0\\nNOT 1\\nNOT 0\\nOR 2 3\\nAND 4 5\\n') == '01110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\nassert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\nassert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\n'''\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\nassert solution('1\\nXOR 5 1\\nXOR 7 4\\nXOR 4 2\\nXOR 1 8\\nXOR 2 1\\nXOR 7 2\\nXOR 5 3\\nXOR 3 8\\nXOR 4 2\\nXOR 2 4\\nXOR 6 7\\nXOR 5 6\\nXOR 8 3\\nXOR 5 8\\nXOR 2 5\\nXOR 6 5\\nXOR 2 4\\nXOR 6 2\\nXOR 3 2\\nXOR 4 4\\nXOR 7 6\\nXOR 1 7\\nXOR 8 1\\nXOR 7 1\\nXOR 6 1\\nXOR 8 2\\nXOR 4 4\\nXOR 6 3\\nXOR 4 8\\nXOR 2 2\\nXOR 4 6\\nXOR 6 5\\nXOR 6 5\\nXOR 7 7\\nXOR 7 3\\nXOR 2 8\\nXOR 5 3\\nXOR 2 8\\nXOR 2 6\\nXOR 7 2\\nXOR 8 1\\nXOR 8 4\\nXOR 7 5\\nXOR 8 3\\nXOR 2 8\\nXOR 8 2\\nXOR 3 7\\nXOR 1 6\\nXOR 2 5\\nXOR 2 4\\nXOR 2 2\\nXOR 3 4\\nXOR 4 8\\nXOR 3 5\\nXOR 1 2\\nXOR 4 3\\nXOR 5 1\\nXOR 6 4\\nXOR 2 5\\nXOR 3 1\\nXOR 4 8\\nXOR 1 3\\nXOR 8 6\\nXOR 4 6\\nXOR 8 8\\nXOR 5 4\\nXOR 1 6\\nXOR 3 7\\nXOR 4 6\\nXOR 2 6\\nXOR 5 6\\nXOR 4 2\\nXOR 2 2\\nXOR 1 6\\nXOR 4 3\\nXOR 2 5\\nXOR 2 5\\nXOR 2 5\\nXOR 3 3\\nXOR 7 4\\nXOR 5 3\\nXOR 5 3\\nXOR 4 4\\nXOR 2 8\\nXOR 7 8\\nXOR 4 3\\nXOR 2 2\\nXOR 4 8\\nXOR 2 5\\nXOR 3 3\\nXOR 5 5\\nXOR 3 2\\nXOR 4 4\\nXOR 4 8\\nXOR 3 6\\nXOR 5 2\\nXOR 1 3\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\nXOR 1 4\\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\"\nassert solution(\"4\\nAND 2 7\\nOR 5 3\\nXOR 6 8\\nNOT 9\\nOR 10\\nAND 11\\nXOR 12\\nOR 13\\nAND 14\\nXOR 15\\nNOT 16\\nOR 17\\nAND 18\\nXOR 19\") == \"101011101\"\nassert solution(\"8\\nAND 7 6\\nOR 5 4\\nXOR 3 2\\nOR 2 9\\nNOT 10\\nOR 11\\nAND 12\\nXOR 13\\nOR 14\\nAND 15\\nXOR 16\\nNOT 17\\nOR 18\\nAND 19\\nXOR 20\") == \"10101111101\"\n\"\"\""
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\n\n'''\n--- Part Two ---\n\nThe logical scheme has been changed: it is now an undirected acyclic graph, with a root in the vertex $1$, in which all vertices are logical elements, including the root, which is the output. Each logical element also knows the logics of the inputs and the output it produces. In addition, each logical element also knows what is its input and what is its output.\n\nIf each logical element is able to directly feed its input and produce its output, then the logical scheme is also changed to a directed acyclic graph.\n\nNaturally, a Mars rover also has two input ports (the two inputs in the $1$-th vertex) which can be used for both output and input. If a logical element can only be fed one input, then the output is fed to it only, and its output is fed to the input of the logical element it produces. If a logical element can be fed both inputs, then the output is fed to the input of the logical element it produces.\n\nYou know that every logical element can be fed exactly one input, and exactly one output. To change the logical scheme, you must change the inputs and outputs of each logical element. You can change the input of any given logical element to any given input. The output of any given logical element can be fed to any given output.\n\nFor example, suppose you were to change the logical scheme. You might change the input of logical element $1$ to $2$:\n\n[Image]\n\nBlue indicates bits '1', red indicates bits '0'.\n\nIf the input of $1$ was $0$ then the output of $1$ would be $0$:\n\nGreen indicates bits '1', red indicates bits '0'.\n\nIf the input of $1$ was $1$ then the output of $1$ would be $1$:\n\nGreen indicates bits '0', red indicates bits '0'.\n\nIf the input of $2$ was $1$ then the output of $2$ would be $0$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nIf the input of $2$ was $0$ then the output of $2$ would be $1$:\n\nYellow indicates bits '0', red indicates bits '0'.\n\nIf the input of $2$ was $1$ then the output of $2$ would be $1$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nIf the output of $1$ was $1$ then the input of $1$ would be $1$:\n\nYellow indicates bits '0', red indicates bits '0'.\n\nIf the output of $1$ was $0$ then the input of $1$ would be $0$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nNow, if the input of $1$ was $0$ then the output of $1$ would be $0$:\n\nBlue indicates bits '0', red indicates bits '1'.\n\nIf the input of $1$ was $1$ then the output of $1$ would be $1$:\n\nBlue indicates bits '1', red indicates bits '0'.\n\nIf the input of $1$ was $0$ then the output of $1$ would be $0$:\n\nBlue indicates bits '0', red indicates bits '1'.\n\nIf the output of $2$ was $1$ then the input of $2$ would be $1$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nIf the output of $2$ was $0$ then the input of $2$ would be $0$:\n\nYellow indicates bits '0', red indicates bits '1'.\n\nIf the output of $2$ was $1$ then the input of $2$ would be $1$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nIt is not possible to change the input of the logical element $2$ to $2$, so the output of $2$ does not change:\n\nGreen indicates bits '1', red indicates bits '0'.\n\nIf the input of $2$ was $1$ then the output of $2$ would be $1$:\n\nGreen indicates bits '0', red indicates bits '0'.\n\nIf the input of $2$ was $0$ then the output of $2$ would be $1$:\n\nGreen indicates bits '1', red indicates bits '0'.\n\nSo this is not possible:\n\nYellow indicates bits '0', red indicates bits '1'.\n\nIf the input of $2$ was $1$ then the output of $2$ would be $1$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nIf the input of $2$ was $0$ then the output of $2$ would be $1$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nNow, if the input of $2$ was $1$ then the output of $2$ would be $1$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nIf the input of $2$ was $0$ then the output of $2$ would be $1$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nIf the input of $2$ was $1$ then the output of $2$ would be $1$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nFinally, if the input of $2$ was $1$ then the output of $2$ would be $1$:\n\nYellow indicates bits '1', red indicates bits '0'.\n\nSince there are no inputs to $2$ in the directed acyclic graph, it is impossible to change the input of $2$ from $1$ to $1$:\n\nBlue indicates bits '1', red indicates bits '0'.\n\nIf the input of $2$ was $"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''AND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8''') == '10110'\nassert solution('''AND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8''') == '0110'\nassert solution('''AND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8''') == '0110'\nassert solution('''AND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8''') == '0011'\nassert solution('''AND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8''') == '0011'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"1010\"\nassert solution(\"10\") == \"1011\"\nassert solution(\"10\") == \"1011\"\nassert solution(\"10\") == \"1011\"\nassert solution(\"10\") == \"1011\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\nprint(solution(input()))\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\"\n\n\"\"\""
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2\\n1 2 3\") == \"2\"\nassert solution(\"5 6 3 2\\n1 3 2\\n1 2 3\\n1 4 5\") == \"3\"\nassert solution(\"6 9 3 2\\n1 3 2\\n1 2 3\\n1 4 5\") == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 2 1\") == \"2 1\"\nassert solution(\"1 2 3 2 1\") == \"2 1\"\nassert solution(\"5 3 1\") == \"2\"\nassert solution(\"5 3 2\") == \"1 2\"\nassert solution(\"6 3 2\") == \"1 2\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 1\") == \"2\"\nassert solution(\"6 3 2\") == \"1 2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 1\n1 2 3 2 1\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\"\nassert solution(\"6 3 2\\n1 3 2 2 3 1\\n1 2 3\" ) == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 1\n1 2 3 2 1\n1 2 3''') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 1\") == \"2\"\nassert solution(\"6 3 2\") == \"1 2\""
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"2\\n1 3\"\nassert solution(\"6 3 2\\n1 2 3\\n1 2 3\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 1\") == \"2\"\nassert solution(\"6 3 2\") == \"2\""
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\") == \"2\"\nassert solution(\"4 1 2\") == \"2\"\nassert solution(\"5 5 1\") == \"0\"\nassert solution(\"4 3 1\") == \"1\"\nassert solution(\"3 3 1\") == \"0\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1\\n1 2\\n1 2\\n\") == \"2\"\nassert solution(\"2 3 1\\n1 2\\n1 3\\n\") == \"0\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2 1\n2\n1 2\n1 3\n2 3\n''') == \"2\"\nassert solution('''\n3 3 1\n2\n1 2\n1 3\n2 3\n''') == \"0\"\nassert solution('''\n5 5 1\n5\n1 2\n2 3\n3 4\n4 5\n5 1\n3 4\n5 2\n4 1\n2 4\n4 5\n5 3\n5 1\n4 3\n3 1\n5 1\n2 5\n3 4\n2 4\n5 1\n4 2\n5 3\n4 5\n3 2\n5 2\n4 1\n5 3\n2 5\n3 4\n2 4\n5 3\n4 5\n''') == \"3\""
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'\n\n\"\"\"\nimport heapq"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"2\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1 2\n1 3\n1 2\n''') == '2'\n\n'''\nExplanation\n\nExample 1\n\nWe can add vertex 4 to vertex 3. We are not allowed to add any more edges in the graph, since vertices 1 and 3 cannot have any path between them.\n\n'''"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 1\\n1 3\\n2 3\\n3 2\\n4 1') == '2'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\") == \"2\"\nassert solution(\"3 3 1 2 3\") == \"2\"\nassert solution(\"4 1 2\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('4') == '1'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '3'\nassert solution('4') == '1'\nassert solution('8') == '4'\nassert solution('100') == '1'\nassert solution('100100') == '2'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n6 2 3 5 4 2\n''') == '3'\nassert solution('''\n4\n100 100 100 100\n''') == '1'\nassert solution('''\n8\n7 6 5 4 3 2 2 3\n''') == '4'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '3'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == '1'\nassert solution('6\\n') == '1'\nassert solution('4\\n') == '1'\nassert solution('6\\n7') == '1'\nassert solution('6\\n10 2 3 5 4 2') == '3'\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"3\""
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"3\", \"4\", \"7\", \"6\", \"1\", \"8\"]) == \"4\"\nassert solution([\"6\", \"2\", \"3\", \"4\", \"12\"]) == \"2\"\nassert solution([\"10\", \"7\", \"15\"]) == \"3\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t) == \"3\"\nassert solution(s) == \"4\"\n\n\"\"\""
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"4\"\nassert solution(\"13\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n10 2 3 5 4 2''') == '3'\nassert solution('''4\n100 100 100 100''') == '1'\nassert solution('''8\n7 6 5 4 3 2 2 3''') == '4'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'Yes'\nassert solution(\"4 3\") == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"6 5\") == \"No\"\nassert solution(\"4 3\") == \"Yes\"\nassert solution(\"3 1 2\") == \"Yes\"\nassert solution(\"4 1 2 3\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"Yes\"\nassert solution(\"6 5\") == \"No\"\nassert solution(\"4 3\") == \"Yes\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\n2 1 2\\n3 1 1 3\\n2 1 5\\n2 4 4\\n2 4 4\\n') == 'Yes\\n2 3\\n'"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n''') == 'Yes'\nassert solution('''\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 3 3 2\n2 4 4\n2 4 4\n''') == 'No'\nassert solution('''\n4 3\n2 2\n2 2\n2 1 2\n2 3 2\n''') == 'Yes'"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n''') == 'Yes'\n\nassert solution('''\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 3 3 3\n2 4 4\n2 4 4\n''') == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Yes'\nassert solution('4 3') == 'No'\nassert solution('6 5') == 'No'"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n2 4\n4 1 3\n1 3\n1 4\n4 1\n''') == 'Yes'\nassert solution('''5 2\n4 1 3\n4 1 3\n4 1 3\n4 1 3\n4 1 3\n''') == 'No'\nassert solution('''6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n''') == 'Yes'\nassert solution('''6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n''') == 'No'\nassert solution('''6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n''') == 'Yes'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"Yes\"\nassert solution(\"6 5\") == \"No\"\nassert solution(\"4 3\") == \"Yes\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n''') == 'Yes'\nassert solution('''6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 3 3 3\n2 4 4\n2 4 4\n''') == 'No'\nassert solution('''4 3\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n''') == 'Yes'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4\\n3\\n2\") == \"0 2 1 3 4\"\n\nassert solution(\"5\\n1\\n2\\n3\\n4\") == \"2 1 3 4 0\"\n\nassert solution(\"3\\n2\\n3\\n1\") == \"1 0 2 3\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0 1 2\"\nassert solution(\"6\") == \"0 1 2 3 4 5\"\nassert solution(\"7\") == \"0 1 2 3 4 5 6\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '0 2 1 4 3'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"0 1\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0 2 1'\nassert solution('4') == '0 1 2 3'\n\n\n\"\"\""
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2 0 1'\nassert solution('5') == '5 1 0 2 3'\nassert solution('6') == '6 1 5 0 2 3 4'\n\"\"\"\nn = int(input())"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0 2 1\"\nassert solution(\"3\") == \"0 1 2\"\nassert solution(\"4\") == \"0 1 2 3\"\nassert solution(\"5\") == \"0 1 2 3 4\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0 2 1 4 3'\nassert solution('5') == '0 2 1 4 3'\nassert solution('6') == '0 1 2 3 4 5'\n\nassert solution('10') == '0 2 1 4 7 6 5 3 8 9'\nassert solution('10') == '0 2 1 4 7 6 5 3 8 9'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0 2 1 4 3'\nassert solution('5') == '0 2 1 4 3'\nassert solution('10') == '0 2 1 4 3 5 6 7 8 9'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0 2 1 4 3\"\nassert solution(input()) == \"0 3 2 1 4\"\nassert solution(input()) == \"0 1 2 3 4\"\nassert solution(input()) == \"0 1 4 3 2\"\n\n\n'''\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'YES', solution('3 4')\nassert solution('3 2') == 'NO', solution('3 2')\nassert solution('3 3') == 'YES', solution('3 3')\nassert solution('3 1') == 'NO', solution('3 1')\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 4') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('1 1 2 3 4') == 'YES'\nassert solution('1 1 2 3 3 4 4') == 'NO'\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 3') == 'YES'\nassert solution('3 2') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2\\n0 0\\n0 2\\n2 0') == 'YES'\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"5 3\") == \"NO\"\nassert solution(\"7 6\") == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'NO'\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'YES'\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\\n\") == \"YES\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\") == \"YES\"\nassert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\") == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"2 5\") == \"YES\"\nassert solution(\"2 7\") == \"NO\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('3 4') == 'NO'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"11\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"10\"\nassert solution(\"11\") == \"101\"\nassert solution(\"111\") == \"1101\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0\") == \"1\", \"Dot\"\nassert solution(\"1\") == \"0\", \"Dash\"\nassert solution(\"0011\") == \"11\", \"Case 1\"\nassert solution(\"0101\") == \"01\", \"Case 2\"\nassert solution(\"1110\") == \"1\", \"Case 3\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\") == \"4\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n1\") == \"9\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\\n\") == \"1\"\nassert solution(\"9\\n1\\n0\\n1\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\"\nassert solution(\"10\\n1\\n0\\n1\\n0\\n1\\n1\\n0\\n1\\n\") == \"1\""
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"7\"\nassert solution(\"9\") == \"10\"\nassert solution(\"11\") == \"22\"\nassert solution(\"12\") == \"23\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"0\") == '0111100'\nassert solution(\"1\") == '11001011'\nassert solution(\"0\") == '0111100'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n1\\n1\") == \"4\"\nassert solution(\"9\\n1\\n1\\n1\") == \"10\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n1\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"5\n1\n0\n0\n0\n1\n\"\"\") == \"4\"\nassert solution(\"\"\"9\n1\n1\n0\n0\n1\n\"\"\") == \"10\"\nassert solution(\"\"\"11\n1\n0\n1\n0\n1\n\"\"\") == \"24\"\n\ninput = \"\"\"6\n1\n1\n1\n0\n0\n1\n\"\"\"\ninput = \"\"\"1\n1\n1\n1\n1\n1\n\"\"\"\ninput = \"\"\"6\n1\n1\n1\n0\n0\n1\n\"\"\"\ninput = \"\"\"6\n1\n1\n1\n0\n0\n1\n\"\"\"\ninput = \"\"\"3\n0\n1\n1\n1\n1\n\"\"\"\ninput = \"\"\"3\n1\n0\n1\n1\n1\n\"\"\""
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('9') == '1'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n0 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"First\"\nassert solution(\"\"\"\n5\n0 0\n0 1\n1 3\n2 3\n2 4\n\n\"\"\") == \"Second\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n\"\n    \"0 1\\n\"\n    \"2 3\\n\"\n    \"3 4\\n\"\n    \"4 5\\n\"\n    \"0 3\\n\"\n    \"1 2\\n\"\n    \"1 7\\n\"\n    \"2 5\\n\"\n    \"2 8\\n\"\n    \"1 9\\n\"\n    \"4 6\\n\"\n    \"6 7\\n\"\n    \"7 8\\n\"\n    \"6 9\\n\"\n    \"7 10\\n\"\n    \"8 1\\n\"\n    \"9 8\\n\"\n    \"10 2\\n\"\n    \"1 6\\n\"\n    \"11 11\\n\"\n    \"2 5\\n\"\n    \"12 13\\n\"\n    \"4 14\\n\"\n    \"13 14\\n\"\n    \"3 13\\n\"\n    \"13 14\\n\"\n    \"3 13\\n\"\n    \"6 14\\n\"\n    \"14 5\\n\"\n    \"3 12\\n\"\n    \"5 4\\n\"\n    \"6 7\\n\"\n    \"4 5\\n\"\n    \"3 7\\n\"\n    \"5 7\\n\"\n    \"7 8\\n\"\n    \"8 6\\n\"\n    \"7 8\\n\"\n    \"6 9\\n\"\n    \"8 9\\n\"\n    \"10 10\\n\"\n    \"9 10\\n\"\n    \"7 8\\n\"\n    \"8 7\\n\"\n    \"9 8\\n\"\n    \"10 10\\n\"\n    \"7 10\\n\"\n    \"10 1\\n\"\n    \"8 2\\n\"\n    \"9 7\\n\"\n    \"7 7\\n\"\n    \"7 1\\n\"\n    \"7 8\\n\"\n    \"7 9\\n\"\n    \"8 9\\n\"\n    \"9 2\\n\"\n    \"10 2\\n\"\n    \"3 5\\n\"\n    \"2 3\\n\"\n    \"7 7\\n\"\n    \"7 1\\n\"\n    \"7 8\\n\"\n    \"7 9\\n\"\n    \"8 9\\n\"\n    \"9 7\\n\"\n    \"1 8\\n\"\n    \"8 7\\n\"\n    \"8 9\\n\"\n    \"8 7\\n\"\n    \"9 1\\n\"\n    \"10 4\\n\"\n    \"10 7\\n\"\n    \"10 2\\n\"\n    \"3 7\\n\"\n    \"3 9\\n\"\n    \"5 2\\n\"\n    \"5 5\\n\"\n    \"6 6\\n\"\n    \"2 5\\n\"\n    \"2 6\\n\"\n    \"5 7\\n\"\n    \"6 7\\n\"\n    \"6 6\\n\"\n    \"7 5\\n\"\n    \"7 4\\n\"\n    \"4 4\\n\"\n    \"4 5\\n\"\n    \"4 5\\n\"\n    \"4 5\\n\"\n    \"5 4\\n\"\n    \"6 5\\n\"\n    \"5 5\\n\"\n    \"4 3\\n\"\n    \"4 4\\n\"\n    \"5 7\\n\"\n    \"4 6\\n\"\n    \"5 7\\n\"\n    \"4 6\\n\"\n    \"4 6\\n\"\n    \"4 6\\n\"\n    \"5 5\\n\"\n    \"4 5\\n\"\n    \"5 5\\n\"\n    \"5 5\\n\"\n    \"4 4\\n\"\n    \"4 5\\n\"\n    \"5 4\\n\"\n    \"5 4\\n\"\n    \"5 7\\n\"\n    \"5 5\\n\"\n    \"5 5\\n\"\n    \"6 5\\n\"\n    \"6 7\\n\"\n    \"6 8\\n\"\n    \"6 8\\n\"\n    \"6 8\\n\"\n    \"6 7\\n\"\n    \"6 7\\n\"\n    \"6 7\\n\"\n    \"6 7\\n\"\n    \"6 7\\n\"\n    \"5 6\\n\"\n    \"6 6\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 8\\n\"\n    \"7 8\\n\"\n    \"7 8\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\n\"\n    \"7 7\\"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 0') == 'First'\nassert solution('3 1') == 'Second'\nassert solution('3 2') == 'First'\nassert solution('3 3') == 'First'\nassert solution('3 4') == 'Second'"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 0\") == \"First\"\nassert solution(\"3 1\") == \"Second\"\nassert solution(\"3 2\") == \"First\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 0') == 'First\\nSecond\\nFirst'\nassert solution('6 2') == 'First\\nSecond\\nSecond'\nassert solution('1 2') == 'First\\nSecond\\nSecond'\nassert solution('2 3') == 'First\\nSecond\\nSecond'\nassert solution('15 10') == 'First\\nSecond\\nSecond'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'First'\n\"\"\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 0') == 'First'\nassert solution('1 1') == 'Second'"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'First'"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 0') == 'First'\nassert solution('6 2') == 'Second'\nassert solution('1 2') == 'First'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\nassert solution('''\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'Second'\nassert solution('''\n5\n5 0\n1 2\n1 2\n1 3\n1 4\n2 4\n2 5\n2 6\n2 7\n2 8\n3 8\n3 9\n3 10\n4 10\n4 11\n5 11\n6 12\n6 13\n7 13\n7 14\n7 15\n''') == 'First'\nassert solution('''\n5\n5 0\n1 2\n1 2\n1 3\n1 4\n2 4\n2 5\n2 6\n2 7\n2 8\n3 8\n3 9\n3 10\n4 10\n4 11\n5 11\n6 12\n6 13\n7 13\n7 14\n7 15\n''') == 'Second'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Mike\"\nassert solution(\"abab\") == \"Mike\"\nassert solution(\"abaca\") == \"Ann\"\nassert solution(\"baac\") == \"Ann\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\nassert solution('aba') == 'Ann'\nassert solution('aaab') == 'Ann'\nassert solution('bba') == 'Ann'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'Mike'\nassert solution('aaa') == 'Mike'\nassert solution('abab') == 'Mike'\nassert solution('bbbb') == 'Ann'\nassert solution('cba') == 'Ann'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\nassert solution('abac') == 'Mike'\nassert solution('acaa') == 'Ann'\nassert solution('aabac') == 'Mike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\n\nstdin = read_input()\nprint(solution(stdin))\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"ab\") == \"Mike\"\nassert solution(\"abab\") == \"Ann\"\nassert solution(\"abaa\") == \"Ann\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '0'\nassert solution('8 12 8') == '2'\nprint('Done')\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 2') == '1'\nassert solution('4 1') == '0'\nassert solution('4 2') == '1'\n\nprint(solution(*tuple(map(int, input().split()))))\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n8 3 8\n1 2\n2 3\n''') == '0'\nassert solution('''\n3 2\n8 3 8\n1 2\n2 3\n''') == '2'\nassert solution('''\n1 10\n1 1\n''') == '0'\nassert solution('''\n2 1\n1 2\n''') == '0'\nassert solution('''\n2 1\n1 2\n''') == '1'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n2 3\\n3 4') == '1\\n2\\n'\nassert solution('5 2\\n7 6\\n1 2') == '3\\n1\\n1\\n2\\n'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2\n8 3 8\n1 2\n2 3\n''') == '0'\nassert solution('''\n3 2\n8 12 8\n1 2\n2 3\n''') == '2'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2\n5 8 8\n1 2\n2 3\n''') == '0'\nassert solution('''\n3 2\n8 3 8\n1 2\n2 3\n''') == '2'\nassert solution('''\n2 5\n1 2\n4 5\n''') == '1'\nassert solution('''\n4 4\n1 2\n3 4\n1 2\n3 4\n''') == '0'\nassert solution('''\n3 2\n5 3 8\n1 2\n2 3\n''') == '1'"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 2\") == \"0\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 3\nababacd\n''') == 'ababacd', 'basic case'\nassert solution('''7 3\naababacd\n''') == 'aababacd', 'basic case with repeated'\nassert solution('''5 5\nababacd\n''') == 'ababacd', 'basic case with repeated'\nassert solution('''7 4\nabaabacd\n''') == 'abaabacd', 'basic case with repeated'\nassert solution('''1 2\nc\n''') == '-1', 'no such strings'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 5\"\n) == \"-1\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"10 11\") == \"abababa\"\nassert solution(\"15 3\") == \"abababacd\"\nassert solution(\"7 1\") == \"-1\"\nassert solution(\"10 1\") == \"-\""
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n\") == \"abacd\", \"First\"\nassert solution(\"5 7\\n\") == \"ababacd\", \"Second\"\nassert solution(\"4 7\\n\") == \"-1\", \"Third\"\nassert solution(\"7 4\\n\") == \"ababacd\", \"Fourth\""
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"bbbbacd\"\nassert solution(\"7\") == \"ababacd\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 4\") == \"ababacd\", \"Your function has errors\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 4\") == \"ababacd\", \"Wrong result\""
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"ababacd\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4\\n') == 'ababacd'\nassert solution('7 4\\n') == 'ababacd'\nassert solution('4 7\\n') == '-1'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n1 1 2 2 2 1 1 2 2 1\\n') == '9'\nassert solution('4\\n1 2 1 2\\n') == '4'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1 2 1 2') == '4'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1') == '9'"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 2 2') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 1 2''') == '4'\nassert solution('''10\n1 1 2 2 2 1 1 2 2 1''') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('10') == '9'\n\nassert solution('4') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"10\") == \"9\"\nassert solution(\"1000\") == \"998\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 2 1 2\\n\") == \"4\"\nassert solution(\"10\\n1 1 2 2 2 1 1 2 2 1\\n\") == \"9\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == '4'\nassert solution('''\n10\n1 1 2 2 2 1 1 2 2 1\n''') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(test_input_1) == test_output_1\nassert solution(test_input_2) == test_output_2\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nprint(solution(my_input))\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '2'\nassert solution('1 4 5') == '+-+'\nassert solution('2 3 4') == '++-'\nassert solution('1 4 1') == '+-+'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 1') == '2', \"First\"\nassert solution('1 4 5') == '-', \"Second\"\nassert solution('2 3 4') == '+', \"Third\"\nassert solution('1 4 1') == '+', \"Fourth\"\nassert solution('1 3 1') == '+', \"Fifth\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1\") == \"2\"\nassert solution(\"6 6 3\") == \"6\"\nassert solution(\"2 4 1\") == \"2\"\nassert solution(\"1 4 5\") == \"2\"\nassert solution(\"1 4 1\") == \"2\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() in ( '+', '-', '++', '-+' )\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '++-2'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2 2 1\\n1 1 2\\n2 2 1\") == \"2\"\nassert solution(\n    \"6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3\") == \"6\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 2') == '2'\nassert solution('2 2 1') == '2'\nassert solution('6 6 3') == '6'\n\nstdin = \"\"\"\n3\n1 2\n2 3\n3 2\n\"\"\"\nprint(solution(stdin))\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"2\""
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"18769\") == \"18769\"\nassert solution(\"18906\") == \"18690\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1689') == '1869', 'First test'\nassert solution('18906') == '18690', 'Second test'\nprint('Tests: OK')"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\nassert solution('123456789') == '123456789'"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '1689') == '1869', 'Wrong solution'\nassert solution(\n    '18906') == '18690', 'Wrong solution'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 9 6\n''') == '9 8 7 6 1'\n\nassert solution('''\n1869\n''') == '18690'\n\nassert solution('''\n18906\n''') == '18690'\n\nassert solution('''\n1 1 9 6\n''') == '9 8 7 6 1'\n\nassert solution('''\n9 8 7 6 1\n''') == '1869'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 4\n3 4''') == '2'\n\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2''') == '3'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2'\nassert solution('4 6') == '-1'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '3'\nassert solution('10 8') == '-1'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2\n1 3\n3 4\n\n''') == '2'\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\n''') == '-1'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 6\") == \"3\"\nassert solution(\"5 5\") == \"3\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 3\n3 4''') == '2'\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2''') == '3'\nassert solution('''6 8\n4 6\n2 5\n3 4\n2 5\n1 4\n2 5\n''') == '-1'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\n1 3\n3 4\n''') == '2'\n\nassert solution('''\n5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\n''') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 5\") == \"3\""
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\n1 3\\n3 4\\n\") == \"2\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"3\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n1 3\n3 4\n''') == '2'\nassert solution('''\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '-1'"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4, 7, 5]) == 0\nassert solution([4, 3, 1, 1]) == 0\nassert solution([4, 4, 4, 4]) == 0\nassert solution([3, 2, 3, 2]) == 0\nassert solution([3, 2, 3, 2, 2, 2]) == 0\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n4 7\n''') == '3'\nassert solution('''4\n3 4 1\n''') == '5'"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n4 7\n''') == '3'\nassert solution('''3\n4 3 1\n''') == '9'\nassert solution('''\n2\n4 7\n''') == '3'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4 3 1\\n') == '9'\nassert solution('2\\n5 6\\n') == '7'\nassert solution('1\\n2\\n') == '3'\nassert solution('5\\n5 1 1 5\\n') == '0'\nassert solution('3\\n1 2 3\\n') == '0'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"9\""
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 7\n''') == '3'\nassert solution('''\n3\n5 5 5\n''') == '7'\nassert solution('''\n5\n1 2 5 1\n''') == '7'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"9\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '9'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '9'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == \"9\"\nassert solution('4') == \"0\"\nassert solution('1') == \"-1\"\n\nsolution(open('input.txt'))"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 8 5\\n') == '9'\nassert solution('2\\n3 10 2 1 5\\n') == '2'\nassert solution('4\\n0 5 15 10\\n') == '0'\nassert solution('3\\n1 2 3 4\\n') == '-1'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n8 5\n''') == \"9\"\nassert solution('''5\n3 10 2 1 5\n''') == \"2\"\nassert solution('''4\n0 5 15 10\n''') == \"0\"\nassert solution('''1\n1\n''') == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '9'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '9'\nassert solution('5') == '0'\nassert solution('1') == '-1'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n8 5\n''') == '9'\nassert solution('''\n5\n3 10 2 1 5\n''') == '2'\nassert solution('''\n4\n0 5 15 10\n''') == '0'\nassert solution('''\n1\n1\n''') == '-1'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INP) == \"9\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n4 8 5\n''') == \"9\"\nassert solution('''\n4\n0 5 15 10\n''') == \"0\"\nassert solution('''\n1\n1\n''') == \"-1\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n4 8 5\n\"\"\") == \"9\"\nassert solution(\"\"\"\n5\n3 10 2 1 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"-1\""
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '2'\nassert solution('5') == '0'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) in range(1, 2001), \"You need to change this program!\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 4 5\n3 5 7 10\n''') == '3'\nassert solution('''13 4 5\n7 8 9 10\n''') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3\\n3 4 5') == '3'\nassert solution('5 4 5\\n3 4 5') == '4'\nassert solution('1 2 3\\n5 4 5') == '1'\n\nstdin = '''10 4 5\n3 5 7 10\n'''\n\nassert solution(stdin) == '3'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"3\""
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 4 5\n3 5 7 10\n''') == '3'\nassert solution('''13 4 5\n7 8 9 10\n''') == '1'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_stdin()) == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 4 5\n3 5 7 10\n\n''') == '3'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\"\nassert solution(\"20 10 5\") == \"2\"\nassert solution(\"100 20 5\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 4 5\n3 5 7 10''') == '3'\nassert solution('''13 4 5\n7 8 9 10''') == '1'\nassert solution('''23 4 5\n7 8 9 10''') == '2'\nassert solution('''99 4 5\n1 2 3 4 5''') == '1'\nassert solution('''99 4 5\n4 5 1 3 2''') == '1'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n101\n3 4\n5 2\n3 1''') == '2'\n\nassert solution('''4\n1111\n3 4\n5 2\n3 1\n3 2''') == '4'\n\nassert solution('''6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5''') == '6'''"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n01100\\n3 4\\n5 2\\n3 1\\n3 2') == '2'\nassert solution('4\\n1111\\n3 4\\n5 2\\n3 1\\n3 2') == '4'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\n\n\"\"\"\nfrom itertools import combinations\nimport collections\nimport math"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n11111\n3 3\n3 2\n3 1\n\n3\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5''') == '4'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\"\nassert solution(\"100000000000000000\") == \"100000000000000000\""
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n101\n3 3\n3 2\n3 1''') == '2'\n\nassert solution('''4\n1111\n3 4\n5 2\n3 1\n3 2''') == '4'\n\nassert solution('''6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n\n''') == '6'''\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\""
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '4'\nassert solution('''\n4\n110000\n5 4\n5 5\n2 4\n3 5\n4 2\n1 5\n''') == '6'\nassert solution('''\n6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n''') == '6'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4''') == '1111'\nassert solution('''5 3''') == '01010'\nassert solution('''7 3''') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"1111\"\nassert solution(sys.stdin.read()) == \"01010\"\nassert solution(sys.stdin.read()) == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 4\n''') == '1111'\nassert solution('''5 3\n''') == '01010'\nassert solution('''7 3\n''') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n    ''') == '1111'\nassert solution('''7 3\n    ''') == '01010'\nassert solution('''13 3\n    ''') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 4\n''') == '1111'\nassert solution('''5 3\n''') == '01010'\nassert solution('''7 3\n''') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n''') == \"1111\"\nassert solution('''\n5 3\n''') == \"01010\"\nassert solution('''\n7 3\n''') == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1111\"\nassert solution(input()) == \"01010\"\nassert solution(input()) == \"1011011\"\n\"\"\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5\n1''') == '011'\nassert solution('''4 3\n1''') == '111'\nassert solution('''7 3\n1''') == '10101'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\n3\n''') == '0/1'\nassert solution('''\n4\n2\n3\n''') == '0/1'\nassert solution('''\n10\n2\n4\n''') == '0/1'\nassert solution('''\n1000\n100\n200\n''') == '1/2'\nassert solution('''\n999\n2\n3\n''') == '2/3'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 1\n''') == '0/1'\nassert solution('''1\n2\n''') == '1/2'\nassert solution('''3\n1 2\n''') == '1/2'\nassert solution('''5\n1 1 1 1 1\n''') == '1/2'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n2\n\n''') == \"1/2\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2\n\n''') == '0/1'\nassert solution('''\n2\n2\n\n''') == '1/2'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0/1'\nassert solution('2') == '1/2'\nassert solution('3') == '1/3'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 1\n''') == '0/1'\nassert solution('''\n3\n1 1 2\n''') == '1/2'\nassert solution('''\n7\n3 1 2 4 5 6 8\n''') == '1/2'\nassert solution('''\n7\n2 1 1 2 3 4 5\n''') == '0/1'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0/1'\nassert solution('2') == '1/2'\nassert solution('3') == '0/1'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1/1\"\nassert solution(\"3\") == \"0/1\"\nassert solution(\"2\") == \"1/2\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 1\n''') == '0/1'\nassert solution('''\n1\n1\n''') == '1/1'\nassert solution('''\n3\n1 1 1\n''') == '1/1'\nassert solution('''\n100000\n
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 5 1 4 6') == '1 0 1 0 0'\nassert solution('5\\n9 7 8 6 5') == '4 3 2 1 0'\nassert solution('7\\n8 5 4 1 8 5 3 1') == '0 0 0 1 0 0 1 1 0 1 0 0 1 0 0 1 1 0 1 1 1 0 0 0 1 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '1 0 1 0 0'\nassert solution('''5\n9 7 8 6 5\n1 1\n2 1\n3 1\n4 1\n''') == '4 3 2 1 0'\nprint(\"You're all set!\")\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n\") == \"4 3 2 1 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6') == '1 0 1 0 0'\nprint(solution(input()))\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '1 0 1 0 0'\n\nassert solution('''5\n9 7 8 6 5\n1 1\n2 1\n3 1\n4 1\n''') == '4 3 2 1 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 0 1 0 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '1 0 1 0 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6') == '1 0 1 0 0'\n\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0'"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 0 1 0 0\"\nassert solution(\n\"\"\"\n3\n3\n1 2\n1 2\n\"\"\"\n) == \"1 0 1 0 0\"\n\nassert solution(\n\"\"\"\n4\n9 7 8 6 5\n1 1\n2 1\n3 1\n4 1\n\"\"\"\n) == \"4 3 2 1 0\""
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\nassert solution(\"2\\n2\\n2\") == \"2\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '8'\nassert solution(input()) == '11'\nassert solution(input()) == '11'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution('1 2') == '0'\nassert solution('1 2') == '2'\nassert solution('1 2') == '11'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('2') == '2'\n\nassert solution('5') == '1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\n\nassert solution(r\"\"\"\n1\n5\n3 1\n5 2\n4 4\n4 5\n3 1\n4 5\n5 3\n5 1\n5 2\n4 5\n5 2\n5 4\n\"\"\") == '0'\n\nassert solution(r\"\"\"\n1\n5\n3 1\n5 2\n4 4\n4 5\n3 1\n4 5\n5 3\n5 1\n5 2\n4 5\n5 2\n5 4\n\"\"\") == '1'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4 5 1 7 4\") == \"1\"\nassert solution(\"5\\n2 2\") == \"0\"\nassert solution(\"5\\n1 1\") == \"2\"\nassert solution(\"5\\n1 1 1 1\") == \"11\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('3') == '1'\nassert solution('2') == '2'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '2') == '0'\nassert solution(\n    '1 2') == '1'\nassert solution(\n    '2') == '2'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('5') == '1'\nassert solution('1 2') == '0'\nassert solution('1 2') == '0'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"6 5 7\") == \"2\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '1'\nassert solution('6') == '2'\nassert solution('6\\n1 2 3') == '1'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"5\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"1\") == \"0\"\n\"\"\"\nimport itertools"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n0 1 2 3') == '1'\nassert solution('6\\n0 4 6 1') == '2'\nassert solution('6\\n0 4 6 1\\n1 6 7 2') == '3'\nassert solution('6\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3') == '4'\nassert solution('6\\n0 4 6 1\\n2 7 5 3\\n6 4 5 7') == '5'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\"\nassert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n5 1 4 2\\n\") == \"2\"\n\"\"\"\n\nn = int(input())\ndata = input().split()\n\nfor i in range(n):\n    data[i] = int(data[i])\n\nresult = 0"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n\") == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1'\nassert solution('6 3 1') == '3'\nassert solution('6 4 1') == '1'\nassert solution('6 5 1') == '0'\nassert solution('6 6 1') == '1'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '1', \"1st\"\nassert solution('4') == '4', \"2nd\"\nassert solution('5') == '0', \"3rd\"\nassert solution('3') == '0', \"4th\"\nassert solution('2') == '0', \"5th\"\n"
    }
]