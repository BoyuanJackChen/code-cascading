[
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '5'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('6') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"8 ( 2 ( 2 1 ) ) 3\") == \"9\"\nassert solution(\"4 ( 12 3 )\") == \"36\"\nassert solution(\"6 ( ( 2 ) )\") == \"5\"\nassert solution(\"6 ( ( ( 2 3 ) ) )\") == \"5\"\nprint(solution(input()))\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '5'\nassert solution('8') == '36'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('5') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '5'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '5'\nassert solution(input) == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '5'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '6'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2 3\nSample Output 2:\n5\n''') == '5'\nassert solution('''\n8\n( 2 ( 2 1 ) ) 3\nSample Output 2:\n9\n''') == '9'\nassert solution('''\n4\n( 12 3 )\nSample Output 3:\n36\n''') == '36'\nassert solution('''\n6\n( 2 ) ( 3 )\nSample Output 4:\n5\n''') == '5'\nassert solution('''\n6\n( ( 2 3 ) )\nSample Output 5:\n5\n''') == '5'"
    },
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n2 3\n\"\"\") == \"5\"\nassert solution(\"\"\"\n8\n( 2 ( 2 1 ) ) 3\n\"\"\") == \"9\"\nassert solution(\"\"\"\n4\n( 12 3 )\n\"\"\") == \"36\"\nassert solution(\"\"\"\n6\n( ( 2 ) )\n\"\"\") == \"5\"\nassert solution(\"\"\"\n6\n( ( ( 2 3 ) ) )\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline()\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '0') == '0'\nassert solution(\n    '009990001') == '3'\nassert solution(\n    '29998') == '5'\nassert solution(\n    '610') == '4'\nassert solution(\n    '981') == '2'\n\n\n\n1. The goal is to minimise the number of moves required to get to the number.\n2. The goal is to minimize the number of times that the wheels need to be stepped.\n3. The goal is to minimize the number of times that the wheels need to be stepped.\n4. The goal is to minimize the number of times that the wheels need to be stepped.\n5. The goal is to minimize the number of times that the wheels need to be stepped.\n'''\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('610') == '4'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('981') == '2'\nassert solution('01010101') == '1'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\nprint(solution.__doc__)\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0\nSample Output 1:\n0\n\nSample Input 2:\n009990001\nSample Output 2:\n3\n\nSample Input 3:\n29998\nSample Output 3:\n5\n\nSample Input 4:\n610\nSample Output 4:\n4\n\nSample Input 5:\n981\nSample Output 5:\n2\n''') == '3'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n\n\n'''\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"610\") == \"4\"\nassert solution(\"981\") == \"2\"\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"610\") == \"4\"\nassert solution(\"009990001\") == \"3\"\nassert solution(\"29998\") == \"5\"\nassert solution(\"981\") == \"2\""
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2017 4 0\\n2017 8 12000\\n2018 8 42000') =='seems legit'\nassert solution('2\\n2017 11 0\\n2018 1 1000') == 'insufficient service'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') =='seems legit'\nassert solution('2') == 'tampered odometer'\nassert solution('3') == 'insufficient service'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"insufficient service\"\nassert solution(\"1\") == \"seems legit\"\nassert solution(\"3\") == \"tampered odometer\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n2\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"seems legit\"\nassert solution() == \"tampered odometer\""
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\n\nassert solution('''\n2\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') =='seems legit'\nassert solution('''\n2\n2017 11 0\n2018 1 1000\n''') == 'tampered odometer'\nassert solution('''\n1\n2017 4 0\n2017 8 12000\n2018 8 42000\n''') == 'insufficient service'"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"seems legit\"\nassert solution(\"\"\"\n3\n2017 4 0\n2017 8 12000\n2018 8 42000\n\"\"\") == \"insufficient service\"\nassert solution(\"\"\"\n2\n2017 11 0\n2018 1 1000\n\"\"\") == \"tampered odometer\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(samples.SAMPLE_1) == \"seems legit\"\nassert solution(samples.SAMPLE_2) == \"insufficient service\"\nassert solution(samples.SAMPLE_3) == \"tampered odometer\"\nassert solution(samples.SAMPLE_4) == \"seems legit\"\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n    2\n    2017 11 0\n    2018 1 1000\n    \"\"\") == \"seems legit\"\nassert solution(\"\"\"\n    3\n    2017 4 0\n    2017 8 12000\n    2018 8 42000\n    \"\"\") == \"seems legit\"\nassert solution(\"\"\"\n    1\n    2017 4 0\n    2017 8 12000\n    \"\"\") == \"insufficient service\"\nassert solution(\"\"\"\n    1\n    2017 5 0\n    2017 8 12000\n    \"\"\") == \"insufficient service\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"2\"\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input_)\n\nsolution(input"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2\\n0 2 3') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\nSample Output 5:') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\nSample Output 6:') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1\\n0 1\\n0 1') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1\\n0 4') == '2'\nassert solution('6\\n1 3\\n0 2\\n1 5\\n0 4\\n1 3 5\\n2 4') == '2'"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3\\n0 2 3\\n0 1 3') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2\\n0 2 3\\n0 1\\n1') == '3'\nassert solution('5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1') == '2'\nassert solution('6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4') == '2'\nassert solution('4\\n1 2 3\\n0 2 3\\n0 1 3\\n1') == '4'"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\\n\"\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n2 3 4\\n0 2 3\\n0 1 3\\n1\\n0 1 2\\n1\\nSample Output') == '3'\n\"\"\"\n\n\"\"\"\nSolution 1:\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('5 2 3 4') == '2'\nassert solution('6 4 3 5 2') == '2'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 3 4\n2 3 4\n0 1\n0 1\n0 1\n''') == '4'\n\nassert solution('''4\n1 2\n0 2 3\n0 1\n1\n''') == '3'\n\nassert solution('''6\n1 3\n0 2 4\n1 5\n0 4\n1 3 5\n2 4\n''') == '2'\n\nassert solution('''4\n1 2\n0 2 3\n0 1\n1\n''') == '4'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nBLUE 1 5000\\nRED 5001 10000\\n') == '2\\n'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000\\n') == '3\\n'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000\\n') == 'IMPOSSIBLE\\n'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nBLUE 1 5000\nRED 5001 10000\n''') == \"2\"\nassert solution('''\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == \"3\"\nassert solution('''\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 700 10000\n''') == \"3\""
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == '3'\n\nprint(solution('''\nBLUE 1 4000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n'''))"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == 'IMPOSSIBLE'\nassert solution('''5\nBLUE 1 4000\nRED 5002 5000\nORANGE 5003 6000\nGREEN 5004 7500\nWHITE 5005 10000\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nBLUE 1 5000\\nRED 5001 10000') == '2'\nassert solution('3\\nBLUE 1 6000\\nRED 2000 8000\\nWHITE 7000 10000') == '3'\nassert solution('4\\nBLUE 1 3000\\nRED 2000 5000\\nORANGE 4000 8000\\nGREEN 7000 10000') == '3'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nBLUE 1 5000\nRED 5001 10000''') == '2'\nassert solution('''3\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000''') == '3'\nassert solution('''4\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000''') == 'IMPOSSIBLE'\nassert solution('''5\nBLUE 1 4000\nRED 5002 5000\nORANGE 5000 4000\nGREEN 8000 5000\nWHITE 6000 10000''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == '3'\nassert solution('''\nBLUE 1 4000\nRED 4002 10000\n''') == 'IMPOSSIBLE'\nassert solution('''\nBLUE 1 4000\nRED 4002 10000\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '1'\nassert solution('A') == '1'\nassert solution('AAAA') == '7'\nassert solution('GGGG') == '2'\nassert solution('GGAACCCAGCCTGGGCCTGAAACCCGGTAAAGCCTAAACCCACCA') == '8'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nPRATTATTATTIC\n''') == '6'\nassert solution('''\nGGGGGGGGG\n''') == '1'\nassert solution('''\nPRIME\n''') == '5'\nassert solution('''\nBABBABABBABBA\n''') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AAAAAA') == '5'\nassert solution('ABAAAB') == '2'\nassert solution('ABABABABABBA') == '6'\nassert solution('PRIME') == '5'\nassert solution('AAAAAAAAAAAAA') == '5'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AAAAABA\") == \"2\"\nassert solution(\"AAAAAAAAAA\") == \"1\"\nassert solution(\"AAAAAAAAAAAAAA\") == \"2\"\nassert solution(\"AAAABAAAB\") == \"4\"\nassert solution(\"AAAABBAAAA\") == \"1\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n\n\"\"\""
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\nPRATTATTATTIC\n\"\"\") == \"6\"\nassert solution(\"\"\"\nGGGGGGGGG\n\"\"\") == \"1\"\nassert solution(\"\"\"\nPRIME\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"PRATTATTATTIC\") == \"6\"\nassert solution(\"GGGGGGGGG\") == \"1\"\nassert solution(\"PRIME\") == \"5\"\nassert solution(\"BABBABABBABBA\") == \"6\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''I 14 B\nD 1\nE\nD 1\nD 2\nE\n''') == '0'\nassert solution('''I 14 A\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''I 14 A\nD 1\nE\nI 15 B\nE\n''') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\n\n\"\"\""
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nD 1\nD 2\nE\nD 3\nD 1\nE\n\"\"\") == \"0\"\nassert solution(\"\"\"\nD 2\nD 1\nE\nD 1\nD 2\nE\n\"\"\") == \"1\"\nassert solution(\"\"\"\nI 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n\"\"\") == \"0\"\nassert solution(\"\"\"\nI 14 A\nI 14 A\nE\nI 14 A\nI 15 B\nE\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\nassert solution('''D 1\nD 2\nE\nD 3\nD 1\nE\nD 1\nD 2\nE\nD 1\nE\n''') == '0'\nassert solution('''D 2\nD 1\nE\nD 1\nD 2\nE\nD 1\nE\n''') == '1'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nD 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\nassert solution('''\nD 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''\nD 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''\nI 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nD 1\nD 2\nE\nD 3\nD 1\nE\n''') == '0'\nassert solution('''\nD 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''\nD 2\nD 1\nE\nD 1\nD 2\nE\n''') == '1'\nassert solution('''\nI 1 X\nD 1\nE\nE\n''') == '0'\nassert solution('''\nI 14 B\nI 14 A\nE\nI 14 A\nI 15 B\nE\n''') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('D 1\\nD 2\\nE') == '0'\nassert solution('D 2\\nD 1\\nE') == '1'\nassert solution('D 2\\nD 1\\nE') == '1'\nassert solution('D 2\\nD 1\\nE') == '1'\nassert solution('I 14 B\\nD 1\\nE\\nE') == '0'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nassert solution(\"I 14 B\") == \"0\"\nassert solution(\"I 14 A\") == \"1\"\nassert solution(\"I 15 B\") == \"1\"\nprint(\"You're all set!\")\n\n\"\"\"\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('D 1\\nD 2\\nE\\nD 3\\nD 1\\ne\\nD 1\\nE') == '0'\nassert solution('D 2\\nD 1\\nE\\nD 1\\nD 2\\ne\\nD 1\\nE') == '1'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nprint('all tests passed')\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 0 1 0 0 0') == '300'\nassert solution('5 0 1 0 1 0') == '1900'\nassert solution('6 0 1 1 0 0') == '2300'\nassert solution('10 399 0 0 0 0') == '399'\nprint('All tests passed!')\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4 0 1 0 0 0') == '300'\nassert solution(\n    '5 0 1 0 1 0') == '1900'\nassert solution(\n    '6 0 1 1 0 0') == '2300'\nassert solution(\n    '10 399 0 0 0 0') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 0 1 0 0 0\") == \"300\"\nassert solution(\"5 0 1 0 1 0\") == \"1900\"\nassert solution(\"6 0 1 1 0 0\") == \"2300\"\nassert solution(\"10 399 0 0 0 0\") == \"399\""
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 0 1 0 0 0\n0\n0\n0\n0\n0\n''') == '300'\nassert solution('''5 0 1 0 1 0\n0\n0\n0\n0\n0\n''') == '1900'\nassert solution('''6 0 1 1 0 0\n0\n0\n0\n0\n0\n''') == '2300'\nassert solution('''10 399 0 0 0 0\n0\n0\n0\n0\n0\n0\n''') == '399'\nassert solution('''2 3 2\n0 0\n0 0\n''') == '0'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 0 1 1 0 0''') == '1900'\nassert solution('''4 0 1 0 0 0''') == '300'\nassert solution('''5 0 1 1 0 0''') == '2300'\nassert solution('''10 399 0 0 0 0''') == '399'\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"18\""
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"1200\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"4 0 1 0 0 0\n0\"\"\"\n) == \"300\"\nassert solution(\n    \"\"\"5 0 1 0 1 0\n0\"\"\"\n) == \"1900\"\nassert solution(\n    \"\"\"6 0 1 1 0 0\n0\"\"\"\n) == \"2300\"\nassert solution(\n    \"\"\"10 399 0 0 0 0\n0\"\"\"\n) == \"399\"\nassert solution(\n    \"\"\"5 100 0 0 0 0\n0\"\"\"\n) == \"100\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == output_string"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10') == '2'\nassert solution('2 10') == '2'\nassert solution('2 10') == '2'"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10') == '2'\nassert solution('2 10') == '2'\nassert solution('2 10') == '2'\nassert solution('2 10') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 10\") == \"2\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"2 10\") == \"2\"\nassert solution(\"2 10\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 10\") == \"2\"\nassert solution(\"1 10\") == \"2\""
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\\n5\") == '1'\nassert solution(\"1\\n5\\n5\") == '1'\n\n'''\nimport heapq"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 10\") == \"2\"\nassert solution(\"1 5\") == \"2\"\nassert solution(\"1 4\") == \"2\"\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 10\n1 12\n1 13\n''') == '2'\n\nassert solution('''\n2 10\n1 5\n1 12\n''') == '2'\n\nassert solution('''\n2 10\n1 5\n1 4\n''') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10\\n1 5\\n1 4') == '2'\nassert solution('2 10\\n1 5\\n1 4') == '2'"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 10\n1 12\n1 13''') == '2'\nassert solution('''2 10\n1 5\n1 12''') == '2'\nassert solution('''2 10\n1 5\n4 1''') == '2'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == '2'\nassert solution('2 10') == '2'\nassert solution('3 10') == '2'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4 10 5\\n10 20 5\\n20 10 5\\n20 20 5\\n') == '28.970562748'\nassert solution('2\\n4 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == '36.2842712475'\nassert solution('3\\n1 1 15\\n5 1 100\\n9 1 56\\n1 5 1\\n5 5 33\\n9 5 3\\n') == '32'\nassert solution('4\\n10 10 5\\n10 20 1\\n20 10 12\\n20 20 8\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '28.970562748'\nassert solution('''\n4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '36.2842712475'\nassert solution('''\n6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n''') == '32'\nassert solution('''\n8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8\n''') == '32'\nassert solution('''\n10\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n''') == '28.970562748'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'IMPOSSIBLE'\nassert solution('2') == '28.970562748'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'POSSIBLE'\nassert solution('4') == 'POSSIBLE'\nassert solution('5') == 'IMPOSSIBLE'\nassert solution('6') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5\n'''\n) == \"28.970562748\"\n\nprint(solution(\n'''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3\n'''\n))\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n10 10 5\n10 20 5\n20 10 5\n20 20 5''') == '28.970562748'\nprint(solution('''4\n10 10 5\n10 20 1\n20 10 12\n20 20 8'''))\nprint(solution('''6\n1 1 15\n5 1 100\n9 1 56\n1 5 1\n5 5 33\n9 5 3'''))\nprint(solution('''8\n4 4 1\n4 6 1\n4 8 1\n6 6 14\n8 4 1\n8 6 1\n8 8 1\n99 6 -8'''))"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 6\\n3 2 7\\n8 8 -9\\n10 6 -8\\n9 6 3\") == \"28.970562748\"\nprint(solution(\"8\\n3 2 6\\n3 2 7\\n8 8 -9\\n10 6 -8\\n9 6 3\"))\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '28'\nassert solution('6') == '32'\nassert solution('8') == '32'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10 10 5\\n10 20 5\\n20 10 5\\n20 20 5\") == \"28.970562748\"\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '32'\nassert solution('4') == '28.970562748'\nassert solution('6') == '32'\nassert solution('12') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\n\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\n\nassert solution('''\n3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n2 5 10\n3 5 9 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n2 2 6 8\n4 8 9 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n\"\"\") == \"1\"\n\nstdin: str = \"\"\"\n1\n2 5 10\n3 5 9 4\n\"\"\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\n\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\n\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''3\n2 1 6 5\n2 5 5 4\n5 1 7 7\n''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\nassert solution('''\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''\n2\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution(input_string=\"\"\"\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n\"\"\") == \"3\"\nassert solution(input_string=\"\"\"\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n\"\"\") == \"1\"\nassert solution(input_string=\"\"\"\n3\n-1 -2 -1 -1\n-1 2 -1 -1\n5 1 7 7\n\"\"\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 3 9 5\n2 2 6 8\n4 8 9 3\n''') == '3'\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '1'\nassert solution('''\n3\n5 2 7 10\n7 4 4 10\n2 4 10 8\n''') == '-1'\nassert solution('''\n2\n-1 -2 -1 -1\n-1 2 -1 -1\n''') == '1'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n3 2\\n3 2\") == \"1\"\nassert solution(\"3\\n5 2 7 10\\n7 4 4 10\\n2 4 10 8\") == \"3\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234321') == '94708'\nprint('Congratulations!')\n\nprint(\"Your code ran successfully!\")\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12223') == '12223'\nassert solution('1232321') == '94708'\nassert solution('1234321') == '-1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12223') == '94708'\nassert solution('12223321') == '-1'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1234321\") == \"94708\"\nassert solution(\"12321\") == \"1\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"1\""
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"9570\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1234321') == '94708'\nassert solution('12321') == '-1'\nassert solution('12') == '-1'\nassert solution('0') == '-1'\nassert solution('123456789') == '123456789'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12321\") == \"94708\"\nassert solution(\"1234321\") == \"94708\"\nassert solution(\"55\") == \"55\"\nassert solution(\"101\") == \"-\"\nassert solution(\"10\") == \"10\"\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 6') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 0 0 0 5\n''') == '6'\nassert solution('''\n1 2 0 0 4\n''') == '4'\nassert solution('''\n1 2 0 0 6\n''') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 0 0 5') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 7') == '1'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0'\n\nimport math"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 0 0 0 3\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n1 2 0 0 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1 2 0 0 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n1 2 0 0 6\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 0 0 0 3''') == '6'\nassert solution('''1 2 0 0 5''') == '2'\nassert solution('''1 2 0 0 4''') == '4'\nassert solution('''1 2 0 0 6''') == '0'\nassert solution('''1 2 0 0 7''') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0 0 3\") == \"6\"\nassert solution(\"1 2 0 0 5\") == \"2\"\nassert solution(\"1 2 0 0 4\") == \"4\"\nassert solution(\"1 2 0 0 6\") == \"0\"\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 7') == '0'\nassert solution('1 2 0 0 8') == '0'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 0 0 0 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n1 2 0 0 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 2 0 0 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1 2 0 0 6\n\"\"\") == \"0\"\nassert solution(\"\"\"\n0 0 0 0 3\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\"\nprint(solution(input()))\n\n------SOLUTION------\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\nprint('You passed all the tests!')\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution(\n    '0.5 8 8') == '9.21068947 2.56226688'\nassert solution(\n    '1 8 8') == '6.22375968 -0.31921472'"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0.5 -5.301 3.098\nSample Input 1:\n0.5 -5.301 3.098\nSample Output 1:\n-1.26167861 3.88425357''') == '-1.26167861 3.88425357'\nassert solution('''0.5 8 8\nSample Input 2:\n0.5 8 8\nSample Output 2:\n9.21068947 2.56226688''') == '9.21068947 2.56226688'\nassert solution('''1 8 8\nSample Input 3:\n0.5 -8 8\nSample Output 3:\n6.22375968 -0.31921472''') == '6.22375968 -0.31921472'"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"0.5 -5.301 3.098\n\"\"\"\n) == \"\"\"\n-1.26167861 3.88425357\"\"\"\n\nassert solution(\n\"\"\"0.5 8 8\n\"\"\"\n) == \"\"\"\n9.21068947 2.56226688\"\"\"\n\nassert solution(\n\"\"\"1 8 8\n\"\"\"\n) == \"\"\"\n6.22375968 -0.31921472\"\"\"\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"0.5 -5.301 3.098\n\"\"\") == \"-1.26167861 3.88425357\n\nassert solution(\n\"\"\"0.5 8 8\n\"\"\") == \"9.21068947 2.56226688\n\nassert solution(\n\"\"\"1 8 8\n\"\"\") == \"6.22375968 -0.31921472\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0.5 -5.301 3.098\") == \"-1.26167861 3.88425357\"\nassert solution(\"0.5 8 8\") == \"9.21068947 2.56226688\"\nassert solution(\"1 8 8\") == \"6.22375968 -0.31921472\""
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 2\n2 1\n''') == '1'\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '0'\nassert solution('''\n5 5\n1 2\n2 3\n2 4\n3 1\n4 1\n5 1\n''') == '2'\nassert solution('''\n6 6\n1 2\n2 3\n2 4\n3 1\n4 1\n5 1\n6 1\n''') == '3'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 5') == '0'\nassert solution('10 10') == '1'\nassert solution('20 20') == '1'\nassert solution('23 23') == '0'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 2\n2 1''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1\nSample Output 5:\n0\n''') == '0'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\nSample Output 6:\n1\n1\n\n''') == '1'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 2\n2 1\n''') == '1'\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''\n4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '1'\nassert solution('''\n5 5\n1 2\n2 3\n2 4\n3 4\n4 5\n''') == '2'\nassert solution('''\n4 5\n1 2\n2 3\n3 4\n4 1\n''') == '0'\nassert solution('''\n10 5\n1 2\n2 3\n2 4\n3 5\n3 6\n4 7\n4 8\n4 9\n5 2\n6 1\n6 2\n''') == '2'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\nprint('OK')\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n1 2\\n2 1\") == \"1\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 1\") == \"1\""
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"0\"\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 2\\n1 2\\n2 1\") == \"1\"\nassert solution(\n    \"3 3\\n1 2\\n2 3\\n3 1\\n4 1\\nSample Output 3:\") == \"1\"\nassert solution(\n    \"4 5\\n1 2\\n2 3\\n2 4\\n3 1\\n4 1\\nSample Output 4:\") == \"0\""
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 1 2') == \"2\"\nassert solution('5 5 0 4') == \"11\"\nassert solution('4 5 0 3') == \"infinity\"\nassert solution('5 5 0 4') == \"infinity\"\nassert solution('3 3 1 2') == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 5, 0, 3]) == \"11\"\nassert solution([5, 5, 0, 4]) == \"infinity\"\nassert solution([3, 3, 1, 2]) == \"2\"\nassert solution([2, 2, 1, 1]) == \"infinity\"\nassert solution([4, 1, 0, 1]) == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 5 0 3\\n\"\n    \"0 1 1\\n\"\n    \"1 2 2\\n\"\n    \"2 0 4\\n\"\n    \"2 3 1\\n\"\n    \"2 3 3\\n\") == \"11\"\nprint(solution(\n    \"3 3 1 2\\n\"\n    \"0 1 1\\n\"\n    \"1 0 1\\n\"\n    \"1 2 1\\n\"\n    \"Sample Output 3:\n    infinity\")\n)\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5 0 3') == \"11\"\nassert solution('5 5 0 4') == \"infinity\"\nassert solution('2 1 0 1') == \"2\"\nassert solution('0 1 2 1') == \"2\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5 0 3') == '11'\nassert solution('5 5 0 4') == 'infinity'\nassert solution('4 5 0 3') == 'infinity'"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == \"11\"\nassert solution('''\n5 5 0 4\n0 1 1\n1 0 1\n1 2 1\n2 0 4\n2 3 1\n2 3 3\n''') == \"infinity\"\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == \"2\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"infinity\"\nassert solution(\"5 5 0 3\") == \"11\"\nassert solution(\"5 5 0 4\") == \"infinity\"\nassert solution(\"3 3 1 2\") == \"2\"\nassert solution(\"5 5 0 4\") == \"infinity\"\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([4, 5, 0, 3]) == '11'\nassert solution([5, 5, 0, 3]) == 'infinity'\nassert solution([5, 5, 0, 4]) == 'infinity'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 0 3\\n0 1 1\\n1 2 2\\n2 0 4\\n2 3 1\\n2 3 3') == '11'\nassert solution('5 5 0 4\\n0 1 1\\n1 2 1\\n2 3 1\\n3 0 1\\n2 4 1') == 'infinity'\nassert solution('3 3 1 2\\n0 1 1\\n1 0 1\\n1 2 1\\n') == '2'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\") == \"11\"\nassert solution(\"5 5 0 4\") == \"infinity\"\nassert solution(\"3 3 1 2\") == \"2\"\nassert solution(\"2 1 0 1\") == \"2\"\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 1 2 1') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'\nassert solution('3 1 2 3') == '12'\n\nstdin = \"\"\"\n4\n2 1 2 3\n2 1 2\n2 1\n3 3 4\n3 2 2 4\n\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 3') == '6'\nassert solution('4 2 1 2 1') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\n\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '0'\n\nassert solution('''3 3 1 1\n1 1\n2 2 3\n''') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '18'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2 1 2 1') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 1 2 1') == '6'\nassert solution('3 3 1 1') == '0'\nassert solution('3 2 2 3') == '18'"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1 2\") == \"6\"\nassert solution(\"3 3 1 1\") == \"0\"\nassert solution(\"3 2 2 3\") == \"18\"\nassert solution(\"3 1 2 2\") == \"12\""
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 3 1 2 1 1') == '7'\nassert solution('4 3 2 2 1') == '0'\nassert solution('4 3 2 3 4 1 1') == '6'\nassert solution('5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5') == '1372822'"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 1 2\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '18'\nassert solution('''\n4 2 1 2\n2 1 2\n2 3 4\n''') == '6'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 2 1 2\n2 1 2\n2 3 4\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 3 1 1\n1 1\n2 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 2 2 3\n1 1\n2 2 3\n\"\"\") == \"18\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000000 1') == '468559', \"Wrong Answer\"\nassert solution('1000000 5') == '49401', \"Wrong Answer\"\nassert solution('1000000 16') == '20', \"Wrong Answer\"\nassert solution('9000000000000000000 62') == '1', \"Wrong Answer\"\n\n'''"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1000000 1\n''') == '468559'\nassert solution('''\n1000000 5\n''') == '49401'\nassert solution('''\n1000000 16\n''') == '20'\nassert solution('''\n9000000000000000000 62\n''') == '1'\nassert solution('''\n4\n''') == '0'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000000 1') == '468559'\nassert solution('1000000 5') == '49401'\nassert solution('1000000 16') == '20'\nassert solution('9000000000000000000 62') == '1'\n\n\nTheta has learnt about powers of $2$ in school. She notices that some numbers when written out contain powers of $2$ in their digit representation: for instance, $12560$ contains $256$ which is a power of $2$. She has been wondering how many such numbers there are.\n\nCan you write a program that counts how many numbers contain a given power of $2$?\n\n-----Input-----\nThe input consists of a single line with two integers $n$ and $e$ ($0 \\le n \\le 9 \\cdot 10^{18}, 0 \\le e \\le 62$).\n\n-----Output-----\nOutput a single integer that is equal to the number of distinct integers $k$ ($0 \\le k \\le n$) whose decimal representation contains the digits of $2^e$ as a substring.\n\n-----Examples-----\nSample Input 1:\n1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == \"468559\"\nassert solution('''1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == \"49401\"\nassert solution('''1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == \"20\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000000 1\") == \"468559\"\nassert solution(\"1000000 5\") == \"49401\"\nassert solution(\"1000000 16\") == \"20\"\nassert solution(\"9000000000000000000 62\") == \"1\"\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == '468559'\nprint(solution(input_string))\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == '0'\nassert solution(\"1000000 1\") == '468559'\nassert solution(\"1000000 5\") == '49401'\nassert solution(\"1000000 16\") == '20'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"468559\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 9\n5 4 1\n''') == '1'\nassert solution('''\n4 13\n2 2 2 2\n''') == '3'\nassert solution('''\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\nprint('All test cases passed!')"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 9\n5 4 1\n''') == '1'\nassert solution('''4 13\n2 2 2 2\n''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 9\\n5 4 1\") == \"1\"\n\nassert solution(\n    \"4 13\\n2 2 2 2\") == \"3\"\n\nassert solution(\n    \"18 90\\n1 2 3 4 5 6 1 2 3 4 5 6\") == \"12\"\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 9\") == \"1\"\nassert solution(\"4 13\") == \"3\"\nassert solution(\"18 90\") == \"12\""
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 9\n5 4 1\n2 2 2 2\n1 2 3 4 5 6 1 2 3 4 5 6''') == '1'\nassert solution('''4 13\n2 2 2 2\n1 2 3 4 5 6 1 2 3 4 5 6''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6\n1 2 3 4 5 6 1 2 3 4 5 6''') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\"4 13\") == \"3\"\nassert solution(\"18 90\") == \"12\""
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 9\n5 4 1\n''') == '1'\nassert solution('''\n4 13\n2 2 2 2\n''') == '3'\nassert solution('''\n18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\n"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 9') == '1'\nassert solution('4 13') == '3'\nassert solution('18 90') == '12'"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 9\") == \"1\"\nassert solution(\"4 13\") == \"3\"\nassert solution(\"18 90\") == \"12\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"2 3 4 5 8\") == \"5\"\nassert solution(\"7 3 5 8\") == \"7\"\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 3 4 5 8\n''') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1\n3\n''') == '0'\nassert solution('''1\n1\n2\n''') == '2'\nassert solution('''5\n1 2 3 4 5 8\n''') == '3'"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('5') == '7'\nassert solution('8') == '9'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n2''') == '1'\nassert solution('''5\n2 3 4 5 8''') == '5'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n''') == '0'\nassert solution('''\n3\n4 7 8\n''') == '3'\nassert solution('''\n5\n2 3 4 5 8\n''') == '5'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\nassert solution('111111111') == '-1'\nassert solution('123456789') == '-1'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"123456789\") == \"17\"\nassert solution(\"49\") == \"11\"\nassert solution(\"-1\") == \"-1\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6''') == '4'\nassert solution('''149''') == '17'\nassert solution('''123476544''') == '11112'\n\n--------------------------------------------------------------\n3)\n\nWrite an expression, in the form of a Python function, to compute the largest common divisor (L.C.D.) of two integers.\n\nL.C.D. is defined as the largest positive integer $g$ such that $g = a b$ and $a \\mathrm{mod} b = 0$. The first definition requires that $a$ and $b$ be coprime, so $g = \\lceil a \\rceil b$.\n\nYour code should return the L.C.D. of the given two integers, $a$ and $b$. Your code should be written in a single line of code.\n\n```python\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"123476544\") == \"11112\"\nprint(\"All tests passed\")\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(6) == \"4\"\nassert solution(149) == \"17\"\nassert solution(123476544) == \"11112\""
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"149\") == \"17\"\nassert solution(\"123476544\") == \"11112\"\nassert solution(\"1234567890987654321\") == \"11112\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('d 4\\nabc\\nbca\\ncab\\naca\\n') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\nbadca\\nabc\\ncab\\ncda\") == \"AMBIGUOUS\"\nassert solution(\"4 1\\nabc\\ndef\\n\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('d 4\\nabc\\nbca\\ncab\\naca') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb') == 'AMBIGUOUS'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca') == 'IMPOSSIBLE'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nd 4\ncab\ncda\nccc\nbadca\n''') == 'adcb'\nassert solution('''\nc 4\nabc\nbca\ncab\naca\n''') == 'IMPOSSIBLE'\nassert solution('''\nf 2\ndea\ncfb\n''') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\nccc\\naca\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''c 4\ncab\ncda\nccc\nbadca\n''') == 'adcb'\nassert solution('''d 4\ncab\ncda\nccc\nbadca\n''') == 'IMPOSSIBLE'\nassert solution('''c 2\nabc\nbca\ncab\naca\n''') == 'AMBIGUOUS'"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''d 4\ncab\ncda\nccc\nbadca''') == 'adcb'\nassert solution('''c 4\nabc\nbca\ncab\naca''') == 'IMPOSSIBLE'\nassert solution('''f 2\ndea\ncfb''') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"d 4\\ncab\\ncda\\nccc\\nbadca\\n\") == \"adcb\"\nassert solution(\"c 4\\nabc\\nbca\\ncab\\naca\\n\") == \"IMPOSSIBLE\"\n\n\"\"\"\n\nfrom collections import defaultdict\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('d 4\\ncab\\ncda\\nccc\\nbadca\\n') == 'adcb'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3 3 3\n2 2 2 2''') == '9'\nassert solution('''10 20 0 0\n10 5 4 10''') == '10'\nassert solution('''100 20 543 12\n100 12 543 12''') == '164''')\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3 3 3\n10 20 0 0\n''') == '9'\nassert solution('''10 20 0 0\n''') == '10'\nassert solution('''100 20 543 12\n''') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\"\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"9\"\nassert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3 3\") == \"9\"\nassert solution(\"10 20 0 0\") == \"10\"\nassert solution(\"100 20 543 12\") == \"164\""
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('10 20 0 0') == '10'\nassert solution('100 20 543 12') == '164'\nprint('All tests passed!')"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 3') == 'yes'\nassert solution('4 2 3') == 'no'\nassert solution('4 3 3') == 'no'\nassert solution('3 2 3') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"3 2 3\") == \"no\"\nassert solution(\"2 2 2\") == \"yes\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n\"\"\"\n) == \"yes\"\n\nassert solution(\n\"\"\"\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n\"\"\"\n) == \"no\"\n\nassert solution(\n\"\"\"\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n\"\"\"\n) == \"no\""
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2 3\") == \"yes\"\nassert solution(\"4 3 3\") == \"no\"\nassert solution(\"3 2 3\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 3\") == \"yes\"\nassert solution(\"4 2 3\") == \"no\"\nassert solution(\"3 2 3\") == \"yes\"\nassert solution(\"10 10 10\") == \"yes\"\nassert solution(\"5 2 3\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12\") == \"yes\"\nassert solution(\"4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0\") == \"no\""
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 3\\n0 1\\n1 0\\n-1 0\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'yes'\nassert solution('4 3 3\\n0 1\\n1 2\\n-1 2\\n0 -1\\n-1 1 -2\\n-1 -1 2\\n0 -1 0') == 'no'\nassert solution('3 2 3\\n2 1\\n0 0\\n-1 -2\\n1 1 -2\\n3 6 12') == 'yes'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3') == 'yes'\nassert solution('4 3 3') == 'no'\nassert solution('3 2 3') == 'no'"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n\"\"\") == \"yes\"\nassert solution(\"\"\"\n5 2 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n\"\"\") == \"no\"\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 5') == 'yes'\nassert solution('3 2 4') == 'no'\n\n'''\n\nn, m, r = map(int, stdin().split())\nx = []\ny = []\nfor i in range(n):\n    x.append(int(input()))\n    y.append(int(input()))\n\nx = sorted(x)\ny = sorted(y)\nx1 = []\ny1 = []\nfor i in range(n):\n    if x[i] == 0:\n        x1.append(i)\n    else:\n        x1.append(i)\n        break\nfor i in range(n):\n    if y[i] == 0:\n        y1.append(i)\n    else:\n        y1.append(i)\n        break"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6|52|52|6''') == 4\nassert solution('''12121131221''') == 7\nassert solution('''123456789''') == 1\nassert solution('''123456789123456789''') == 1\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\"\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input().strip()) == \"1\"\nassert solution(input().strip()) == \"4\""
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '652526') == '4'\nassert solution(\n    '12121131221') == '7'\nassert solution(\n    '123456789') == '1'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"652526\") == \"4\"\nassert solution(\"12121131221\") == \"7\"\nassert solution(\"123456789\") == \"1\""
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n1 2\n2 1\n3 4\n3 4\n4 5\n4 6\n5 7\n6 8\n7 8\n6 9\n''') == '1872'\nassert solution('''\n4 4\n12 1 2\n5 1 3\n10 1 4\n13 2 3\n12 3 1\n12 4 2\n13 2 4\n''') == '1800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '0'\nassert solution('4 4') == '24'\nassert solution('6 8') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"24\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"4 4\") == \"24\"\nassert solution(\"6 8\") == \"800\""
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '0'\nassert solution('3\\n4') == '0'\nassert solution('6\\n8') == '800'\nassert solution('10\\n100') == '0'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\n\nassert solution('''6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '0'\nassert solution('4 4') == '24'\nassert solution('6 8') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '0'\nassert solution('4 4') == '24'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 4\n24 10\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n\"\"\") == \"2400\"\n\nassert solution(\"\"\"\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n\"\"\") == \"8600\"\n\nassert solution(\"\"\"\n6 7\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n\"\"\") == \"2400\"\n\nassert solution(\"\"\"\n1 2\n10 20\n0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"0\"\nassert solution(\"4 4\") == \"24\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2 4') == '1 4'\nassert solution('5 4 2 3 1') == '1 4 2 3'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 4\"\nprint(solution())\n\"\"\"\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 2 4\") == \"1 4\"\nassert solution(\"5 1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"4 1 2 3\") == \"-1\""
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1 2 3'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 3 2 4\\n\") == \"1 4\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"-1\"\nassert solution(\"1 2 3 4 5\\n\") == \"1 2 3 4 5\""
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1 4'\nassert solution('5') == '1 2 3 4 5'\nassert solution('6') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 2 4') == '1 4'\nassert solution('5\\n1 2 3 4 5') == '1 2 3 4 5'\nassert solution('4\\n1 1 3 2') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2 3\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''5\n1 2 3 4 5\n''') == '-1'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1 2 3\n''') == '1 2 3'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1 2 3 4 5'\nassert solution('''\n4\n1 3 2 4\n''') == '1 2 3 4'\nprint(solution('''\n5\n1 2 3 4 5\n'''))\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 4 3\") == \"1 2 3 4\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n...\\n.#\\n\") == \"1\"\nassert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n\") == \"8\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 6') == '5'"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 8\\n..#..#..\\n.######.\\n.######.\\n..#..#..\\n\") == \"8\"\nassert solution(\"3 3\\n...\\n.##\\n...\\n\") == \"1\"\nassert solution(\"2 6\\n.#####\\n#####.\\n\") == \"5\"\nprint(solution(input))\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4 8\n..#..#..\n.######.\n.######.\n..#..#..\n\"\"\") == \"8\"\nassert solution(\n\"\"\"\n3 3\n...\n.#.\n...\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n2 6\n.#####\n#####.\n\"\"\") == \"5\""
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"4 4\") == \"2\"\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 8') == '8'\nassert solution('3 3') == '1'\nassert solution('2 6') == '5'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 5') == '3'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n.#####.\\n.#####.\\n\") == \"5\"\nassert solution(\"4 4\\n.#####.\\n.#####.\\n.#####.\\n\") == \"5\"\nassert solution(\"4 4\\n.#####.\\n.#####.\\n.#####.\\n\") == \"5\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3') == '13'\nassert solution('3 2 2') == '4 2 6 1 9 7 5 5 7 1 2 3 3'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"13\"\nprint(solution(input_))"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"6\"\nassert solution(\"4 5 5\") == \"12\"\nassert solution(\"3 3 3\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 2 2\") == \"13\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1''') == '6', 'First'\nassert solution('''3 3 3\n3 1 3\n1 3 2\n3 2 3''') == '13', 'Second'\nassert solution('''3 2 2\n1 2\n2 1\n1 2''') == '-1', 'Third'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\nprint(solution('''5 3 4 4 3\n3 1 1\n1 3 2\n3 2 3\n4 3 2\n'''))\nprint(solution('''1 1\n1 1\n1 1\n1 1\n'''))\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 3\") == \"13\"\nassert solution(\"3 2 2\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"3 1 1\") == \"6\""
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5 5\\n2 1 1 1 2') == '6'\nassert solution('3 3 3\\n3 1 1\\n1 3 2\\n3 2 3') == '13'\nassert solution('3 2 2\\n3 1 1\\n1 3 2\\n3 2 3') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution(\n'''\n3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution(\n'''\n3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 2\") == \"13\"\nassert solution(\"3 3 3\") == \"4 2 6 1 9 7 5 5 7 1 2 3 3\"\nassert solution(\"2 1 1\") == \"19 12 2 18 5 5\"\nassert solution(\"1 3 3\") == \"9 7 5 5 7 1 2 3 3\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1 1\"\nassert solution(\"4\") == \"1 5\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"2\") == \"1 1\"\nassert solution(\"1\") == \"1 1\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1 1\"\nassert solution(\"4\") == \"1 5\"\nassert solution(\"\") == \"0 0\"\nassert solution(\"5\") == \"1 1\"\nassert solution(\"4\") == \"1 5\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1 2\"\nassert solution(\"10\") == \"10 1\"\nassert solution(\"12\") == \"1 2\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1 2\""
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1 5\"\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3') == '5 1'\nassert solution('4\\n4\\n1\\n2\\n3') == '3 2'\nassert solution('4\\n4\\n3\\n2\\n1') == '3 2'\nassert solution('10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n10"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3''') == '1 1'\n\nassert solution('''5\n4\n3\n2\n1\n0\n1\n2\n3\n4''') == '2 1'\n\nassert solution('''10\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n0\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2''') == '7 4'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n3\\n3\\n3') == '1 1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n3\n3\n3\n3\n1\n2\n3\n4\nSample Output 1:\n5 1\nSample Output 2:\n1 5\nSample Output 3:\n3 2''') == '1 5'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1 1'\nassert solution('4') == '2 2'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '7'\nassert solution('15') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n3 0\\n3 1\\n3 2') == '1'\nassert solution('4\\n3 0\\n3 1\\n3 2') == '1'\nassert solution('5\\n4 0\\n3 1\\n2 2\\n1 3') == '3'\nassert solution('5\\n4 0\\n3 1\\n2 2\\n1 3') == '3'\nassert solution('6\\n5 0\\n4 1\\n3 1\\n2 2\\n1 3\\n0 4') == '5'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n3 0\n3 1\n3 2\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n2\n3 0\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n5\n2 3 1 0\n\"\"\") == \"2\""
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\nassert solution('''\n6\n3 0\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '5'"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '1'\n\n'''\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"1\"\nassert solution(\"5\\n3 0\") == \"1\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3 0\\n3 1\\n3 2\\n3 3\\n3 4') == '1'\nassert solution('5\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4') == '5'\nassert solution('10\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1') == '10'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1', 'basic test'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5','should return max of 4, 3, 2, 1, 0'\nassert solution('''\n6\n3 0\n1 1\n2 1\n1 3\n0 4\n5 1\n''') == '5','should return max of 3, 2, 1, 0, 4'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n3 0\\n3 1\\n3 2\\n3 3\\n\") == \"1\"\nassert solution(\"3\\n4 0\\n3 1\\n2 2\\n1 3\\n0 4\\n\") == \"5\"\nassert solution(\"6\\n5 0\\n4 1\\n3 1\\n2 1\\n1 3\\n0 4\\n\") == \"5\"\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3 0\n3 1\n3 2\n3 3\n3 4\n''') == '1'\nassert solution('''\n5\n4 0\n3 1\n2 2\n1 3\n0 4\n''') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\n\nassert solution('''\n8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\n\nassert solution('''\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '4'\nassert solution('8') == '0'\nassert solution('9') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\n\nassert solution('''8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"8\") == \"7\"\nassert solution(\"9\") == \"8\"\nassert solution(\"0\") == \"0\""
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(\n    \"9\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\"\n) == \"5\"\nassert solution(\n    \"7\\n1 2 2\\n1 3 1\\n2 4 3\\n3 5 2\\n4 6 3\\n5 7 2\\n6 8 1\\n7 9 2\"\n) == \"6\"\nassert solution(\n    \"15\\n1 2 2\\n1 3 1\\n1 4 5\\n1 5 5\\n2 6 3\\n3 7 3\\n4 8 1\\n5 9 2\\n6 10 3\\n7 11 3\\n8 12 3\\n9 13 3\\n10 14 3\\n11 15 3\\n12 16 3\\n13 17 3\\n14 18 3\\n15 19 3\\n\"\n) == \"15\"\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '4'\nassert solution('8') == '0'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3 1\\n2 3 1\\n3 4 3\\n4 5 4\\n5 6 3\\n6 7 2\\n6 8 2\\n\") == \"4\\n3\\n4\\n5\\n6\"\nassert solution(\"4\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"0\\n1\\n2\\n3\\n6\"\nassert solution(\"5\\n1 2 2\\n1 3 1\\n2 4 3\\n2 7 1\\n3 5 2\\n5 6 2\\n7 8 1\\n\") == \"4\\n1\\n2\\n3\\n6\""
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '4'\nassert solution('8') == '0'\nassert solution('8') == '5'\nassert solution('8') == '0'\nassert solution('8') == '0'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"9\") == \"5\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\n\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '36'\n\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '7'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"2 1\") == \"6\"\nassert solution(\"1 2\") == \"30\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"2 1\") == \"6\"\nassert solution(\"1 2\") == \"30\""
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n2 1\nV1 V2 V1 V1 V2\n''') == '6'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"2 1\") == \"6\"\nassert solution(\"1 2\") == \"30\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\nV1 V2 V1 V1 V2\\n') == '5'\nassert solution('2 1\\nV1 V2 V1 V1 V2\\n') == '6'\nassert solution('3 1\\nV1 V2 V1 V1 V2\\n') == '30'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\nV1 V2 V1 V1 V2\") == \"5\"\nassert solution(\"2 1\\nR10 V1 V2 V1 E\") == \"30\"\nassert solution(\"1 0\\nR10 V1 V2 V1 E\") == \"1\"\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '5'\nassert solution('2 1') == '6'\nassert solution('1 2') == '5'\nprint('all tests passed')\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == \"5\"\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == \"30\"\nassert solution('''\n1 1\nR10 V1 V2 V1 E\n''') == \"4\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'impossible'"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 25') == '40', solution('10 25')\nassert solution('10 11') == 'impossible', solution('10 11')\nassert solution('9 216') == '546', solution('9 216')\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 24') == '38', solution('10 24')\nassert solution('10 11') == 'impossible', solution('10 11')\nassert solution('9 216') == '546', solution('9 216')\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n10 24\n\"\"\") == \"38\"\nassert solution(\"\"\"\n10 11\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n9 216\n\"\"\") == \"546\"\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 24''') == \"38\"\nassert solution('''10 11''') == \"impossible\"\nassert solution('''9 216''') == \"546\"\nprint(\"check complete\")\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 24\n''') == '38', 'TEST 1'\nassert solution('''\n10 11\n''') == 'impossible', 'TEST 2'\nassert solution('''\n9 216\n''') == '546', 'TEST 3'\n\n\"\"\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '10.00005'\nassert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('3 4 1 0') == '2.0'\nassert solution('0 10') == '10.00005'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 1 0\") == \"10.00005\"\nassert solution(\"5 20 2 1\") == \"466.662\"\nassert solution(\"3 4 2 1\") == \"10.00005\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2 1\") == \"10.00005\"\nassert solution(\"20 60 2 1\") == \"466.662\"\nassert solution(\"3 4 1 0\") == \"2.0\""
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10.00005\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(trivial) == \"1.00005\"\nassert solution(easy) == \"2.0005\"\nassert solution(challenge) == \"2.5014\"\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2.000000\"\n\n---Input---\n2\n20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n\n---Output---\n2.666667\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 5 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('0 10') == '10.00005'\nassert solution('3 4 1 0') == '2.0'\nassert solution('20 60 2 1') == '466.662'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\"\"\") == \"466.662\"\nassert solution(\"\"\"3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\"\"\") == \"10.00005\"\nassert solution(\"\"\"3 4 1 0\n0 2 0.25 8\n\"\"\") == \"2.0\"\nassert solution(\"\"\"1 3 0.25 8\n2 4 0.66667 15\n1 2\"\"\") == \"4.5\"\nassert solution(\"\"\"0 2 0.25 8\n\"\"\") == \"4.5\""
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\nassert solution('0 2 0.25 8') == '2.0'\nassert solution('1 3 0.25 8') == '10.0'\nassert solution('22 60 0.66666 70') == '9.883672'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 2 1') == '10.00005'\nassert solution('20 60 2 1') == '466.662'\nassert solution('3 4 2 1') == '10.00005'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nblue red 1.0\nred pink 1.5\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\n\nassert solution('''\n1\nblue red 1.0\n''') == '1.00000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''\nblue red 1.0\nred pink 1.5\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1.500000000000000'\nassert solution('2') == '0.000000000000000'\nassert solution('4') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1.500000000000000\"\nassert solution(\"2\") == \"0.000000000000000\"\nassert solution(\"4\") == \"10.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nblue red 1.0\nred pink 1.5\n''') == \"1.500000000000000\"\nassert solution('''\nblue red 1.0\nred pink 1.5\n''') == \"0.000000000000000\"\nassert solution('''\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == \"10.000000000000000\"\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"10.000000000000000\"\nassert solution(\"2\") == \"0.000000000000000\"\nassert solution(\"3\") == \"1.500000000000000\"\nassert solution(\"4\") == \"10.000000000000000\""
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nprint(solution('''\n2\nblue red 1.0\nred pink 1.5\n''')) == '0.000000000000000'\nprint(solution('''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''')) == '10.000000000000000'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0.000000000000000'\nassert solution('3') == '1.500000000000000'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180', \"Wrong result for sample case\"\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n''') == '22', \"Wrong result for sample case\"\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == 'too many', \"Wrong result for sample case\"\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == 'too many', \"Wrong result for sample case\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\nSample Output 2:\n0\n''') == '0'\nassert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == 'too many'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\ntoo many\n''') == 'too many'"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 1 1 1 0\") == \"180\"\nassert solution(\"3 2 2 1 1\") == \"22\"\nassert solution(\"3 1 2\") == \"0\"\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180', solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''')\n\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22', solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''')\n\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\nSample Output 2:\ntoo many\n''') == 'too many', solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\nSample Output 2:\ntoo many\n''')\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"180\"\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n''') == '0'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == 'too many'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\nSample Output 2:\n22\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\nSample Output 2:\n0\n''') == '0'"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 2\\n.#.\\n...\") == \"17 17\"\nassert solution(\"6 8 5\\n....\\n....\\n####\\n#...#\\n#.###\\n...#...\\n...##.\") == \"20 20\""
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 8 5\\n...#....\\n...#...#\\n.#####.#\\n......#.\\n#..#####\\n#.......') == '20 20'\nassert solution('6 8 5\\n.#.##...\\n####.##.\\n###.#..#\\n###.##.#\\n##.##.###\\n#...#.##\\n.##...#.\\n##...#..') == '17 17'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\") == \"17 17\"\nassert solution(\"6 8 5\") == \"20 20\"\nassert solution(\"6 8 5\") == \"17 17\"\n\"\"\"\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2') == '17 17'\nassert solution('6 8 5') == '20 20'\nassert solution('6 8 5') == '-1 -1'"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 5') == '20 20'\nassert solution('1 3 5') == '20 20'\nassert solution('1 3 2') == '17 17'\nassert solution('6 8 5') == '20 20'\nassert solution('6 8 5') == '17 17'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible', 'First sample'\n\nassert solution('''\n310\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300', 'Second sample'\n\nassert solution('''\n90\n2\n2 20 35\n2 88 200\n''') == '88', 'Third sample'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '100'\nassert solution('3') == '300'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n2 40 65\n2 100 150\n2 300 320''') == 'impossible'\nassert solution('''10\n3\n2 40 65\n2 100 150\n2 300 320''') == '320'\nassert solution('''100\n3\n2 40 65\n2 100 150\n2 300 320''') == '88'\nassert solution('''8\n3\n2 40 65\n2 100 150\n2 300 320''') == 'impossible'\nassert solution('''5\n3\n2 40 65\n2 100 150\n2 300 320''') == '88'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3\n2 40 65\n2 100 150\n2 300 320\n''') == \"impossible\"\nassert solution('''\n1\n1\n3\n2 40 65\n2 100 150\n2 300 320\n''') == \"310\""
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('371') == 'impossible'\nassert solution('310') == '300'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('371') == 'impossible'\nassert solution('310') == '300'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n371\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\n\nassert solution('''\n310\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\n\nassert solution('''\n90\n2\n2 20 35\n2 88 200\n''') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '310'\nassert solution('3') == '300'\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''371\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''90\n2\n2 20 35\n2 88 200\n''') == '88'"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 40 65\n2 100 150\n2 300 320\n''') == \"310\"\nassert solution('''\n10\n2\n3 3 3 3 4 4\n3 3 3 4 5 6\n''') == \"impossible\"\nassert solution('''\n5\n1\n2 3 5\n2 4 6\n''') == \"2\"\nassert solution('''\n10\n3\n1 2 3 4 5\n2 3 4 5 6 7\n''') == \"impossible\"\nassert solution('''\n10\n3\n2 2 5\n2 4 5 6\n''') == \"impossible\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('....#.#...#...#...#.....#.#..##.#....#..##.#.....#...#.#...#...#...#.....#.#..##.#.....#...#.#...#...#...#.....#...#.....#...#') == 'can fold'\nassert solution('#.##.##..#..#.....##.#######...#..#..#...#.######.##..#.##...#.######.###.#.#.##.#..######...#.#..#.#.######.##.##.#...#.##.#') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('..##..') == 'can fold'\nassert solution('...#..') == 'cannot fold'\nassert solution('......') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('......') == 'cannot fold'\nassert solution('......#') == 'cannot fold'\nassert solution('#...##') == 'cannot fold'\nassert solution('###...#') == 'cannot fold'\nassert solution('##...##') == 'can fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"......\") == \"cannot fold\"\nassert solution(\"#.....\") == \"cannot fold\"\nassert solution(\"#...#\") == \"cannot fold\"\nassert solution(\"..##.\") == \"can fold\"\nassert solution(\"#.#..\") == \"can fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n......\n......\n######\n......\n......\n......\n''') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('..#..\\n.##..\\n.#..#') == 'can fold'\nassert solution('.....\\n##...\\n##...\\n##...\\n##...\\n##...\\n##...') == 'cannot fold'\nassert solution('....\\n....\\n....\\n....\\n....\\n....\\n....') == 'can fold'\nassert solution('....\\n....\\n....\\n....\\n....\\n....\\n....') == 'cannot fold'"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('#..#..\\n...#..\\n...##.') == 'cannot fold'\nassert solution('##\\n##\\n##') == 'can fold'\nassert solution('###\\n#.\\n#..\\n##.\\n###') == 'can fold'\nassert solution('##\\n##\\n##\\n##\\n##\\n##') == 'cannot fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"......\\n......\\n######\\n......\\n......\\n......\\n\") == \"can fold\"\nassert solution(\"......\\n...##\\n...##\\n...##\\n...##\\n...##\\n\") == \"cannot fold\"\nassert solution(\"......\\n..##.\\n##.##\\n.##..\\n#####\\n#####\\n\") == \"cannot fold\"\nassert solution(\"......\\n...##\\n#...#\\n.##..\\n#####\\n#####\\n\") == \"cannot fold\"\nassert solution(\"......\\n...##\\n...##\\n...##\\n...##\\n....#\\n....#\\n....#\\n\") == \"cannot fold\"\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('..##..') == 'cannot fold'\nassert solution('...#..') == 'can fold'\nassert solution('##.##.') == 'can fold'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n.##..\n.....\n.....\n.....\n......\n.....\n\"\"\"\n) == \"can fold\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('abc') == ''\nassert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n\nprint(f'The answer is: {solution(stdin)}')\n'''"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n''') == ''\nassert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\nassert solution('abac') == 'abac'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abcefgabc\") == \"abc\"\nassert solution(\"abcbabcba\") == \"abcba\"\nassert solution(\"aaaa\") == \"aaa\"\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abcefgabc') == 'abc'\nassert solution('abcbabcba') == 'abcba'\nassert solution('aaaa') == 'aaa'"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4', solution"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '6'\nassert solution('1 4') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '4'\nassert solution('4') == '6'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 4\n2 5\n''') == '4'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('2') == '6'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n0 1\n4 5\n1 10\n0 15\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n1 1\n2 5\n0 15\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n2 2\n5 10\n1 15\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n3 4\n5 6\n''') == '4'\n\nassert solution('''\n2\n1 4\n2 5\n''') == '5'\n\nassert solution('''\n3\n1 4\n2 10\n0 15\n''') == '6'\n\nassert solution('''\n4\n1 4\n2 10005\n0 15\n0 16\n''') == '10'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1 4\n2 5\n0 15\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n1 4\n2 10005\n0 15\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n6\n0 2\n1 3\n0 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n1 2\n1 3\n1 5\n1 6\n1 8\n1 9\n2 5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n6\n0 0\n1 1\n1 5\n1 10\n1 25\n1 50\n1 100\n\"\"\") == \"4\""
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution('5 7 7') == '3'\nassert solution('2 3 4 4 8 12 24') == '2'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n7 4 8 12''') == '2'\nassert solution('''5\n7 7 7''') == '0'\nassert solution('''6\n1 2 3 4 5''') == '6'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n4 4 4\n2 3 3\n3 4 4''') == '3'\nassert solution('''3\n4 4 4\n2 3 3\n3 4 4''') == '2'\nassert solution('''5\n1 2 3 2 1\n2 3 4 4\n3 4 5 5\n4 6 7 7\n5 7 8 7''') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 3 2 1\n''') == '3'\nassert solution('''\n7\n2 3 4 4 8 12 24\n''') == '2'\nassert solution('''\n3\n7 7 7\n''') == '0'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n2 3 4\n''') == '0'\nassert solution('''4\n1 2 3\n''') == '0'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\nprint('All tests passed!')"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 2 1\") == \"3\""
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\n2 3 4 4 8 12 24\") == \"2\"\nassert solution(\"3\\n7 7 7\") == \"3\"\nassert solution(\"5\\n1 2 3 2 1\") == \"0\"\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '2'\nassert solution('3') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution('''1 2 1\nGS\n''') == '1'\nassert solution('''2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\\n\") == \"3\"\nassert solution(\"1 2 1\\nGS\\n\") == \"1\"\nassert solution(\"2 2 10\\nS#\\n#G\\n\") == \"-1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\nprint(\"You passed the test\")\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5 4\\nS#.F.\\n.MFMG\") == \"3\"\nassert solution(\"1 2 1\\nGS\") == \"1\"\nassert solution(\"2 2 10\\nS#\\n#G\") == \"1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 5 4\n.S.F.\n.MFMG\n''') == '3', \"2\"\nassert solution('''1 2 1\nGS\n''') == '1', \"1\"\nassert solution('''2 2 10\n.S.\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 2 10\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\nprint(\"YOUR CODE SUCCEEDED!\")\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5 4\") == \"3\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"2 2 10\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 5 4\nS#.F.\n.MFMG\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 2 10\nS#\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 4') == '3'\nassert solution('1 2 1') == '1'\nassert solution('1 2 2') == '-1'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_1) == '3'\nassert solution(input_2) == '1'\nassert solution(input_3) == '-1'"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\nS..\\n.#.\\n..G\") == \"1\"\nassert solution(\"3 7\\n.......\\n.G.#.S.\\n.......\\nLDLDLLDR\") == \"1\"\nassert solution(\"3 7\\n.#.....\\n.G.##S.\\n.......\\nLDLDLLDR\") == \"2\""
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\nS.G\\n') == \"1\"\nassert solution('3 5\\n#...\\n.S.G\\n') == \"2\"\nassert solution('3 7\\n.......\\n.S.G\\n') == \"1\"\nassert solution('3 7\\n.......\\n.G.#.S\\n') == \"2\"\nassert solution('3 7\\n.......\\n.G.###\\n') == \"1\"\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nS..\n.#.\n..G\nDRRDD\n''') == '1'\n\nassert solution('''\n3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n''') == '1'\n\nassert solution('''\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n''') == '2'"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\nS..\n.#.\n..G\n''') == '1'\nassert solution('''\n2 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n''') == '1'\nassert solution('''\n3 7\n.......\n.G.##S.\n.......\nLDLDLLDR\n''') == '2'\nassert solution('''\n3 5\n.....\nG.##.\n.#...\nS.G..\n''') == '0'\nassert solution('''\n3 4\n.S.S.\nS.#.#\nS.S.S\n''') == '1'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"S..\\n\"\n    \".#.\\n\"\n    \"..G\"\n) == \"1\"\nassert solution(\n    \"3 7\\n\"\n    \".S..\\n\"\n    \"...#\\n\"\n    \"LDLDLLDR\\n\"\n) == \"1\"\nassert solution(\n    \"3 7\\n\"\n    \".#.....\\n\"\n    \".G.##S.\\n\"\n    \".......\\n\"\n    \"LDLDLLDR\\n\"\n) == \"2\"\nassert solution(\n    \"3 7\\n\"\n    \"........\\n\"\n    \".G.###S.\\n\"\n    \"........\\n\"\n    \"LDLDLLDR\\n\"\n) == \"0\""
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\nS..\n.#.\n..G\nDRRDD\n''') == '1'\nassert solution('''3 7\n.......\n.G.##S.\n.......\nLDLDLLDR\n''') == '1'\nassert solution('''3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n''') == '2'\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\nS..\\n.#.\\n..G') == '1'\nassert solution('3 7\\n.......\\n.G.#.S.\\n.......') == '1'\nassert solution('3 7\\n.#.....\\n.G.##S.\\n.......') == '2'"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\nS..\n.#.\n..G\nDRRDD\n''') == '1'\nassert solution('''\n3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n''') == '1'\nassert solution('''\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n''') == '2'\nassert solution('''\n10 7\n.........\n.S..G..S.\n.........\n.###G#.S.\n.........\n.#####.S.\n.........\n..###G..S.\n.........\n......G#.\n.........\n''') == '0'\nassert solution('''\n10 7\n.S...#.\n.##G#.#\n.#...#.#\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Sample Input 1\") == \"1\"\nassert solution(\"Sample Input 2\") == \"1\"\nassert solution(\"Sample Input 3\") == \"2\""
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n\"\"\") == \"1000200 799\"\nassert solution(\"\"\"\n2\n100 0 100\n0 200 199\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'uncertain'\nassert solution('1') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n999999 0 1000\\n999900 950 451\\n987654 123 13222') == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n\n2\n100 0 101\n0 200 199\n\n2\n1 2 1\n1 3 5\n'''\n) == '1000200 799'\nprint(solution(\n    '''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n\n2\n100 0 101\n0 200 199\n\n2\n1 2 1\n1 3 5\n\n1 3 2\n1 4 5\n\n1 4 5\n1 5 3\n\n2 2\n1 2 1\n1 3 5\n\n'''\n)) == 'impossible'\nprint(solution(\n    '''\n4\n999999 0 1000\n999900 950 451\n987654 123 13222\n\n1 2 1\n1 3 5\n\n3 5 1\n3 4 5\n\n4 3 2\n4 1 4\n\n4 1 3\n4 5 4\n\n2 1\n2 2 1\n\n'''\n)) == '1000200 799'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'uncertain'\nassert solution('1') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\n\nassert solution('''\n2\n100 0 101\n0 200 199\n''') == 'uncertain'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'uncertain'\nassert solution('1') == 'impossible'"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3\n    999999 0 1000\n    999900 950 451\n    987654 123 13222\n    \"\"\"\n) == \"1000200 799\"\n\nassert solution(\n    \"\"\"\n    2\n    100 0 101\n    0 200 199\n    \"\"\"\n) == \"impossible\"\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n999999 0 1000\n999900 950 451\n987654 123 13222\n''') == '1000200 799'\nassert solution('''\n2\n100 0 101\n0 200 199\n''') == 'uncertain'\nassert solution('''\n2\n100 0 100\n0 200 199\n''') == 'impossible'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'uncertain'\nassert solution('1') == 'impossible'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('2') =='syntax error'\nassert solution('2') =='syntax error'\nassert solution('2') =='syntax error'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n4 7\n9 8\n14 17\n19 18\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') == '2\\n1\\n'\nassert solution('2\\n4 7\\n14 17\\n9 8\\n19 18\\n') == '1\\n2\\n'\nassert solution('2\\n4 7\\n9 8\\n14 17\\n19 18\\n') =='syntax error\\n'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('4 7') == '1'\nassert solution('4 7') == '2'\nassert solution('4 7') == '3'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '1'\nassert solution('4 7') == '1'\nassert solution('4 7 9') == '1'\nassert solution('4 7 9 8') == '2'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2 1 2 1'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '1 2 1 1'\nassert solution('''\n2\n3 7\n9 8\n14 17\n19 18\n''') =='syntax error'"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('2') =='syntax error'\n\n'''"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2\n4 7\n9 8\n14 17\n19 18\"\"\") == \"2\"\nassert solution(\"\"\"2\n4 7\n9 8\n19 18\"\"\") == \"1\"\nassert solution(\"\"\"3\n5 8\n1 2\n3 4\"\"\") == \"syntax error\"\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2 1'\nassert solution('4 7') == '2 1 3 4'\nassert solution('4 7') == '1 2 3 4'"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"syntax error\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n\") == \"1\"\nassert solution(\"85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ _ _ _\\n\") == \"8640\"\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"_ 90 22 _ 6 _ _ _ 81\") == \"1\"\nassert solution(\"_ 40 _ _ _ 12 60 _ 90 _\") == \"1\"\nassert solution(\"160 _ _ 136 _ _ _ _ 170\") == \"8640\"\nprint('All test cases passed')"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == \"1\"\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == \"1\"\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ _ _\\n') == \"8640\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81') == '1'\nassert solution('_ 40 _ _ _ 12 60 _ 90 _') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ 170') == '8640'\nassert solution('160 _ _ 136 _ _ _ _ _ 170') == '8640'"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ 120 _ _ 144 _ _\\n') == '8640'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\nSample Output 1:\n1\n\nSample Input 2:\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\nSample Output 2:\n1\n\nSample Input 3:\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\nSample Output 3:\n8640''') == '1'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''_ 90 22 _ 6 _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''_ 90 22 _ 6 _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n_ 100 _ _ _ _ _ _ _ _ _\n_ 80 _ _ _ _ _ _ _ _ _\n_ 120 _ _ _ _ _ _ _ _ _\n_ 80 _ _ _ _ _ _ _ _ _\n_ 60 _ _ _ _ _ _ _ _ _\n_ 40 _ _ _ _ _ _ _ _ _\n_ 120 _ _ _ _ _ _ _ _ _\n_ _ _ _ _ 120 _ _ _ _ _\n_ _ _ _ _ 80 _ _ _ _ _\n_ _ _ _ _ 60 _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _ _\n_ _ _ _ _ _ _ _ _ _"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1\\n'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '8640\\n'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81') == \"1\"\nassert solution('_ 40 _ _ _ 12 60 _ 90 _') == \"1\"\nassert solution('160 _ _ 136 _ _ _ _ 170') == \"8640\"\nassert solution('_ _ _ _ _ _ _ 85 63 153') == \"1\""
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n_ 90 22 _ 6 _ _ _ _ 81\n_ 40 _ _ _ 12 60 _ 90 _\n''') == '1'\nassert solution('''\n85 55 _ 99 51 _ _ _ _ _\n_ _ _ _ _ _ _ 85 63 153\n''') == '1'\nassert solution('''\n160 _ _ 136 _ _ _ _ _ 170\n_ _ _ _ 120 _ _ 144 _ _\n''') == '8640'"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"8\"\nassert solution(\"10\") == \"24\""
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '8'\nassert solution('10') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\nassert solution(input_string=\"5\\n2 1\\n1 5\\n3 1\\n4 3\\nSample Output 3:\") == '8'"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '8'\nassert solution('10') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2\n1 3\n''') == '2'\n\nassert solution('''5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\n\nassert solution('''10\n1 2\n2 3\n2 4\n1 5\n3 6\n2 7\n7 8\n5 9\n5 10\n''') == '24'"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '8'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2 1\n1 5\n3 1\n4 3\n''') == '8'\n\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '24'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\n\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '8'\nassert solution('10') == '24'\n\nassert solution('30') == '27'"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '8'\nassert solution('10') == '24'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('oranges') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"boot\") == \"3\"\nassert solution(\"treetreetreetree\") == \"0\""
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"secretmessage\") == \"essa\"\nassert solution(\"boot\") == \"3\"\nassert solution(\"treetreetreetree\") == \"0\"\nassert solution(\"oranges\") == \"0\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    peter\n    day\n    ''') == 'peter day'"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"hello\\nworld\") == \"world\"\nassert solution(\"top secret message\\nbottom secret message\") == \"bottom secret message\"\nassert solution(\"favp fjxv\\nfav jxvf\") == \"fav jxvf\"\nassert solution(\"szakkzs\\nfav jxvf\") == \"0\"\nassert solution(\"koi hhj\\nfav jxvf\") == \"fav jxvf\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == '3'\nassert solution('treetreetreetree') == '0'\nassert solution('oranges') == '0'\nassert solution('apples') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == '3'\nassert solution('treetreetreetree') == '3'\nassert solution('apples') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('boot') == 'essa'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"treetreetreetree\") == \"3\"\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == '3'\nassert solution('treetreetreetree') == '3'\nassert solution('oranges') == '0'"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"<<<\") == \"1\"\nassert solution(\"<>^<^\") == \"2\"\nassert solution(\"^>^<\") == \"2\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n<\\n<\\n>\\n>\\n') == '2'\nassert solution('6\\n^v<^v<^v\\n.^.^.^.\\n#R#.R#.R#\\n#R#.R#.R#\\n#R#.R#.R#\\n.^.^.^.\\n#R#.R#.R#\\n#R#.R#.R#\\n#R#.R#.R#') == '4'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"1\", \"Your solution needs to work for sample case 1\"\nassert solution(\"4\") == \"4\", \"Your solution needs to work for sample case 2\"\nassert solution(\"<<<<\") == \"1\", \"Your solution needs to work for sample case 3\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '4'\n\nassert solution('5') == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n>^<^\\n######\\n#.#..#\\n#....#\\n#..R.#\\n#....#\\n######\\n') == '2'\nassert solution('4\\nv<^>\\n####\\n#.R#\\n#..#\\n####\\n') == '4'\nassert solution('4\\n<<<\\n####\\n#.R#\\n#..#\\n####\\n') == '1'\nprint(solution(input()))"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '1'\nassert solution('4') == '4'\nassert solution('5') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n^><\") == \"2\"\nassert solution(\"4\\nv<>\") == \"4\"\nassert solution(\"4\\n^<>\") == \"1\"\nassert solution(\"4\\n<>R\") == \"1\"\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''>^<^\n######\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution('''\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n2 3 0 2 9 2 3 0\n1 6 1 4 6 3 -1 -2\n''') == '3'\nassert solution('''\n3\n4 0 0 10 10 1 15 0\n3 5 50 55 8 1 -16 2\n3 10 7 10 4 1 8 -1\n''') == '6'\nassert solution('''\n2\n7 0 0 20 10 3 0 10\n10 1 0 2 5 2 2 7\n''') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\nprint(solution(input()))\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"11\""
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('2') == '4'\nassert solution('1') == '3'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"6\"\nassert solution(\"\") == \"\"\nassert solution(\"3\\n10\\n1\\n6\\n3\\n0\\n10\\n5\\n8\\n1\\n-16\\n2\\n2\\n7\\n10\\n4\\n1\\n8\\n2\\n2\\n7\") == \"11\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n2 3 0 2 9 2 3 0') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0') == '6'\nassert solution('3\\n4 5 50 55 8 1 -16 2') == '11'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3 0 0 2 9 2 3 0') == '3'\nassert solution('3\\n4 0 0 10 10 1 15 0') == '6'\nassert solution('3\\n5 50 55 8 1 -16 2') == '6'\nprint(solution('''\n3\n4 0 0 10 10 1 15 0\n3 10 7 10 4 1 8 -1\n3 10 7 10 4 1 8 -1\n'''))"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '163.5274740179'\nassert solution('60.0 0.0 50.0 170.0') == '166.2105074177'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"60.0 0.0 50.0 170.0\") == \"168.7916512460\"\nassert solution(\"60.0 0.0 50.0 170.0\") == \"163.5274740179\"\nassert solution(\"0.0 1.0 4.0 1.0\") == \"3.7320508076\""
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"1.28357005083\"\nprint(solution(input_))\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\nassert solution('0.0 1.0 4.0 1.0\\n1\\n0.0 0.0 4.0 0.0') == '3.7320508076'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 80.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0\\n3\\n40.0 0.0 0.0 0.0\\n5.0 20.0 5.0 170.0\\n95.0 0.0 95.0 100.0') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == '168.7916512460'\nassert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''') == '163.5274740179'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('40.0 0.0 0.0 0.0') == '163.5274740179'\nassert solution('0.0 1.0 4.0 1.0') == '3.7320508076'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 80.0''') == \"168.7916512460\", solution('''60.0 0.0 50.0 170.0\n3\n40.0 0.0 0.0 0.0\n5.0 20.0 5.0 170.0\n95.0 0.0 95.0 100.0''')\nassert solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076\n''') == \"3.7320508076\", solution('''0.0 1.0 4.0 1.0\n1\n0.0 0.0 4.0 0.0\nSample Output 3:\n3.7320508076''')"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 5 3\nrarity\n\n''') == 'rarity'\n\nassert solution('''9 8 1\ncanterlot\n''') == 'canterlot'\n\nassert solution('''5 3 5\nmadam\n''') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 5 3\nrarity\n''') == 'rarity'\nassert solution('''9 8 1\ncanterlot\n''') == 'canterlot'\nassert solution('''5 3 5\nmadam\n''') =='madam'\nassert solution('''3 7 1\ncarol\n''') == 'carol'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 5') =='madam'\nassert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\n\n'''\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([6, 5, 3]) == 'rarity'\nassert solution([9, 8, 1]) == 'canterlot'\nassert solution([5, 3, 5]) =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5 3\") == \"rarity\"\nassert solution(\"9 8 1\") == \"canterlot\"\nassert solution(\"5 3 5\") == \"madam\"\nassert solution(\"1 1 1\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 5 3\n''') == 'rarity'\nassert solution('''\n9 8 1\n''') == 'canterlot'\n'''\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n'''"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 5''') =='madam'\n\nassert solution('''6 5 3''') == 'rarity'\n\nassert solution('''9 8 1''') == 'canterlot'\n\n\"\"\""
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Blue Ridge mountain road.') == 'Blue Ridge mountain road.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!.') == 'International contest- motivation high Programmers have fun!'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"\n) == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\n    \"Who would know if we had too few syllables?\"\n) == \"Who would know if we had too few syllables?\"\nassert solution(\n    \"International contest- motivation high Programmers have fun!. \"\n) == \"International contest-\\nmotivation high Programmers have fun!\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('blue') == 'Blue'\nassert solution('leaves') == 'Leaves'\nassert solution('glowing in autumn sun') == 'Glowing in autumn Sun'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!') == 'International contest - motivation high Programmers have fun!'"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nprint(solution(\"\"\"\nBlue Ridge\nmountain road.\nleaves,\nglowing in autumn sun,\nfall in Virginia.\n\"\"\"))\nassert solution(\"\"\"\n    You're talking about a song and a dance.\n    You don't really know how to dance.\n    The song doesn't even have to be that great.\n\"\"\") == \"\"\"\n    You're talking about a song and a dance.\n    You don't really know how to dance.\n    The song doesn't even have to be that great.\n\"\"\"\nprint(solution(\"\"\"\n    The more I hear, the less I hear.\n    The more I understand, the less I understand.\n\"\"\"\"))\nassert solution(\"\"\"\n    The more I hear, the less I hear.\n    The more I understand, the less I understand.\n\"\"\") == \"\"\"\n    The more I hear, the less I hear.\n    The more I understand, the less I understand.\n\"\"\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('We do not perform well at this stage. We try to optimize the deadline for our activities.') == 'We do not perform well at this stage.\\nWe try to optimize the deadline for our activities.'\nassert solution('We do not perform well at this stage. We try to optimize the deadline for our activities.') == 'We do not perform well at this stage.\\nWe try to optimize the deadline for our activities.'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Hello world!\") == \"Hello world!\"\nassert solution(\"I love you!\") == \"I love you!\"\nassert solution(\"Is it possible?\") == \"Is it possible?\"\nassert solution(\"It's getting colder and colder!\") == \"It's getting colder and colder!\"\nassert solution(\"Loves the night sky!\") == \"Loves the night sky!\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.') == 'Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.'\nassert solution('Who would know if we had too few syllables?') == 'Who would know if we had too few syllables?'\nassert solution('International contest- motivation high Programmers have fun!.') == 'International\\ncouncil contest- motivation high\\nProgrammers have fun!'"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \\nA haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.\" ) == \"International contest- motivation high Programmers have fun!.\\nA haiku is a three-line poem in which the first and third lines contain $5$ syllables each, and the second line contains $7$ syllables.\"\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nprint(solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\"))\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nThoreTiemann') == 'ThoreH'\nassert solution('1\\nThoreHusfeldt') == 'ThoreHusfeldt'\nassert solution('2\\nThoreHusfeldt\\nJohanSannemo') == 'ThoreHusfeldt'"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'ThoreH'\nassert solution('2') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nThoreTiemann\\n\") == \"Thore\"\nassert solution(\"1\\nThoreHusfeldt\\n\") == \"Thore\"\nassert solution(\"2\\nThoreHusfeldt\\n\") == \"Thore is awesome\"\nassert solution(\"2\\nThoreHusfeldter\\n\") == \"Thore sucks\""
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\nThoreTiemann\nThoreHusfeldt\nThoreHusfeldter''') == 'ThoreH'\n\nassert solution('''2\nThoreHusfeldter\nThoreHusfeldt''') == 'ThoreHusfeldt'\n\nassert solution('''3\nThoreHusfeldter\nThoreHusfeldt''') == 'Thore sucks'"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'Thore is awesome'\nassert solution('1') == 'Thore sucks'\nassert solution('2') == 'Thore sucks'\nassert solution('1') == 'Thore sucks'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreHusfeldt'\nassert solution('''\n2\nThoreHusfeldt\nJohanSannemo\n''') == 'ThoreHusfeldt'\nassert solution('''\n2\nThoreHusfeldt\nJohanSannemo\n''') == 'ThoreHusfeldter'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nThoreTiemann\\nThoreHusfeldt\\n') == 'ThoreHusfeldt'\nassert solution('1\\nThoreHusfeldt\\nThoreTiemann\\n') == 'ThoreHusfeldt'\nassert solution('1\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'ThoreHusfeldter'\nassert solution('1\\nThoreHusfeldter\\nThoreHusfeldt\\n') == 'ThoreHusfeldter'\nassert solution('1\\nThoreHusfeldt\\nThoreHusfeldter\\n') == 'ThoreHusfeldt'\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nThoreTiemann\\nThoreHusfeldt\\n\") == \"ThoreH\""
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\nThoreTiemann\nThoreHusfeldt\nThoreHusfeldter\n''') == 'Thore sucks'\nassert solution('''2\nThoreHusfeldter\nThoreHusfeldt\n''') == 'ThoreHusfeldt'\nassert solution('''2\nThoreHusfeldter\nThoreHusfeldt\n''') == 'ThoreHusfeldt'"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"Thore is awesome\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"LR\") == \"5\"\nassert solution(\"L*R\") == \"5\"\nassert solution(\"LR*R\") == \"5\"\nassert solution(\"P*P\") == \"6\"\nassert solution(\"P*P*P\") == \"12\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == '6'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''L*R\n    *R\n    *R\n    L*R\n    P*P\n    P*P\n    P*P''') == '33'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    P*P\n''') == '6'\nassert solution('''\n    L*R\n''') == '25'\nassert solution('''\n    **\n''') == '33'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'\n\n\"\"\"\nfrom collections import defaultdict\nfrom collections import deque"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'\n\n\"\"\""
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"L*R\") == \"25\"\nassert solution(\"L*R*\") == \"33\"\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == \"\"\nassert solution(\"\") == \"\"\nassert solution(\"L*R\") == \"25\"\nassert solution(\"P*P\") == \"6\"\nassert solution(\"L*R*L*R*L*R*L*R\") == \"33\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\nwolf is wolf\nwolf is wolf\n''') == 'yes'\nassert solution('''\n3\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\n''') == 'yes'\nassert solution('''\n6\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is wolf\nwolf is"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == \"yes\", \"Sample Test 1 Failed\"\nassert solution(sample_input_2) == \"wait what?\", \"Sample Test 2 Failed\"\nassert solution(sample_input_3) == \"yes\", \"Sample Test 3 Failed\""
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'yes'"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"wait what?\"\nassert solution(\"1\\n1\\n\") == \"yes\"\nassert solution(\"1\\n2\\n\") == \"wait what?\"\nassert solution(\"1\\n3\\n\") == \"wait what?\"\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'yes'\n\nassert solution('''\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'wait what?'\n\nassert solution('''\nherp is derp\nherp is herp\nderp is derp\nherp is herp\n''') == 'yes'\n\nassert solution('''\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''derp is derp''') == 'yes'\nassert solution('''herp is derp''') == 'yes'\nassert solution('''herp is herp''') == 'wait what?'\nassert solution('''herp is herp''') == 'wait what?'\nassert solution('''derp is derp''') == 'wait what?'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes', 'fail'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?', 'fail'"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nherp is derp\\nderp is herp\\nherp is herp') == 'yes'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart') == 'wait what?'\nassert solution('5\\nherp not is\\ntop is herp\\nherp is herp\\ntop is herp\\nherp is herp') == 'yes'\nassert solution('4\\noskar not is\\ntop is herp\\ntop is herp\\ntop is herp\\nherp is herp') == 'wait what?'\n\n'''\n\nimport os\nimport sys\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nherp is derp\\nderp is herp\\nherp is herp\\nderp is derp\\n') == 'yes'\nassert solution('3\\noskar not lukas\\noskar is poptart\\nlukas is smart\\n') == 'wait what?'\n\nprint(solution(input()))"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"wait what?\""
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 4'\nassert solution('5') == '1 4'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == 'impossible'\n\n\"\"\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\nAACCMMAA\nACA\nMM\nACMAA\nAA\nA\nSample Input 4:\n8\nAAAC\nACAA\nAAAC\nACAA\nA\nAM\nAM\nSample Output 4:\n1 5\nAM\nA\nAAAC\nACAA\nAAAC\nACAA\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n3\nACMA\nACM\nACA\nSample Input 5:\n2\nAAAC\nACAA\nSample Output 5:\n1 3\nAC\nAAAC\nACAA\n\"\"\") == \"impossible\""
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1 4\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nAM\\nMA') == 'impossible'\nassert solution('2\\nAC\\nMA') == 'impossible'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1 4\"\nassert solution(\"2\") == \"2 4\"\nassert solution(\"3\") == \"impossible\"\nassert solution(\"4\") == \"4 4\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1 4\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\nAA\") == \"impossible\"\nassert solution(\"2\\nAA\") == \"impossible\"\nassert solution(\"2\\nAA\") == \"impossible\"\nassert solution(\"3\\nAA\") == \"impossible\"\nassert solution(\"4\\nAA\") == \"impossible\"\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 2'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() in (\n    \"impossible\",\n    \"1 4\"\n)\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nACA\\nACM\\nACA\\n') == 'impossible'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\nassert solution('10 20 3') == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"100 111 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n\") == \"124\"\nassert solution(\"2 4 1\\n1 0.5 5\\n\") == \"3\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 1\\n1 0.5 5\\n10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3') == '3'\nassert solution('20 10 2\\n6 0.5 1\\n12 0.5 2\\n5 0.5 2\\n10 0.5 2\\n8 0.5 2\\n7 0.5 2\\n6 0.5 2\\n10 0.5 2\\n6 0.5 2\\n5 0.5 2\\n4 0.5 2\\n8 0.5 2\\n5 0.5 2\\n7 0.5 2\\n5 0.5 2\\n5 0.5 2\\n10 0.5 2\\n6 0.5 2\\n7 0.5 2\\n5 0.5 2\\n4 0.5 2\\n4 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n3 0.5 2\\n3 0.5 2\\n8 0.5 2\\n8 0.5 2\\n4 0.5 2\\n2 0.5 2\\n4 0.5 2\\n2 0.5 2\\n2 0.5 2\\n5 0.5 2\\n5 0.5 2\\n3 0.5 2\\n7 0.5 2\\n4 0.5 2\\n2 0.5 2\\n8 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n7 0.5 2\\n5 0.5 2\\n3 0.5 2\\n3 0.5 2\\n5 0.5 2\\n5 0.5 2\\n10 0.5 2\\n10 0.5 2\\n7 0.5 2\\n5 0.5 2\\n4 0.5 2\\n8 0.5 2\\n10 0.5 2\\n6 0.5 2\\n6 0.5 2\\n8 0.5 2\\n6 0.5 2\\n8 0.5 2\\n8 0.5 2\\n10 0.5 2\\n5 0.5 2\\n10 0.5 2\\n5 0.5 2\\n2 0.5 2\\n5 0.5 2\\n4 0.5 2\\n5 0.5 2\\n4 0.5 2\\n4 0.5 2\\n5 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n3 0.5 2\\n8 0.5 2\\n4 0.5 2\\n2 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n3 0.5 2\\n4 0.5 2\\n5 0.5 2\\n5 0.5 2\\n4 0.5 2\\n4 0.5 2\\n5 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n2 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n5 0.5 2\\n5 0.5 2\\n4 0.5 2\\n4 0.5 2\\n5 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n5 0.5 2\\n5 0.5 2\\n5 0.5 2\\n4 0.5 2\\n4 0.5 2\\n5 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n5 0.5 2\\n5 0.5 2\\n4 0.5 2\\n4 0.5 2\\n5 0.5 2\\n4 0.5 2\\n3 0.5 2\\n10 0.5 2\\n4 0.5 2\\n3"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n\"\"\") == \"124\"\nassert solution(\"\"\"\n2 4 1\n1 0.5 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n\"\"\") == \"18.9029850746\"\nassert solution(\"\"\"\n1 2 1\n1 1 2\n\"\"\") == \"1.000000000\"\nassert solution(\"\"\"\n1 1 1\n2 2 1\n3 3 1\n\"\"\") == \"1.000000000\"\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2 4 1\\n1 0.5 5\\n20 0.5 10\\n80 0.5 2\\n85 0.5 2\\n90 0.5 2\\n95 0.5 2\\n'\n    ) == '124'\nassert solution(\n    '10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n'\n    ) == '18.9029850746'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2 4 1\\n1 0.5 5\\n10 20 3\\n5 0.3 8\\n6 0.8 3\\n8 0.9 3\\n') == '18.904'\nassert solution(\n    '10 3 1\\n1 0.5 5\\n2 0.8 3\\n3 0.9 3\\n4 1\\n5 0.3 8\\n6 0.8 3\\n7 0.9 3\\n8 0.9 3\\n') == '20.3'\nassert solution(\n    '10 20 3\\n5 0.3 8\\n6 0.8 3\\n7 0.9 3\\n8 0.9 3\\n') == '20.3'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 1') == '3'\nassert solution('10 20 3') == '18.9029850746'\nassert solution('100 111 5') == '124'\nassert solution('2 4 1') == '3'\nassert solution('1 0.5 5') == '2'"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 1') == '3'\nassert solution('2 4 1') == '3'"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\nassert solution('''\n2 4 1\n1 0.5 5\n''') == '3'\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2 1 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nassert solution(example_input_3) == example_output_3\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n4 1 2''') == '2 1 2'\nassert solution('''4 1\n5 4 4 3''') == '4 3 4 2'\n\nassert solution('''5 5\n10 1 5 2''') == '5 2 5 1'\nassert solution('''100 100''') == '100 100'\nassert solution('''50 100\n50 1''') == '50 1'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('5 22') == '4 3 4 2'\nprint(solution(input()))\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2 1 2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"5 22\") == \"4 3 4 2\"\nprint(\"SUCCESS\")\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2 2\n1 3 3\n1 4 4''') == '2 1 2'\nassert solution('''2 1\n1 3 3\n1 4 4''') == '1'\nassert solution('''5 22\n4 3 4 2\n3 4 5 2\n3 5 3 2\n3 6 3 2\n1 2 3\n3 4 4 4\n1 2 4 2\n3 5 4 3\n1 2 5 3\n1 3 5 4\n1 4 5 2\n1 5 3 4\n1 6 4 2\n1 5 6 4\n1 7 5 4\n3 5 4 3\n1 2 5 3\n1 3 5 4\n1 4 5 2\n3 6 5 2\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 5 6 3\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 5 6 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 5 6 3\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 5 6 2\n1 2 5 4\n1 3 5 4\n1 4 5 2\n1 5 3 4\n1 6 4 2\n1 5 6 4\n1 7 5 4\n3 5 6 3\n1 2 5 3\n1 3 5 4\n1 4 5 2\n3 5 6 2\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 5 6 3\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 5 4\n1 4 5 2\n3 6 5 2\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 5 4\n1 4 5 2\n3 6 5 3\n1 2 5 3\n1 3 5 4\n1 4 5 2\n3 5 6 3\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 5 6 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 5 4\n1 4 5 2\n3 6 5 2\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 5 6 3\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 5 4\n1 4 5 2\n3 5 6 2\n1 2 5 4\n1 3 6 5\n1 4 5 2\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 5 6 3\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 5 4\n1 4 5 2\n3 6 5 2\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 5 4\n1 4 5 2\n3 6 5 2\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 5 6 3\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 5 4\n1 4 5 2\n3 6 5 2\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 5 4\n1 4 5 2\n3 6 5 2\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 5 4\n1 3 6 5\n1 4 6 5\n3 6 5 4\n1 2 6 5\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\") == '2'\nassert solution(\"7 6\") == '2'\nassert solution(\"10 10\") == '1'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n1 2\n2 3\n3 4\n4 5\n''') == \"2\"\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\nSample Output 4:\n2\n''') == \"0\"\nassert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\nSample Output 5:\n1\n''') == \"1\"\nassert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\nSample Output 6:\n0\n''') == \"0\""
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1 2\") == '2'\nassert solution(\"1 2 3 4\") == '3'\nassert solution(\"1 2 3 4 5\") == '2'\nassert solution(\"4 5 6 7 8 9\") == '1'"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"0\""
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '0'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution(\"4 4\\n1 2\\n1 3\\n3 4\\n2 4\\n\") == \"2\"\nassert solution(\"7 6\\n1 2\\n2 3\\n2 5\\n6 3\\n7 2\\n3 4\\n\") == \"2\"\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\nSample Output 2:\n0\n''') == '2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\n\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\n\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 0\") == \"20.00000000\"\nassert solution(\"-10 10\") == \"3.14159265\"\nprint(\"You're a codebreaker! Here's your puzzle input:\")\nprint(solution(input()))\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('1.00 0.10') == '28.26445910'\nassert solution('-10 10') == '3.14159265'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 0\n1.00 0.10''') == '20.00000000', \"First\"\nassert solution('''-10 10\n10.00 1.00''') == '3.14159265', \"Second\"\nprint('Congratulations, have you implemented the solution!')\n\n\"\"\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"28.26445910\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 0\") == \"20.00000000\"\nassert solution(\"1.00 0.10\") == \"3.14159265\"\nprint(solution(input))\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 0\") == \"20.00000000\"\nassert solution(\"10 10\") == \"3.14159265\"\nassert solution(\"0 0\") == \"28.26445910\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '20 0\\n1.00 0.10\\n'\n) == '20.00000000'\nassert solution(\n    '-10 10\\n10.00 1.00\\n'\n) == '3.14159265'"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 0\\n1.00 0.10\") == \"28.26404958\"\nassert solution(\"-10 10\\n10.00 1.00\") == \"3.14159265\"\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 0') == '10'\nassert solution('20 0') == '20'\nassert solution('0 20') == '28.26437091'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('-10 10') == '3.14159265'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\n\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 100\\n1 100\\n4 70') == '170'\nassert solution('3\\n2 120\\n3 50\\n2 80') == '150'"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 100\\n1 100\\n4 70') == '170'\nassert solution('5\\n2 120\\n3 50\\n2 80') == '150'"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n2 100\n1 100\n4 70\n3 70\n''') == '170'\n\nassert solution('''3\n2 120\n3 50\n2 80\n''') == '150'\nprint('All Tests Passed!')\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''3\n2 120\n3 50\n2 80\n''') == '150'\nassert solution('''3\n2 120\n3 50\n2 80\n''') == '180'\nassert solution('''3\n2 120\n3 50\n2 80\n''') == '130'\nassert solution('''3\n2 120\n3 50\n2 80\n''') == '120'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"170\"\nassert solution(\"4\") == \"170\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n2 100\n1 100\n4 70\n3 70\n\"\"\") == \"170\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == '150'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n2 100\n1 100\n4 70\n3 70\n2 120\n\"\"\") == \"170\"\nassert solution(\"\"\"\n3\n2 100\n3 50\n2 80\n\"\"\") == \"150\"\nassert solution(\"\"\"\n1\n0\n0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n2 100\n1 100\n4 70\n3 70\n\"\"\") == \"170\"\nassert solution(\"\"\"\n4\n2 100\n1 100\n4 70\n3 70\n\"\"\") == \"150\"\nassert solution(\"\"\"\n3\n2 120\n3 50\n2 80\n\"\"\") == \"160\""
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 6') == '5'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2\\n1 3\\n2 4\\n\") == \"2\"\nassert solution(\"6 6\\n1 2\\n1 3\\n2 4\\n3 4\\n3 5\\n5 6\\n\") == \"5\"\nassert solution(\"10 10\\n1 2\\n2 5\\n2 3\\n4 3\\n4 5\\n4 6\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"12\"\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'\nprint(solution(input()))\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '5'\n\nassert solution('''4 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '6'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'\nassert solution('3 4') == '3'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 3\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '4', 'TEST ERROR'\nassert solution('''5 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '6', 'TEST ERROR'\n\nassert solution('''10 9\n1 2\n1 3\n2 4\n3 4\n3 5\n4 5\n4 6\n5 7\n6 8\n6 9\n7 10\n8 9\n8 10\n9 10''') == '11', 'TEST ERROR'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '5'\nassert solution('''6 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '5'\nassert solution('''5 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '6'\nassert solution('''5 6\n1 2\n1 3\n2 4\n3 4\n3 5\n5 6''') == '6'\nassert solution('''10 2\n10 20\n10 10\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1\n0 0''') == '7'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0.5\"\nassert solution(\"3\") == \"0.5\"\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.5'\nassert solution('3') == '0.5'\nassert solution('8') == '0.0446429'"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0.5'\nassert solution('8') == '0.0446429'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n\"\"\") == \"0.5\"\nassert solution(\"\"\"\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.5'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\nassert solution('''3\n3\n1 0 2\n1 0\n1 0\n''') == '0.25'\nassert solution('''8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == '0.08295714285714285714285714285714285714285714285714285714285714'\nassert solution('''3\n3\n1 0 2\n1 0\n1 0\n
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n5\n3 1 2 3 1\n3 1 2 3 1\n1 0\n4 1 2 3\n4 1 2 3\n''') == '0.0446429'\n\nassert solution('''\n10\n2\n1 4 1 4 4 5 1 4 3 3 3 3 2 2\n1 4 1 4 4 5 1 4 3 3 3 3 2 2\n4 1 4 4 4 5 5 1 4 3 3 3 2 2\n1 4 4 4 4 5 5 1 4 3 3 3 3 2 2\n4 4 4 4 4 5 5 1 4 3 3 3 3 2 2\n4 4 4 4 4 5 5 1 4 3 3 3 3 2 2\n2 1 4 1 4 4 5 1 4 3 3 3 3 3 2 2\n4 1 4 4 4 4 5 5 1 4 3 3 3 3 3 2 2\n4 1 4 4 4 4 5 5 1 4 3 3 3 3 3 2 2\n4 1 4 4 4 4 5 5 1 4 3 3 3 3 3 2 2\n4 1 4 4 4 4 5 5 1 4 3 3 3 3 3 2 2\n4 1 4 4 4 4 5 5 1 4 3 3 3 3 3 2 2\n2 2 2 2 1 2 1 2 2 1 2 1 2 1 2 1 2 2\n''') == '0.6387956'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.5'\nassert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == '0.5'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n1"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 2 1\n''') == '3'\n\nassert solution('''\n4\n1 2 1 2\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1 2 3 3 2 1\n''') == '3'\nassert solution('''\n4\n1 2 1 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n1\n1 2\n''') == '1 2'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 6 1'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 3\n3 2 1\n\"\"\") == \"3\"\nassert solution(\n\"\"\"\n4\n1 2 1 2\n2 3 3 2\n3 4 3\n\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 3 3 2\\n\") == \"3\\n1 6 1\"\n\"\"\"\nimport sys"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 2 3 3 2 1\n''') == '''\n3\n1 6 1\n2 5 2\n3 4 3\n'''\nassert solution('''\n4\n1 2 1 2\n''') == '''\nIMPOSSIBLE\n'''\nassert solution('''\n6\n1 2 3 3 2 1\n2 4 3 2 1\n''') == '''\n3\n1 6 1\n2 5 2\n3 4 3\n'''\nassert solution('''\n5\n1 2 1 2 1\n''') == '''\nIMPOSSIBLE\n'''\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 3 2 1\n''') == '3'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\n1 2 3 3 2 1''') == '3'\nassert solution('''4\n1 2 1 2''') == 'IMPOSSIBLE'"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"IMPOSSIBLE\", \"Your solution goes here\"\nassert solution(\"4\") == \"3 4 3\", \"Your solution goes here\""
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 'IMPOSSIBLE'\nassert solution('1 2 3 3 2 1') == '3'\nassert solution('1 2 1 2') == '2'\nassert solution('1 2 3 4') == '1'\nassert solution('4 1 2 3') == '1'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n1 100\n1 1\n\"\"\") == \"1 2 100\"\nassert solution(\"\"\"\n5 10 20 30 40 50\n2 28 27\n\"\"\") == \"10 20 28 27 30 40 50\"\nassert solution(\"\"\"\n7 1\n1 2 3 4 5 6 7\n\"\"\") == \"1 2 3 4 5 6 7\"\nassert solution(\"\"\"\n5 5\n1 2 3 4 5\n\"\"\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 2') == '1 2'\n\"\"\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 100') == '1 100'\nassert solution('1 1') == '1 1'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"10 20\"\nassert solution(\"1\") == \"10\"\nassert solution(\"3\") == \"10 20 30\"\nassert solution(\"5 10 20 30 40 50\") == \"10 20 28 27 30 40 50\"\nassert solution(\"3 4\") == \"10 20 30 40\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n3\n1 2\n1 100\n1 1\n''') == '1 2 100'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"5 10 20 30 40 50\") == \"10 20 28 27 30 40 50\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2') == '1 2'\nassert solution('3\\n1 100') == '1 100'\nassert solution('2\\n2 28') == '2 28'\nassert solution('2\\n2 27') == '2 27'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n1 100\n1 1\n''') == '1 2 100'\n\nassert solution('''\n3\n1 2\n1 100\n1 1\n''') == '1 2 100'\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 100') == '1 100'\nassert solution('1 1') == '1 1'\nassert solution('5 10 20 30 40 50') == '10 20 28 27 30 40 50'\nassert solution('2 28 27') == '10 20 28 27 30 40 50'"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '2600'\nassert solution('1') == '2600'\nassert solution('3') == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\") == \"506\"\nassert solution(\"1\") == \"2600\"\nassert solution(\"2\") == \"506\""
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\nAB 1 1\nAC 2 1\nBC 2 1\n''') == '2600'\n\nassert solution('''\n2\nAC 2 2\nAD 2 1\nBC 2 1\n''') == '2800'\n\nassert solution('''\n3\nAB 2 1\nAC 2 1\nBC 2 1\n''') == '2560'\n\nassert solution('''\n3\nAC 2 2\nAB 2 1\nBC 2 1\n''') == '2560'\n\nprint('Do you wish to try your solution now? (y/n)')\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\nBC 5 1\nAC 3 1\nAC 2 1\nAB 2 1\nAC 1 1\n''') == '506'\nassert solution('''\n1\nAB 1 1\n''') == '1'\nassert solution('''\n0\n''') == '0'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\") == \"506\"\nassert solution(\"1\") == \"None\"\nassert solution(\"2\") == \"None\""
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"50\", \"Should return 50\"\nassert solution(\"0\") == \"2600\", \"Should return 2600\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0\") == \"2600\"\nassert solution(\"3\") == \"506\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\") == \"506\"\nassert solution(\"3\\nAB 1 1\\nAC 2 1\\nBC 2 1\\nAC 2 2\\nBC 2 2\\nAC 2 3\\nBC 2 3\\nAC 2 4\\nBC 2 4\\nAC 2 5\\nBC 2 5\\nAC 2 6\\nBC 2 6\\nAC 2 7\\nBC 2 7\\nAC 2 8\\nBC 2 8\\nAC 2 9\\nBC 2 9\\nAC 2 10\\nBC 2 10\\nAC 2 11\\nBC 2 11\\nAC 2 12\\nBC 2 12\\nAC 2 13\\nBC 2 13\\nAC 2 14\\nBC 2 14\\nAC 2 15\\nBC 2 15\") == \"1396\"\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('2 1') == '0'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"()))\") == \"possible\"\nassert solution(\"))())\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('()))' ) == 'possible'\nassert solution(')))(' ) == 'impossible'\nassert solution('(()))' ) == 'possible'\nassert solution('))()' ) == 'impossible'\nassert solution('()(()' ) == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"(())\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"(()())()\") == \"possible\"\nassert solution(\"((()())(())()(()))((()())()))\") == \"possible\"\nassert solution(\"((()())(())()(()))((()())()))\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('((()))') == 'possible'\nassert solution(')((((()))))') == 'impossible'\nassert solution('(((((()))))') == 'impossible'\nassert solution('(()(())(())())(()((()))()())())') == 'possible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"((()))\") == \"possible\"\nassert solution(\"()()\") == \"possible\"\nassert solution(\"())(\") == \"impossible\"\nassert solution(\"()))\") == \"impossible\"\nassert solution(\"))((\") == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"((()))\") == \"possible\", \"Wrong solution\"\nassert solution(\"(())\") == \"possible\", \"Wrong solution\"\nassert solution(\"(()())\") == \"impossible\", \"Wrong solution\"\nassert solution(\"(())(\") == \"impossible\", \"Wrong solution\"\nassert solution(\"()(())\") == \"possible\", \"Wrong solution\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('()))') == 'possible'\nassert solution(')))(') == 'impossible'\nassert solution('())))(') == 'impossible'\nassert solution('(())(())') == 'possible'\nassert solution(')(())(') == 'impossible'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('(())') == 'possible'\nassert solution('()()') == 'possible'\nassert solution('(()())()') == 'possible'\nassert solution('(())(())') == 'impossible'\nassert solution('()())(') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '1800'\nassert solution('2 2') == 'impossible'\nassert solution('1 2') == 'impossible'\nassert solution('2 3') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"1800\"\nassert solution(input_2) == \"impossible\""
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"impossible\"\nassert solution(\"2 3\") == \"1800\"\nassert solution(\"3 3\") == \"1800\"\nassert solution(\"2 2\") == \"impossible\"\nassert solution(\"2 2\") == \"impossible\"\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '1800'\nassert solution('2 2') == 'impossible'\nprint(solution(input()))\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\nassert solution('''\n3 3\n1 1800 9800 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == 'impossible'\nassert solution('''\n3 3\n1 1800 900 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == 'impossible'\nassert solution('''\n10 10\n1 1100 1 86400\n1 1200 1 86400\n1 1300 1 86400\n1 1400 2 86400\n1 1500 2 86400\n1 1600 2 86400\n1 1700 2 86400\n1 1800 4 86400\n1 1900 4 86400\n1 2000 4 86400\n1 2100 4 86400\n1 2200 4 86400\n1 2300 4 86400\n1 2400 4 86400\n1 2500 4 86400\n1 2600 4 86400\n1 2700 4 86400\n1 2800 4 86400\n1 2900 4 86400\n1 3000 4 86400\n1 3100 4 86400\n1 3200 4 86400\n1 3300 4 86400\n1 3400 4 86400\n1 3500 4 86400\n1 3600 4 86400\n1 3700 4 86400\n1 3800 4 86400\n1 3900 4 86400\n1 4000 4 86400\n1 4100 4 86400\n1 4200 4 86400\n1 4300 4 86400\n1 4400 4 86400\n1 4500 4 86400\n1 4600 4 86400\n1 4700 4 86400\n1 4800 4 86400\n1 4900 4 86400\n1 5000 4 86400\n1 5100 4 86400\n1 5200 4 86400\n1 5300 4 86400\n1 5400 4 86400\n1 5500 4 86400\n1 5600 4 86400\n1 5700 4 86400\n1 5800 4 86400\n1 5900 4 86400\n1 6000 4 86400\n1 6100 4 86400\n1 6200 4 86400\n1 6300 4 86400\n1 6400 4 86400\n1 6500 4 86400\n1 6600 4 86400\n1 6700 4 86400\n1 6800 4 86400\n1 6900 4 86400\n1 7000 4 86400\n1 7100 4 86400\n1 7200 4 86400\n1 7300 4 86400\n1 7400 4 86400\n1 7500 4 86400\n1 7600 4 86400\n1 7700 4 86400\n1 7800 4 86400\n1 7900 4 86400\n1 8000 4 86400\n1 8100 4 86400\n1 8200 4 86400\n1 8300 4 86400\n1 8400 4 86400\n1 8500 4 86400\n1 8600 4 86400\n1 8700 4 86400\n1 8800 4 86400\n1 8900 4 86400\n1 9000 4 86400\n1 9100 4 86400\n1 9200 4 86400\n1 9300 4 86400\n1 9400 4 86400\n1 9500 4 86400\n1 9600 4 86400\n1 9700 4 86400\n1 9800 4 86400\n1 9900 4 86400\n1 10000 4 86400\n1 10001 4 86400\n1 10100 4 86400\n1 10200 4 86400\n1 10300 4 86400\n1 10400 4 86400\n1 10500 4 86400\n1 10600 4 86400\n1 10700 4 86400\n1 10800 4 86400\n1 10900 4 86400\n1 11000 4 86400\n1 11100 4 86400\n1 11200 4 86400\n1 11300 4 86400\n1 11400 4 86400\n1 11500 4 86400\n1 11600 4 86400\n1 11700 4 86400\n1 11800 4 86400\n1 11900 4 86400\n1 12000 4 86400\n1 12100 4 86400\n1 12200 4 86400\n1 12300 4 86400\n1 12400 4 86400\n1 12500 4 86400\n1 12600 4 86400\n1 12700 4 86400\n1 12800 4 86400\n1 12900 4 86400\n1 13000 4 86400\n1 13100 4 86400\n1 13200 4 86400\n1 13300 4 86400\n1 13400 4 86400\n1 13500 4 86400\n1 13600 4 86400\n1 13700 4 86400\n1 13800 4 86400\n1 13900 4 86400\n1 14000 4 86400\n1 14100 4 86400\n1 14200 4 86400\n1 14300 4 86400\n1 14400 4 86400\n1 14500 4 86400\n1 14600 4 86400\n1 14700 4 86400\n1 14800 4 86400\n1 14900 4 86400\n1 15000 4 86400\n1 15100 4 86400\n1 15200 4 86400\n1 15300 4 86400\n1 15400 4 86400\n1 15500 4 86400\n1 15600 4 86400\n1 15700 4 86400\n1 15800 4 86400\n1 15900 4 86400\n1 16000 4 86400\n1 16100 4 86400\n1 16200 4 86400\n1 16300 4 86400\n1 16400 4 86400\n1 16500 4 86400\n1 16600 4 86400\n1 16700 4 86400\n1 16800 4 86400\n1 16900 4 86400\n1 17000 4 86400\n1 17100 4 86400\n1 17200 4 86400\n1 17300 4 86400\n1 17400 4 86400\n1 17500 4 86400\n1 17600 4 86400\n1 17700 4 86400\n1 17800 4 86400\n1 17900 4 86400\n1 18000 4 86400\n1 18100 4 86400\n1 18200 4 86400\n1 18300 4 86400\n1 18400 4 86400\n1 18500 4 86400\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1800 9000 1800\\n1 2000 9200 1600\\n1 2200 9400 1400\\n') == '1800'\nassert solution('2 2\\n1 1800 3600 1800\\n1 1900 3600 1600\\n') == 'impossible'\nassert solution('2 0\\n1 1200 1260\\n1 1700 1650\\n') == 'impossible'\nassert solution('2 1\\n1 1200 1260\\n1 1700 1650\\n') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\n\nassert solution('''\n2 3\n1 1800 3600 1800\n1 1900 3600 1600\n1 2200 9400 1400\n''') == 'impossible'\n"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '2 3\\n'\n    '1 1800 9000 1800\\n'\n    '1 2000 9200 1600\\n'\n    '1 2200 9400 1400\\n'\n) == '1800\\n', f\"First Example: {solution('2 3\\n'\n                                          '1 1800 9000 1800\\n'\n                                          '1 2000 9200 1600\\n'\n                                          '1 2200 9400 1400\\n')}\"\nassert solution(\n    '4 3\\n'\n    '1 1700 1200 1800\\n'\n    '1 1800 1200 1800\\n'\n    '1 1700 1200 1800\\n'\n    '1 2100 1200 1800\\n'\n) == 'impossible\\n', f\"Second Example: {solution('4 3\\n'\n                                               '1 1700 1200 1800\\n'\n                                               '1 1800 1200 1800\\n'\n                                               '1 1700 1200 1800\\n'\n                                               '1 2100 1200 1800\\n')}\"\nassert solution(\n    '5 1\\n'\n    '1 1800 900 900\\n'\n    '1 2200 900 900\\n'\n    '1 3100 900 900\\n'\n    '1 4200 900 900\\n'\n    '1 5100 900 900\\n'\n    '1 6200 900 900\\n'\n) == 'impossible\\n', f\"Third Example: {solution('5 1\\n'\n                                               '1 1800 900 900\\n'\n                                               '1 2200 900 900\\n'\n                                               '1 3100 900 900\\n'\n                                               '1 4200 900 900\\n'\n                                               '1 5100 900 900\\n'\n                                               '1 6200 900 900\\n')}\"\nassert solution(\n    '6 3\\n'\n    '1 1500 1000 1000\\n'\n    '1 1500 1000 1000\\n'\n    '1 1500 1000 1000\\n'\n    '1 1500 1000 1000\\n'\n    '1 1500 1000 1000\\n'\n    '1 2500 1000 1000\\n'\n) == 'impossible\\n', f\"Fourth Example: {solution('6 3\\n'\n                                               '1 1500 1000 1000\\n'\n                                               '1 1500 1000 1000\\n'\n                                               '1 1500 1000 1000\\n'\n                                               '1 1500 1000 1000\\n'\n                                               '1 1500 1000 1000\\n'\n                                               '1 2500 1000 1000\\n')}\"\nassert solution(\n    '8 3\\n'\n    '1 1900 1000 1000\\n'\n    '1 1800 1000 1000\\n'\n    '1 1700 1000 1000\\n'\n    '1 1900 1000 1000\\n'\n    '1 1800 1000 1000\\n'\n    '1 1700 1000 1000\\n'\n    '1 1900 1000 1000\\n'\n    '1 1800 1000 1000\\n'\n    '1 1700 1000 1000\\n'\n    '1 1900 1000 1000\\n'\n    '1 1800 1000 1000\\n'\n    '1 1700 1000 1000\\n'\n    '1 1900 1000 1000\\n'\n    '1 1800 1000 1000\\n'\n    '1 1700 1000 1000\\n'\n    '1 1900 1000 1000\\n'\n    '1 1800 1000 1000\\n'\n    '1 1700 1000 1000\\n'\n    '1 1900 1000 1000\\n'\n    '1 1800 1000 1000\\n'\n    '1 1700 1000 1000\\n'\n    '1 1900 1000 1000\\n'\n    '1 1800 1000 1000\\n'\n    '1 1700 1000 1000\\n'\n) == 'impossible\\n', f\"Fifth Example: {solution('8 3\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000\\n'\n                                               '1 1700 1000 1000\\n'\n                                               '1 1900 1000 1000\\n'\n                                               '1 1800 1000 1000"
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == '1800'\nassert solution(sample_input_2) == 'impossible'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\""
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\n''') == 'A1-B1 A2-B2 A3-B3 A1-B2 A3-B1 A2-B1'\n\nassert solution('''2 3\nA1-B1 A2-C2 B2-C1\nA1-C1 A2-B1 B2-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B1 B1-C1\n''') == 'A1-B1 A2-C2 A1-B2 A2-C1 A2-B1 A1-C1 A1-B1'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n''') == 'A1-B1 A2-C2 B2-C1\\nA1-C1 A2-B1 B2-C2'\n\n'''\n\n-------SOLUTION-------"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == 'A1-B1 A2-B2 A3-B3'\nassert solution('3 3') == 'A1-B1 A2-B2 A3-B3'"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\nA1-B2\nA2-B3\nA3-B1''') == 'A1-B2 A2-B3 A3-B1'\nassert solution('''2 3\nA1-B1\nA2-C2\nB2-C1\nA3-B2''') == 'A1-B1 A2-C2 B2-C1 A3-B2'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\""
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\nA1-C1 A2-B1 B1-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B3 A2-C1 B1-C2''') == 'A1-B1 A2-C2 B1-C1\\nA1-B2 A2-C1 B1-C2\\nA1-C2 A2-B2 B1-C1'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\", \"Empty input\"\nassert solution(\"2 3\") == \"A1-B2 A2-C2 B2-C1\", \"Wrong input\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"A1-B2 B1-A2 A3-B3\"\nassert solution(\"2 3\") == \"A1-B1 A2-C2 B2-C1\"\nassert solution(\"1 1\") == \"A1-A1\"\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\nA1-B2\nA2-B3''') == 'A1-B2 A2-B3 A3-B1'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n..\\n..') == '7'\nassert solution('4 4\\nX.XX\\nX..X\\n..X.\\n..XX') == '9'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"7\"\nassert solution(\"4 4\") == \"9\"\nassert solution(\"5 5\") == \"5\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\n\"\"\"\n\nR,C = map(int,input().split())\nfor i in range(R):\n    s = input()\n    if '.' in s:\n        print(len(s)-2)\n    else:\n        print(len(s)-1)\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\nXX.XX\nXX..X\n..XX\n\n''') == '7'\nprint('All passed!')"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '7'\nassert solution(\"3 3\") == '4'\nassert solution(\"5 5\") == '10'\nassert solution(\"6 6\") == '7'\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n..\n..\n''') == '7'\nassert solution('''4 4\nX.XX\nX..X\n..X.\n..XX\n''') == '9'\n\nprint(solution('''5 5\n.X.X.X.\nX.X.X.X.\nX.X.X.X.\nX.X.X.X.\nX.X.X.X.\n'''))\n\nprint(solution('''4 4\nX.XX\nX..X\n..X.\n..XX\n'''))\n"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"7\"\nassert solution(\"4 4\") == \"9\"\nassert solution(\"3 4\") == \"7\""
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '7'\nassert solution('4 4') == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n.X.\n.X.\n''') == '7'\n\nassert solution('''\n4 4\nX.XX\nX..X\n..X.\n..XX\n''') == '9'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"600\""
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n3 3 2 2 100\n1 1 1 1 500\nSample Output 1:\n600\n\nSample Input 2:\n2\n2 0 2 1 100\n6 0 8 1 1\nSample Output 2:\n100\n''') == '600'\nassert solution('''3\n2 0 2 1 100\n6 0 8 1 1\n1 1 1 1 500\nSample Output 1:\n600\n\nSample Input 2:\n2\n2 0 2 1 100\n0 2 8 1 1\nSample Output 2:\n-1\n''') == '-1'\nassert solution('''4\n2 0 2 1 100\n0 0 2 1 1\n1 1 1 1 500\nSample Output 1:\n600\n\nSample Input 2:\n2\n2 0 2 1 100\n0 0 2 1 1\n1 1 1 1 500\nSample Output 2:\n-1\n''') == '-1'"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"600\"\nassert solution(input_string=\"2\\n3 3 2 2 100\\n1 1 1 1 500\\n\") == \"600\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3 3 2 2 100\\n1 1 1 1 500\\n') == '600'\nassert solution('2\\n1 1 1 1 500\\n') == '-1'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3 2 2 100\n1 1 1 1 500\n\"\"\") == \"600\"\n\nassert solution(\"\"\"\n2\n2 0 2 1 100\n6 0 8 1 1\n\"\"\") == \"100\"\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2 0 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''\n2\n0 1 0 2 100\n6 0 8 1 1\n''') == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '600'\nassert solution(input_data) == '100'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3 3 2 2 100\\n1 1 1 1 500\\n') == '600'\nassert solution('2\\n2 0 2 1 100\\n6 0 8 1 1\\n') == '100'"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('361') == '3'\nassert solution('11') == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n361') == '3'\nassert solution('2\\n11') == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\""
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('12') == '1'\nassert solution('15') == '2'\nassert solution('23') == '2'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n361''') == '3'\nassert solution('''2\n11''') == '0'"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n54321''') == '0'\nassert solution('''4\n456''') == '1'\nassert solution('''6\n776''') == '0'\nprint('all tests passed')"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"3\""
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7\n79\n''') == '0'\n\nassert solution('''5\n10\n''') == '1'\n\nassert solution('''4\n999\n''') == '2'\n\nassert solution('''2\n111\n''') == '0'"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"cancel road trip\"\nassert solution(\"3 10\") == \"10\"\nassert solution(\"2 100\") == \"cancel road trip\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"11 5\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3,10,2,100,1,10,11,5]) == '10'\nassert solution([3,10,2,100,1,10,11,5,3,2]) == 'cancel road trip'\nassert solution([10,10]) == 'cancel road trip'\nassert solution([10]) == 'cancel road trip'\nassert solution([100]) == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 10\") == \"10\"\nassert solution(\"2 100\") == \"cancel road trip\"\nassert solution(\"1 10\") == \"cancel road trip\"\nassert solution(\"11 5\") == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"cancel road trip\"\nassert solution(\"3 10\") == \"10\"\nassert solution(\"3 10\") == \"cancel road trip\"\nassert solution(\"3 10\") == \"cancel road trip\"\nassert solution(\"3 10\") == \"cancel road trip\"\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == '10'\nassert solution('''\n3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'\n'''\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 10\n2 100\n1 10\n11 5\nSample Output 2:\n10\n''') == '10'\n\nassert solution('''4 10\n1 1\n2 1\n3 2\n2 3\n3 4\nSample Output 2:\ncancel road trip\n''') == 'cancel road trip'\n\nassert solution('''4 10\n1 1\n2 2\n3 3\n2 4\n3 5\nSample Output 2:\n10\n''') == '10'\n\nassert solution('''4 10\n1 1\n2 2\n3 3\n2 4\n3 5\nSample Output 2:\ncancel road trip\n''') == 'cancel road trip'\n\nassert solution('''4 10\n1 1\n2 2\n3 3\n2 4\n3 5\nSample Output 2:\ncancel road trip\n''') == 'cancel road trip'"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10') == '10'\nassert solution('3 10') == '10'\nassert solution('3 10') == 'cancel road trip'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 4\n1\n''') == 'cancel road trip'\nassert solution('''\n1 10\n1\n''') == '1'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"cancel road trip\""
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n\") == \"10\"\nassert solution(\"3 10\\n\") == \"10\"\nassert solution(\"3 10\\n\") == \"cancel road trip\"\nassert solution(\"2 1\\n\") == \"1\"\nassert solution(\"2 2\\n\") == \"2\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109', 'First Sample Test Failed'\nassert solution('''5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19', 'Second Sample Test Failed'"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 9') == '1 8 9 9 100 101 108 109 109', solution('4 9')\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '7 8 11 15 16 19'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n4 5\n2 3\n4 6\n4 8''') == '2 8 8 9 11 15 16 19'\nassert solution('''2\n3 4\n2 7\n3 8''') == '0 7 8 11 15 16 19'\nassert solution('''5\n7 1\n3 2\n2 7\n3 8\n4 8\n5 100''') == '1 8 9 9 100 101 108 109 109'"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\\n2 2\\n3 4\") == \"0 7 8 11 15 16 19\"\nassert solution(\"5 7\\n2 2\\n3 4\\n5 8\\n4 7\") == \"0 7 8 11 15 16 19\""
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"5 7\") == \"0 7 8 11 15 16 19\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\nassert solution(\"1 2 3 4 5 6 7\") == \"1 2 3 4 5 6 7\"\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7') == '0 7 8 11 15 16 19'\nassert solution('9 7') == '1 7 8 11 15 16 19'\nassert solution('8 7') == '0 7 8 11 15 16 19'\nassert solution('5 3') == '1 3 5 7 8 10 12 14 15 16 18 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 1011 1021 1022 1031 1032 1041 1051 1061 1071 1081 1091 1101 1111 1121 1131 1141 1151 1161 1171 1181 1191 120 1\n\n-----\nSample Input 1:\n10\n1 3\n2 5\n3 8\n4 9\n5 10\n6 16\n7 23\n8 38\n9 45\n10 47\n11 59\n12 61\n13 74\n14 80\n15 86\n16 88\n17 96\n18 100\n19 105\n20 114\n21 120\n22 127\n23 134\n24 138\n25 145\n26 152\n27 159\n28 167"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 9') == '1 8 9 9 100 101 108 109 109'\nassert solution('5 7') == '0 7 8 11 15 16 19'"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1'\nassert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3') == '1'\nprint('all tests passed')\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 3\") == \"1\"\nassert solution(\"1 5 3\") == \"3\"\nassert solution(\"1 5 3\") == \"2\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == \"1\"\nassert solution('1 10 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == \"3\"\nassert solution('1 20 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == \"4\"\nassert solution('1 100 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == \"1\"\nassert solution('1 1000 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3') == \"2\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution([\n    \"5 3 3\",\n    \"0 0 1\",\n    \"3 3\",\n    \"-3 3\",\n    \"3 -3\",\n    \"3 0\",\n    \"0 3\"]) == \"3\""
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3\n''') == '1'\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('1 5 3') == '1'\nprint('All test cases passed.')"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 3\\n0 0 1\\n3 3\") == \"1\"\nassert solution(\"1 5 3\\n0 0 1\\n3 3\\n-3 3\\n3 -3\\n3 0\\n0 3\") == \"3\"\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 3 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == \"1\"\nassert solution('''1 5 3\n0 0 1\n3 3\n-3 3\n3 -3\n3 0\n0 3''') == \"3\"\nassert solution('''1 10 10\n-20000 -20000 1\n20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000 20000 1\n-20000"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == '1'\nassert solution(\"1 3 3\") == '1'\nassert solution(\"0 0 1\") == '1'\nassert solution(\"3 3\") == '1'\nassert solution(\"-3 3\") == '1'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n10\\n1\\n9\") == \"4\\n4\\n2\\n2\\n0\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\") == \"2\\n0\\n0\\n2\\n0\""
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10000\\n1\\n1\\n1\\n1\\n1\\n\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\\n1\\n1\\n10\\n1\\n9\\n\") == \"2\\n0\\n0\\n2\\n0\\n\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 100000') == '4\\n4\\n2\\n0\\n0'\nassert solution('5 9') == '2\\n0\\n2\\n0\\n0'"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 10000\") == \"4\\n4\\n2\\n2\\n0\\n\"\nassert solution(\"5 9\") == \"2\\n0\\n0\\n2\\n0\\n\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 10000\\n\") == \"4\"\nassert solution(\"5 9\\n\") == \"2\"\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4\\n0\\n0\\n2\\n0'\nprint(solution('5 9\\n1\\n1\\n10\\n1\\n9'))\nprint(solution('4 5\\n1\\n1\\n1\\n1'))"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 100000') == '4'\nassert solution('5 9') == '2'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n3\\n1\\n2') == '4'\nassert solution('5\\n10\\n11\\n10\\n11') == '3'\nassert solution('5\\n12\\n13\\n11\\n12') == '4'\nassert solution('5\\n14\\n15\\n16\\n17') == '0'\nassert solution('5\\n18\\n19\\n20\\n21') == '0'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\nassert solution() == \"2\""
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10000\\n1') == '4'\nassert solution('5 9\\n1\\n10\\n1\\n9') == '2'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'NE'\nassert solution('2') == 'DA'\nassert solution('3') == 'NE'\nassert solution('4') == 'DA'\nassert solution('5') == 'NE'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"NE\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"NE\"\nassert solution(\"4\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''ne\nkava\nne\nak''') == 'DA'\nassert solution('''ne\nne\nak\nak''') == 'NE'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"NE\"\nassert solution(\"4\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"NE\"\nassert solution(\"2\") == \"DA\"\nassert solution(\"3\") == \"DA\"\nassert solution(\"4\") == \"NE\"\nassert solution(\"5\") == \"DA\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"NE\", \"test 1 failed\"\nassert solution(\"4\") == \"DA\", \"test 2 failed\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"NE\", \"First\"\nassert solution(\"4\") == \"DA\", \"Second\"\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"NE\", \"Second\"\nassert solution(\"4\") == \"DA\", \"Third\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\n\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 4\n1 2\n2 3\n1 3\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2''') == \"0\"\nassert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2''') == \"2\"\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\nSample Output 2:\n0\n0\n3\n2\n''') == \"2\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2''') == '2'\n\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\nSample Output 2:\n0\n0\n3\n2\n''') == '0'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n0\\n2\\n1\\n\""
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"4 4 4\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 4\\n\"\n    \"3 4\\n\"\n    \"1 1 4\\n\"\n    \"2 1 4\\n\"\n    \"1 1 3\\n\"\n    \"2 2 3 2\"\n) == \"2\"\n\nassert solution(\n    \"8 10 4\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"1 3\\n\"\n    \"3 6\\n\"\n    \"6 8\\n\"\n    \"2 4\\n\"\n    \"2 5\\n\"\n    \"4 7\\n\"\n    \"5 7\\n\"\n    \"7 8\\n\"\n    \"2 3 4 5 6\\n\"\n    \"2 2 6 8\\n\"\n    \"1 1 6\\n\"\n    \"1 1 8\"\n) == \"3\"\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0'"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\nprint('solution() is ok')"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution('4 4 4') == '2'\nassert solution('8 10 4') == '3'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '3'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == \"2\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2\\n1 1\\n0 1\\n1 0\\n1 2 1\\n2 1 1\\n') == '2'\nassert solution('3 4\\n5 1 1 1\\n3 2 1 3\\n1 2 1 1\\n') == '1'"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == \"1\", 'Should return 1'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == \"2\", 'Should return 2'\nassert solution('''\n2 3\n1 1 1\n1 1 3\n1 1 1\n''') == \"1\", 'Should return 1'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '2'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''\n3 3\n1 1 1\n1 2 1\n1 3 1\n2 1 1\n2 2 1\n2 3 1\n''') == '2'\nassert solution('''\n5 3\n1 1 2 2 3 1\n2 2 1 1 1 1\n3 2 2 1\n3 1 2 1\n2 1 2 2\n''') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 2 1\") == \"2\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '1'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1 1\") == \"2\"\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\nassert solution('1 0') == '2'\nassert solution('1 2 1') == '2'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '2'\nassert solution('''\n3 3\n0 1\n2 1\n2 2 1\n''') == '2'\nassert solution('''\n3 3\n0 2\n2 1\n2 1 2\n''') == '3'\nassert solution('''\n2 4\n1 1\n0 1\n0 0 1\n1 2 1\n2 1 2\n''') == '1'"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 15\") == \"40.500000000\"\nassert solution(\"3 15\") == \"49.000000000\"\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 15') == '41.500000000'\nassert solution('2 30') == '100.0000000000'\nassert solution('3 30') == 'Impossible'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '40.500000000', 'first'\nassert solution('''\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000','second'"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '49.000000000'"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '40.500000000'\nassert solution('''\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == '49.000000000'\nassert solution('''\n2 15\nD 4 10 1\nC 6 1\n''') == 'impossible'\nassert solution('''\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n''') == 'impossible'\nassert solution('''\n1 1\n''') == 'impossible'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 15\nD 4 10 1\nC 6 1\nC 9 3''') == '40.5'\nassert solution('''3 15\nD 4 10 1\nC 6 1\nC 9 3''') == '49.000000'\nprint(solution('''2 30\nD 4 10 1\nC 6 1\nC 9 3'''))\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\n') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\n') == '49.000000000'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 15\\nD 4 10 1\\nC 6 1\") == \"40.500000000\"\nassert solution(\"3 15\\nD 4 10 1\\nC 6 1\\nC 9 3\") == \"49.000000000\"\nassert solution(\"2 15\\nD 4 10 1\\nC 6 1\\nC 9 3\\nD 5 4 5\\nC 10 2\\nC 10 2\\nD 3 3 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2\\nD 10 3\\nC 10 2"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 15\nD 4 10 1\nC 6 1\n\"\"\") == \"40.500000000\"\nassert solution(\"\"\"\n3 15\nD 4 10 1\nC 6 1\nC 9 3\n\"\"\") == \"49.000000000\""
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\nD 4 10 1\nC 6 1\nC 9 3\n\"\"\") == \"40.500000000\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == 'fail'\nassert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\na 3 2 9 1\\nb 3 8 5\\nc 5 1 9 2\\nd 3 6 2 8\\ne 3 4 9 7\\nf 3 9 2 4\\ng 9 1 5 3\\nh 2 8 5 9\\ni 9 5 4 2\\nj 9 7 1 3\\na 3 2 9 1\\nb 3 8 5\\nc 5 1 9 2\\nd 3 6 2 8\\ne 3 4 9 7\\nf 3 9 2 4\\ng 9 1 5 3\\nh 2 8 5 9\\ni 9 5 4 2\\nj 9 7 1 3\\n') == '5 4 9 3 1 10 7 6 2'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5 4 9 3 1 10 7 6 2', solution\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"6\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\nk 1 4\\nl 1 6\") == \"fail\"\nassert solution(\"10\\nab 2 10 3\\nbc 1 6\\ncd 2 1 5\\nde 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nhi 0\\ni 1 3\\nj 1 7\\nk 1 4\\nl 1 6\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"100\\nabc 2 10 3\\nabd 1 6\\nec 2 1 5\\ned 1 9\\nafe 1 4\\nf1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\nk 1 4\\nl 1 6\\nmn 1 2\") == \"fail\"\nassert solution(\"100\\nabc 2 10 3\\nabd 1 6\\nec 2 1 5\\ned 1 9\\nafe 1 4\\nf1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\nk 1 4\\nl 1 6\\nmn 1 2\\n\") == \"fail\"\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n'\n                'a 2 10 3\\n'\n                'b 1 6\\n'\n                'c 2 1 5\\n'\n                'd 1 9\\n'\n                'e 1 4\\n'\n                'f 1 2\\n'\n                'g 2 6 8\\n'\n                'h 0\\n'\n                'i 1 3\\n'\n                'j 1 7\\n') == 'fail'\n\nassert solution('20\\n'\n                'a 2 10 3\\n'\n                'b 1 6\\n'\n                'c 2 1 5\\n'\n                'd 1 9\\n'\n                'e 1 4\\n'\n                'f 1 2\\n'\n                'g 2 6 8\\n'\n                'h 0\\n'\n                'i 1 3\\n'\n                'j 1 7\\n'\n                'k 1 5\\n'\n                'l 1 8\\n'\n                'm 1 9\\n'\n                'n 2 7\\n'\n                'o 3 6\\n'\n                'p 2 5\\n'\n                'q 2 4\\n'\n                'r 3 5\\n'\n                's 3 8\\n'\n                't 2 6\\n'\n                'u 3 9\\n'\n                'v 1 10\\n'\n                'w 1 3\\n'\n                'x 1 2\\n'\n                'y 4 8\\n'\n                'z 2 7\\n') == 'fail'\n\nassert solution('5\\n'\n                'a 1\\n'\n                'b 1\\n'\n                'c 1\\n'\n                'd 1\\n'\n                'e 2\\n'\n                'f 1\\n'\n                'g 1\\n'\n                'h 1\\n'\n                'i 2\\n'\n                'j 1\\n'\n                'k 1\\n'\n                'l 1\\n'\n                'm 1\\n'\n                'n 1\\n'\n                'o 1\\n'\n                'p 2\\n'\n                'q 1\\n'\n                'r 2\\n'\n                's 1\\n'\n                't 1\\n'\n                'u 1\\n'\n                'v 1\\n'\n                'w 2\\n'\n                'x 1\\n'\n                'y 1\\n'\n                'z 1\\n') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n'\n    'a 2 10 3\\n'\n    'b 1 6\\n'\n    'c 2 1 5\\n'\n    'd 1 9\\n'\n    'e 1 4\\n'\n    'f 1 2\\n'\n    'g 2 6 8\\n'\n    'h 0\\n'\n    'i 1 3\\n'\n    'j 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('10\\n'\n    'a 2 10 3\\n'\n    'a 1 6\\n'\n    'c 2 1 5\\n'\n    'd 1 9\\n'\n    'e 1 4\\n'\n    'f 1 2\\n'\n    'g 2 6 8\\n'\n    'h 0\\n'\n    'i 1 3\\n'\n    'j 1 7') == 'fail'\nassert solution('10\\n'\n    'a 2 10 3\\n'\n    'a 1 6\\n'\n    'c 2 1 5\\n'\n    'd 1 9\\n'\n    'e 1 4\\n'\n    'f 1 2\\n'\n    'g 2 6 8\\n'\n    'h 0\\n'\n    'i 1 3\\n'\n    'j 1 7') == 'fail'"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\na 2 10 3\\nb 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == '5 4 9 3 1 10 7 6 2'\nassert solution('10\\na 3 4\\nb 5 2\\nc 6 1\\nd 4 7\\ne 5 8\\nf 9 1\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7') == 'fail'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\") == \"5 4 9 3 1 10 7 6 2\"\nassert solution(\"10\\na 2 10 3\\na 1 6\\nc 2 1 5\\nd 1 9\\ne 1 4\\nf 1 2\\ng 2 6 8\\nh 0\\ni 1 3\\nj 1 7\\n\") == \"fail\""
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    a 2 10 3\n    b 1 6\n    c 2 1 5\n''') == '5 4 9 3 1 10 7 6 2'\nprint('All test cases passed!')"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00:00') == '3'\nassert solution('00:00') == '00:00'\nassert solution('01:01') == '3'\nassert solution('01:01') == '01:01'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\nassert solution('00:08') == '3'"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n00:00\n01:01\n''') == '''3\n00:00\n01:00\n01:01'''\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n00:00\n01:01\n''') == '3\\n00:00\\n01:00\\n01:01\\n'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '00:00\\n01:01\\n'\n    '00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00'\n    ) == '1'\nassert solution(\n    '00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00\\n00:00'\n    ) == '0'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('00:00\\n00:00') == '1'\nassert solution('01:01\\n00:00') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"00:00\") == \"3\"\nassert solution(\"00:01\") == \"3\"\nassert solution(\"00:10\") == \"2\"\nassert solution(\"00:10\") == \"2\"\nassert solution(\"00:11\") == \"0\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"00:00\\n01:01\") == \"3\"\nassert solution(\"00:08\\n00:00\") == \"3\"\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('00:00\\n01:01') == '3'\nassert solution('00:08\\n00:00') == '3'\nassert solution('00:08\\n00:01') == '3'\n\nThe input looks like this:\n\n0:00\n1:01\nThe output looks like this:\n\n3\n0:00\n1:00\n1:01\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"4,4:\"\n\n'''"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '4,4:'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''((()))''') == '4,8:8,8:'''\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"()\") == \"4,4:\"\nassert solution(\"(())\") == \"4,8:8,8:\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('(())') == '4,8:8,8:', 'Test 1 Failed'\nassert solution('()') == '4,4:', 'Test 2 Failed'\nassert solution('(())') == '4,4:', 'Test 3 Failed'\nassert solution('()()') == '4,4:', 'Test 4 Failed'\nassert solution('()()()') == '4,4:', 'Test 5 Failed'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('((()))') == '4,8:8,8:'\nassert solution('()') == '4,4:'"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('()') == '4,8:8,8:'\nassert solution('(())') == '4,4:\n\"\"\"\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data\nprint('all test cases passed')\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('((())') == '4,8:8,8:'\nassert solution('((()()()()()((()))))') == '4,4:4,8:4,8:4,8:4,8:4,8:4,8:4,8:4,8:'"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"((()))\") == \"(4,8:8,8:\",\nassert solution(\"(()())\") == \"4,8:8,8:8,8:8,8:\",\n\nassert solution(\"(())(\") == \"4,4:4,4:\",\nassert solution(\"(())((\") == \"4,4:4,4:4,4:\",\n\nassert solution(\"()((())((())))(((())(()))(()))()(()))\") == \"4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:4,4:"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"5\"\nassert solution(\"1 1\") == \"-1\"\nassert solution(\"1 1\") == \"-1\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1\\n26 02 03 03 1') == '5'\nassert solution('1 1\\n26 02 03 03 2') == '185'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\nassert solution() == \"-1\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1 1\\n'\n    '26 02 03 03 1'\n    ) == '5'\nassert solution(\n    '1 1\\n'\n    '26 02 03 03 2'\n    ) == '185'\nassert solution(\n    '2 2\\n'\n    '1 1\\n'\n    '1 1'\n    ) == '1'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"-1\"\nassert solution(\"\"\"1 1\n26 02 03 03 1\"\"\") == \"5\"\nassert solution(\"\"\"1 1\n26 02 03 03 2\"\"\") == \"185\"\nassert solution(\"\"\"3\n1 2 3\"\"\") == \"-1\"\nassert solution(\"\"\"2\n1 2\"\"\") == \"0\"\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\n26 02 03 03 1') == '5'\nassert solution('1 1\\n26 02 03 03 2') == '185'"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == \"5\""
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''\n1 1\n26 02 03 03 2\n''') == '185'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '5 6 1 2 3 4'\nassert solution('4 2') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2\\n3 4 1 2') == '2 3 4 1'\n\"\"\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\nassert solution('''\n6 2\n1 4 5 2 3 6\n''') == '2 3 4 1 6 5'\nassert solution('''\n6 2\n1 5 3 2 4 6\n''') == '1 2 5 3 4 6'\nassert solution('''\n6 2\n2 3 4 1 6 5\n''') == '2 3 4 1 6 5'\nassert solution('''\n4 2\n3 4 1 2\n''') == '2 3 4 1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 2\n1 2 3 4\n''') == '2 3 4 1'\nassert solution('''6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n3 4 5 6 1 2\\n\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\\n3 4 1 2\\n\") == \"2 3 4 1\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6 1 2 3 4') == '2 3 4 1 5 6'"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"Impossible\"\nassert solution(\"6 2\") == \"5 6 1 2 3 4\"\nassert solution(\"3 4 5 6 1 2\") == \"2 3 4 1 6 5\"\nassert solution(\"2 3 4 1 2\") == \"1 3 4 1 2\"\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2\") == \"5 6 1 2 3 4\"\nassert solution(\"4 2\") == \"2 3 4 1\""
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2') == '5 6 1 2 3 4'\nassert solution('4 2') == '2 3 4 1'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3\n1\n7\n4\n0\n''') == '74311'\nassert solution('''\n1\n3\n1\n7\n4\n0\n''') == '7431'\nassert solution('''\n1\n2\n1\n7\n4\n0\n''') == '7431'\nassert solution('''\n1\n2\n1\n7\n4\n0\n''') == '7431'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\nprint(solution(input()))\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''20 10''') == '200'\nassert solution('''20 10''') == '200'\nassert solution('''20 10''') == '200'\nassert solution('''20 10''') == '200'\nassert solution('''20 10''') == '200'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('100 100') == '100 100'\nprint(solution(input()))\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n>>> solution('1374 2')\n'7413'\n>>> solution('210 1')\n'201'\n\"\"\") == '201'"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '2123'\nprint(solution())\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"3 4\"\nassert solution(\"5 1\") == \"5 1\"\nassert solution(\"1 2\") == \"12\"\nassert solution(\"10 20\") == \"210\"\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('567 890') == '6789'\nassert solution('123') == '321'\nassert solution('1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.8'\nassert solution('3') == '0.7'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\"\nassert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0.666666666666667\"\nassert solution(\"2\") == \"0.733333333333333\"\nassert solution(\"3\") == \"0.7064886440404586\"\n\nfrom math import sqrt, floor"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 0\n0 1\n1 1\n1 0\n''') == '0.733333333333333'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.733333333333333\"\nassert solution(\"4\\n0 0\\n0 1\\n1 1\\n1 0\") == \"0.666666666666667\""
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'\nassert solution('4\\n0 0\\n0 1\\n1 1\\n1 0') == '0.666666666666667'"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0.166666666666667'\nassert solution('4') == '0.3125'\nprint(solution(input()))\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0.666666666666667\"\nassert solution(\"4\") == \"0.733333333333333\""
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n0 0\n0 1\n1 1\n1 0\n''') == '0.733333333333333'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == '21'\nassert solution('') == '21'\nassert solution('2 3 4') == '9'\nassert solution('10 1 3') == '10'\nassert solution('10 1 10') == '10'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('2 3 4') == '9'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3 100\n10 1 10\n10 1 20\n''') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 1 3\n1 1 3\n0 1 20\n\"\"\") == \"9\"\nassert solution(\"\"\"\n2 2 5\n0 1 5\n10 1 5\n\"\"\") == \"17\"\nassert solution(\"\"\"\n10 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n1 1 20\n\"\"\") == \"27\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '9'\nassert solution('1') == '1'"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3 4\n10 1 3\n0 1 20\n''') == '9'\nassert solution('''\n2 2 3\n10 1 10\n2 2 10\n''') == '17'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3 4\n10 1 3\n0 1 20\n''') == '9'\nassert solution('''\n2 3 100\n10 1 10\n10 1 10\n''') == '21'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 4') == '9'\nassert solution('2 3 100') == '21'"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 100') == '9'\nassert solution('2 3 100') == '17'\n\"\"\"\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 5 3\n10 1 10\n0 1 20\n10 1 10\n''') == '21'\nassert solution('''\n10 20 10\n0 1 10\n0 1 10\n''') == '21'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\nassert solution('8 2 7 -', '1 1 1 2') == '2'\nassert solution('9 2 7 -', '1 1 1 2') == '4'"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8 2 7 -\n1 1 1 2\n''') == '2'\n\nassert solution('''\n9 2 7 -\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 2 7 -\\n1 1 1 2\\n') == '2'\nassert solution('9 2 7 -\\n1 1 1 2\\n') == '4'\nassert solution('7 4 6 1\\n0 0 1 2\\n1 2 2 0\\n1 0 0 0\\n') == '12'\nassert solution('8 5 3 3\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n') == '36'\nassert solution('8 7 4 3\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n') == '48'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 4 7 -\\n1 1 1 2\\n') == '4\\n'\nassert solution('6 5 7 -\\n1 1 1 2\\n') == '3\\n'\nassert solution('6 6 7 -\\n1 1 1 2\\n') == '4\\n'\nassert solution('7 7 7 -\\n1 1 1 2\\n') == '0\\n'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''\n9 2 7 -\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 2 7 -\") == \"2\"\nassert solution(\"9 2 7 -\") == \"4\"\nassert solution(\"5 4 8 -\") == \"0\"\nassert solution(\"4 3 7 -\") == \"0\"\nassert solution(\"9 4 7 -\") == \"4\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\nprint(solution(input()))\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 -1\\n1 2 3\\n\") == \"4\"\nassert solution(\"4 3 -1\\n1 2 3 4\\n\") == \"1\"\nassert solution(\"4 2 -1\\n1 2 3 4\\n\") == \"2\"\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 2 7 -') == '2'\nassert solution('9 2 7 -') == '4'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '3'\n\nassert solution('''\n4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\nSample Output 1:\n2\n3\n3\n1''') == '2'\nassert solution('''3 5\n1 2 5\n2 3 5\n3 4 5\n1 4 8\nSample Output 2:\n3\n3\n2''') == '3'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\nSample Input 3:\n2\n4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\nSample Output 3:\n2\n0\n\nSample Input 4:\n1\n1\n2\nSample Output 4:\n0\n\nSample Input 5:\n2\n2\n2\nSample Output 5:\n1\n0\n\nSample Input 6:\n4\n4\n4\n4\nSample Output 6:\n1\n\nSample Input 7:\n2\n3\n4\n4\nSample Output 7:\n0\n1\n\nSample Input 8:\n3\n3\n3\nSample Output 8:\n1\n''') == '1'\nassert solution('''5 2\n1 2 3\n1 3 4\n2 4 5\n''') == '0'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"5 5\") == \"4\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '3'\nassert solution('4 4') == '4'\nassert solution('10 10') == '20'"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '3'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '3'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"4 4\") == \"2\""
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '3'\nassert solution('''4 4\n1 2 5\n2 3 5\n3 4 5\n1 4 8\n''') == '2'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '6'\nprint(solution())\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '6'"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n2 3 1\n''') == '6'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"24\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n2 1') == '6'\nassert solution('3 4\\n2 3 1') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 4\n2 3 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1 2') == '2'\nassert solution('3 4\\n2 3 1') == '24'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3 4 5 1 2''') == '1'\nassert solution('''10\n2 5 6 4 1 3 7 8 9''') == '2'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n\"\"\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '1'"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2\n''') == '2'\n\nassert solution('''\n5\n3 4 5 1 2\n''') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('''\n1\n2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '2'\nassert solution('''\n8\n3 5 1 2 4 6 7\n''') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2') == '2'\nassert solution('5\\n3 4 5 1 2') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution('''2\n3 4 5 1 2''') == '1'\nassert solution('''5\n3 4 5 1 2''') == '2'\n\"\"\"\n\nimport math\nfrom math import gcd\n\nn = int(input())\nl = list(map(int, input().split()))\nn_list = []\nfor i in range(1,n+1):\n    n_list.append(i)\nn_list = sorted(n_list)\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\n\nassert solution('''\n3 3\n1 3 1\n2 1 2\n1 1 1\n''') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3\\n4 2 6\\n11 1 3') == \"4\"\nprint(solution(input()))\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 4 10\\n5 2 6\\n11 1 3') == '9'\nassert solution('2 3\\n1 3 1\\n2 1 2\\n1 1 1') == '4'"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3\n1 4 10\n5 2 6\n11 1 3\n\"\"\") == \"9\"\nassert solution(\"\"\"\n3 3\n1 4 10\n5 2 6\n11 1 3\n\"\"\") == \"\"\nassert solution(\"\"\"\n3 4\n2 1 2\n1 1 1\n1 2 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1 1\n3 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 2\n1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\nassert solution('''\n2 2\n1 3 1\n2 1 2\n1 1 1\n''') == '4'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n2 3\n''') == '4'\n\nassert solution('''\n1 2\n2 3\n''') == '0'\n\nassert solution('''\n2 2\n1 1\n''') == '0'\n\nassert solution('''\n3 4\n1 4 10\n5 2 6\n11 1 3\n''') == '9'\n\nassert solution('''\n3 3\n1 4 10\n5 2 6\n11 1 3\n''') == '4'"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3 3\n    1 4 10\n    5 2 6\n    11 1 3\n    ''') == '9'\nassert solution('''\n    3 3\n    1 3 1\n    2 1 2\n    1 1 1\n    ''') == '4'\n''')\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '9'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"9\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6', \"First\"\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3', \"Second\"\nassert solution('''\n4\n2 1 3 4\n1 2\n1 3\n2 4\n''') == '3', \"Third\"\nassert solution('''\n4\n2 1 3 4\n1 2\n1 3\n2 4\n''') == '3', \"Fourth\"\n\n'''\nExplanation\nSample Case 1:\n5\n2 1 3 4\n1 2\n1 3\n3 4\n\nIf we assume that the set of all the jokes the invitees tell (that person $X$ doesn't form a set of consecutive numbers) is {1, 2, 3, 4}, then the number of sets of jokes that we can see is 3.\n\nIn the second case, there is only one set of jokes that contains person $1$ and person $2$. If the set of jokes of person $1$ is {1, 2, 3, 4}, then we only need to consider the set of jokes {1, 3, 4}, {2, 3, 4}.\n\nIf we assume that the set of all the jokes the invitees tell (that person $X$ doesn't form a set of consecutive numbers) is {1, 2, 3, 4}, then the number of sets of jokes that we can see is 2.\n\nIn the third case, there are two sets of jokes that contain person $1$ and person $2$. If the set of jokes of person $1$ is {1, 2, 3, 4}, then we only need to consider the set of jokes {1, 2, 4}.\n\nIn the fourth case, there are two sets of jokes that contain person $1$ and person $2$. If the set of jokes of person $1$ is {1, 2, 3, 4}, then we only need to consider the set of jokes {1, 3, 4}.\n\nFor all the test cases, the number of different sets of jokes that we can see is 2.\n''') == '3', \"Fifth\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '6', \"Wrong answer\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 3 4') == '6'\nassert solution('4 1 3 4') == '2'\nassert solution('3 4 5 6') == '3'\nassert solution('6 7 8 9 10 11') == '10'"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n2 1 3 4\n1 2\n1 3\n3 4\n5 6\n1 2\n1 3\n2 4\n''') == '6'\nassert solution('''\n6\n2 1 3 4\n1 2\n1 3\n3 4\n5 6\n1 2\n1 3\n2 4\n''') == '3'\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '0'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\n\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3'\n\nassert solution('''\n2\n3\n''') == '2'\n\nassert solution('''\n4\n1 2\n1 3\n3 4\n''') == '2'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6'\nassert solution('''4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '3'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"7\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 1 3 4\n1 2\n1 3\n3 4\n''') == '6', 'First'\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n''') == '3', 'Second'\nassert solution('''\n4\n3 4 5 6\n1 2\n1 3\n2 4\n4 5\n''') == '3', 'Third'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 1 3 4\\n1 2\\n1 3\\n3 4\\n\") == \"6\"\nassert solution(\"4\\n3 4 5 6\\n1 2\\n1 3\\n2 4\\n\") == \"3\"\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 3 4') == '6'\nassert solution('4 2 2 2') == '3'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 10\") == \"18\"\nassert solution(\"3\\n17 144\\n121 121\\n89 98\") == \"265\"\nassert solution(\"3\\n6 1\\n20 20\\n7 9\") == \"0\"\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1 10\\n5 8\\n') == '18\\n8\\n'\nassert solution('3\\n17 144\\n121 121\\n89 98\\n') == '265\\n25\\n10\\n'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"18 25 10\""
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 10\n1 2\n''') == '18'\n\nassert solution('''\n2 10\n2 7\n''') == '8'\n\nassert solution('''\n3 10\n1 2\n1 3\n''') == '265'\n\nassert solution('''\n4 10\n1 2\n3 4\n1 2\n3 4\n''') == '25'\n\nassert solution('''\n5 10\n2 6\n4 8\n5 8\n6 7\n''') == '10'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 10\n5 8\n''') == '18'\nassert solution('''\n2 1\n5 8\n''') == '25'\nassert solution('''\n3 1\n17 144\n121 121\n89 98\n''') == '265'\nassert solution('''\n4 2\n17 144\n121 121\n89 98\n''') == '25'\nassert solution('''\n5 2\n17 144\n121 121\n89 98\n''') == '265'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 10\n5 8\n''') == '18'\nassert solution('''\n3\n17 144\n121 121\n89 98\n''') == '265'\nassert solution('''\n4\n0 3\n1 2\n2 3\n3 4\n''') == '5'"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10') == '18'\nassert solution('2 5') == '8'\nassert solution('3 7') == '10'\n\ninput_string = '''\n2\n1 10\n5 8\nSample Output 2:\n265\n25\n10\n'''\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 10\\n5 8\\n') == '18\\n8\\n'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '1 10\\n'\n    '5 8\\n'\n    '17 144\\n'\n    '121 121\\n'\n    '89 98\\n'\n    ) == '265\\n25\\n10'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5 10\n    1 2\n    2 3\n    2 4\n    1 4\n    3 4\n    1 2\n    2 4\n    1 2\n    1 4\n    2 4\n    3 4\n    1 2\n    2 4\n    3 4\n    1 2\n    1 4\n    2 4\n    1 2\n    1 4\n    2 4\n    1 2\n    2 4\n    1 4\n    2 4\n    \"\"\") == \"\"\"5\n    18\n    8\n    \"\"\"\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '0.50000000'\nassert solution('4 3') == '0.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\") == \"0.50000000\"\nassert solution(\"5 5\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"0.5\"\nassert solution(\"5 5\") == \"12.5\""
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\") == \"0.50000000\"\nassert solution(\"5 5\") == \"12.50000000\""
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n0 0\n1 1\n2 1\n1 0\n''') == '0.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\nassert solution('''\n5 5\n1 2\n0 0\n1 1\n2 1\n1 0\n''') == '10.000000000000001'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n0 0\n1 1\n2 1\n1 0\n''') == '0.50000000'\nassert solution('''\n5 5\n0 4\n4 2\n4 1\n3 -1\n-2 4\n''') == '12.50000000'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3\\n0 0\\n1 1\\n2 1\\n1 0') == '0.50000000'\nassert solution('5 5\\n0 4\\n4 2\\n4 1\\n3 -1\\n-2 4') == '12.50000000'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(samples[0]) == \"2\"\nassert solution(samples[1]) == \"1\"\n\nassert solution(\"\"\"\n4 1 3\n0 1\n1 2\n2 3\n1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 0 4\n0 2\n0 1\n2 1\n2 3\n\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\n\nassert solution('''\n4 0 4\n0 2\n0 1\n2 1\n2 3\n\n''') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution(\"\"\"\n4 1 3\n0 1\n1 2\n2 3\n1\n\"\"\") == '2'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 2\") == \"2\"\nassert solution(\"10 1 3\") == \"1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 1 3\\n0 1\\n1 2\\n2 3\\n1') == '2'\nassert solution('4 1 3\\n0 2\\n0 1\\n2 1\\n2 3\\n1') == '1'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '2', \"Should be 2\"\nassert solution('4 1 3') == '1', \"Should be 1\"\nassert solution('4 0 4') == '1', \"Should be 1\"\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1 3\") == \"2\"\nassert solution(\"4 0 4\") == \"1\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n\n'''\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\\n\") == \"6\"\nassert solution(\"2 2 2\\n\") == \"30\"\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 1\n''') == '6'\nassert solution('''\n3 3 3\n''') == '15'\n\nprint(solution('''\n10 10 4\n'''))"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n\n------------------------------------------------------------------------------------------------------------------------------\n\n##Two Sum\n\nYou have an array of integers and also an integer. Write a function that can return an integer that is the difference between the sum of the array and the integer.\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = 2\n\nOutput:\n5\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = 7\n\nOutput:\n6\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -1\n\nOutput:\n0\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -2\n\nOutput:\n4\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -3\n\nOutput:\n1\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -7\n\nOutput:\n5\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -8\n\nOutput:\n0\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = 7\n\nOutput:\n-1\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -9\n\nOutput:\n4\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -10\n\nOutput:\n1\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -11\n\nOutput:\n5\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -12\n\nOutput:\n-6\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -13\n\nOutput:\n-7\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -14\n\nOutput:\n-8\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -15\n\nOutput:\n-9\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -16\n\nOutput:\n-10\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -17\n\nOutput:\n-11\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -18\n\nOutput:\n-12\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -19\n\nOutput:\n-13\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -20\n\nOutput:\n-14\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -21\n\nOutput:\n-15\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -22\n\nOutput:\n-16\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -23\n\nOutput:\n-17\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -24\n\nOutput:\n-18\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -25\n\nOutput:\n-19\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -26\n\nOutput:\n-20\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -27\n\nOutput:\n-21\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -28\n\nOutput:\n-22\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -29\n\nOutput:\n-23\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -30\n\nOutput:\n-24\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -31\n\nOutput:\n-25\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -32\n\nOutput:\n-26\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -33\n\nOutput:\n-27\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -34\n\nOutput:\n-28\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -35\n\nOutput:\n-29\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -36\n\nOutput:\n-30\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -37\n\nOutput:\n-31\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -38\n\nOutput:\n-32\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -39\n\nOutput:\n-33\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -40\n\nOutput:\n-34\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -41\n\nOutput:\n-35\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -42\n\nOutput:\n-36\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -43\n\nOutput:\n-37\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -44\n\nOutput:\n-38\n\nInput:\narray = {1, 2, 3, 4, 5, 6}\nnumber = -45\n\nOutput:\n-39\n\nInput:\narray ="
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1\") == \"6\"\nassert solution(\"2 2 2\") == \"30\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n12\n1212121212\n''') == 'impossible'\nassert solution('''\n2\n1 9999999\n''') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\\n12 5 9\\nSample Input 2:\",\n) == \"impossible\"\n\nassert solution(\n    \"2\\n1 9999999\\nSample Input 2:\",\n) == \"impossible\"\n\nassert solution(\n    \"2\\n2019 2020 2021\\nSample Input 2:\",\n) == \"2019 2020 2021\"\n\nassert solution(\n    \"2\\n0 0 0\\nSample Input 2:\",\n) == \"0 0 0\"\n\nassert solution(\n    \"2\\n12 00000\\nSample Input 2:\",\n) == \"12 00000\""
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 9999999') == 'impossible'\nassert solution('2 10000000') == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 9999999\") == \"impossible\"\nassert solution(\"3\") == \"2021 2020 2020\"\nassert solution(\"5\") == \"2021 2020 2020 2031\"\nassert solution(\"10\") == \"2021 2020 2020 2031 2032 2033 2034 2035\"\nassert solution(\"15\") == \"2021 2020 2020 2031 2032 2033 2034 2035 2036 2037 2038 2039\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 9999999\") == \"impossible\"\nassert solution(\"2 1 9999999\") == \"impossible\"\nassert solution(\"3 1 9999999\") == \"2021 2020 2020\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2021 2020 2020\"\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2020 2020 2020') == '2021 2020 2020'\nassert solution('2\\n1 9999999') == 'impossible'\n\nassert solution('\\n'.join([str(x) for x in range(1, 100)])) == 'impossible'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 9999999') == 'impossible'\nassert solution('2 2') == '2 2'\nassert solution('3 3') == 'impossible'\nassert solution('4 4') == '4 4'"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n2020 2020 2020\n\"\"\") == \"2021 2020 2020\", \"Should be 2021 2020 2020\"\n\nassert solution(\"\"\"3\n20200 2000 2000\n\"\"\") == \"2021 2000 2000\", \"Should be 2021 2000 2000\"\n\nassert solution(\"\"\"5\n2020 2020 2020 2020 2020\n\"\"\") == \"2021 2020 2020 2020 2020\", \"Should be 2021 2020 2020 2020 2020\"\n\nassert solution(\"\"\"5\n2020 2020 2020 2020 2020\n\"\"\") == \"impossible\", \"Should be impossible\"\n\nassert solution(\"\"\"5\n2020 2020 2020 2020 2020\n\"\"\") == \"impossible\", \"Should be impossible\""
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"2021 2020 2020\"\nassert solution(\"4\") == \"2021 2020 2020 2020\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3 4\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"0\"\nassert solution(\"1 2 3 4 5 6\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7\") == \"0\"\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('30 70') == '11'\nassert solution('66 69') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7') == '1'\nassert solution('30 70') == '11'\nassert solution('666 69') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('3 2 1') == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10\\n') == '1\\n'\nassert solution('10\\n100\\n') == '11\\n'\nassert solution('100\\n200\\n') == '2\\n'\nassert solution('10000\\n10000\\n') == '1\\n'\nassert solution('2\\n2\\n') == '1\\n'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('30 70') == '11'\nassert solution('66 69') == '2'"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(samples[0]) == '11'\nassert solution(samples[1]) == '2'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n18\n25''') == '11'\nassert solution('''\n18\n22''') == '6'\nassert solution('''\n23\n6''') == '1'\nassert solution('''\n26\n6''') == '0'\nassert solution('''\n33\n9''') == '0'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"10000 100\") == \"10000\"\nassert solution(\"10000 1\") == \"10000\"\nassert solution(\"10000 2\") == \"99999\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 0\") == \"2\"\nassert solution(\"3 5 1\") == \"4\"\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('7 7 3') == '5'\nassert solution('5 6 0') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 0\\n>@\\n>~\\n') == '2'\nassert solution('3 5 1\\n>>@<<\\n>~#~<\\n') == '4'\n\nassert solution('10 10 0\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\n#~#~#~#\\"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == '2'\n\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n''') == '4'\n\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n''') == 'begin repairs'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 0\n>@\n>~\n''') == '2'\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n''') == '4'\nassert solution('''\n7 5 3\n>>>@<<<\n>#~<\n>>>#~<<\n>>>#~<<\n>~<>\n>~<\n>~<\n>~<\n''') == 'begin repairs'\n\n'''\n    The first line has two integers: $Y$ and $X$ and $x_{init}$, representing the number of rows and columns of the map, and which column the ship is currently placed at. The ship always starts on the bottom row.\n    Then follow $Y$ rows, each with $X$ characters each. All characters $C_{x,y}$ is one of \u2018~\u2019, \u2018#\u2019, \u2018@\u2019, \u2018>\u2019 and \u2018<\u2019. \u2019~\u2019 represents open sea without any currents, \u2018#\u2019 is impassable shallow waters, and \u2018>\u2019 and \u2018<\u2019 are currents moving the boat to the right and left respectively. \u2018@\u2019 represents Lysias\u2019 castle.\n\n    For each $Y$ row, represent the cells of the map as follows:\n    - ```'.'``` represents an open sea,\n    - ```'#'``` represents impassable shallow waters,\n    - ```'>'``` represents a current moving to the right, and\n    - ```'<'``` represents a current moving to the left.\n    The ship starts at the bottom-left corner of the map.\n\n    For example, in the second map:\n\n        +---+---+---+---+---+---+\n        |. |. |. |. |. |. |\n        +---+---+---+---+---+---+\n        |. |. |. |. |. |. |\n        +---+---+---+---+---+---+\n        |. |. |. |. |. |. |\n        +---+---+---+---+---+---+\n        |. |. |. |. |. |. |\n        +---+---+---+---+---+---+\n        |. |. |. |. |. |. |\n        +---+---+---+---+---+---+\n        |. |. |. |. |. |. |\n        +---+---+---+---+---+---+\n\n        The boat is currently at the top-left corner of the map.\n\n    The map is represented in a string of characters with symbols ```'.'``` and ```'#'``` (which represents open sea and impassable shallow water) and ```'>'``` and ```'<'``` (which represents current moving to the right and left respectively).\n    For example, in the third map:\n\n    +---+---+---+---+---+---+\n    |. |. |. |. |. |. |\n    +---+---+---+---+---+---+\n    |. |. |. |. |. |. |\n    +---+---+---+---+---+---+\n    |. |. |. |. |. |. |\n    +---+---+---+---+---+---+\n    |. |. |. |. |. |. |\n    +---+---+---+---+---+---+\n    |. |. |. |. |. |. |\n    +---+---+---+---+---+---+\n    |. |. |. |. |. |. |\n    +---+---+---+---+---+---+\n\n    The boat is currently at the top-right corner of the map.\n    \n    How many distinct paths can you take to get back to the castle?\n\n'''\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2 0\n>@\n>~\n''') == '2'\nassert solution('''\n3 5 1\n>>@<<\n>~#~<\n''') == '4'\nassert solution('''\n20 20 3\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>@<>~#~~~<\n>"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\nassert solution(\"98256=83\") == \"9+8+256=83\"\nassert solution(\"6070=50\") == \"6+0+0+0=50\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\n'''\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n'''\nimport math\n\nstdin = input()"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\nprint('Tests passed!')"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\nprint('Congratulations! All test cases passed!')\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\n--------------------------------------------------\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n143175=120\n''') == '14+31+75=120'\nassert solution('''\n5025=30\n''') == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''143175=120''') == '14+31+75=120'\nassert solution('''5025=30''') == '5+025=30'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"143175=120\") == \"14+31+75=120\"\nassert solution(\"5025=30\") == \"5+025=30\"\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n\n\"\"\""
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n1\\n5\\n2\\n4\\n') == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '1 2'\nassert solution('8\\n1\\n3\\n2\\n4\\n5\\n6\\n7\\n1\\n') == '1 2'\nassert solution('8\\n1\\n3\\n2\\n4\\n5\\n6\\n7\\n1\\n') == '-1'"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '1 2'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2\n4\n1\n5\n2\n4\n1\n''') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n1\\n') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 3\"\nassert solution(\"1 2 3 4\") == \"1 3 4\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1\\n3\") == \"1 2\"\nassert solution(\"4\\n1\\n2\\n3\") == \"-1\"\nassert solution(\"4\\n1\\n2\\n3\") == \"1 2\"\nassert solution(\"6\\n1\\n2\\n3\") == \"-1\"\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8\\n1') == '1 2'\nassert solution('8\\n1\\n2') == '1 2'\nassert solution('8\\n1\\n2\\n3') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n5') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '1 2'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1\n3\n2\n4\n1\n5\n2\n4\n''') == '1 2'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0011\n0110\n1110\n0001\n0101\n0011\n0000\n0101\n0101\n0001\n1111''') == '1'\n\nassert solution('''0101\n1101\n0101\n0001\n0111\n1110\n0110\n0000\n0001\n0001\n0001\n1111''') == '1'\n\nassert solution('''1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111\n1111''') == '3'\n\nassert solution('''1\n0\n0\n1\n0\n1\n0\n1\n1\n1\n1\n1\n1\n1''') == '2'\n\nassert solution('''1\n0\n0\n1\n0\n1\n0\n1\n1\n1\n1\n1\n1\n1''') == '3'"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1101') == '1'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0\n''') == '0', 'First'\n\nassert solution('''\n0\n1\n''') == '1', 'Second'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n11010\n    '''\n) == '0'\n\nassert solution(\n    '''\n11001\n    '''\n) == '1'\n\nassert solution(\n    '''\n11000\n    '''\n) == '1'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1101\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\nassert solution('01') == '0'\nassert solution('00') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\n3 1 3 1\\n2 2 1\\n3 3 1 3\\n1 2\\n2 3\\n3 1\\n') == '1'\nassert solution('5 1\\n1 2 3 4 5\\n2 1 2 3 4\\n3 1 2 3 4\\n4 1 2 3 4\\n5 1\\n') == '3'\nassert solution('7 3\\n1 2 1 3 5 4 6\\n2 3 3 3 1 1 2\\n4 6 5 1 1 2 3\\n6 4 5 1 2 2 3 3\\n6 5 5 5 3 2 2 3\\n') == '1'\nassert solution('5 2\\n3 2 1\\n4 3\\n1 2\\n') == '1'\nassert solution('8 2\\n1 2 3 4 5 6 7 8\\n2 3 4 5 6 7 8 1\\n5 2\\n4 3\\n3 4\\n2 5\\n') == '1'"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '2'\nassert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''\n5 1\n1 2 1 3 1\n2 3 4\n3 5 6\n4 7\n1 8\n3 9\n5 10\n7 11\n4 12\n5 13\n6 14\n8 15\n9 16\n''') == '0'\nassert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1\n''') == '2'"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1\n''') == '0'\n'''"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '1'\nassert solution('2 1') == '0'\nassert solution('3 3') == '2'\nassert solution('3 1') == '1'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3''') == '1'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n''') == '3'\nassert solution('''5 3\n2 4 6 2 1\n7 3 4 2 6 5 6 1\n1 2\n3 1 3 1\n1 2\nSample Input 3:\n7 2\n2 1 6 2 6 3 6\n8 4 7 2 6 1 3\n2 5 4 7\n3 6 2\n7 8\n3 6 2\nSample Output 3:\n1\n0\n3\n''') == '3'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''\n2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1\n''') == '3'\n\nassert solution('''\n2 2\n3 4\n3 4\n''') == '0'"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 3') == '1'\nassert solution('2 5') == '0'\nassert solution('4 1 6 3 6') == '3'\nassert solution('7 3 4 2 6 5 6 1') == '4'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '4.000000'\nassert solution('4 2 3 4') == '3.666666'\n\"\"\"\n\n\"\"\"\n\n3\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n2\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n3\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n4\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n5\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n6\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n7\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n9\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n10\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n11\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n12\n2 4 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n4 2 3 4\n1 2 3 4\n\n\"\"\"\n\nn, k = (int(i) for i in input().split())\na = sorted([int(i) for i in input().split()])\n\nd = []\nfor i in range(0, n):\n    d.append(sum(a[i:i+k])/k)\n\nprint(max(d))\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1.0'\nassert solution('4 2') == '2.5'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0.000000\"\nassert solution(\"1 2 3 4\") == \"4.000000\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"5.333333\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"5.666667\"\nassert solution
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '4.000000'\nassert solution('4 1') == '1.000000'\nassert solution('3 2 4') == '3.666667'\nassert solution('10 10') == '10.000000'\nassert solution('100 100') == '100.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1') == '4.000000'\nassert solution('4 2') == '3.666666'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1\\n1 2 3') == '1.5'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1\n1 2 3 4\n''') == '4.000000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '4.000000'\nassert solution('1 2 3 4 5') == '4.50000'\nassert solution('1 2 3 4 5 6') == '4.50000'\nassert solution('1 2 3 4 5 6 7') == '4.50000'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\") == \"4.000000\"\nassert solution(\"5 2\") == \"3.666666\"\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '4.000000'\nassert solution('2 4 3 4') == '3.666666'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24') == '20.33333'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 5 5\n0.0 0.0\n4.0\n1.0 0.0\n0.0 0.0\n1.0 0.0\n0.0 2.0\n''') == '0.750'\nassert solution('''\n1 2 5 5\n0.0 0.0\n4.0\n1.0 0.0\n0.0 0.0\n1.0 0.0\n0.0 2.0\n''') == '0.625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.625'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"2 2 5 5\") == \"0.625\"\nassert solution(\"2 2 5 5\") == \"0.625\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n\"\"\") == \"0.625\"\nassert solution(\"\"\"\n3 3 4 4\n0.4 1.2 0.5\n0.3 0.6 0.4\n0.5 0.5 0.2\n\"\"\") == \"0.8\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 5 5') == '0.750'\nassert solution('2 2 5 5') == '0.750'\nassert solution('2 2 5 4.5') == '0.750'\nassert solution('2 2 5 6') == '1.625'\nassert solution('2 2 5 5') == '0.750'\n\"\"\"\nimport math"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 5 5') == '0.625'\nassert solution('2 2 5 5') == '0.750'\nassert solution('3 2 5 5') == '0.750'\nassert solution('4 2 5 5') == '0.750'\nassert solution('5 2 5 5') == '0.750'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 5 5\") == \"0.750\"\nassert solution(\"2 2 5 5\") == \"0.625\"\nassert solution(\"3 4 5 1 1\") == \"0.814\"\nassert solution(\"2 2 5 5\") == \"0.875\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0''') == '0.750'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n5.0 1.0\n3.0 2.0''') == '0.250'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n5.0 1.0\n3.0 2.0\n1.0 1.0\n1.0 1.0\n1.0 1.0''') == '0.000'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n5.0 1.0\n3.0 2.0\n1.0 1.0\n1.0 1.0\n1.0 1.0''') == '0.000'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0''') == '0.625'\nassert solution('''2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0''') == '0.625'\n\n\"\"\"\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n5 6\\n3 2\\n0.2 0.2\\n2.5 0.5\\n2.0 2.0') == '0.750'\nassert solution('5 5\\n0.5 0.5\\n1.5 1.5\\n0.5 0.5\\n0.5 0.5\\n1.5 1.5') == '1.000'\nassert solution('8 7\\n0.5 0.5\\n1.5 1.5\\n0.5 0.5\\n0.5 0.5\\n1.5 1.5') == '1.100'"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"2\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n\") == \"2\"\n\nassert solution(\"3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n\") == \"37\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\nassert solution('''\n3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\nassert solution('''\n3 3\n0 0 0 0\n0 2 1 0\n2 1 2 0\n''') == '1'\nassert solution('''\n4 3\n1 3 0 2\n0 3 6 0\n3 0 1 4\n''') == '27'\nassert solution('''\n4 4\n1 3 0 2\n0 0 3 0\n3 0 1 4\n1 1 1 0\n''') == '9'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\nassert solution('''\n5 2\n0 1 5\n2 4 0\n3 0 2\n''') == '1'\nprint(solution('''\n'''))"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == \"37\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 4\\n0 3 6\\n4 0 3\\n') == '2'\nassert solution('3 4\\n2 3 0 7\\n0 0 2 1\\n0 0 3 0\\n') == '37'\n\nstdin = '''5 5\n7 2 5 4 5 7\n4 5 0 5 8\n0 3 6 8 7\n1 7 6 5 0\n0 4 7 7 0\n'''\nassert solution(stdin) == '91'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 4\") == \"2\"\nassert solution(\"3 4\") == \"37\"\nassert solution(\"1 2 5\") == \"1\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n2\n2\n0 2\n0 0 2\n\"\"\",\n    2,\n) == \"37\"\n\nassert solution(\n    \"\"\"\n3\n3\n2 1 3\n0 0 0 3\n1 2 4\nSample Output 3:\n5\n\nSample Input 4:\n2\n3\n0 2 0 0\n1 1 1 1\nSample Output 4:\n1\n\nSample Input 5:\n3\n3\n2 2 2\n0 0 0 2\n0 0 3 0\nSample Output 5:\n2\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n1 2 4\n0 3 6''') == \"2\"\nassert solution('''3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0''') == \"37\"\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n4 3\n1234\n1 4\n1 4\n1 4\n\"\"\") == \"\"\"10\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 3\n1234\n1 4\n1 4\n1 4\n\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"\n4 4\n1234\n1 1\n1 2\n1 3\n1 4\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('4') == '1 1 2 2'\nassert solution('4 4') == '1 4 3 4'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\\n1234\\n1 4\\n1 4\\n1 4\") == \"10\\n14\\n18\\n\"\nassert solution(\"4 4\\n1234\\n1 1\\n1 2\\n1 3\\n1 4\") == \"1\\n4\\n9\\n16\\n\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1234\n1 4\n1 4\n1 4\n''') == '10'\nassert solution('''4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == '1 4'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1234\n1 4\n1 4\n1 4\n1 4''') == '10'\nassert solution('''10 10\n1234\n1 4\n1 4\n1 4\n1 4\n1 4\n1 4''') == '14'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"10\"\nassert solution(\"4 3\") == \"10\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1234\n1 4\n1 4\n1 4\n''') == '10\\n14\\n18\\n', 'Error in first example'\nassert solution('''4 4\n1234\n1 1\n1 2\n1 3\n1 4\n''') == '1\\n4\\n9\\n16\\n', 'Error in second example'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '1'\nassert solution('4 3') == '10'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 2 4\\n1 3\\n3 4\\n2 4\\n4 5\"\n) == \"1\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4\n''') == '2'\n\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\n\nassert solution('''10 2 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35\n35 36\n36 37\n37 38\n38 39\n39 40\n40 41\n41 42\n42 43\n43 44\n44 45\n45 46\n46 47\n47 48\n48 49\n49 50\n50 51\n51 52\n52 53\n53 54\n54 55\n55 56\n56 57\n57 58\n58 59\n59 60\n60 61\n61 62\n62 63\n63 64\n64 65\n65 66\n65 67\n66 68\n66 69\n66 70\n66 71\n66 72\n66 73\n66 74\n65 75\n65 76\n64 77\n63 78\n62 79\n61 80\n60 81\n59 82\n58 83\n57 84\n56 85\n55 86\n54 87\n53 88\n52 89\n51 90\n50 91\n49 92\n48 93\n47 94\n46 95\n45 96\n44 97\n43 98\n42 99\n41 100\n40 101\n39 102\n38 103\n37 104\n36 105\n35 106\n34 107\n33 108\n32 109\n31 110\n30 111\n29 112\n28 113\n27 114\n26 115\n25 116\n24 117\n23 118\n22 119\n21 120\n20 121\n19 122\n18 123\n17 124\n16 125\n15 126\n14 127\n13 128\n12 129\n11 130\n10 131\n9 132\n8 133\n7 134\n6 135\n5 136\n4 137\n3 138\n2 139\n1 140\n''') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 5 2\") == \"1\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"5 2 4\") == \"2\"\nassert solution(\"5 5 5\") == \"3\"\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 3') == '1'\nassert solution('5 2 4') == '1'\nprint(solution(open(\"sample.in\")))\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\nassert solution('''\n4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2 2\n1 3\n3 4\n2 4\n4 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10 2 7\n1 2\n1 3\n2 3\n2 5\n3 4\n3 6\n4 5\n4 7\n5 6\n6 7\n6 8\n7 9\n7 10\n8 9\n8 10\n9 10\n10 9\n10 10\n\"\"\") == \"2\""
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2 5\n1 2\n1 3\n2 3\n3 4\n4 5''') == '1'\nassert solution('''4 3 4\n1 2\n2 3\n3 4\n4 5''') == '1'\nassert solution('''4 5 5\n1 2\n2 3\n3 4\n4 5''') == '0'\nassert solution('''2 4\n1 2\n2 3\n3 4''') == '1'\nassert solution('''3 4\n1 2\n2 3\n3 4''') == '0'"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0 10000\\nSample Output 1:\") == 'no'\nassert solution(\"2\\n9996 0 9997 0 0 1\\n9999 0 10000 0 0 1\\n2\\n9997 0 9998 0 0 1\\n9998 0 9999 0 0 1\\nSample Output 2:\") == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"yes\"\nassert solution(\"2\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'no'\nassert solution('3') == 'yes'\nassert solution('4') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n0 0 0 0 0 0\n1\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n''') == 'no'\n\nassert solution('''\n1\n0 0 0 0 0 0\n1\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n''') == 'yes'\n\nassert solution('''\n2\n9996 0 9997 0 0 1\n9999 0 10000 0 0 1\n2\n9997 0 9998 0 0 1\n9998 0 9999 0 0 1\n''') == 'yes'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n''') == 'no'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10000 0 10000 10000 0 10000\\n3\\n10000 0 10000 10000 5000 5000\\n5000 5000 10000 10000 0 10000\\n0 0 0 1000 1000 0 10000\\nSample Output 1:\nyes\\n\nSample Output 2:\nno\\n\n\"\"\""
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0\n\"\"\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"no\"\nassert solution(\"2\") == \"no\"\nassert solution(\"3\") == \"no\"\nassert solution(\"4\") == \"yes\"\nassert solution(\"5\") == \"yes\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n10000 0 10000 10000 0 10000\n3\n10000 0 10000 10000 5000 5000\n5000 5000 10000 10000 0 10000\n0 0 0 1000 1000 0 10000\n\"\"\") == \"no\"\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'no'\nassert solution('3') == 'yes'\nassert solution('4') == 'yes'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"YES\\n1 3\\n2 1\"\nassert solution(\"4 3\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"4 3\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'YES'\nassert solution('5 2\\n1 2\\n3 4\\n5 5\\n') == 'NO'\nassert solution('5 4\\n2 3\\n4 1\\n3 2\\n') == 'NO'\nassert solution('5 5\\n3 1\\n2 4\\n4 5\\n') == 'YES'\nassert solution('5 5\\n3 1\\n2 4\\n4 5\\n') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"1 3\") == \"YES\"\nassert solution(\"1 4\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\n\nsolution('''\n3 3\n1 2\n2 3\n1 3\n''') == \"YES\"\n\nsolution('''\n4 3\n1 2\n1 3\n1 4\n''') == \"NO\"\n\nsolution('''\n10 10\n10 20\n1 1\n2 1\n1 2\n1 3\n2 3\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == \"YES\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3\n1 2\n2 3\n1 3\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4 3\n1 2\n1 3\n1 4\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n1 4\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 2\n2 3\n1 3\n''') == 'YES\\n1 3\\n2 1\\n3 2\\n'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'NO\\n'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'YES'\nassert solution('3 3') == 'YES'\nassert solution('2 2') == 'NO'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n1 2\n2 3\n1 3\n''') == 'YES'\nassert solution('''\n3 3\n1 2\n2 3\n1 3\n''') == 'NO'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'NO'"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'inconsistent'\nassert solution('5 5') == 'consistent'"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'inconsistent'\nprint(solution())"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'inconsistent'\nassert solution() == 'inconsistent'\nassert solution() == 'consistent'\nassert solution() == 'inconsistent'\nassert solution() == 'inconsistent'\n\"\"\"\n\nn, m = map(int, input().split())\n\nmatches = []\n\nfor i in range(m):\n    k, l = map(int, input().split())\n    matches.append([k, l])\n\nfor i in range(m):\n    s = input()\n    if s == \"=\":\n        matches.append([matches[i][0], matches[i][1]])\n\nmatch_set = set()\n\nfor i in range(len(matches)):\n    match_set.add(matches[i][0])\n    match_set.add(matches[i][1])"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'consistent'\nprint(solution('''7 7\n0 = 1\n1 = 2\n3 = 4\n0 = 3\n5 > 4\n4 = 4\n6 > 7'''))\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n1 2\n1 3''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\nSample Output 3:\nconsistent\n''') == 'consistent'\n\n\"\"\"\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n0 = 1\n1 = 2\n2 = 3\n0 > 2\n1 > 3\n''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n2 = 3\n3 = 4\n0 > 2\n1 > 4\n2 > 3\n''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n\"\"\"\n--- Day 3: Toboggan Trajectory ---\nWith the toboggan login problems resolved, you set off toward the airport. While travel by toboggan might be easy, it's certainly not safe: there's very minimal steering and the area is covered in trees. You'll need to see which angles will take you near the fewest trees.\n\nDue to the local geology, trees in this area only grow on exact integer coordinates in a grid. You make a map (your puzzle input) of the open squares (.) and trees (#) you can see. For example:\n\n..##.......\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n0 > 1\n1 = 2\n0 = 2''') == 'inconsistent'\nassert solution('''5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4''') == 'consistent'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n\") == '1.57079633'\nassert solution(\"2\\n0 0 0\\n1 0 10\\n0 0 1\\n\") == '0.7853981633974483'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.000000'\nassert solution('2') == '0.785398'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1.57079633'\nassert solution('4') == '1.57079633'\nassert solution('10') == '41938.65135885'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1.57079633'\nassert solution('4') == '1.57079633'\nassert solution('5') == '1.57079633'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\nassert solution('''\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n''') == '1.57079633'\n\nassert solution('''\n5\n1 2 1\n0 1 2\n0 2 1\n1 0 2\n2 1 0\n''') == '28.130095642578125'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n1 0 0\n1 1 0\n0 0 0\n0 0 1\n\"\"\") == \"1.57079633\"\nassert solution(\"\"\"\n3\n0 0 0\n1 1 1\n0 0 0\n\"\"\") == \"3.1415926536\"\nassert solution(\"\"\"\n8\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n\"\"\") == \"6.283185307179586\"\nassert solution(\"\"\"\n4\n0 0 0\n1 1 0\n0 0 0\n0 0 1\n\"\"\") == \"0.384615384615385\"\n\nprint(\"All Tests Passed\")\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n') == '1.57079633'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n') == '1.57079633'\nassert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n') == '41938.65135885'\nassert solution('3\\n3 -10 -10\\n-10 3 10\\n10 -10 3\\n3 -10 -10\\n') == '1.57079633'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1.57079633'\nassert solution('4') == '1.57079633'\nassert solution('2') == '0.7853981633974483'\nassert solution('1,2') == '0.7853981633974483'\nassert solution('1,2,3') == '0.7853981633974483'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n') == '1.57079633'\nassert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n') == '41938.65135885'\nassert solution('6\\n0 0 0\\n0 0 0\\n0 0 1\\n0 0 0\\n0 1 0\\n0 0 0\\n') == '0.3060679775'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"s\") == \"s\"\nassert solution(\"a\") == \"a\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"aaaaaaaaaa\") == \"aaaaaaaaaa\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '3'\nassert solution('18') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"1\"\nassert solution(\"abcdefgh\") == \"2\"\nassert solution(\"abcabc\") == \"2\"\nassert solution(\"abcabcabc\") == \"2\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '5'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11\\nabc') == '3'\nassert solution('18\\ntrutrutiktiktappop') == '4'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == '1'\nassert solution('11') == '2'\nassert solution('10') == '2'\nassert solution('9') == '2'\nassert solution('8') == '1'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"18\") == \"4\"\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\nabcabc\n''') == '1'\nassert solution('''\n11\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\n''') == '2'\nassert solution('''\n11\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\n''') == '2'\nassert solution('''\n11\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\nabcabc\n''') == '1'\n\n'''"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == 'huge'\nassert solution('5') == 'huge'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 3 1\\n3 1 2') == '2'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2') == '5'\nassert solution('12\\n12 12 12 12 12 12\\n12 12 12 12 12 12') == 'huge'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"huge\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '5'\nassert solution('''\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '6'\nassert solution('''\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '6'\nassert solution('''\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n''') == '6'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2 3\\n3 1 2\\n\") == \"2\"\nassert solution(\"6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n\") == \"5\"\nprint(solution(*[input() for _ in range(3)]))\n\n---Input---\n5\n3 1 6 3 2 4\n4 6 5 1 3 2\n----Output---\n2\n\n---Input---\n6\n5 1 6 3 2 4\n4 6 5 1 3 2\n----Output---\n5\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == 'huge'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('10') == 'huge'\nassert solution('6') == '5'\nassert solution('99999') == 'huge'\nassert solution('123') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"huge\"\nassert solution(\"1\") == \"huge\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3 1\\n3 1 2\\n') == '2'\nassert solution('6\\n5 1 6 3 2 4\\n4 6 5 1 3 2\\n') == '5'\nprint('PASSED!')"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"7\""
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n0 10 20\n0 10\n''') == '4'\nassert solution('''\n6 1\n0 10 20 26 40 50\n0 40\n''') == '9'\n\nprint(solution('''\n3 1\n0 10 20\n0 10\n'''))\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n0 10 20\n0 10\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n0 10 20\n0 20\n0 10\"\"\") == \"7\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4') == '4'\nassert solution('6 1\\n0 10 20\\n0 40\\n0 50') == '9'"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n0 10 20\n0 10\nSample Input 3:\n1 1\n0 10\nSample Output 3:\n0\n''') == '0'\n\nassert solution('''\n2 2\n0 10 20\n0 10\nSample Input 4:\n2 2\n0 10\n0 10\nSample Output 4:\n1\n''') == '1'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '4'\nassert solution('6 1') == '9'\n\nstdin = '''3 1\n0 10 20\n0 10\n'''\nprint(solution(stdin))\n\nstdin = '''6 1\n0 10 20 26 40 50\n0 40\n'''\nprint(solution(stdin))\n\nstdin = '''7 1\n0 0 1 2 3 4 5 6\n0 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1\n'''\nprint(solution(stdin))\n\nstdin = '''3 1\n0 10 20\n0 10\n'''\nprint(solution(stdin))"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 1\n0 10 20\n0 10\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6 1\n0 10 20 26 40 50\n0 40\n\"\"\") == \"9\"\nassert solution(\"\"\"\n6 1\n0 10 20\n0 40\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1\\n0 10 20\\n0 10') == '4'\nassert solution('6 1\\n0 10 20\\n0 40') == '9'\nassert solution('3 1\\n0 10 20\\n0 10') == '4'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 1\n0 10 20\n0 10\n\"\"\") == \"4\"\nassert solution(\"\"\"2 1\n0 10\n1 20\n\"\"\") == \"10\"\nassert solution(\"\"\"3 1\n0 10\n0 10\n\"\"\") == \"10\"\nassert solution(\"\"\"3 2\n0 10\n0 20\n\"\"\") == \"20\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''concat(shuffle([1,2]),shuffle([1,2]))''') == 'not equal'\nassert solution('''shuffle([1,2,1,2])''') == 'equal'\nassert solution('''shuffle([1,2,1,2])''') == 'equal'\nassert solution('''sorted(concat([3,2,1],[4,5,6]))''') == 'equal'\nassert solution('''sorted(concat([3,2,1],[4,5,6]))''') == 'not equal'''\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'not equal'\nassert solution('concat([3,2,1],[4,5,6])') == 'equal'\nassert solution('sorted([1,2,3,4,5,6])') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\nassert solution(\"shuffle([1,2,1,2])\") == \"equal\"\nassert solution(\"sorted(concat([3,2,1],[4,5,6]))\") == \"equal\""
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\n\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"concat(shuffle([1,2]),shuffle([1,2]))\"\n) == \"not equal\"\nassert solution(\n    \"sorted(concat([3,2,1],[4,5,6]))\"\n) == \"equal\"\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('concat(shuffle([1,2]),shuffle([1,2]))') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\nassert solution('sorted(concat([3,2,1],[4,5,6]))') == 'equal'\n\"\"\"\n\n\nimport math\nimport sys\nimport random\n\n\nclass Balloon:\n    def __init__(self, nums):\n        self.nums = nums\n        self.size = len(nums)\n        self.concat_size = 0\n        self.shuffle_size = 0\n\n    def __repr__(self):\n        return str(self.nums)\n\n    def __eq__(self, other):\n        return self.nums == other.nums\n\n    def __hash__(self):\n        return hash(self.nums)\n\n    def __len__(self):\n        return len(self.nums)\n\n    def __str__(self):\n        return str(self.nums)\n\n    def __iter__(self):\n        return iter(self.nums)\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('concat([3,2,1],[4,5,6])') == 'not equal'\nassert solution('shuffle([1,2,1,2])') == 'equal'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"concat(shuffle([1,2]),shuffle([1,2]))\") == \"not equal\"\n\n'''\nfrom typing import List\nfrom random import randint\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 2\n3 2 1 2\n2 3 1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n3 2 1 2\n2 3 1 2\n\"\"\") == \"Oh no\"\nassert solution(\"\"\"\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('1 3') == '1'\nassert solution('3 2') == '1'\n\"\"\"\nimport math\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2''') == 'Oh no'\nassert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('3 2') == '1'\nassert solution('1 2 1 2') == '1'\nassert solution('2 3 1 2') == '1'"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n3 2\n1 2 1 2\n2 3 1 2''') == '1'\nassert solution('''1 3\n3 2\n1 2 1 2\n2 3 1 2''') == '2'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n3 2\n1 2 1 2\n2 3 1 2\n''') == 'Oh no'\nassert solution('''\n1 3\n3 2\n1 2 1 2\n2 3 1 2\n''') == '1'\nprint('All test cases passed!')"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == \"Oh no\"\nassert solution(sample_input_2) == \"1\""
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 2\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"1\"\nassert solution(\"\"\"1 3\n3 2\n1 2 1 2\n2 3 1 2\"\"\") == \"Oh no\"\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '1'\nassert solution('3 2') == 'Oh no'"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"3\"\nassert solution(\"10 10\") == \"impossible\"\nprint('All tests passed!')\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4, 4], [(1, 2, 2), (2, 3, 1), (3, 4, 1), (4, 1, 2)]) == \"3\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == \"3\"\nassert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == \"impossible\"\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == '3'\nassert solution('3 2 1\\n1 2 2\\n1 2 1\\n1 2 3\\n1 5 1\\n4 5 2') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '3'\nassert solution('4 4') == 'impossible'"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == '3'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n1 2 1\n2 3 1\n2 4 1\n2 5 1\n4 5 1\n''') == '3'\nassert solution('''\n4 4\n1 2 2\n2 3 1\n3 4 1\n4 1 2\n''') == 'impossible'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1') == 'impossible'\nassert solution('4 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2') == '3'\nassert solution('4 4\\n1 2 1\\n2 3 1\\n3 4 1\\n4 1 2') == 'impossible'\nprint('All tests passed')\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n1 2 2\\n2 3 1\\n3 4 1\\n4 1 2\\n\") == \"3\"\nassert solution(\"5 5\\n1 2 1\\n2 3 1\\n2 4 1\\n2 5 1\\n4 5 1\\n\") == \"impossible\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 1 1 3\n''') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('22') == '4'"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 1 1 1 3\n    \"\"\"\n    ) == \"2\"\n    assert solution(\n    \"\"\"\n    1\n    22\n    \"\"\"\n    ) == \"4\"\n    assert solution(\n    \"\"\"\n    22\n    \"\"\"\n    ) == \"\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"22\") == \"4\"\nassert solution(\"1 2 1 2 3\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 1 1 1 3\") == \"3\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n2 1 1 1 3\"\"\") == \"2\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n1\n1''') == '2'\nassert solution('''4\n5\n2\n3\n4\n3''') == '4'\nassert solution('''5\n3\n4\n2\n3''') == '4'\nassert solution('''1\n1\n1''') == '1'\nassert solution('''10\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2''') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution('\"This is a very long string\"') == '2'\nassert solution('\"''This is a very long string''\"') == '3'\nassert solution('\"'''This is a very long string'''''') == '4'\nassert solution('\"This is a very long string.\"') == '2'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"22\") == \"22\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 1 5\\n') == '3'\nassert solution('4\\n1 2 3 4\\n') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3 4') == '2'"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('7') == '1'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\nassert solution(input) == '3'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 1 5\n''') == '3'\nassert solution('''\n4\n1 2 3 4\n''') == '2'\nassert solution('''\n5\n2 1 3 4 5\n''') == '1'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '1'\nassert solution('''\n10\n2 1 3 4 5 6 7 8 9 10\n''') == '2'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_sample_1) == stdout_sample_1\nassert solution(input_sample_2) == stdout_sample_2\n\ninput:  [[3, 1, 5],\n    [1, 2, 3, 4]]\n\noutput: 2\n'''\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\"\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a+b-c') == '- +d-', \"Wrong!\"\nassert solution('a-b+d-c') == '+ -d+', \"Wrong!\"\nassert solution('knuth-morris-pratt') == '<any> <empty>', \"Wrong!\"\n\"\"\""
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == \"<empty>\"\n'''\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '<empty>', 'Empty'\nassert solution('abbcd') == '-abc+d-', 'Abc+d-C'\nassert solution('a+b+c') == '+a-b-c+', 'ABC+'\nassert solution('aa+bb') == '<any> <empty>', 'AA+BB'\nassert solution('a-b-c') == '<any> <empty>', 'A-B-C'\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a+b-c') == '- +d-', 'First'\nassert solution('a-b+d-c') == '- +d-', 'Second'\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''knuth-morris-pratt\nknuthmorrispratt''') == '<empty> <empty> <any> <any> <any> <any> <empty> <empty> <any> <any> <empty> <any> <any> <empty> <any> <empty> <any> <any> <any> <any> <empty> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <any> <"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"a+b-c\") == \"- +d-\", \"First\"\nassert solution(\"a-b+d-c\") == \"+ -d-\", \"Second\""
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''k+n+m+m+r''') == '<empty>'\nassert solution(\n'''k-n-m-m-r''') == '<any> <empty>'\n'''\nassert solution(\n'''k+n+m+m+r''') == '<empty>'\nassert solution(\n'''k-n-m-m-r''') == '<any> <empty>'\n'''"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\na+b-c\na-b+d-c\n''') == '- +d-', \"Wrong answer\"\nassert solution('''\na+b-c\na-b+d-c\n''') == '+ +d-', \"Wrong answer\"\nassert solution('''\nknuth-morris-pratt\nknuthmorrispratt\n''') == '<empty>', \"Wrong answer\"\n'''\n)\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"- +d-\", \"Should return minus plus\"\nassert solution(input()) == \"<any> <empty>\", \"Should return anything\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 0') == '1'\nassert solution('3 2') == '3'\nassert solution('3 1') == '2'\nassert solution('3 3') == '4'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"7\"\nprint(solution())"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"7\\n6\\n4\\n3\""
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 0') == '1'\nassert solution('3 1') == '2'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0\\n1\\n3'\nassert solution('''\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11\\n6\\n5\\n9\\n4\\n3'"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1 1\\n0\\n7\\nt 0\") == \"0\"\nassert solution(\n    \"3 0\\n2 6 6\\n10\\nt 1\\nt 2\\nt 3\\nt 4\\nt 5\\nt 6\\nt 7\\nt 8\\nt 9\\nt 10\") == \"11\"\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3 7 9 9 9 10'\nassert solution('1 1') == '0'"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n\"\"\") == \"11\""
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0'\nassert solution('3 0') == '1'\nassert solution('3 1') == '2'\nassert solution('3 2') == '3'\nassert solution('3 3') == '5'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2'\nassert solution('''\n7 6\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '4 6'\nassert solution('''\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n''') == '0'"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 8') == '2'\nassert solution('5 6') == '4 6'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 8') == '2'\nassert solution('5 6') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6') == '0'\nassert solution('10 10\\n1 2 2\\n2 3 2\\n3 4 2\\n4 5 2\\n5 6 2\\n5 7 1\\n6 7 1\\n6 8 1\\n7 8 1\\n7 9 1\\n8 9 1\\n8 10 1\\n9 10 1') == '2 4 6 7 8'\nassert solution('10 10\\n1 2 2\\n2 3 2\\n3 4 2\\n4 5 2\\n5 6 2\\n6 7 1\\n6 8 1\\n7 8 1\\n7 9 1\\n8 9 1\\n8 10 1\\n9 10 1') == '0'\nassert solution('6 6\\n1 2 2\\n2 3 2\\n3 4 2\\n4 5 2\\n5 6 2\\n1 5 6\\n6 7 2\\n6 8 1\\n7 8 1\\n7 9 1\\n8 9 1\\n8 10 1\\n9 10 1') == '0'\nassert solution('7 6\\n1 2 2\\n2 3 2\\n3 4 2\\n4 5 2\\n5 6 2\\n1 5 6\\n6 7 2\\n6 8 1\\n7 8 1\\n7 9 1\\n8 9 1\\n8 10 1\\n9 10 1') == '1 4 6 7 8'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1''') == '2 4 6'''"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\\n\") == \"0\"\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 7\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\") == \"2 4 6\"\nassert solution(\"5 6\\n1 2 2\\n2 3 2\\n3 5 2\\n1 4 3\\n4 5 3\\n1 5 6\") == \"0\""
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 8') == '2'\nassert solution('5 6') == '0'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 8\n1 2 2\n1 3 1\n1 4 3\n2 6 1\n2 7 2\n3 5 1\n4 7 2\n5 7 1\n''') == '2'\nassert solution('''\n5 6\n1 2 2\n2 3 2\n3 5 2\n1 4 3\n4 5 3\n1 5 6\n''') == '0'\n\n\"\"\""
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n') == '0'\nassert solution('7 8\\n1 2 2\\n1 3 1\\n1 4 3\\n2 6 1\\n2 7 2\\n3 5 1\\n4 7 2\\n5 7 1\\n') == '2 4 6'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n12\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4 5 6 1 2 3'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n''') == '1 2 3 1 2 3'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3') == '4\\n5\\n6'\nassert solution('6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3') == '1\\n2\\n3'\nassert solution('6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3') == '1\\n2\\n3'\nassert solution('6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3') == '1\\n2\\n3'\nassert solution('6\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3') == '1\\n2\\n3'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '1'\nassert solution('''4\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6''') == '2'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n''') == '4'\n\nassert solution('''\n5\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n''') == '5'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n''') == '1'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '2'"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '4'\nassert solution('1 2') == '5'\nassert solution('1 3') == '6'\nassert solution('1 1') == '4'\nassert solution('1 2') == '5'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == '4'\nassert solution('6') == '1 2 3'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '4'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n10\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n3 1\n3 2\n3 3\n3 4\n3 5\n3 6\n4 1\n4 2\n4 3\n4 4\n4 5\n4 6\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1\\n1 2\\n1 3\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n') == '4\\n5\\n6\\n1\\n2\\n3\\n1\\n2\\n3\\n'\nprint(solution(input()))"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nprint(solution(input()))\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('CCCC') == '0'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\nassert solution(\"PAAA\") == \"0\"\nassert solution(\"PPP\") == \"0\"\nassert solution(\"PAP\") == \"0\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('CPCP') == '1'\nassert solution('PPPPCCCC') == '8'\nprint('All test cases passed!')\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CPCC\") == \"1\"\nassert solution(\"PPPPCCCC\") == \"8\"\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\nprint('Congratulations! Your solution is correct.')\n\nIn the first sample the minimum steps for sorting $s$ are:\n- 1, because we take the first and second items out of the sequence and put them back into the original order.\n- 2, because we take the second and third items out of the sequence and put them back into the original order.\n- 4, because we take the third and fourth items out of the sequence and put them back into the original order.\n- 5, because we take the fourth and fifth items out of the sequence and put them back into the original order.\n- 7, because we take the fifth and sixth items out of the sequence and put them back into the original order.\n- 9, because we take the sixth and seventh items out of the sequence and put them back into the original order.\n- 11, because we take the seventh and eighth items out of the sequence and put them back into the original order.\n- 13, because we take the eighth and ninth items out of the sequence and put them back into the original order.\n\nIn the second sample, the minimum steps are:\n- 8, because we take the first and second items out of the sequence and put them back into the original order.\n- 4, because we take the second and third items out of the sequence and put them back into the original order.\n- 2, because we take the third and fourth items out of the sequence and put them back into the original order.\n- 1, because we take the fourth and fifth items out of the sequence and put them back into the original order.\n- 5, because we take the fifth and sixth items out of the sequence and put them back into the original order.\n- 7, because we take the sixth and seventh items out of the sequence and put them back into the original order.\n- 9, because we take the seventh and eighth items out of the sequence and put them back into the original order.\n- 11, because we take the eighth and ninth items out of the sequence and put them back into the original order.\n'''"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1\\n1 3\\n2 3\\n2\\n') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3\\n') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2 1\n1 3\n2 3\n2''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3''') == '1 2 3'\nassert solution('''3 2 1\n1 3\n2 3\n3''') == '1 2 3'"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 2 1\n1 3\n2 3\n3\n\"\"\") == \"1 3 2\"\nassert solution(\"\"\"3 2 1\n1 3\n2 3\n3\n\"\"\") == \"3\"\nassert solution(\"\"\"3 3 1\n1 3\n2 3\n3\n\"\"\") == \"1 3\"\nassert solution(\"\"\"3 2 2\n1 2\n1 3\n2 3\n3\n\"\"\") == \"1 2 3\"\nassert solution(\"\"\"3 2 2\n1 2\n1 3\n2 3\n3\n\"\"\") == \"1 2 3\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1\\n1 3\\n2 3\\n2') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 1\n1 2\n2 3\n2\n''') == '1 2 3'\nassert solution('''\n1 2 1\n1 3\n2 3\n3\n''') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1') == '1 3'\nassert solution('3 2 1') == '1 2 3'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '1 2 3'\nprint(solution(input_))\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 2\n2 3\n2\"\"\") == \"1 2 3\"\nassert solution(\"\"\"\n3 2 1\n1 2\n1 3\n1\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2 1\n1 3\n2 3\n3\"\"\") == \"2 3\"\nassert solution(\"\"\"\n3 2 1\n1 2\n2 3\n1\"\"\") == \"3\"\nassert solution(\"\"\"\n3 2 1\n1 2\n2 3\n1\"\"\") == \"2\"\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 1\\n1 2\\n2 3') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3') == '1 2 3'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1') == '4'\nassert solution('3\\n2 4 3') == '8'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '39', 'First'\nassert solution('5 1') == '4', 'Second'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '39'\nassert solution('5 1') == '4'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n2 4 2 3 4\") == \"39\"\nassert solution(\"5 1\\n1 0 1 1 1\") == \"4\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == \"3\"\nassert solution('5 3') == \"39\"\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n2 4 2 3 4\n''') == '39'\nassert solution('''\n5 1\n1 0 1 1 1\n''') == '4'"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n2 4 2 3 4') == '39'\nassert solution('10 1\\n3 1 3 3 3 3') == '6'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n') == '39'\nassert solution('5 1\\n') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '39'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n2 4 2 3 4\n''') == '39'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\nx.\\nxxx\\n') == '1 1 2'\nassert solution('4 6\\nx.x.x.x\\nxx.xx.x.x\\nxxx.xx.x.x\\nxxx.xxx.x.x\\n') == '1 1 2'\n\"\"\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1 1 2\\n2 4 3\\n\""
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '1 1 2'\nassert solution('4 6') == '1 1 2'\n\"\"\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\nxx.\nxxx\n...\n''') == '1 1 2'\n\nassert solution('''\n4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 1 2'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"2\nxx.\nxxx\n\"\"\") == \"\"\"1 1 2\"\"\"\nassert solution(\n\"\"\"3\nxx.\nxxx\n...\n\"\"\"\n) == \"\"\"2 3 1\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"1 1 2\"\nassert solution(\"4 6\") == \"1 1 2\"\nassert solution(\"100 100\") == \"1 1 1\""
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1 1 2'\nassert solution('4 6') == '1 2 3'\n\"\"\""
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1 1 2'\nassert solution('4 6') == '1 1 2'"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1 1 2'\nassert solution('4 6') == '1 1 2'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1 1 2'\nassert solution('4 6') == '1 4 3'\nassert solution('5 5') == '1 4 2'\nassert solution('10 10') == '1 1 2'\nassert solution('100 100') == '1 1 2'"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == 'indistinguishable'\nassert solution('2 0 1') == '1'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 2') == \"indistinguishable\"\nassert solution('2 0 1') == \"0\""
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n\"\"\") == \"indistinguishable\"\nassert solution(\"\"\"\n2 0 1\n1 1 1\n0 0 0\nSample Output 3:\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 1 0\n1 1 1\n0 0 0\nSample Output 4:\n\"\"\") == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0\\n') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 2\n1 2 1\n0 2 0\n0 1 0\n''') == '0'\n\nassert solution('''\n2 0 1\n1 1 1\n0 0 0\n''') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\nassert solution('2 0 1') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 2 3\n1 2 1\n1 3 2\n1 3 1\n1 4 2\n1 4 1\n\"\"\") == \"indistinguishable\"\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\nassert solution('2 0 1') == '0'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 2\\n1 2 1\\n0 2 0\\n0 1 0') == '0'\nassert solution('3 2 1\\n1 1 1\\n0 1 0\\n0 0 0') == 'indistinguishable'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 2') == \"indistinguishable\"\nassert solution('2 0 1') == \"0\"\nassert solution('0 0 0') == \"indistinguishable\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\nassert solution('0') == '-1'"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\", \"Should be 0\"\nassert solution(\"1\") == \"1\", \"Should be 1\"\nassert solution(\"0101\") == \"1011\", \"Should be 1011\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"0\") == \"-1\"\n\"\"\"\nfrom itertools import product\nfrom math import log2\n\nfrom utils import timeit\n\n\n@timeit\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"\") == \"-\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0110\n1001''') == '1111'\nassert solution('''0''') == '-1'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '-1'\nassert solution('1') == '1111'"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0110\") == \"1111\"\nassert solution(\"1001\") == \"0111\"\nassert solution(\"\") == \"-1\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10000\n    +0000''') == '+0000'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10000\") == \"+0000\"\nassert solution(\"1111\") == \"+000-\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-', solution('1111')\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1111') == '+000-', 'WRONG'\nassert solution('-1000') == '+-00-', 'WRONG'\nassert solution('0101') == '+--0-', 'WRONG'\nassert solution('+-1000') == '+--+--', 'WRONG'"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n0\\n-1\\n-1') == '+-0-0'\nassert solution('11\\n1\\n1\\n-1\\n-1') == '+-0-0'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"1-0-0-1-1\"\nassert solution(\"1\") == \"0-1\"\nassert solution(\"100\") == \"0-1-0\"\nassert solution(\"101\") == \"1-0-1\"\nassert solution(\"01010\") == \"0-1-0-0-1-1\"\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == '+000'\nassert solution('-1000') == '-+00'\nassert solution('+000') == '+0000'\nassert solution('+-10') == '-0010'\nassert solution('+-11') == '-0111'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1010\n10001''') == '+010+'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 8 3 2') == \"9\"\nassert solution('2 1 1 1') == \"2\"\nassert solution('4 4 1') == \"4\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n3 3 1 1\n3 2\n1 2 1\n1 3 1\n2 4 1\n''') == '3'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 8 3 2') == '9'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == \"8\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 8 3 2\") == \"9\"\nassert solution(\"10 4 1 2\") == \"4\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 8 3 2') == '9'\nassert solution('7 9 2 3') == '11'\nassert solution('7 8 3 2') == '9'"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2 1 2\") == \"3\"\nassert solution(\"2 1 1 1\") == \"4\""
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n2 1 1 1\n2 2\n1\n1\n1 2 1\nSample Output 2:\n2\n''') == '2'\nassert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\n'''"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 3 5 5\n1 2\n1 3\n1 4\n1 5\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n5 5 2 1\n1 2\n1 3\n1 4\n1 5\n\"\"\") == \"7\""
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 1\\n2 2\\n1 1 R\\n010') == '2'\nassert solution('3 4 2\\n2 2\\n3 4 R\\n2327\\n6009\\n2112\\n3 2 R\\n1310\\n2101\\n1301\\n') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'\nassert solution('5 3 3 1') == '4'\nassert solution('5 4 2 1') == '3'\nassert solution('5 5 3 1') == '-1'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000''') == '2'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\nSample Output 3:\n7\n''') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\") == \"2\"\nassert solution(\"3 4 2\") == \"7\"\nassert solution(\"2 2 1\") == \"0\"\nassert solution(\"1 1 R\") == \"0\"\nassert solution(\"1 1 L\") == \"0\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1\") == \"2\"\nassert solution(\"3 4 2\") == \"7\"\nassert solution(\"4 3 1\") == \"-1\"\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000''') == \"2\"\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\nSample Output 3:\n-1''') == \"-1\""
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'\nassert solution('3 5 4 3') == '-1'\nassert solution('6 5 4 3') == '5'\nassert solution('4 4 2') == '-1'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\nassert solution('''\n3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\n''') == '7'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 1') == '2'\nassert solution('3 4 2') == '7'"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 1\n2 2\n1 1 R\n010\n000\n000\n''') == '2'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 2 1 2 3') == '2'\nassert solution('8\\n1 2 4 1 1 2 5 1') == '4'"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n2 2 1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n8\n1 2 4 1 1 2 5 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n2 2 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\n\"\n    \"2 2 1 2 3\"\n) == \"2\"\n\nassert solution(\n    \"8\\n\"\n    \"1 2 4 1 1 2 5 1\"\n) == \"4\"\n\"\"\""
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n2 2 1 2 3\n''') == '2'\nassert solution('''\n8\n1 2 4 1 1 2 5 1\n''') == '4'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2''') == '2'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10''') == '10'\nassert solution('''20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16''') == '14'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 2 1 2 3\n''') == '2'\nassert solution('''\n8\n1 2 4 1 1 2 5 1\n''') == '4'"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 2 1\n''') == '2'\nassert solution('''\n3\n2 2 1\n''') == '2'\nassert solution('''\n4\n1 2 3 4\n''') == '2'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 2 1 2 3\n''') == '2'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2 2 1 2 3\n''') == '2'\nassert solution('''8\n1 2 4 1 1 2 5 1\n''') == '4'\nassert solution('''10\n3 6 4 2 8 7 1 9 5\n''') == '1'\nprint('all test cases passed...!')\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\nSample Output 2:\n3\n1\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == '3'\nassert solution('6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1\\n3\\nNE\\nNE\\nNE\\nNE'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n') == 'NE'\nassert solution('6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n') == '3'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\nD 3 1\\nD 2 2\\nD 1 3\\nP 1\\nP 2\\nP 3\\n\") == \"1\"\nassert solution(\"6\\nD 8 8\\nD 2 4\\nD 5 6\\nP 2\\nD 6 2\\nP 4\\n\") == \"3\"\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution() == \"2\""
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nD 1 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == 'NE'\nassert solution('''\n5\nD 1 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == '2,3,1'\nassert solution('''\n5\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '1'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == 'NE'\nassert solution('''\n5\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\nP 3\n''') == '1,2,3,4'"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\nassert solution('''\n2 3 5 6\n1 1\n1 1 6\n1 2 2\n''') == '5'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == output_string, \"Should be: {}, not {}\".format(output_string, solution(input_string))\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2''') == '2'\nassert solution('''2 3 5 6\n1 1\n1 1 6\n1 2 2''') == '5''')"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\nassert solution('''4 4 5 6\n1 1\n1 1 5\n1 2 2\n''') == '5'\nassert solution('''8 7 9 3\n1 1\n1 1 3\n1 1 7\n1 2 2\n1 2 3\n1 3 4\n1 4 5\n''') == '7'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2 1 10\n0 0\n1 4\n3 2\n''') == '2'\nassert solution('''4 2 6 8\n1 0\n2 5\n3 2\n''') == '5'\nassert solution('''3 3 8 9\n0 1\n1 1\n2 2\n''') == '4'\nassert solution('''6 6 8 6\n0 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '6'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1 10\") == \"2\"\nassert solution(\"2 3 5 6\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1 10\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"2 2 1 10\") == \"2\"\nassert solution(\"2 3 5 6\") == \"5\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2 3 5 6\") == \"5\"\nassert solution(\"1 1 6\") == \"6\"\nassert solution(\"2 3 5 2\") == \"4\"\nassert solution(\"2 4 5 2\") == \"3\"\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nprint(solution(input()))"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1.4\\n-0.4\\n-0.1\\n-1.2\\n0.2\\n0.5\\n0.5\\n-1.2\\n-0.25\\n-0.5\\n1.4\\n1.0\\n0.0\\n1.4\") == \"2.0000000000\"\nassert solution(\"5\\n1.4\\n-0.4\\n-0.1\\n-1.2\\n0.2\\n0.5\\n0.5\\n-1.2\\n-0.25\\n-0.5\\n1.4\\n1.0\\n0.0\\n1.4\") == \"2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\"\nassert solution(\"\"\"\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n\"\"\") == \"2.0000000000\"\nprint(solution(input()))"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\nassert solution('1\\n1.4 1.0 0.0\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1.0000000000'\nassert solution('2') == '2.0000000000'\nassert solution('3') == '2.0000000000'\nassert solution('4') == '3.0000000000'\nassert solution('5') == '3.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3 4') == '2.0000000000'\nassert solution('4\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.0 0.0 1.4') == '2.0000000000'\nassert solution('5.0 -1.0 0.0') == '2.0000000000'\nprint(solution(*[input() for _ in range(int(input()))]))"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2.0000000000'\nassert solution('5') == '2.0000000000'"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1.4 1.0 0.0\n-0.4 -1.0 0.0\n-0.1 -0.25 -0.5\n-1.2 0.0 0.9\n0.2 0.5 0.5\n\"\"\") == \"2.0000000000\"\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1.0 0.0 1.4\n-1.0 0.0 -1.4\n0.0 1.0 -0.2\n\"\"\") == \"2.0000000000\""
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1 9\n''') == '1'\nassert solution('''1 100 10\n''') == '9'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4 3') == '1'\nassert solution('8 1 2') == '2'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 9 5\n''') == '1'\nassert solution('''\n1 100 10\n''') == '9'\n\nstdin: str = '''\n2 10 15\n'''\n\nassert solution('''\n2 10 15\n''') == '2'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n\"\"\"\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5 1\") == \"1\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1 1\"\nassert solution(\"1 1 2 3\") == \"1 2 3\"\nassert solution(\"1 1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"1 2\") == \"2\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1\n1\n1''') == '1'\nassert solution('''4 5\n4 1 2 4 4\n4 3 2 1\nSample Input 3:\n4 5\n1 1 1 1 1\nSample Output 3:\n4\n1\n''') == '4'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"4 5\") == \"7\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n1\n1\nSample Output 3:\n2\n4 4 2 4 4 1 4\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 1\\n\"\n    \"1\\n\"\n    \"1\\n\") == \"1\"\n\nassert solution(\n    \"4 5\\n\"\n    \"4 1 2 4 4\\n\"\n    \"4 3 2 1\") == \"7\"\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 1\n4\n1\n''') == '2'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"4 5\") == \"4 4 2 4 4 1 4\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"10\"\nassert solution(\"10 10 5 0\") == \"10\"\nassert solution(\"10 10 5 0\") == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 10 3 2\") == \"4\"\nassert solution(\"10 10 5 0\") == \"10\"\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1\n2\n3\n''') == '3'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n2 10 3 2\n''') == '4'\nassert solution(\n'''\n10 10 5 0\n''') == '10'\n'''\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 20\") == \"10\"\nassert solution(\"6 100 9294\") == \"111\"\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\nprint(solution(*input()))"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '10'"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 4\n01\n''') == '5'\nassert solution('''\n3 9\n0123456789\n''') == '5'\nassert solution('''\n6 100 9294\n23689\n''') == '111'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1 20\n0123456789''') == '10'\nassert solution('''6 100 9294\n23689''') == '111'''\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 20') == '10'\nassert solution('6 100 9294') == '111'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1 20\n0123456789\n''') == '10'\nassert solution('''\n6 100 9294\n23689\n''') == '111'\nassert solution('''\n5 5 5\n56\n''') == '2'\nassert solution('''\n1 3 4 5\n235\n''') == '0'\nassert solution('''\n4 5 5\n678\n''') == '2'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 R 4\n2 R 2\n3 R 2\n4 S 2\n5 S 1\n''') == '1.500000 2.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\n1 R 2\\n2 R 4\\n3 R 2\\n4 S 2\\n5 S 1\\n\") == \"1.500000 2.666667\"\nprint(solution(*input().split()))"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'\nassert solution('10 10') == '0.00000000 0.00000000'"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('0 0') == '0.000000 0.000000'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '1.333333 2.000000'\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18''') == '1.333333 2.833334'\nprint(solution('''3\n1\n2\n3\n4\n5\n6'''))"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'\n\n\"\"\"\n\nfrom collections import deque\nimport heapq\n\nN, T = map(int, input().split())\n\ntime = deque()\nfor i in range(N):\n    d, r, k = map(int, input().split())\n    time.append((d, r, k))\n\ntime.sort()\n\nSQRT2 = 0.7071067811865476\n\nin_store = 0\nqueue = deque()\nheap = []"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 2.666667'\nassert solution('5 2\\n1 R 4\\n2 R 2\\n3 R 2\\n4 S 2\\n5 S 1') == '1.500000 3.666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '1.5000000 2.6666667'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 6\n101010\n111001\n101001\n''') == '3'\nassert solution('''\n4 5\n10010\n01010\n10101\n01001\n''') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 6\n101010\n111001\n101001\n''') == '3'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 6]) == \"3\"\nassert solution([4, 5]) == \"3\""
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6\") == \"3\"\nassert solution(\"4 5\") == \"3\"\n\"\"\"\n\nR,C=map(int, input().split())"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\") == \"3\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 6\") == \"3\"\nassert solution(\"4 5\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 4\\n10010\\n01010\\n10101\\n01001\"\n) == \"3\"\n\nassert solution(\n    \"3 4\\n111001\\n101001\\n101010\\n10010\"\n) == \"2\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6') == \"3\"\nassert solution('4 5') == \"3\"\nassert solution('10010') == \"4\"\nassert solution('01010') == \"3\"\nassert solution('10101') == \"3\"\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n10\n0\n0\n1\n0\n0\n1\n1''') == '4'\nassert solution('''4\n4\n0\n0\n1\n0\n0\n0\n1''') == '3'\nassert solution('''5\n5\n0\n0\n1\n0\n0\n0\n1''') == '0'\nassert solution('''1\n5\n1''') == '0'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"./inputs/test_squares.txt\") == \"3\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('2 4') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1'\n\nassert solution('''\n4\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2 4\\n6 -1\\n3 5\\n-1 -1') == '3 4\\n3 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0\") == \"3 -1\\n3 1\"\nprint(solution(\n\"\"\"\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\n\"\"\".strip()))\n\"\"\"\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\nSample Output 2:\n3 4\n3 -1\n\nSample Output 3:\n0 -1\n0 3\n\"\"\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1'\nassert solution('''6\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3 -1\"\nassert solution(\"4\") == \"3 4\"\nassert solution(\"3\") == \"3 -1\"\nassert solution(\"2\") == \"3 -1\"\nassert solution(\"1\") == \"3 -1\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('2 4') == '3 4'\nassert solution('6 -1') == '3 -1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n5\n0 0\n0 1\n1 0\n0 -1\n-1 0\n\"\"\") == \"3 4\"\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n0 -1\n-1 0\n''') == '-3 -1'\nassert solution('''5\n2 4\n6 -1\n3 5\n-1 -1\n''') == '3 4'\nprint('All test cases passed!')"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n0 0\\n0 1\\n1 0\\n0 -1\\n-1 0') == '-3 -1'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 5.086781'\nassert solution('''\n5 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '1 12.715255'"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6 5 45 20') == '2 5.086781'\nassert solution('3 0.25 2 45 20') == '1 12.715255'\nassert solution
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2 5.086781\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 12.715255\"\nassert solution(\"6 4 10 45 20\") == \"2 15.418649\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5 0\n0 0\n2 0\n1 1.5\n\"\"\") == \"2 5.086781\"\nassert solution(\"\"\"5 0\n0 0\n2 0\n1 1.5\n\"\"\") == \"1 12.715255\"\nassert solution(\"\"\"5 0\n0 0\n2 0\n1 1.5\n\"\"\") == \"2 11.992531\""
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 6 5 45 20\n0 0\n2 0\n1 1.5\n''') == '2 5.086781'\nprint(solution('''3 0.25 2 45 20\n0 0\n2 0\n1 1.5\n'''))\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 0\n0 0\n2 0\n1 1.5\n''') == '2 5.086781'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 45 20\") == \"2 5.086781\"\nassert solution(\"3 1 2 1\") == \"1 7.828003\"\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1.5 4.25 20') == '1 5.282881'\nassert solution('3 0.25 2 4.25 20') == '1 5.711363'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n0 0\n2 0\n1 1.5\n''') == '2 4.10180'\nassert solution('''\n3 6\n0 0\n2 0\n1 1.5\n''') == '1 4.20112'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4''') == '1'\nassert solution('''3\n3 5 7\n1 1 5\n2 0 0''') == '8'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n\"\"\") == \"8\"\nassert solution(\"\"\"\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1''') == '8'\nassert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\nSample Output 2:\n1''') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4''') == \"8\"\nprint(solution('''6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1'''))"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8', \"Should be 8\"\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1', \"Should be 1\"\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n0 0 1 0\\n0 0 0 1\\n1 0 1 1\\n0 1 1 1\\n0 0 1 1\\n1 0 0 1\\n') == '8'\nassert solution('3\\n4 4 5 5\\n5 4 5 4\\n3 3 3 3\\n') == '3'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '8'\nassert solution('''\n3\n2 3 4\n1 2 3\n5 0 2 3\n''') == '1'\nprint(\"Problem Solved!\")"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\n\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8', 'Should be 8'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'\nassert solution('1') == 'impossible'\nassert solution('-1') == 'impossible'\nassert solution('-2') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'impossible'\nassert solution('2') == 'impossible'\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'impossible'\nassert solution('7') == '4 3'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7\n\nSample Input 3:\n10\nSample Output 3:\n4 3\n''') == '4 3'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == 'impossible'"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '4 3'\nassert solution('10') == 'impossible'"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'impossible'\nassert solution('''\n10\n''') == 'impossible'\nassert solution('''\n4\n''') == '4 3'\nassert solution('''\n20\n''') == 'impossible'\nassert solution('''\n200\n''') == 'impossible'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == 'impossible'\nassert solution('7') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('11') == 'impossible'\nassert solution('9') == '4 3'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"4 3\"\nassert solution(\"4\") == \"impossible\"\nassert solution(\"9\") == \"impossible\"\nassert solution(\"10\") == \"impossible\"\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'impossible'\nassert solution('1\\n') == 'impossible'\nassert solution('2\\n') == 'impossible'\nassert solution('10\\n') == '4 3'\nassert solution('100\\n') == 'impossible'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '109'\nassert solution('2') == '16'\nassert solution('1') == '16'\nassert solution('3') == '16'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"16\""
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n2\n4\n1\n4\n3\n''') == '16', 'The last $9$ digits of the required sum are 16.'\n\nassert solution('''\n1\n1\n1\n''') == '1', 'The last $9$ digits of the required sum are 1.'"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '16'\nassert solution('2') == '109'\nassert solution('4') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"16\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().rstrip()\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '16'\nassert solution('2') == '109'\nassert solution('4') == '109'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1\\n3\\n') == '16'\nassert solution('4\\n2\\n4\\n1\\n4\\n') == '109'"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"101\"\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1\n3\n''') == '16', 'First'\n\nassert solution('''4\n2\n4\n1\n4\n''') == '109', 'Second'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n5 1\n1 2\n1 2\n1 2\n''') == \"3\"\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == \"5\"\nassert solution('''\n5 5\n5 1 2 1 3 3\n2 1\n3 2\n4 2\n3 4\n''') == \"7\"\nassert solution('''\n5 5\n5 1 1 1 2 1\n1 3\n2 4\n3 1\n4 2\n''') == \"9\"\nassert solution('''\n2 3\n5 3 1 1\n1 3\n2 3\n''') == \"1\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '3'\nassert solution('4 3') == '5'"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5 1 1 1 1'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\nSample Input 3:\n1\n1\n1\nSample Output 3:\n1''') == '2'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\nSample Input 3:\n2 6\n4 3 1 1\n2 3\n3 4\n4 1\nSample Output 3:\n3\n1 1 1\n2 1 2\n4 1 0\n2 4 1\n3 1 0\n''') == '2'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '3'\nassert solution('4 3') == '5'\nassert solution('8 2') == '2'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 3\n5 1\n1 2\n1 2\n1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\nSample Input 3:\n2 3\n5 2\n1 3\n1 2\nSample Output 3:\n3''') == '1 2 1'\nassert solution('''4 3\n5 3 1 1\n1 3\n2 3\n4 1\nSample Input 4:\n2 2\n3 4\n1 2\n1 1\nSample Output 4:\n2''') == '1 1 0'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\n\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n5 1\\n1 2\\n1 2\\n1 2\\n') == '3'\nassert solution('4 3\\n5 3 1 1\\n1 3\\n2 3\\n4 1\\n') == '5'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1\\n') == '1 2'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 3:\nimpossible\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == 'impossible'\nassert solution('2 1') == '1 1'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n''') == '1 2'\nassert solution('''2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 3:\nimpossible\n''') == 'impossible'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1\\n0 2 2\\n1 1 3\\n2 1 2\\n2 2 1\\n3 2 3\\n4 2 1') == '1 2'\nassert solution('2 1\\n20 3\\n0 1 1\\n10 1 0\\n10 2 1\\nSample Output 2:') == 'impossible'\nassert solution('5 3\\n10 10 10 10 1\\n3 1 1\\n2 1 1\\n3 2 2\\n4 2 1\\n5 2 2\\nSample Output 2:') == '1 2 2 1'\nassert solution('3 1\\n4 4 4\\n0 0 0\\n0 1 1\\n0 2 2\\nSample Output 2:') == 'impossible'\nassert solution('3 2\\n1 2 2\\n3 3 3\\n4 2 1\\n5 2 1\\nSample Output 2:') == '1 2'"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == 'impossible'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\nSample Output 3:\nimpossible\n\"\"\") == \"impossible\""
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == 'impossible'\nassert solution('1 2') == '1 2'\nassert solution('1 1') == 'impossible'\nassert solution('10 1 0') == 'impossible'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n6 7\n0 1 1\n0 2 2\n1 1 3\n2 1 2\n2 2 1\n3 2 3\n4 2 1\n''') == '1 2'\nassert solution('''\n2 1\n20 3\n0 1 1\n10 1 0\n10 2 1\n''') == 'impossible'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n6 7\\n0 1 1') == '1 2'\nassert solution('2 1\\n20 3\\n0 1 1') == 'impossible'\nassert solution('2 2\\n20 2\\n0 1 2') == 'impossible'\nassert solution('2 2\\n2 2\\n0 1 2') == '2 2'"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '5 2'\nassert solution('2020') == '2020 1'\n\"\"\"\n\nx = int(input())\n\nx = x // 2"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1 0'\nassert solution('2') == '0 1'\nassert solution('3') == '1 1 0'\nassert solution('4') == '1 1 1 0'\nassert solution('5') == '2 2 1 1 0'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"5 2\"\nassert solution(\"2020\") == \"2020 1\"\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1 1'\nassert solution('3') == '1 2 3'\nassert solution('8') == '1 4 13'\nassert solution('1000000000000') == '1 61528352 31196824'\nassert solution('20') == '1 2'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n\"\"\""
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n''') == '5 2'\nassert solution('''\n2020\n''') == '2020 1'\nassert solution('''\n5\n2020\n''') == '5 2'\nassert solution('''\n1\n''') == '1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1 1\\n'\nassert solution('2') == '2 2\\n'\nassert solution('3') == '3 3\\n'\nassert solution('5') == '5 2\\n'\nassert solution('10') == '5 2\\n'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2') == '1 2'\n\"\"\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\nSample Output 3:\nunique\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n4\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nSample Output 4:\nambiguous\n\"\"\") == \"ambiguous\""
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'impossible'\nassert solution('4') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n\"\"\"\n) == \"impossible\"\nassert solution(\n\"\"\"\n4\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\nSample Output 3:\nunique\n\"\"\"\n) == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'impossible'\n\nassert solution('''3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'unique'\n\nassert solution('''10\n3\n0 chicken\n1 egg\n5 milk\n6 bread\n7 nuts\n8 seeds\n9 chips\n10 cheese\n11 quack\n''') == 'ambiguous'\n\nassert solution('''10\n4\n0 chicken\n1 egg\n2 milk\n3 bread\n4 nuts\n5 seeds\n6 chips\n7 cheese\n8 quack\n''') == 'impossible'\n\nassert solution('''10\n5\n0 chicken\n1 egg\n2 milk\n3 bread\n4 nuts\n5 seeds\n6 chips\n7 cheese\n8 quack\n''') == 'impossible'"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n2\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\nicecream\ncookies\n\"\"\") == \"unique\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n0\n1 chocolate\n2 cookies\n3\nchocolate\nicecream\ncookies\n''') == 'impossible'\n\nassert solution('''\n4\n3\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'unique'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n3\\n0 chocolate\\n1 icecream\\n2 cookies\\n3\") == \"impossible\"\nassert solution(\"3\\n4\\n0 chocolate\\n1 icecream\\n2 cookies\\n2 chocolate\\n3\") == \"unique\""
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'impossible'\nassert solution('4') == 'unique'\n\"\"\"\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'impossible'\nassert solution('4') == 'unique'"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'unique'\nassert solution(['a', 'b', 'c', 'd']) == 'impossible'\nassert solution([1, 2, 3, 4]) == 'impossible'\nassert solution([1, 2, 3]) == 'impossible'\nassert solution([3]) == 'impossible'\n\n'''"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1 0 10\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n1 2 10\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n2 4 10\n\"\"\") == \"2\""
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n\"\"\"\nimport math\n\nN, K, M = map(int, input().split())\n\nK = K % 2 ** M\n\nnumber_of_words = 0\n\nfor _ in range(N):\n    letter_count = 0\n    number_of_words += 1\n    while True:\n        letter = chr(ord('a') + letter_count)\n        if len(letter) == 1:\n            break\n        else:\n            letter_count += 1\n    if K == (ord(letter) * 33) % 2 ** M:\n        number_of_words += 1\n        break\nprint(number_of_words)"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 0 10\n1 2 10''') == '1'\nassert solution('''1 1 10\n1 2 10''') == '1'\nassert solution('''1 2 10\n1 2 10''') == '1'\nassert solution('''1 3 10\n1 2 10''') == '1'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\n\nprint(solution())"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 0 10\") == \"0\"\nassert solution(\"1 2 10\") == \"1\"\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"....X................................................................................................................................................................................................................................................................................................................................................................\") == \"1 zoom out\"\nassert solution(\"....XXXX................................................................................................................................................................................................................................................................................................................................................................\") == \"1 pan\"\nassert solution(\"....XXXX.......................................XXXX..........................................................................................................................................................................................................................................................................................................................\") == \"3 zoom out\"\n\nassert solution(\"...............X......................................................................................................................................................................................................................................................................................................................................................................................\") == \"4 zoom in\"\n\nprint(\"All tests passed\")"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Sample Input 1\") == \"1 pan\"\nassert solution(\"Sample Input 2\") == \"3 zoom out\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"..........XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n................XX..........\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n\n..XXXX....XXXX....XXXX....XXXX....XXXX....XXXX....XXXX....XXXX....\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X...........XX.....X.........XX.....X.........XX.....X.........\n.X.X..........."
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('....................................................') == '3 pan'\nassert solution('....................................................') == '3 zoom out'\nassert solution('....................................................') == '3 pan'\nassert solution('............................................................') == '3 zoom out'\nassert solution('............................................................') == '3 pan'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n...\nXX....XXXXXX....\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n..."
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1 pan\"\nassert solution(\"X.................................................................. X\") == \"1 pan\"\nassert solution(\"X........................................................................ X\") == \"1 pan\"\nassert solution(\"X.........................XX......................................... X\") == \"2 pan\"\nassert solution(\"X.........................XX......................................... X\") == \"3 pan\"\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n...................... \n...................... \n....XXXX...................... \n....XXXX..................................XXXX..............\n....XXXX...................................XXX..............\n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n...................... \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................. \n.............................."
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('.......................XX......XX.......................\\n.......XXXXX......XXXXXXXXX.......\\n...XX...XXXX....XX............\\n...........XX.......XXXX....\\n...........X.......XXXX....\\n.....XXX........XXXX....\\n.....X.............XXXX....\\n.....X.............XXXX....\\n.....X.............XXXX....\\n.....X.............XXXX....\\n.....X.............XXXX....\\n.....X.............XXXX....') == '3 zoom out'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == 'check out our fresh apples!'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 7') == '      '\nassert solution('8 20') == '      \\n      \\n      \\n      \\n      \\n      \\n      \\n      \\n      \\n      \\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == 'apples are great! oranges are way better check out our fresh apples!'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n\"\"\") == \"\"\"\napples are great! \n                \n                    \n                    \n                    \n                    \n                    \n check out our      \n fresh apples! \n\"\"\".strip()\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 20\") == 'apples are great!\\ncheck out our fresh apples!\\n'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 7\") == \"       \"\nassert solution(\"8 20\") == \"       \"\nassert solution(\"8 20\") == \"       \"\nassert solution(\"8 10\") == \"       \"\nassert solution(\"8 10\") == \"       \"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 20\n apples are great!  \n++++++++++++++++++++\n+ oranges are      +\n+ way better!      +\n+ #oranges>apples  +\n++++++++++++++++++++\n check out our      \n fresh apples!      \n''') == 'apples are great!  \\ncheck out our fresh apples!'\n\nassert solution('''\n7 7\n+++++++\n+  =  +\n+ +++ +\n+ + + +\n+ +++ +\n+     +\n+++++++\n''') == '+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++'\n\nassert solution('''\n10 10\n++++++++++\n+++ + +++\n+++ +++ +\n+++ +++ +++\n++++ + +++\n++++ +++ +\n++++++++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n++ +++\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 20') == \"apples are great!\\ncheck out our fresh apples!\"\nassert solution('7 7') == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\"\nassert solution('50 50') == \"\"\nassert solution('5 5') == \"\"\nassert solution('1 1') == \"\"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 20\\n apples are great!  \\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\") == \"apples are great!  fresh apples!\"\nassert solution(\"7 7\\n+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++\") == \"       \"\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+++++++\"\nassert solution(\"8 5\") == \"+++++++\\n+  =  +\\n+ +++ +\\n+  =  +\\n+++++++\\n   \\n+++   \\n+++++++\""
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nH\nT\n?\n''') == '0.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n\nH?\n''') == '1.5'\nassert solution('''\n\n?H\n''') == '0.5'\nassert solution('''\n\nH?\n''') == '0.5'\nassert solution('''\n\nH?\n''') == '0.5'\n\n'''\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nH?\nH?\nH?\nH?\nT?\nH?\nT?\nH?\nH?\n''') == '1.5'\n\nassert solution('''\nT?\nH?\nH?\nH?\nH?\nT?\nT?\nH?\nH?\nT?\n''') == '0.5'\n\nassert solution('''\nT?\nH?\nH?\nH?\nH?\nT?\nT?\nH?\nH?\nH?\n''') == '1.0'\n\nassert solution('''\n?\n?\n?\n?\n?\n?\n?\n?\n?\n?\n''') == '0.2'"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"HH\") == \"2.0\"\nassert solution(\"??\") == \"1.5\"\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('TTT') == '1.5'\nassert solution('TTH') == '2.0'\nassert solution('TT?') == '1.5'\nassert solution('TTH') == '1.5'\nassert solution('TT?H') == '1.5'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('HHHH') == '2.0'\nassert solution('H?H') == '1.5'\n'''\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('THT') == 'HHT', 'THT'\nassert solution('THT') == 'HHT', 'THT'\nassert solution('THT') == 'TTH', 'THT'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '6'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1111\n1111\n1111\n1111''') == \"1\"\nassert solution('''4\n0111\n0111\n0111\n0111''') == \"6\"\nassert solution('''3\n1110\n1110\n1110''') == \"1\"\nassert solution('''2\n0011\n0011''') == \"1\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1101\\n1101\\n1111\\n1111\") == \"6\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\"\nassert solution(\"4\\n1111\\n1111\\n1111\\n1111\") == \"6\""
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(\"4\\n0111\\n1111\\n1111\\n1111\") == \"6\"\nprint(\"All Tests Passed\")"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('4') == '1'\nassert solution('5') == '6'\nassert solution('32') == '32'\n\n------Solutions------\n1.\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n0001\\n0001\\n0011\\n1110') == '1'\nassert solution('4\\n0001\\n0001\\n0011\\n1111') == '6'\nprint('Tests done.')"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"2\"\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3\\n') == '2'\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\nh 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\nh 1 10 1\nh 5 10 2\nv 1 10 1\nv 5 10 3\n\"\"\"\n) == \"4\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nh 1 4 1\\nh 2 4 2\\nv 1 4 1\\nv 2 4 2\\n') == '2'\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3\\n') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3\") == \"1\", \"Should activate a pixel when there is an intersection on the 1st wire\"\nassert solution(\n    \"2\") == \"2\", \"Should activate a pixel when there is an intersection on the 2nd wire\"\nassert solution(\n    \"1\") == \"1\", \"Should activate a pixel when there is an intersection on the 3rd wire\"\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2'\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''h 1 4 1\nv 2 4 2\nh 10 2 2\nv 11 2 3\n''') == '2'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '2'\nassert solution('5 5\\n1 2 1 2\\n1 4 4 1\\n1 0 2 1\\n1 1 1 1\\n1 3 3 1\\n2 3 3 1') == '-1'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4', 'Fail'"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '4'\nassert solution('10 10') == '-1'\nassert solution('4 4') == '4'\nassert solution('4 5') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"2\"\nassert solution(\"3 3\") == \"4\""
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 0 2 0\\n3 5 4 0\\n2 1 0 0\\n3 0 4 5') == '4'\nassert solution('3 3\\n1 2 3\\n4 5 6\\n7 8 0\\n4 2 3\\n6 5 1\\n0 7 8') == '5'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '2'\nassert solution('''\n2 4\n1 0 2 0\n3 5 4 0\n2 1 0 0\n3 0 4 5\n''') == '4'\nassert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 2 3\n4 5 6\n7 8 0\n4 2 3\n6 5 1\n0 7 8\n''') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '4'\nassert solution('1 2 3') == '-1'\nassert solution('4 5 6') == '3'\nassert solution('7 8 0') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n1 2 3 3 4 2''') == '2'\nassert solution('''8\n1 2 1 3 1 3 1 2''') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2 3 3 4 2\n''') == '2'\nassert solution('''\n10\n1 2 1 3 1 3 1 2\n''') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 2 3 3 4 2\n''') == '2'\nassert solution('''\n8\n1 2 1 3 1 3 1 2\n''') == '4''')"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n1 2 3 3 4 2\n''') == '2'\nassert solution('''\n8\n1 2 1 3 1 3 1 2\n''') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 3 4 2') == '2'\nassert solution('1 2 1 3 1 3 1 2') == '4'"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '4'"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 2 3 3 4 2\n''') == '2'\nassert solution('''\n8\n1 2 1 3 1 3 1 2\n''') == '4'\nassert solution('''\n3\n1 1 1\n''') == '1'\nassert solution('''\n3\n1 1 1\n''') == '1'\nassert solution('''\n3\n1 2 1\n''') == '2'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n1 2 3 3 4 2\n''') == '2'\nassert solution('''\n8\n1 2 1 3 1 3 1 2\n''') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4\\n0\\n'''\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '4'\nassert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2\") == \"4\"\nassert solution(\"2 2 2\") == \"0\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\nassert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '0'\nassert solution('''\n2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 2\") == \"4\"\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4'\nassert solution() == '2'"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 2') == '4'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2 1') == '4'\nassert solution('2 2 2 1 1') == '2'\nassert solution('2 2 2 2') == '0'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"impossible\"\nassert solution(input) == str(len(set(range(n)) - set(disqualified)) // 2)\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == '1'\nassert solution('5 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n1 2') == 'impossible'\nassert solution('1 1\\n1 1\\n1 2') == '2'"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == \"1\"\nassert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == \"impossible\"\nassert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == \"2\"\nassert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 3\n''') == \"impossible\"\nassert solution('''\n3 2\n1 0 0\n0 1 0\n0 1 0\n''') == \"impossible\"\n\n'''\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == 'impossible'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 1 1 1\\n0 0 0 0\\n0 1 0 0\\n0 2\\n') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"impossible\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2\\n0 0 1 1\\n1 0 0 1\\n0 1 0 0\\n0 0 1 0\\n0 2') == '1'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2''') == 'impossible'\nassert solution('''10 5\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35'\nassert solution('''\n10 4\n1 1 2 1\n3\n0 10\n2 6\n7 7\n''') == '18'\nassert solution('''\n10 3\n1 1 2 1\n3\n0 10\n2 6\n7 7\n''') == '8'"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"36\""
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '8'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '35'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 4\") == \"35\"\nassert solution(\"11 3\") == \"8\""
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35'\nassert solution('''\n10 4\n1 1 2 1\n3\n0 10\n2 6\n7 7\n''') == '18'\nassert solution('''\n11 3\n3 7 10\n3\n0 10\n2 6\n7 7\n''') == '8'"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35'\nassert solution('''\n10 4\n1 1 2 1\n3\n0 10\n2 6\n7 7\n''') == '18'\nassert solution('''\n11 3\n3 7 10\n3\n0 10\n2 6\n7 7\n''') == '8'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"8\"\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"8\"\nassert solution(\"2 3\\n0 10\\n2 6\") == \"2\"\n\nimport collections\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nq = int(input())\nfor _ in range(q):\n    l, r = map(int, input().split())\n    c = collections.Counter(a[l - 1 : r])\n    for i in range(1, 10):\n        c[i] -= c[i - 1]\n    print(sum(c[i] for i in range(1, 10)))"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35'\nassert solution('''11 3\n3 7 10\n3\n0 10\n2 6\n7 7\n''') == '8'\nassert solution('''11 2\n3 7 10\n3\n0 10\n2 6\n7 7\n''') == '2'"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3\n5\n4\n2\n1\n2\n4\n4\n5\n2\n2\n3\n2\n3\n1\n1\n''') == '6\\n1\\n2\\n4\\n6\\n1\\n1\\n2\\n3\\n4\\n'\nassert solution('''\n2\n2\n3\n2\n1\n2\n2\n3\n1\n3\n2\n2\n''') == '0\\n0\\n1\\n0\\n1\\n2\\n1\\n2\\n2\\n'\nprint('all tests passed')"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n3\n2\n4\n1\n5\n''') == '0\\n1\\n3\\n2\\n4\\n6\\n'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4\\n') == '0\\n1\\n3\\n6\\n'"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2\\n4\\n1\") == \"1\\n3\\n4\\n\"\nassert solution(\"8\\n4\\n5\\n6\\n3\\n7\\n2\\n1\") == \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n\"\nassert solution(\"3\\n4\\n5\\n6\\n7\\n8\") == \"0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4') == '0\\n1\\n3\\n6'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('20') == '5'\nassert solution('20') == '2'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1\n2\n3\n4''') == '0 1 3 6'\nassert solution('''5\n3\n2\n4\n1\n5''') == '0 1 2 4 6'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1\\n2\\n3\\n4\") == \"0\\n1\\n3\\n6\"\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '0 1 2 3 4'\nassert solution('4') == '0 1 2 3'"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4') == '0\\n1\\n3\\n6'\nprint(solution('5\\n3\\n2\\n4\\n1'))\nprint(solution('4\\n1\\n2\\n3\\n4'))"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\") == \"2 4 1 3\"\nassert solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 1 2\"\n\nfrom typing import List\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        sticks = stdin.split('\\n')\n        stick_edges = []\n        for stick in sticks:\n            stick_edges.append([int(x) for x in stick.split(' ')])\n\n        x_edges = [x for x, y in stick_edges]\n        y_edges = [y for x, y in stick_edges]\n        x_min = min(x_edges)\n        x_max = max(x_edges)\n        y_min = min(y_edges)\n        y_max = max(y_edges)\n        intersections = []\n        for x in range(x_min, x_max+1):\n            for y in range(y_min, y_max+1):\n                if not (x_min <= x <= x_max and y_min <= y <= y_max):\n                    intersections.append((x, y))\n\n        # Sort intersection points in order\n        # to make the output same as input\n        intersections.sort()\n\n        # print(intersections)\n        table = {}\n        i = 0\n        while i < len(intersections):\n            x = intersections[i][0]\n            y = intersections[i][1]\n            table[x] = y\n            i += 1\n            while i < len(intersections) and intersections[i][0] == x:\n                y = intersections[i][1]\n                table[x] = y\n                i += 1\n\n        # print(table)\n        i = 0\n        sticks_labels = []\n        while i < len(sticks):\n            x_1, y_1, x_2, y_2 = sticks[i]\n            # print(x_1, y_1, x_2, y_2)\n            x_1 = table[x_1]\n            x_2 = table[x_2]\n            if x_1 == x_2:\n                # Do nothing\n                pass\n            else:\n                if y_1 == x_2 or y_2 == x_1:\n                    # Remove stick\n                    sticks_labels.append('%d %d' % (x_1, x_2))\n                else:\n                    # Translate stick\n                    if x_1 < x_2:\n                        x_1, x_2 = x_2, x_1\n                    # x_1 <= x_2\n                    while x_2!= x_1:\n                        y = (x_2 - x_1) // abs(x_2 - x_1) * (y_1 - y_2) + y_2\n                        table[x_1] = y\n                        x_1 = table[x_1]\n                        if x_1 == x_2:\n                            break\n                    sticks_labels.append('%d %d' % (x_1, x_2))\n            i += 1\n        return '\\n'.join(sticks_labels)\n\nassert Solution().solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 1 2\"\nassert Solution().solution(\"4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n\") == \"4 3 1 2\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '2 4 1 3'\nassert solution('''\n4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2'\nassert solution('''\n4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '3 1 2'\nassert solution('''\n4\n0 0 1 1\n1 2 0 3\n2 2 3 3\n4 0 3 1\n''') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 3 2 2\n1 1 3 2\n2 4 7 3\n3 3 5 3\n''') == '2 4 1 3'"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1\\n') == '4 3 1 2'\nassert solution('4\\n3 3 5 3\\n3 3 5 3\\n') == '3 3 5 3'\nassert solution('2\\n2 0 0\\n0 0 3\\n0 1 3\\n1 0 3\\n') == '2 0 0'\nassert solution('5\\n0 0 0 0\\n0 0 3\\n0 1 3\\n1 0 3\\n1 1 3\\n') == '5'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 3 1 2\""
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2 4 1 3'\nassert solution('4') == '2 3 4 1'\nassert solution('4') == '1 3 2 2'\n\n\"\"\"\n\n\n\"\"\" Solution \"\"\""
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1 3\") == \"2 4 1 3\", \"First\"\nassert solution(\"2 2 1 3\") == \"4 3 1 2\", \"Second\"\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 2 2') == '2 4 1 3'\nassert solution('4 0 0 1') == '4 3 1 2'\n\"\"\"\nimport sys\nsys.setrecursionlimit(10**6)"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3\\n') == '2 4 1 3'\n\"\"\"\nimport math"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5') == 'Theta wins'\nassert solution('89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49') == 'Theta wins'"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\n89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == 'Theta wins'\nprint('solution() complete, elapsed time: {:.2f} sec'.format(time.process_time() - start))"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'Theta wins'\nassert solution('''\n89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\n''') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\nSample Output 1:\nTheta wins''') == 'Theta wins'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\"\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == 'Theta wins'"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\") == \"Theta wins\"\nassert solution(\"89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49\") == \"Theta wins\""
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Theta wins\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1 2\n1 not charlatan 1\n1 and fabulist 1 fabulist 2\n\"\"\") == \"fabulist\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'charlatan'\nassert solution('''\n2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist'\nassert solution('''\n1 2\n1 charlatan 1\n1 truther 1\n''') == 'truther'\n'''\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 2\n1 charlatan 1\n1 not charlatan 1\n\"\"\") == \"charlatan\"\nassert solution(\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n\"\"\") == \"fabulist\"\nassert solution(\"\"\"\n5 1\n2 not not not not not not\n3 not not not not not\n4 not not not not not\n\"\"\") == \"truther\"\n\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n\"\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1\\n') == 'charlatan'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n1 charlatan 1\n1 not charlatan 1\n\"\"\") == \"charlatan\"\nassert solution(\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n\"\"\") == \"fabulist\"\nassert solution(\"\"\"\n2 2\n1 not charlatan 1\n2 not charlatan 1\n\"\"\") == \"truther\"\nassert solution(\"\"\"\n5 2\n1 not charlatan 1\n2 not charlatan 1\n3 not charlatan 1\n4 not charlatan 1\n\"\"\") == \"truther\"\nassert solution(\"\"\"\n5 2\n1 and charlatan 1 and fabulist 1 fabulist 2\n3 not charlatan 1\n4 not charlatan 1\n5 not charlatan 1\n\"\"\") == \"fabulist\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist'"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'truther'\nassert solution('''\n2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist'\nassert solution('''\n1 3\n1 truther 1\n1 not truther 1\n1 charlatan 1\n1 not charlatan 1\n1 fabulist 1\n1 not fabulist 1\n1 charlatan 2\n1 not charlatan 2\n1 fabulist 2\n1 not fabulist 2\n''') == 'charlatan'\n\nSample Input 3:\n3 3\n1 and charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 not fabulist 1\n1 and charlatan 2\n1 not charlatan 2\n1 not fabulist 2\n''') == 'truther'\nassert solution('''\n3 3\n1 and charlatan 1\n1 and fabulist 1 fabulist 2\n1 not charlatan 1\n1 not fabulist 1\n1 and charlatan 2\n1 not charlatan 2\n1 not fabulist 2\n''') == 'fabulist'\nassert solution('''\n3 3\n1 and charlatan 1\n1 not charlatan 1\n1 and charlatan 2\n1 not charlatan 2\n1 not fabulist 2\n''') == 'truther'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'charlatan'\n'''\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 2\n1 charlatan 1\n1 not charlatan 1\n\"\"\") == \"charlatan\"\nassert solution(\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n\"\"\") == \"fabulist\"\nassert solution(\"\"\"\n1 1\n1 and fabulist 1 fabulist 2\n\"\"\") == \"fabulist\"\nassert solution(\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n1 and not charlatan 1\n\"\"\") == \"fabulist\"\nassert solution(\"\"\"\n2 1\n1 and fabulist 1 fabulist 2\n1 and not charlatan 1\n1 and not charlatan 2\n1 and charlatan 1\n\"\"\") == \"truther\"\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n1 charlatan 1\n1 not charlatan 1\n''') == 'truther'\nassert solution('''\n2 1\n1 and fabulist 1 fabulist 2\n''') == 'fabulist'\nprint(solution('''\n1\n1 and fabulist 1 fabulist 2\n1 and not charlatan 1 charlatan 2\n1 not and not charlatan 1 charlatan 2\n1 not charlatan 1\n'''))\n\"\"\"\n\n\"\"\"\na=int(input())\nb=int(input())\nl=[]\nfor i in range(a,b+1):\n    l.append(i)\nfor i in range(len(l)):\n    print(l[i],end=\" \")\nprint()\nfor i in range(len(l)):\n    if(i==0):\n        print(l[i],end=\"\")\n    else:\n        print(l[i],end=\" \")\n\n\"\"\"\n\n\"\"\"\na=int(input())\nb=int(input())\nfor i in range(a,b+1):\n    print(i,end=\" \")\n\n\"\"\"\n\n\"\"\"\na=int(input())\nb=int(input())\nc=[]\nfor i in range(a,b+1):\n    c.append(i)\nc.pop(0)\nc.pop(0)\nc.pop(0)\nfor i in range(len(c)):\n    if(i==0):\n        print(c[i],end=\"\")\n    else:\n        print(c[i],end=\" \")\n\"\"\"\n\n\"\"\"\n\na=int(input())\nb=int(input())\nfor i in range(a,b+1):\n    print(i,end=\" \")\n\n\"\"\"\n\n\"\"\"\na=int(input())\nb=int(input())\nc=[]\nfor i in range(a,b+1):\n    c.append(i)\nd=[]\nd.append(c.pop(0))\nd.append(c.pop(0))\nd.append(c.pop(0))\nfor i in range(len(d)):\n    if(i==0):\n        print(d[i],end=\"\")\n    else:\n        print(d[i],end=\" \")\n\n\"\"\"\n\n\"\"\"\na=int(input())\nb=int(input())\nc=[]\nd=[]\nfor i in range(a,b+1):\n    c.append(i)\nd.append(c.pop(0))\nd.append(c.pop(0))\nd.append(c.pop(0))\ne=d[2]\nf=d[1]\ng=d[0]\nfor i in range(len(d)):\n    if(i==0):\n        print(e,end=\"\")\n    elif(i==1):\n        print(f,end=\"\")\n    else:\n        print(g,end=\" \")\n\n\"\"\"\n\n\"\"\"\na=int(input())\nb=int(input())\nc=[]\nfor i in range(a,b+1):\n    c.append(i)\nd=[]\nd.append(c.pop(0))\nd.append(c.pop(0))\nd.append(c.pop(0))\ne=d[2]\nf=d[1]\ng=d[0]\nh=[]\nh.append(e)\nh.append(f)\nh.append(g)\nfor i in range(len(h)):\n    if(i==0):\n        print(h[i],end=\"\")\n    elif(i==1):\n        print(h[i],end=\"\")\n    elif(i==2):\n        print(h[i],end=\"\")\n\n\"\"\"\n\n\"\"\"\na=int(input())\nb=int(input())\nc=[]\nd=[]\nfor i in range(a,b+1):\n    c.append(i)\nd.append(c.pop(0))\nd.append(c.pop(0))\nd.append(c.pop(0))\ne=d[2]\nf=d[1]\ng=d[0]\nh=[]\nh.append(e)\nh.append(f)\nh.append(g)\nfor i in range(len(h)):\n    if(i==0):\n        print(h[i],end=\"\")\n    elif(i==1):\n        print(h[i],end=\"\")\n    elif(i==2):\n        print(h[i],end=\"\")\n\n\"\"\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '3'"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == '4'\nassert solution('''\n5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n''') == '4'\n'''\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1.00 2.00\\n3.00 2.00') == '1'\nassert solution('3\\n1.00 2.00\\n3.00 2.00\\n4.00 2.00') == '2'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"3\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"3\"\nassert solution(\"1.00 5.00\") == \"1\"\nassert solution(\"3.00 3.00\") == \"2\"\nassert solution(\"4.00 2.00\") == \"1\"\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n-1.50 -1.00\n1.50 -1.00\n''') == '1'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1.00 5.00\n3.00 3.00\n4.00 2.00\n6.00 4.50\n7.00 1.00\n''') == '4', 'First'\n\nassert solution('''3\n-1.50 -1.00\n1.50 -1.00\n0.00 1.00\n''') == '3', 'Second'\n\nassert solution('''2\n-1.00 1.00\n1.00 -1.00\n''') == '0', 'Third'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 1') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == '16'\nassert solution('''\n2 3 1\nX..\n.?.\n10 1000 1\n''') == '10'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 2\n.X.\nX..\n''') == '16'\n\nassert solution('''\n3 3 2\n.X.\nX..\n''') == '16'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 2') == '16'\nassert solution('2 3 1') == '10'"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1') == '10'\nassert solution('2 5 2') == '16'\nassert solution('2 9 2') == '16'\nassert solution('5 9 2') == '16'\nassert solution('9 9 2') == '16'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5 2\n.X..\n.X...\n100 100 7 100 8''') == '16'\nassert solution('''3 3 1\nX..\n.?.\n10 1000 1''') == '10'\nassert solution('''2 2 4\n.R.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n.X.\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"3 2 1\nR.X.\n.X.X\n10000000 7 1000000000 3 1000000000\n\"\"\") == \"16\"\n\nassert solution(\n    \"\"\"3 3 1\n.X.X\n.X.X\n.X.X\n\"\"\") == \"3\"\n\nassert solution(\n    \"\"\"5 5 1\nX..?\n..?X\n..?X\n..?X\n..?X\n\"\"\") == \"0\"\n\nassert solution(\n    \"\"\"5 5 3\n.X.X\n.X.X\n.X.X\n.X.X\n.X.X\n\"\"\") == \"14\"\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 5 2\nR..?.\n.X...\n100 100 7 100 8\nSample Output 2:\n10\n''') == '16'\n\nassert solution('''2 3 1\nX..\n.?.\n10 1000 1\nSample Output 2:\n10\n''') == '10'\n\nassert solution('''2 4 1\n.X.\nR.X.\n1 1 1 1\nSample Output 2:\n1\n''') == '1'\n\nassert solution('''2 3 1\n.X.\nR.X.\n1 1 1 1\nSample Output 2:\n1\n''') == '1'"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '0'\nassert solution('3 1') == '0'\nassert solution('3 2') == '3'\nassert solution('4 4') == '3'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1\\nX..\\n.X...\") == \"10\"\nassert solution(\"2 3 1\\nX..\\n.X..\\n.X.X\\n.X..\\nX...\") == \"0\"\nassert solution(\"2 3 1\\nX..\\n.X.X\\n.X..\\n.X.X\\n.X..\\nX...\") == \"10\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1.414'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n0 4 4\n1 5 1\n2 6 1''') == '1.414'\nassert solution('''6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10''') == '5.657'\nprint('all tests passed')"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1.414'\nprint('ok')\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 1\\n2 3\\n1 3\\n1 3\\n2 4\\n1 1\\n2 5\\n1 4\\n1 5\\n1 5\\n2 6\\n1 5\\n1 6\\n2 1\\n1 2\\n1 1\\n1 2\\n1 5\\n1 6\\n2 4\\n1 4\\n1 6\\n1 6\\n2 1\\n1 3\\n1 3\\n1 1\\n1 1\\n1 2\\n1 3\\n1 3\\n2 4\\n1 4\\n1 4\\n2 2\\n1 5\\n1 5\\n2 6\\n1 6\\n2 6\\n1 5\\n1 6\\n2 5\\n1 4\\n1 3\\n1 5\\n1 5\\n2 4\\n1 3\\n1 6\\n1 6\\n2 6\\n1 4\\n1 3\\n2 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n1 3\\n1 3\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3 3\\n0 4 4\\n1 5 1\\n2 6 1') == '1.414'\nassert solution(\n    '6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n0 4 4\n1 5 1\n2 6 1\n''') == '1.414'\nassert solution('''\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n''') == '5.657'"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n0 4 4\\n1 5 1\\n2 6 1') == '1.414'\nassert solution('6 11\\n0 0 1\\n0 1 2\\n1 0 3\\n1 1 4\\n5 5 1\\n20 20 10') == '5.657'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 3\n0 4 4\n1 5 1\n2 6 1\n\"\"\") == \"1.414\"\nassert solution(\"\"\"\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n\"\"\") == \"5.657\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"1.414\"\nassert solution(\"6 11\") == \"5.657\"\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3 3\n    0 4 4\n    1 5 1\n    2 6 1\n''') == '1.414'\nassert solution('''\n    6 11\n    0 0 1\n    0 1 2\n    1 0 3\n    1 1 4\n    5 5 1\n    20 20 10\n''') == '5.657'\n\nprint(solution('''\n    3 3\n    0 4 4\n    1 5 1\n    2 6 1\n'''))\nprint(solution('''\n    6 11\n    0 0 1\n    0 1 2\n    1 0 3\n    1 1 4\n    5 5 1\n    20 20 10\n'''))\nprint(solution('''\n    10 10\n    0 0 1\n    0 2 2\n    1 0 3\n    1 1 4\n    2 0 5\n    2 1 6\n    3 0 7\n    3 1 8\n    4 0 9\n    4 1 10\n'''))\nprint(solution('''\n    5 5\n    0 0 1\n    1 1 1\n    2 1 3\n    3 1 4\n    4 1 5\n    5 1 2\n'''))\nprint(solution('''\n    10 10\n    0 0 1\n    0 2 2\n    1 0 3\n    1 1 4\n    2 0 5\n    2 1 6\n    3 0 7\n    3 1 8\n    4 0 9\n    4 1 10\n'''))\nprint(solution('''\n    3 3\n    0 4 4\n    1 5 1\n    2 6 1\n'''))\nprint(solution('''\n    6 11\n    0 0 1\n    0 1 2\n    1 0 3\n    1 1 4\n    5 5 1\n    20 20 10\n'''))\nprint(solution('''\n    10 10\n    0 0 1\n    0 2 2\n    1 0 3\n    1 1 4\n    2 0 5\n    2 1 6\n    3 0 7\n    3 1 8\n    4 0 9\n    4 1 10\n'''))\nprint(solution('''\n    5 5\n    0 0 1\n    1 1 1\n    2 1 3\n    3 1 4\n    4 1 5\n    5 1 2\n'''))\nprint(solution('''\n    10 10\n    0 0 1\n    0 2 2\n    1 0 3\n    1 1 4\n    2 0 5\n    2 1 6\n    3 0 7\n    3 1 8\n    4 0 9\n    4 1 10\n'''))\nprint(solution('''\n    3 3\n    0 4 4\n    1 5 1\n    2 6 1\n'''))\nprint(solution('''\n    6 11\n    0 0 1\n    0 1 2\n    1 0 3\n    1 1 4\n    5 5 1\n    20 20 10\n'''))\nprint(solution('''\n    10 10\n    0 0 1\n    0 2 2\n    1 0 3\n    1 1 4\n    2 0 5\n    2 1 6\n    3 0 7\n    3 1 8\n    4 0 9\n    4 1 10\n'''))\nprint(solution('''\n    5 5\n    0 0 1\n    1 1 1\n    2 1 3\n    3 1 4\n    4 1 5\n    5 1 2\n'''))\nprint(solution('''\n    10 10\n    0 0 1\n    0 2 2\n    1 0 3\n    1 1 4\n    2 0 5\n    2 1 6\n    3 0 7\n    3 1 8\n    4 0 9\n    4 1 10\n'''))\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 1\\n') == '1.0'\nassert solution('3 1 1 1') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 1 1 1 1\n1\n2\n3\n4''') == '1.0'\nassert solution('''3 1 1 1\n1\n2\n3''') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 1 1\") == \"0.433\"\nassert solution(\"4 1 1 1 1\") == \"0.433\"\nassert solution(\"3 1 1 1 1\") == \"0.433\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 1 1') == '0.433'\nassert solution('10 1 1 1 1 1 1 1 1') == '1.0'\nassert solution
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 1 1') == '0.433'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 1 1') == '0.433'\nassert solution('4 1 1 1 1') == '1.0'\nassert solution('5 1 1 1 1 1') == '2.0'\nassert solution('6 1 1 1 1 1') == '0.0'\nassert solution('3 2 1 1 1') == '0.5'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1 1 1 1\") == \"1.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1\") == \"1.0\"\nassert solution(\"4 1 1 1 1\") == \"1.0\"\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 2 4 3') == '2.0'\nassert solution('5 1 2 4 3') == '1.5'\nassert solution('5 1 1 1 1 1 1 1 1 1 1') == '1.5'\nassert solution('5 3 3 3 3 3 3 3 3 3 3') == '3.0'"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5') == '5'\nassert solution('8 10') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == '36'\n\nn, k = list(map(int, stdin.split()))\n\nd = {i: [] for i in range(1, n+1)}\n\nfor x, y, f in list(map(lambda l: list(map(int, l.split())), stdin.split(\"\\n\"))):\n    d[x].append((y, f))\n    d[y].append((x, f))\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nprint(solution(input))\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == '5'\n\nassert solution('''\n8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\n''') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == \"5\"\nassert solution('''\n6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == \"4\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5') == '5'\nassert solution('8 10') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\") == \"5\"\nassert solution(\"8 10\") == \"36\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"6 5\") == \"5\"\nassert solution(\"8 10\") == \"36\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5') == '5'\nassert solution('8 10') == '36'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 1 5\\n2 1 5\\n1 2 4\\n2 3 5\\n3 2 30\\n3 3 5\") == \"5\"\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 5') == '5'\nassert solution('8 10') == '36'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 1\n2 1\n1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 2\n2 1 3\n1 3\n2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 6\n5 5 6 6 6\n5 6 5 6\n5 4 5 6\n5 6 5 6\n5 5 5 6\n5 6 5 6\n\"\"\") == \"4\"\nassert solution(\"\"\"\n9 9\n9 8 9 8 9\n9 7 9 8 9\n9 5 9 8 9\n9 5 8 9 7\n9 6 9 8 9\n9 5 8 9 7\n9 4 9 8 9\n9 6 8 9 7\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"1\""
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 3') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2 1\\n'\n    '2 1\\n'\n    '1 2\\n'\n    ) == '1'\nassert solution(\n    '3 2\\n'\n    '2 1 3\\n'\n    '1 3\\n'\n    '2 3\\n'\n    ) == '3'\n\nassert solution(\n    '5 2\\n'\n    '3 1 2 4 5\\n'\n    '4 2 5 1 3\\n'\n    '5 3 1 4 2\\n'\n    '1 4 2 5 3\\n'\n    '1 4 3 2 5\\n'\n    ) == '1,2,3,4,5'"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"5 1\") == \"4\""
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1\\n2 1\\n1 2\\n') == '1'\nassert solution('2 1\\n2 1\\n1 2\\n') == '2'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n2 1\\n1 2\") == \"1\"\nassert solution(\"3 2\\n2 1 3\\n1 3\\n2 3\") == \"3\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 8\") == \"5\"\nassert solution(\"6 5\") == \"5\"\nassert solution(\"1 2\") == \"-1\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 8\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6') == '5'\nassert solution('6 5\\n2 4\\n3 5\\n1 5\\n3 6\\n1 6') == '5'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 8\") == \"5\"\nassert solution(\"6 5\") == \"6\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6\n2 4\n3 5\n1 5\n3 6\n1 6''') == '5'\nassert solution('''5 7\n2 4\n3 5\n1 5\n3 6\n1 6\n1 7''') == '7'\nassert solution('''7 8\n2 4\n3 5\n1 5\n3 6\n1 6\n1 7\n1 8''') == '-1'\nassert solution('''5 5\n2 4\n3 5\n1 5\n3 6\n1 6\n1 7''') == '5'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\n1 2\n1 3\n2 3\n''') == '5'\n\nassert solution('''\n3 1\n2 3\n''') == '-1'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '-1'\nassert solution('6 5') == '5'\nassert solution('10 10') == '0'\nassert solution('10 5') == '-1'\nassert solution('15 15') == '15'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '-1'\nassert solution('5 5') == '5'\nassert solution('1 10') == '-1'\nassert solution('2 6') == '6'"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 5\n1 5\n1 2\n1 3\n2 3\n3 5\n2 5\n''') == '5'\nassert solution('''\n4 3\n1 3\n1 5\n1 4\n2 4\n3 4\n3 5\n''') == '-1'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '4.00'\nassert solution('6 3') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5') == '4.00'\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0') == '9.00'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 1\n1 1\n5 1\n5 5\n4 2''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0''') == '9.00'''\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '4.00'\nassert solution('1 1') == '4.00'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 1') == '4.00'\nassert solution('6 3') == '9.00'"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00', \"First\"\nassert solution('''2 1\n1 1\n5 1\n5 5\n4 2\n''') == '9.00', \"Second\"\nassert solution('''12 1\n1 1\n5 1\n5 5\n4 2\n''') == '6.00', \"Third\"\nassert solution('''4 1\n1 1\n5 1\n5 5\n4 2\n''') == '9.00', \"Fourth\"\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4.00'"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 1\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''\n6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\nassert solution('''\n10 8\n-100 -100\n-200 -100\n-100 -200\n-200 -200\n-200 -100\n-100 -200\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -100\n-100 -"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1\\n1 1\\n5 1\\n5 5\\n4 2') == '4.00'\nassert solution('6 3\\n-8 -8\\n0 -1\\n8 -8\\n1 0\\n0 10\\n-1 0') == '9.00'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 1\n5 1\n5 5\n4 2\n''') == '4.00'\nassert solution('''6 3\n-8 -8\n0 -1\n8 -8\n1 0\n0 10\n-1 0\n''') == '9.00'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 2') == '2 1 2 3'\nassert solution('3 3 4') == '1 2 1 2'\n\nprint(solution(input()))"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\") == \"2 1 2 3\"\nassert solution(\"3 3 4\") == \"1 2 1 2\""
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3\\n1 2 1 2\\n2 1 2 3\\n1 2 1 2\\n', \"First Test Case\"\nassert solution('''\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '3 1 1\\n1 3 1\\n1 1 1\\n1 2 1\\n', \"Second Test Case\"\nassert solution('''\n2 2\nPAINT 2 0 0 1 2\n''') == '2 1\\n1 2\\n', \"Third Test Case\"\nassert solution('''\n2 1\nPAINT 2 1 2\n''') == '1 2\\n1 2\\n', \"Fourth Test Case\"\nassert solution('''\n2 1\nPAINT 2 1 2\n''') == '2 2\\n', \"Fifth Test Case\"\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3'\nassert solution('''\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\nSample Output 2:\n3 1 1\n1 3 1\n1 1 1\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().rstrip()\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n\"\"\") == \"\"\"2 1 2 3\n1 2 1 2\n2 1 2 3\n1 2 1 2\n\"\"\", \"\"\"\n3\nPAINT 2 0 0 3 3\nSAVE\nPAINT 3 0 3 3 3\nLOAD 1\n\"\"\")\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3'\nassert solution('''\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '3 1 1'\nassert solution('''\n2 3 2\nPAINT 3 0 1 2\nPAINT 3 0 1 2\n''') == '1 2 1 2'\nassert solution('''\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '2 1 2 3'\n\nprint(solution('''\n5 5 5\nPAINT 1 2 1 2 3\nPAINT 1 2 1 2 3\nPAINT 1 2 1 2 3\nPAINT 1 2 1 2 3\n'''))\nprint(solution('''\n3 2 1\nPAINT 1 0 0\nPAINT 2 0 1\n'''))\nprint(solution('''\n3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n'''))\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 3 2\") == \"2 1 2 3\"\nassert solution(\"3 3 4\") == \"1 2 1 2\""
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2\") == \"2 1 2 3\", \"Should be 2 1 2 3\"\nassert solution(\"3 3 4\") == \"1 2 1 2\", \"Should be 1 2 1 2\"\nprint(\"You're a data scientist, huh?\")\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 4') == '3 1 1\\n1 3 1\\n1 1 1'\nassert solution('4 3 2') == '2 1 2 3 3'\nassert solution('5 3 5 4') == '4 4 4 4 4'\nassert solution('4 3 2') == '2 1 2 3 3'\nassert solution('10 10') == '10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '-1'\nassert solution('4 3') == '1 4 2 3'\nassert solution('6 3') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2\n2 3\n1 2 1 2 1''') == '1 2 3 2 1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 3\n1 2 3 4\n\"\"\") == \"1 4 2 3\"\nassert solution(\"\"\"\n5 1\n1 2 3 4 5\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n9 2\n1 3 2 4 5 6 8 7 9\n\"\"\") == \"1 3 4 5 6 7 8 9\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"1 2 3\"\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '1 4 2 3'\nassert solution('5 1') == '-1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == '1 4 2 3'\nassert solution(\"5 1\") == '-1'"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n2 1\n1 3\n4 6\n5 7''') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n4 2\n2 1\n1 3\n''') == '1'\nassert solution('''\n5\n0 2\n6 1\n4 3\n3 7\n5 8\n''') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n\n5 0\n2 6\n8 6\n5 7\n''') == '1'\n\nassert solution('''\n\n1 2\n2 1\n''') == '0'\n\nprint(\"All test cases passed.\")"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 0') == '1'\nassert solution('4 2') == '1'\nassert solution('4 5') == '0'"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4 2\n2 1\n1 3\n''') == \"1\"\nassert solution('''\n4\n5 0\n2 6\n8 6\n5 7\n''') == \"0\"\n'''\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n4 2\n2 1\n1 3\n''') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n4 2\\n1 1\\n1 2\") == '1'\nassert solution(\"4 4\\n1 1\\n1 2\\n1 3\") == '0'\nassert solution(\"4 2\\n2 1\\n1 3\\n3 4\") == '1'\nassert solution(\"4 3\\n1 3\\n1 2\\n2 1\") == '1'\nassert solution(\"4 5\\n1 1\\n3 4\\n5 1\\n2 4\\n6 4\") == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2\n2 1\n1 3\n''') == '1'\nassert solution('''4 2\n2 1\n1 3\n''') == '0'\nassert solution('''3 2\n2 1\n1 3\n''') == '0'\nassert solution('''10 20\n25 10\n30 20\n''') == '0'\nassert solution('''1000 100\n100 200\n200 500\n''') == '1'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5 0') == '1'\nassert solution('2 1') == '1'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n3\n4 2\n2 1\n1 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n5 0\n2 6\n8 6\n5 7\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4 0 3\") == \"4 140\"\nassert solution(\"2 1 0 1\") == \"1000 100\""
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 0 1') == '1000 100'\nassert solution('4 4 0 3') == '4 140'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4 0 3\") == \"4 140\"\nassert solution(\"2 1 0 1\") == \"1000 100\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4 0 3') == '4 140'\nassert solution('2 1 0 1') == '1000 100000'\nassert solution('10 1 2 1') == '10 1000 100000'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4 0 3') == '4 140'\nassert solution('2 1 0 1') == '1000 100000'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"4 140\"\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4 0 3\n0 1 4 10\n1 2 2 10\n0 2 4 30\n2 3 4 10\n''') == '1400'\nassert solution('''\n2 1 0 1\n0 1 1000 100\n''') == '1000 100000'''\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 0 3') == '4 140'\nassert solution('4 4 0 3') == '4 140'\nassert solution('2 1 0 1') == '1000 100'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 0 1\\n0 1 1000 100\\n') == '1000 1000000'\nassert solution('4 4 0 3\\n0 1 4 10\\n1 2 2 10\\n0 2 4 30\\n2 3 4 10\\n') == '4 140'"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '1000 100000'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3\n4 5\n4 3\n''') == '3'\nassert solution('''\n10\n2 3\n5 6\n7 4\n8 5\n10 5\n9 8\n''') == 'impossible'\nprint('All tests passed!')\n\n'''\n--- Part Two ---\nThe towers have a common security system that requires the transmission of sensitive data.\n\nIn this system, each ciphertext will be encrypted using one of the decryption machines and also encrypted using a certain encryption key. After the data has been sent, it is decrypted using the same key and then deciphered using the same cipher.\n\nThe key and ciphertexts are entered on the same line separated by a space character. The data is split into ciphertexts by the space character and deciphered using the decryption machine's cipher. The decryption machine's cipher is then deciphered using the key and the result is deciphered using the other machine's cipher.\n\nThe decrypted cipher is then displayed.\n\nThe third input gives a list of the ciphertexts to be sent. Each element is a list of the decryption machines's cipher, then their key, then the ciphertext to be deciphered. The ciphertext to be deciphered is then deciphered using the decryption machine's cipher. The decrypted cipher is then deciphered using the key and the result is deciphered using the other machine's cipher. The deciphered result is displayed.\n\nThe fourth input gives a list of the ciphertexts to be sent. Each element is a list of the decryption machines's cipher, then their key, then the ciphertext to be deciphered. The ciphertext to be deciphered is then deciphered using the decryption machine's cipher. The decrypted cipher is then deciphered using the key and the result is deciphered using the other machine's cipher. The deciphered result is displayed.\n\nSample Input:\n5\n5 1\n1 3\n2 5\n3 4\n4 5\n2 3\n3 4\n4 5\n3 5\n4 5\n4 5\n4 5\n4 5\n4 5\n3 5\n3 5\n3 5\n3 5\n3 5\n3 5\n3 5\n\nSample Output:\n8\n\n--- Part Two ---\nThe security system must be able to communicate with the decryption machines to validate that each ciphertext was sent correctly. Given the results of the first part, the security system must also be able to communicate with the other decryption machines to validate that the ciphertexts were sent correctly.\n\nIn this puzzle, each of the four computers has a set of data it has received and has been validated. The fourth computer is then validated by the first three computers and so on. To validate the fourth computer, the fourth computer has a copy of the decryption machine's cipher, its key, and the fourth ciphertext. The fourth computer decrypts using the decryption machine's cipher and uses the decryption machine's cipher to validate that the fourth computer's deciphered cipher is the same as the fourth ciphertext.\n\nGiven the results of the first part, the fourth computer has a copy of the decryption machine's cipher, its key, and the fourth ciphertext. The fourth computer then decrypts using the decryption machine's cipher and uses the decryption machine's cipher to validate that the fourth computer's deciphered cipher is the same as the fourth ciphertext.\n\nThe final computer has its decryption machine's cipher, its key, and the fourth ciphertext. The fourth computer then decrypts using the decryption machine's cipher and uses the decryption machine's cipher to validate that the fourth computer's deciphered cipher is the same as the fourth ciphertext.\n\nThe final computer then displays the fourth computer's deciphered cipher.\n\nGiven the results of the first part, the final computer has a copy of the decryption machine's cipher, its key, and the fourth ciphertext. The final computer then decrypts using the decryption machine's cipher and uses the decryption machine's cipher to validate that the fourth computer's deciphered cipher is the same as the fourth ciphertext.\n\nThe final computer then displays the fourth computer's deciphered cipher.\n\nIt is possible that the computers communicate with each other, so it is possible that the fourth computer will receive the same information as the third computer. However, if the computers are unable to communicate with each other, then the computers may receive different information.\n\nIf the computers are unable to communicate with each other, then all of the data is lost. The security system then becomes unable to communicate with the decryption machines and they must each supply a different key. The first computer then sends its key to the second computer. The second computer then sends its key to the third computer. The third computer then sends its key to the fourth computer. The fourth computer then sends its key to the first computer. The first computer then decrypts using the key sent to the second computer and uses the second computer's cipher to validate that the first computer's deciphered cipher is the same as the ciphertext sent to the fourth computer. The fourth computer then decrypts using the key sent to the third computer and uses the third computer's cipher to validate that the fourth computer's deciphered cipher is the same as the ciphertext sent to the first computer. The fourth computer then decrypts using the key sent to the fourth computer and uses the fourth computer's cipher to validate that the fourth computer's deciphered cipher is the same as the ciphertext sent to the second computer.\n\nThe fourth computer then displays the fourth computer's deciphered cipher.\n\nThe security system then becomes unable to communicate with the decryption machines and they must now supply a different key. The first computer then sends its key to the second computer. The second computer then sends its key to the third computer. The third computer then sends its key to the fourth computer. The fourth computer then sends its key to the first computer. The first computer then decrypts using the key sent to the second computer and uses the second computer's cipher to validate that the first computer's deciphered cipher is the same as the ciphertext sent to the fourth computer. The fourth computer then decrypts using the key sent to the third computer and uses the third computer's cipher to validate that the fourth computer's deciphered cipher is the same as the ciphertext sent to the first computer. The fourth computer then decrypts using the key sent to the fourth computer and uses the fourth computer's cipher to validate that the fourth computer's deciphered cipher is the same as the ciphertext sent to the second computer.\n\nThe fourth computer then displays the fourth computer's deciphered cipher.\n\nThe security system then becomes unable to communicate with the decryption machines and they must now supply a different key. The first computer then sends its key to the second computer. The second computer then sends its key to the third computer. The third computer then sends its key to the fourth computer. The fourth computer then sends its key to the first computer. The first computer then decrypts using the key sent to the second computer and uses the second computer's cipher to validate that the first computer's deciphered cipher is the same as the ciphertext sent to the fourth computer. The fourth computer then decrypts using the key sent to the third computer and uses the third computer's cipher to validate that the fourth computer's deciphered cipher is the same as the ciphertext sent to the first computer"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '3'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n1 3\n3 4\n4 6\n8 7\n10 9\n''') == '2'\nassert solution('''\n10 2\n10 3\n10 4\n10 5\n9 8\n''') == 'impossible'\nassert solution('''\n10 2\n10 3\n10 4\n10 5\n9 8\n''') == '3'\nassert solution('''\n3 4\n1 3\n2 2\n1 2\n''') == 'impossible'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n\"\"\") == \"3\"\nassert solution(\"\"\"\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n8 2\n8 3\n5 7\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n20 3\n80 20\n5 50\n1 50\n90 90\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\""
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"3\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"3 2\") == \"impossible\"\nassert solution(\"3 1\") == \"2\"\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '3'\nassert solution('''\n100 2\n3 5\n''') == 'impossible'\nassert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == 'impossible'\nassert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == 'impossible'\nassert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '3'\n''')"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '3'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 50\n50 70\n70 90\n''') == '3'\nassert solution('''\n8 2\n8 3\n5 7\n''') == 'impossible'\nprint('all tests passed')\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 8\n5 3\n4 7\n4 2\n4 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('120') == '120'\nassert solution('51090942171709440000') == '21'"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\nassert solution('10') == '0'\nassert solution('0') == '1'\nassert solution('1234567890') == '1'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\"\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"120\") == \"5\"\nassert solution(\"51090942171709440000\") == \"21\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n\"\"\"\n\nN, M, K = map(int, input().split())\n\nMOD = 10**9 + 7"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\""
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 1 2') == '45'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 4\") == \"24\"\nassert solution(\"1 2 3\") == \"6\""
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 1 2') == '45', 'Wrong answer'\nassert solution('3 3 3') == '10', 'Wrong answer'\nprint('\"Proper\" route', '=', '10')\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 1 2\") == \"45\"\nassert solution(\"3 3 3\") == \"10\"\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 1 2''') == '45'\nassert solution('''3 3 3''') == '10'\n\"\"\"\n\nn, m, k = map(int, input().split())\n\nn, m, k = min(n, m, k), max(n, m, k)\n\ncount = 1\n\nfor i in range(n, m+1):\n    count *= i\n\nfor j in range(m, k):\n    count /= j\n\nprint(count)\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '5'\nassert solution('3 3') == '10'"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'impossible'\nassert solution('3 1') == 'impossible'\nassert solution('4 1') == '15'\nassert solution('5 9') == '18'\nassert solution('2 6') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"impossible\"\nassert solution('5 3') == \"18\"\nassert solution('4 1') == \"20\"\nassert solution('3 1') == \"impossible\"\nassert solution('2 6') == \"impossible\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '1'\nassert solution('4 1') == '1'\nassert solution('5 9') == '18'\nassert solution('2 6') == '20'\nassert solution('5 3') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10') == '20'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n20') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3') == '18'\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n0') == 'impossible'\nassert solution('10\\n100 100\\n50 50\\n100 100') == 'impossible'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == '18'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n''') == '20'\n\n'''\nSample Testcase 2:\n\nSample Input 3:\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\nSample Output 3:\n18\n\nSample Testcase 3:\n\nSample Input 4:\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\nSample Output 4:\nimpossible\n\nSample Testcase 4:\n\nSample Input 5:\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\nSample Output 5:\nimpossible\n\n'''\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"impossible\"\nassert solution(\"3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n10\\n\") == \"18\"\n\"\"\"\n\nn = int(input())\ncities = list(map(int, input().split()))\nd = int(input())\n\ncities.sort()\n\nmin_dist = 10**9\nfor i in range(1, n-1):\n    min_dist = min(min_dist, abs(cities[i-1] - cities[i]) + abs(cities[i] - cities[i+1]))"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == \"20\"\nassert solution('5\\n3 1\\n4 1\\n5 9\\n2 6\\n5 3\\n5\\n') == \"impossible\""
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n\"\"\") == \"20\"\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"impossible\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"5 9\") == \"18\"\nassert solution(\"2 6\") == \"20\"\nassert solution(\"5 3\") == \"20\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"11\"\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '11'"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 5 10\n7 8 2\n''') == '3'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == '7', \"Tests\"\nassert solution('2') == '1', \"Tests\"\nassert solution('3') == '11', \"Tests\""
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 5 10\n7 8 2\n''') == '3'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 5 10\\n7 8 2') == '3'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10') == '11'\nassert solution('4\\n-1 -1 -1\\n5 5 5\\n10 10 10') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"11\"\nassert solution(\"1\") == \"1\"\n\"\"\"\nimport math"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 5 10\\n7 8 2\\n') == '3'\nassert solution('3\\n-1 -1 -1\\n5 5 5\\n10 10 10\\n') == '11'\n\n\"\"\""
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '11'\nassert solution('1') == '3'\nassert solution('1') == '11'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('3') == '3'\nassert solution('2') == '5'\nassert solution('1') == '3'\nassert solution('4') == '10'"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 1') == '2'\nassert solution('4 2') == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '2'\nassert solution('3 3 3 4') == '0'\nassert solution('5 5 5 5') == '1'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'\n\n'''\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n110\") == '2'\nassert solution(\"4 2\\n1000\\n1000\") == '0'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"0\""
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"2\"\nassert solution(\"4 2\") == \"0\"\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'\n\"\"\"\n\nn, m = [int(x) for x in stdin.split()]"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1\n110\n011\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 2 3\"\n) == \"1\", \"Should be 1\"\nassert solution(\n    \"1 2 3\"\n) == \"1\", \"Should be 1\"\nassert solution(\n    \"1 2 3\"\n) == \"2\", \"Should be 2\"\nassert solution(\n    \"1 2 3\"\n) == \"2\", \"Should be 2\"\nassert solution(\n    \"1 2 3\"\n) == \"3\", \"Should be 3\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3\n3\n2''') == '1'\n\nassert solution('''4\n1 2 3 4\n3\n4''') == '2'\n\nassert solution('''5\n1 2 3 4 5\n4\n3''') == '2'\n\nassert solution('''3\n1 2 3\n1\n1''') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n2') == '1'\nassert solution('3\\n1 2 3\\n3') == '1'\nassert solution('3\\n1 2 3\\n2') == '0'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n2\") == \"1\"\n\ninputs = \"\"\"\n1\n4\n1 2 3\n3\n2\n1 2 3\n3\n2\n1 2 3\n3\n2\n1 2 3\n3\n\"\"\"\nassert solution(inputs) == \"5\"\nassert solution(\"3\\n1 2 3\\n3\\n2\") == \"1\""
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1 3 2\") == \"5\"\nassert solution(\"1 3 5 2\") == \"6\"\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3\n2\n3\n3\n3\n''') == '1'\n\nassert solution('''5\n1 2 3\n2\n3\n3\n3\n''') == '5'\n\n'''"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    1 2 3\n    3\n    ''') == '1'\n\nassert solution('''\n    3\n    1 2 3\n    2\n    ''') == '5'\n\nassert solution('''\n    3\n    1 2 3\n    3\n    ''') == '0'\n\nassert solution('''\n    3\n    1 2 3\n    2\n    ''') == '0'\n\nassert solution('''\n    3\n    1 2 3\n    3\n    ''') == '0'"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\nassert solution(\"10 10 10 1\") == \"40\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\n\n--Your solution--\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 100 20\\n\") == \"0\"\nassert solution(\"10 10 1\\n\") == \"19\"\nassert solution(\"10 1000 20\\n\") == \"19\"\nassert solution(\"100 100 1\\n\") == \"0\"\n\"\"\"\nimport sys\n\nn, r, p = list(map(int, sys.stdin.readline().strip().split()))"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\n\"\"\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\n\nassert solution(\"1 100 200\") == \"50\"\nassert solution(\"10 10 1\") == \"19\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 100 20\") == \"0\"\nassert solution(\"10 10 1\") == \"19\""
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 100 20\\n') == '0'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n50 100 20\\n\") == \"19\"\nassert solution(\"10\\n1 100 20\\n\") == \"0\"\nassert solution(\"1\\n1 100 20\\n\") == \"0\"\n\"\"\"\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 100 20\\n\") == \"0\"\nassert solution(\"10 10 1\\n\") == \"19\""
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"10 10 1\") == \"19\"\nassert solution(\"1 100 20\") == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == \"SHIP IT\", \"First\"\n\nassert solution('''5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == \"c, b, d\", \"Second\"\n\nassert solution('''4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == \"a, b, c\", \"Third\"\n\nassert solution('''5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == \"classa, myfilec\", \"Fourth\"\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'c'\nassert solution('''5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'c'"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'SHIP IT'\n\nassert solution('''5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\n\nassert solution('''4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'SHIP IT'\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n    a b c d\n    a 1\n    import d, b, c\n    b 2\n    import d\n    import c\n    c 1\n    import c\n    d 0''') == 'SHIP IT'\nassert solution('''5\n    classa classb myfilec execd libe\n    classa 2\n    import classb\n    import myfilec, libe\n    classb 1\n    import execd\n    myfilec 1\n    import libe\n    execd 1\n    import libe\n    libe 0''') == 'SHIP IT'\nassert solution('''10\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n    f, h, k, p, q, r, s, t, u, v\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"SHIP IT\", \"First sample test\"\nassert solution(sample_input_2) == \"c,d,e,f,g,h,i,j,k\", \"Second sample test\"\nassert solution(input) == \"SHIP IT\", \"Third sample test\""
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\n\nassert solution('''classa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'classa'\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n\"\n    \"a b c d\\n\"\n    \"a 1\\n\"\n    \"import d, b, c\\n\"\n    \"b 2\\n\"\n    \"import d\\n\"\n    \"import c\\n\"\n    \"c 1\\n\"\n    \"import c\\n\"\n    \"d 0\\n\"\n) == \"c\"\n\nassert solution(\n    \"5\\n\"\n    \"classa classb myfilec execd libe\\n\"\n    \"classa 2\\n\"\n    \"import classb\\n\"\n    \"import myfilec, libe\\n\"\n    \"classb 1\\n\"\n    \"import execd\\n\"\n    \"myfilec 1\\n\"\n    \"import libe\\n\"\n    \"libe 0\\n\"\n) == \"SHIP IT\"\n\"\"\"\n\nfrom collections import defaultdict\nfrom collections import deque\nimport sys\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\na b c d\\n1\\nimport d, b, c\\n2\\nimport c\\n3\\nimport c\\n4\\nimport c\") == \"c\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nexecd 1\\nimport libe\\nlibe 0\") == \"classa\"\n\n\"\"\"\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'c'\nassert solution('''\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\nassert solution('''\n7\nclassa classb\nclassa 1\nimport classb\nclassc 1\nimport classc\nimport d\nimport e\nclassc 2\nimport e\nd 1\ne 1\n''') == 'e'\nassert solution('''\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\n'''\nimport sys\n\nlines = sys.stdin.readlines()\n\nn = int(lines[0])\nnodes = lines[1].split(\",\")\n\nimports = []\n\nfor i in range(2, len(lines), 3):\n    imports.append(lines[i])"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec, libe\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\nassert solution(\"4\\na b c d\\na 1\\nimport d, b, c\\nb 2\\nimport d\\nc 1\\nimport c\\n\\nd 0\") == \"SHIP IT\"\nassert solution(\"2\\nclassa classb myfilec execd\\nclassa 2\\nimport classb\\nimport myfilec\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\nassert solution(\"5\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\nassert solution(\"4\\nclassa classb myfilec execd libe\\nclassa 2\\nimport classb\\nimport myfilec\\nclassb 1\\nimport execd\\nmyfilec 1\\nimport libe\\nlibe 0\") == \"SHIP IT\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('5+3+x+4') == '4'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"1+1+x\") == \"2\"\nassert solution(\"x+x\") == \"2\"\nassert solution(\"x+y\") == \"2\"\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\nassert solution(\"1+x\") == \"1\"\nassert solution(\"5+3+x+4+x+5+3+x+4+x\") == \"8\""
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nassert solution('5+2+x') == '2'\nassert solution('1+2+x') == '3'\nassert solution('1+x+x') == '3'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\nassert solution('5+3+x+2+4') == '1'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5+3+x\") == \"1\"\nassert solution(\"20+3+x\") == \"2\"\n\nstdin = \"\"\"5+3+x\"\"\"\nassert solution(stdin) == \"1\"\n\nstdin = \"\"\"20+3+x\"\"\"\nassert solution(stdin) == \"2\"\n\"\"\""
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('9+10') == '19'\nassert solution('20+3+x') == '2'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10') == 'yes'\nassert solution('2 10') == 'no'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10\\n0 15\\n5 20\\n') == 'yes\\n'\nassert solution('2 10\\n1 15\\n0 20\\n') == 'no\\n'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 10\\n1 15\\n0 20\") == \"yes\"\nassert solution(\"2 10\\n5 20\\n0 20\") == \"no\""
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_value) == \"yes\"\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3\\n2 2\\n1 2\\n') == 'yes'\nassert solution('1 0\\n4 10\\n2 2\\n') == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10') == 'yes'\nassert solution('2 10') == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 10\\n0 15\\n5 20') == 'yes'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10') == 'yes'\nassert solution('2 10') == 'no'"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == 'yes'\nassert solution('2 10') == 'no'\nassert solution('1 10') == 'no'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0.25'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '4 4 4\\n'\n    '3\\n'\n    '2 green\\n'\n    '18 yellow\\n'\n    '34 red\\n'\n    '5 green\\n'\n) == '0.25'\nassert solution(\n    '4 4 4\\n'\n    '3\\n'\n    '2 green\\n'\n    '6 yellow\\n'\n    '10 red\\n'\n    '14 green\\n'\n    '4 red\\n'\n) == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0.25\"\nassert solution(\"2 4 4\\n4\\n2 green\\n6 yellow\\n10 red\\n14 green\\n4 red\") == \"0\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4 4\n4\n2 green\n18 yellow\n34 red\n5 green\n''') == '0.25'\nassert solution('''2 1 4\n1\n2 green\n''') == '1'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"0.25\""
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n4\\n1 green\\n2 green\") == \"0.25\"\nassert solution(\"3\\n4\\n1 green\\n2 green\") == \"0\"\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0'\nassert solution('4 4 4') == '0'\nassert solution('4 4 4') == '0'\nassert solution('4 4 4') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 4') == '0.25'\nassert solution('4 4 4') == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0.25'\nassert solution(\"4 4 4\\n4\\n3 green\\n18 yellow\\n34 red\\n5 green\\n\") == '0'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0.25'\nassert solution_cheat(stdin) == '0'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\nassert solution(\"6 7\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4\\n4 3\") == \"3\""
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 7\") == \"3\"\nassert solution(\"6 8\") == \"inf\""
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(samples[0]) == \"3\"\nassert solution(samples[1]) == \"3\""
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5') == '3'\nassert solution('6 8\\n1 3\\n1 4\\n3 2\\n4 2\\n5 6\\n6 5\\n3 4') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4''') == '3'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n4 3''') == '3'"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 7\n1 3\n1 4\n3 2\n4 2\n5 6\n6 5\n3 4\n''') == \"3\"\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\nassert solution('2 1') == '2'\nassert solution('2 2') == 'inf'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '4'\nassert solution('''\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '4'\nassert solution('''\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 4\\n\"\n    \"1 2 3 4\\n\"\n    \"3 4 5 6 7 4 7 8 8\\n\"\n    \"8 8 12 12\"\n) == \"2\"\nassert solution(\n    \"10 20 20\\n\"\n    \"5 7 8 10 11 12 13 14 16 17\\n\"\n    \"6 9 13 15 16 18 19 20\\n\"\n    \"6 7 9 10 12 14 16 18\\n\"\n    \"9 8 13 15 16 18 19 20\\n\"\n    \"7 6 9 10 11 12 13 14 16 17\\n\"\n    \"5 7 8 10 11 12 13 14 16 17\\n\"\n    \"4 5 6 9 10 11 12 13 14 16 17\\n\"\n    \"3 4 5 6 9 10 11 12 13 14 16 17\\n\"\n    \"2 3 4 5 6 7 8 9 10 11 12 13 14 16 17\"\n) == \"1\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4\\n1 2 3 4') == '4'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12') == '2'"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 4\\n1 2 3 4\\n2 3 4 5 6 7 4 7 8 8 12 12\"\n) == \"4\"\nassert solution(\n    \"12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\"\n) == \"2\"\nassert solution(\n    \"15 10\\n8 7 6 1 3 2 5 9 4 7 9\"\n) == \"12\"\nassert solution(\n    \"1 1\\n1 1\"\n) == \"1\"\nassert solution(\n    \"15 10\\n2 2 2 3 3 5 5 6 6 6 8 8\"\n) == \"6\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '4'\n\nassert solution('''\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\n\nassert solution('''\n7 4\n1 3 2 6 7 5 4\n''') == '3'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"12 3\") == \"2\"\nprint(\"Congratulations! All tests are done!\")\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n12\n1 2 3 4 5 6 7 4 7 8 8 12 12\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"4\""
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '4'\nassert solution('12 3\\n2 3 4 5 6 7 4 7 8 8 12 12\\n') == '2'\nassert solution('5 5\\n2 3 1 3 4\\n') == '5'\nassert solution('12 5\\n2 3 1 3 4\\n') == '12'\nassert solution('2 5\\n2 3 1 3 4\\n') == '2'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'hoose'\nassert solution('4') == 'hoose'\nassert solution('1') == 'NO TYPOS'"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\nhose\nhoose\noose\nmoose\n''') == 'hoose'\n\nassert solution('''\n1\nhoose\n''') == 'NO TYPOS'\n\nassert solution('''\n5\nhose\nhose\nnose\nnoises\nnoise\n''') == 'hoose'\n\nassert solution('''\n4\nhose\nhoose\noose\nmoose\n''') == 'hoose,moose,noise'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nhoose\\nhose\\noose\\nmoose\") == \"hoose, moose\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\noises\\noise') == 'hoose\\nmoose\\n'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"hoose\"\nassert solution(\"4\") == \"hoose\"\nassert solution(\"-\") == \"NO TYPOS\"\nassert solution(\"\") == \"NO TYPOS\"\nassert solution(\"4\", ) == \"hoose\"\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nhoose\nhose\nnose\nnoises\nnoise\n''') == 'noise'\n\nassert solution('''\nhoose\nhose\noose\nmoose\nsample\n''') =='sample'\n\nassert solution('''\nhoose\nhose\nnose\nnoises\nnoise\n''') == 'noise'\n\nassert solution('''\nhoose\nhose\noose\nmoose\nsample\n''') =='sample'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(samples[0]) == 'hoose'\nassert solution(samples[1]) =='moose'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == [\"hoose\", \"moose\"]"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nhoose\\nhose\\nnose\\nnoises\\nnoise') == 'hoose\\nnoises\\nnoise'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nhoose\nhose\nnose\nnoises\nnoise''') == 'hoose, noise'\n\nassert solution('''3\nhose\nhoose\noose''') == 'hoose, oose'\n\nprint(solution('''2\nhose\nhoose'''))\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '2'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"3\") == \"5\""
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '1 1\\n'\n    '3') == '2'\nassert solution(\n    '2 3\\n'\n    '4') == '0'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n3''') == '2'\nassert solution('''2 3\n4''') == '5'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n3') == '2'\nassert solution('2 3\\n4') == '0'\nassert solution('2 3\\n5') == '16'\nassert solution('2 3\\n10') == '8'"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\nassert solution(\"1\\n50 45 45\") == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"44.72135955\"\n\nassert solution(\"1\\n50 45 45\") == \"68.52419365\"\n\"\"\"\n\nfrom math import inf"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n50 45 45\\n\") == '68.52419365'\nassert solution(\"2\\n50 45 45\\n\") == '68.52419365'\nassert solution(\"4\\n50 45 45\\n\") == '41.75943316'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\""
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '44.72135955'\nassert solution('1') == '44.72135955'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\\\n1\n50 45 45\n\"\"\") == \"68.52419365\"\nprint(solution(open(0)))\nprint(solution(open(1)))\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n50 45 45\") == \"44.72135955\"\nassert solution(\"2\\n50 45 45\") == \"68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"44.72135955\"\nassert solution(\"2\") == \"68.52419365\"\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '44.72135955'\nassert solution('2') == '68.52419365'\nassert solution('5') == '84.31472793'\nassert solution('6') == '95.27354983'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n50 45 45\n\"\"\") == \"68.52419365\"\n\nassert solution(\"\"\"\n5\n10 40 50 10 50\n\"\"\") == \"46.31724175\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '3'\nassert solution('5 7 3 1') == '3'\nassert solution('4 3 2 1') == '2'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 1 5\n1 2\n\"\"\") == \"\"\"\n1\n3\n2\n\"\"\".strip()\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1 5') == '1\\n3\\n2\\n'\nassert solution('3 4 2 3') == '1\\n2\\n3\\n'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '0'"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3 1 5\n1 2\n''') == '1'\nassert solution('''3 4 2 3\n1 3 1\n''') == '2'\nassert solution('''3 4 2 3\n1 3 1\n''') == '2'\nassert solution('''3 4 2 3\n1 3 1\n''') == '3'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"3 4 2 3\") == \"2\"\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1 5\") == \"1\"\nassert solution(\"3 4 2 3\") == \"0\""
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4 2 3\n1 3 1\n''') == '1\nassert solution('''\n2 3 1 5\n1 2\n''') == '1\nassert solution('''\n3 4 2 3\n1 3 1\n''') == '1\nassert solution('''\n3 4 2 3\n1 3 1\n''') == '0\nassert solution('''\n3 4 2 3\n1 3 1\n''') == '0\n'''"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 1 5') == '1'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3 1 5\n1 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 4 2 3\n1 3 1\n\"\"\") == \"0\""
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '3'\nassert solution('5 3') == '2'\nprint('all tests passed')\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '3'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"5 3\") == \"2\""
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"10 5\") == \"9\"\nassert solution(\"100 5\") == \"99\"\n\n\"\"\"\n\nstdin = \"\"\"\n2 5\n1 1\n\"\"\""
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3') == '3'\nassert solution('4\\n4\\n4\\n4') == '4'\nassert solution('5\\n5\\n5\\n5') == '5'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '3'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5\\n1 1\\n') == '3'\nassert solution('5 3\\n2 2 3 2 2') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 5\n1 1\n''') == '3'\nassert solution('''\n2 3\n2 2 2\n''') == '2'"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '50'\nassert solution('3') == '25'\nassert solution('6') == '45'\n\"\"\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n100 100\n50 50\n''') == '50'\n\nassert solution('''\n3\n100 100\n50 50\n20 20\n''') == '20'\n\nassert solution('''\n4\n100 100\n50 50\n20 20\n''') == '20'\n\nassert solution('''\n5\n100 100\n50 50\n20 20\n50 50\n''') == '40'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2\n2 3\n2\n''') == '50', 'DONE!'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n3 4 5 6 7 8 9 10\n7 8 9 10\n8 9 10\n9 10\n10\n11\n13\n''') == '28', 'DONE!'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '50'\nassert solution('0 50') == '25'\nassert solution('0 0') == '25'\nassert solution('10 5') == '10.0'\nassert solution('20 30') == '25.0'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n100 100\") == \"50\"\nassert solution(\"3\\n100 100\\n50 50\\n50 0\\n50 0\") == \"25\"\n\n'''\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n100 100\n50 50\n50 50\n''') == '50'\nassert solution('''\n2\n100 100\n50 50\n''') == '50'\nassert solution('''\n3\n0 100\n50 50\n50 50\n''') == '50'\nassert solution('''\n3\n100 100\n50 50\n50 50\n''') == '50'\nassert solution('''\n2\n100 100\n50 50\n50 50\n''') == '50'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"25\"\nassert solution(\"2\") == \"50\"\nassert solution(\"3\") == \"100\"\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n100 100\\n50 50\") == \"50\"\nassert solution(\"2\\n0 50\\n50 0\") == \"25\""
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '50'\nassert solution('0 50') == '25'\n\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\n100 100\n50 50\n\"\"\") == \"50\"\n\nassert solution(\"\"\"\n10\n0 0\n0 0\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n20\n0 0\n0 0\n\"\"\") == \"10\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n100\n200\n''') == '160'\nassert solution('''\n1\n1\n2\n''') == '2'\nassert solution('''\n1\n1\n3\n''') == '4'\nassert solution('''\n1\n100\n200\n''') == '160'\nassert solution('''\n2\n100\n200\n''') == '160'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n100\n200\n2010\n5\n110\n''') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '160'\nassert solution('3') == '250'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"160\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '160'\nassert solution('3') == '250'"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n100\n200\n''') == '160'\nassert solution('''\n3\n100\n200\n2010\n''') == '250'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n100\\n200') == '160'\nassert solution('3\\n100\\n200\\n2010') == '250'"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"160\"\nassert solution(\"3\") == \"250\"\nassert solution(\"2 1 3\") == \"180\"\nassert solution(\"2 1 3 2\") == \"180\"\nassert solution(\"3 2 3\") == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n100\\n200\") == \"160\"\nassert solution(\"3\\n100\\n200\\n2010\") == \"250\"\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n100\n200\n''') == '160'\nassert solution('''\n3\n100\n200\n2010\n''') == '250'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n3 4 1\n2 3 3\n1 4 2\n''') == '2'\n\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\nSample Output 2:\n0\n''') == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n0 1 1\n2 3 1\n3 4 3\n4 0 3''') == '2'\nassert solution('''5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3''') == '0'\nassert solution('''6 6\n0 1 5\n1 2 5\n2 3 5\n3 4 5\n4 5 5\n5 0 5\nSample Input 3:\n10 2\n0 1 1\n2 3 1\n3 4 3\n4 5 3\n5 6 3\n6 7 3\n7 8 3\n8 9 3\n9 10 3\nSample Output 3:\n0\n''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"5 5\") == \"0\""
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n''') == '2'\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n4 2\n0 1 1\n2 3 1\n2 3 1\n3 4 3\n4 0 3\n\"\"\") == \"2\"\n\nassert solution(r\"\"\"\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n''') == '2'\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n0 1 2\n2 3 1\n3 4 3\n4 0 3\n4 1 4\n''') == '0'\nassert solution('''\n10 2\n0 1 2\n2 3 3\n3 4 3\n4 5 3\n5 6 3\n6 7 3\n7 8 3\n8 9 3\n9 10 3\n10 11 3\n11 12 3\n12 13 3\n13 14 3\n14 15 3\n15 16 3\n16 17 3\n17 18 3\n18 19 3\n19 20 3\n''') == '2'\nassert solution('''\n10 4\n0 1 2\n2 3 3\n3 4 3\n4 5 3\n5 6 3\n6 7 3\n7 8 3\n8 9 3\n9 10 3\n10 11 3\n11 12 3\n12 13 3\n13 14 3\n14 15 3\n15 16 3\n16 17 3\n17 18 3\n18 19 3\n19 20 3\n''') == '3'\nassert solution('''\n2 0\n0 1\n1 2\n''') == '1'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '0'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4 2\\n1 2\\n1 3\\n2 4\\n'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 2\\n2 3 4'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '1 1'\nassert solution('4 2') == '1 2'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1 1\"\n\nprint(solution(\"3 1\") == \"0 0\")\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '2 1 2 1 2'\nassert solution('6 3') == '1 1 1 2 1 2'\nassert solution('4 3') == '1 1 1 2 1'\n\nstdin = \"\"\"\n4 3\n3 3 2 1\n3 3 3\n6 3\n3 4\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"4 3\") == \"1 2\"\nassert solution(\"4 2\") == \"1\"\nprint(solution(input()))\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n3 3 2\\n6 3') == '1 1\\n2 3 4'\nassert solution('4 2\\n3 3 2 3') == '1 1\\n1 2 3 4'\nassert solution('4 3\\n3 3 2\\n3 2 1') == '1 1\\n2 1 3 4'\nassert solution('4 2\\n3 3 2\\n3 2 1') == '-1'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n3 3 2 1\n3 3 3\n''') == '1 1\n1 2\n2 3 4'''\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 1\\n1 2\\n2 3 4\\n'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 3 2\\n3 3 3') == '1 2\\n1 3 4\\n2 3 4\\n3 3 4\\n3 4\\n4\\n'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3 10\n0 0 D\n10 1 L\n''') == '10.0\nassert solution('''\n4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '10.0\nassert solution('''\n5 1 0\n1 2 L\n1 2 D\n1 3 D\n1 4 L\n''') == '10.0\nassert solution('''\n5 5 1\n1 1 L\n1 1 D\n1 2 D\n1 3 D\n1 4 L\n''') == '10.0\nassert solution('''\n5 3 7\n1 0 D\n1 1 L\n1 3 D\n''') == '4.0\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 10\") == \"10.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 10') == '10.0'\nassert solution('4 3 7') == '10.0'"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\nSample Output 2:\n10.0\n4.0\n1.0\n\n''') == '4.0\\n10.0\\n1.0\\n'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10\\n0 0 D\\n10 1 L') == '10.0\\n10.0\\n0.0'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\\n10.0\\n0.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"10.0\\n4.0\\n1.0\"\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 10\\n0 0 D\\n10 1 L\\n\") == \"10.0\"\nassert solution(\"4 3 7\\n1 0 D\\n3 0 D\\n4 1 L\\n6 2 D\\n\") == \"4.0\""
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 10') == '10.0'\nassert solution('4 3 7') == '10.0'"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 10\") == \"10.0\"\nassert solution(\"4 3 7\") == \"10.0\""
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 10\") == \"10.0\"\nassert solution(\"4 3 7\") == \"10.0\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abcab') == 'cdea'\nassert solution('abcab') == 'cdea'\nassert solution('abcab') == 'cdea'\nassert solution('abcab') == 'cdea'\nassert solution('abcab') == 'cdea'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abc') == 'cba'\nassert solution('xyz') == 'xyz'\nassert solution('be') == 'b'\nassert solution('our') == 'ou'\nassert solution('on') == 'on'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"we will avenge our dead parrot arr\"\nprint(solution(input()))\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sorted(open('sample_input_1.txt'))) == sorted(open('sample_output_1.txt'))\nassert solution(sorted(open('sample_input_2.txt'))) == sorted(open('sample_output_2.txt'))"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(''.join(stdin.splitlines(keepends=False))) == \"Impossible\"\nprint(solution(input()))\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ex eoii jpxbmx cvz uxju sjzzcn jzz\") == \"we will avenge our dead parrot arr\"\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''ex eoii jpxbmx cvz uxju sjzzcn jzz''') == 'we will avenge our dead parrot arr'\nassert solution('''wl jkd''') == 'Impossible'\nassert solution('''wel''') == 'wel'\nassert solution('''w''') == 'w'\nassert solution('''x''') == 'x'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(''.join(map(chr, range(ord('a'), ord('z')+1)))) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution(''.join(map(chr, range(ord('a'), ord('z')+1)))) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution(''.join(map(chr, range(ord('a'), ord('z')+1)))) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution(''.join(map(chr, range(ord('a'), ord('z')+1)))) == 'abcdefghijklmnopqrstuvwxyz'\nassert solution(''.join(map(chr, range(ord('a'), ord('z')+1)))) == 'abcdefghijklmnopqrstuvwxyz'\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().rstrip()"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Hamburg Bremen') == '68.3'\nassert solution('Bremen Rotterdam') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\nLondon\nLondon\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n1\nLondon\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\n\"\"\") == \"68.3\"\n\nassert solution(\"\"\"\n8\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\nAmsterdam Rotterdam 10 22 5 10\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n11\nAmsterdam Rotterdam 10 22 5 10\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\nAmsterdam Utrecht 10 22 5 10\n\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\nSample Input 3:\nAmsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\nSample Output 3:\nIMPOSSIBLE''') == 'IMPOSSIBLE'\n\nassert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\nSample Input 4:\nNew York Washington\n1\nNew York Washington 11 81\nSample Output 4:\n81.0''') == '81.0'\n\nassert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\nSample Input 5:\nHamburg Bremen\n1\nHamburg Bremen 46 55 50 60\nSample Output 5:\nIMPOSSIBLE''') == 'IMPOSSIBLE'\n\nassert solution('''New York Washington\n1\nNew York Washington 11 81\nSample Input 6:\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\nSample Output 6:\nIMPOSSIBLE''') == 'IMPOSSIBLE'\n\nassert solution('''New York Washington\n1\nNew York Washington 11 81\nHamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120\nSample Output 7:\n81.0''') == '81.0'"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''Hamburg Bremen\n3\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Frankfurt 14 226 10 120''') == '68.3'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join(['Hamburg Bremen',\n'3',\n'Hamburg Bremen 15 68 10 5',\n'Hamburg Bremen 46 55 50 60',\n'Bremen Frankfurt 14 226 10 120'])) == '68.3'\n\nassert solution('\\n'.join(['Amsterdam Rotterdam',\n'1',\n'Amsterdam Utrecht 10 22 5 10',\n'Hamburg Bremen 9 74 30 60',\n'Bremen Frankfurt 14 226 10 120',\n'Hamburg Bremen 13 89 10 120',\n'Hamburg Bremen 15 68 10 5',\n'Hamburg Bremen 46 55 50 60',\n'Hamburg Bremen 18 44 40 60',\n'Bremen Rotterdam 13 89 10 120',\n'Bremen Rotterdam 14 226 10 120',\n'Bremen Rotterdam 18 44 40 60',\n'Bremen Rotterdam 13 89 10 120'])) == '190.7'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''Bremen Hamburg Bremen 15 68 10 5\nBremen Hamburg Bremen 46 55 50 60\nHamburg Rotterdam 14 226 10 120''') == '68.3'\n\nassert solution('''Amsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\nBremen Hamburg Bremen\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Rotterdam 14 226 10 120''') == 'IMPOSSIBLE'\n\nassert solution('''Amsterdam Rotterdam\n1\nAmsterdam Utrecht 10 22 5 10\nBremen Hamburg Bremen\nHamburg Bremen 15 68 10 5\nHamburg Bremen 46 55 50 60\nBremen Rotterdam 14 226 10 120''') == '75.0'\n\n'''"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1\n2\n3\n3\n5\n6\n10\n8\n7\n''') == '74.4'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'IMPOSSIBLE'\nassert solution('2') == '68.3'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Hamburg Bremen') == '68.3'\nassert solution('Bremen Frankfurt') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0') == 'IMPOSSIBLE'\nassert solution('1') == 'IMPOSSIBLE'\nassert solution('2') == '72.3'\nassert solution('3') == '72.3'\nassert solution('4') == '4.5'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '4'\nassert solution('''\n5\n*-*.*\n|.|.|\n*.*-*\n|..|\n*.*.*\n''') == '3'\n\nprint(solution('''\n5\n*-*.*\n|.|.|\n*.*-*\n|..|\n*.*.*\n'''))\n\nprint(solution('''\n5\n*-*.*\n|.|.|\n*.*-*\n|..|\n*.*.*\n'''))\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\\n*-*.*\\n|.|.|\\n*.*-*\") == \"3\"\nassert solution(\n    \"2\\n*.*\\n|...|\\n*.*\") == \"4\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n*-*.*\\n|.|.|\\n*.*-*') == '3'\nassert solution('3\\n*.*-*\\n|.*|\\n*.*-*') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '4'\nassert solution('''\n*.*.\n|*.*.\n*.*.\n*.*.\n''') == '4'\nassert solution('''\n*.*.\n*.*.\n*.*.\n*.*.\n*.*.\n''') == '5'\nassert solution('''\n*.*\n|*.*\n*.*\n*.*\n*.*\n''') == '3'\nassert solution('''\n*.*.\n*.*\n*.*\n*.*\n*.*\n''') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '3'\n'''"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n*-*.*\\n|.|.|\\n*.*-*\\n|...|\\n*.*.*\\n\") == \"4\\n\"\nassert solution(\n    \"2\\n*.*\\n...\\n*.*\\n\") == \"4\\n\"\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n*-*.*\n|.|.|\n*.*-*\n|...|\n*.*.*\n''') == '3'\nassert solution('''\n2\n*.*\n...\n*.*\n''') == '4'\nassert solution('''\n2\n*.*\n...\n*.*\n''') == '4'\n''')\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nassert solution([8, 12210020, 1111, 2, 2]) == \"impossible\"\nassert solution([3, 1, 1, 2, 2]) == \"impossible\""
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n12210020\n''') == 'impossible'\nassert solution('''10\n11111\n''') == '2'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n20\n12210020\n''') == \"4\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n12210020\n12210102\n12210111\n12210122\n12210121\n12210112\n12210121\n12210122\n12210121\n12210122\n''') == '4'\nassert solution('''\n10\n11111111\n12210121\n12210112\n12210121\n12210122\n12210122\n12210121\n12210112\n12210111\n12210102\n''') == 'impossible'\nassert solution('''\n1\n0\n1\n2\n0\n1\n2\n1\n2\n1\n2\n''') == 'impossible'\nassert solution('''\n8\n0\n1\n2\n3\n4\n5\n6\n7\n''') == '4'\nassert solution('''\n1\n0\n0\n1\n2\n''') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == 'impossible'\nassert solution('4') == '4'\nassert solution('1111') == 'impossible'\nprint('All tests passed.')"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == 'impossible'\nassert solution('12210020') == '4'\nassert solution('1111') == 'impossible'"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == 'impossible'\nassert solution('4') == '4'\nassert solution('12210020') == '4'"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '4'\nassert solution('12210020') == 'impossible'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n12210020\n12210020\n12210020\n12210020\n12210020\n''') == 'impossible'\nassert solution('''\n5\n1111\n1111\n1111\n1111\n1111\n''') == '4'\nassert solution('''\n5\n12210020\n12210020\n12210020\n12210020\n12210020\n''') == 'impossible'\nassert solution('''\n5\n1111\n1111\n12210020\n12210020\n12210020\n''') == '4'\nassert solution('''\n5\n12210020\n12210020\n12210020\n12210020\n12210020\n''') == 'impossible'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\nSample Output 1:\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n\nSample Input 2:\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\nSample Output 2:\nBill will be bitten.\n''') == 'Bill will be bitten.'\n\nassert solution('''\n1\n0 0 999\n1000 1000 200\nSample Output 1:\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n\nSample Input 2:\n2\n250 250 300\n750 250 300\nSample Output 2:\nBill will be bitten.\n''') == 'Bill will be bitten.'\n\nassert solution('''\n2\n500 500 499\n0 0 999\n1000 1000 200\nSample Output 1:\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n\nSample Input 2:\n1\n250 250 300\n750 250 300\nSample Output 2:\nBill will be bitten.\n''') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n500 500 499\\n0 0 999\\n1000 1000 200\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00)\"\nassert solution(\"3\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\") == \"Bill will be bitten.\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Bill enters at (0.00, 0.00) and leaves at (0.00, 0.00).\\n\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('3') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('4') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n500 500 499\n0 0 999\n1000 1000 200\nSample Output 1:\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n\nSample Input 2:\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\nSample Output 2:\nBill will be bitten.\n\n''') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n''') == 'Bill will be bitten.'\nassert solution('''\n5\n500 500 499\n0 0 999\n1000 1000 200\n1000 1000 201\n999 1000 200\n''') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n500 500 499\\n0 0 999\\n1000 1000 200\\n') == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution('4\\n250 250 300\\n750 250 300\\n250 750 300\\n750 750 300\\nSample Output 2:\nBill will be bitten.') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n3\n500 500 499\n0 0 999\n1000 1000 200\n'''\n) == 'Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).'\nassert solution(\n'''\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\n'''\n) == 'Bill will be bitten.'\nassert solution(\n'''\n4\n250 250 300\n500 500 499\n750 250 300\n1000 1000 200\n'''\n) == 'Bill enters at (0.00, 0.00) and leaves at (1000.00, 0.00).'\nassert solution(\n'''\n4\n250 250 300\n500 500 499\n750 250 300\n1000 1000 200\n'''\n) == 'Bill enters at (0.00, 0.00) and leaves at (1000.00, 0.00).'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Bill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\\n\"\nassert solution(\"4\") == \"Bill will be bitten.\\n\"\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"(0,0) (0,1000)\"\nassert solution(\"3\") == \"(0,0) (1000,0)\"\nassert solution(\"4\") == \"(0,0) (1000,1000)\"\nassert solution(\"5\") == \"(0,0) (1000,1000)\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3') == '++xx+x++'\nassert solution('8 3') == 'xxoooooo'\n\"\"\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxxxxxxx') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3') == '++xx+o++'\nassert solution('8 3') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3\\n++xx+x++') == '++xx+o++'\nassert solution('8 3\\nxxo++') == 'xxoooo'\nassert solution('3 5\\n++x+x++') == 'xxxxx'\nassert solution('8 3\\n+o++') == 'ooooo'\nassert solution('8 3\\n++o++') == 'ooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3') == '++xx+o++'\nassert solution('10 3') == 'xxoooooo'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\n++xx+x++\\n\") == \"++xx+o++\"\nassert solution(\"8 3\\nxx+++x++\\n\") == \"xxooo\""
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == \"++xx+x++\""
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"8 3\n++xx+x++\n\"\"\") == \"++xx+o++\"\nassert solution(\"\"\"8 3\nxxxxxxxx\n\"\"\") == \"xxooooo\"\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == '++xx+o++'\nassert solution('10 7') == 'xxooo++o++'\nassert solution('20 100') == 'xoooxxoooxxooxxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++xooxxoooxxooxxooo++x"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nLost is Close to Lose\nBetter Documents Inc. wants to add Typo Checking in to the\nnext generation of word processors,\" he said.\n''') == 'close: lose\\the: hen the\\tin: inc is\\tinc: in\\tis: in\\tlose: close lost\\tthat clock is stopped, it will never strike., he said.\\n'''\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('The fox said, \"When?\"\\n\"Not till 12 o'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\"') == 'clock: oclock\\nhe: hen the\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n\\npass\\n\\nassert solution(\\'The fox said, \"When?\"\\n\"Not till 12 o\\'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\\') == \\'clock: oclock\\nhe: hen the\\ntill: will\\nwhen: hen\\nwill: till\\ndef solution(stdin: str) -> str:\\n\\npass\\n\\nassert solution(\\'The fox said, \"When?\"\\n\"Not till 12 o'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\\') == \\'clock: oclock\\nhe: hen the\\ntill: will\\nwhen: hen\\nwill: till\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"The fox said, \\\"When?\\\"\") == \"oclock: clock\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"oclock: clock\"\nassert solution(\"The fox said, \\\"When?\\\"\") == \"oclock: clock\"\n\"\"\"\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n***\n''') == 'clock: oclock\\the: hen the\\the: hen when\\tis: it\\tis: is\\till: will\\twhen: hen\\twill: till\\tdef solution(stdin: str) -> str:\\nthe: hen the\\twhen: hen\\tnot till 12 o'clock\\treplied the hen.\\tthat clock is stopped, it will never strike.'\n'''\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\"\"\"\n) == \"clock: oclock\\the: hen the\\till: will\\tis: it\\twhen: hen\\tthat clock is stopped\\tit will never strike.\""
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Lost is Close to Lose') == 'close: lose'\nassert solution('The fox said, \"When?\"') == 'close: lose'\nassert solution('The fox said, \"When?\"') == 'the: he'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '***'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('The fox said, \"When?\"\\n\"Not till 12 o\\'clock\", replied the hen.\\n\"That clock is stopped, it will never strike.\"\\n***') == \"\"\"close: lose\nthe: he\nhe: hen the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: hen\nnot: till\nclock: oclock\noclock: clock\nwhen: hen\ntill: will\nhen: he when\nit: is\nis: it\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\nlost is close to lose\n\"\"\") == \"\"\"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\", \"You failed a test.\"\n\nassert solution(\"\"\"\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\"\"\") == \"\"\"clock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\nLost is Close to Lose\n\"\"\") == \"close: lose\nhe: the\nin: inc is\ninc: in\nis: in\nlose: close lost\nlost: lose\nthe: he\n\"\"\")\n\nassert solution(\"\"\"\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\"\"\") == \"clock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 3 4 5 6 7 8 9 10') == '1'\nassert solution('3\\n9 2 4 1 8 5 7 6') == '2'\nassert solution('5\\n9 8 3 2 1 7 4 6') == '2'\nassert solution('15\\n5 4 2 3 1 8 7 6 9 10 14 15') == '3'\nassert solution('10\\n10 10 10 10 10 10 10 10 10 10') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('10') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 1 2\") == \"3\"\nassert solution(\"4 5 3 1 2\") == \"4\"\nassert solution(\"5 4 3 2 1\") == \"1\"\nassert solution(\"10 2 7 3 8 9 4 5 10 6\") == \"2\"\n\nn = int(input())\nd = list(map(int, input().split()))\n\nd.sort()\nans = 0\ni = 0\nwhile i < len(d):\n    ans += 1\n    if d[i]!= i:\n        j = d[i]\n        while i < j:\n            if d[i]!= i:\n                j -= 1\n            d[i], d[j] = d[j], d[i]\n            i += 1\nprint(ans)\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n1 2 7 3 8 9 4 5 10 6\n''') == '1'\nassert solution('''\n10\n3 8 1 9 4 5 2 7 10 6\n''') == '2'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1 2 7 3 8 9 4 5 10 6\n2\n3\n4\n7\n8\n5\n9\n10\n6\n''') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n1 2 7 3 8 9 4 5 10 6') == '1'\nassert solution('10\\n3 8 1 9 4 5 2 7 10 6') == '2'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n1 2\\n3 4\\n5 6') == '1\\n3\\n1 2\\n5 4\\n3 6'"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n10\n1 2 7 3 8 9 4 5 10 6\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\n3 8 1 9 4 5 2 7 10 6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10\n5 1 4 3 8 2 7 9 6\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\n6 1 5 4 3 2 7 9 8\n\"\"\") == \"2\""
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2') == '1'\nassert solution('3\\n1 2 3') == '2'\nassert solution('8\\n1 2 3 4 5 6 7 8 9 10') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 7 3 8 9 4 5 10 6\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10\""
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint(solution(input()))\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\""
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nassert solution('0.1') == '1'\nassert solution('-1.5') == '5'\nassert solution('-1.5 2') == '0.5'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0.142857 6''') == '1/7'\nassert solution('''1.6 1''') == '5/3'\nassert solution('''0.142857 6''') == '1/7'\nassert solution('''1.6 1''') == '5/3'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0.142857 6\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\nassert solution(\"0.142857 1\") == \"1/7\"\nassert solution(\"1.6 1\") == \"5/3\"\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.6 1') == '5/3'\nassert solution('0.142857') == '1/7'\nassert solution('-4.6 2') == '-10/3'\nassert solution('1.7 6') == '1/2'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint(solution(input()))\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\nprint('all test cases passed')\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0 0 0\n0 0 1\n''') == '6'\nassert solution('''\n2\n0 0 0\n0 0 1\n''') == '10'\n\nassert solution('''\n1\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n0 0 0\n0 0 1\n''') == '12'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n0 0 0') == '6', \"Wrong!\"\nassert solution('2\\n0 0 0\\n0 0 1') == '10', \"Wrong!\""
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 0 0\\n0 0 1\\n\") == \"10\"\nassert solution(\"4\\n0 0 0\\n0 0 1\\n0 0 2\\n\") == \"21\"\nassert solution(\"1\\n0 0 0\\n\") == \"6\"\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n0 0 0\") == \"6\", 'First'\nassert solution(\"2\\n0 0 0\\n0 0 1\") == \"10\", 'Second'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n0 0 0') == '6'\nassert solution('2\\n0 0 0\\n0 0 1') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 0 0\\n0 0 1') == '6'\nassert solution('2\\n0 0 0\\n0 0 1\\n0 1 0') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n0 0 0\n0 0 1\n''') == '6'\nassert solution('''\n2\n0 0 0\n0 0 1\n''') == '10'\n'''\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n0 0 0\\n0 0 1\") == \"6\"\nassert solution(\"2\\n0 0 0\\n0 0 1\\n0 0 2\") == \"10\""
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n0 0 0\n0 0 1''') == '10'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n0 0 0\n''') == '6'\n\nassert solution('''\n1\n0 0 0\n0 0 1\n''') == '10'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nprint('All done!')\n\"\"\"\nThe following figure shows an even-numbered hexagon with $n = 3$.\n\nThe following figure shows a few valid colorings.\n\nExample 1:\n\nThe colorings are shown from top to bottom.\n\nLet\u2019s assign an integer between $-1$ and $6$ to each hexagon. Let\u2019s $a_{i, j}$ be the integer assigned to the hexagon $(i, j)$. The following figure shows one example assignment:\n\nLet\u2019s color some edges of some hexagons. A coloring is valid iff it satisfies the following conditions:\n - For every pair of valid indices $i$ and $j$, either $a_{i, j} = -1$, or $a_{i, j}$ is equal to the number of colored edges of the hexagon $(i, j)$.\n - The colored edges form one or more loops. Each loop must not self-intersect. Two different loops must not share any vertices or edges.\n\nThe following figure shows a valid coloring:\n\nThe following two figures show two invalid colorings. The one on the left does not satisfy the $1$st condition, and the one on the right does not satisfy the $2$nd condition.\n\nHow many valid colorings are there?\n\n\"\"\"\n\n\"\"\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1') == '1'\nassert solution('7\\n-1 4 5 1 0 -1 -1\\n2 2\\n1 -1 1\\nSample Output 2:') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\\n-1 2 -1\\n2 2\\n1 -1 1\\n\"\n) == \"1\"\n\nassert solution(\n    \"7\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1\\n\"\n) == \"1\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\nassert solution('''7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n3\n-1 2 -1\n2 2\n1 -1 1\n\"\"\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\\\n3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''\\\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '2\\n-1 4 5 1 0 -1 -1\\n-1 3 2 0 0 1\\n-1 4 -1 1 0 -1 -1\\n1 3 4 2 2 4\\n0 2 3 -1 4 4 2\\n-1 4 4 3 3 2\\n1 -1 -1 -1 4 2 -1'\n    ) == '1'\nassert solution(\n    '4\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n-1 -1 -1 -1\\n1 1 1 1 1'\n    ) == '1'\nassert solution(\n    '6\\n-1 2 -1\\n2 2\\n1 -1 1\\n-1 2 -1\\n1 -1 1\\n-1 2 -1\\n1 -1 1'\n    ) == '3'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\nassert solution('00') == '0'\nassert solution('10') == '1'\nassert solution('1') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1001\") == \"3\"\nassert solution(\"1111\") == \"1\""
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\nassert solution('01') == '1'\nassert solution('10') == '2'\nassert solution('101') == '2'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 1\\n') == 'LLL'\nassert solution('5\\n1 2 2 1 2\\n') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'LLL'\nassert solution('5') == 'LLRLR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"LLL\"\nassert solution(\"5\") == \"LLRLR\"\n\n\"\"\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 2 1 1') == \"LLL\"\nassert solution('2 1 2 2 1') == \"LLR\"\nassert solution('2 2 2 1 1') == \"RLL\"\nassert solution('2 2 2 1 1') == \"RLL\"\nassert solution('1 1 1 1 1') == \"RRR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"LL\"\nassert solution(\"1 1 1\") == \"LL\"\nassert solution(\"1 1 1 2 1 1\") == \"LLLL\"\nassert solution(\"1 1 1 2 1 1 2 1 1 1\") == \"LLLLLL\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"LLL\"\n\nassert solution(\"\"\"\n5\n1 2 2 1 2\n\"\"\") == \"LLRLR\"\n\nassert solution(\"\"\"\n1\n3\n\"\"\") == \"RRR\""
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 2 1 2\") == \"LLRLR\"\nassert solution(\"3 2 1 1\") == \"LL\"\nassert solution(\"1 1 1 2 1 1\") == \"LLRRLLRR\"\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'L'\nassert solution('2') == 'LLL'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'LR'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"LLL\"\nassert solution(\"5\") == \"LLRLR\"\nassert solution(\"21\") == \"RRLLLRLRLL\"\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6 7\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 1\n3 4 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '49000000000070'\nassert solution('''4 5 2\n2 1 5000000\n3 4 3000000\n5 6 5000000\n1 6 7000000\n2 7 6000000''') == '25000000000021'\nassert solution('''3 4 3\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000''') == '49000000000070'\nassert solution('''7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n''') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n''') == '49000000000070'\nassert solution('''\n6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\n''') == '25000000000021'\nassert solution('''\n100000 5 5000000\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n''') == '25000000000021'\nassert solution('''\n100000 5 5000000\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n''') == 'Poor girl'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5 3000000\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\nassert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '49000000000070'\nprint(solution(*(list(map(int, input().split()))))\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 7 10') == '49000000000070'\nassert solution('6 6 7') == '25000000000021'"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 7 10\\n1 2 1000000\\n2 3 2000000\\n3 4 3000000\\n4 5 4000000\\n5 6 5000000\\n6 7 6000000\\n7 1 7000000\\n\") == \"49000000000070\"\nassert solution(\"6 6 7\\n1 3 1000000\\n3 5 3000000\\n5 1 5000000\\n2 4 2000000\\n4 6 4000000\\n6 2 6000000\\n\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 7 10\") == \"49000000000070\"\nassert solution(\"6 6 7\") == \"25000000000021\""
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 7 10') == '49000000000070'\nassert solution('6 6 7') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000''') == '25000000000021'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'Poor girl'\nassert solution('1 1 1000000') == '1000000000000011'\nassert solution('6 6 7') == '25000000000021'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"2\"\nassert solution(\"4 4\") == \"Yeah!\"\nassert solution(\"5 5\") == \"yeah!\"\nassert solution(\"5 5\") == \"yeah!\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"0\\n1\\n0\\n\"\nassert solution(\"4 4\") == \"2\\n2\\n0\\n1\\n2\\n\"\nassert solution(\"5 4\") == \"1\\n1\\n2\\n3\\n1\\n2\\n1\\n3\\n\"\nassert solution(\"1\") == \"1\\n\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 4\\n0 1\\n1 0\\n2 3\\n3 2\") == \"2\\n0\\n1\\n2\\n2\"\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == '2'\nassert solution('4 4') == '2'\nassert solution('4 4') == 'yeah!'\nassert solution('5 4') == 'yeah!'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4\n0 1\n1 0\n2 3\n3 2''') == '2'\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 3''') == 'Yeah!'\nassert solution('''6 4\n0 1\n1 0\n2 3\n3 2\n4 4\n4 5''') == '2'\nassert solution('''15 5\n0 1\n1 0\n2 3\n3 2\n4 4\n4 5\n5 4\n5 5\n6 4\n6 5\n6 6\n6 6\n7 5\n7 7\n7 7\n7 7\n7 7\n7 7\n8 4\n8 5\n8 6\n8 6\n8 6\n8 6\n8 6\n8 6''') == 'Yeah!'"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4,4], [[0,1],[1,0],[2,3],[3,2]], [[0],[1],[2],[3]]) == \"Yeah!\\n0\\n1\\n0\\n1\\n2\\n2\\n3\\n3\"\n\nassert solution([4,2], [[0,2],[0,1],[2,0],[1,3]], [[0],[1],[2],[3]]) == \"yeah\"\n\nassert solution([4,3], [[0,2],[0,3],[1,0],[1,2],[2,1],[2,3],[3,0],[3,1]], [[0],[1],[2],[3]]) == \"yeah\""
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '2'\nassert solution('4 4') == '2'\nassert solution('4 4') == 'Yeah!'\nassert solution('4 4') == 'Yeah!'\nassert solution('4 4') == 'Yeah!'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n0 1\n1 0\n2 3\n3 2\n''') == '2\n\nassert solution('''4 4\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n0 1\n1 0\n2 3\n3 2\n''') == '2'\nassert solution('''4 3\n0 1\n1 0\n2 3\n3 3\n''') == 'Yeah!'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '2'\nassert solution('5 4') == '1'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2\n''') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n3\n1 1 2\n2 1\n'''\n) == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"POSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\nprint(solution(input()))\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"POSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'POSSIBLE'\nassert solution('2') == 'IMPOSSIBLE'\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 1 2\") == \"POSSIBLE\"\nassert solution(\"2\\n1 2\") == \"IMPOSSIBLE\"\nprint('All tests passed!')\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'IMPOSSIBLE'\nassert solution('3') == 'POSSIBLE'\nassert solution('2') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2 2 3 3') == 'IMPOSSIBLE'\nassert solution('4\\n1 1 2 2') == 'POSSIBLE'\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n1 1 2\nSample Input 3:\n10\n1 2 2 2 1 3 3 5 1 4\nSample Output 3:\nPOSSIBLE\n1 4\n4 3\n3 5\n4 6\n5 2\n5 7\n7 8\n8 3\n8 9\n7 10\n6 11\n11 10\n11 12\n10 13\n13 14\n13 15\n14 16\n15 17\n14 18\n15 19\n14 20\n17 21\n16 22\n18 23\n20 24\n19 25\n18 26\n17 27\n16 28\n16 29\n18 30\n22 31\n21 32\n20 33\n19 34\n18 35\n17 36\n16 37\n14 38\n13 39\n12 40\n11 41\n10 42\n9 43\n8 44\n7 45\n6 46\n5 47\n4 48\n4 49\n4 50\n3 51\n2 52\n1 53\nSample Input 4:\n5\n1 3 2 1 3\nSample Output 4:\nIMPOSSIBLE\n1 4\n4 3\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 11\n10 12\n11 13\n12 14\n13 15\n14 16\n15 17\n16 18\n17 19\n18 20\n19 21\n20 22\n21 23\n22 24\n23 25\n24 26\n25 27\n26 28\n27 29\n28 30\n29 31\n30 32\n31 33\n32 34\n33 35\n34 36\n35 37\n36 38\n37 39\n38 40\n39 41\n40 42\n41 43\n42 44\n43 45\n44 46\n43 47\n42 48\n41 49\n40 50\n39 51\n38 52\n37 53\n36 54\n35 55\n34 56\n33 57\n32 58\n31 59\n30 60\n29 61\n28 62\n27 63\n26 64\n25 65\n24 66\n23 67\n22 68\n21 69\n20 70\n19 71\n18 72\n17 73\n16 74\n15 75\n14 76\n13 77\n12 78\n11 79\n10 80\n9 81\n8 82\n7 83\n6 84\n5 85\n4 86\n4 87\n4 88\n3 89\n2 90\n1 91\nSample Input 5:\n3\n1 3 1\nSample Output 5:\nPOSSIBLE\n1 4\n4 3\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 11\n10 12\n11 13\n12 14\n13 15\n14 16\n15 17\n16 18\n17 19\n18 20\n19 21\n20 22\n21 23\n22 24\n23 25\n24 26\n25 27\n26 28\n27 29\n28 30\n29 31\n30 32\n31 33\n32 34\n33 35\n34 36\n35 37\n36 38\n37 39\n38 40\n39 41\n40 42\n41 43\n42 44\n43 45\n44 46\n43 47\n42 48\n41 49\n40 50\n39 51\n38 52\n37 53\n36 54\n35 55\n34 56\n33 57\n32 58\n31 59\n30 60\n29 61\n28 62\n27 63\n26 64\n25 65\n24 66\n23 67\n22 68\n21 69\n20 70\n19 71\n18 72\n17 73\n16 74\n15 75\n14 76\n13 77\n12 78\n11 79\n10 80\n9 81\n8 82\n7 83\n6 84\n5 85\n4 86\n4 87\n4 88\n3 89\n2 90\n1 91\nSample Input 6:\n5\n1 3 1 3\nSample Output 6:\nPOSSIBLE\n1 4\n4 3\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 11\n10 12\n11 13\n12 14\n13 15\n14 16\n15 17\n16 18\n17 19\n18 20\n19 21\n20 22\n21 23\n22 24\n23 25\n24 26\n25 27\n26 28\n27 29\n28 30\n29 31\n30 32\n31 33\n32 34\n33 35\n34 36\n35 37\n36 38\n37 39\n38 40\n39 41\n40 42\n41 43\n42 44\n43 45\n44 46\n43 47\n42 48\n41 49\n40 50\n39 51\n38 52\n37 53\n36 54\n35 55\n34 56\n33 57\n32 58\n31 59\n30 60\n29 61\n28 62\n27 63\n26 64\n25 65\n24 66\n23 67\n22 68\n21 69\n20 70\n19 71\n18 72\n17 73\n16 74\n15 75\n14 76\n13 77\n12 78\n11 79\n10 80\n9 81\n8 82\n7 83\n6 84\n5 85\n4 86\n4 87\n4 88\n3 89\n2 90\n1 91\nSample Input 7:\n5\n1 1 2 2\nSample Output 7:\nPOSSIBLE\n1 4\n4 3\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 11\n10 12\n11 13\n12 14\n13 15\n14 16\n15 17\n16 18\n17 19\n18 20\n19 21\n20 22\n21 23\n22 24\n23 25\n24 26\n25 27\n26 28\n27 29\n28 30\n29 31\n30 32\n31 33\n32 34\n33 35\n34 36\n35 37\n36 38\n37 39\n38 40\n39 41\n40 42\n41 43\n42 44\n43 45\n44 46\n43 47\n42 48\n41 49\n40 50\n39 51\n38 52\n37 53\n36 54\n35 55\n34 56\n33 57\n32 58\n31 59\n30 60\n29 61\n28 62\n27 63\n26 64\n25 65\n24 66\n23 67\n22 68\n21 69\n20 70\n19 71\n18 72\n17 73\n16 74\n15 75\n14 76\n13 77\n12 78\n11 79\n10 80\n9 81\n8 82\n7 83\n6 84\n5 85\n4 86\n4 87\n4 88\n3 89\n2 90\n1 91\nSample Input 8:\n5\n1 3 1 3 1\nSample Output 8:\nPOSSIBLE\n1 4\n4 3\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 11\n10 12\n11 13\n12 14\n13 15\n14 16\n15 17\n16 18\n17 19\n18 20\n19 21\n20 22\n21 23\n22 24\n23 25\n24 26\n25 27\n26 28\n27 29\n28 30\n29 31\n30 32\n31 33\n32 34\n33 35\n34 36\n35 37\n36 38\n37 39\n38 40\n39 41\n40 42\n41 43\n42 44\n43 45\n44 46\n43 47\n42 48\n41 49\n40 50\n39 51\n38 52\n37 53\n36 54\n35 55\n34 56\n33 57\n32 58\n31 59\n30 60\n29 61\n28 62\n27 63\n26 64\n25 65\n24 66\n23 67\n22 68\n21 69\n20 70\n19 71\n18 72\n17 73\n16 74\n15 75\n14 76\n13 77\n12 78\n11"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'POSSIBLE\\n1 3\\n2 3'\nassert solution('2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '0.5 0.5 0.5'\n\nassert solution('''\n-1 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '0.5 0.5 0.5'\nassert solution('''\n-1 0 0\n1 0 0\n0 1 0\n0 0 1\n''') == '0.0 0.0 -0.0'\nprint('All test cases passed.')"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nprint('Almost there!')"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0\") == \"0.5 0.5 0.5\"\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n\") == \"0.5 0.5 0.5\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"11\") == \"2\"\nassert solution(\"22\") == \"3\"\nassert solution(\"33\") == \"0\"\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5 3 2 1 2 1\\n') == '3 2 1 5'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n3 6 2 3 2 2 2 1 5 6\n''') == '2'\n\nassert solution('''\n3\n17 17 17\n''') == '0'\n\nassert solution('''\n5\n1 2 1 1 1\n''') == '2'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('10') == '2'\nassert solution('100') == '4'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2\n3\n2\n1\n1\n2\n2\n3\n4\n3\n4\n5\n5\n5\n4\n3\n5\n5\n5\n4\n5\n4\n4\n4\n4\n4\n4\n4\n4\n5\n4\n4\n4\n5\n4\n4\n4\n4\n4\n4\n5\n5\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n5\n5\n5\n4\n4\n4\n4\n4\n4\n5\n5\n4\n4\n4\n4\n4\n4\n5\n5\n4\n4\n5\n4\n4\n4\n4\n4\n4\n4\n5\n5\n5\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n4\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 3 2\n''') == '3 2 3'\n\nassert solution('''\n3\n5 4 1 3 2\n''') == '2 2 2'\n\nassert solution('''\n8\n4 3 2 1 6 7 8\n''') == '3 1 3 2 6'\n\nassert solution('''\n8\n2 2 2 1 2 5 6 7\n''') == '2 2 2 1 6 7'\n\nassert solution('''\n10\n3 6 2 3 2 2 2 1 5 6\n''') == '3 2 2 1 5 6'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 1 1 1 1\\n1 1 1 1 1') == '1 1 1 1 1'\nassert solution('4\\n0 0 0 0\\n0 0 0 0') == '0 0 0 0'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 6 2 3 2 2 2 1 5 6') == '2\\n3 2 2 1 5\\n3 2 2\\n6 6\\n'\nassert solution('3\\n2 5 3 1 1 2 2 1 5 6') == '0\\n1 1 2\\n1 1\\n6 6\\n'\nassert solution('7\\n3 3 4 5 6 4 4 3 4 1 2 1 3 3 4 5 3 2 4 3 3 3 5 2 1 1 2 1 3') == '5\\n5 4 5 3\\n3 2 3\\n'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4') == '0\\n4\\n4\\n'\nprint(solution('1\\n10\\n20\\n100\\n1000\\n10000\\n100000\\n'))\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\") == \"IMPOSSIBLE\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"74.6666666667\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n3 2\\n3 2\\n\") == \"74.6666666667\"\nassert solution(\"3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n2 2\\n1 2\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 1') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1') == '74.6666666667'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\nSample Output 2:') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"IMPOSSIBLE\"\nassert solution(\n    \"3 2 1\\n1 2 7\\n2 3 8\\n1\\n3 2\\n\") == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n\"\"\") == \"74.6666666667\"\nassert solution(\"\"\"\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n\"\"\") == \"74.6666666667\""
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 1') == 'IMPOSSIBLE'\nassert solution('3 2 1') == '74.6666666667'\nassert solution('3 2 1') == '74.6666666667'\nassert solution('3 2 1') == '74.6666666667'\nassert solution('3 2 1') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == 'IMPOSSIBLE'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == '74.6666666667'\n\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n2 3\n''') == '74.6666666667'"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1') == \"IMPOSSIBLE\"\nassert solution('3 2 1') == \"74.6666666667\"\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 1') == 'IMPOSSIBLE'\nassert solution('3 2 1') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 1') == 'IMPOSSIBLE'\nassert solution('2 1 5') == '74.6666666667'\nassert solution('1 4 6') == '74.6666666667'\nassert solution('5 2 6') == '74.6666666667'\nassert solution('5 4 2') == '74.6666666667'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == \"IMPOSSIBLE\", \"First\"\nassert solution('''\n3 2 1\n1 2 7\n2 3 8\n1\n3 2\n''') == \"74.6666666667\", \"Second\""
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\nSample Output 2:\n1\n2\n1\n2\n2\n1\n''') == '1\\n2\\n1\\n2\\n2\\n1\\n'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n1 2\n2 3\n3 1\n3 4\n1 4\n''') == '1'\nassert solution('''\n3 3\n1 2\n2 3\n3 1\n2 4\n1 4\n''') == '2'\nassert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\nSample Output 2:\n0\n''') == '0'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n') == '1'\nassert solution('7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n') == '2'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '1'\nassert solution('7 7') == '2'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\nSample Input 3:\n5 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\nSample Output 3:\n1\n1\n1\n1\n1\n2\n''') == '0'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '1'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '2'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '2\\n1\\n1\\n2\\n1\\n1\\n2\\n2\\n1\\n'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\"\nassert solution(\"7 7\\n1 2\\n2 3\\n3 1\\n4 5\\n5 6\\n6 7\\n7 4\\n\") == \"2\"\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '1'\nassert solution('''\n5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '2'\n'''\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\\n1 2\\n2 3\\n3 1\\n3 4\\n1 4\\n4 5\\n\") == \"1\\n2\\n1\\n2\\n1\\n1\\n\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 10 2\") == \"10\"\nassert solution(\"4 10 3\") == \"5\"\nassert solution(\"4 10 4\") == \"0\"\nassert solution(\"4 10 1\") == \"10\"\nassert solution(\"4 1 2 3\") == \"3\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'\nassert solution('2 7 3') == '8'\nassert solution('2 5 4') == '9'\nassert solution('3 7 3') == '12'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '10'\n\"\"\"\n\nN, T, G = map(int, stdin.split())\n\ndiff = 0\n\nfor i in range(N):\n    diff = abs(int(stdin.split()[i+1]) - int(stdin.split()[i]))\n    if diff > T:\n        break\n\ntime = 0\n\nfor i in range(1, G+1):\n    time += abs(int(stdin.split()[i]) - int(stdin.split()[i-1]))\n    if time > T:\n        break"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 10 2') == '10'\nassert solution('4 10 3') == '5'\nassert solution('3 3 3') == '3'\nassert solution('5 5 5') == '0'"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '4 10 2'\n    '0'\n    '15'\n    '30'\n    '45'\n    ) == '5'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string, \"Oh no\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 10 2\n0\n15\n30\n45\n''') == '10'\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '5'\n\nassert solution('''\n4 10 3\n0\n15\n3\n45\n''') == '5'\n\nassert solution('''\n4 10 3\n0\n2\n4\n7\n''') == '5'\n\nassert solution('''\n3 4 2\n0\n1\n2\n''') == '2'"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 10 2\"\n) == \"10\"\n\nassert solution(\n    \"4 10 3\"\n) == \"5\"\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"10\"\nprint(\"solution() is ok\")\nassert check_solution()\nprint(\"check_solution() is ok\")\n\"\"\"\n\nimport sys\n\nN, T, G, *cabs = list(map(int, sys.stdin.read().split()))\n\ncabs.sort()\n\nlo = 0\nhi = cabs[-1]"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 10 2\n0\n15\n30\n45\n''') == '10'\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '5'\n\n\"\"\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n50 50 75\n25 25 25\n''') == '2'\nassert solution('''4 2\n50 50 75\n25 25 25\n''') == '1'\nassert solution('''4 3\n50 50 100\n25 25 25\n''') == '3'\nassert solution('''5 3\n50 50 50 50\n25 25 25 25\n''') == '4'\nassert solution('''5 2\n50 50 100\n25 25 25\n''') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4 2\n50 50 75\n25 25 25\n\"\"\") == \"2\"\nassert solution(\"\"\"5 2\n50 50 50 50\n25 25 25 25\n\"\"\") == \"1\"\nprint(solution(input()))\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n15\\n10\\n5\\n25\\n15\\n') == '1'\nassert solution('2\\n20\\n10\\n5\\n15\\n20\\n') == '2'\nassert solution('3\\n20\\n15\\n10\\n5\\n20\\n') == '1'\nassert solution('4\\n20\\n15\\n10\\n5\\n20\\n') == '2'\nassert solution('5\\n20\\n15\\n10\\n5\\n20\\n') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n50 50 75\\n25 25 25') == '2'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '1'"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '1'\nassert solution('3 2\\n11 22 11\\n') == '2'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '3'\nassert solution('8 2\\n33 34 35 36\\n') == '2'\nassert solution('8 2\\n77 72 78 79\\n') == '2'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n5 5\\n50 50 50 50\\n25 25 25 25\\n') == '2'\nassert solution('4 2\\n50 50 75\\n25 25 25\\n') == '1'\nassert solution('5 2\\n50 50 50 50\\n25 25 25 25\\n') == '4'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1\\n1\\n1') == '1'\nassert solution('2\\n2\\n2\\n2\\n2') == '1'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n50 50\\n25 25\\n\") == \"1\"\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n50 50 75\n25 25 25\n''') == '1'\nassert solution('''\n5\n50 50 50 50\n25 25 25 25\n''') == '1'\nassert solution('''\n4\n50 50 50 50\n25 25 25 25\n''') == '2'\nassert solution('''\n4\n50 50 50 50\n25 25 25 25\n''') == '1'\nassert solution('''\n4\n50 50 50 50\n25 25 25 25\n''') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4\\n.LX.\\n.X..\\n...L\\n.X..') == '1'\nassert solution('4 4\\n.LX.\\n.X..\\n...L\\n.X..') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\nLLXLLL\") == \"1\"\nassert solution(\"4 4\\n.LX.\\n.X..\\n...L\\n.X..\") == \"2\"\nassert solution(\"4 4\\n.X.\\nX..\\n....\\n.X.\") == \"0\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 4\\n.LX.\\n.X..\\n....\\n.L..\\n\"\n    ) == \"1\", f\"Actual: {solution(...)}\\nExpected: 1\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\n.XLX\n.X..\n...L\n.X..\n''') == '1'\nprint('Congratulations, have a nice day!')\nprint('Your solution: ', solution('''4 4\n.LX.\n.X..\n....\n.L..\n'''), 'is correct!')\nprint('Your solution: ', solution('''4 4\n.L..\n.X..\n...L\n.X..\n'''), 'is correct!')\nprint('Your solution: ', solution('''4 4\n.XLX\n.X..\n...L\n.X..\n'''), 'is correct!')\nprint('Your solution: ', solution('''4 4\n.XLX\n.X..\n....\n.L..\n'''), 'is correct!')\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n4 4\n.LX.\n.X..\n...L\n.X..\n''') == '1'\n\nassert solution(\n    '''\n4 4\n.X.L\n.X..\n...L\n.X..\n''') == '2'\n'''\n)"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..''') == '1'\nassert solution('''5 5\n.LXL.\n.X..\n...L\n.X..\nL.LL''') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n...L\n.X..''') == '1', \"Wrong\"\nassert solution('''4 4\n.X..\n.X..\n....\n.L..\n''') == '2', \"Wrong\"\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n.LX.\n.X..\n....\n.L..\n''') == '1'\nassert solution('''\n4 4\n.LX.\n.X..\n...L\n.X..\n''') == '2'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n\n\"\"\"\n\nR, C = map(int, input().split())\nmatrix = []\n\nfor i in range(R):\n    matrix.append(list(input()))"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n.L.X\\n.X..\\n.L..\") == \"1\"\nassert solution(\"4 4\\n.X.L\\n.X..\\n.X.X\\nL.X.X\") == \"2\"\nassert solution(\"4 4\\n.X.X\\n.X..\\n.X.L\\n.X.X\") == \"1\"\nassert solution(\"4 4\\n.X.X\\n.X.X\\n.X.X\\n.X.X\") == \"0\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\"\"\") == \"home\"\nassert solution(\"\"\"5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\"\"\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n\"\"\"\n) == \"home\"\nassert solution(\n    \"\"\"\n5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n\"\"\"\n) == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 4') == 'detention'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 4\\n1 5') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"home\"\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2 1\n1 1\n2 0 2\n2 1 3\n1 2\n''') == 'home', solution('''4 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''')\nassert solution('''5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''') == 'detention', solution('''5 2 1\n1 1\n2 0 2\n2 1 3\n2 2 4\n1 3\n''')\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'home'\nassert solution('10 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 4\\n1 5\\n') == 'detention'\nassert solution('10 20 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n1 4\\n1 5\\n') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"home\"\nassert solution(\"5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n\") == \"detention\""
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3\\n') == 'detention'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2 1') == 'home'\nassert solution('5 2 1') == 'detention'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\ntralalal\n''') == 'allatral', \"First\"\nassert solution('''\nzzzz\n''') == '-1', \"Second\""
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"zzzz\"\n\"\"\""
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\nprint(solution(*(stdin().split())))\n\"\"\""
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"tralalal\") == \"allatral\"\nassert solution(\"zzzz\") == \"-\"\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"allatral\"\nprint(solution(sys.stdin.read()))\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\ntralalal\n''') == 'allatral'\nassert solution('''\nzzzz\n''') == '-1'\nassert solution('''\nabababab\n''') == 'abababab'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"8\"\nassert solution(\"3 2 1 6 4 5\") == \"5\"\nassert solution(\"10 10 10 10 10 10 10 10 10 10 10\") == \"33\""
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n') == '5\\n'\nassert solution('6\\n') == '8\\n'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '5'\nassert solution('6\\n3 2 1 6 4 5\\n') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5\\n'\n    '1 2 3 4 5\\n'\n    ) == '5'\n\nassert solution(\n    '6\\n'\n    '3 2 1 6 4 5\\n'\n    ) == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n''') == '5'\nassert solution('''5\n5 1 2 3 4\n''') == '8'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '7'\nassert solution('''1000\n2 2 1 1 2 2 3 3 5 5\n''') == '4'"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '5'\nassert solution('''6\n3 2 1 6 4 5\n''') == '8'"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('3 2 1 6 4 5') == '8'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"8\""
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == '5'\nassert solution('5\\n1 2 3') == '4'\nassert solution('6\\n3 2 1 6 4 5') == '8'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(0).read()) == '1'\nprint(solution(open(0)))\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('47') == '1'\nassert solution('523') == '2'"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('47') == '1'\nassert solution('523') == '2'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '1'\nassert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('10') == '2'\nassert solution('123') == '3'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('523') == '2'\n\"\"\""
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('100') == '4'\nassert solution('1000') == '8'"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1\\n'\nassert solution('2') == '2\\n'\nassert solution('1000000') == '1\\n'\nassert solution('1311111') == '3\\n'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('47') == '1'\nassert solution('523') == '2'"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '1'\nassert solution('1') == '0'"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n0 1 20\n1 0 5\n''') == '1 0 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1 15'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1\\n1\\n1\\n1\\n'\nassert solution('1\\n1\\n1') == '1\\n1\\n1'\nassert solution('2\\n0 1 20') == '0\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5\\n0 1 10\\n1 2 10\\n0 3 10\\n3 2 10\\n2 0 20') == '1 0 5'\nassert solution('4 3\\n0 1 10\\n1 0 5\\n0 2 10\\n2 0 20') == '0 1 10'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 10\n0 1 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1 15\\n1 10'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\nassert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n0 4 20\n''') == '1'\nassert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n0 4 20\n''') == '1'\nassert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n0 4 20\n''') == '0'\nassert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n0 4 20\n0 5 20\n''') == '1'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20''') == '1 2 10'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\nassert solution(\"2 2\") == \"1 0 5\""
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0 1 15'\nassert solution('''4 6\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n2 2 10\n''') == '1 2 1 1 2 1 2'\nassert solution('''10 10\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n2 2 10\n''') == '0 1 5 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '2'\nprint(solution(input()))"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\nassert solution('''\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == \"1\"\nassert solution('''\n2 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == \"4\"\nassert solution('''\n5 2\n3 4\n5 5\n5 5\n4 4\n4 4\n3 3\n2 2\n''') == \"4\""
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3') == '5'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 5\\n2 5') == '1'\nassert solution('5 10\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 5\\n2 5') == '6'\nassert solution('5 5\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n4 5\\n5 5\\n2 5') == '1'"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5''') == '5'\nassert solution('''4 3\n4 4 8 12\n1 2\n2 3\n3 4\nSample Output 2:\n1\n\nSample Input 2:\n5 4\n5 6\n5 6\n1 4\n2 4\n3 4\n4 4\nSample Output 2:\n0\n''') == '0'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3') == '5'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n2 5') == '1'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n2 5') == '0'\nassert solution('5 6\\n1 3 2 1 5\\n1 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n2 5') == '4'\nassert solution('5 6\\n1 3 2 1 5\\n1 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n2 5\\n1 6\\n1 7') == '5'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"5\"\nassert solution(\"4 3\") == \"1\"\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '4'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '4'\nassert solution('4 4 8 12') == '7'"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6\n1 3 2 1 5\n1 3\n2 3\n1 4\n3 5\n4 5\n2 5\n''') == '5'\nassert solution('''\n4 3\n4 4 8 12\n1 2\n2 3\n3 4\n''') == '1'\n'''\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6\\n1 3 2 1 5\\n1 3\\n2 3\\n1 4\\n3 5\\n4 5\\n2 5\\n') == '1'\nassert solution('4 3\\n4 4 8 12\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\\n2 5\\n') == '1'\nassert solution('2 3\\n1 3\\n3 5\\n1 4\\n2 5\\n4 5\\n1 6\\n') == '0'"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '1'\nassert solution('4 4 8 12') == '2'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"030302\") == \"7\"\nassert solution(\"1311\") == \"24\""
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n019\n''') == '9'\n\nassert solution('''\n020\n''') == '6'\n\nassert solution('''\n02\n''') == '5'\n\nassert solution('''\n11\n''') == '6'\n\nassert solution('''\n0213\n''') == '4'"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n11''') == '12'\nassert solution('''13\n''') == '24'\nprint(solution('''{}\n'''.format(input().rstrip())))\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n01234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"010202\") == \"7\"\nassert solution(\"1311\") == \"24\"\nassert solution(\"11\") == \"1\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"025200\") == \"7\"\nassert solution(\"13112\") == \"24\"\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('020302') == '7'\nassert solution('1311') == '24'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"022\") == \"1\"\nassert solution(\"1311\") == \"4\""
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline().strip()"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3 1 3 10\""
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 10\n
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2\n.#.#..##..#\n####..####\n###.##....\n...#..####\n....##....\n.#.##..##.\n##########\n##########\n\"\"\") == \"3 1 3 10\"\nassert solution(\"\"\"\n7 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 9') == '1 15 3 10'\nassert solution('2 2') == '1 1 1 1 1 1'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 20') == '1 15 5 15'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 20') == '1 15 5 15'"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 2 3') == '1 3 2 3'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 0.1\") == \"16.339203308\"\nassert solution(\"10 0.125\") == \"16.339203308\"\nassert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\""
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"50 0.125\") == \"16.339203308\"\nassert solution(\"201 1.000\") == \"5.000000000\"\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"16.339203308\"\nassert solution(input_string) == \"5.000000000\"\ninput_string = sys.stdin.read()\nprint(solution(input_string))"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"2 2\n0.5 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 2\n0.5 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n1 11\n0.4 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 11\n0.4 1\n''') == '3'\nassert solution('''\n5 1\n1 10\n0.2 1\n''') == '4'\n\nfrom functools import reduce\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '3'\nprint(solution(input))"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n1 0.5 1\\n2 2\\n') == '1'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\n0.5 1\\n') == '2'\nassert solution('4 3\\n1 11\\n0.4 1\\n') == '3'\nprint('Tests passed')\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '3'\nassert solution('0.5 1') == '1'\nassert solution('1 11') == '2'"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"4 3\") == \"3\""
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n0.5 1\n''') == '2'\nassert solution('''\n4 3\n1 11\n0.4 1\n''') == '3'\nassert solution('''\n4 3\n0.4 1\n1 11\n0.4 1\n''') == '2'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3''') == '3.3333333333333333'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '5'\nassert solution('3') == '8.5'"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n7 1\\n3 2\\n10 0') == '10.5'\nassert solution('3\\n0 1\\n0 2\\n10 0') == '-1'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n7 1\n3 2\n10 0\n''') == '10.5', 'Wrong result for sample input 1'\nassert solution('''\n3\n7 1\n3 2\n10 0\n''') == '-1', 'Wrong result for sample input 2'"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n7 1\n3 2\n10 0\n''') == '10.5', 'First'\nassert solution('''\n3\n2 1\n4 0\n0 3\n''') == '-1', 'Second'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n7 1\n3 2\n10 0\n\"\"\") == \"10.5\"\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n7 1\n3 2\n10 0\n''') == '10.5'\nassert solution('''\n3\n1 2\n3 4\n5 6\n''') == '-1'\nassert solution('''\n3\n10 1\n20 2\n30 3\n''') == '30.0'\nprint('all tests passed')\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n0 1\n5 2\n3 3\n1 2\n2 3\n4 4\n''') == '10.5', 'First'\nassert solution('''\n5\n2 1\n5 2\n3 3\n1 2\n4 4\n''') == '-1', 'Second'\nassert solution('''\n5\n0 1\n4 0\n3 3\n1 2\n2 3\n''') == '10.5', 'Third'"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"10.5\"\nassert solution(\"\"\"\n3\n7 1\n3 2\n10 0\n\"\"\") == \"10.5\"\n\n\"\"\""
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n7 1\n3 2\n10 0\n\"\"\") == \"10.5\"\nassert solution(\"\"\"3\n3 2\n10 0\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.4\") == \"1\"\nassert solution(\"2 0.5\\n2 0.51\\n1 0.499\") == \"3\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0.5\") == \"1\"\nassert solution(\"2 0.5\") == \"2\"\nassert solution(\"2 0.51\") == \"2\"\nassert solution(\"1 0.49\") == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 0.5\n2 0.51\n1 0.49''') == '2'\nassert solution('''4 0.5\n3 0.5\n3 0.51\n2 0.51\nSample Input 3:\n4 0.5\n2 0.51\n1 0.5\n3 0.5\nSample Output 3:\n4\n''') == '4'\nassert solution('''100 0.5\n90 0.51\n80 0.5\n70 0.5\nSample Input 4:\n100 0.51\n90 0.51\n80 0.5\n70 0.5\nSample Output 4:\n100\n''') == '100'\nassert solution('''101 0.5\n90 0.51\n80 0.5\n70 0.5\nSample Input 5:\n101 0.51\n90 0.51\n80 0.5\n70 0.5\nSample Output 5:\n101\n''') == '101'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 0.5\n2 0.51\n1 0.49''') == '1'\n\nassert solution('''2 0.5\n2 0.51\n1 0.49\n3 0.4\n4 0.3\n''') == '3'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 0.1\\n1 0.1\") == \"1\"\nassert solution(\"2\\n1 0.5\\n1 0.51\") == \"1\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2 1\n1 1\n1 2\n''') == \"1\"\nassert solution('''3\n2 1\n1 1\n1 2\n''') == \"2\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49') == '2'\nprint('Check complete')"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 0.5\n2 0.51\n1 0.49\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 0.5\n2 0.51\n1 0.51\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 0.51\n6 0.49\n4 0.51\n3 0.5\n2 0.5\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 0.5\\n2 0.51\\n1 0.49\") == \"1\"\nprint('Test passed')\n\ninput()"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 4\\n1 1 2 2 2\\n0 1\\n2 3\\n3 4\\n4 2\") == \"yes\"\nassert solution(\"2 4 2\\n2 1\\n1 1\\n0 0\\n\") == \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\n\nassert solution('''\n4 5 3\n0 1 2 2\n1 2\n1 3\n2 3\n3 4\n''') == 'no'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n\"\"\") == \"yes\"\n\nassert solution(r\"\"\"\n5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n\"\"\") == \"no\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == \"yes\"\nassert solution(\"10 6 2\") == \"no\"\nassert solution(\"10 10 6\") == \"yes\"\n\"\"\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5 2\\n3 3 3 3\\n0 1') == 'yes'\nassert solution('5 4 4\\n1 1 2 2 2\\n2 3\\n3 4\\n4 2\\n') == 'no'"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\") == \"yes\"\nassert solution(\"5 4 4\") == \"no\"\nassert solution(\"5 4 2 0 1\") == \"no\"\nassert solution(\"10 10 10 10 10 10 10 10 10 10 10 10\") == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\nassert solution('''\n10 10 2\n1 2 1 1 1\n1 3\n2 4\n2 5\n4 5\n5 6\n6 8\n''') == 'yes'\n\nprint(solution('''\n3 5 2\n0 1\n0 3\n1 3\n1 2\n2 3\n'''))\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 5 2\\n\"\n    \"3 3 3 3\\n\"\n    \"0 1\\n\"\n    \"0 3\\n\"\n    \"1 3\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n) == \"yes\"\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 2') == 'yes'\nassert solution('5 4 4') == 'yes'\nassert solution('6 5 3') == 'no'\nassert solution('6 5 3') == 'no'"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"yes\"\nassert solution(\"4 5 2\\n3 3 3 3\\n0 1\\n0 3\\n1 3\\n1 2\\n2 3\\n\") == \"no\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2\\n1\\n2\\n7'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2 1'\nassert solution('4') == '5 4'"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2 1 0'\nassert solution('4') == '5 8 2 7'"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2 1 2\"\nassert solution(\"4\") == \"5 8 2 7\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5\\n5\\n5\") == \"2\\n1\\n2\\n7\"\n\nassert solution(\"4\\n20\\n15\\n17\\n14\") == \"5\\n8\\n2\\n7\"\n\nassert solution(\"3\\n1\\n2\\n3\") == \"5\\n8\\n2\\n7\"\n\nassert solution(\"3\\n4\\n5\\n6\") == \"5\\n8\\n2\\n7\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n5\n5\n5\n''') == '2 1 2 3'\nassert solution('''4\n20\n15\n17\n14\n''') == '5 8 7 2'\nprint('All tests passed!')"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n5\n5\n5\n''') == '2 1 3 4 5'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"4\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n5\n5\n5''') == '2 1 3'\nassert solution('''4\n20\n15\n17\n14''') == '5 8 2 7'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"python\"\nassert solution(\"-n 10\") == \"python -n 10\"\nassert solution(\"-n 10 -a\") == \"python -n 10 -a\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"-n 10\") == \"python main.py -n 10\"\nassert solution(\"python main.py -n 10\") == \"python main.py -n 10\"\nassert solution(\"python main.py\") == \"python main.py\"\nassert solution(\"main.py -n 10\") == \"python main.py -n 10\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n^\np^\n''') == 'python'\nassert solution('''\n^\np^\n^\n^^\n''') == 'python'\nassert solution('''\n^\np^\n^\n^^\n^\n^\n^^\n''') == 'python'\nassert solution('''\n^\np^\n^\n^^\n^\n^\n^\n''') == 'python'\nassert solution('''\n^\np^\n^\n^^\n^\n^\n^\n^\n^\n''') == 'python'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"python\\njava\") == \"python\\njava\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\npython\njava\n^\n^^^\n^^^\n''') == 'python\\npython\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\njava\\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"python\") == \"python\"\nassert solution(\"p^ main.py\") == \"p^ main.py\"\nassert solution(\"^ -n 10\") == \"^ -n 10\"\nassert solution(\"^^^\") == \"^^^\"\nassert solution(\"^^^^^^\") == \"^^^^^^\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'python'\nassert solution('2') == 'python main.py'\nassert solution('3') == ''\nassert solution('4') == 'python main.py -n 10'\nassert solution('5') == 'java'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\npython\njava\np^ main.py\n^ -n 10\n\"\"\") == \"\"\"\npython\njava\njava\npython\njava\npython\nmain.py\nmain.py -n 10\n\"\"\"\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'python'\nassert solution('4') == 'python'\nassert solution('3') == 'python'\nassert solution('2') == 'python'\nassert solution('1') == 'python'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\npython\njava\n^\n^^^\n^^^\n''') == 'python java'"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense', 'First part is wrong'\nassert solution('there') == 'impossible', 'Second part is wrong'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecet sesne', 'test 1 failed'\nassert solution('hitehre') == 'hitehre', 'test 2 failed'\nassert solution('a') == 'a', 'test 3 failed'\nassert solution('ab') == 'ab', 'test 4 failed'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'tihssnetnceemkaesprfecetsesne'\nassert solution('the twelfth') == 'the twelfth'\nassert solution('the') == 'the'\nassert solution('the') == 'the'\nassert solution('he') == 'he'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'impossible'\nassert solution('tihs snetncee mkaes prfecet sesne') == 'this sentence makes perfect sense'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"impossible\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"tihssnetnceemkaesprfecetsesne\") == \"this sentence makes perfect sense\"\nassert solution(\"hitehre\") == \"impossible\"\nassert solution(\"this sentence makes perfect sense\") == \"this sentence makes perfect sense\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'\nassert solution('thissentencee') == 'thissentencee'\n\"\"\"\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('theres') == 'impossible'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''tihssnetnceemkaesprfecetsesne\n5\nmakes\nperfect\nsense\nsentence\nthis\n''') == 'this sentence makes perfect sense'"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'\nassert solution('tihssen') == 'impossible'\nassert solution('tihssene') == 'impossible'\nassert solution('tihssens') == 'impossible'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"4\"\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 2') == '16'\nassert solution('5 2') == '25'\nassert solution('6 2') == '81'\nassert solution('3 2') == '16'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3\n''') == '4'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1\\n') == '1'\nassert solution('2 2\\n') == '4'\nassert solution('3 3\\n') == '6'\nassert solution('4 4\\n') == '17'"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 1\n\"\"\") == \"\"\"\n1\n\"\"\".strip()\nassert solution(\"\"\"\n2 2\n\"\"\") == \"\"\"\n4\n\"\"\".strip()"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"2 2\") == \"16\""
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\nprint('all tests passed')\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 1\n2 2\n1 1\n1 2''') == '16'\nassert solution('''4 4\n1 1\n2 1\n3 1\n4 1\n2 1\n3 1\n''') == '16'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'\n\"\"\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nabcbab\\n2\\ncb\\nbcab') == '2'\n\nassert solution('6\\nabcbab\\n2\\ncb\\nbcab\\ndcb') == '4'\n\nassert solution('6\\nabcbab\\n2\\ncb\\nbcab\\ndcb\\nea') == '3'\n\nassert solution('6\\nabcbab\\n2\\ncb\\nbcab\\ndcb\\nea\\nfa') == '3'\n\nassert solution('6\\nabcbab\\n2\\nabcba\\nbcab\\ndcb\\nea\\nfa') == '4'"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\nabcbab\n2\ncb\ncbab\nSample Output 2:\n2''') == '2'\n\nassert solution('''4\nabab\n2\nbac\nbaba\nSample Output 2:\n4''') == '4'\n\nassert solution('''4\na\n2\nbc\nbca\nSample Output 2:\n4''') == '4'"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\\n\") == \"1\"\nassert solution(\"4\\n\") == \"2\"\nassert solution(\"6\\n\") == \"2\"\nassert solution(\"8\\n\") == \"2\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(t1) == '2'\nassert solution(t2) == '4'\n\nsolution(sys.stdin)\n\"\"\"\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nabcbab\\n2\\ncb\\n') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0\n''') == '6\n85\n90\n95\n100\n105\n''')\n\nassert solution('''3\n2\n1 2\n2 1\n''') == '2\n17.071067\n20\n22.928932\n''')"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''30\n8\n0 0\n40 0\n40 40\n30 30\n8 10\n0 0''') == '12'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2\\n1\\n2') == '3'\nassert solution('25\\n9\\n5\\n8\\n4\\n1\\n2\\n3\\n4\\n6\\n7\\n8\\n') == '4'\nprint('YOUR CODE IS CORRECT!')\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '6'\nassert solution('10\\n50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n') == '6'\nassert solution('10\\n20\\n30\\n10 20\\n20 20\\n') == '4'\nprint('Congratulations, you passed all the tests!')"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('15') == '1.00'\nassert solution('2') == '0.00'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\"\nassert solution(\"50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\") == \"6\\n85\"\nassert solution(\"24\\n3\\n10 10\\n30 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\"\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '2'\nassert solution('1000000') == '4000000'"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6'\nassert solution('''24\n3\n10 10\n30 10\n20 20''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''50\n4\n110 10\n80 10\n80 0\n110 0''') == '6'\n\nassert solution('''24\n3\n10 10\n30 10\n20 20\n''') == '4'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"30\\n4\\n10 10\\n20 10\\n20 20\\n\") == \"4\\n17.071067\\n20\\n22.928932\"\nassert solution(\"30\\n10\\n10 20 20\\n30 20 20\\n\") == \"5\\n10\\n15.40929\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 11\n10 7\n10 4\n10 2\n10 10''') == \"yes\"\nassert solution('''11 3\n11 3\n11 1\n11 1\n11 1''') == \"yes\"\nassert solution('''13 13\n13 2\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n13 1\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'yes'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 10\n3 11\n9 11\n6 11\n8 11\n7 11\n2 11\n2 9\n3 10''') == 'yes'\n\nassert solution('''7 16\n11 7\n2 9\n6 9\n5 9\n4 9\n2 8\n1 9\n2 7\n1 8\n7 7\n8 7\n3 8\n4 7\n5 7\n1 10\n9 9\n6 8''') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 11\") == \"yes\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 11\n''') == 'yes'\nassert solution('''\n10 7\n''') == 'no'\nassert solution('''\n1 1\n''') == 'no'\n\nprint('all tests passed')"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\\n5 7\") == \"yes\"\nassert solution(\"10 11\\n10 7\") == \"yes\"\nassert solution(\"10 11\\n10 6\") == \"no\"\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 11\n''') == 'yes'\nassert solution('''\n10 7\n''') == 'no'\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str):\n        pass"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'yes'\nassert solution('10 11') == 'yes'\n\n----------------------------------------\n\nTime: O(n)\nSpace: O(1)"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"5\") == \"10 30 20 40 30 50\"\n\n'''\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 5 6', 'FAILED'\nassert solution('5') == '2 5 6 10', 'FAILED'"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\n\n\"\"\""
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"20\") == \"2\"\nassert solution(\"30\") == \"1\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\nassert solution('\\n'.join(['3', '4', '2 5'])) == '1 6'\nassert solution('\\n'.join(['5', '10 30', '20 40', '30 50', '10 60', '30 40'])) == '3 4'"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n3 4\n2 5\n1 6\n\"\"\") == \"3 1 6 2 5\"\n\nassert solution(\"\"\"\n4\n3 1 4\n2 5\n1 6\n\"\"\") == \"1 2 5 1 6\"\n\nassert solution(\"\"\"\n10\n10 30\n20 40\n30 50\n30 40\n30 40\n30 40\n30 40\n30 40\n30 40\n30 40\n30 40\n30 40\n30 40\n30 40\n\"\"\") == \"10 30 20 30 40 30 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40 30 40"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40') == '3\\n10 60\\n30 50\\n30 40'\nassert solution('6\\n10 30\\n20 40\\n30 50\\n10 60\\n30 40\\n30 40') == '3\\n10 60\\n30 50\\n30 40'"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '5836'\nassert solution('''5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16''') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"10\"\nassert solution(\"5 1\") == \"10\"\nassert solution(\"5 2\") == \"10\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'\nassert solution('8 3\\n2 2 2\\n2 2 2\\n1 2 2\\n2 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n2 2 2\\n3 2 2\\n3 2 2\\n3 2 2\\n2 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n3 2 2\\n3 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n5 2 2\\n4 2 2\\n4 2 2\\n5 2 2\\n6 2 2\\n6 2 2\\n6 2 2\\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1') == '5836'\nassert solution('5 2') == '1828'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1\") == '5836', \"Your solution does not match expected result\"\nassert solution(\"5 2\") == '1828', \"Your solution does not match expected result\"\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1\") == \"5836\"\nassert solution(\"5 2\") == \"1828\""
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '5836'\nassert solution('5 2') == '1828'"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '5836'\nassert solution('5 2\\n10 10 5\\n9 8 10\\n4 12 20\\n12 4 8\\n2 3 16') == '1828'"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"5836\"\nassert solution(\"3 2\") == \"1828\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == '50\\n'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n7 2401 3299 0\\n6 2401 2399 0\\n2 750 750 99') == '50'\nprint('All tests passed!')"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == '50'\nprint('Solution:', solution('''\n3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n'''))\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3]) == \"impossible\"\nassert solution([3, 7, 2401, 3299, 0]) == \"impossible\"\nassert solution([3, 6, 2401, 2399, 0]) == \"50\"\nassert solution([3, 2, 750, 750, 99]) == \"50\"\nassert solution([3, 9, 100, 400, 200]) == \"impossible\"\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99\n''') == 'impossible'"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n7 2401 3299 0\n6 2401 2399 0\n2 750 750 99''') == '50'\nassert solution('''3\n7 100 200 200\n8 100 300 200\n9 100 400 200''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"50\"\nassert solution(\"4\") == \"impossible\"\nassert solution(\"5\") == \"impossible\""
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '50'\nassert solution('5') == 'impossible'\nassert solution('10') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n20 22 33\n7 15 50\n7 14 59\n10 14 25\n14 16 25''') == 'impossible'\nassert solution('''5\n18 34 20\n1 10 4\n1 12 20\n12 14 20\n10 15 20''') == '50'\nassert solution('''5\n17 34 21\n1 12 3\n12 14 21\n1 13 3\n13 14 21''') == 'impossible'\nassert solution('''5\n12 14 21\n1 12 3\n12 14 21\n1 13 3\n13 14 21''') == 'impossible'\nassert solution('''5\n12 14 21\n1 12 3\n12 14 21\n1 13 3\n13 14 21''') == 'impossible'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3\n4\n2\n5\n''') == 'impossible'\nassert solution('''\n1\n3\n4\n2\n5\n''') == '50'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5.0') == '0 0 0 0 1', 'Sample Test 1 Failed'\nassert solution('4.5') == '0 0 0 1 1', 'Sample Test 2 Failed'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\nprint('Congratulations! Your solution passed all tests')"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5.0\") == \"0 0 0 0 1\"\nassert solution(\"4.5\") == \"0 0 0 1 1\""
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == '0 0 0 0 1'\nprint(solution(None))"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\nassert solution('-5.0') == '0 0 0 1 1'\nassert solution('-4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5.0\n''') == '0 0 0 0 1'\nassert solution('''\n4.5\n''') == '0 0 0 1 1'\nassert solution('''\n2.4\n''') == '0 0 1 1 1'\n''')"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n8 3 1\n1 7 8 2 6 4 3 5\n\"\"\"\n) == \"8\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\nprint('\"Run\" is the best practise for coding interviews!')\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 3 1\") == \"8\"\nassert solution(\"8 2 1\") == \"3\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 3 1\") == \"8\"\nassert solution(\"8 2 1\") == \"3\"\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 3 1\") == \"8\"\nassert solution(\"8 2 1\") == \"3\""
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 3 1\n1 7 8 2 6 4 3 5''') == '8'\nassert solution('''8 2 1\n1 7 8 2 6 4 3 5''') == '3'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(t1) == '8'\nassert solution(t2) == '3'\nassert solution(t3) == '2'\nassert solution(t4) == '8'\n\n'''\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 3 1\\n1 7 8 2 6 4 3 5\\n\") == \"8\"\nassert solution(\"8 2 1\\n1 7 8 2 6 4 3 5\\n\") == \"3\""
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n2 3 4 1\n''') == '3'\nassert solution('''6 3\n2 2 2 4 4 4\n''') == '4'\nassert solution('''7 2\n2 2 2 4 4 4 4 4\n''') == '6'"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3\\n2 2 2 4 4 4') == '4'\nassert solution('12 10\\n11 15 5 3 3 5 8 1 4 2') == '2'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n2 3 4 1\n''') == '3'\nassert solution('''6 3\n2 2 2 4 4 4\n''') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == str(\n    a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_a_b_c_"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('6') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\n2 3 4 1\n''') == '3'\n\nassert solution('''6 3\n2 2 2 4 4 4\n''') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\n2 3 4 1\n''') == '3'\n\nassert solution('''\n6 3\n2 2 2 4 4 4\n''') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"6 3\") == \"4\"\nassert solution(\"4 3\") == \"0\"\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '3'\nassert solution('6 3') == '4'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    5\n    2 3 4 1\n    ''') == '3'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('0.1 0.3 0.75') == '0.732050806'\n'''"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n\"\"\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 2.0') == '-1'\nassert solution('1 2 3.0') == '-1'\n\"\"\"\n\nimport re"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 2.222222') == '-1'\n'''"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0.12\n0.12\n0.12\n''') == '0.12'"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\nassert solution('1.1 1.732050 1.732050') == '1.732050808'\nassert solution('1.1 1.732050 1.732050') == '-1'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"1.732050808\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1.732050\") == \"1.7320508\"\nassert solution(\"1 1 3.0\") == \"-\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\n\n\"\"\"\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1.732050') == '1.732050828'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''\n1\n2 3 1\n0.75\n''') == '9.999999999000002'\nassert solution('''\n1\n0 0 0\n1\n''') == '0.500000'\nassert solution('''\n2\n0 0 0\n0 -0 0\n.5\n''') == '0.500001'\nassert solution('''\n1\n2 2 1\n0.75\n''') == '0.999875'\n''') == '2.2199999987500003'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n3 4 2\n.75\n''') == '2.4999999987500003', \"Should return 2.4999999987500003\"\nassert solution('''\n2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002', \"Should return 9.999999999000002\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n3 4 2\n.75\n''') == '2.4999999987500003'\nassert solution('''\n2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n3 4 2\n.75\n''') == \"2.4999999987500003\"\nassert solution('''\n2\n0 100 10\n0 -100 100\n.80\n''') == \"9.999999999000002\"\nprint('all tests passed')"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 -1 1 1\n.25\n5\n-2 -1 2 1\n.80\n''') == \"2.4999999987500003\"\nassert solution('''\n1\n-1 1 2\n.5\n''') == \"2.5000000000000002\"\nassert solution('''\n2\n0 -1 2 1\n.75\n''') == \"2.4999999987500003\"\nassert solution('''\n4\n-1 1 -1 1\n.75\n5\n-1 1 2 1\n.80\n''') == \"9.999999999000002\"\nassert solution('''\n1\n0 0 0\n.25\n''') == \"1.0\"\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 4 2\\n.75\") == \"2.4999999987500003\"\nassert solution(\"2\\n0 100 10\\n0 -100 100\\n.80\") == \"9.999999999000002\""
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2.4999999987500003'"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3 4 2\n.75\n''') == '2.4999999987500003', 'First'\nassert solution('''\n2\n0 100 10\n0 -100 100\n.80\n''') == '9.999999999000002', 'Second'\n\n'''\n    <-- NO SOLUTION\n'''\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n3\\n1 2 3\\n2 2 1\\n2 1 1\") == \"3\\n4\\n1 2\\n1 3\\n1 3\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3\") == \"0\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"3 6\") == \"1\"\nassert solution(\"2 1 6\") == \"3\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"0\"\nassert solution(\"2 1 6\") == \"3\"\nassert solution(\"2 1 6\") == \"0\"\n\"\"\"\nimport sys\nimport math\nfrom collections import deque\n\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '6 3\\n'\n    '2 1 6\\n'\n    '1 1 5 1 2\\n'\n    '2 1 6\\n'\n    '2 1 6\\n'\n    '2 3 3\\n'\n    '2 4 4\\n'\n    ) == '3\\n'\n\nassert solution(\n    '4 5\\n'\n    '1 1 4 3 4\\n'\n    '2 1 1\\n'\n    '2 2 2\\n'\n    '2 3 3\\n'\n    '2 4 4\\n'\n    ) == '2\\n'\n\nassert solution(\n    '0\\n'\n    '0\\n'\n    '0\\n'\n    '0\\n'\n    '0\\n'\n    ) == '0\\n'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '3'\nassert solution('10 10') == '7'\nassert solution('20 20') == '17'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\""
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3') == '0'\nassert solution('4 5') == '3'\nassert solution('1 1 4 3 4') == '1'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n\"\"\"\n    ) == \"3\"\n\nassert solution(\n    \"\"\"\n4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n\"\"\"\n    ) == \"2\"\n\nassert solution(\n    \"\"\"\n5 6\n1 1 5 1 2\n2 1 6\n2 2 2\n2 3 3\n2 4 4\n2 5 5\nSample Output 3:\n3\n2\n1\n0\n\nSample Output 4:\n0\n2\n1\n0\n\nSample Output 5:\n0\n2\n1\n0\n\nSample Output 6:\n0\n2\n1\n0\n\nSample Output 7:\n0\n2\n1\n0\n\nSample Output 8:\n0\n2\n1\n0\n\nSample Output 9:\n0\n2\n1\n0\n\nSample Output 10:\n0\n2\n1\n0\n\"\"\"\n    ) == \"3\"\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 6') == '0'\nassert solution('3 4') == '3'\nassert solution('2 1 6') == '0'\nassert solution('1 1 5 1 2') == '3'\nassert solution('2 1 6') == '0'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 4 3 4') == '0'\nassert solution('1 1 5 1 2') == '3'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\", \"Error\"\nassert solution(\"3 2 1000000007\") == \"4\", \"Error\"\nassert solution(\"-1 -1 1000000007\") == \"0\", \"Error\"\nassert solution(\"-1 2 1000000007\") == \"1\", \"Error\"\nassert solution(\"2 1 1000000007\") == \"0\", \"Error\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\", \"First\"\nassert solution(\"3 2 1000000007\") == \"4\", \"Second\"\n\nprint(f\"{solution(input())}\")\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 7 1000000007\n''') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 7 1000000007\") == \"1\"\nassert solution(\"3 2 1000000007\") == \"4\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '0'\nassert solution('3 2') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n\"\"\"\n\nfrom math import factorial\n\nn, k, p = map(int, stdin.split())"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 2 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n10001 10001\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 2 10\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 4 5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 7 1000000007\n''') == '1'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 10\\n6\") == \"5\"\nassert solution(\"3 5\\n11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 10\n6''') == '5'\nassert solution('''3 5\n11''') == '8'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5\") == \"8\"\nassert solution(\"10 10\") == \"5\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"10 10\") == \"5\"\nassert solution(\"3 5\") == \"8\"\nassert solution(\"11\") == \"8\""
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4') == '1'\nassert solution('3 4') == '1'\nassert solution('10 10') == '5'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([10, 10]) == \"5\"\nassert solution([3, 5]) == \"8\"\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10 10\n6\n11''') == '5'\nassert solution('''3 5\n11''') == '8'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '8'\nassert solution('10 10') == '5'\nprint('All tests passed!')\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n3') == '1'\nassert solution('10\\n20') == '3'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '8'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\nassert solution('''4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''10 4 6\n1 2 3\n3 4 5\n6 7 8\n9 0 1\n2 6 7\n4 5 9\n0 0 6\n8 7 4\n1 0 2\n''') == '9'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"2\""
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6 2\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == '2'\nassert solution('''5 6 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1''') == '3'\nassert solution('''4 6 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\nSample Output 3:\n0''') == '0'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5 3\") == \"2\"\nassert solution(\"10 5 4\") == \"4\"\nassert solution(\"3 5 5\") == \"1\"\nprint(\"You're a wise man and you have a wise idea.\")\nprint(\"But you can't make it.\")\nprint(\"You need to write a program.\")\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"3\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"8 8 7\") == \"2\"\nassert solution(\"8 8 1\") == \"3\"\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '4'"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5 3\") == \"2\"\nassert solution(\"4 5 3\") == \"3\"\nassert solution(\"2 3 3\") == \"1\"\nassert solution(\"6 7 5\") == \"4\"\nassert solution(\"100 200 100\") == \"4\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120''') == '3'\nassert solution('''5 4\n10 20 30\n2 20\n1 30\n1 32\n1 32\n3 120''') == '3'\nassert solution('''3 1\n10\n10\n1''') == '3'\nassert solution('''3 2\n10\n20\n30''') == '2'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3'\nassert solution('3 1') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '3'\nassert solution('5 1') == '3'\nassert solution('4 5') == '3'\nassert solution('2 2') == '3'\nassert solution('5 5') == '4'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '3'\nassert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '3'\nassert solution('1 1') == '1'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '3'\nassert solution('4 3') == '3'\nassert solution('10 20 30') == '3'\nassert solution('5 5 10') == '3'\nassert solution('2 20') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"3\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"3 1\") == \"3\"\nassert solution(\"3 1\") == \"3\"\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '3'\n\nassert solution('''\n3 2\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\n\nassert solution('''\n3 1\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\n\nassert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution(\"5 1\") == \"3\"\nassert solution(\"10 10\") == \"2\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\nassert solution('4') == '0'"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2'\n) == '1'\nassert solution(\n    '3'\n) == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\nassert solution('5') == '10'\nassert solution('1000') == '1001001001'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '5'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"5\"\nassert solution(\"10\") == \"30\"\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '5'"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2\"\nassert solution(__import__('sys').stdin.read()) == \"-1\""
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 1\n0 11 9\n1 0 10\n0 0 0\n0 5 0 3\n0 0 0 0\n''') == '2'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '-1'"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1\\n0 11 9\\n1 0 10\\n0 0 0') == '2'\nassert solution('4 3\\n0 1 0 19\\n0 0 2 0\\n0 5 0 3\\n0 0 0 0') == '-1'\nprint('All test cases passed!')"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 1\n0 11 9\n1 0 10\n0 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '2'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\nassert solution('''4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 1\n0 11 9\n1 0 10\n0 0 0\n''') == '2'\nassert solution('''\n4 3\n0 1 0 19\n0 0 2 0\n0 5 0 3\n0 0 0 0\n''') == '-1'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 3\") == \"2\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"2 100000 1\""
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5 0 3\\n0 1 10\\n1 2 1\\n1 3 1\\n0 2 1\\n2 3 10\\n') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\""
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 0 3\n0 1 10\n1 2 1\n1 3 1\n0 2 1\n2 3 10\n''') == '4 3 5\\n0 1 2\\n0 2 1\\n1 2 1\\n1 3 1\\n2 3 2'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 3\") == \"0 1 2\"\nassert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 3\") == \"0 1 2\"\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5 0 3') == '4 3 5'\nassert solution('2 1 0 1') == '2 100000 1'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '3 5'\nassert solution('1 3') == '2 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\nSMS\\nMMS\\n') == '3 5'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\n\"\"\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\nSMS\") == \"3 5\"\nassert solution(\"2 3\\nMMS\") == \"2 0\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\"\nprint(solution(input()))"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '3 5'\nassert solution('2 3') == '2 0'\nassert solution('3 3') == '1 0'\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\\n\") == \"3 5\""
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"1 2\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\\nSMS\\nMMS\") == \"3 5\"\nassert solution(\"2 3\\nSMS.M.\\nMMS\") == \"2 0\"\nassert solution(\"4 2\\nM.M\\nM..\\nM.M\") == \"4 0\"\nassert solution(\"4 2\\nM.M\\nM...\\nM.M\") == \"4 1\"\nassert solution(\"10 4\\n.M.M.\\n.M...\\n.M.M.\\n.M...\\n.M.M.\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n.M...\\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\nSMS\\nMMS\\n') == '3 5\\n'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 B\") == \"c\"\nassert solution(\"1 B\") == \"c\"\nassert solution(\"2 E a\") == \"c\"\nassert solution(\"2 E b\") == \"c\"\nassert solution(\"2 S\") == \"c\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n0\\n1\\n2\\n0 B\\n1 S\\n1 E a\\n1 G a\\n1 T a\\n2 E a\\n2 S\\n2 E a\\n2 G a\\n2 T a\\n2 E a\\n2 E b\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n5 S\\n5 T a\\n6 G b\\n6 T a\\n6 E a\\n6 E b\\n6 S\\n6 E a\\n6 T a\\n6 E b') == '3 c'\nassert solution('6\\n0\\n1\\n2\\n0 B\\n1 S\\n1 E a\\n1"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n0 B') == '2 c'\nassert solution('2\\n0 B') == '3 c'\nassert solution('3\\n0 B') == '6 c'\nassert solution('5\\n0 B') == '10 c'\nassert solution('5\\n0 B') == '10 c'"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"2\\n3 c\\n6 c\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 B\\n1 B\\n2 E a\\n2 E b\\n2 S\\n5 G a\\n5 T a\\n5 E a\\n5 E b\\n1 S\\n10 E a\\n10 G b\\n1 T a\") == \"2\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''13\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\nassert solution('''6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\n''') == '1'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '3 c'\n\nassert solution('''\n3\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\nSample Output 3:\n1\n3 b\n''') == '1 3 b'\n\nassert solution('''\n7\n0 G\n1 G\n2 E a\n2 S\n3 E a\n3 E b\n4 T a\n5 G b\nSample Output 4:\n3 c\n''') == '2 c'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 a B') == '2 c'\nassert solution('5 3 b S') == '3 c'\nassert solution('5 3 a T') == '6 c'\nassert solution('5 4 a E') == '5 c'\nassert solution('5 5 b E') == '5 c'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('6') == '6 b'\nassert solution('6') == '6 b'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 5\nSample Output''') == '40'\nassert solution('''288 291\nSample Output''') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '40'\nassert solution('717 10') == '23'\nprint(solution(input()))\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"288 291\") == \"76\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n-1 -5\n\"\"\") == \"\"\"\n2\n\"\"\".strip()\n\nassert solution(\"\"\"\n1 5\n\"\"\") == \"\"\"\n40\n\"\"\".strip()\n\nassert solution(\"\"\"\n28 1\n\"\"\") == \"\"\"\n1\n\"\"\".strip()\n\nassert solution(\"\"\"\n6895 1\n\"\"\") == \"\"\"\n1\n\"\"\".strip()\n\nassert solution(\"\"\"\n5 6\n\"\"\") == \"\"\"\n25\n\"\"\".strip()"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n1 5\n\"\"\"\n) == \"40\"\nassert solution(\n\"\"\"\n288 291\n\"\"\"\n) == \"76\"\n\nimport math\n\nA, B = map(int, stdin.split())\n\nd = abs(A - B)\n\nd = math.floor(math.log10(d)) + 1\n\nprint(sum(math.floor(d - i) for i in range(d)))\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"40\"\nassert solution(\"1 5\") == \"40\"\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 4\") == \"12\"\nassert solution(\"1 2\") == \"1\""
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"COG\", \"3\"\nassert solution(\"2\") == \"0\", \"0\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\nCAT\nDOG\nCOT\nCAT\nDOG\nCAT\n''') == \"COG\"\nassert solution('''\n2\nCAT\nDOG\n''') == \"0\"\nassert solution('''\n3\nCAT\nDOG\nCOT\n''') == \"COG\"\nassert solution('''\n1\nCAT\n''') == \"CAT\"\nassert solution('''\n4\nCAT\nDOG\nCOT\n''') == \"CAT\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nCAT\nDOG\nCOT''') == 'COG'\nassert solution('''2\nCAT\nDOG''') == '0'\nassert solution('''1\nA''') == 'A'\nassert solution('''0\nA''') == '0'\nassert solution('''1\nB''') == '0'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"GAS\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"CAT\"\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\nCAT\nDOG\n3\nCAT\nDOG\nCOT''') == \"COG\"\n\nassert solution('''3\nCAT\nDOG\nCOT''') == \"CAT\"\n\nassert solution('''2\nCAT\nDOG\n3\nCAT\nDOG\nCOT''') == \"CAT\"\n\nassert solution('''3\nCAT\nDOG\nCOT''') == \"CAT\"\n\nassert solution('''2\nCAT\nDOG\n3\nCAT\nDOG\nCOT''') == \"CAT\""
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\nCAT\nDOG\nCOT''') == 'COG'\nassert solution('''2\nCAT\nDOG\n''') == '0'\nassert solution('''1\nCAT\n''') == '0'\nassert solution('''1\nCAT\nCAT\n''') == '0'\nassert solution('''2\nCAT\nCAT\n''') == '0'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\nCAT\\nDOG\") == \"COG\"\nassert solution(\"3\\nCAT\\nDOG\\nCOT\") == \"COT\"\nassert solution(\"4\\nCAT\\nDOG\\nCOT\\nCAT\") == \"CAT\"\nassert solution(\"5\\nCAT\\nDOG\\nCOT\\nCAT\\nKAT\") == \"CAT\"\nassert solution(\"6\\nCAT\\nDOG\\nCOT\\nCAT\\nKAT\\nDOG\") == \"KAT\"\n\n\"\"\"\n\n\nimport collections\nimport math\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nCAT\nDOG\nCOT\nSAM\n''') == 'COG'\nassert solution('''5\nCAT\nDOG\nCOT\nSAM\n''') == '0'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'COG'\nassert solution('2') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'COG'\nassert solution('2') == '0'\nassert solution('1') == '0'"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3\\n10 20 30') == '9'\nassert solution('2 1 3\\n10 20 30') == '9'\nassert solution('4 3\\n10 20 30') == '8'\n\nassert solution('3 4\\n10 20 30') == '7'\nassert solution('5 4\\n10 20 30') == '5'"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"9\"\nassert solution(\"4 3\") == \"6\""
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 1\") == \"9\"\nassert solution(\"4 3\") == \"6\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n1 2\n3 4\n5 5\n5 4\n4 5''') == '6'\nassert solution('''6 2\n3 4\n1 2\n5 3\n2 5\n4 1\n2 4''') == '4'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('4 3') == '6'"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '10 1\\n'\n    '4 3\\n') == '6'\nassert solution(\n    '5 1\\n'\n    '4 3\\n') == '6'\nassert solution(\n    '7 1\\n'\n    '4 3\\n') == '6'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5\\n.V.\\n.V.\\n..#..\\n.V.#\\n.V./') == '3'\nassert solution('1 1\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V.\\n.V"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\nV.V.V.V.\\nH.H.H.H.H.') == '3'\nassert solution('10 10\\nV.V.V.V.\\nH.H.H.H.H.H.H.H.H.H.H.H.H.H.H.\\nH.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.H.\\n
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./\\n') == '3'\nassert solution('10 3\\n..#..\\n#.#.#\\n#..#.\\n#.#.#\\n.##.\\n#...#\\n.#...\\n.##.V\\n..V..\\n###VV\\n#.##..\\n###.#\\n#...##\\n#.##.#\\n#...#V\\n#.##.#\\n##.##.#\\n.##.##.'\n) == '-1'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\\\n.V.\\\\n.V.') == '3'\nassert solution('2 5\\\\nV...\\\\nH...V') == '-1'"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n..V..\n.V.V.\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\nV...\\nH...V') == '3'\nassert solution('5 5\\n.V.\\n./.V.\\n..#..\\n.V.#.\\n.V./') == '3'\n\n'''\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_stdin()) == \"3\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"-1\""
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\nV...V\\nH...V\") == \"3\"\nassert solution(\"5 5\\nV...\\nH...V\") == \"2\"\nassert solution(\"5 5\\nV...\\nH...\\nV...\\nH...V\") == \"2\"\nassert solution(\"5 5\\nV...\\nH...\\nV...\\nH...\\nV...\\nH...\\nV...\\nV...\\nV...\\nV...\\nV...\\nH...V\") == \"0\"\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()\n\"\"\"\nfrom functools import reduce\nfrom typing import Tuple\nimport unittest\n\n\nclass Solution:\n\n    def __init__(self):\n        self.max_value = None\n        self.max_path = None\n\n    def solve(self, floorplan: str) -> Tuple[int, int]:\n        self.max_path = -1\n        self.max_value = -1\n\n        def solve_recursive(x, y, matrix, visited):\n            if visited[x][y] == 1:\n                return\n            visited[x][y] = 1\n\n            if matrix[x][y] == '.':\n                self.max_path = max(self.max_path, abs(x - 1) + abs(y - 1))\n                return\n            if matrix[x][y] == '#':\n                return\n            if matrix[x][y] == 'V':\n                self.max_value = max(self.max_value, x - 1)\n                return\n            if matrix[x][y] == 'H':\n                self.max_value = max(self.max_value, x + 1)\n                return\n            if matrix[x][y] == '/':\n                solve_recursive(x + 1, y, matrix, visited)\n                solve_recursive(x - 1, y, matrix, visited)\n                solve_recursive(x, y - 1, matrix, visited)\n                solve_recursive(x, y + 1, matrix, visited)\n            if matrix[x][y] == '\\\\':\n                solve_recursive(x - 1, y, matrix, visited)\n                solve_recursive(x + 1, y, matrix, visited)\n                solve_recursive(x, y - 1, matrix, visited)\n                solve_recursive(x, y + 1, matrix, visited)\n\n        for x in range(len(floorplan)):\n            for y in range(len(floorplan[x])):\n                if floorplan[x][y] == '.':\n                    continue\n                visited = [[0] * len(floorplan) for i in range(len(floorplan))]\n                solve_recursive(x, y, floorplan, visited)\n\n        return self.max_value, self.max_path\n\n\nclass Test(unittest.TestCase):\n    def setUp(self) -> None:\n        pass\n\n    def tearDown(self) -> None:\n        pass\n\n    def test_solution(self) -> None:\n        sol = Solution()\n        for floorplan, solution in (\n            [\".V..\\n\", (1, 3)],\n            [\"V...\\n\", (1, 2)],\n            [\"..VV.\\n\", (3, 2)],\n            [\"..#..\\n\", (0, 0)],\n            [\"V...#\\n\", (0, 0)],\n            [\"...#..\\n\", (0, 0)],\n            [\"#.#VV\\n\", (0, 0)],\n            [\"####.\\n\", (0, 0)],\n        ):\n            self.assertEqual(solution, sol.solve(floorplan))\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == 'AMBIGUOUS', \"First\"\nassert solution('''\n4\ncdefghi\nefghijk\nefghijx\nabcdefg\n''') == 'AMBIGUOUS', \"Second\""
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''n fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog''') == 'AMBIGUOUS'\n\"\"\""
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\n3\nxyz\nxyx\nxyxx\"\"\") == \"AMBIGUOUS\"\n\nassert solution(\"\"\"\\\n7\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\nSample Output 2:\nAMBIGUOUS\n\"\"\") == \"AMBIGUOUS\"\n\nimport os\nfrom io import StringIO\nimport unittest"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\nn fox jumps ove\nuick brown f\nThe quick b\ny dog.\nrown fox\nmps over the l\nthe lazy dog\n''') == 'AMBIGUOUS', 'Your solution failed the test case!'\n\nassert solution('''\n2\nabc\n''') == 'AMBIGUOUS', 'Your solution failed the test case!'\n\nassert solution('''\n2\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\nzzzz\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n' + 'n fox jumps ove\\n' + 'uick brown f\\n' + 'The quick b\\n' + 'y dog.\\n' + 'rown fox\\n' +'mps over the l\\n' + 'the lazy dog\\n') == 'AMBIGUOUS'\nassert solution('7\\n' + 'cdefghi\\n' + 'efghijk\\n' + 'efghijx\\n' + 'abcdefg\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog\\n') == 'AMBIGUOUS'\nassert solution('4\\ncdefghi\\nefghijk\\nefghijx\\nabcdefg\\n') == 'AMBIGUOUS'\nassert solution('3\\nabc\\nabcd\\nabc\\n') == 'AMBIGUOUS'\nassert solution('1\\nab\\n') == 'AMBIGUOUS'\nassert solution('2\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n') == 'AMBIGUOUS', 'AMBIGUOUS'\nassert solution('9\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n') == 'AMBIGUOUS', 'AMBIGUOUS'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\nfox\njumps\nover\nthe\nfox''') == 'AMBIGUOUS'\n\nassert solution('''4\nfox\njumps\nover\nthe\nfox''') == 'fox jumps over the fox'\n\nassert solution('''5\nfox\njumps\nover\nthe\nfox''') == 'fox jumps over the fox'\n\nassert solution('''6\nfox\njumps\nover\nthe\nfox''') == 'AMBIGUOUS'\n\nassert solution('''7\nfox\njumps\nover\nthe\nfox''') == 'AMBIGUOUS'"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"n fox jumps ove\\nuick brown f\\nThe quick b\\nrown fox\\nmps over the l\\nthe lazy dog\\n\") == \"AMBIGUOUS\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '--+0-', 'Expected \"--+0-\", found {}'.format(solution('5 6'))\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+0-', 'Case 1'\nassert solution('''\n6 6\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n''') == '--0--', 'Case 2'\nassert solution('''\n3 2\n1 2 1\n-2 0 2\n''') == '0+-', 'Case 3'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n1 2 1\n-2 0 2''') == '0+-', '''test'''\n\nassert solution('''5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1''') == '--+0-', '''test'''\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"--+0-\"\n\nassert solution(\"3 2\") == \"0+-\n\nassert solution(\"4 5 2\") == \"-+--\n\nassert solution(\"4 5 3\") == \"-+---\n\nassert solution(\"4 5 1\") == \"-+--"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"--+0-\", \"Expected '--+0-', but got '\" + solution(\"5 6\") + \"'\"\nassert solution(\"3 2\") == \"0+-\", \"Expected '0+-', but got '\" + solution(\"3 2\") + \"'\""
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(samples[0]) == \"impossible\"\nassert solution(samples[1]) == \"--+0-1-0--\""
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n\"\"\") == \"--+0-\"\nassert solution(\n\"\"\"\n2 5\n1 4\n1 4\n\"\"\") == \"0+-\"\nassert solution(\n\"\"\"\n2 5\n1 4\n1 4\n\"\"\") == \"impossible\"\nassert solution(\n\"\"\"\n2 5\n1 4\n2 4\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6\n-3 -2 3\n-2 -2 4\n2 3 3\n-1 1 2\n0 1 4\n2 5 1\n''') == '--+0-'\n\"\"\"\nGiven a 2D plane, where each ship is represented by a line segment parallel to the x-axis, check if there are any 2D ships that collide. A ship collides with another ship if the two endpoints of the ship touch each other.\n\nExample 1:\n\nInput: \n\n2\n1 2 1\n-2 0 2\n\nOutput: \n\nimpossible\n\nExplanation: \n\nHere is a possible sequence of turns for the first line:\n\nturn right, turn left, move forward, move forward\nturn right, move forward, turn left, move forward\nIf the first ship collides with the second, the result will be impossible.\n\nExample 2:\n\nInput: \n\n1\n-2 0 1\n\nOutput: \n\n+--+0-\n\nExplanation: \n\nHere is a possible sequence of turns for the second line:\n\nturn right, move forward, turn left, move forward\nturn left, move forward, turn right, move forward\nIf the first ship collides with the second, the result will be impossible.\n\n\"\"\"\n\n\nimport math"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n1 -1 1\") == \"--+0-\"\nassert solution(\"5 4\\n-2 -2 4\\n2 3 3\") == \"--+0-\nassert solution(\"3 2\\n1 2 1\") == \"0-1\"\nassert solution(\"5 4\\n-2 -2 4\\n2 3 3\") == \"0+-\n\n'''\n\nimport sys\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2,2]) == 'impossible'\nassert solution([2,2,3]) == 'impossible'\nassert solution([4,3,1]) == '--+0-'\nassert solution([1,4,1]) == '-+0-0-0-0+'\nassert solution([1,1,4]) == '+-+0-0-0-0+'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 1\n1 1\n1\n1 1 1\n1\n''') == '4'\nassert solution('''\n1 1\n2 2\n1 2\n2 3\n1 2 2\n2 2 2\nSample Output 3:\n''') == '2'\nassert solution('''\n1 1\n2 1\n1 1\n2 3\n1 1 1\n1 1\n2 1 2\n1 1 2\n2 1 2\n1 1 2\n1 1 2\n1 1 2\n1 1 2\nSample Output 4:\n''') == '2'"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '2'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '2'\nassert solution('1 1 1 1') == '4'\nprint('all tests passed')\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n') == '1'\nassert solution('2 2\\n') == '0'\nassert solution('1 2\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '4'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 1\\n1 1\\n1\") == \"1\"\nassert solution(\"2 2\\n1 2\\n2 3\\n2\") == \"4\""
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 1\n1 1\n1\n1 1 1\n2 2 2\n''') == '4'\nassert solution('''\n2 2\n1 2\n2 3\n2\n1 2 2\n2 2 2\n''') == '4'\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n4 5 5\n4 5 5 5\n4 5 5 5 5\n4 5 5 5 5 5\n''') == '10'\nassert solution('''\n1 2\n1 3\n2 3\n3 4\n4 5\n4 6\n5 7\n6 8\n7 9\n''') == '9'\nassert solution('''\n10 10\n10 10\n10 10\n9 9\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n''') == '16'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == 'YES'\nassert solution('3 2') == 'NO'"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 5\\nWRRRG\\nWRRRG\\nWRRRG\\nWBBBB\\n\"\n) == \"YES\"\nassert solution(\n    \"3 4\\nWWRR\\nWRRR\\nWRRR\\n\"\n) == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == \"YES\"\nassert solution('''\n3 4\nWWRR\nWRRR\nWRRR\n''') == \"NO\"\n''')\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5') == 'YES'\nassert solution('3 4') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB''') == 'YES'\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\nSample Output 3:\nNO''') == 'NO'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"YES\"\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == \"YES\"\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\n''') == \"NO\"\n\n'''\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\nWRRR\nWRRR\nWRRR\nWBBBB\n''') == 'YES'\nassert solution('''5 4\nWWRR\nWRRR\nWRRR\nWBBBB\n''') == 'NO'\nprint(solution('''\n4 4\nWRRR\nWRRR\nWRRR\nWBBBB\n'''))\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == 'YES'\nassert solution('3 4') == 'NO'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 5\n1\n2\n3\n3\n2\n1''') == '1'\nassert solution('''6 3 5\n1\n2\n3\n3\n2\n1''') == '3'\nassert solution('''4 5 7\n1\n2\n4\n4\n5\n3\n3''') == '4'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('6 3 5') == '3'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 5') == \"1\"\nassert solution('6 3 5') == \"3\"\nassert solution('4 2 5') == \"2\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 5\\n1\\n2\\n3\") == \"1\"\nassert solution(\"6 3 5\\n1\\n2\\n3\\n3\\n2\\n1\") == \"3\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution(\"\"\"1\n3\n2\"\"\") == \"2\"\nassert solution(\"\"\"3\n3\n2\"\"\") == \"0\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 3 5\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\"\n) == \"1\"\nassert solution(\n    \"6 3 5\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"2\\n\"\n    \"1\"\n) == \"3\"\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 5\\n1\\n2\\n3') == '1'\nassert solution('6 3 5\\n1\\n2\\n3\\n2\\n1') == '3'"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2\\n1 3\\n3 3\") == \"3 2\"\nassert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 2\n1 3\n3 3\n''') == '3 2'\nassert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\nassert solution('''\n6\n0 0\n1 3\n2 6\n3 4\n4 8\n5 2\n6 9\n''') == '0 1 3 2 4 8 6 9'\nassert solution('''\n6\n0 2\n1 3\n2 6\n3 4\n4 8\n5 2\n6 9\n''') == '0 3 2 6 9 4 8'\nassert solution('''\n6\n0 2\n1 3\n2 6\n3 4\n4 8\n5 2\n6 9\n''') == '0 3 2 6 9 4 8'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2 1'\nassert solution('5') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3 2'\nassert solution('5') == '12 3'\nassert solution('0 2') == '3 2'\nassert solution('1 3') == '3 3'\nassert solution('3 3') == '6 5'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3 2\\n1 3\\n3 3\") == \"12 3\""
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5') == '12 3'"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 2\n1 2\n3 3\n''') == '3 2'\nassert solution('''\n5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '12 3'\nassert solution('3\\n0 2\\n1 2\\n3 3') == '3 2'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n0 2\\n1 3\\n3 3\\n7 5\\n9 5\") == \"12 3\"\nassert solution(\"2\\n0 2\\n1 3\\n3 3\") == \"5 3\"\nassert solution(\"2\\n0 2\\n0 2\\n1 3\") == \"1 3\"\nassert solution(\"2\\n0 2\\n0 2\\n1 3\\n3 3\\n3 3\\n3 3\\n7 5\\n9 5\\n10 5\") == \"5 3\"\nassert solution(\"1\\n0 2\\n0 2\\n1 3\\n3 3\\n3 3\\n3 3\\n7 5\\n9 5\\n10 5\") == \"1 3\"\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n0 2\n1 2\n3 3\n''') == '3 2'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\nassert solution('''3\n0 2\n1 2\n3 3\n''') == '3 2'\nassert solution('''5\n0 2\n1 3\n3 3\n7 5\n9 5\n''') == '12 3'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == '0101'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n0\n0\n3\nSample Output 3:\n0000\n1001\n0010\n101\n010\n000\n100\n''') == '100'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"100\"\nassert solution(\"3\") == \"0100\"\nassert solution(\"1\") == \"001\"\nassert solution(\"0\") == \"000\""
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"100\"\nassert solution(\"2\") == \"0011\"\nassert solution(\"3\") == \"1001\"\nprint(solution(input()))\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1\n0\n0\n3\n''') == '100'\nassert solution('''3\n0\n1 1\n1\n1 1\n1\n1\nSample Input 3:\n3\n1\n1 1\n1\n1 1\nSample Output 3:\n0000\n0001\n0010\n101\n010\n000\n100\n''') == '1001'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2\\n'\n    '1\\n'\n    '0\\n'\n    '0\\n'\n    '3\\n'\n    ) == '100\\n'\n\nassert solution(\n    '3\\n'\n    '0\\n'\n    '1 1\\n'\n    '1\\n'\n    '1 1\\n'\n    '1\\n'\n    '1\\n'\n    'Sample Output 2:\n0000\n1001\n0010\n101\n010'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\n''') == '100\\n001\\n010\\n000\\n100\\n001\\n000\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\n100\\"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1\\n0\\n0\\n3') == '100'\nassert solution('3\\n0\\n1 1\\n1\\n1 1\\n1\\n1') == '0010'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 1') == '3'\nassert solution('5 1') == '4'\nassert solution('6 1') == '5'\nassert solution('7 1') == '6'"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 1') == '3'"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '3'"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 1') == '3'\nassert solution('3 1') == '2'\nassert solution('4 1') == '3'\nassert solution('4 1') == '3'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\nassert solution('''\n10 1\n1 3\n9 7\n5 9\n5 5\n5 7\n5 9\n4 8\n5 4\n7 7\n6 4\n5 2\n''') == '4'\nprint('all tests passed')"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\nprint('Tests passed')\n\n\"\"\"\n3\n1 2\n2 3\n2 3\n2 3\n\"\"\""
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2', \"First\"\nassert solution('1 3') == '3', \"Second\"\nassert solution('2 3') == '3', \"Third\"\nassert solution('2 3') == '3', \"Fourth\"\nassert solution('4 1') == '4', \"Fifth\"\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1 3\n    1 3\n    1 3\n    2 3\n''') == \"3\"\nassert solution('''\n    2 2\n    1 2\n    2 3\n''') == \"2\"\nassert solution('''\n    4 6\n    1 3\n    4 6\n    7 8\n''') == \"3\"\n''')"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '2', 'First'\nassert solution('4 1') == '3', 'Second'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.00000000\"\nassert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"126.86989765\"\nassert solution(\"1000000 500\\n100000 0\\n100000 100\\n100000 100\\n100000 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"Impossible\"\nassert solution(\"4 200\\n5 5\\n1 2\\n3 2\\n3 4\\n1 4\\n2 5\\n1 5\\n3 6\\n2 6\\n4 5\\n3 5\\n2 6\\n1 6\\n4 5\\n3 5\\n2 6\\n1 6\") == \"90.00000000\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6 500\\n-100 0\\n-100 100\\n0 200\\n100 100\\n100 0\\n1 2\\n1 3\\n2 3\\n3 4\\n3 5\\n4 5\") == \"90.0\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == \"90.00000000\"\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'\nassert solution('''5 6 1000\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '90.00000000'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == '126.86989765'\nassert solution('''5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5''') == 'Impossible'"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.00000000'\nassert solution('''\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '126.86989765'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 500 -100 0') == '126.86989765'\nassert solution('5 6 500 0 100') == '315.68969265'\nassert solution('5 6 500 100 100') == '162.76965209'\nassert solution('5 6 500 -100 0 100') == '315.68969265'\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 800') == '126.86989765'\nprint('all tests passed')"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.00000000', 'First example'\nassert solution('''\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '126.86989765', 'Second example'\nassert solution('''\n6 5 1000\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n5 6\n''') == 'Impossible', 'Impossible example'\nassert solution('''\n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n''') == '90.00000000', 'Third example'"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 500') == '126.86989765'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7\n9\n5\n28\n11\n18\n3\n13''') == '7'\nassert solution('''37\n9\n5\n28\n11\n18\n3\n13''') == '4'\nassert solution('''30014\n8\n29\n5\n28\n11\n18\n3\n13''') == '7'\nassert solution('''30014\n85\n29\n5\n28\n11\n18\n3\n13''') == '6'\nassert solution('''30014\n85\n29\n5\n28\n11\n18\n3\n13''') == '7'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\nassert solution('123456789') == '123456789'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''37\n79\n90\n115\n20\n50\n30\n80''') == '6'\nassert solution('''30014\n85\n29929\n88\n29926\n785\n2229\n2226\n2225\n2224''') == '7'\nassert solution('''30014\n85\n29929\n88\n29926\n785\n2229\n2226\n2225\n2224''') == '7'\nassert solution('''30014\n85\n29929\n88\n29926\n785\n2229\n2226\n2225\n2224''') == '7'\nassert solution('''30014\n85\n29929\n88\n29926\n785\n2229\n2226\n2225\n2224''') == '7'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"37\") == \"4\"\nassert solution(\"30014\") == \"7\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"30014\") == \"7\"\nassert solution(\"30014\") == \"7\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\nprint(solution(input()))"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''37''') == \"4\"\nassert solution('''30014''') == \"7\"\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\""
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2') == '4.9'\nassert solution('4 5 2') == '5.7'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 1\\n') == '3.5'\nassert solution('2 3 1\\n') == '4.9'\nassert solution('2 3 2\\n') == '5.0'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 1\") == \"3.5\"\nassert solution(\"3 3 2\") == \"4.9\"\nprint(\"All tests passed.\")"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3.5'"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1\\n\") == \"3.5\"\nassert solution(\"3 3 2\\n\") == \"4.9\"\nprint(solution(input()))\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\nassert solution('4 5 1') == '4.3'\nassert solution('5 3 2') == '4.9'\nassert solution('6 3 2') == '4.3'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\nassert solution('5 1 5 5') == '10'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '19'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 5 1 5\n\"\"\") == \"19\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 1 5\") == \"19\"\nassert solution(\"12 12 1 12\") == \"4\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"19\"\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\nassert solution('14 20 2 9') == '6'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\nassert solution(\"1 2\") == \"4\"\nassert solution(\"1 20\") == \"5\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"5 10\") == \"10\"\nassert solution(\"5 20\") == \"20\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 20\") == \"20\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"10 4\") == \"4\"\nassert solution(\"100 2\") == \"2\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2\\n1 5\") == \"4\"\nassert solution(\n    \"2\\n1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"4\"\nassert solution(\"1 12\") == \"4\""
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"4\"\nassert solution(\"1 20\") == \"2\"\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n\n'''"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\""
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\nassert solution(\"dog\") == \"4\"\nassert solution(\"cat\") == \"0\"\nassert solution(\"pen\") == \"1\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n\"\"\""
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\nassert solution('cocat') == '3'\nassert solution('cocarc') == '3'\nassert solution('cocare') == '3'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\nassert solution('bocar') == '1'\nassert solution('cobocar') == '0'"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\nprint(solution(input()))\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\nassert solution('cocarcar') == '2'\nassert solution('cocarccar') == '1'\nassert solution('cocaa') == '0'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"car\") == \"1\"\nassert solution(\"cocar\") == \"2\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1000000 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0'\nassert solution(stdin_fixture) == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n0 2 1 1 1\n''') == '0'\n\nassert solution('''\n6\n0 1 2 1 1\n''') == '1'\n\nassert solution('''\n6\n1 2 1 2 1\n''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2 3 4') == '8'\nassert solution('4\\n1 1 1 1') == '8'\nassert solution('5\\n1 1 1 1 1') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 2 0 1\n''') == '8\nassert solution('''\n5\n1000000 1 1 1 1\n''') == '0\n'''\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n0 2 0 1\n''') == '8'\nassert solution('''5\n1000000 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '0'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n0 1 0 1\n''') == '8'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n1 2 2 4 4 5 1 1 1 1\n\"\"\"\n) == \"64\", \"Expected 64\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 651\") == \"zyz\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == 'ab'\nassert solution('1 7') == 'aba'\nassert solution('2 7') == 'abc'\nassert solution('3 6') == 'abab'\nassert solution('4 6') == 'abcabc'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == 'zyz'\n\n\"\"\"\n\nk, n = map(int, input().split())\na = \"zyxwvutsrqponmlkjihgfedcba\"\nb = sorted(a)\nc = list(b)\nd = set(c)\ne = list(d)\nf = set(e)\ng = list(f)\nh = set(g)"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\nprint(solution(input()))\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'aa'\nassert solution('2 3') == 'aa'\nassert solution('3 4') == '-1'\nassert solution('4 5') == '-1'\nassert solution('5 6') == '-1'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 651') == 'zyz', \"Should return 'zyz'\"\nassert solution('2 2') == '-1', \"Should return '-1'\"\nassert solution('10 1') == '-1', \"Should return '-1'\"\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == 'zyz'\n\nprint(solution.__doc__)\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 650\") == \"zyz\"\nassert solution(\"2 651\") == \"-1\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '4'\nassert solution('15\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n0 10 0\n10 0 1\n12 8 1\n5 5 0\n11 2 1\n11 3 0''') == '4'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n5 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1') == '8'\nprint('Tests passed')\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1') == '8'\nassert solution('0\\n5 5 0\\n11 2 1\\n11 3 0') == '4'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('10') == '8'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4', 'Sample Test 1'\nassert solution('10') == '8', 'Sample Test 2'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '8'\nassert solution('5\\n0 10 0\\n10 0 1\\n12 8 1\\n5 5 0\\n11 2 1\\n11 3 0\\n') == '8'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '4'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '4'\nassert solution('10\\n6 1 1\\n0 2 0\\n2 1 1\\n6 1 1\\n8 2 0\\n4 4 0\\n4 0 0\\n2 3 1\\n6 1 0\\n6 3 1\\n') == '4'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 3') == '0'\nassert solution('3 5 2') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2\") == \"2\"\nassert solution(\"3 5 2\") == \"2\"\nassert solution(\"3 5 2\") == \"2\""
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '-1'"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 3') == '0'\nassert solution('3 5 2') == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0'\nassert solution(\"\"\"\n3 4 3\n3 4 5 7\n1 2 10\n2 3\n\"\"\") == '2'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0\"\nassert solution(stdin=\"2 4 3\\n3 4 5 7\\n1 2 10\\n\") == \"0\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '-1'\nassert solution('4 2 3') == '0'\nassert solution('4 5 3') == '2'\nassert solution('10 11 13 14') == '1'\nassert solution('1 2 3') == '1'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 4 3\\n\", \"3 4 5 7\"\n) == \"0\"\nassert solution(\n    \"3 5 2\\n\", \"1 4 7 9 11\"\n) == \"2\"\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3\n3 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1 2\n3 4\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1\\n-2 -1\\n2 1\\n0 -2'\nprint(solution())\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2 3\n3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 2\n3 4\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 2\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 2\n3 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 2\n3 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '3'\nassert solution('2 1') == '2'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n3 2\n''') == '1'\nassert solution('''1 2\n3 4\n''') == '3'\nassert solution('''3 1\n2 4\n''') == '2'\nassert solution('''3 1\n1 4\n''') == '2'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n3 2''') == '1'\nassert solution('''1 2\n3 4''') == '3'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 4') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n3 2\n''') == '1'\nassert solution('''1 2\n3 4\n''') == '3'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    IVO\n    JASNA\n    JOSIPA\n''') == '4'\nassert solution('''\n    5\n    MARICA\n    MARTA\n    MATO\n    MARA\n    MARTINA\n''') == '24'\nassert solution('''\n    3\n    IVO\n    JASNA\n    JOSIPA\n    MATO\n''') == '4'\n'''\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n\"\"\") == \"\"\nassert solution(\"\"\"2\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n\"\"\") == \"3\"\nassert solution(\"\"\"4\n\"\"\") == \"2\"\nassert solution(\"\"\"5\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nMARTHA\\nMARY') == '4'\nassert solution('2\\nMARVEL\\nLOL') == '25'\nassert solution('2\\nMARTH\\nJASNA') == '4'\nassert solution('2\\nMARTH\\nMARY') == '4'\n\nassert solution('2\\nMARTH\\nMARY') == '4'\n\n'''"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"24\"\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4', \"First\"\nassert solution('3') == '12', \"Second\"\nassert solution('1') == '1', \"Third\"\nprint('Check passed')\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '2'\nassert solution(\"4\") == '3'\nassert solution(\"5\") == '4'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\nIVO\nJASNA\nJOSIPA\n''') == '4', 'First'\nassert solution('''\n5\nMARICA\nMARTA\nMATO\nMARA\nMARTINA\n''') == '24', 'Second'\n'''\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '24'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '24'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '4', \"Wrong\"\nassert solution('5') == '24', \"Wrong\"\nprint('\"Run\" is good. Great job!')\n\"\"\"\n\nfrom itertools import combinations_with_replacement\nn = int(input())\nnames = []\nfor i in range(n):\n    names.append(input())\n\nresult = 0\nfor item in combinations_with_replacement(names, 2):\n    if item[0][0] == item[1][0]:\n        if item[0].find(item[1])!= -1 or item[1].find(item[0])!= -1:\n            result += 1\n\nprint(result)\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 1') == '3'\nassert solution('2 2 3 8') == '39'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n2 2 3 1\n3 1 5 6\n1 9 4 7\n\"\"\") == \"39\"\nassert solution(\"\"\"\n3\n2 2 3 1\n3 1 5 6\n1 9 4 7\n\"\"\") == \"45\"\nassert solution(\"\"\"\n2\n2 2 3\n3 1 5\n1 9 4 7\n\"\"\") == \"22\"\nassert solution(\"\"\"\n1\n2 2 3\n3 1 5\n1 9 4 7\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n\"\"\") == \"11\"\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\n\nassert solution('''\n4\n4 3 4 1 2\n5 5 2 1 3\n5 2 2 1 1\n5 1 3 3 2\n''') == '22'"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2 4 1\n1 1 2\n''') == '3'\nassert solution('''\n3\n2 2 1\n1 1 2\n''') == '2'\nassert solution('''\n3\n4 6 2\n2 3 3\n1 2 4\n''') == '23'\nassert solution('''\n3\n3 4 1\n1 1 2\n''') == '3'\nassert solution('''\n5\n4 5 2\n3 4 1\n2 2 3\n1 1 2\n''') == '28'\n'''\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''\n2\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'\nassert solution('''\n5\n2 1 2 8 4\n1 2 3 1 8\n3 4 5 1 9\n1 9 4 7\n8 5 2 3\n''') == '61'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('2 2 3 1') == '3'\nassert solution('3 2 3 1') == '39'\nassert solution('1 2 3 1') == '-1'\nassert solution('3 2 3 1') == '-1'"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 2 3 1\n3 1 5 6\n1 9 4 7\n''') == '39'\n\nassert solution('''\n3\n2 2 3 1\n3 1 5 6\n1 9 4 7\n''') == '49'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 1') == '3'\nassert solution('2 2 3 8') == '39'\n\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '5.2696518641'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"5.2696518641\"\nassert solution(\"1\") == \"9\"\nprint(solution(input()))\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\") == \"9.2696518641\"\n\"\"\"\n--- Part Two ---\n\nNow, because you have the measurements on the contour, you'll want to calculate the location of the next contour that you will need to drill.\n\nConsider the case for example, the case where you've already drilled a drilled contour: the two contours are lined up perfectly, and because they both have a height, you can drill along the line connecting these points.\n\nLet's say you want to drill down to the point at $x = -2$, $y = -2$; you can drill there, but you will be in the path for the contour at $(x, y) = (3, -1)$ and $(x, y) = (5, -1)$.\n\nGiven this information, what is the closest distance between the surface and the target?\n\n-----Input-----\n - One line containing two positive integers, $H_0$ and $H_1$ ($0 \\le H_0, H_1 \\le 10^6$), the height of the contour outside and inside the contour, respectively, in metres.\n - One line containing one positive integer, $M_ i$, representing the number of vertices of this contour.\n - One line containing $M_ i$ integers, $x_ j, y_ j$ denoting the $j^{th}$ point of this contour, in the format $(x, y)$ ($-10^6 \\le x,y \\le 10^6$). The first contour has the coordinates $(0, 0)$.\n\n-----Output-----\nThe first and only line of output should contain one real number indicating the closest slanted distance from the surface to the target. Your answer should be correct up to an absolute or relative precision of $10^{-6}$.\n\nSample Input 1:\n8 10 4 -2 0 0 -3 2 0 0 3\nSample Output 1:\n5.2696518641\n\nSample Input 2:\n1\n8 9 3 -14 -14 14 -14 0 20\nSample Output 2:\n9"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '9'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '5.2696518641'\nassert solution('1') == '9'"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1''') == '5.2696518641'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '5.2696518641'\nassert solution('''1\n8 9 3 -14 -14 14 -14 0 20\n''') == '9'\nprint('All Tests Passed')\n\n\"\"\""
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\") == \"5.2696518641\"\n\nassert solution(\"\"\"\n3\n7 10 1 -3 -1 -3 -3 -4 0 0 0\n4 7 1 0 0 1 0 1 0 0 0\n1 7 -3 -3 0 0 0 1 0 1\n\"\"\") == \"3.6548580092\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n\"\"\"\n) == \"5.2696518641\"\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n5 8 4 -2 0 0 -3 2 0 0 3\n8 10 4 -1 -1 1 -1 1 1 -1 1\n''') == '9'\nassert solution('''\n1\n8 9 3 -14 -14 14 -14 0 20\n''') == '9'\n'''\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('2\\n0\\n1') == '-1'\nassert solution('3\\n4\\n5') == '4'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 1 1\n2 0 2\n3 1 1\n''') == '1'\nassert solution('''\n3\n4 1 1\n5 2 3\n5 0 3\n''') == '8'\n'''\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 1 1\\n2 0 2\\n3 1 1') == '1\\n8\\n4', \"First\"\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3') == '6\\n4\\n24', \"Second\"\nassert solution('100\\n6 1 1\\n5 2 3\\n5 0 3') == '-1', \"Third\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 0 2') == '8'\nassert solution('3 1 1') == '4'\nprint('TEST_COMPLETE')"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '8'\nassert solution('4') == '4'\nassert solution('5') == '24'\nassert solution('6') == '-1'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"2 0 2\") == \"8\"\nassert solution(\"3 1 1\") == \"4\"\nassert solution(\"4 1 1\") == \"24\"\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1 1\\n2 0 2\\n3 1 1') == '1'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3') == '8'"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1 1\\n2 0 2\\n3 1 1') == '1'\nassert solution('3\\n4 1 1\\n5 2 3\\n5 0 3') == '8'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 0 2') == '4'\nassert solution('3 1 1') == '8'\nassert solution('4 1 1') == '24'\nassert solution('5 2 3') == '24'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '240'\n\nimport sys\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('6 6') == '240'\nassert solution('3 5') == '6'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"3\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"5 5\") == \"8\"\nassert solution(\"12 6\") == \"720\""
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '3'\nassert solution('6 6') == '240'\nassert solution('2 3') == '4'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 1\") == \"3\", solution(\"2 3 1\")\nassert solution(\"5 5\") == \"250\", solution(\"5 5\")"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\nassert solution('13 14') == '1314'"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"12\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"4 4\") == \"8\"\nassert solution(\"2 1\") == \"3\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\nimport sys\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == 'impossible'"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''SEND+MORE=MONEY''') == '9567+1085=10652'\nassert solution('''A+A=A''') == 'impossible'\nassert solution('''C+B=A''') == '2+1=3'\nassert solution('''X+X=X''') == 'impossible'"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('SEND+MORE=MONEY') == '9567+1085=10652'\nassert solution('A+A=A') == 'impossible'\nprint('solution() is working!')\n'''\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"C+B=A\") == \"2+1=3\"\nassert solution(\"C+BC=A\") == \"2+1=3\"\nassert solution(\"A+A+A+A=A\") == \"impossible\"\nassert solution(\"C+BC+ABC=A\") == \"impossible\"\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"SEND+MORE=MONEY\") == \"9567+1085=10652\"\nassert solution(\"A+A=A\") == \"impossible\""
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0 1 2 3\\n') == '14'\nassert solution('5\\n0 1 2 1 1\\n') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 1 2 3\n''') == '14'"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == \"1\"\nassert solution(t) == \"0\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n0 1 2 3\n4\n1 1 2 1 1''') == '1'\nassert solution('''\n1\n1\n1\n1''') == '1'"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '14'\nprint('You are done! Go check the solution to see if you got it!')"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"14\"\nassert solution(\"4 1 2 3\") == \"1\"\nassert solution(\"5 1 2 3\") == \"1\"\nassert solution(\"6 1 2 3\") == \"0\"\nassert solution(\"7 1 2 3\") == \"14\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n0 1 2 3') == '14'\nassert solution('5\\n1 1 2 1 1') == '1'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '14'\nassert solution('5') == '1'"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n0 1 2 3\") == \"14\"\nassert solution(\"5\\n1 1 2 1 1\") == \"1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1 1\n1 2\n1 3\n0 0\n\"\"\") == \"88\"\nassert solution(\"\"\"4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"88\"\nassert solution(\"\"\"4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"88\"\nassert solution(\"\"\"4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"88\"\nassert solution(\"\"\"8 8\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 5 6\n0 4 7 8\n7 0 0 10\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 2 3 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"2 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\") == \"-1\"\nassert solution(\"2 3\\n1 2 3 0\\n0 0 5 6\\n7 0 0 10\") == \"74\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '88'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'\nassert solution('''\n2 2\n1 2\n''') == '-1'\nassert solution('''\n2 2\n1 2\n''') == '-1'\nassert solution('''\n3\n1 2 3\n2 3 4\n5 6\n''') == '88'\n''') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"88\"\nassert solution(\"2 2\") == \"-1\"\n\"\"\"\n\nfrom collections import deque\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"88\"\nassert solution(\"2 5\\n1 1 1 1 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"5 5\\n2 2 2 2 2\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == \"-1\"\nassert solution(\"2 6\\n1 1 1 1 0\\n0 0 5 6\\n0 0 7 8\\n7 0 0 10\") == \"88\"\nassert solution(\"5 7\\n2 2 2 2 2\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\\n0 0 0 0 0\") == \"-1\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '88'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 7 8 9\n7 0 0 10\n''') == '-1'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 8 9 10\n7 0 0 10\n''') == '10'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 8 9 10\n7 0 0 10\n''') == '-1'"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10''') == '88'\nassert solution('''4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10''') == '-1'\nassert solution('''5 5\n1 2 3 4 5''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n5 3 2 1''') == '-1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"88\"\nassert solution() == \"-1\""
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 0 7 8\n7 0 0 10\n\"\"\") == \"88\", \"First\"\nassert solution(\"\"\"\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n\"\"\") == \"-1\", \"Second\"\nassert solution(\"\"\"\n5 5\n5 1 2 3 4 0\n0 1 5 6 7 8 9\n0 0 2 6 4 1 7\n0 0 5 8 4 7 2\n0 0 1 6 7 8 9 10\n\"\"\") == \"142\", \"Third\"\nassert solution(\"\"\"\n3 3\n0 2 5\n1 0 0\n0 1 0\n\"\"\") == \"7\", \"Fourth\"\nassert solution(\"\"\"\n4 4\n1 2 3 4\n5 6 7 8\n9 0 0 0\n0 1 2 3\n\"\"\") == \"0\", \"Fifth\"\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 4 7 8\\n7 0 0 10\\n') == '88'\nassert solution('4 4\\n1 2 3 0\\n0 0 5 6\\n0 8 7 8\\n7 0 0 10\\n') == '-1'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 1\n1 1\n''') == '0.000'\nassert solution('''\n2\n1 99999\n99999 99999\n''') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0.000\"\nassert solution(\"1 1\") == \"0.000\"\nassert solution(\"1 99999\") == \"9999700002.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0.000'\nassert solution('2 1') == '9999700002.000'\nprint('Tests finished!')"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0.000'\nassert solution('1') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 1') == '0.000'"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0.000'\nassert solution('2 1') == '1.000'\nassert solution('2 1 1 1') == '2.000'\nassert solution('2 1 1 1 1') == '2.000'\nassert solution('3 1') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2\\n3 4') == '3.000'\nassert solution('1\\n1\\n3') == '0.000'\nassert solution('1\\n2\\n1') == '0.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0.000\"\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 1\n1 1\n''') == '0.000'\nassert solution('''\n3\n1 1 1\n1 1 1\n1 1 1\n''') == '1.000'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\n\n'''\nfrom typing import List\n\nn = int(input())\np = int(input())\nx = int(input())\ny = int(input())\na = []\nb = []\nc = []\nfor i in range(p):\n    a.append(int(input()))\n    b.append(int(input()))\n    c.append(int(input()))\n\nl = []\nfor i in range(n):\n    l.append([c[i], a[i], b[i]])\nl.sort(key=lambda x: (x[0], x[1], x[2]))\n\nf = 0\nfor i in range(n):\n    if l[i][0] > x:\n        break\n    else:\n        f += l[i][0] * l[i][1]\n        f += l[i][2]\nprint(f)\n\n'''\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 8 1 6\") == \"3\"\nassert solution(\"3 4 1 2\") == \"3\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\n\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 8 1 6') == '3'\nassert solution('6 8 1 6') == '3'\nassert solution('6 8 1 6') == '3'\nassert solution('6 8 1 6') == '3'\nassert solution('6 8 1 6') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 8 1 6') == '3'\nassert solution('3 4 1 2') == 'Infinity'\nassert solution('4 2 3') == '1'\nassert solution('1 3 6 5 4') == '2'\nassert solution('1 3 6 5 4') == '1'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\nassert solution('''\n2 1 2 2\n1 2 3\n1 3 2\n''') == 'Infinity'\nassert solution('''\n4 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 8 1 6') == '3'\nassert solution('6 10 2 6') == '3'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"6 8 1 6\\n1 2 5\\n1 3 1\\n2 6 6\\n2 3 6\\n4 2 3\\n3 4 1\\n4 5 1\\n5 6 1\\n5\\n1 3 6 5 4\\n\") == \"3\"\nassert solution(\"3 4 1 2\\n1 2 6\\n1 3 2\\n1 2 7\\n2 3 3\\n2\") == \"Infinity\"\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 1 2 1\n1 2 6\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\nprint(\"Solution\")\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n\"\"\") == \"4\""
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"impossible\"\nassert solution(\"3 1\") == \"000 001 011 010 1001 1002 1011 1010 1111 1110 1111 1111\"\nassert solution(\"6 1\") == \"impossible\"\n\n\"\"\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '000'\nassert solution('7 1') == '111'\nassert solution('16 4') == '110'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 1\n6\n''') == \"impossible\"\nassert solution('''\n3 1\n1\n''') == \"000 001 011 010 111 111 100\""
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"impossible\"\nassert solution(\"6 1\") == \"000 001 010 011 111 110 111\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'impossible'\nassert solution('6 1') == '000'\nassert solution('3 1') == '000'\nassert solution('6 1') == '000'\nassert solution('6 1') == '000'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == 'impossible'\nassert solution('3 1') == '000 011 101'"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'impossible', \"solution failed\"\nassert solution('3') == '000', \"solution failed\"\nassert solution('4') == '010', \"solution failed\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1\") == \"impossible\"\nassert solution(\"4 1\") == \"000\"\nassert solution(\"6 1\") == \"impossible\"\nassert solution(\"6 1\") == \"000\"\nassert solution(\"3 1\") == \"000\"\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"impossible\"\nassert solution(\"3 1\") == \"000\""
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"impossible\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == \"1\""
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10\n99''') == '1'\nassert solution('''90\n10''') == '10'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"1\"\nassert solution(\"90\") == \"10\""
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"99\") == \"2\"\nassert solution(\"90\") == \"10\"\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10\n99''') == '1'\nassert solution('''90\n10''') == '10'\nassert solution('''20\n200''') == '7'\nassert solution('''80\n60''') == '3'\n\n\"\"\"\n\na = int(input())\nb = int(input())\ncount = 0\nwhile True:\n    a = a+1\n    b = b+1\n    if (a > 9 and a!= 10) or (b > 9 and b!= 10):\n        break\n    a = a%10\n    b = b%10\n    count = count + 1\nprint(count)\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '2'\nassert solution('90') == '10'\nassert solution('123456789') == '3456789'\n\n'''\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '1'\nassert solution('90') == '10'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '1'\nassert solution('90') == '10'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('99') == '10'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '1'\nassert solution('100') == '10'\n\n'''\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nprint(solution())\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3\n''') == '2'\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\nassert solution('''5\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '0'\nassert solution('''5\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '3'\nassert solution('''5\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '3'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2 3 3\n4 1 10\n2 7 3''') == '2'\n\nassert solution('''4\n3 1 3 3\n5 8 7 10\n4 1 2 6\nSample Output 3:\n1\n\nSample Input 4:\n5\n1 1 1 1 1\n2 5 6 5\n2 1 7 1\nSample Output 4:\n3''') == '2'\n\nassert solution('''5\n1 1 1 1 1\n2 5 6 5\n2 1 7 1\nSample Output 5:\n2''') == '2'"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '1'"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2 3 3\n4 1 10\n2 7 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n3 1 3 3\n5 8 7 10\n4 1 2 6\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n2 3 3\n4 1 10\n2 7 3\n''') == '1'\nassert solution('''\n4\n3 1 3 3\n5 8 7 10\n4 1 2 6\n''') == '1'\nassert solution('''\n4\n3 2 5 6\n5 8 7 10\n4 1 2 6\n''') == '0'\nassert solution('''\n4\n3 2 5 6\n5 8 7 10\n4 1 2 6\n''') == '1'"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4') == '6'\nassert solution('5 6') == '7'\nassert solution('4 5') == '12'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\nI love you') == 'palindromic'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"4\"\nassert solution(\"9 3\") == \"5\"\nassert solution(\"10 0\") == \"10\"\nassert solution(\"1 5\") == \"11\"\nassert solution(\"4 8\") == \"16\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n7\n9\n3\n1\n9\n5\n8\n4\n6\n4\n10\n4\n10\n''') == '7'\n\nassert solution(\n'''\n6\n1\n9\n4\n2\n10\n''') == '7'\n\nassert solution(\n'''\n10\n9\n3\n1\n5\n8\n4\n6\n4\n10\n4\n10\n''') == '11'\n\nassert solution(\n'''\n9\n1\n8\n''') == '10'\n\nassert solution(\n'''\n10\n4\n2\n5\n7\n''') == '12'"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('beginning') == '5'\nassert solution('velvet') == '7'"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"beginning\") == \"5\"\nassert solution(\"velvet\") == \"7\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('beginning') == '5'\nassert solution('velvet') == '7'\n'''\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('9 3') == '5'\nassert solution('6 1') == '7'\n'''\n\nn, q = map(int, input().split())\ns = input()\nt = list(map(int, input().split()))\n\nfrom collections import defaultdict\nfrom bisect import bisect_right\n\nd = defaultdict(int)\n\nfor i in range(n):\n    d[s[i]] += 1\n\nfor i in range(q):\n    l, r = map(int, input().split())\n    l -= 1\n    r -= 1\n\n    ans = 0\n    for k, v in d.items():\n        if l <= bisect_right(t, k):\n            ans += v\n        elif r >= bisect_right(t, k):\n            ans += v\n\n    print(ans)\n\n'''\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3\\n3 4\\n5 4') == '6', \"Should be 6\"\nassert solution('5 6\\n1 2\\n4 5\\n3 4\\n2 4') == '10', \"Should be 10\"\nassert solution('5 6\\n4 2\\n3 5\\n2 5\\n1 4') == '6', \"Should be 6\"\nassert solution('6 6\\n1 2\\n3 4\\n5 4\\n2 4') == '5', \"Should be 5\"\nassert solution('9 3\\nbeginning\\n1 5\\n4 8\\n1 9') == '11', \"Should be 11\"\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n9 3\nbeginning\n1 5\n4 8\n1 9\n''') == '5'\n\nassert solution('''\n6 1\nvelvet\n1 6\n''') == '7'\n\nassert solution('''\n9 3\naab\n1 2\nacb\n1 5\n''') == '9'\n\nassert solution('''\n6 1\nvelvet\n1 6\n''') == '11'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 3\"\n) == \"2\"\nassert solution(\n    \"1 1\"\n) == \"1\"\nassert solution(\n    \"2 2\"\n) == \"2\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 1\\n1 1\\n2 2\\n1 1\"\n) == \"2\"\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n3 1\n2 2\n1 1\n''') == '2'\nassert solution('''2 3\n1 23\n2 17\n''') == '23'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '2'\nassert solution('1 2') == '1'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n3 1\n2 2\n1 1\n''') == '2'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '2'\nassert solution('3 5') == '5'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n3 1\n2 2\n1 1\n''') == '2'\nassert solution('''\n3 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n3 5\n3 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10\n''') == '10'\nassert solution('''\n3 4\n3 1\n2 2\n1 1\n''') == '2'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 23\\n2 17') == '23'\nassert solution('3 4\\n3 1\\n2 2\\n1 1') == '2'\nassert solution('3 5\\n3 1\\n2 5\\n1 1\\n3 3\\n3 3') == '3'\nassert solution('10 10\\n9 9\\n9 9\\n9 9\\n8 8\\n8 8\\n7 7\\n7 7\\n6 6\\n5 5\\n5 5') == '10'"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '2'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\\n1 3\\n1 2\") == \"2\"\nassert solution(\"1 2 3\\n1 3\\n2 4\") == \"1\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\n\nassert solution('''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '9.476048311178'\n\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '12.33653816008'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"0.0000000000\"\nassert solution(\"6\") == \"9.476048311178\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"0.0000000000\"\nassert solution(\"6\") == \"9.476048311178\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n0 0\\n2 0\\n2 2\\n0 2\\n0 -1 0 3\\n') == '0.0000000000'"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1.6\\n'\nassert solution('4') == '1.5\\n'\nassert solution('5') == '1.5\\n'\nassert solution('6') == '1.5\\n'\nassert solution('7') == '1.5\\n'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0.0000000000\"\nassert solution(\"1 2 3\") == \"0.50000000000\"\nassert solution(\"-1 -2 3\") == \"2.50000000000\"\nassert solution(\"-1 2 3\") == \"1.50000000000\"\nassert solution(\"4 4\") == \"10.0000000000\"\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0.0000000000'"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n0 0\\n2 0\\n2 2') == '0.0000000000'\nassert solution('4\\n0 0\\n2 0\\n2 2\\n0 2') == '9.476048311178'\nassert solution('6\\n0 1\\n0 4\\n3 6\\n7 5\\n4 2\\n7 0\\n5 7 2 0') == '9.476048311178'"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\n\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 0\n2 0\n2 2\n0 2\n0 -1 0 3\n''') == '0.0000000000'\nassert solution('''\n6\n0 1\n0 4\n3 6\n7 5\n4 2\n7 0\n5 7 2 0\n''') == '9.476048311178'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n\") == \"8.0000000000\"\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"5\") == \"8\"\nprint(solution(input()))\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '8.0000000000'\nassert solution('5') == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '8.0000000000'\nassert solution('5') == '0.0200000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n1 1') == '8.0000000000'\nassert solution('3\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '0.0200000000'\nassert solution('2\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20') == '8.0000000000'\nassert solution('2\\n-0.2 0\\n0 -0.2\\n0 0\\n0 0.20') == '0.0200000000'\nassert solution('1\\n0.2 0\\n0 -0.2\\n0 0\\n0 0.20') == '2.5'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2 2 0\\n0 0 1\\n0 -1 0\\n0 0 2') == '8.0000000000'\nassert solution('1\\n0\\n0') == '0.0000000000000000'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n0.6 0\n0.0 0.4\n1.0 1.4\n0.4 0.6\n\"\"\") == '0.04000000000000004'\nassert solution(\"\"\"\n5\n0.6 0\n0.0 0.4\n1.0 1.4\n0.4 0.6\n-0.2 0\n0.0 -0.2\n\"\"\") == '0.0200000000'"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nprint(solution('''5\n0.2 0.00\n0 -0.2\n0.0 0\n-0.2 0\n0 0.20\n'''))\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 1 9 9 1 6 6 39 9\n''') == '2'\nassert solution('''\n10\n1 1 1 1 1 2 2 2 2 2\n''') == '2'"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"9 4 3\\n1 1 9 9 1 6 6 39 9\\n\") == \"2\"\nassert solution(\n    \"10 2 2\\n1 1 1 1 1 2 2 2 2 2 2\\n\") == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 2 1\n1 2 2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 2 3\n1 1 1 1\n1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 3 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 3 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 2 2\n1 1 1 1 1 2 2 2 2 2''') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4 3\n1 1 9 9 1 6 6 39 9\n''') == '2'\nassert solution('''\n10 2 2\n1 1 1 1 1 2 2 2 2 2\n''') == '2'\nassert solution('''\n4 4 2\n1 1 1 1 1 2 2 2 2 2\n''') == '1'\nassert solution('''\n4 4 5\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n''') == '2'\nassert solution('''\n3 10 3\n1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1\n''') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 3') == '2'\nassert solution('10 2 2') == '2'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 3') == '2'\nassert solution('10 2 2') == '2'"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"9 4 3\"\n    \"1 1 9 9 1 6 6 39 9\"\n) == \"2\"\n\nassert solution(\n    \"10 2 2\"\n    \"1 1 1 1 1 2 2 2 2 2\"\n) == \"2\""
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3 2\n1 2 3\n\"\"\") == \"3.666666667\"\nassert solution(\"\"\"\n4 11 4\n10 10 10 10\n\"\"\") == \"20.000000000\"\n\nassert solution(\"\"\"\n3 2 4\n10 10 10\n\"\"\") == \"4.249999999\"\nassert solution(\"\"\"\n3 5 5\n10 10 10 10 10\n\"\"\") == \"13.333333334\"\nassert solution(\"\"\"\n100 10 20\n
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3.66666667\"\nassert solution(\"4 11 4\") == \"20.000000000\"\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\nassert solution('10 10 10 10') == '18.3333333333'"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3 2') == '3.600000000000001'\nassert solution('5 2 7') == '5.000000000'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3 2') == \"3.666666667\"\nassert solution('4 11 4') == \"20.000000000\"\nassert solution('7 8 2') == \"7.272727273\"\nassert solution('10 10 10 10') == \"10.000000001\"\n\nstdin = \"\"\"\n12 2 4\n1 2 3\n2 4 5\n3 7 9\n4 6 10\n5 8 8\n6 10 10\n7 9 8\n8 10 4\n9 1 2\n10 4 8\n11 7 9\n12 1 3\n\"\"\"\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\n\n'''"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6 7\n10 9 8 7\n''') == '21.000000000000001'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\nprint(solution('''\n5 1 5\n1 2 2\n1 3 3\n2 1 2\n2 3 2\n3 2 3\n3 3 2\n3 4 3\n3 5 2\n4 1 2\n4 3 2\n4 5 2\n4 6 3\n4 7 2\n4 8 2\n4 9 2\n'''))\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 2') == '3.6'\nassert solution('4 11 4') == '20.000000000'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"4 5\") == \"3\"\nassert solution(\"5 6\") == \"4\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([2,42]) == \"2\"\nassert solution([5,123456789]) == \"16317634\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'\nprint('all tests passed')"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 4') == '5'\nassert solution('5 123456789') == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['2', '42']) == '2'\nassert solution(['5', '123456789']) == '16317634'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 42') == '2'\nassert solution('5 123456789') == '16317634'"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2,42]) == \"2\"\nassert solution([5,123456789]) == \"16317634\""
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 42\") == \"2\"\nassert solution(\"5 123456789\") == \"16317634\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"-1 -2 -3\") == \"0\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\""
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 1 0 0 2\\n\"\n    \"1 2 2\\n\"\n    \"1 1 1\\n\"\n    \"2 1 1\\n\"\n    \"1 2 2\\n\"\n    \"1 2 2\\n\"\n    \"2 2 3\\n\"\n    \"0 2 5\\n\"\n    \"1 2 6\"\n) == \"4\"\nprint(\"You passed the test!\")"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2') == '0'\nassert solution('3 1 1 1 8') == '4'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\"\nassert solution(\"10 10 4 3 6 5 2 8 8 9 2\") == \"22\"\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1 0 0 2\n1 2 2\n1 1 1\n2 1 1\n1 2 1\n1 2 2''') == '4'\nassert solution('''3 1 0 0 2\n0 1 1\n1 0 1\n2 1 1\n1 2 1\n1 2 2\n2 2 3\n0 2 5\n1 2 6''') == '12'"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\nassert solution('3 1 1 1 8 0 0 0 0') == '3'"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 0 0 2\") == \"0\"\nassert solution(\"3 1 1 1 8\") == \"4\""
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\nassert solution('''3 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"100 100\") == \"1\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'\n\n'''\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 2 3\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3', \"First\"\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3', \"Second\"\n'''\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == \"3\"\nassert solution('''\n5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == \"3\"\nassert solution('''\n5 1 10 10\n5 5\n1 5\n5 1\n4 6\n4 7\n7 9\n''') == \"3\"\nassert solution('''\n5 1 10 10\n5 5\n1 5\n5 1\n4 6\n4 7\n7 9\n''') == \"3\"\nassert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == \"3\"\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1 10 10\") == \"3\"\nassert solution(\"5 1 100 100\") == \"3\""
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\nassert solution('BBBCCCBB') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"2\"\nassert solution(\"ABBBAAAA\") == \"3\"\nassert solution(\"BBBCCCBB\") == \"3\"\nassert solution(\"CCCCAAAC\") == \"4\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nABC\nABC\nABC\n''') == '2'\nassert solution('''\nABBBAAAA\nBBBCCCBB\nCCCCAAAC\n''') == '3'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''ABC\nABC\nABC\n''') == '2'\nassert solution('''ABBBAAAA\nBBBCCCBB\nCCCCAAAC\n''') == '3'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 2\nassert solution(\"BBBCCCBB\") == 3\nprint(solution(input()))\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 2\nassert solution(\"ABC\") == 1\nassert solution(\"ABBBAAAA\") == 2\nassert solution(\"BBBCCCBB\") == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC') == 2\nassert solution('ABBBAAAA') == 3\nassert solution('BBBCCCBB') == 3\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABC\\nABC\\nABC') == '2'\nassert solution('ABBBAAAA\\nBBBCCCBB\\nCCCCAAAC') == '3'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nA\nA\nB\n''') == 2\n\nassert solution('''\nA\nB\nB\n''') == -1\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 2\nassert solution(\"BBBCCCBB\") == 3\nassert solution(\"CCCCAAAC\") == 3\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    AAABBAABA\n    AAABAA\n    ABABAABA\n    AAABAABAB\n    AAABAABABA\n    ''') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB\") == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nA\\nB\\nAA\\nBBB\\nAAA') == '3'\nassert solution('5\\nA\\nABA\\nBBB\\nABABA\\nAAAAAB') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"3\"\nassert solution(\"ABA\") == \"3\"\nassert solution(\"ABAB\") == \"3\"\nassert solution(\"AAAAAB\") == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"A\",\"B\",\"AA\",\"BBB\",\"AAA\"]) == \"3\"\nassert solution([\"A\",\"ABA\",\"BBB\",\"ABABA\",\"AAAAAB\"]) == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\nAA\\nAB\\n\") == \"3\"\n\"\"\""
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.1'\nassert solution
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 10 2 2') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 1 2') == '0.375'\nassert solution('10 10 2 1') == '0.10000000000000002'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100 10 2 1') == '0.10000000000000001'\nassert solution('100 10 2 2') == '0.20000000000000001'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.19090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909090909"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''100 10 2 1''') == '0.1'\nassert solution('''100 10 2 2''') == '0.1909090909'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n100 10 2 1\n''') == '0.10000000000000001'\n\nassert solution('''\n100 10 2 2\n
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0.01'\nassert solution('100 10 2 1') == '0.1'\nassert solution('100 10 2 2') == '0.1909090909'"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABAbABAbABABAb\") == \"2\"\nassert solution(\"ABABABAbABAbABABAb\") == \"2\"\nassert solution(\"AABABABAbABAbABABAb\") == \"3\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\nABABABcABABAbAbab\n2\n1 6\n0 7\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\nABABABcABABAbAbab\n4\n0 2\n1 6\n0 7\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\nABABABcABABAbAbab\n2\n0 2\n0 7\n\"\"\"\n) == \"0\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABABABcABABAbAbab') == '4'\nassert solution('BBB') == '2'\nassert solution('ACD') == '0'\n'''"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(ABABABcABABAbAbab) == '4'"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(ABABABcABABAbAbab) == '5'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(ABABABcABABAbAbab) == '5'\nassert solution(ABBBABcABABAbAbab) == '2'\nassert solution(ABABABcABABAbAbab) == '3'\nassert solution(ABBABAcABABAbAbab) == '1'\nassert solution(ABBABAcABABAbAbab) == '1'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"4\"\nassert solution(\"ABABABcABABAbAbab\") == \"5\"\nassert solution(\"ABABABcABABAbAbAb\") == \"3\"\nassert solution(\"ABABABcABABAbAbAb\") == \"3\"\nassert solution(\"ABABABcABABAbAbAb\") == \"2\"\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABABABcABABAbAbab\") == \"0\"\nassert solution(\"ABABAbAcABABAbAbAb\") == \"1\"\nassert solution
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"5 2 2 2 2 3 4\") == \"4\"\nassert solution(\"0\") == \"1\"\nassert solution(\"0 1\") == \"2\"\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n0\n0\n1\n''') == '2'\n\nassert solution('''\n3 3\n0\n0\n1\n''') == '1'\n\nassert solution('''\n3 2\n0\n0\n1\n''') == '0'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3\\n0\\n0\\n1\\n') == '2'\nassert solution('4 3\\n0\\n0\\n1\\n2\\n3\\n3\\n4\\n') == '5'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n0\\n1\\n0\\n1\\n') == '2'\nassert solution('2\\n3\\n0\\n1\\n0\\n1\\n') == '1'\nassert solution('2\\n3\\n1\\n0\\n1\\n1\\n') == '3'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 5') == '3'\nassert solution('2 3') == '2'"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '1\\n2\\n3') == '2'\nassert solution(\n    '3\\n2\\n1') == '2'\nassert solution(\n    '3\\n4\\n1') == '1'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0\\n0\\n') == '1'\nassert solution('2\\n1\\n0\\n') == '2'\nassert solution('3\\n2\\n1\\n') == '2'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0\\n0\\n1\") == \"2\""
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"10 5\") == \"2\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('10 1 2 1 8 -6 1') == 'P0: 22 1 4 2 6 -1 0'\nassert solution('1 1 2 1 8 -6 1') == 'P1: 4 1 2 1 8 -6 1'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 5 5 5 5\n1 1 1 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 8 8 8\n12 4 1 4 5 3 -2\n10 1 2 1 8 -6 1\n''') == '1'\nassert solution('''\n3 4 5\n3 4 1 1\n5 4 1 -2\n4 3 2 3\n''') == '2'\nassert solution('''\n2\n12\n4\n1\n5\n1\n-2\n''') == '1'\nassert solution('''\n10\n1\n2\n1\n8\n-6\n1\n''') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 4 2\n1 4 1\n1 2 1\n''') == '1\nassert solution('''\n4\n4 4 2\n3 3 -1\n3 1 -1\n3 2 1\n''') == '0\n'''\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 2 2 3') == '1'\nassert solution('100 500 2 9 3') == '100'\nassert solution('1 1 1 1 1') == '1'"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2 3 4\\n1 2 3\\n1 2 3\\n') == '2\\n'\n\nassert solution('2\\n4 5 6\\n5 6 7\\n5 7 8\\n') == '3\\n'\n\nassert solution('4\\n8 3 6\\n8 3 6\\n8 3 6\\n') == '5\\n'\n\nassert solution('16\\n16 3 6\\n12 6 8\\n16 4 6\\n') == '4\\n'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('10 1 2 1 8 -6 1') == '0'"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 8 8 8') == '1\\nP1: 22 1 4 2 6 -1 0'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == '3'\nassert solution('4 7') == '2'\nassert solution('5 7') == '3'\nassert solution('6 7') == '4'\nassert solution('7 7') == '5'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3''') == '1\\n1\\n2\\n3\\n2\\n3\\n3'\nassert solution('''3 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3''') == '1\\n1\\n2\\n3\\n3\\n3\\n3\\n3'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n''') == '2'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"1\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"2\"\nassert solution(\"4 7\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4\") == \"3\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 7') == '1\\n1\\n2\\n3\\n'\nassert solution('4 5') == '1\\n1\\n2\\n3\\n'\nassert solution('20') == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '2'\nassert solution('2 5') == '3'\nassert solution('3 4') == '1'\nassert solution('4 5') == '3'\nassert solution('6 7') == '4'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n5\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '4'\nassert solution('3\\n5\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '2'\nassert solution('3\\n5\\n1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\\n1 2\\n1 3\\n3 4') == '3'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 7') == '1\\n2\\n3\\n'\nassert solution('1 2 1') == '1\\n2\\n'\nassert solution('1 2 3') == '1\\n2\\n3\\n'\nassert solution('1 3 2') == '1\\n2\\n3\\n'\nassert solution('1 4 1') == '1\\n2\\n3\\n'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"1 2 1\\n1 2 3\\n1 3 2\\n1 4 1\\n2 3 4\\n2 4 4\\n3 4 4\\n3\""
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\") == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 5 4 3 2\\n1 2 5 4 3 6\\n') == '2'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n') == '2'\nassert solution('6\\n1 2 5 4 3 6\\n1 5 4 3 2 6\\n') == '3'\nassert solution('6\\n1 5 4 3 2 6\\n1 2 5 4 3 6\\n') == '4'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6\\n1 2 5 4 3 6\\n1 2 5 4 3 6\"\n) == \"2\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(\"1 2 5 4 3 6\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"\") == \"0\"\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 5 4 3 2 6''') == '2'\nassert solution('''1 1 1''') == '1'"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 2 2 3 3 4 4') == '1 2 4 2 3 4 1'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 3 4 5\\n1 2 3 4 5') == '1 3 2 5 4 5'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\") == \"60\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 2') == '60'\nassert solution('5 3 2') == '-1'\nassert solution('4 4 2') == '-1'\n'''"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"60\"\nassert solution(\"1\\n2 2\\n3\\n4\") == \"-1\"\nassert solution(\"4 5 6 7 8\\n5 5 5 5 5\\n4 5 4 4\\n5 5 5 5 5\\n4 5 4 4\\n4 4 4 4\") == \"75\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 2\") == \"60\"\nassert solution(\"2 2 1\") == \"-1\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n\"\"\") == \"60\"\nassert solution(\"\"\"\n4 4 3 2\n1 10 2 5\n2 20 2 5\n3 15 1 5\n4 25 1 5\n\"\"\") == \"45\"\nassert solution(\"\"\"\n1 20 2 5\n2 50 2 5\n3 10 1 5\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n1 10 2 5\n2 50 2 5\n3 20 1 5\n\"\"\") == \"60\"\nassert solution(\"\"\"\n1 50 2 5\n2 10 2 5\n3 20 1 5\n\"\"\") == \"45\"\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 2') == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 1') == '30'\nassert solution('5 3 2') == '20'\nassert solution('1 1 1') == '-1'\nassert solution('8 3 1') == '80'"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60'\n"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '60', \"Min cost to buy: 60\"\nassert solution('''\n3 3 2\n1 30 2 50\n2 70 3 10\n3 20 1 80\n''') == '-1', \"No way to collect\"\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == \"Case #1: 1\\nCase #2: 2\\nCase #3: 1\\n\""
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3\\n'''"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n''') == 'Case #1: 1\nassert solution('''\n2\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #2: 2\n\n''')"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000') == 'Case #1: 1\\nCase #2: 2'\nassert solution('3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000''') == 'Case #1: 1\\nCase #2: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\n','solution'\nassert solution('''\n3\n3\n4\n3\n1\n''') == 'Case #1: 1\\nCase #2: 1\\nCase #3: 1\\n','solution'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3\\n10000 0 0\\n0 10000 0\\n0 0 10000\\n3\\n5000 0 0\\n0 2000 0\\n0 0 4000') == 'Case #1: 1\\nCase #2: 2'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3\\n'''\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\n'"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+1 2 H 2 O 1') == '6 6 6 1'\nassert solution('+1 2 C 1 O 2') == '1 1 1 1'\nassert solution('-1 1 O 2') == '1 1 1 1'\nassert solution('-1 3 C 6 H 12 O 6') == '1 1 1 1'"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+1 2 H 2 O 1\\n'\n    '+1 2 C 1 O 2\\n'\n    '-1 1 O 2\\n'\n    '-1 3 C 6 H 12 O 6\\n'\n    '0 0\\n'\n    ) == '6 6 6 1\\n', 'First'\n\nassert solution('+1 2 H 2 O 1\\n'\n    '+1 2 C 1 O 2\\n'\n    '-1 1 O 2\\n'\n    '-1 3 C 6 H 12 O 6\\n'\n    '0 0\\n'\n    '0 0\\n'\n    ) == '1 1 1 1\\n', 'Second'\n\nassert solution('+1 2 H 2 O 1\\n'\n    '+1 2 C 1 O 2\\n'\n    '-1 1 O 2\\n'\n    '-1 3 C 6 H 12 O 6\\n'\n    '0 0\\n'\n    '0 0\\n'\n    '0 0\\n'\n    ) == '1 1 1 1\\n', 'Third'\n\nassert solution('+1 2 H 2 O 1\\n'\n    '+1 2 C 1 O 2\\n'\n    '-1 1 O 2\\n'\n    '-1 3 C 6 H 12 O 6\\n'\n    '0 0\\n'\n    '0 0\\n'\n    '0 0\\n'\n    ) == '1 1 1 1\\n', 'Fourth'\n\nassert solution('+1 2 H 2 O 1\\n'\n    '+1 2 C 1 O 2\\n'\n    '-1 1 O 2\\n'\n    '-1 3 C 6 H 12 O 6\\n'\n    '0 0\\n'\n    '0 0\\n'\n    '0 0\\n'\n    ) == '1 1 1 1\\n', 'Fifth'"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\\\n+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0\n\"\"\") == \"\"\"\\\n6 6 6 1\n\"\"\"\n\nassert solution(\n\"\"\"\\\n+1 6 H_2O\n+1 2 C O_2\n-1 1 O_2\n-1 3 C_6 H_{12}O_6\n0 0\n\"\"\") == \"\"\"\\\n6 6 6 1\n\"\"\"\n\nassert solution(\n\"\"\"\\\n+1 6 H_2O\n+1 2 C O_2\n-1 1 O_2\n-1 3 C_6 H_{12}O_6\n0 0\n\"\"\") == \"\"\"\\\n6 6 6 1\n\"\"\"\n\nassert solution(\n\"\"\"\\\n+1 6 H_2O\n+1 2 C O_2\n-1 1 O_2\n-1 3 C_6 H_{12}O_6\n0 0\n\"\"\") == \"\"\"\\\n6 6 6 1\n\"\"\"\n\nassert solution(\n\"\"\"\\\n+1 6 H_2O\n+1 2 C O_2\n-1 1 O_2\n-1 3 C_6 H_{12}O_6\n0 0\n\"\"\") == \"\"\"\\\n6 6 6 1\n\"\"\""
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'''\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\\n+1 2 H 2 O 1\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == \"6 6 6 1\"\nassert solution(\"+1 2 O 2\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == \"6 6 6 1\"\nassert solution(\"+1 2 O 2\\n+1 2 H 2 O 1\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == \"6 6 6 1\"\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '1 2 3 1 1'\nassert solution('''+1 1 C 1 O 1\n+1 2 C 1 O 2\n+1 3 C 6 H 12 O 6\n+1 4 C 1 O 4\n+1 5 C 6 H 12 O 6\n+1 6 C 1 O 6\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '7 7 3 1 1'\nassert solution('''-1 1 O 2\n-1 2 O 2\n+1 3 O 3\n+1 4 O 4\n+1 5 O 5\n+1 6 O 6\n-1 7 O 7\n+1 8 O 8\n+1 9 O 9\n+1 10 O 10\n-1 11 O 11\n-1 12 O 12\n+1 13 O 13\n+1 14 O 14\n+1 15 O 15\n+1 16 O 16\n-1 17 O 17\n+1 18 O 18\n+1 19 O 19\n+1 20 O 20\n-1 21 O 21\n0 0''') == '1 4 8 6 6 8 6 5 12 1 2 1 2 2 1 2 2'\n'''\nimport re\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+1 2 H 2 O 1\") == \"6 6 6 1\"\nassert solution(\"+1 2 C 1 O 2\") == \"6 6 6 1\"\nassert solution(\"-1 1 O 2\") == \"1 1 1 1\"\nassert solution(\"-1 3 C 6 H 12 O 6\") == \"1 1 1 1\"\nassert solution(\"0 0\") == \"1 1 1 1\"\n\"\"\"\nimport itertools\nfrom functools import reduce\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '6 6 6 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '1 1 1 1'\nassert solution('+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0') == '0 1 1 1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('+1 2 H 2 O 1') == '6'\nassert solution('+1 2 C 1 O 2') == '1'\nassert solution('-1 1 O 2') == '1'\nassert solution('-1 3 C 6 H 12 O 6') == '1'\nassert solution('0 0') == '1'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+1 2 H 2 O 1\\n+1 2 C 1 O 2\\n-1 1 O 2\\n-1 3 C 6 H 12 O 6\\n0 0\\n\") == \"6 6 6 1\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n30 50\n20 0\n100 0\n100 40\n20 40''') == '20.83'\nassert solution('''3\n40 30\n20 20\n0 0''') == '6.68'\nassert solution('''5\n40 30\n20 20\n0 0\n100 0\n100 40\n20 40''') == '6.68'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4\n30 50\n20 0\n100 0\n100 40\n20 40\n\"\"\") == \"20.83\""
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    4\n    30 50\n    20 0\n    100 0\n    100 40\n    20 40\n\"\"\") == \"20.83\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\n\nassert solution('''\n5\n10 10\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '0.0'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n0\\n3\\n0\\n4\\n0\\n5\\n') == '5.0'\nassert solution('2\\n5\\n0\\n0\\n0\\n2\\n0\\n0\\n') == '2.0'\nassert solution('3\\n3\\n0\\n0\\n0\\n1\\n0\\n0\\n') == '1.0'\nassert solution('5\\n20\\n0\\n0\\n0\\n2\\n0\\n0\\n') == '2.0'\nassert solution('6\\n20\\n0\\n0\\n0\\n2\\n0\\n0\\n') == '2.0'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\nassert solution('''\n3\n0 0\n2 2\n1 2\n''') == '3.33'\nassert solution('''\n3\n0 0\n-2 -1\n-2 -2\n''') == '2.25'\nassert solution('''\n5\n0 0\n0 10\n10 0\n10 10\n0 10\n''') == '11.5'\n''')"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"20.83\"\nassert solution(\"5 1\") == \"20.83\"\nassert solution(\"6 4\") == \"20.83\"\nassert solution(\"1 2\") == \"0.5\"\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\nassert solution('''\n3\n10 10\n0 0\n10 10\n''') == '10.00'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n10\\n20\\n30\\n40\\n50') == '20.83'\nassert solution('3\\n0 0\\n100 0\\n0 100\\n100 100\\n0 0') == '100.0'\nassert solution('3\\n0 0\\n-1 -1\\n1 1\\n0 0') == '1.0'\nassert solution('3\\n-1 -1\\n1 1\\n0 0') == '1.0'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '49'\nassert solution('6 4') == '4'\nassert solution('6 2') == '4'\n\n\"\"\""
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n3 5\n1 2 3\n4 5 6\n7 8 9\n''') == '49'\n\"\"\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n2 1 5\\n7 6 4\\n9 8 3\\n') == '49'"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 2 5\\n7 6 4\\n9 8 3\") == \"49\""
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3') == '1'\nassert solution('3 3 4') == '1'\nassert solution('4 5 6') == '1'\nassert solution('3 2 4') == '0'\nassert solution('6 6 3') == '2'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 5\n7 6 4\n9 8 3\n\"\"\") == \"49\"\nassert solution(\"\"\"\n2 2\n1 1\n2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 4\n1 1 3 2\n2 2 3 2\n3 3 1 2\n4 4 1 2\n\"\"\") == \"12\"\nassert solution(\"\"\"\n5 5\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 2 1\n4 5 1 2 3\n5 5 1 2 3\n\"\"\") == \"20\"\nassert solution(\"\"\"\n5 5\n1 1 2 3 1\n2 2 3 1 1\n3 3 1 1 2\n4 4 1 1 1\n5 5 1 1 3\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\nassert solution('''3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '0'\nassert solution('''10 10\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19 20\n21 22 23 24 25 26 27 28 29 30\n''') == '72'\nassert solution('''10 20\n1 2 3 4 5 6 7 8 9 10\n11 12 13 14 15 16 17 18 19 20\n21 22 23 24 25 26 27 28 29 30\n''') == '0'\nassert solution('''100 100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100\n''') == '1681'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 5\n7 6 4\n9 8 3\n\"\"\") == \"49\"\n\nassert solution(\"\"\"\n2 2\n1 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2 2\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1\\n2 2\\n5 5') == '1'\nassert solution('2 2\\n1 1\\n2 2') == '2'\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 15') == '##CROSSWORD####'\n\n\n\"\"\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\\\n1 15\n##.........####\n1\nCROSSWORD\"\"\") == \"##CROSSWORD####\"\nassert solution(\"\"\"\\\n2 5\n##....#.#.#.#.#\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 15') == \"####CROSSWORD##\"\nassert solution('2 10') == \"##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.\"\nassert solution('3 20') == \".##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.\"\nassert solution('4 5') == \"###.###.###.###.###.###.###.###.###.###.###.###.###.###.###.###.###.###.###.###.\"\nassert solution('5 10') == \".##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.##.\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 15\\nCROSSWORD\") == \"##CROSSWORD####\"\nassert solution(\"1 15\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\nCROSSWORD\" ) == \"##CROSSWORD####\"\nassert solution(\"2 1\\nAB\\nCD\\nEF\\nGH\\nIJ\\nKL\\nMN\\nOP\\nQR\\nST\\nUW\\nVW\\nXY\\nZU\\nZV\\nYW\\nWW\\nXZ\\nYZ\\nZW\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15\\nCROSSWORD\" ) == \"##CROSSWORD####\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 15') == '##CROSSWORD####'\n\nassert solution('1 5') == '##CROSSWORD####'\n\nassert solution('1 12') == '##CROSSWORD####'\n\nassert solution('1 3') == '##CROSSWORD####'\n\nassert solution('1 6') == '##CROSSWORD####'"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\\\n1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\n\nassert solution('''\\\n2 10\n##..#############\n.#...............\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 15\\n\") == stdin\nassert solution(\"1 5\\nCROSSWORD\\n\") == \"CROSSWORD\"\nassert solution(\"1 2\\nC1\\nR2\\n\") == \"C1\\nR2\"\nassert solution(\"1 2\\n.C1.\\n.R2.\\n\") == \"C1.\\nR2.\\n\"\nassert solution(\"3\\n.C1.\\n.R2.\\n\") == \"C1\\nR2\\n\"\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 15\\nCROSSWORD\") == \"1CROSSWORD\\n\"\n\n\n--Input---\n1 16\n##....\n##....\n##..#.\n##..#.\n##....\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 15') == '##CROSSWORD####'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1\\n2 7 6\\n9 5 1\\n4 3 8') == '31'\nassert solution('2 3\\n4 5\\n6 7') == '7'"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"31\""
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '31'\nassert solution('3 3 2') == '15'\nassert solution('3 1 2') == '3'\nassert solution('3 3 1') == '8'\nassert solution('4 2 1') == '4'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 1\n1 8 1\n5 5 1\n\"\"\") == \"31\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n2 7 6\n9 5 1\n4 3 8\n''') == '31'\nassert solution('''\n2 1\n2 7 6\n9 5 1\n4 3 8\n''') == '63'\n'''\n\nfrom math import inf\n\nn, k = map(int, input().split())\ntable = []\nfor _ in range(n):\n    table.append(list(map(int, input().split())))\n\n_table = [[0] * n for _ in range(n)]\nminimal = inf"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"21\"\nassert solution(\"6 6\") == \"15\"\nassert solution(\"1 3\") == \"10\"\nassert solution(\"9 5 1\") == \"15\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"31\"\nassert solution([\n    [1, 2, 3],\n    [2, 5, 1],\n    [3, 8, 4]\n]) == \"36\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    3 1\n    2 7 6\n    9 5 1\n    4 3 8\n\"\"\") == \"31\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\n2 7 6\n9 5 1''') == \"31\"\n\nassert solution('''5 7\n1 2 3 5 6''') == \"37\"\n\nassert solution('''2 2\n1 2 1''') == \"0\"\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1\n2 7 6\n9 5 1\n4 3 8\n''') == '31'\nassert solution('''\n2 5\n2 2 2 3 3\n''') == '8'\nassert solution('''\n3 3\n2 2 1\n9 8\n4 3\n''') == '4'\nassert solution('''\n1 4\n1 2 1\n9 8\n4 3\n''') == '10'\nassert solution('''\n3 4\n1 1 1 1\n1 2 1 1\n1 3 1 1\n''') == '6'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '4'\nassert solution('2 1') == '3'\nassert solution('3 1') == '6'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 1\nBBW\n\"\"\") == \"\"\"2\"\"\"\n\n\nassert solution(\"\"\"5 5\nBWBWWB\n\"\"\") == \"\"\"4\"\"\"\n\n\nassert solution(\"\"\"30 30\nBBBBBBBBBBBBB\n\"\"\") == \"\"\"33\"\"\"\n\n\nassert solution(\"\"\"5 5\nBWBWBWBWBWB\n\"\"\") == \"\"\"1\"\"\"\n\n\nassert solution(\"\"\"20 10\nBWWBBBBBBWWBBB\n\"\"\") == \"\"\"2\"\"\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nB') == '1'\nassert solution('1\\nW') == '1'\nassert solution('3\\nBBW') == '2'\nassert solution('3\\nWWW') == '3'\nassert solution('3\\nWWB') == '2'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 4\nBBW\nBBW\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2 4\nWWB\nWWB\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 3\nBBW\nBBW\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 3\nWWB\nWWB\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\nBWWBWBW\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"2\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\nBBW\n''') == '2'\nassert solution('''\n3 2\nBBWWB\n''') == '1'\nassert solution('''\n6 1\nWWBBBWW\n''') == '5'\nassert solution('''\n5 5\nWWWWW\n''') == '5'\n'''\n\n'''\nTLE\n'''\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nBBW\") == \"2\"\nassert solution(\"2\\nBBWW\") == \"3\"\nassert solution(\"3\\nBBWWW\") == \"2\"\nassert solution(\"4\\nBWWWWW\") == \"2\"\nassert solution(\"5\\nBWBBBWB\") == \"1\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2', \"1\"\nassert solution('2') == '3', \"2\"\nassert solution('3') == '4', \"3\"\nassert solution('11') == '4', \"11\"\nassert solution('22') == '5', \"22\"\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 1]) == 2\nassert solution([1, 1]) == 2\nassert solution([2, 1]) == 4\nassert solution([2, 2]) == 4\nassert solution([2, 3]) == 3"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n1 2 3\n1 2 3\n''') == '0.556'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"0.556\"\nassert solution(\"3 1\") == \"0.556\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '1.75'\nassert solution('10 2') == '0.8333'\nassert solution('100 1') == '1.0'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\\n3 2 1\\n1 2 3\") == \"0.556\"\nassert solution(\"5 3\\n2 3 5 4 2\\n3 1 1\\n1 1 3\\n2 2 4\\n2 2 4\\n1 3 1\\n3 2 4\\n\") == \"0.413\"\nassert solution(\"3 2\\n2 1\\n1 2\\n\") == \"0.206533\"\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '0.556'\nassert solution('3 1') == '0.556'\nassert solution('3 1') == '0.556'\n\"\"\""
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n3 2 1\n1 2 3\n''') == '0.556'\nassert solution('''\n2 1\n2 4\n''') == '0.75'\nassert solution('''\n4 5\n5 1 1 3 2\n''') == '0.5390625'\nassert solution('''\n2 3\n2 2 2\n''') == '0.5'\n'''\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n') == '0.556', \"First\"\nassert solution('3 2 1\\n') == '0.556', \"Second\"\nassert solution('3 3 3\\n') == '0.556', \"Third\""
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0.556'\nassert solution('3 1') == '0.545'\nassert solution('3 0') == '0.547'\nassert solution('5 3') == '0.475'\nassert solution('8 9') == '0.485'\n\nprint(solution(input()))"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0.556\"\nassert solution(\"10 1\") == \"0.556\"\nassert solution(\"1 2\") == \"1.000\"\nassert solution(\"1 2 3 4 5 6\") == \"0.500\"\nassert solution(\"3 2 3\") == \"0.666\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5 6 7') == '0'\nassert solution('5\\n5 5 5 5') == '1'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4 3 2\") == \"3\""
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 3 2') == '3'\nprint(solution('''5 4 3 2\n3\n4\n2\n3\n1'''))\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 3 2') == '3'\nassert solution('5 4 3 2') == '5'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 3 2') == '3'"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"3\"\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nprint(solution())\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('7 1 5 3') == '6'\nprint('All test cases passed!')"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 3 2') == '3'\nprint(solution('5 4 3 2'))\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 3 5\n3 5 6\n2 3 6\n5 3 5\n3 3 5\n5 3 6\n3 4 6''') == '17'"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 6\n2 5 8\n3 3 5\n5 3 6\nSample Input 2:\n2\n1 1\n1 1\nSample Output 2:\n0\n''') == '0'\nassert solution('''2\n1 2\n2 2\n''') == '3'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'\nassert solution('''\n3\n1 2 3\n5 6 7\n3 4 5\n''') == '15'\n''')\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"13\""
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 6') == '13'\nassert solution('4 5 6') == '17'\nassert solution('4 1 6') == '17'\nassert solution('4 3 5') == '17'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 5\\n2 6\\n3 6 2\\n5 2\\n6 3') == '13'"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n3 3 5\\n2 5 8\\n3 3 5\\n5 3 6\\n') == '13'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 6') == '13'\nassert solution('2 5 8') == '13'\nassert solution('3 3 5') == '13'\nassert solution('5 3 6') == '13'\n'''\nfrom collections import deque\nimport itertools\n\nclass Solution:\n    def solution(self, stdin):\n        pass"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '13'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10.000000 20.123456\n1\n13.141593 20.123456\n''') == '3.141593'\nassert solution('''\n10.000000 20.123456\n1\n12.920932 20.123456\n''') == '9.20932'\nassert solution('''\n10.000000 20.123456\n1\n12.920932 20.123456\n''') == '10.820932'\nassert solution('''\n10.000000 20.123456\n1\n12.920932 20.123456\n''') == '10.820932'\nassert solution('''\n10.000000 20.123456\n1\n12.920932 20.123456\n''') == '10.820932'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1\n2\n1\n1\n3\n1\n2\n''') == \"4.12\"\nassert solution('''10\n2\n5\n3\n5\n5\n5\n4\n5\n''') == \"4.12\"\n'''\nimport math\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '6.00000'\nassert solution('10\\n20.123456\\n1\\n13.141593\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1\\n0\\n0\\n10\\n1\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1.0\"\nassert solution(\"1\\n2\\n3\\n4\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n\") == \"1.0\"\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1.000000 10.000000\n10.123456 20.123456\n3.141593 20.123456\n20.123456 10.000000\n13.141593 10.000000\n1.011592 10.000000\n1.997860 10.000000\n0.997860 10.000000\n0.997860 10.000000\n0.997860 10.000000\n0.997860 10.000000\n0.997860 10.000000''') == '3.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10.000000 20.123456') == '3.141593'\nprint('Congratulations! Your solution is correct.')\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n11.141593 20.123456') == '1.141593'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0.0 0.0\n1\n2\n3\n3\n2\n4\n5\n3\n5\n4\n4\n5\n4\n3\n4\n1\n2\n3\n3\n4\n3\n2\n3\n2\n''') == '4.000488'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n') == '3.141593'\nassert solution('1\\n') == '0.0'\nassert solution('1\\n2\\n') == '0.0'\n\"\"\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n4 4\\n2\\n') == '2.13333333333333'\nassert solution('2\\n') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n3\\n') == '2.13333333333333'\nassert solution('2\\n1\\n5\\n') == '1.0'\nassert solution('5\\n5\\n5\\n') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '2.13333333333333'\nassert solution('3') == 'impossible'\nassert solution('4') == '2.13333333333333'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2.13333333333333'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4 4') == '2.13333333333333'\nassert solution('100\\n5 5') == 'impossible'"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n4 4\\n2') == '2.13333333333333'\nassert solution('3\\n10 12\\n5\\n7 12\\n5\\n6 12') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2.13333333333333\"\nassert solution([1, 2, 3, 4]) == \"2.13333333333333\"\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4 4') == '2.13333333333333'\nassert solution('1\\n1') == 'impossible'\n"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2.13333333333333'\nassert solution('3') == 'impossible'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '3'\nassert solution('100') == '45'\nassert solution('15') == '0'\nassert solution('50') == '2'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"100\") == \"37\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\nassert solution('1000') == '1548'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0'\nassert solution('10') == '3'\nassert solution('100') == '32'\nassert solution('1000') == '200'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '4'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('5') == '10'\nassert solution('10') == '87'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '18'\nassert solution('12345') == '28'\nassert solution('123456') == '27'\n\"\"\"\nn = int(input())"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n35 M\n0 F\n43 M\n30 M\n''') == \"3\"\nassert solution('''\n35 M\n0 M\n43 M\n30 F\n''') == \"2\"\nassert solution('''\n7 F\n0 F\n7 M\n0 M\n''') == \"2\"\nassert solution('''\n18 M\n0 F\n18 F\n0 F\n''') == \"3\"\nassert solution('''\n35 M\n0 F\n43 M\n30 F\n''') == \"2\"\n'''\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"1\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque chess\") == \"3\"\nassert solution(\"1\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"1\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"1\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque chess\") == \"3\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n15 M classicism programming\\n20 M baroque chess\") == \"3\"\nassert solution(\"3\\n10 M classicism programming\\n50 F baroque chess\\n40 F baroque programming\") == \"4\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n35 M classicism programming') == '3'\nassert solution('2\\n0 M baroque skiing') == '1'\nassert solution('3\\n43 M baroque chess') == '2'\nassert solution('4\\n30 F baroque soccer') == '1'"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer''') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n') == '3'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n\"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\n30 F baroque chess\n0 F baroque programming\n43 M baroque chess\n0 F baroque programming\n35 M classicism programming\n\"\"\"\n) == \"4\"\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"2\\n55 F chemistry\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n32 M physics\\n0 M baroque physics\\n0 F chemistry\\n\") == \"3\"\n\"\"\"\nfrom itertools import combinations\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\") == \"3\"\nassert solution(\"2\\n8 M jazz\\n7 F jazz\\n12 M jazz\\n7 F jazz\\n13 M jazz\\n1 F jazz\\n14 M jazz\\n1 F jazz\") == \"2\"\nassert solution(\"3\\n8 M jazz\\n7 F jazz\\n12 M jazz\\n7 F jazz\\n13 M jazz\\n1 F jazz\\n14 M jazz\\n1 F jazz\") == \"1\"\nassert solution(\"4\\n35 M classicism programming\\n0 M baroque skiing\\n43 M baroque chess\\n30 F baroque soccer\\n0 M jazz\\n7 F jazz\") == \"4\"\n\"\"\""
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2 1\\n2 1\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n\"\n    \"a 0\\n\"\n    \"a 1\\n\"\n    \"b 2\\n\"\n    \"c 2 3\\n\"\n    \"b 4\\n\"\n    ) == \"2\\n1\\n2\\n\"\nassert solution(\n    \"6\\n\"\n    \"a 0\\n\"\n    \"a 1\\n\"\n    \"b 2\\n\"\n    \"c 2 3\\n\"\n    \"c 4 5\\n\"\n    ) == \"1\\n2\\n\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2 1'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n2\\n'\n\nassert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '2\\n1\\n2\\n1\\n2\\n'\n\nassert solution('''\n10\na 0\na 1\nb 2\nc 2 3\nb 4\na 5\na 6\nb 8\nc 8 9\nb 10\n''') == '2\\n1\\n2\\n1\\n2\\n3\\n2\\n3\\n3\\n1\\n1\\n1\\n1\\n1\\n1\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\na 0\na 1\nb 2\nc 2 3\nb 4\n''') == '1 2\\n1 3\\n2 4\\n2 3\\n2 4\\n'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '1'\nassert solution('2\\n2\\n1\\n1\\n1\\n') == '2'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n0\\n1\\n0\\n1\\n2\\n1\\n2\\n3\\n3\\n2\\n\") == \"4\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2 1\"\nassert solution(\n    \"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"1 2\"\nassert solution(\n    \"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2 1\"\nassert solution(\n    \"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2 1\"\nassert solution(\n    \"5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n\") == \"2 1\"\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0\n1\n2\n0\n''') == '''1\n1\n2\n'''\nassert solution('''\n0\n1\n2\n0\n''') == '''1\n2\n'''\nassert solution('''\n1\n1\n1\n0\n''') == '''2\n2\n'''\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2 1\\n1'\n\nassert solution('7\\na 0\\na 1\\na 2\\na 3\\na 4\\na 5\\na 6\\nb 0\\nb 1\\n') == '4 3\\n2 1\\n3'\n\nassert solution('5\\na 0\\na 1\\n3\\nc 2\\nc 3\\n5\\n') == '4 2\\n4 1\\n4'\n\nassert solution('1\\na 0\\n') == '0 1\\n1'\n\nassert solution('1\\n0\\n') == '1 1\\n1'"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\nassert solution('''\n5 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '4'\nassert solution('''\n7 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '0'\nassert solution('''\n5 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '0'\n\n'''\n\nimport math\nfrom itertools import permutations\n\nn, k = list(map(int, input().split()))\nd = [[math.inf] * (n + 1) for _ in range(k + 1)]\np = [[math.inf] * (n + 1) for _ in range(n + 1)]\n\nfor _ in range(n):\n    p[0][_] = int(input())\n    p[1][_] = int(input())\n    p[0][_] += p[1][_]\nfor i in range(2, k + 1):\n    for j in range(n):\n        for k in range(n):\n            p[i][j] = min(p[i - 1][j], p[i - 1][k] + p[i][j - k - 1]) + p[i - 2][j]\n            if i - 2 == 0:\n                d[i][j] = p[i][j]\n            else:\n                d[i][j] = min(d[i][j], p[i][j] + d[i - 2][j - k - 1])\nprint(d[k][n - 1])"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0\\n') == '5'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"1\"\n\"\"\""
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1') == '5'\nassert solution('10 1') == '1'\nassert solution('5 5') == '3'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '5'\nassert solution('78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'\nprint('All tests passed')\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n''') == '5'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 1\n78 61 88 71\n80 80 90 90\n70 90 80 100\n90 70 0 0\n80 67 0 0\n90 63 0 0\n\"\"\") == \"5\"\n\n\"\"\""
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == \"5\"\nassert solution('6 2\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == \"0\"\nassert solution('6 3\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == \"1\"\nassert solution('6 4\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == \"1\"\nassert solution('6 5\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == \"2\"\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    6\n    1 2\n    2 3\n    3 4\n    4 5\n    1 4\n    5 2\n    ''') == '1'\nassert solution('''\n    10\n    1 2\n    1 3\n    1 4\n    1 5\n    1 6\n    2 5\n    2 6\n    3 4\n    3 5\n    4 6\n    5 2\n    ''') == '1'\nassert solution('''\n    25\n    1 4\n    2 5\n    3 6\n    4 3\n    5 6\n    6 5\n    6 1\n    6 4\n    6 2\n    5 4\n    5 1\n    4 6\n    4 2\n    3 4\n    3 1\n    2 2\n    2 3\n    1 3\n    1 1\n    3 4\n    1 4\n    ''') == '2'\n''') == '1'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2\n1 2\n1 3\n1 4\n2 3\n2 4\n3 3\n3 4\n4 4\n4 4''') == '4'\n\nassert solution('''2\n2\n1 2\n1 3\n1 4\n2 3\n2 4\n3 3\n3 4\n4 4\n4 4''') == '3'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n') == \"3\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2'\nassert solution('4 5') == '0'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n\") == \"8\"\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '4'\nassert solution('''1 100000\n1 1\n1 2\n2 3\n2 4\n2 5\n''') == '99999'\n\nassert solution('''100000 2\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 6\n3 7\n3 8\n4 7\n4 8\n5 7\n5 8\n5 9\n6 7\n6 8\n6 9\n7 8\n7 9\n8 9\n9 9\n''') == '1595493912'"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 2]) == 0\nassert solution([1, 3]) == 0\nassert solution([1, 4]) == 4\nassert solution([2, 3]) == 4\nassert solution([2, 4]) == 8\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '2'\nassert solution('2 4') == '3'\nassert solution('1 3') == '2'\nassert solution('1 4') == '4'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2\n1 3\n1 4\n2 3\n2 4\n\n1 2\n1 3\n1 4\n2 3\n2 4''') == '2'"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 5, 1, 2, 1, 3, 1, 4, 2, 3, 2, 4]) == \"4\"\nassert solution([5, 1, 1, 1, 1, 1, 1, 1]) == \"1\"\nassert solution([1, 2, 3, 4, 5]) == \"2\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 4 3'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2 4\"\nassert solution(\"5\\n2 4\") == \"2 4\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"3 1 2\"\nassert solution(\"8\\n1 2 3 4 5 6 7 8\") == \"3 1 2\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '1 2'\nassert solution('1 2 3') == '1 2'\nassert solution('1 2 3 4') == '1 2'\nassert solution('3 4 1 2') == '1 2'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n2 3\\n3 4\\n\") == \"2 4\"\nassert solution(\"3\\n3 4\\n2 3\\n\") == \"3 2\"\nassert solution(\"3\\n3 4\\n4 3\\n\") == \"3 2\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n2 3\n3 4\n\"\"\") == \"2 4\"\nassert solution(\"\"\"\n1 2\n2 3\n3 4\n\"\"\") == \"2 4\"\nassert solution(\"\"\"\n1 2\n1 3\n\"\"\") == \"0 0\"\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2 4'\nassert solution('2 3') == '3 4'\nassert solution('3 4') == '2 4'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2 3'"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2\n2 3\n3 4\n''') == '2 4'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n''') == '3 5'\nassert solution('''\n9\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n''') == '1 2 6 7'"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2 3'\nassert solution('6') == '5 2'\nassert solution('12') == '6 2'\nassert solution('19') == '8 5'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '2 4 3'\nprint('Solution check passed')"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '3'\nassert solution('2 1') == '2'\nassert solution('3 5') == '5'\nassert solution('7 2') == '0'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n1 3\n2 1\n3 5\n7 2\n''') == '5'\nassert solution('''\n3 3\n3 5\n2 3\n1 4\n3 5\n2 5\n''') == '0'\nassert solution('''\n7 5\n5 1\n3 5\n2 3\n3 5\n2 4\n3 5\n2 5\n3 5\n2 5\n3 5\n3 5\n2 4\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n2 5\n3 5\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1\n2\n5\n7\n1 1\n2 5\n''') == '5'\nassert solution('''\n2\n2\n3\n5\n7\n1 1\n2 5\n''') == '6'\nassert solution('''\n4\n4\n3\n1\n7\n1 1\n2 5\n''') == '0'\nassert solution('''\n3\n3\n2\n2\n''') == '0'\nassert solution('''\n2\n2\n3\n2\n3\n2\n2\n''') == '0'"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 3\n2 1\n3 5\n7 2\n''') == '5'\n\nassert solution('''\n1 1\n5 2\n''') == '0'\n\nassert solution('''\n1 2\n1 3\n2 1\n''') == '1'\n\nassert solution('''\n10 10\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n2 1\n2 2\n2 3\n3 1\n3 2\n3 4\n4 1\n4 2\n4 3\n5 1\n5 2\n5 3\n5 4\n5 5\n''') == '18'\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 1\") == \"0\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"5\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 1\") == \"4\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"7 2\") == \"0\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1 2\\n\"\n    \"1 3\"\n    ) == \"0\"\n\nassert solution(\n    \"1 2\\n\"\n    \"2 3\"\n    ) == \"3\"\n\nassert solution(\n    \"2 2\\n\"\n    \"1 3\"\n    ) == \"4\"\n\nassert solution(\n    \"2 2\\n\"\n    \"3 1\"\n    ) == \"0\"\n\nassert solution(\n    \"3 1\\n\"\n    \"3 5\"\n    ) == \"4\""
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '5'\nassert solution('3 1') == '0'\nassert solution('1 1') == '1'\nassert solution('1 1') == '0'\n\n'''\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 3\") == \"0\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 3\\n2 1\\n3 5\\n7 2\\n') == '5'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '2'\nprint('solution() is working.')"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution('1 3 3 1 1 1 2 2 1 2 3 2 1') == '2'\nprint('PASSED')"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '3'\nassert solution('''\n5 2 4\n0 0\n0 1\n0 0\n1 1\n2 1\n1 1\n''') == '2'\nassert solution('''\n5 5 3\n0 0\n1 1\n2 2\n0 0\n1 1\n2 2\n0 0\n0 1\n0 0\n0 1\n''') == '3'\nassert solution('''\n5 5 4\n0 0\n1 1\n2 2\n0 0\n1 1\n2 2\n0 0\n0 1\n0 0\n''') == '4'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 2\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '2'\nassert solution('''4 4 5\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0''') == '3'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == '2'\nassert solution('5 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\nSample Input:') == '1'\nassert solution('3 3\\n0 1\\n1 1\\n0 1\\nSample Input:') == '0'\nassert solution('6 2\\n0 0\\n0 1\\n0 1\\n0 1\\n1 2\\n1 2\\nSample Input:') == '2'\nassert solution('6 5\\n0 0\\n0 1\\n1 1\\n2 2\\n0 2\\nSample Input:') == '1'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0''') == '2'\n\nassert solution('''\n    3 5 3\n    1 1\n    2 2\n    1 3\n    0 0\n    0 3\n    1 4\n    3 3\n    1 4''') == '1'\n\nassert solution('''\n    3 5 3\n    0 0\n    0 3\n    1 4\n    3 3\n    3 0\n    1 4\n    3 3\n    1 4''') == '4'"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 4 4\n0 0\n0 4\n3 3\n0 0\n3 0\n3 4\n2 2\n3 3\n2 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 5 3\n0 0\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\""
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 5 4\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n1 1\n0 0\nSample Output:\n\"\"\") == \"\"\nassert solution(\"\"\"\n3 5 4\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n2 2\n1 3\n0 0\n0 1\nSample Output:\n\"\"\") == \"\"\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4\") == \"2\"\nassert solution(\"1 2 1\") == \"0\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"3 1 1\") == \"0\"\nassert solution(\"1 1 1\") == \"0\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"GHOST\"\nassert solution(f'{input()}\\n{input()}\\n{input()}\\n{input()}') == \"SAFE\"\nassert solution(f'{input()}\\n{input()}\\n{input()}\\n{input()}\\n{input()}\\n{input()}\\n{input()}\\n{input()}\\n{input()}') == \"GHOST\""
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n3 C\n2 C\n1 C\n''') == 'GHOST'\nassert solution('''\n4 3\n2 C\n3 C\n1 C\n''') == 'SAFE'\n\n'''"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2\n2 2\n2 2\n2 2''') == 'SAFE'\nassert solution('''10 5\n3 1\n4 6\n1 3\n5 2\n4 8\n3 3\n7 7\n8 3\n7 5\n2 2\n6 6\n3 3\n2 5\n6 5\n6 4\n4 5\n8 1\n3 7\n2 5\n6 2\n1 3\n2 5\n3 5''') == 'SAFE'\nassert solution('''5 1\n4 5\n3 4\n3 3\n3 3\n3 2\n2 5\n4 5''') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'GHOST'\nassert solution('''4 3\n3 C\n2 C\n1 C\n''') == 'SAFE'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == 'GHOST'\nassert solution('2 3') == 'SAFE'\nassert solution('1 2') == 'SAFE'\n\"\"\"\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == 'GHOST'\nassert solution('4 3\\n3 C\\n2 C\\n1 C') == 'SAFE'"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == 'GHOST'\nassert solution('1 2') == 'SAFE'\nassert solution('1 1') == 'GHOST'\nassert solution('4 4') == 'SAFE'\nassert solution('3 4') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n3 C\\n2 C\\n1 C\\n\") == \"GHOST\"\nassert solution(\"4 1\\n1 C\\n\") == \"SAFE\"\nassert solution(\"4 1\\n0 C\\n\") == \"SAFE\"\nassert solution(\"4 3\\n1 C\\n2 C\\n3 C\\n\") == \"GHOST\"\nassert solution(\"4 3\\n2 C\\n3 C\\n\") == \"SAFE\"\n\"\"\""
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'GHOST'\nassert solution('4 3') == 'SAFE'\nassert solution('5 1') == 'SAFE'\nassert solution('5 4') == 'SAFE'\nassert solution('4 4') == 'GHOST'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\n2 2\\n3 1\\n1 4\\n3 2\\n') == 'SAFE'\nassert solution('7 9\\n5 5\\n4 4\\n3 3\\n5 2\\n4 1\\n3 3\\n2 5\\n1 5\\n5 2\\n') == 'GHOST'\nassert solution('3\\n2 C\\n3 1\\n1 2\\n1 2\\n') == 'SAFE'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"4 3\") == \"1\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\n\"\"\"\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '2'\nassert solution('1 4') == '1'\nassert solution('5 4') == '5'\nassert solution('1 2') == '1'\nassert solution('0.1 1') == '1'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == '2'\n\"\"\"\n\nimport math\nfrom decimal import Decimal\n\nn, l = map(int, stdin.readline().split())\na = list(map(int, stdin.readline().split()))\n\nmax_speed = 10 ** -9\nl_speed = 10 ** -9\nres = 0\nfor i in range(len(a)):\n    # avoid x_i+x_i+1\n    if l_speed <= a[i] <= (l_speed + 0.1):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i\n    if (l_speed + 0.1) <= a[i] <= (l_speed + 1):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+2\n    if (l_speed + 1) <= a[i] <= (l_speed + 2):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+3\n    if (l_speed + 2) <= a[i] <= (l_speed + 3):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+4\n    if (l_speed + 3) <= a[i] <= (l_speed + 4):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+5\n    if (l_speed + 4) <= a[i] <= (l_speed + 5):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+6\n    if (l_speed + 5) <= a[i] <= (l_speed + 6):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+7\n    if (l_speed + 6) <= a[i] <= (l_speed + 7):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+8\n    if (l_speed + 7) <= a[i] <= (l_speed + 8):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+9\n    if (l_speed + 8) <= a[i] <= (l_speed + 9):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+10\n    if (l_speed + 9) <= a[i] <= (l_speed + 10):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+11\n    if (l_speed + 10) <= a[i] <= (l_speed + 11):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+12\n    if (l_speed + 11) <= a[i] <= (l_speed + 12):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+13\n    if (l_speed + 12) <= a[i] <= (l_speed + 13):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+14\n    if (l_speed + 13) <= a[i] <= (l_speed + 14):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+15\n    if (l_speed + 14) <= a[i] <= (l_speed + 15):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+16\n    if (l_speed + 15) <= a[i] <= (l_speed + 16):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+17\n    if (l_speed + 16) <= a[i] <= (l_speed + 17):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+18\n    if (l_speed + 17) <= a[i] <= (l_speed + 18):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+19\n    if (l_speed + 18) <= a[i] <= (l_speed + 19):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+20\n    if (l_speed + 19) <= a[i] <= (l_speed + 20):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+21\n    if (l_speed + 20) <= a[i] <= (l_speed + 21):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+22\n    if (l_speed + 21) <= a[i] <= (l_speed + 22):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+23\n    if (l_speed + 22) <= a[i] <= (l_speed + 23):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+24\n    if (l_speed + 23) <= a[i] <= (l_speed + 24):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+25\n    if (l_speed + 24) <= a[i] <= (l_speed + 25):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+26\n    if (l_speed + 25) <= a[i] <= (l_speed + 26):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+27\n    if (l_speed + 26) <= a[i] <= (l_speed + 27):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+28\n    if (l_speed + 27) <= a[i] <= (l_speed + 28):\n        l_speed = a[i]\n        continue\n\n    # avoid x_i+x_i+29"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2'\nassert solution('1 0.1') == '1'\nassert solution('0.1 0.1') == '0'\nassert solution('0.001 0.0001') == '0'\nassert solution('0.00001 0.00001') == '0'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0.00 1.00') == '1'\nassert solution('2\\n0.00 2.00') == '2'\nassert solution('1\\n0.10 1.00') == '1'\nassert solution('1\\n0.00 1.10') == '1'\nassert solution('2\\n0.00 2.00') == '2'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0.00 1.00') == '2'\nassert solution('3\\n0.00 2.00') == '0'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '2'\nassert solution('0.005 0.0005') == '10'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"2\""
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 1') == '2'\nassert solution('0.1 2') == '0.2'\n'''\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n10 0') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n0 0\n10 0\n2\n30 0\n15 0\n''') == '10'\nassert solution('''\n3\n0 0\n1 0\n2\n''') == '1'\nassert solution('''\n4\n0 0\n1 0\n2 0\n3\n''') == '1'\nassert solution('''\n1\n0 0\n''') == '0'\nassert solution('''\n5\n0 0\n1 0\n2 0\n3 0\n4\n''') == '1'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n0 0\n10 0\n2\n30 0\n15 0\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n4\n0 0\n10 0\n2\n30 0\n15 0\nSample Output:\n0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n0 0\n10 0\n2\n30 0\n15 0\n\"\"\") == \"40\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0 0\n10 0\n2\n30 0\n15 0\n''') == '10'\nassert solution('''\n3\n0 0\n10 0\n2\n30 0\n15 0\n''') == '15'\nassert solution('''\n100000\n0 0\n100000 0\n100000 100000\n''') == '100000'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10 10\\n20 30') == '10.0'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '11.666666666666668'\nassert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10.0'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"20.0\"\nassert solution([0,0,10,30,15,0]) == \"20.0\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"20\""
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1 2\nW 10 3\nE 17 4\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n1 1\nW 2\nE 1\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n1 3\nW 2 0\nW 1 1\nW 2 2\nE 10 5\nE 16 10\nE 19 19\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'\nassert solution('10\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '1'\n\n\"\"\",\"\"\"def solution(stdin: str) -> str:\n    pass\n\nassert solution('1\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'\nassert solution('10\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '1'\n\n\"\"\",\"\"\"def solution(stdin: str) -> str:\n    pass\n\nassert solution('1\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'\nassert solution('6\\nW 10 0\\nW 10 3\\nE 17 4\\nE 20 4\\n') == '1'\nassert solution('8\\nW 10 0\\nW 10 3\\nE 17 4\\nE 20 4\\nE 20 4\\nW 20 4\\nE 17 4\\n') == '2'\nassert solution('8\\nW 10 0\\nW 10 3\\nE 17 4\\nE 20 4\\nW 20 4\\nE 17 4\\n') == '2'\nassert solution('8\\nW 10 0\\nW 10 3\\nE 17 4\\nE 20 4\\nW 20 4\\nE 17 4\\nW 20 4\\n') == '3'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'\nassert solution('4 1\\nW 1 3\\nE 2 2\\n') == '1'\nassert solution('5 4\\nW 1 3\\nE 4 4\\nW 2 2\\nE 2 3\\n') == '2'\nassert solution('1 1\\nW 3 3\\nE 2 3\\n') == '2'\nassert solution('3 4\\nW 2 2\\nE 1 2\\n') == '1'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8 3\nW 10 0\nW 10 3\nE 17 4\n''') == '0'\n\nassert solution('''\n5 3\nW 10 0\nW 10 3\nE 17 4\nW 10 3\n''') == '1'\n\nassert solution('''\n4 3\nW 10 0\nW 10 3\nE 17 4\n''') == '2'\n\nassert solution('''\n8 2\nW 10 0\nE 17 4\nW 10 3\n''') == '0'\n\nassert solution('''\n5 2\nW 10 0\nW 10 3\nE 17 4\n''') == '0'"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1') == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '5 2\\nW 10 0\\nE 17 4\\nW 10 3\\nW 10 0\\nE 17 4\\n') == '0'\nassert solution(\n    '5 2\\nW 10 0\\nW 10 3\\nW 10 0\\nE 17 4\\nE 17 4\\n') == '1'\nassert solution(\n    '5 2\\nW 10 0\\nE 17 4\\nW 10 3\\nW 10 0\\nE 17 4\\n') == '1'\nassert solution(\n    '10 2\\nW 10 0\\nW 10 3\\nW 10 0\\nE 17 4\\nE 17 4\\nE 17 4\\n') == '2'\nassert solution(\n    '10 2\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nE 17 4\\n') == '2'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nW 8 0\\nW 8 3\\nE 17 4\\n') == '0'\nassert solution('8\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '1'\nassert solution('8\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nE 17 4\\nW 10 0\\n') == '0'\nassert solution('8\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nW 10 0\\nW 10 0\\n') == '1'"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '4'\nassert solution('8') == '3'\nassert solution('5 6') == '2'\nassert solution('3 4') == '1'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n0 10\n0 5\n0 7\n0 4\n0 8\n0 2\n0 3\n0 6\n0 1\n0 4\n0 9\n''') == '3'\nassert solution('''\n3\n0 4\n0 2\n0 3\n''') == '2'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n5\n8\n5 6\n3 4\n5 13\n6 10\n\"\"\") == \"3\"\nassert solution(\n    \"\"\"\n2\n1\n1\n\"\"\") == \"1\"\nassert solution(\n    \"\"\"\n20\n10 11\n12 15\n\"\"\") == \"2\"\nassert solution(\n    \"\"\"\n100\n1 1\n1 2\n\"\"\") == \"1\"\nassert solution(\n    \"\"\"\n1000\n0 1\n0 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n1\n4\n5 5\n1 5\n\"\"\") == \"4\"\n\nassert solution(\n    \"\"\"\n1\n3\n1 5\n1 5\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 8') == '3'\nassert solution('5 6') == '1'\nassert solution('3 4') == '1'\nassert solution('5 13') == '2'\nassert solution('6 10') == '2'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"5\\n5 6\\n3 4\\n5 13\\n6 10\") == \"3\"\nassert solution(\"3\\n3 4\\n5 6\\n7 8\") == \"2\"\nassert solution(\"1\\n5 8\\n5 6\\n3 4\\n5 13\\n6 10\") == \"2\"\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n8\\n5 6') == '3'\nassert solution('5\\n8\\n5 6\\n3 4') == '3'\nassert solution('5\\n8\\n5 13') == '2'\nassert solution('5\\n8\\n5 13\\n3 4') == '1'"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n5 8') == '3'\nassert solution('5\\n5 6') == '2'\nassert solution('3\\n4') == '0'\nassert solution('4\\n3') == '1'\nassert solution('4\\n3\\n') == '1'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n8\\n5 6\\n3 4\\n5 13\\n6 10\\n') == '3'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n') == '3'\nassert solution('5 8\\n') == '4'\nassert solution('5 6\\n') == '5'\nassert solution('3 4\\n') == '3'\nassert solution('5 13\\n') == '5'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'ABC'\nassert solution('4 4') == 'ABC'\nassert solution('2 4') == 'AB'\nassert solution('3 3') == 'AB'\nassert solution('4 4') == 'AB'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n10 3 3\\n\") == \"ABAC\"\nassert solution(\"4 4\\n10 3 3\\n\") == \"ABBC\"\nassert solution(\"10 3\\n0 0\\n\") == \"impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\n10 3 3\") == \"CBA\"\nassert solution(\"3 3\\n10 3 3\") == \"ABCAB\"\nassert solution(\"2 2\\n1 1 2\") == \"ABAB\"\nassert solution(\"5 5\\n1 2 1 3 2 1\") == \"ABCDDA\"\nprint(solution(input()))\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n10 3 3\\n') == 'ABBCAB'\nassert solution('5 4\\n10 3 3\\n
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == 'impossible'\nassert solution('10 3 3') == 'ABCABCABC'\n\"\"\""
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n10 3 3\\n') == 'A A A\\nB B B\\nC C C\\n', solution\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Impossible\"\nassert solution(\"2\") == \"A B C\"\nassert solution(\"3\") == \"A B C\"\nassert solution(\"4\") == \"A B C\"\nassert solution(\"5\") == \"Impossible\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"BAAABBBAABB\"\n\"\"\""
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n3 3\\n1 1\\n1 1\\n\") == \"AAAB\\nAAAB\\nAAAB\\nAAAB\"\n\"\"\"\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n10 3 3\") == \"ABC\"\nassert solution(\"3 3\\n10 5 7\") == \"ABCBCAB\""
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\nA\nA\n''') == \"A A\"\nassert solution('''5\nBE\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == \"BE BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\nassert solution(\"11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\") == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION\\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\nBETWEEN\\nSUBTLE\\nSHADING\\nAND\\nTHE\\nABSENCE\\nOF\\nLIGHT\\nLIES\\nNUANCE\\nIQLUSION') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nprint('Tests passed')"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\nassert solution('''\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n11\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN'\nassert solution('''\n11\nBETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT\nLIES THE NUANCE OF IQLUSION\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n''')\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open('input.txt').read()) == 'BTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN'\nassert solution(open('sample_input.txt').read()) == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == \"BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION\"\n\"\"\"\nimport sys\nimport os\nsys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))\nfrom algorithms_datastructures.graphs.graph import Graph"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"3 1\") == \"3 1\"\nassert solution(\"10\") == \"\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''abra\nhelle\nh\ne\nlle''') == '12'\n\nassert solution('abra') == '0'\nassert solution('abrab') == '0'\nassert solution('abrbl') == '0'\nassert solution('abrblk') == '0'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('abbccccc') == '0'\nassert solution('cababc') == '4'\nassert solution('cababc') == '0'\nassert solution('cababc') == '4'\n'''\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''abrahellehhelleh''') == '12'\nassert solution('''abraabababababababab''') == '12'\nassert solution('''abraabababababababababababab''') == '12'\nassert solution('''abraabababababababababababababababab''') == '12'\n''')\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abrahellehhelleh') == '12'"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abrahellehhelleh') == '12'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('abra') == '3'\nassert solution('kita') == '7'\nassert solution('abraa') == '5'\nassert solution('abraaccadabra') == '5'\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '12'"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abrahellehhelleh\") == \"12\"\n"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('abracadabra') == '0'\nassert solution('aabr') == '4'\nassert solution('hello') == '6'\nassert solution('hieght') == '0'\n\"\"\""
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '12'\n\n\"\"\""
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''\n2\n1 1 2\n2 1 2\n''') == '40'\nassert solution('''\n1\n1\n''') == '50'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"70\""
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''\n5\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '20'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1') == '70'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n65\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"70\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('65\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"2\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"3\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"4\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"5\"\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1 1 1 1 1 1 1 1 1 1 1') == '40'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '40'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '40'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '40'\nassert solution('1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '40'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"10\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\") == \"7\"\nassert solution(\"5\\n2 3 1 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n0 1\\n0 4\") == \"6\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 5\") == \"10\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"7\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"8\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"0 4\") == \"7\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\nSample Output:\n10\n7\n8\n7\n''') == '7'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n') == '10\\n7\\n8\\n7\\n'\nassert solution('10 20\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n1 1\\n0 4\\n0 1\\n0 4\\n1 4\\n1 4\\n1 4\\n1 4\\n0 1\\n0 4\\n1 4\\n') == '10\\n4\\n6\\n'\nassert solution('10 20\\n1 2 3 4 5 6 7 8 9 10\\n0 1\\n0 4\\n1 4\\n1 1\\n0 4\\n0 1\\n0 4\\n1 4\\n1 4\\n1 4\\n1 4\\n0 1\\n0 4\\n1 4\\n') == '10\\n4\\n6\\n'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"10\\n7\\n8\\n7\\n\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"7\\n8\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"7\\n8\"\nassert solution(\"10 5\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9\\n0 1\\n0 4\\n1 4\\n0 1\\n0 4\\n\") == \"8\\n7\"\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4\n0 1\n0 4\n1 4''') == '10\\n8\\n7\\n7\\n7\\n8\\n7\\n7\\n7\\n7'\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\nSample Output:\n10\n7\n8\n7\n''') == '7'"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n\"\"\") == \"7\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 3\") == \"6\"\nassert solution(\"1 2 4\") == \"1\"\nassert solution(\"5 3 1\") == \"1\"\nassert solution(\"5 2 2\") == \"3\"\nassert solution(\"10 3 3\") == \"8\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n\") == \"6\"\nassert solution(\"1 3\\n1 2\\n2 1\\n2 1\\n\") == \"1\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 7') == '6'\nassert solution('-2 0') == '2'\nassert solution('0 -1') == '1'\nassert solution('-2 1') == '2'\nassert solution('1 0') == '2'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 4 7\n-2 0\n0 -1\n-2 1\n1 0\n2 1\n2 3\n3 -1\n''') == '6'\nprint(solution(input()))"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 7') == '6'"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 4, 7]) == '6'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2 4 7'\n    '1 1'\n    '2 1'\n    '3 2'\n    '4 1'\n    '4 2'\n    '3 3'\n    '5 1'\n    '5 2'\n    '4 1'\n    '6 2'\n    '6 2'\n) == '11'\n\nassert solution(\n    '2 4 7'\n    '0 0'\n    '0 1'\n    '0 2'\n    '0 3'\n    '1 0'\n    '1 1'\n    '2 2'\n    '2 3'\n    '2 4'\n    '3 0'\n    '3 1'\n    '3 2'\n    '4 2'\n    '4 3'\n) == '8'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\\n') == \"6\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4 7\") == \"6\"\nassert solution(\"2 4 7\") == \"7\"\nassert solution(\"3 4 5\") == \"5\"\nassert solution(\"3 4 5\") == \"4\"\nassert solution(\"1 2 3\") == \"3\"\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 7\\n-2 0\\n0 -1\\n-2 1\\n1 0\\n2 1\\n2 3\\n3 -1\") == \"6\"\nassert solution(\"2 5 7\\n-2 0\\n-1 -2\\n0 -1\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n2 3\\n3 -1\") == \"2\"\nassert solution(\"2 10 7\\n-2 0\\n-1 -2\\n0 -1\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n2 3\\n3 -1\") == \"2\"\nassert solution(\"2 8 7\\n-2 0\\n-1 -2\\n0 -1\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n2 3\\n3 -1\") == \"4\"\nassert solution(\"2 12 7\\n-2 0\\n-1 -2\\n0 -1\\n1 1\\n1 1\\n2 1\\n2 1\\n2 1\\n2 3\\n3 -1\") == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 4 50') == '3'\nassert solution('1 1 1 1') == '0'\nassert solution('2 1 4 50') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '1'\nassert solution('3 1 4 40') == '4'\nassert solution('2 2 4 40') == '2'\nassert solution('1 1 2 1') == '2'\nassert solution('1 1 2 1') == '2'\n\nimport math\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 4 40') == '3'\nassert solution('2 1 4 40') == '2'\nassert solution('3 1 4 40') == '4'\n\"\"\""
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 2 7 40') == '2'\nassert solution('1.2 1.4 2.5 4') == '1'\nassert solution('3 2 1 2 1') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 1 9 10') == '8'\nassert solution('2 8 4 5') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('4 1 0.1') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 3 3') == '3'\nassert solution('1 1 2 3') == '2'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 4') == '3'\nassert solution('1 1 1 1') == '1'\nassert solution('10 10 10 10') == '5'\nassert solution('10 10 10 10 10') == '1'\nassert solution('1 2 1 4') == '1'\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1.0000000 1.50000000 1.90000000\n\"\"\") == \"3\"\nassert solution(\"\"\"\n0.80000001 0.50000000 0.80000001\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1.0000000 1.50000000 2.0000000\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1.00000000 1.00000000 1.00000000\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4 40\") == \"3\"\nassert solution(\"2 1 3 20\") == \"2\"\nassert solution(\"2 4 1 4\") == \"2\"\nassert solution(\"2 0.1 0.2\") == \"1\""
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n3 7\n48 5 10\n1 4 6\n2 5 8\n3 6 7\n4 5 8\n5 6 7\n6 7 8\n7 8 9\n1 2\n1 3\n2 4\n''') == '9'\nassert solution('''\n5 3\n1 4 5\n2 5 3\n5 6 2\n3 6 1\n4 6 1\n6 7 5\n''') == '9'\nassert solution('''\n3 10\n1 2 3\n2 4 5\n3 6 7\n4 6 8\n5 6 9\n6 8 10\n7 8 11\n8 9 12\n9 10 13\n10 13 14\n''') == '14'\nassert solution('''\n3 10\n1 2 3\n2 4 5\n3 6 7\n4 6 8\n5 6 9\n6 8 10\n7 8 11\n8 9 12\n9 10 13\n10 13 14\n''') == '13'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99'\nassert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == ''"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 10 -1') == '0'\nassert solution('3 6 10 -1') == '10'\nassert solution('2 0 10 -1') == '0'\nassert solution('3 1 10 -1') == '1'\nassert solution('3 6 10 -1') == '10'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n2 5\n1 3\n1 1\n0 0\n0 1\n''') == '0'\nassert solution('''\n2\n0 2\n1 0\n1 1\n''') == '1'\nassert solution('''\n1\n0 0\n1 1\n''') == '1'\n\n'''"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 352') == '99'\nassert solution('92 76 436') == '0'\nassert solution('99 62 -1') == '0'\nassert solution('0 70 66 71 97') == '0'\nassert solution('76 0 87 66 74') == '6'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3 352\n    93 82 444\n    92 76 436\n    99 62 -1\n    0 70 66 71 97\n    76 0 87 66 74\n    62 90 0 60 94\n    60 68 68 0 69\n    83 78 83 73 0\n    ''') == '99'"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n4 4\n7 6 -1\n3 4 -1\n-1 0 -1\n0 1 4\n''') == '0'\nassert solution('''\n8 5\n10 12 -1\n7 4 6\n9 2 -1\n0 8 2\n8 7 -1\n10 2 3\n7 3 4\n4 1 0\n''') == '0'\nassert solution('''\n8 6\n10 11 -1\n9 2 -1\n7 5 6\n4 1 2\n3 3 0\n0 5 8\n2 8 9\n6 1 7\n5 0 10\n''') == '4'\nassert solution('''\n3 5\n-1 2 6\n9 -1 3\n6 4 3\n''') == '3'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0\\n') == '99'\nassert solution('1 1 1\\n0 0 0\\n0 0 1\\n') == '0'\nassert solution('1 1 1\\n0 0 0\\n0 1 2\\n') == '0'\nassert solution('1 2 2\\n0 0 0\\n0 1 2\\n') == '0'\nassert solution('1 2 2\\n0 0 0\\n0 1 2\\n') == '0'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 352\\n93 82 444\\n92 76 436\\n99 62 -1\\n0 70 66 71 97\\n76 0 87 66 74\\n62 90 0 60 94\\n60 68 68 0 69\\n83 78 83 73 0') == '99'\nassert solution('3 1\\n1 2\\n1 3') == ''"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n6 3\n10 40 20 75\n10 20 50 10\n10 70 100 15\n10 60 50 10\n10 40 20 50\n10 20 40 10\n10 20 50 50\n''') == '10'\nassert solution('''\n5 3\n100 100 10 50\n20 50 100 10\n100 100 20 50\n100 50 100 20\n100 20 100 10\n50 20 100 10\n10 50 100 20\n20 50 20 100\n''') == '10'\nassert solution('''\n8 4\n100 30 10 50\n10 30 20 50\n30 20 10 50\n20 10 10 50\n10 30 30 50\n30 20 10 50\n10 30 20 30\n20 10 30 50\n''') == '10'\nassert solution('''\n9 1\n10 20 30\n20 30 10\n30 20 10\n20 20 10\n30 20 20\n10 30 20\n10 20 30\n20 20 10\n10 30 20\n''') == '10'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 2\n2 3\n3 4\n\"\"\") == \"2 3 4\"\n\nassert solution(\"\"\"\n2\n1 2\n2 3\n3 4\n\"\"\") == \"1 3 2\"\n\nassert solution(\"\"\"\n3\n1 2\n2 3\n3 4\n\"\"\") == \"1 3 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2 4'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '''2 3\n4 5\n4 1\n'''\n\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n5 1\n''') == '''4 2\n4 1\n5 2\n'''\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n3 4\\n\") == \"4 2\\n3 4\\n1 2\"\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2 4'"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('5') == '1 2 4 3'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2\\n3 4\\n4 2'\nassert solution('5\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\\n') == '2\\n4 9\\n6 5'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4\\n1 2\\n2 3\\n3 4'\n) == '2 3\\n4 2'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2 3'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2 3'\nassert solution('1\\n2\\n3\\n4') == '2 3'\nassert solution('5\\n1 2 3 4\\n3 5 1\\n1 5 3 2') == '4 1'\nassert solution('4\\n1 2 3\\n1 3 2\\n2 1 3') == '3 4'\nassert solution('5\\n1 2 3 4\\n3 5 1\\n1 5 3 2') == '4 2'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 1\\n2 2\\n3 2\\n4 1\") == \"9.0000\"\nassert solution(\"100\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 2\\n7 2\\n8 2\\n9 2\\n10 1\\n11 2\\n12 2\\n13 2\\n14 1\\n15 1\\n16 2\\n17 2\\n18 2\\n19 2\\n20 1\\n21 2\\n22 2\\n23 2\\n24 2\\n25 1\\n26 2\\n27 2\\n28 2\\n29 2\\n30 1\\n31 2\\n32 2\\n33 2\\n34 2\\n35 1\\n36 2\\n37 2\\n38 2\\n39 2\\n40 1\\n41 2\\n42 2\\n43 2\\n44 2\\n45 2\\n46 1\\n47 2\\n48 2\\n49 2\\n50 1\\n51 2\\n52 2\\n53 2\\n54 2\\n55 1\\n56 2\\n57 2\\n58 2\\n59 2\\n60 1\\n61 2\\n62 2\\n63 2\\n64 2\\n65 2\\n66 2\\n67 2\\n68 2\\n69 2\\n70 2\\n71 2\\n72 2\\n73 2\\n74 2\\n75 2\\n76 2\\n77 2\\n78 2\\n79 2\\n80 2\\n81 2\\n82 2\\n83 2\\n84 2\\n85 2\\n86 2\\n87 2\\n88 2\\n89 2\\n90 2\\n91 2\\n92 2\\n93 2\\n94 2\\n95 1\\n96 2\\n97 2\\n98 2\\n99 2\\n100 2\\n\" == solution(\"100\\n1 1\\n2 2\\n3 2\\n4 1\\n5 1\\n6 2\\n7 2\\n8 2\\n9 2\\n10 1\\n11 2\\n12 2\\n13 2\\n14 1\\n15 1\\n16 2\\n17 2\\n18 2\\n19 2\\n20 1\\n21 2\\n22 2\\n23 2\\n24 2\\n25 1\\n26 2\\n27 2\\n28 2\\n29 2\\n30 1\\n31 2\\n32 2\\n33 2\\n34 2\\n35 1\\n36 2\\n37 2\\n38 2\\n39 2\\n40 1\\n41 2\\n42 2\\n43 2\\n44 2\\n45 2\\n46 1\\n47 2\\n48 2\\n49 2\\n50 1\\n51 2\\n52 2\\n53 2\\n54 2\\n55 1\\n56 2\\n57 2\\n58 2\\n59 2\\n60 1\\n61 2\\n62 2\\n63 2\\n64 2\\n65 2\\n66 2\\n67 2\\n68 2\\n69 2\\n70 2\\n71 2\\n72 2\\n73 2\\n74 2\\n75 2\\n76 2\\n77 2\\n78 2\\n79 2\\n80 2\\n81 2\\n82 2\\n83 2\\n84 2\\n85 2\\n86 2\\n87 2\\n88 2\\n89 2\\n90 2\\n91 2\\n92 2\\n93 2\\n94 2\\n95 1\\n96 2\\n97 2\\n98 2\\n99 2\\n100 2\\n\")\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 1\n2 2\n''') == '9.0000'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 1\n2 2\n3 2\n''') == '9.0'\nassert solution('''\n4\n1 1\n2 2\n3 2\n4 1\n''') == '12.0'\nprint(solution('''\n4\n1 1\n2 2\n3 2\n4 1\n'''))\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '9.00000'\nassert solution('2 2') == '12.00000'\nassert solution('3 2') == '12.00000'\nassert solution('4 1') == '9.0'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 1\\n2 2\\n3 2\\n4 1') == '9.0'\n\ninput_string = \"\"\"\n6\n1 3\n2 5\n4 5\n3 3\n3 2\n2 3\n5 2\n5 2\n\"\"\"\noutput = \"\"\"\n16.0000\n17.0000\n\"\"\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"9.0000\\n12.00000\\n12.00000\\n9.0\""
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 1\n2 2\n3 2\n4 1\n\"\"\") == \"9.00000\"\nassert solution(\"\"\"\n3 1\n3 2\n2 3\n\"\"\") == \"9.0\"\nassert solution(\"\"\"\n3 1\n2 1\n2 3\n\"\"\") == \"12.00000\"\nassert solution(\"\"\"\n4 1\n2 2\n3 2\n1 1\n\"\"\") == \"9.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"9.00000\"\nassert solution(\"1\") == \"9.0\"\nassert solution(\"100\") == \"9.0\"\nassert solution(\"10000\") == \"9.0\"\nassert solution(\"1000000\") == \"9.0\"\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '4\\n1 1\\n2 2\\n3 2\\n4 1\\n') == '9.0000\\n12\\n12.00000\\n9.0'"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 2\\n3 2\\n4 1\") == \"9.0000\\n12.00000\\n12.00000\\n9.0\\n\""
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"DI\"\nassert solution(\"2\") == \"DI\"\nassert solution(\"-1\") == \"DI\"\nassert solution(\"-2\") == \"DI\"\nassert solution(\"-42\") == \"DI\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"DI A\"\nassert solution(\"7\") == \"DI A\\nDI X\\nDI Y\\nPH A\\nPH X\\nAD\\nDI X\\nDI Y\\nDI Y\"\nassert solution(\"100\") == \"DI A\\nDI X\\nDI Y\\nDI Y\\nPH A\\nPH X\\nPH Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\nDI Y\\"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"ZE A\"\nassert solution(\"128\") == \"ZE A\"\n\"\"\""
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0''') == 'DI'\nassert solution('''0''') == 'DI'\nassert solution('''255''') == 'DI'\nassert solution('''256''') == 'DI'\nassert solution('''512''') == 'DI'\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'DI'\nassert solution('7') == 'DI Y'\nassert solution('4') == 'DI Y'\nassert solution('8') == 'DI Y'\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'DI Y'\n\n## Test input\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"ST A\\nST X\\nPH A\\nPH X\\nAD\\nPL Y\\nDI Y\\n\"\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'DI A\\n'\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'DI A\\nDI X\\nPL Y\\nPH A\\nPH X\\nAD\\nST A\\nDI A\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI X\\nDI"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('3 6 2') == '3'\nassert solution('7 6 7') == '3'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5 6\\n0000 FFFF 0000 0000 0000 0000\\nFFFF FFFF 0000 FFFF FFFF 0000\\n0000 0000 0000 FFFF 0000 0000\\n0000 FFFF FFFF FFFF FFFF 0000\\n0000 0000 0000 0000 0000 0000\") == \"2\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\nassert solution('''\n1 5 4\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '1'\n'''\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\nassert solution('''\n1 5 6\n0000 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '3'\nassert solution('''\n1 5 6\n0000 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '5'\nassert solution('''\n1 5 6\n0000 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '4'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\n''') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '2'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 5 6\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000''') == '2'\nassert solution('''1 3 9\n0112 3467\n2345 6789\n1234 5678\n9012 3456\n0001 2345\n1234 5678\n9012 3456\n0001 2345\n2345 6789\n0112 3467''') == '1'\nassert solution('''1 3 9\n0112 3467\n2345 6789\n1234 5678\n9012 3456\n0001 2345\n1234 5678\n9012 3456\n0001 2345\n2345 6789\n0112 3467''') == '1'\nassert solution('''6 9 5\n0000 FFFF 0000 0000 0000 0000\nFFFF FFFF 0000 FFFF FFFF 0000\n0000 0000 0000 FFFF 0000 0000\n0000 FFFF FFFF FFFF FFFF 0000\n0000 0000 0000 0000 0000 0000\nSample Output:\n0\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 6') == \"2\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \n\"\"\") == \"abaaba\"\n\nassert solution(\"\"\"\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nS -> \n\"\"\") == \"NONE\"\n\nassert solution(\"\"\"\nS -> a\nS -> b\nS -> \nS -> \nS -> \n\"\"\") == \"NONE\"\n\nassert solution(\"\"\"\nS -> a\nS -> b\nS -> \nS -> \nS -> \n\"\"\") == \"NONE\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'abaaba'\nassert solution('4\\nS -> aS\\nS -> bS\\nS -> a\\nS -> b\\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'NONE'\nassert solution('2\\nS -> a\\nS -> b\\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'ba'\nassert solution('1\\nS -> \\nwhere are the abaaba palindromes on this line\\none on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'a'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'abaaba' or solution() == 'abbbbbbbbbbbbbbbbba'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"\"\"abaaba\nNONE\nabbbbbbbbbbbbbbbbba\na\n\"\"\".strip()\nassert solution(\"\"\"\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"\"\"abaaba\nNONE\nabbbbbbbbbbbbbbbbba\na\n\"\"\".strip()\nassert solution(\"\"\"\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"\"\"abaaba\nNONE\nabbbbbbbbbbbbbbbbba\na\n\"\"\".strip()\nassert solution(\"\"\"\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"\"\"abaaba\nNONE\nabbbbbbbbbbbbbbbbba\na\n\"\"\".strip()\nassert solution(\"\"\"\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"\"\"abaaba\nNONE\nabbbbbbbbbbbbbbbbba\na\n\"\"\".strip()\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"abaaba\"\n\nassert solution(\"\"\"\nS -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nNONE\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n\"\"\") == \"NONE\""
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nS->aSa\\nS->bSb\\nS->a\\nS->b\\nS->\\n') == 'abaaba'\nassert solution('6\\nS->SaS\\nS->bSb\\nS->a\\nS->b\\nS->\\n') == 'a'\nassert solution('20\\nS->abSb\\nS->a\\nS->b\\nS->a\\nS->b\\nS->\\n') == 'a'"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\nassert solution('2\\nC \\hspace{0.1in}CCFG \\hspace{0.1in}C \\hspace{0.1in}CCFG \\hspace{0.1in}C \\hspace{0.1in}C \\hspace{0.1in}CCFG \\hspace{0.1in}C \\hspace{0.1in}CCFG \\hspace{0.1in}C \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}CCFG \\hspace{0.1in}"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'abaaba'\nassert solution('1') == 'NONE'\n\"\"\"\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'abaaba'\nassert solution('''S -> aSa\nS -> bSb\nS -> a\nS -> b\nS -> \nwhere are the abaaba palindromes on this line\nnone on this line\nhow about this aaaaaaabbbbbbbbbbbbbbba\neven a single a or b is a palindrome\n''') == 'NONE'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS ->\\nwhere are the abaaba palindromes on this line\\nNone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome') == 'abaaba'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\n\"\"\"\n\nimport sys\nfrom itertools import combinations\n\nn = int(sys.stdin.readline())\n\ndata = [[int(i) for i in sys.stdin.readline().split()] for j in range(n)]\n\ndata.sort(key=lambda x: x[0])\ndata.sort(key=lambda x: x[1])\n\nans = 0\nfor i, j in combinations(range(1, n), 2):\n    if data[i][0] + data[i][1] + data[j][0] + data[j][1] <= ans:\n        continue\n    ans = max(ans, data[i][0] + data[i][1] + data[j][0] + data[j][1])\n\nprint(ans)\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4'\nassert solution('''\n10\n7 9 3 2 4 4 2 4 4 2\n''') == '8'\nassert solution('''\n6\n3 9 1 6 2 7\n''') == '6'\nassert solution('''\n1\n3\n''') == '0'\n'''\n'''"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4 5 0 2\\n1 3 7\\n2 0\") == \"4\"\nprint('\"Run\" is now complete!')\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n') == '4'\nassert solution('1\\n1\\n1\\n1\\n') == '0'\nassert solution('1\\n0\\n0\\n0\\n') == '0'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"7\"\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 5 0 2\\n1 3 7\\n2 0\\n4\\n') == '4'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4', 'First'\nassert solution('''\n5\n4 5 0 2\n1 3 7\n2 0\n4\n''') == '4', 'Second'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n5 5 0 2\\n1 3 7\\n2 0') == '4'\nassert solution('5\\n4 5 0 2\\n1 3 7\\n2 0') == '4'\nassert solution('10\\n10 10 0 2\\n2 2 2\\n1 2 1\\n5 5 5\\n4 6 6\\n5 5 5\\n6 6 6') == '6'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string()) == \"0\"\n\n\"\"\""
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"GO FOR IT\"\nassert solution(\"4 4\") == \"NO WAY\"\nassert solution(\"3 3\") == \"SUCCESS\"\n\ninput = open(0).read().splitlines()\nA, F = int(input[0]), int(input[1])\nL = int(input[2])\nW = int(input[3])\nmaze = {line: line.replace(\"W\", \"B\").replace(\"S\", \"G\").replace(\"G\", \"S\") for line in input[4:]}"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWBWG') == 'NO WAY'\n\"\"\""
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"SUCCESS\", \"dummy\"\nassert solution(\"3 3\") == \"SUCCESS\", \"dummy\"\nassert solution(\"2 10\") == \"NO CHANCE\", \"dummy\"\nassert solution(\"2 1000\") == \"NO WAY\", \"dummy\"\n\n\"\"\""
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == 'GO FOR IT'\nassert solution('4 4') == 'GO FOR IT'\nassert solution('WWWW') == 'GO FOR IT'\nassert solution('WSBB') == 'GO FOR IT'\nassert solution('WWWW') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == \"GO FOR IT\"\nassert solution('1 10') == \"NO CHANCE\"\nassert solution('1 1') == \"NO WAY\"\n\n'''\n\nimport math\nimport itertools"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_value) == \"GO FOR IT\"\n\"\"\"\n\n__author__ = 'tigong'\n\nimport math\nfrom random import randint"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"GO FOR IT\"\nassert solution(\"2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"NO WAY\"\nassert solution(\"3 2\\n4 4\\nWWWW\\nWSBB\\nWWWW\") == \"SUCCESS\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\\n4 4\\nS W\\nW G\") == \"GO FOR IT\"\nassert solution(\"3 4\\n4 4\\nS W\\nW G\") == \"NO WAY\"\nassert solution(\"2 3\\n4 4\\nS W\\nW G\") == \"SUCCESS\"\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW') == 'GO FOR IT'\nassert solution('1 1\\n2 2\\nWWWW\\nWWWW') == 'NO WAY'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'GO FOR IT'\nassert solution('2 3\\n4 4\\nWWWW\\nWSBB\\nWWWW\\nWBWG') == 'NO WAY'\nassert solution('1 2\\n3 3\\nWWWW\\nWWWW\\nWWWW') == 'NO CHANCE'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2243'"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'\n\nassert solution('''4 10\n2 3 5\n3\n3\n3\n5\n''') == '5'\n\nassert solution('''5 200\n900 700 400 300 200\n''') == '900'\n\nassert solution('''3 8\n1 2 3\n1\n2\n1\n2\n3\n''') == '6'\n\nassert solution('''2 2\n1 2\n''') == '1'"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'\nassert solution('''20 1\n1 2\n''') == '3'\nassert solution('''5 2\n1 2 3 4 5\n''') == '7'\nassert solution('''5 2\n1 2 3 4 5\n''') == '4'\nassert solution('''5 2\n1 2 3 4 5\n''') == '0'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 900\") == \"2243\"\nassert solution(\"3 2\") == \"0\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 900\n800 700 400 300 200\n''') == '2243'\nassert solution('''\n3\n800 900\n400 800\n100 1000\n''') == '2383'\nprint('Congratulations, have you finished this kata? Go check it!')"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 900\n800 700 400 300 200''') == '2243'\nassert solution('''5 6\n600 400 600 400 600 400\n600 400 600 400 600 400''') == '2464'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n5 900\n800 700 400 300 200\n    \"\"\"\n) == \"2243\"\nassert solution(\n    \"\"\"\n1 8\n1\n    \"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'\n\nassert solution('''2\n1\n''') == '1'\n\nassert solution('''3\n0\n2\n''') == '3'\n\nassert solution('''3\n0\n0\n''') == '0'\n\nassert solution('''4\n0\n1\n2\n3\n''') == '4'"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 900\n800 700 400 300 200\n''') == '2243'\nassert solution('''5 1\n2\n''') == '2'\nassert solution('''4 2\n1 1\n''') == '1'\nassert solution('''10 10\n1 1 1 1 1 1\n''') == '1'\nassert solution('''13 13\n2 2 2 2 2 2\n''') == '1'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1000\n800 700 400 300 200\n''') == '2243'\nassert solution('''\n10 7\n800 700 400 300 200\n''') == '1923'\nassert solution('''\n10 10\n800 700 400 300 200\n''') == '1923'\nassert solution('''\n10 15\n800 700 400 300 200\n''') == '1923'\nassert solution('''\n10 25\n800 700 400 300 200\n''') == '1923'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4\n? 1 3\n= 1 8\n= 3 8\n? 1 3\n''') == 'yes\\nno'\nassert solution('''\n10 4\n? 1 4\n= 1 8\n= 4 8\n? 1 4\n''') == 'yes\\nno'\nassert solution('''\n10 10\n? 5 6\n= 5 6\n? 6 7\n= 6 7\n? 5 6\n''') == 'yes\\nno'\nassert solution('''\n10 10\n? 7 7\n= 7 7\n? 8 8\n= 8 8\n? 9 9\n= 9 9\n? 7 7\n''') == 'yes\\nno'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"yes\\nyes\\n\""
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == 'yes'\nassert solution('5 5') == 'yes'\nassert solution('2 4') == 'no'\nassert solution('2 5') == 'no'"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n= 1 2\n= 1 2\n= 3 1\n= 4 4\n? 3 3\nyes\n''') == 'no'\n\"\"\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n\") == \"yes\\n\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == 'no'\nassert solution('2 3') == 'yes'\nassert solution('2 4') == 'no'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n=\\n1 2\\n? 2\\n=\\n1\\n?\") == \"yes\"\nassert solution(\"3\\n1 2 3\\n? 1\\n=\\n1\\n? 2\\n=\\n1\\n?\") == \"no\"\nassert solution(\"5\\n1 2 3 4 5\\n? 3\\n=\\n1\\n? 2\\n=\\n1\\n? 3\\n=\\n1\\n? 4\\n=\\n1\\n? 5\\n=\\n1\\n?\") == \"yes\"\nassert solution(\"5\\n1 2 3 4 5\\n? 3\\n=\\n1\\n? 2\\n=\\n1\\n? 3\\n=\\n1\\n? 4\\n=\\n1\\n? 5\\n=\\n1\\n?\") == \"no\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 10') == 'yes'\nassert solution('4 3') == 'yes'\nassert solution('4 1 3') == 'no'\n\"\"\"\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 10\n? 1 3\n= 1 8\n= 3 8\n? 1 3\nSample Output:\nyes\nno\nyes\nno\n''') == 'no'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"yes\\nno\\nyes\\nno\\nyes\"\nassert solution(\"10 4\") == \"yes\\nno\\nyes\\nno\\nyes\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 2 3\n5 4\n7 8 9 10''') == '2'\nassert solution('''3\n1 2 3\n5 4\n7 8 9 10''') == '2'\nassert solution('''5\n1 2 3 4 5\n8 9 10''') == '4'\nassert solution('''5\n1 2 3 4 5\n8 9 10''') == '4'\nassert solution('''5\n1 2 3 4 5\n8 9 10''') == '4'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 2 3 4') == '2'\nassert solution('5 1 3 6 5') == '1'\nassert solution('5 5 1 2 3 6 5') == '0'"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '2'\nassert solution('8 5 4 2 1') == '2'\nassert solution('1000000 10 5 4 8 3') == '2'"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n10 5 4 8 3\n''') == '2'\n\nassert solution('''\n3 2\n10 5 4\n''') == '1'\n\nassert solution('''\n5 4\n1 2 3\n''') == '0'\n\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9\n''') == '0'\n\nassert solution('''\n1000000\n1 2\n''') == '999999'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"2\"\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n') == '1'\nassert solution('5\\n') == '2'\nassert solution('3\\n4 5 6 7 8') == '1'\nassert solution('5\\n4 5 7') == '1'\nassert solution('100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\n100000\\"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n10 5 4 8 3') == \"2\"\nassert solution('10 50\\n20 50 30\\n10 30 50') == \"1\"\nassert solution('50 50\\n50 50 50') == \"1\"\nassert solution('10 50\\n10 50 50 50 50 50 50') == \"2\"\nassert solution('1\\n1') == \"0\""
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '2'\nassert solution('1 3') == '0'\n\n---Input Sample---\n\nInput Format\nThe first line contains the number of test cases, T. For each test case, the first line contains the integers n and k. The next line contains n space-separated integers v, the sequence to be partitioned.\n\nConstraints\n1\u2264T\u2264100\n\n1\u2264n\u226410**5\n1\u2264k\u2264min(n,100)\n1\u2264v\u226410**6\n\nOutput Format\nFor each test case, output a single line containing the maximum possible score partitioning the sequence of integers from v into regions of k consecutive numbers.\n\nSample Output\nOutput Format\nSample Case #1\nOutput:\n4\nOutput:\n7\nExplanation\nThe first region contains the integers 1, 2, 3, 4, 5, 6, 7. The second region contains the integers 8, 9, 10, 11, 12, 13, 14. The third region contains the integers 15, 16, 17, 18, 19. The fourth region contains the integers 20, 21, 22, 23, 24, 25.\n\nSample Case #2\nOutput:\n1\nOutput:\n1\nExplanation\nThe sequence to be partitioned contains just the single integer 3.\n\"\"\""
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(open('test_input.txt')) == '3'\nassert solution(open('test_input_test.txt')) == '4'\n\"\"\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n10') == '7'\nassert solution('1 0') == '1'\nassert solution('2 0') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 127') == '1083', \"Wrong!\"\nassert solution('1 1000') == '1083', \"Wrong!\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 127') == '1083'\nprint('Congratulations! All test cases passed')\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1083'\nassert solution('1 127') == '1083'\nprint(solution())\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 127') == '1083'\nassert solution('1 7') == '12'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"1 127\") == \"1083\"\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '5'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1083'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4\\nHow much is 6 times 9? 42\\nIs there intelligent life on Earth? Probably\\nWhat is the air speed velocity of an unladen swallow? African?') == '2.0000000000'\n\"\"\"\n\nt, n = map(int, input().split())\nanswer = 0\nfor _ in range(n):\n    question, answer = input().split()\n    answers = []\n    for char in question:\n        if ord(char) > 96:\n            answers.append(chr(ord(char) - 32))\n        else:\n            answers.append(char)\n    print(''.join(answers))\n    print(answer)\n\nprint(answer)"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"2.0000000000\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('10 10') == '10.0'\n'''\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\nprint(solution('''2 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?'''))\n\"\"\"\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\nprint('Tests passed')\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably''') == '2.0000000000'\n\nassert solution('''1 3\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably''') == '2.0000000000'\n\nassert solution('''3 3\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably''') == '3.0000000000'\n\nassert solution('''10 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably''') == '1.2'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2.000000000'\n\nassert solution('5 5') == '3.0000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4\\nHello! How are you?') == '2.0000000000'\nassert solution('2 5\\nNo, I am fine.') == '2.0000000000'\nprint('All tests passed')\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('10 10') == '2.0000000000'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '2.0000000000'\nassert solution('4 3') == '2.0000000000'\nassert solution('10 20') == '1.0000000000'\nassert solution('1') == '1.0000000000'\nassert solution('1 0') == '1.0000000000'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\nmonkey 2\nlion 3\npenguin 1''') == \"POSSIBLE\"\nassert solution('''2 5\nmonkey 2\nlion 3\npenguin 1\nlion 5\nmonkey 4\nmonkey 3\npenguin 5''') == \"POSSIBLE\"\nassert solution('''2 10\nmonkey 2\nlion 3\npenguin 1\nlion 5\nmonkey 4\nmonkey 3\npenguin 5\nmonkey 6\npenguin 1''') == \"IMPOSSIBLE\"\nassert solution('''2 100\nmonkey 2\nlion 3\npenguin 1\nlion 5\nmonkey 4\nmonkey 3\npenguin 5\nmonkey 6\npenguin 1''') == \"IMPOSSIBLE\"\nassert solution('''1 2\nmonkey''') == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == 'IMPOSSIBLE'\nassert solution(\"4 3\") == 'POSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == 'POSSIBLE'\nassert solution('''2 3\nab\ncd\nef''') == 'IMPOSSIBLE'\nassert solution('''1 2\nab\ncd''') == 'FALSE ALARM'"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6\") == \"POSSIBLE\"\nassert solution(\"5 5\") == \"POSSIBLE\"\nassert solution(\"5 5\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 1\nlion 2 monkey\n''') == 'POSSIBLE'\nassert solution('''\n3 5\nlion 2 monkey 3 elephant\nelephant 1 elephant\nmonkey 4 elephant\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 3\nmonkey 1 monkey\nelephant 1 elephant\n''') == 'FALSE ALARM'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin\npenguin 1 monkey\n''') == 'POSSIBLE'\nassert solution('''\n2 1\ncat cat\n''') == 'POSSIBLE'\nassert solution('''\n3 1\ncat cat\n''') == 'IMPOSSIBLE'\nassert solution('''\n2 1\ncat 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n2 1\ncat 4\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"IMPOSSIBLE\"\nassert solution([3, 3, \"lion\", \"monkey\", \"penguin\", \"lion\", \"monkey\", \"penguin\", \"monkey\"]) == \"FALSE ALARM\"\n\"\"\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6\\nmonkey 2 lion penguin\\nlion 3 monkey penguin lion\\npenguin 1 monkey\") == \"POSSIBLE\"\nassert solution(\"3 1\\nA B\\nB A\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\\nA A\") == \"FALSE ALARM\"\n\"\"\"\nfrom typing import List\nimport sys\n\nsys.setrecursionlimit(10**7)\n\nn, m = map(int, input().split())\n\nenclosure: List[str] = []\nfor i in range(n):\n    enclosure.append(input())\n\nfor i in range(m):\n    animal: str = input()\n    animal_count = 0\n    for j in range(len(enclosure)):\n        if enclosure[j][0] == animal[0]:\n            animal_count += 1\n            if animal_count == int(animal[1:]):\n                for j in range(len(enclosure)):\n                    if enclosure[j][0] == animal[0]:\n                        enclosure[j] = enclosure[j][1:]\n    if animal_count!= int(animal[1:]):\n        print(\"IMPOSSIBLE\")\n        exit()\n\nprint(\"POSSIBLE\")\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey''') == \"POSSIBLE\"\nassert solution('''3 5\nmonkey 2 lion\nlion 3 monkey\nmonkey 4 lion''') == \"IMPOSSIBLE\"\nassert solution('''3 5\nlion 4 monkey\nmonkey 3 lion\nmonkey 1''') == \"FALSE ALARM\"\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 6\\n\"\n    \"monkey 2 lion penguin\\n\"\n    \"lion 3 monkey penguin lion\\n\"\n    \"penguin 1 monkey\\n\"\n    ) == \"IMPOSSIBLE\"\nassert solution(\n    \"1 2\\n\"\n    \"monkey\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    ) == \"POSSIBLE\"\nassert solution(\n    \"2 4\\n\"\n    \"monkey\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"1\\n\"\n    ) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"400\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"1000\") == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n\nassert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n\nassert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"100\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"1000000\") == \"triple correlation 1(4)4(6)6 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n''') == 'triple correlation 4(1)4(3)3 found'\nassert solution('''\n4\n4\n4\n4\n4\n''') == 'random sequence'\n\n'''\nTime: O(n)\nSpace: O(n)\n'''\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"triple correlation 1(1)1(1)1(1)1(1)1 found\"\nassert solution(\"100\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"1005\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"4\") == \"triple correlation 4(1)4(3)3 found\"\nassert solution(\"0\") == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''100\n4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\n4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2\n0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7\n2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8\n8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9\n''') == 'triple correlation 4(1)4(3)3 found'\n\nassert solution('''15\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"random sequence\"\nassert solution(\"4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4\") == \"triple correlation 4(1)4(3)3 found\"\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2') == 'triple correlation 4(1)4(3)3 found'\nassert solution('0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4(1)4(3)'\nassert solution('100') == '4(1)4(3)3 found'\nassert solution('23') == '4(1)4(3)3 found'\nassert solution('23 2') == '4(1)4(3)3 found'\nassert solution('23 2 4') == '4(1)4(3)3 found'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100\\n'\n                '4 7 9 5 9 3 5 0 0 1 7 8 5 0 2 6 3 5 4 4') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 1\\n\"\n    \"39\\n\"\n    \"10\\n\"\n) == \"40.5\"\n\nassert solution(\n    \"6 3\\n\"\n    \"40.5\\n\"\n    \"10\\n\"\n    \"34\\n\"\n    \"7.5\\n\"\n) == \"48.0\"\n\nassert solution(\n    \"1 1\\n\"\n    \"1000000\\n\"\n    \"10\\n\"\n) == \"1000000\"\n\nassert solution(\n    \"3 2\\n\"\n    \"4.5 4.5\\n\"\n    \"7.5\\n\"\n) == \"5.0\"\n\nassert solution(\n    \"7 3\\n\"\n    \"7.5\\n\"\n    \"5\\n\"\n) == \"7.5\""
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"1 2\") == \"1.5\"\nassert solution(\"10 10\") == \"10.0\"\nassert solution(\"2 4\") == \"2.25\"\nassert solution(\"5 3\") == \"4.0\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == '40.5'\nassert solution('4 1') == '44.5'\nassert solution('5 1') == '44.5'\n\nassert solution('6 3 0.7') == '43.9'\nassert solution('6 5 1.2') == '43.9'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n39\\n10\\n\") == \"40.5\"\nassert solution(\"1 2\\n7\\n5\\n\") == \"9.5\"\nassert solution(\"2 3\\n4 5\\n8 9\\n\") == \"10.0\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1\n39\n10\n40\n''') == '40.5', 'First'\n\nassert solution('''\n5 4\n1.2914\n2.2783\n5.1295\n3.9949\n4.9983\n''') == '4.6849', 'Second'\n\nassert solution('''\n4 5\n1.1777\n2.1633\n3.3854\n1.2669\n2.1579\n''') == '3.5558', 'Third'"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '40.5'\nassert abs(40.5 - solution()) < 10**-6"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\\n39\\n10\") == \"40.5\"\nassert solution(\"2 2\\n2.2\\n2.2\") == \"4.5\"\nassert solution(\"3 3\\n3.2\\n4.1\") == \"3.8\"\nassert solution(\"4 4\\n3.4\\n4.6\") == \"4.4\"\nassert solution(\"5 5\\n4.2\\n5.1\") == \"4.3\"\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n3\n7''') == '6.5'\nassert solution('''10 1\n100\n70''') == '99.5'\nassert solution('''3 3\n2\n4\n8''') == '10.5'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3''') == '3.0', solution.__doc__\nassert solution('''2\n2\n5\n6''') == '4.8', solution.__doc__\nassert solution('''3\n1\n5\n7''') == '6.0', solution.__doc__\nassert solution('''1\n3\n2\n1''') == '4.0', solution.__doc__\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n22 10\\n22 20') == '22'\nassert solution('3 3\\n20 19 22\\n20 27\\n27 17') == '21.3333333333333335'\nassert solution('2 2\\n1 2 1\\n2 3') == '3'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n''') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1987') == '1986'\nassert solution('2 3 1987') == '1988'\nassert solution('1 3 1987') == 'Impossible'\nassert solution('2 4 1987') == '1988'\nassert solution('1 4 1987') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 6') == 'Impossible'\nassert solution('4 3') == '1988'\nassert solution('3 4') == '1988'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n''') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '2008'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == '2008'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\nassert solution('4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 6') == \"Impossible\"\nassert solution('4 6') == \"2008\""
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 6\n1 2 1987\n2 3 1987\n1 3 1987\n2 4 1987\n1 4 1987\n3 4 1987\n''') == 'Impossible'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 6\\n1 2 1987\\n2 3 1987\\n1 3 1987\\n2 4 1987\\n1 4 1987\\n3 4 1987\") == \"2008\"\nassert solution(\"3 2\\n1 2 1987\\n1 3 1987\") == \"Impossible\"\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1987') == 'Impossible'\nassert solution('4 6') == '2008'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 3') == 'Impossible'\nassert solution('4 6') == '2008'\nassert solution('4 5 6') == 'Impossible'"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'\n\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == '3'\n\nassert solution('''\n7 0 2\nN 3 4\nC 5 5\nN 1 6\nC 6 4\nN 7 7\nC 5 5\nN 8 7\nC 8 4\nN 9 3\nC 1 1\n''') == 'impossible'\n\nassert solution('''\n10 0 1\nN 3 4\nC 5 5\nN 7 7\nC 8 4\nN 9 3\nC 1 1\nN 5 5\nC 6 6\nN 7 8\nC 9 3\nN 1 6\nC 4 1\nN 2 6\nC 7 7\nN 8 8\nC 8 3\nN 9 9\nC 3 1\nN 10 8\nC 4 7\nN 5 8\nC 9 6\nN 6 9\nC 10 4\nN 10 9\nC 10 7\nN 9 10\nC 1 8\nN 2 5\nC 7 3\nN 6 5\nC 8 9\nN 8 6\nC 2 5\nN 9 5\nC 1 6\nN 6 7\nC 4 8\nN 10 5\nC 8 4\nN 7 7\nC 9 3\nN 1 5\nC 2 6\nN 3 4\nC 8 6\nN 5 2\nC 9 9\nN 4 7\nC 6 8\nN 10 9\nC 1 6\nN 8 6\nC 4 3\nN 10 8\nC 1 9\nN 8 7\nC 9 7\nN 3 2\nC 9 8\nN 9 2\nC 7 9\nN 5 10\nC 1 4\nN 6 3\nC 8 3\nN 10 2\nC 7 2\nN 6 5\nC 9 6\nN 10 2\nC 6 7\nN 9 8\nC 5 9\nN 2 5\nC 4 9\nN 6 4\nC 7 3\nN 7 5\nC 2 8\nN 5 2\nC 8 4\nN 10 8\nC 1 4\nN 9 5\nC 3 3\nN 7 4\nC 4 9\nN 5 2\nC 7 6\nN 1 5\nC 3 7\nN 8 6\nC 7 3\nN 2 7\nC 5 9\nN 10 5\nC 5 8\nN 2 5\nC 4 3\nN 7 9\nC 2 6\nN 4 6\nC 6 9\nN 7 7\nC 8 7\nN 5 2\nC 1 3\nN 10 7\nC 6 6\nN 7 2\nC 2 6\nN 3 4\nC 4 3\nN 9 5\nC 8 9\nN 4 7\nC 2 4\nN 9 6\nC 7 8\nN 2 5\nC 9 8\nN 10 9\nC 1 5\nN 1 5\nC 1 6\nN 3 4\nC 1 4\nN 6 4\nC 7 8\nN 8 6\nC 2 3\nN 2 7\nC 8 6\nN 5 9\nC 6 6\nN 7 2\nC 5 9\nN 10 7\nC 2 4\nN 5 5\nC 3 6\nN 3 4\nC 8 9\nN 1 7\nC 3 9\nN 10 3\nC 9 8\nN 5 3\nC 8 3\nN 5 4\nC 7 7\nN 10 9\nC 7 8\nN 6 7\nC 1 7\nN 4 5\nC 7 7\nN 10 9\nC 1 9\nN 5 5\nC 2 6\nN 7 5\nC 2 7\nN 8 7\nC 4 6\nN 10 2\nC 7 8\nN 5 8\nC 1 2\nN 3 4\nC 1 8\nN 4 7\nC 7 8\nN 8 3\nC 6 5\nN 1 2\nC 1 6\nN 7 7\nC 1 7\nN 5 9\nC 3 2\nN 9 2\nC 5 9\nN 2 6\nC 1 5\nN 4 8\nC 8 9\nN 9 2\nC 3 3\nN 9 5\nC 3 5\nN 4 7\nC 7 2\nN 2 3\nC 8 6\nN 9 5\nC 2 7\nN 10 5\nC 1 3\nN 9 8\nC 5 8\nN 1 2\nC 1 6\nN 5 2\nC 5 5\nN 7 8\nC 8 7\nN 1 5\nC 9 6\nN 3 4\nC 1 3\nN 9 3\nC 4 8\nN 2 8\nC 3 2\nN 7 2\nC 5 9\nN 8 5\nC 4 7\nN 6 5\nC 6 6\nN 9 8\nC 1 2\nN 5 5\nC 1 9\nN 10 3\nC 1 9\nN 4 7\nC 7 7\nN 10 3\nC 1 8\nN 2 2\nC 1 7\nN 3 2\nC 7 7\nN 2 2\nC 1 6\nN 1 2\nC 1 6\nN 4 4\nC 6 4\nN 1 9\nC 1 3\nN 8 6\nC 8 3\nN 7 8\nC 9 5\nN 5 8\nC 7 9\nN 5 2\nC 1 3\nN 6 5\nC 4 8\nN 10 3\nC 1 7\nN 4 8\nC 9 5\nN 6 6\nC 1 3\nN 2 5\nC 7 7\nN 10 5\nC 2 6\nN 10 7\nC 6 7\nN 10 2\nC 1 5\nN 5 2\nC 2 8\nN 2 5\nC 4 8\nN 6 5\nC 6 6\nN 4 8\nC 2 6\nN 10 2\nC 1 9\nN 5 8\nC 5 5\nN 5 8\nC 1 5\nN 6 7\nC 1 4\nN 2 2\nC 4 5\nN 8 7\nC 1 3\nN"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 0 1\\nN 1 2\\nC 1 2\\nN 1 3\\nC 1 1\\n') == '3'\nassert solution('6 0 4\\nN 1 2\\nC 3 1\\nC 3 2\\nC 3 5\\nC 4 3\\nC 5 2\\nC 5 3\\nC 5 4\\nN 5 4\\nN 6 4\\nN 5 3\\nN 5 4\\nN 6 5\\nC 5 6\\nN 6 6\\nN 6 5\\nC 6 5\\nN 5 5\\nC 5 5\\nC 6 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\nC 5 5\\nC 5 6\\"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == '3'\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 2 3\nC 1 1\n''') == 'impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution('2 4 1 2 1 3 4') == 'impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"impossible\"\n\nSample Input 2:\n5 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\nN 2 1\nC 1 3\nSample Output:\n3"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 0 1') == 'impossible'\nassert solution('5 0 1') == '1'\nassert solution('4 0 2') == '2'\nassert solution('5 0 2') == 'impossible'\nassert solution('4 0 3') == '3'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 0 1') == 'impossible'\nassert solution('4 0 1') == '3'\nassert solution('3 0 2') == '2'\nassert solution('3 0 3') == 'impossible'\nassert solution('2 0 3') == 'impossible'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 0 1') == 'impossible'\nassert solution('4 0 1') == 'impossible'\nassert solution('4 0 1') == '3'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == \"impossible\"\n\nassert solution('''\n1 2\nC 1 2\n''') == \"1\"\n\nassert solution('''\n1 2\nN 1 2\n''') == \"impossible\"\n\nassert solution('''\n1 2\nC 1 2\n''') == \"impossible\"\n\nassert solution('''\n2 1\nC 1 2\n''') == \"impossible\""
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"10\"\n\n====="
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n()\n((()\n)()\n''') == 10\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n()\n((()\n)()\nSample Input:\n7\n()(()\n())((()\n()((()\nSample Output:\n6\n'''\n    )"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('()') == 0\nassert solution('(())') == 2\nassert solution('(()())') == 6\nassert solution('(((())))') == 12\nassert solution('(((())(((())))())()(((())))))') == 18\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '10'\nassert solution('10') == '10'\nassert solution('10') == '10'"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n(())\n''') == 0, 'one-level'\nassert solution('''\n3\n())\n((()\n)())\n''') == 5, 'three-level'\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n(((((((()((()((()\n'''\n) == 10\n\nassert solution('''\n()(\n()(((()\n'''\n) == 5\n\nassert solution('''\n(()()()()(\n'''\n) == 5\n\nassert solution('''\n)()(()()()()()\n'''\n) == 4\n\nassert solution('''\n(())(()\n'''\n) == 2"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('())') == 1\nassert solution('((()') == 2\nassert solution('))') == 1\nassert solution('((())') == 3\nassert solution(')(') == 0\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n(\n)\n)\n''') == 6\nassert solution('''\n(\n)\n(\n)\n''') == 2\nassert solution('''\n()\n(\n)\n(\n)\n''') == 8\nassert solution('''\n(\n)\n()\n''') == 4\nassert solution('''\n(\n)\n()\n)\n''') == 4\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n)\n((()\n)())\n''') == '10'\nassert solution('''\n(()\n()\n)\n''') == '2'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15') == '85293'"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"85293\"\nassert solution(\"\"\"3\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\nSample Output:\n0\"\"\") == \"0\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n377 a\\n455 h\\n180 a') == '85293'\nassert solution('3\\n377 a\\n455 h\\n180 a\\n211 a') == '85293'\nassert solution('3\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a') == '53907'\nassert solution('3\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h') == '53907'\nassert solution('3\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h') == '103091'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '85293'\n\"\"\""
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n377 a\n455 h\n180 a\n211 a\n134 a\n46 h\n111 h\n213 h\n17 a\n15\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n''') == '85293'\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"85293\"\nprint(solution(input))\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == \"85293\"\nassert solution('4') == \"85263\"\n\"\"\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"86134\"\nassert solution(\"\\n\".join([\"9\", \"377 a\", \"455 h\", \"180 a\", \"211 a\", \"134 a\", \"46 h\", \"111 h\", \"213 h\", \"17 a\", \"15\"])) == \"86134\"\nassert solution(\"\\n\".join([\"9\", \"377 a\", \"455 h\", \"180 a\", \"211 a\", \"134 a\", \"46 h\", \"111 h\", \"213 h\", \"17 a\", \"15\", \"1 2\"])) == \"86134\"\nassert solution(\"\\n\".join([\"9\", \"377 a\", \"455 h\", \"180 a\", \"211 a\", \"134 a\", \"46 h\", \"111 h\", \"213 h\", \"17 a\", \"15\", \"1 4\"])) == \"86134\"\nassert solution(\"\\n\".join([\"9\", \"377 a\", \"455 h\", \"180 a\", \"211 a\", \"134 a\", \"46 h\", \"111 h\", \"213 h\", \"17 a\", \"15\", \"1 6\"])) == \"86134\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n377 a\n455 h\n180 a\n\"\"\") == \"85293\"\nassert solution(\"\"\"\n8\n1 2\n1 4\n1 6\n2 3\n2 4\n2 5\n3 5\n4 6\n4 7\n4 9\n5 7\n5 8\n6 9\n7 9\n7 8\n\"\"\") == \"1294681510858\"\nassert solution(\"\"\"\n5\n1 2\n1 3\n1 5\n2 4\n2 5\n\"\"\") == \"2266972236004\"\nassert solution(\"\"\"\n5\n1 2\n1 4\n1 6\n2 3\n2 4\n\"\"\") == \"2194304708849\"\nassert solution(\"\"\"\n2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == '85293'\nassert solution('10') == '24682848140729027'\nassert solution('1000000') == '849060140198016708'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"4 5\") == \"5\"\nassert solution(\"10 10\") == \"10\"\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n\") == \"5\"\nassert solution(\"10\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n1 5\\n2 5\\n1 6\\n2 6\\n1 7\\n2 7\\n\") == \"15\""
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '0'\nassert solution('5 6\\n1 2\\n1 3\\n1 4\\n2 4\\n2 4\\n3 5') == '0'\n'''"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n1 2\n1 3\n2 3\n1 4\n2 4\nSample Input 2:\n10 9\n1 2\n1 3\n2 3\n1 4\n2 4\n5 4\n3 4\n1 5\n2 5\n3 5\n4 5\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\nSample Output 2:\n49\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"10 10\") == \"2\""
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '6'\nassert solution('5 7\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4 5\\n1 6\\n3 4') == '0'"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('1 4') == '3'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n''') == '5'\n''')\n---"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5\n1 2\n1 3\n2 3\n1 4\n2 4\n''') == '5'\nassert solution('''\n4 6\n1 2\n1 3\n2 3\n1 4\n2 4\n1 5\n2 5\n''') == '6'\nassert solution('''\n4 8\n1 2\n1 3\n2 3\n1 4\n2 4\n1 5\n2 5\n1 6\n2 6\n''') == '2'\nassert solution('''\n4 15\n1 2\n1 3\n2 3\n1 4\n2 4\n1 5\n2 5\n1 6\n2 6\n1 7\n2 7\n1 8\n2 8\n1 9\n2 9\n1 10\n2 10\n1 11\n2 11\n1 12\n2 12\n1 13\n2 13\n1 14\n2 14\n''') == '13'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\"\n\"\"\"\n--- Day 11: Allergen Assessment ---\nYou have been given an array of strings called ingredients. Each string represents an ingredient, and is guaranteed to be non-empty. Ingredients can have multiple different types. For example, 'lettuce' and 'tomato' are different ingredients, both containing the word 'lettuce'.\n\nYour goal is to determine whether the combination of ingredients will produce the exact same list of ingredients as some other collection given the same constraints.\n\nIn this collection, each ingredient must appear at least once, and there can be ingredients with different types. All ingredients can be in any order.\n\nYour friend is also given an array of strings called allergens. Each string represents an ingredient. Allergens can also contain multiple ingredients. Allergens are also guaranteed to be non-empty. For example, 'lettuce' and 'tomato' are allergens, while 'cucumber' is not.\n\nEach ingredient appears at most once in both collections, and there can be ingredients with different types in either collection. The ingredients can appear in the same order in any collection.\n\nFor this problem, you will need to determine whether the ingredients given can produce ingredients in the collection that your friend has given. For this collection, it is guaranteed that no allergens can have multiple ingredients. In the example above, the ingredients in the collection are ['lettuce', 'tomato', 'cucumber'] and the collection of allergens is ['tomato', 'lettuce', 'cucumber'].\n\nHere is an example:\n\n[\"mxmxvkd kfcds sqjhc nhms (contains dairy, fish)\", \"trh fvjkl sbzzf mxmxvkd (contains dairy)\", \"sqjhc fvjkl (contains soy)\", \"sqjhc mxmxvkd sbzzf (contains fish)\", \"fvjkl trh mxmxvkd (contains fish)\"]\n[\"kfcds sqjhc nhms (contains dairy)\", \"sqjhc fvjkl (contains soy)\", \"fvjkl mxmxvkd (contains fish)\"]\nIn this example, the ingredients in the first collection are subset of those in the second. However, there are ingredients in the second collection that are not found in the first:'soy' and 'fvjkl'.\n\nIt is possible to combine both collections to produce the same ingredients, but this would not be considered a solution. The ingredients in the first collection must contain all the allergens in the second, but there can be ingredients in the first collection that aren't in the second.\n\nWrite a function that, given two strings containing ingredients and allergens, determines whether the ingredients in the first collection can produce the ingredients in the second collection. The function should return true if so, and false otherwise.\n\nIngredients are given as a string array ingredients, all strings are non-empty, and contain only lowercase letters. Allergens are given as a string array allergens, all strings are non-empty, and they don't contain duplicates.\n\nIt is guaranteed that there will be no duplicates in both arrays and that all ingredients will be found in either collection.\n\nFor example, if\n\ningredients is [\"mxmxvkd kfcds sqjhc nhms (contains dairy, fish)\", \"trh fvjkl sbzzf mxmxvkd (contains dairy)\", \"sqjhc fvjkl (contains soy)\", \"sqjhc"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n7 mouse 1 electromouse 5 rat') == '5100'\nassert solution('3\\n2 butterfly 3 eagle 4 horse 4 snail 5 hawk 6 bunny 5 ostrich 7 owl 8 cow 9 dolphin 10 hippopotamus 11 cow 12 chicken 13 snail 14 horse 15 chicken 16 goat 17 hippopotamus 18 rabbit 19 snail 20 dog 21 goat 22 rabbit 23 sheep 24 goat 25 horse 26 rabbit 27 goat 28 rabbit 29 goat 30 horse 31 sheep 32 goat 33 horse 34 rabbit 35 sheep 36 goat 37 horse 38 rabbit 39 sheep 40 goat 41 horse 42 sheep 43 goat 44 horse 45 rabbit 46 sheep 47 goat 48 horse 49 sheep 50 goat 51 horse 52 sheep 53 goat 54 horse 55 sheep 56 goat 57 horse 58 sheep 59 goat 60 horse 61 sheep 62 goat 63 horse 64 sheep 65 goat 66 horse 67 sheep 68 goat 69 horse 70 sheep 71 goat 72 horse 73 sheep 74 goat 75 horse 76 sheep 77 goat 78 horse 79 sheep 80 goat 81 horse 82 sheep 83 goat 84 horse 85 sheep 86 goat 87 horse 88 sheep 89 goat 90 horse 91 sheep 92 goat 93 horse 94 sheep 95 goat 96 horse 97 sheep 98 goat 99 horse 100 sheep 101 goat 102 horse 103 sheep 104 goat 105 horse 106 sheep 107 goat 108 horse 109 sheep 110 goat 111 horse 112 sheep 113 goat 114 horse 115 sheep 116 goat 117 horse 118 sheep 119 goat 120 horse 121 sheep 122 goat 123 horse 124 sheep 125 goat 126 horse 127 sheep 128 goat 129 horse 130 sheep 131 goat 132 horse 133 sheep 134 goat 135 horse 136 sheep 137 goat 138 horse 139 sheep 140 goat 141 horse 142 sheep 143 goat 144 horse 145 sheep 146 goat 147 horse 148 sheep 149 goat 150 horse 151 sheep 152 goat 153 horse 154 sheep 155 goat 156 horse 157 sheep 158 goat 159 horse 160 sheep 161 goat 162 horse 163 sheep 164 goat 165 horse 166 sheep 167 goat 168 horse 169 sheep 170 goat 171 horse 172 sheep 173 goat 174 horse 175 sheep 176 goat 177 horse 178 sheep 179 goat 180 horse 181 sheep 182 goat 183 horse 184 sheep 185 goat 186 horse 187 sheep 188 goat 189 horse 190 sheep 191 goat 192 horse 193 sheep 194 goat 195 horse 196 sheep 197 goat 198 horse 199 sheep 200 goat 201 horse 202 horse 203 sheep 204 goat 205 horse 206 sheep 207 goat 208 horse 209 sheep 210 goat 211 horse 212 sheep 213 goat 214 horse 215 sheep 216 goat 217 horse 218 sheep 220 goat 221 horse 222 sheep 223 goat 224 horse 225 sheep 226 goat 227 horse 228 sheep 229 goat 230 horse 231 sheep 232 goat 233 horse 234 sheep 235 goat 236 horse 237 sheep 238 goat 239 horse 240 sheep 241 goat 242 horse 243 sheep 244 goat 245 horse 246 sheep 247 goat 248 horse 249 sheep 250 goat 251 horse 252 sheep 253 goat 254 horse 255 sheep 256 goat 257 horse 258 sheep 259 goat 260 horse 261 sheep 262 goat 263 horse 264 sheep 265 goat 266 horse 267 sheep 268 goat 269 horse 270 sheep 271 goat 272 horse 273 sheep 274 goat 275 horse 276 sheep 277 goat 278 horse 279 sheep 280 goat 281 horse 282 sheep 283 goat 284 horse 285 sheep 286 goat 287 horse 288 sheep 289 goat 290 horse 291 sheep 292 goat 293 horse 294 sheep 295 goat 296 horse 297 sheep 298 goat 297 horse 298 sheep 299 goat 300 horse 301 sheep 302 goat 303 horse 304 sheep 305 goat 306 horse 307 sheep 308 goat 309 horse 310 sheep 311 goat 312 horse 313 sheep 314 goat 315 horse 316 sheep 317 goat 318 horse 319 sheep 320 goat 321 horse 322 sheep 323 goat 324 horse 325 sheep 326 goat 327 horse 328 sheep 329 goat 330 horse 331 sheep 332 goat 333 horse 334 sheep 335 goat 336 horse 337 sheep 338 goat 338 horse 339 sheep 340 goat 341 horse 342 sheep 343 goat 344 horse 345 sheep 346 goat 347 horse 348 sheep 349 goat 350 horse 351 sheep 352 goat 353 horse 354 sheep 355 goat 356 horse 357 sheep 358 goat 359 horse 360 sheep 361 goat 362 horse 363 sheep 364 goat 365 horse 366 sheep 367 goat 367 horse 368 sheep 369 goat 370 horse 371 sheep 372 goat 373 horse 374 sheep 375 goat 376 horse 377 sheep 378 goat 379 horse 380 sheep 381 goat 382 horse 383 sheep 384 goat 385 horse 386 sheep 387 goat 388 horse 389 sheep 390 goat 391 horse 392"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"5100\"\nassert solution(\"\"\"\n2\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n4\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n\"\"\") == \"6300\"\nassert solution(\"\"\"\n3\n4 dove 4 electric sheep 7 elephant\n3 caterpillar 4 duck 3 ocelot 4 rabbit\n2 mouse 2 aaabaaajss 2 pupa 2 butterfly\n3 elephant 3 horse 4 fox 4 eagle 4 spider 4 rat 4 zebra 4 crab 4 dog 4 pig 4 cat 4 lion 4 tiger 4 wolf 4 bat 4 whale 4 centipede 4 chameleon 4 elephant 2 tiger 3 elephant 2 rabbit 2 chicken 1 duck 1 chicken 1 rabbit 1 elephant 1 zebra 1 butterfly 1 chicken 1 elephant 1 rat 1 fox 1 dog 1 elephant 1 chicken 1 zebra 1 fox 1 elephant 1 rat 1 chicken 1 dog 1 rabbit 1 elephant 1 chicken 1 elephant 1 rat 1 rabbit 1 chicken 1 dog 1 rat 1 fox 1 dog 1 elephant 1 rat 1 fox 1 dog 1 elephant 1 chicken 1 dog 1 chicken 1 elephant 1 rat 1 fox 1 rabbit 1 chicken 1 rabbit 1 elephant 1 fox 1 rabbit 1 fox 1 dog 1 elephant 1 chicken 1 rabbit 1 chicken 1 dog 1 rabbit 1 chicken 1 rabbit 1 dog 1 elephant 1 wolf 1 rabbit 1 fox 1 rabbit 1 goat 1 rabbit 1 chicken 1 elephant 1 goat 1 rabbit 1 dog 1 elephant 1 fox 1 elephant 1 dog 1 elephant 1 cat 1 elephant 1 chicken 1 elephant 1 rabbit 1 fox 1 rabbit 1 rabbit 1 chicken 1 rabbit 1 fox 1 rabbit 1 dog 1 fox 1 dog 1 fox 1 rabbit 1 elephant 1 rabbit 1 fox 1 rabbit 1 dog 1 wolf 1 fox 1 dog 1 wolf 1 rabbit 1 rabbit 1 wolf 1 wolf 1 rabbit 1 fox 1 fox 1 rabbit 1 fox 1 dog 1 fox 1 rabbit 1 rabbit 1 dog 1 rabbit 1 wolf 1 wolf 1 rabbit 1 chicken 1 wolf 1 rabbit 1 rabbit 1 elephant 1 dog 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 wolf 1 wolf 1 rabbit 1 dog 1 fox 1 rabbit 1 fox 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 dog 1 elephant 1 wolf 1 rabbit 1 fox 1 rabbit 1 rabbit 1 rabbit 1 fox 1 rabbit 1 fox 1 rabbit 1 rabbit 1 goat 1 rabbit 1 rabbit 1 dog 1 fox 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 dog 1 dog 1 fox 1 rabbit 1 fox 1 dog 1 fox 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 rabbit 1 dog 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 dog 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 fox 1 rabbit 1 dog 1 rabbit 1 fox 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 rabbit 1 dog 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 wolf 1 rabbit 1 fox 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 fox 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 rabbit 1 dog 1 rabbit 1 dog 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 dog 1 rabbit 1 dog 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1 rabbit 1"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n7 mouse 1 electromouse 5 rat') == '5100'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly\\n3 dove 3 pigeon 7 aaabaaajss\\n7 mouse 1 electromouse 5 rat\\n7\\n0 electromouse\\n500 electromouse\\n1000 electromouse\\n1500 rat\\n2000 aaabaaajss\\n2500 pigeon') == '5100'\nassert solution('2\\n2 cat 4 pet 3 aaa\\n2 mouse 3 aaab\\n1 cat 1 aaab\\n1 mouse 4 aaab\\n1 cat 2 pet 4\\n1 cat 2 aaab\\n1 cat 2 aaab\\n1 mouse 4 aaab\\n1 mouse 4 pet 2\\n1 mouse 2 aaab\\n1 mouse 2 aaab\\n1 mouse 2 aaab\\n1 cat 3 pet 2\\n1 cat 3 aaab\\n1 cat 3 aaab\\n1 mouse 3 pet 2\\n1 mouse 3 aaab\\n1 mouse 3 aaab\\n1 cat 2 pet 4\\n1 cat 2 aaab\\n1 cat 2 aaab\\n1 mouse 2 aaab\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 cat 4 pet 3\\n1 cat 4 aaab\\n1 cat 4 aaab\\n1 mouse 3 pet 2\\n1 mouse 3 aaab\\n1 mouse 3 aaab\\n1 cat 2 pet 4\\n1 cat 2 aaab\\n1 cat 2 aaab\\n1 mouse 2 aaab\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 cat 3 pet 2\\n1 cat 3 aaab\\n1 cat 3 aaab\\n1 mouse 3 pet 2\\n1 mouse 3 aaab\\n1 mouse 3 aaab\\n1 cat 2 pet 4\\n1 cat 2 aaab\\n1 cat 2 aaab\\n1 mouse 2 aaab\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 cat 4 pet 3\\n1 cat 4 aaab\\n1 cat 4 aaab\\n1 mouse 3 pet 2\\n1 mouse 3 aaab\\n1 mouse 3 aaab\\n1 cat 2 pet 4\\n1 cat 2 aaab\\n1 cat 2 aaab\\n1 mouse 2 aaab\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 cat 3 pet 2\\n1 cat 3 aaab\\n1 cat 3 aaab\\n1 mouse 3 pet 2\\n1 mouse 3 aaab\\n1 mouse 3 aaab\\n1 cat 2 pet 4\\n1 cat 2 aaab\\n1 cat 2 aaab\\n1 mouse 2 aaab\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 cat 4 pet 3\\n1 cat 4 aaab\\n1 cat 4 aaab\\n1 mouse 3 pet 2\\n1 mouse 3 aaab\\n1 mouse 3 aaab\\n1 cat 2 pet 4\\n1 cat 2 aaab\\n1 cat 2 aaab\\n1 mouse 2 aaab\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 mouse 2 pet 4\\n1 cat 3 pet 2\\n1 cat 3 aaab\\n1 cat 3 aaab\\n1 mouse 3 pet 2\\n1 mouse 3 aaab\\n1 mouse 3 aaab\\n1 cat 2 pet 4\\n1 cat 2 aaab\\n1 cat 2 aaab\\n1 mouse 2 aaab\\n1 mouse 2 pet 4\\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 caterpillar 3 pupa 7 butterfly') == '500'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"100\"\nassert solution(\"4\") == \"1000\"\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n\nassert solution('''\n5\ncaterpillar 7\ndove 3\npupa 5\nbutterfly 1\nmouse 1\nelectromouse 5\nrat 4\naaabaaajss 4\npigeon 5\nbutterfly 7\nmouse 7\nelectromouse 3\nrat 7\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\npigeon 9\nbutterfly 9\nmouse 9\nelectromouse 9\nrat 9\naaabaaajss 9\np"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n\n'''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n'''"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1000', 'Error: Your solution does not seem to be correct'"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\n    \"4\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\n    \"5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\nassert solution(\n    \"10\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n\") == \"6\\n1\\n2\\n3\\n1\\n4\\n5\"\n\n\"\"\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n'.join(['5', '0', '1 1', '1 1', '2 2 3', '1 4', '8', '1', '2', '3', '1', '4', '2', '3', '5', '3', '2', '4', '2', '4'])) == '6 1 2 3 1 4 5'\nassert solution('\\n'.join(['5', '0', '1 1', '1 1', '2 2 3', '1 4', '8', '1', '2', '3', '1', '4', '2', '3', '5', '3', '2', '4', '2', '4'])) == '-1'\nassert solution('\\n'.join(['5', '0', '1 1', '1 1', '2 2 3', '1 4', '8', '1', '2', '3', '1', '4', '2', '3', '5', '3', '2', '4', '2', '4'])) == '6 2 3 1 4 5'"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n0\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n10\n1\n1 1\n1 1\n2 2 3\n1 4\n8\n1\n2\n3\n1\n4\n2\n3\n5\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('10\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '10\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('7\\n0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n') == '-1'\nprint('all tests passed')\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n    5\n    0\n    1 1\n    1 1\n    2 2 3\n    1 4\n    8\n    1\n    2\n    3\n    1\n    4\n    2\n    3\n    5\n    \"\"\"\n    ) == \"6\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '10'\nassert solution('5 1') == '11'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'\nassert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n1 2 R 5\\n') == '20'\nassert solution('5\\n1 1 1 2 1\\n') == '1'\nprint('\"Run\" is now complete!')\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4') == '10'\nassert solution('2 3\\n1 1 O 3\\n2 2 O 3\\n1 2 R 5') == '15'\nassert solution('3 3\\n1 2 O 3\\n2 2 R 5\\n1 2 O 3') == '6'\nassert solution('2 3\\n1 2 R 3\\n2 2 O 3\\n1 2 R 5') == '16'\nassert solution('2 3\\n1 2 R 5\\n2 2 O 3\\n1 2 R 3') == '11'"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1 2 3\n1 2 1 3\n1 2 2 3\n1 2 3 2\n''') == '6'\nassert solution('''\n4\n1 2 O 3\n1 2 R 5\n1 2 R 6\n1 2 O 3\n2 1 O 3\n2 1 R 5\n''') == '4'\nassert solution('''\n4\n1 2 O 3\n1 2 R 5\n1 2 R 6\n1 2 O 3\n2 1 O 3\n2 1 R 5\n''') == '4'\nassert solution('''\n10\n1 2 R 5\n1 2 R 6\n1 2 O 3\n1 2 O 3\n2 1 O 3\n2 1 R 5\n''') == '6'"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4') == '10'\nassert solution('1000000000 2\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\n1 2 R 6\\n1 2 O 3\\n2 1 R 5\\"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"10\"\nassert solution(input_data=\"\"\"\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n2 1 R 6\n\"\"\") == \"12\"\nassert solution(input_data=\"\"\"\n3\n1 2 R 6\n1 2 O 3\n2 1 O 3\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5') == '10'\nassert solution('3 3') == '5'\nassert solution('4 4') == '6'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5\\n1 2 1 2 1\\n4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '10'\nassert solution('4\\n1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '20'\nassert solution('1 2 O 3\\n2 1 O 3\\n1 2 R 5\\n') == '5'\n\nstdin = \"\"\"4\n1 2 1 2\n4\n1 2 O 3\n2 1 O 3\n1 2 R 5\"\"\"\n\nprint(solution(stdin))"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\nassert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '20'\nassert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '8'\nassert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '10'\nassert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 R 6\n1 2 O 3\n2 1 O 3\n1 2 R 5\n''') == '12'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n0 1\n1 2\n2 3\n''') == '1'"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\n1 2\\n2 3') == '1'\n\"\"\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution('1 3\\n1 2\\n2 3') == '3'\n\nIf your solution is timing sensitive, try writing a file for which the execution time is less than 1 second. For example, instead of returning \"n-1\" every time, try writing a function that takes the time to run as an input and returns \"n-1\" or \"n\" or \"n+1\"."
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nSample Input 2:\n7 8\n0 1\n0 2\n0 3\n1 4\n1 5\n1 6\n2 7\n2 8\n3 9\nSample Output:\n0\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n0 1\\n1 2\\n2 3') == '1'\nassert solution('10 3\\n0 1\\n0 2\\n0 3\\n1 4\\n2 5\\n3 6\\n4 7\\n5 8\\n6 9\\n7 10\\n8 11\\n9 12\\n10 13\\n11 14\\n12 15\\n13 16\\n14 17\\n15 18\\n16 19\\n17 20\\n18 21\\n19 22\\n20 23\\n21 24\\n22 25\\n23 26\\n24 27\\n25 28\\n26 29\\n27 30\\n28 31\\n29 32\\n') == '2'\n\"\"\"\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '2'\nassert solution('3 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n0 1\n1 2\n2 3\n''') == '1'\nassert solution('''\n4 4\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3\n''') == '3'\n\n\"\"\"\nfrom typing import List\nfrom collections import defaultdict\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, m = map(int, stdin.split())\n        in_degrees = defaultdict(int)\n        graph = defaultdict(list)\n        \n        for _ in range(m):\n            u, v = map(int, stdin.split())\n            in_degrees[u] += 1\n            in_degrees[v] += 1\n            graph[u].append(v)\n            graph[v].append(u)\n        \n        sorted_nodes = []\n        sorted_nodes.append(0)\n        visited = set()\n        \n        while len(sorted_nodes) < n:\n            node = sorted_nodes.pop(0)\n            visited.add(node)\n            for neighbor in graph[node]:\n                in_degrees[neighbor] -= 1\n                if in_degrees[neighbor] == 0:\n                    sorted_nodes.append(neighbor)\n        \n        return len(visited)\n\nprint(Solution().solution('''\n4 4\n0 1\n0 2\n0 3\n1 2\n1 3\n2 3\n'''))"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1\\n1 2\\n2 3\\n') == '1'\nassert solution('3 1\\n1 2\\n1 3\\n') == '2'\nassert solution('3 2\\n0 1\\n1 2\\n2 3\\n') == '2'\nassert solution('4 5\\n0 0\\n1 1\\n1 2\\n1 3\\n1 4\\n2 4\\n3 4\\n') == '3'\nassert solution('7 6\\n0 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n2 6\\n') == '5'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n1 2') == '1'\nassert solution('2 3\\n2 3') == '2'\nassert solution('4 3\\n1 2\\n2 3\\n4 5\\n3 6\\n6 4') == '4'\nprint('All test cases passed.')\n\"\"\""
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n1 3\n''') == '1'\n\"\"\"\n\n\"\"\"\nclass Graph:\n    def __init__(self, n, m, g):\n        self.numNodes = n\n        self.numEdges = m\n        self.graph = g\n\n    def hasCycle(self):\n        visited = [False for i in range(self.numNodes)]\n\n        for i in range(self.numNodes):\n            if visited[i] == False:\n                if self.dfs(i, visited):\n                    return True\n        return False\n\n    def dfs(self, vertex, visited):\n        visited[vertex] = True\n\n        for i in range(self.numEdges):\n            if self.graph[vertex][i] and visited[i] == False:\n                if self.dfs(i, visited):\n                    return True\n            elif not self.graph[vertex][i] and visited[i] == True:\n                return True\n        return False"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.962962962963'\nassert solution('4') == '0.9644736842105'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '0.962962962963'\nassert solution('15') == '0.935185185185'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '0.962962962963'\nassert solution('3') == '0.9761904761905'\n\"\"\"\n\nimport math\nimport sys\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.5'\nassert solution('2') == '0.5'\nassert solution('3') == '0.5'\nassert solution('4') == '0.5'"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0.962962962963'\nassert solution('10') == '0.9999999999999'\nassert solution('100') == '1.0'\nassert solution('1000') == '1.0'\nassert solution('10000') == '1.0'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0.962962962963'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0.962962962963'\nassert solution('20') == '0.966164335613'\nassert solution('3') == '0.945282453967'\nassert solution('4') == '0.944844025791'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"0.962962962963\""
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0.962962962963'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '0.962962962963'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('1') == '0\\n'\nassert solution('2') == '0 40000000\\n40000000 0\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000\\n'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '0 0\\n' + '40000000 0\\n' + '0 40000000'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n\"\n    \"0 0\\n\"\n    \"40000000 0\\n\"\n    \"0 40000000\\n\"\n    \"40000000 40000000\\n\"\n    ) == \"0 0\\n0 40000000\\n40000000 40000000\\n\"\nassert solution(\n    \"2\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    ) == \"0 0\\n\"\nassert solution(\n    \"1\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    ) == \"0 0\\n\"\nassert solution(\n    \"50\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    ) == \"0 0\\n0 40000000\\n40000000 40000000\\n\"\n\n------Hints------\n\nDivide and Conquer\nBacktracking\nGenerate all possible sets of points\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000'\nprint(solution(input()))\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0 0\\n40000000 0'\n\"\"\"\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('6') == '0 0\\n10000000 4\\n40000000 4\\n40000000 1\\n10000000 0\\n0 10000000'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n40000000 0\n40000000 40000000\n0 40000000''') == '0 0\\n40000000 0\\n0 40000000\\n'''\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0 0'\nassert solution('2') == '40000000 0'\nassert solution('3') == '0 40000000'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0 0\\n40000000 0\\n0 40000000\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\n\nassert solution(\"2 2 2 2\") == \"2\"\n\nassert solution(\"2 2 3 4\") == \"impossible\"\n\nassert solution(\"2 4 5 7\") == \"impossible\"\n\nassert solution(\"2 4 5 7\") == \"impossible\""
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 9 5 2') == '2'\nassert solution('4 5 7 2') == 'impossible'\nassert solution('2 2 2 2') == 'impossible'\nassert solution('6 7 7 2') == '2'\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 5 5 2\n''') == '1'\n\nassert solution('''\n3 5 5 1\n''') == 'Impossible'\n\nassert solution('''\n5 5 5 2\n''') == '1'\n\nassert solution('''\n5 5 5 1\n''') == 'Impossible'\n\nassert solution('''\n3 5 5 2\n''') == '1'"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"2 1 1 1\") == \"impossible\"\n\"\"\"\n\nimport sys\nimport numpy as np\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\n\n---Input---\nInput consists of a single line containing $4$ base values. All base values are between $1$ and $100$, inclusive.\n\nSample Output:\n4\n\nimport io\nimport sys"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 5 2') == \"1\"\nassert solution('2 7 3 4') == \"2\"\nassert solution('2 4 7 3') == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5 5 2\") == \"1\"\nassert solution(\"4 5 5 3\") == \"2\"\nassert solution(\"4 5 5 4\") == \"2\"\nassert solution(\"3 5 5 2\") == \"impossible\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 5 2') == '1'\n\nprint(solution('3 5 5 2'))\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('3 2 5 4') == '3'\nassert solution('3 5 2 4') == 'impossible'\n\"\"\"\n"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 5 2') == \"1\"\nassert solution('3 2 3 1') == \"3\"\nassert solution('1 2 3 4') == \"impossible\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([20, 3, 5, 5]) == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution('20 2 3 2') == '0'"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution('2 7 7') == '1'"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution('25 2 1 0') == '1'\nassert solution('20 3 10 5') == '0'\n\"\"\"\n\nfrom typing import List"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1 6') == '7'\nassert solution('3 3 3') == '9'\n\"\"\"\n\nn, k, a, b = map(int, input().split())\nt = list(map(int, input().split()))\nu = []\nfor i in range(k):\n    u.append(list(map(int, input().split())))\n\nfor i in range(k):\n    tmp = []\n    for j in range(n):\n        tmp.append(u[i][j] + t[j])\n    t.append(max(tmp))\n\nans = 0\nfor i in range(n):\n    ans = max(ans, t[i] + (b if i == 0 else a))\n\nprint(ans)"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20 3 5 5') == '2'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\nprint(solution(\"10 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\"))\nassert solution(\"10 5 5\\n0 0 0\\n0 -10 0\\n30 0 0\\n0 0 0\") == \"2\"\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 20 5') == '2'\nassert solution('10 10 5') == '1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''20 3 5 5\n0 0 0\n0 -10 0\n30 0 0\n0 0 0\n''') == '2'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '12 14'\nassert solution('41') == '42 13'\n\n---Input---\n1\n0\n\n---Output---\n12\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('17') == '17'\nassert solution('18') == '17'\nassert solution('12') == '14'\nassert solution('15') == '15'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == '14'\nassert solution('14') == '12'\nassert solution('123') == '125'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '4'\nassert solution('7') == '7'\nassert solution('99999') == '99999'\nassert solution('61111') == '1112'\nassert solution('1000000000000000') == '1000000000000000'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"15 5\") == \"12 14\", \"Should return 14 and 14, respectively\"\nassert solution(\"1 2 3 4\") == \"2 4\", \"Should return 2 and 4, respectively\"\nassert solution(\"1 2 3 4\") == \"4 2\", \"Should return 4 and 2, respectively\"\nassert solution(\"11\") == \"12\", \"Should return 12, because 11 is 1 and 11 are odd\"\nassert solution(\"111\") == \"112\", \"Should return 112, because 111 and 112 are not both odd\"\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '2 4'\nassert solution('11') == '2 8'\nassert solution('21') == '20 7'\nassert solution('31') == '3 8'\nassert solution('33') == '3 7'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1 2\"\nassert solution(\"13\") == \"12 14\"\nassert solution(\"82754\") == \"82755 82756\"\n\"\"\""
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13') == '12 14'\nassert solution('1111') == '1 2 3'\nassert solution('111111') == '1 2 3'\nassert solution('11') == '1 2'\nassert solution('1344') == '1344'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13') == '12 14'\nassert solution('0') == '0'\nassert solution('12') == '12'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '14 14'\nassert solution('1') == '14 12'\nassert solution('2') == '14 14'\nassert solution('3') == '14 14'\nassert solution('11') == '14 14'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n\") == \"0\"\nassert solution(\"5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n2 1 0\\n\") == \"1\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 0 0\n1 0 1\n3 0 1''') == '2'\n\"\"\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n\n\nclass Solution:\n    def __init__(self):\n        self.arr = []\n        self.n = 0\n\n    def count_parity(self, n):\n        if n % 2 == 0:\n            return 2\n        else:\n            return 1\n\n    def solve(self, N):\n        x = 0\n        y = 0\n        z = 0\n        n = N\n        for i in range(0, N):\n            self.arr.append(int(input()))\n        for i in self.arr:\n            if i % 2 == 0:\n                x += 1\n            else:\n                y += 1\n        if x % 2 == 0 and y % 2 == 0:\n            return 0\n        else:\n            return 2\n        # Write your code here\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nprint(solution('''5\n1 0 0\n1 0 1\n3 0 1\n3 0 0\n3 0 1\n'''))\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 0\\n1 2 1\\n1 2 1\\n2 1 0\\n2 1 1\\n3 0 0\\n3 0 1') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0 0') == '0'\nassert solution('1 0 1') == '1'\nassert solution('3 0 1') == '2'\nassert solution('3 0 0') == '1'\nassert solution('3 0 1') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\\n1 1 1\\n2 0 1\\n2 1 2\\n3 0 1\\n3 1 2\") == \"0\"\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 0\\n1 0 1\\n3 0 1') == '0'\nassert solution('3 1 0\\n3 1 1\\n3 1 1') == '0'\nassert solution('2 4 0\\n2 4 0\\n2 4 0\\n2 4 0') == '1'\nassert solution('2 3 2\\n2 3 2\\n2 3 2\\n2 3 2') == '0'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1 1 2 2 1\"\nassert solution(\"3 3\") == \"1 1 2 2 1 3\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\\n\"\nassert solution(\"1 1\") == \"1 1\\n\""
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3\n1 2\n3 4\n''') == '1 2\\n3 4\\n1 2'\nassert solution('''\n4\n4\n1 2\n3 4\n''') == '1 2\\n1 3\\n1 2\\n3 4\\n1 3\\n3 2\\n2 4\\n2 3\\n1 4\\n3 1\\n2 4\\n2 3\\n3 1\\n1 2\\n2 4\\n2 3\\n3 1\\n2 1\n''')\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1 1\\n2 2'\nassert solution('12 3') == '1 1\\n2 2\\n3 3'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"2 2\") == \"1 1\\n2 2\"\nassert solution(\"3 3\") == \"1 1\\n2 2\\n3 3\\n1 2\\n2 3\\n3 1\\n1 3\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n1 2\n1 3\n2 1\n''') == '1 2\\n1 3\\n2 1\\n2 2\\n1 2'\nprint('All test cases passed!')"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3'\nassert solution('1 2') == '1 1\\n2 2'\nassert solution('2 2') == '1 1\\n2 2'\nassert solution('2 2') == '1 1\\n2 2'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"1 1\\n2 2\\n1 3\\n2 1\"\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 3]) == \"1 1\"\nassert solution([2, 2]) == \"1 1\"\nassert solution([2, 1]) == \"1 2\"\nassert solution([1, 2]) == \"2 1\"\nassert solution([1, 1]) == \"2 2\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\\n1 0.5 1\\n2 3 2\\n4 1 1\\n3 0.5 1\\n4 1 1\") == \"1.66666666666667\"\nassert solution(\"2 3\\n1 0.5 1\\n2 3 2\\n4 1 1\\n3 0.5 1\\n4 1 1\") == \"2.66666666666667\"\nassert solution(\"1 2 3\\n1 1 1\\n2 3 2\\n4 1 1\\n3 0.5 1\\n4 1 1\") == \"1.33333333333333\""
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 10\"\n) == \"3.33333333\"\n\"\"\"\nimport re\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n1 2\n0 10 1\n0 10 1\n''') == '3.33333333'\nassert solution(\n'''\n1 2\n0 10 1\n0 10 1\n''') == '3.33333333'\nassert solution(\n'''\n2 1\n0 10 1\n0 10 1\n''') == '1.66666667'\nassert solution(\n'''\n1 2\n0 10 1\n0 10 1\n''') == '3.33333333'\nassert solution(\n'''\n1 2\n0 10 1\n0 10 1\n''') == '3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 10\n0 10 1\n0 10 1\n0 10 1\n''') == '3.33333333'\nassert solution('''\n4 10\n0 10 1\n0 10 1\n0 10 1\n0 10 1\n''') == '4.1666666666'\nassert solution('''\n2 10\n0 10 1\n0 10 1\n''') == '1.83333333'\n\n'''\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10') == '3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '3 10\\n0 10 1\\n0 10 1\\n0 10 1'\n) == '3.33333333'\nassert solution(\n    '3 10\\n0 10 2\\n0 10 2\\n0 10 2'\n) == '3.33333333'\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 10, 1]) == \"1.75\"\nassert solution([3, 10, 1]) == \"2.33333333\"\nassert solution([3, 10, 1]) == \"3.33333333\"\nassert solution([3, 10, 1]) == \"3.33333333\"\nassert solution([3, 10, 1]) == \"3.33333333\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10') == '3.33333333'\nassert solution('3 10') == '3.33333333'"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 10, 1]) == \"1\"\nassert solution([3, 10, 1]) == \"1\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 10\\n0 10 1\\n0 10 1\\n0 10 1\") == \"3.33333333\"\nassert solution(\"3 10\\n0 10 1\\n1 10 1\\n0 10 1\") == \"2.33333333\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('3 10') == '10'\nassert solution('3 3 3') == '3'\n\n\"\"\"\n\nn = int(input())\nscores = list(map(int, input().split()))\nm = int(input())\nmatches = []\nfor i in range(m):\n    a,b = map(int, input().split())\n    matches.append((a,b))\nmatches.sort(key=lambda x: (-x[1], x[0]))\nans = 1\nfor i in range(m):\n    if scores[i] == matches[i][1]:\n        ans += 1\nprint(ans)"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1', 'First'\nassert solution('2') == '1', 'Second'\nassert solution('3') == '0', 'Third'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"1\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n3 3 2\n\"\"\") == \"1\"\n\"\"\"\n\n\n\n\"\"\"\n\nn=int(input())\nlist_=list(map(int,input().split()))\nlist_.sort()\ncount=0\nfor i in range(0,n):\n    if list_[i]==list_[i+1]:\n        count+=1\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n3 3 2') == '1\\n'\nassert solution('100\\n1 1 1 1\\n2 2 2 2') == '3\\n'\nassert solution('100\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3') == '0\\n'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 3 2') == '1'\nassert solution('4\\n1 2 3 4') == '2'\nassert solution('5\\n2 2 1 4 5') == '3'\nassert solution('6\\n2 2 1 4 5 6') == '3'"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n3 3 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3 3 2\n''') == '1'\nassert solution('''\n2\n3 1 2\n''') == '1'\nassert solution('''\n5\n2 4 1 1 1\n''') == '2'\n\ninput()"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"abba\") == \"2\"\nassert solution(\n    \"bab\") == \"2\"\nassert solution(\n    \"aab\") == \"1\"\nassert solution(\n    \"baa\") == \"1\"\nassert solution(\n    \"abb\") == \"1\"\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\nabba\\ncat\\ndog\\nmouse\\n') == '3'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\nb\nd\n''') == '1'\nassert solution('''\n10\naaaaa\nabbaaa\nb\naaaaa\nbbbbbb\nc\naaaaa\nbbbbbb\nccccc\n''') == '2'\nassert solution('''\n20\naaaabb\na\nbbbbbb\naaaabb\nbbbbbb\nccccc\nddddd\neeeee\n''') == '2'\nassert solution('''\n15\naaaaaaaaaaaaa\nbbbbbbbbbbbbbbbb\nc\naaaaaaaaaaaaa\nbbbbbbbbbbbbbbbb\ncccccccccccccccc\n''') == '3'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2\\n'\n    'a\\n'\n    'b\\n'\n    'a\\n'\n    'b\\n'\n    ) == '2'\nassert solution(\n    '2\\n'\n    'c\\n'\n    'c\\n'\n    'a\\n'\n    'b\\n'\n    ) == '2'\n\nassert solution(\n    '2\\n'\n    'a\\n'\n    'a\\n'\n    'a\\n'\n    'b\\n'\n    ) == '2'\n\nassert solution(\n    '2\\n'\n    'a\\n'\n    'b\\n'\n    'a\\n'\n    'b\\n'\n    ) == '2'\n\nassert solution(\n    '3\\n'\n    'a\\n'\n    'a\\n'\n    'c\\n'\n    'c\\n'\n    ) == '2'"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 1\nabb\nabbbb\nabc\nab\na\n''') == '1'"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == 2"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '2'\nassert solution('1 4') == '4'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2\n2 3\n2 4\n''') == \"3\"\nassert solution('''\n4\n1 2\n2 3\n2 4\n''') == \"2\"\nassert solution('''\n6\n1 2\n2 3\n2 4\n3 5\n3 6\n4 7\n4 8\n''') == \"2\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3'\nassert solution('10 5') == '5'\nassert solution('4 3') == '3'\n'''\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"3 1\") == \"2\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '3'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4 3\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"2 4\\n\") == \"3\"\nassert solution(\n    \"5 1\\n\"\n    \"2 3\\n\"\n    \"3 1\\n\"\n    \"4 2\\n\"\n    \"1 2\\n\"\n    \"1 4\\n\"\n    \"1 4\\n\"\n    \"2 4\\n\"\n    \"2 3\\n\"\n    \"1 3\\n\"\n    \"2 1\\n\") == \"5\"\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 2\n1 3\n2 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 3\n1 2\n2 3\n3 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 3\n2 4\n3 4\n4 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n2 4\n2 3\n2 4\n3 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n4 4\n2 3\n3 4\n4 3\n\"\"\") == \"3\""
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2') == '1'\nassert solution('4 3\\n1 2\\n2 3\\n2 4') == '3'"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''\n1 1\n1 1\n1 1\n1 1\n''') == '2'\nassert solution('''\n3 3\n1 2\n2 3\n2 4\n''') == '4'\nassert solution('''\n1 1\n1 2\n''') == '2'\n'''\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n') == '1'\nassert solution('3 2\\n1 0\\n0 1\\n1000 1\\n1 3\\n2 3\\n') == '0'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n6 1\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 2\n1 0\n0 1\n1001 1\n1 3\n2 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"2\\n3\") == \"1\"\nassert solution(\"3\\n3\") == \"1\"\nassert solution(\"5\\n4 4 5 2\") == \"2\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '1'\nassert solution('''\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n''') == '0'\nassert solution('''\n1\n1\n''') == '1'\n\n\"\"\""
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n1 0\n0 1\n1000 1\n1 3\n2 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\\\n2\n5 1\n0 0\n1 4\n3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\\\n3\n5 1\n0 0\n1 4\n3 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\\\n3\n5 1\n0 0\n1 4\n3 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3''') == '7'\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n3 2 2\\n5 2 1') == '7'\nassert solution('1 2 3\\n3 2 2\\n1 2 1\\n1 2 3') == '7'\n\"\"\""
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"7\"\nassert solution(\"1\\n2\\n3\") == \"7\"\nassert solution(\"3\\n2\\n2\") == \"7\"\nassert solution(\"5\\n2\\n1\") == \"6\"\nassert solution(\"3\\n2\\n1\") == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\n'''\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3''') == '7'\n\nassert solution('''5\n3 2 2\n3 2 2\n3 2 2\n3 2 2\n3 2 2''') == '10'"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n4\n1 2 2\n2 2 3\n3 3 3\n3 3 3\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n10\n2 3 3 2 1 1 3 2 2\n1 2 3 2 2 3 2 2 2\n3 2 3 3 2 3 3 3 2\n1 2 1 2 3 2 3 2 2\n1 2 3 3 3 3 3 2 2\n2 3 3 2 2 2 3 2 2\n1 2 3 3 3 2 2 2 2\n3 3 3 3 2 2 2 2 3\n2 3 3 2 3 3 2 3 3\n3 2 2 2 2 3 2 3 2\n1 2 3 2 2 2 3 2 2\n2 3 3 2 2 2 3 2 3\n1 2 3 2 3 3 3 3 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\\n3 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3\") == \"7\"\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\nassert solution('''\n5\n1 2 2\n3 2 3\n3 2 4\n5 4 5\n6 7 9\n''') == '9'\n'''\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 2 2\\n3 2 2\\n3 2 1') == '7'\nassert solution('5\\n2 2 1\\n3 2 1\\n3 2 1\\n3 2 2') == '5'\nassert solution('6\\n2 2 3\\n3 2 2\\n3 2 2\\n3 2 1\\n3 2 1\\n3 2 1\\n3 2 2') == '6'\nassert solution('6\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2\\n1 2 2') == '3'\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n') == '7'\nassert solution('3\\n2 2 2\\n5 2 1\\n3 2 1\\n1 2 1\\n1 2 3') == '7'"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\n') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\n\"\"\"\n) == \"20\"\n\nassert solution(\n\"\"\"\n2\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\n\"\"\"\n) == \"20\"\n\nassert solution(\n\"\"\"\n3\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\n\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"\n2\nlinearalgebra 10\ncalculus1 10\n\"\"\"\n) == \"10\"\n\nassert solution(\n\"\"\"\n5\nlinearalgebra 10\ncalculus1 10\ncalculus2 20\nhonorsanalysis1 50\nhonorsanalysis2 100\n\"\"\"\n) == \"120\""
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '20'\nassert solution('7 5') == '20'\nassert solution('7 5 1') == '21'\nassert solution('20 2') == '20'\nassert solution('20 3') == '21'\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"20\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"20\"\nassert solution(\"5 2\") == \"20\"\nassert solution(\"5 2\") == \"20\"\nassert solution(\"5 2\") == \"20\"\n\"\"\"\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '20'\nassert solution('5 20') == '100'\nassert solution('100 20') == '100'\nassert solution('5 1') == '10'\nassert solution('5 2') == '20'\n"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"5 5\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\\nlinearanalysis10 2\\nlinearanalysis2 20\") == \"50\""
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\nassert solution(\"10\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"10\"\nassert solution(\"3\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100\") == \"20\"\n\"\"\"\nfrom collections import defaultdict"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\nlinearalgebra 10\\ncalculus1 10\\ncalculus2 20\\nhonorsanalysis1 50\\nhonorsanalysis2 100') == '20'\n\n'''"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"20\"\nassert solution(\"3 3\") == \"18\"\nassert solution(\"5 5\") == \"18\"\nassert solution(\"2 2\") == \"20\"\nassert solution(\"5 0\") == \"20\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '10'"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '6'\nassert solution([4, 4]) == '6'\nassert solution([1, 2, 2]) == '0'\nassert solution([2, 3, 4]) == '1'\nassert solution([3, 4, 1]) == '4'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4') == '3'\nassert solution('10 7') == '3'\nassert solution('15 8') == '2'\nassert solution('2 5') == '1'\n\nstdin = \"\"\"\n3 2\n1 2 3\n2 1 3\n3 1 1\n\"\"\"\nassert solution(stdin) == '1'\n\nstdin = \"\"\"\n2 2\n1 2\n2 1\n\"\"\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4\\n4 1 2\\n2 3 4\\n3 4 1\\n3\\n1 4 2\\n3 3 3\\n4 3 6') == '6'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '6'\nassert solution('''10 3\n1 2 3\n1 3 2\n1 4 1\n2 4 3\n3 4 1\n4 4 2\n5 4 1\n6 4 2\n6 3 2\n7 4 3\n8 4 1\n9 4 2\n10 4 3\n''') == '4'\nassert solution('''10 3\n1 2 3\n1 3 2\n1 4 1\n2 4 3\n3 4 1\n4 4 2\n5 4 1\n6 4 2\n6 3 2\n7 4 3\n8 4 1\n9 4 2\n10 4 3\n''') == '4'\nassert solution('''4 5\n1 2 2\n2 3 4\n3 4 1\n4 1 2\n3\n1 4 2\n3 3 3\n4 3 6\n''') == '4'\nassert solution('''2 2\n1 1 1\n1 1 1\n''') == '0'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 4') == '6'\nassert solution('5 5') == '3'\nassert solution('2 1 2') == '1'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '6'\n\nimport collections"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 1\\n1 3') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1') == 'impossible'"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n1 1\\n1 2\\n1 1\\n2 3 1') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n1 2\\n1 1\\n2 3 1') == 'impossible'\nassert solution('5 10 10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 1') == '2'\nassert solution('2') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n') == '2'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\nprint(solution())"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3 2\n1\n1 1\n1 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1 1\n2\n3\n1 2\n2 3 1\n1 1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\n''') == '2'\nassert solution('''\n3 2\n3\n1 3\n1 3\n''') == 'impossible'\n'''"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n1 2\\n3') == '2'\nassert solution('3 1 1\\n1 2\\n3') == 'impossible'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1 1\n2\n3\n1 2\n2 3 1\n1 1\nSample Output:\n3\n''') == '2'"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '500.00'\nassert solution('1000') == '750.00'\nassert solution('500') == '750.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n250 250\\n250 750') == '500.00'\nassert solution('4\\n5 5\\n10 10\\n100 100\\n200 200') == '500.00'\nassert solution('2\\n10 10\\n5 5\\n3 3') == '50.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1.00'\nassert solution('2') == '4.00'\nassert solution('3') == '6.00'\nassert solution('4') == '10.00'\nassert solution('5') == '15.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n500 500\n500 450\n500 550\n4\n1000 1000\n1000 800\n1000 800\n5\n100 100\n300 300\n500 500\n100 300\n''') == '500.00'''\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n''') == \"1000.00\"\nassert solution('''\n6\n0 0\n0 100\n200 250\n200 100\n100 250\n50 0\n50 100\n''') == \"2000.00\"\nassert solution('''\n10\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    250 250\n    250 750\n    ''') == '500.00'\nassert solution('''\n    1\n    1000 1000\n    ''') == '1000.00'\nprint('PASSED!')\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1\\n2\\n3\\n4\\n\") == \"6.00\"\nprint(solution(input()))\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n0 2\n3\n4''') == '5.00'\nassert solution('''2\n0 0\n1 1\n2 2''') == '3.00'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"500\"\nassert solution(\"3\") == \"400.00\""
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n250 250\n250 750''') == '500.00'\nassert solution('''1\n100 100\n1000 1000''') == '0.00'\nassert solution('''2\n0 0\n100 100''') == '0.00'\nassert solution('''3\n0 0\n100 100\n100 100''') == '500.00'\nassert solution('''10\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50\n51 52\n53 54\n55 56\n57 58\n59 60\n61 62\n63 64\n65 66\n67 68\n69 70\n71 72\n73 74\n75 76\n77 78\n79 80\n81 82\n83 84\n85 86\n87 88\n89 90\n91 92\n93 94\n95 96\n97 98\n99 100''') == '1311.89'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0'\nassert solution('2 3\\n100 100 10\\n100 1 10') == '0'\nassert solution('2 3\\n0 0 10\\n0 1 10') == '20'\nprint('Yrgac is running a daycare service for dogs. He has $N$ dogs and he would like to take them on a walk. However, before he can walk the dogs, he needs to feed them first.')"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == '0'"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 100 10\n100 1 10\n100 3 10\n3 100 10\n''') == '0'\nassert solution('''\n4\n3 100 10\n100 1 10\n100 3 10\n3 100 10\n''') == '0'\n'''\n\nimport math\n\nn, m = map(int, input().split())\n\ndogs = {}\n\nfor i in range(n):\n    dog = list(map(int, input().split()))\n    dogs[dog[0]] = {'food': dog[1], 'time': dog[2]}\n\ntotal_time = 0\nfor key, value in dogs.items():\n    time = math.ceil(value['food'] / value['time'])\n    total_time += time * key\n\nprint(total_time)\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"5 3\") == \"0\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n2 100 10\n100 1 10\n''') == '0'\nprint(solution('''\n3 3\n6 90 20\n60 20 80\n90 10 50\n'''))"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n1\\n1\\n1\\n') == '0'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '0'\nassert solution('2 100 10') == '0'\nassert solution('100 1 10') == '0'"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"2\"\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 5') == '5'\nassert solution('5 1') == '10'\nassert solution('5 2') == '6'\nassert solution('5 5') == '10'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n2 100 10\\n100 1 10') == \"0\"\nassert solution('5\\n12 16 100 9 5\\n10 15 50 15 20\\n100 200 20 80 30\\n50 70 10 50') == \"60\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35') == '2'\n\nassert solution('100 100 3 2\\n
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n50 5 25 20 50 35\n75 5 25 35\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('80 50 3 2') == '2'\nassert solution('75 5 25 20 50 35') == '4'\n\nimport os\nimport sys\nimport atexit\nimport signal\n\nclass TimeoutError(Exception):\n    pass"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"80 50 3 2\\n75 5 25 20 50 35\\n50 5 25 35\") == \"2\""
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 3 1') == '1'\nassert solution('5 5 5 5') == '1'\nassert solution('5 5 5 5 5') == '1'\nassert solution('4 3 5 2') == '3'\nassert solution('4 4 4 4 4') == '4'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1') == '2'\nassert solution('2\\n1\\n1\\n2') == '1'\nassert solution('2\\n1\\n2\\n1') == '1'\nassert solution('2\\n1\\n2\\n3') == '0'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('80 50 3 2') == '2'\nassert solution('75 5 25 20 50 35') == '2'"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 1') == '1'\nassert solution('5 2 3') == '2'\nassert solution('20 3 5') == '2'\nassert solution('50 5 25 20 50 35') == '3'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 3 3') == '0'\nassert solution('1 3 1 3') == '2'\nassert solution('3 3 3 3') == '4'"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n2211\\n1112\\n1112') == \"AAAAB..C\"\nassert solution('3 3\\n1211\\n1212\\n1111\\n1123\\n1122') == \"AAAAB..C\"\nassert solution('3 4\\n1111\\n1111\\n1111\\n1111') == \"impossible\"\n\nsample in\n3 4\n1111\n1111\n1111\n1111\nSample Output:\nAAAA\n...A\n....\n\nBB..\nBBBB\n...B\n\n....\n...C\nCCCC\n\nimport re\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\"\nassert solution(\"3 4\\n2211\\n1112\\n1112\") == \"AAAA\\n...A\\n....\"\nassert solution(\"2\\n0\\n0\\n0\\n\") == \"impossible\"\nassert solution(\"5 5\\n2211\\n2211\\n1112\\n1112\\n1112\\n1112\\n1112\\n2211\\n2211\\n1112\\n1112\\n1112\\n1112\\n\") == \"AAAA\\nBBBB\\nCCCC\\nAAAA\\nBBBB\\nCCCC\\nBBBB\\nCCCC\\nBBBB\\nCCCC\\nAAAA\\nBBBB\\nCCCC\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n2211\n1112\n1112\n''') == 'AAAA\\n...A\\nBBBB\\n...B\\nCCCC\\nimpossible\\n'''\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n1111\\n1111\\n1112\") == \"AAAA\"\nassert solution(\"5 5\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\\n11111\") == \"BBBB\"\nassert solution(\"2 1\\n1 2\\n2 1\") == \"impossible\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 10\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n11111111111111111111111111\n1111"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"11111\"\nassert solution(\"2 2\") == \"2222\"\nassert solution(\"3 1\") == \"2211\"\nassert solution(\"3 3\") == \"1111\"\nassert solution(\"3 3\") == \"1111\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n2211\n1112\n1112\n''') == \"AAAA\\n...A\\n....\\nCCCC\"\nassert solution('''2 3\n1112\n2211\n''') == \"AAAA\\n...A\\n....\\n\"\nassert solution('''2 3\n1112\n2211\n''') == \"AAAA\\n...A\\n....\\n\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\\\n2 3\n2211\n1112\n''') == \"AAAA\"\nassert solution('''\\\n3 3\n2211\n1112\n1112\n''') == \"AAAA\"\nassert solution('''\\\n3 3\n2211\n1112\n\n''') == \"impossible\"\nassert solution('''\\\n3 3\n2211\n1112\n1112\n''') == \"impossible\"\n\nassert solution('''\\\n2 2\n2211\n\n''') == \"AAAA\"\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n2211') == 'AAAA'\nassert solution('3 4\\n1112') == 'BBBB'"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n2222\n1112\n''') == 'AAAA'\nassert solution('''\n2 2\n2222\n1112\n''') == 'BBBB'\nassert solution('''\n3 3\n2222\n1112\n1112\n''') == 'BBBB'\nassert solution('''\n5 4\n2222\n1112\n1112\n1112\n1112\n''') == 'BBBB'"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4 1 3\n3 4 1 2 3 2\n4 3 1 2 1 3\n1 4 1 2 1 3\n''') == '9'\nassert solution('''\n1 2 1 2\n1 2 1 2\n1 2 1 2\n''') == '7'\nassert solution('''\n1 2 1 2\n1 2 1 2\n1 2 1 2\n''') == '5'\nassert solution('''\n1 2 1 2\n1 2 1 2\n1 2 1 2\n''') == '4'\nassert solution('''\n1 2 1 2\n1 2 1 2\n1 2 1 2\n''') == '3'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '9'\nassert solution('4 3 1 2 1') == '10'\n\"\"\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '9'\nprint(solution())"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4 1 2 3 2\n1 4 1 2 1 3\n2 4 1 2 1 3\n1 4 1 2 1 3\n2 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n''') == '9'\nprint(solution('''\n3 4 1 2 3 2\n1 4 1 2 1 3\n2 4 1 2 1 3\n1 4 1 2 1 3\n2 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2 1 3\n1 4 1 2"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3 4 1 2 3 2') == '9'\nassert solution('2\\n3 4 1 2 3 2') == '0'\nassert solution('2\\n4 3 1 2 3 2') == '9'\nassert solution('2\\n4 3 1 2 3 2') == '0'\nassert solution('3\\n4 3 1 2 3 2') == '9'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 3 3\") == \"9\"\n\nstdin = \"\"\"\n3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1 3\n1 4 1 2 1 3\n\"\"\"\n\nassert solution(stdin) == \"9\"\n\nassert solution(\"3 1 3 4\") == \"18\"\n\nassert solution(\"3 1 3 4 4\") == \"17\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 4 3 2\n3 4 1 2 3\n4 3 1 2 1\n1 4 1 2 1 3\n2 1 1 2\n\"\"\") == \"16\"\n\nassert solution(\"\"\"\n2 2 2 2\n3 4 1 2 3\n3 4 1 2 1\n2 1 1 2\n\"\"\") == \"36\"\n\nassert solution(\"\"\"\n10 1 3 3\n1 4 1 2 1\n1 4 2 1\n2 1 3 2 1\n3 1 1 2 1\n1 4 1 2 1 3\n\"\"\") == \"36\"\n\nassert solution(\"\"\"\n4 3 3 3\n3 3 1 2\n1 3 2 1\n2 3 1 1\n\"\"\") == \"36\"\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1 3 3\n3 4 1 2 3 2\n4 3 1 2 1 3\n1 4 1 2 1 3''') == '9'\nassert solution('''5 1 5 1\n4 1 1 2 3\n3 2 1 3 4\n3 2 1 2 1\n3 3 1 4''') == '10'\nassert solution('''5 4 2 4\n4 5 3 2 5\n5 2 5 3 2\n4 3 5 2 2\n5 5 4 1 2''') == '6'\nassert solution('''5 4 2 4\n4 5 3 2 5\n5 2 5 3 2\n4 3 5 2 2\n5 5 4 1 2''') == '10'\nassert solution('''5 4 2 4\n4 5 3 2 5\n5 2 5 3 2\n4 3 5 2 2\n5 5 4 1 2''') == '10'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 4 3 1\n3 1 3 2\n1 4 1 2\n''') == '8'\n\nassert solution('''\n3 1 3 1\n3 1 3 1\n1 4 1 2\n''') == '3'\n\nassert solution('''\n2 4 3 1\n3 1 3 2\n1 4 1 2\n''') == '2'\n\nprint(solution(open('sample.txt')))\nprint(solution(open('input.txt')))\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 3 3') == \"9\"\nassert solution('3 4 1 2 3 2') == \"9\"\nassert solution('4 3 1 2 1') == \"10\"\nassert solution('1 4 1 2 1 3') == \"10\"\nassert solution('3 2 1 2 3') == \"11\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 2 2 8\") == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('0 0 6') == '20.396078'\nassert solution('3 4 7') == '21.0'\nassert solution('0 8 8') == '19.0'\nassert solution('6 8 8') == '16.0'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('0 0 6') == '20.396078'\nassert solution('3 4 7') == '100.0'\nassert solution('0 8 8') == '100.0'\nassert solution('6 8 8') == '100.0'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4') == '20.396078'\nprint(solution('''6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n'''))\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1 6\\n0 0 8\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == '20.396078'\nassert solution('6 2 2 8\\n0 0 6\\n3 4 7\\n0 8 8\\n6 8 8\\n6 0 6\\n6 4 8\\n3 4\\n1 5') == '100.0'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 2 8') == '20.396078'\nassert solution('7 2 2 8') == '19.979175'\nassert solution('6 2 2 8') == 'Impossible'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\nassert solution('''\n6 1 1 3\n1 1 1\n3 3 1\n1 3 1\n3 2 3\n2 2 2\n1 1 1\n''') == '2.6'\nassert solution('''\n6 1 3 4\n1 1 4\n2 3 3\n1 3 4\n2 3 4\n2 4 1\n3 1 1\n1 1 1\n''') == '2.6'\nassert solution('''\n8 1 4 6\n1 6 3\n1 3 2\n3 6 3\n1 4 3\n4 1 2\n3 1 2\n1 2 1\n''') == '2.6'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 2 2 8\") == \"20.396078\"\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 2 2 8\n0 0 6\n3 4 7\n0 8 8\n6 8 8\n6 0 6\n6 4 8\n3 4\n1 5\n''') == '20.396078'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n1') == 'b'\nassert solution('abca\\nbc cd da dd ee ff gg hh ii jj kk ll mm\\nnn oo pp qq rr ss tt uu vv ww xx yy zz\\n10') == 'b'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"n\""
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'd'\nassert solution('hh aa ba bb cb cc dd ee ff ga gb gc gd ge ee fi fj fk fl fn fo fp gq gr gs gt gu gu ux uy uz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu vv vy vz va vb vc vd ve vf vg vh vi vj vk vl vm vn vo vp vq vr vs vt vs vu"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'd'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'z'\nassert solution('qqq') == 'q'\nassert solution('iiiiiii') == 'i'"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\") == \"c\"\n\nassert solution(\"\"\"abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\") == \"d\"\n\nassert solution(\"\"\"abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\") == \"e\"\n\nassert solution(\"\"\"abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\") == \"b\"\n\nassert solution(\"\"\"abca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n2\n2\n1 8\n\"\"\") == \"a\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abca') == 'b', \"First\"\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c', \"Second\"\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'n', \"Third\"\n\"\"\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\nassert solution(\"nn oo pp qq rr ss tt uu vv ww xx yy zz\") == \"t\"\nassert solution(\"aa bb cc dd ee ff gg hh ii jj kk ll mm\") == \"p\"\nassert solution(\"ee ee ee ee ee ee ee ee ee ee ee ee\") == \"e\"\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abca') == 'c'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'g'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'u'"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abca\") == \"b\"\nassert solution(\"bc cd da dd ee ff gg hh ii jj kk ll mm\") == \"c\"\n\nSTDIN_S = \"\"\"\nabca\nbc cd da dd ee ff gg hh ii jj kk ll mm\nnn oo pp qq rr ss tt uu vv ww xx yy zz\n1\n2\n1 8\n\"\"\"\n\nSTDOUT_S = \"\"\"\nb\nc\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'd'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'd'\nassert solution('aaaaaaabbbbbbccccccddddddddeeeeeffffffgggggggghhiiiiiii') == 'f'\nassert solution('aaaaaaabbbbbbccccccddddddddeeeeeffffffgggggggghhiiiiiii') == 'f'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nhobotnica\\nrobot\\nhobi\\nhobit\\nrakija\\n') == '12\\n10\\n16\\n7\\n'\n\nstdin = '''\n3\ngreen\ngreen\ngreen\nbrown\n'''\nassert solution(stdin) == '12\\n10\\n16\\n7\\n'\n\nstdin = '''\n4\napple\nbeet\ncarrot\ngrape\n'''\nassert solution(stdin) == '15\\n9\\n16\\n8\\n'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"12\"\n\"\"\""
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '12'\nassert solution('2') == '10'\nassert solution('3') == '16'\n\n\"\"\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '12'\nassert solution('3') == '10'\nassert solution('10') == '16'\nassert solution('12') == '7'\nassert solution('12') == '7'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '12'\nassert solution('2') == '10'\n\"\"\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '12'\nassert solution('100') == '10000'\nassert solution('1') == '1'"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"ab\") == \"2\"\nassert solution(\"abcde\") == \"2\"\nassert solution(\"abcdef\") == \"3\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"12\"\n\"\"\"\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nabc\\ndef\\nghi') == '3'\nassert solution('4\\nab\\nde\\nfgh\\nij') == '4'\nassert solution('5\\nab\\nde\\nfgh\\nij\\nk') == '8'\nassert solution('6\\nab\\nde\\nfgh\\nij\\nk\\nl') == '8'\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3\\nA B') == 'A'\nassert solution('1 2\\nA B') == 'B'\nassert solution('2 3\\nA B') == 'A'\nassert solution('2 4\\nA B') == 'B'"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == ''\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"JQ IRKEYFG EXQ\", \"THIS IS A TEST\"]) == \"THIS IS A TEST\""
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('2 4\\nA B C D E F G') == 'A B C D E F G'"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n\nSample Input:\n6 4\nSCTJECXOFDCZBSJFZMRCUK\nSample Output:\nDAZBZRDFGXZSMBYFICQJ\n'''\n\nfrom collections import Counter\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n19 2\nJQIR\n''') == 'THIS IS A TEST'\nassert solution('''\n1 5\nA\n''') == 'A'\nassert solution('''\n19 5\nJQIR\n''') == 'JQIR'\nassert solution('''\n1 5\nA\n''') == 'A'\n\n------------------\nThis is a test\n------------------\n\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"14 4\\nJQ IRKEYFG EXQ\") == \"THIS IS A TEST\"\nassert solution(\"1 2\\n1 2\") == \"1 2\"\nassert solution(\"4 4\\nMXXGOGLEG\") == \"MXXGOGLEG\"\nprint(solution(\"12 2\\nMAOESKCLJAZ\"))\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\n\n\nSample Input:\n2 1\nKQF AFG\nSample Output:\nAFG\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2.6') == '135'\nassert solution('3.6') == '135135'\nassert solution('3.5') == '135135'\nassert solution('4.5') == '135135135'\nassert solution('4.4') == '135135135135'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2.6\") == \"135\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2.6') == '135'\nassert solution('15.6') == '270'\nassert solution('1.99') == '3'\nassert solution('1.5') == '1'\nassert solution('0.5') == '1'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2.6') == '135'\nassert solution('1.6') == '135135'"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2.6\") == \"135\"\nassert solution(\"2.5\") == \"270\"\nassert solution(\"2.4\") == \"270270\"\nassert solution(\"2.3\") == \"No solution\"\nassert solution(\"0.4\") == \"No solution\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2.6') == '135'\nassert solution('7.5') == '270'\nassert solution('6.3') == '270270'\nassert solution('4.3') == 'No solution'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2.6\") == \"135\"\n\nassert solution(\"3.12\") == \"0\"\n\nassert solution(\"7.6\") == \"0\"\n\nassert solution(\"10.2\") == \"135\"\n\nassert solution(\"11.8\") == \"135135135\""
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.2') == \"135\"\nassert solution('2.6') == \"135135\"\nassert solution('3.4') == \"135135135\"\nassert solution('5.8') == \"135135135135135135\"\nassert solution('12.7') == \"135135135135135135135135135135\"\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    1\n    .9\n    .6\n    .5\n    .4\n    .3\n    .2\n    .1\n    ''') == '135135'\nassert solution('''\n    .9\n    1\n    .8\n    .7\n    .6\n    .5\n    .4\n    .3\n    .2\n    ''') == '270270'\nassert solution('''\n    .9\n    .6\n    .5\n    .4\n    .3\n    .2\n    .1\n    ''') == 'No solution'\nassert solution('''\n    .9\n    .6\n    .5\n    .4\n    .3\n    .2\n    .1\n    .0\n    .9\n    .8\n    .7\n    .6\n    .5\n    .4\n    .3\n    .2\n    .1\n    .0\n
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2.6') == '135'\nassert solution('2.699999999999999') == '135135'\nassert solution('2.71') == '135270'\nassert solution('2.710000000000001') == '135270270'\nassert solution('2.7100000000000001') == '135270270270'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 1') == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nprint('ok')"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('2\\n2 2\\n3 3\\n4 4\\n4 5\\n5 5\\n6 6\\n7 7\\n7 8\\n8 8\\n9 9\\n9 9\\n10 10\\n10 10\\n') == '0'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\n\nassert solution('''\n10\n1 4\n0 3\n3 7\n2 9\n2 5\n0 2\n4 6\n4 5\n6 6\n5 4\n5 6\n6 6\n''') == '5'\n\nassert solution('''\n3\n0 0\n1 1\n2 2\n''') == '0'"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '4'\nassert solution('2\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '0'\nassert solution('3\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '1'\nassert solution('4\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '2'\nassert solution('5\\n0 1\\n3 7\\n4 5\\n6 5\\n9\\n1 4\\n1 6\\n2 3\\n2 5\\n3 5\\n3 6\\n4 8\\n5 4\\n6 3') == '3'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\n\nassert solution('''\n3\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\n\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '2'\n\nassert solution('''\n1\n0 1\n''') == '0'\n\nassert solution('''\n2\n0 1\n3 7\n''') == '2'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\"\n) == \"4\"\nassert solution(\n    \"\"\"\n7\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\n9\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n\"\"\"\n) == \"6\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n1 3') == '0.0000000 0.0000000'\nassert solution('2\\n1 2\\n1 3') == '1.0000000 0.0000000'\nassert solution('2\\n1 2\\n1 3') == '-1.0000000 0.0000000'\nassert solution('2\\n1 2\\n1 3') == '0.0000000 1.0000000'\nassert solution('2\\n1 2\\n1 3') == '0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"2\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n1.0000000 1.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"3\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n1.0000000 1.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"4\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n1.0000000 1.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n1.0000000 1.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"4\\n0 1\\n1 1\\n1 1\\n1 1\\n\") == \"1.000000000 0.000000000\"\nassert solution(\"1000\\n1 2\\n1 3\\n1 4\\n1 5\\n\") == \"0.0000000 0.0000000\\n0.0000000 1.0000000\\n-1.0000000 0.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"1000\\n0 0\\n1 0\\n1 0\\n1 0\\n\") == \"0.0000000 0.0000000\\n0.0000000 -1.0000000\\n-1.0000000 0.0000000\\n0.0000000 -1.0000000\"\n\n'''\nimport math"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution(\n    '1\\n1\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000'\nassert solution(\n    '3\\n2 1\\n1 2\\n2 1\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000'\nassert solution(\n    '5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution(\n    '5\\n1 3\\n1 2\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '0.000000 0.000000'\nassert solution('1 3') == '0.000000 0.000000'\nassert solution('1 4') == '0.000000 0.000000'\nassert solution('1 5') == '0.000000 0.000000'\nassert solution('5') == '0.000000 0.000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n1 2\\n1 3\\n2 4\\n4 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n1 2\\n2 4\\n1 3\\n5 4') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"0.0000000 0.0000000\"\nassert solution(\"1 2\") == \"0.0000000 0.0000000\""
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"6\") == \"0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n0.0000000 -1.0000000\"\nassert solution(\"0\") == \"0.0000000 0.0000000\\n-1.0000000 0.0000000\\n-1.0000000 0.0000000\\n-1.0000000 0.0000000\\n-1.0000000 0.0000000\"\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n\nassert solution('2') == '0.0000000 0.0000000\\n0.0000000 0.0000000\\n-1.0000000 0.0000000\\n1.0000000 1.0000000\\n1.0000000 -1.0000000'\n\nassert solution('3') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n\nassert solution('4') == '0.0000000 0.0000000\\n0.0000000 0.0000000\\n-1.0000000 0.0000000\\n1.0000000 1.0000000\\n1.0000000 -1.0000000'\n\nassert solution('5') == '0.0000000 0.0000000\\n0.0000000 0.0000000\\n-1.0000000 0.0000000\\n1.0000000 1.0000000\\n1.0000000 -1.0000000'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('3\\n3 1\\n1 2\\n1 3\\n1 4\\n') == '0.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000\\n1.0000000 2.0000000\\n1.0000000 -1.0000000'"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\nabc\\naaa\\na*a\\nabc\\naba\\n') == '1 1\\n1 1\\n1 1\\n2 2\\n1 2\\n'\n\"\"\""
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\nassert solution('1234') == '1'\nassert solution('aab') == '3'\nassert solution('aaaa') == '3'\nassert solution('aaaabb') == '2'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\naaa\nabc\naba\na*a''') == '1'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2\\n1\\n1\\n'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '2\\n1\\n1\\n'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\\n2\\n\"\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\naaa\\nabc\\naba\\na*a\\naaa*') == '2\\n1\\n1\\n'\nassert solution('2 3\\n*aaa\\na*a\\n*a*') == '2\\n1\\n'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n*a\\n2\\n*a\\n*a\\n') == '2'\nassert solution('2\\n*a\\n2\\n*a\\n*a\\n') == '1'\nassert solution('2\\n*a\\n3\\n*a\\n*a\\n') == '1'\nassert solution('3\\n*a\\n3\\n*a\\n*a\\n') == '0'\nassert solution('5\\n*a\\n*a\\n*a\\n*a\\n') == '4'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 3\nkuku\nabab\na*a\naba\nab*\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '1'\nassert solution('4 2') == '0'\nassert solution('4 2') == '1'\nassert solution('4 2') == '0'\n\n---\nSample Input:\n5 4\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\nSample Output:\n0\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\nOXOX\\nXOXO\\nXOXO') == '1'\nassert solution('5 5\\nOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOXOX"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX\nXX"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\nassert solution('''5 4\nOXOXOX\nOXOXOX\nOXOXOX\nOXOXOX\nOXOXOX\nOXOXOX\nOXOXOX\nOXOXOX\n''') == '0'\nassert solution('''1 3\nXOX\n''') == '1'\nassert solution('''1 3\nOXO\n''') == '1'\nassert solution('''5 2\nOXO\nOXO\n''') == '0'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '1'\nassert solution('3 4') == '0'"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\nOX\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5\\n
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nXOX\\nXOX\\nXOX\") == \"1\"\nassert solution(\"6 3\\nOXOXOXOXOXOX\\nXOXOXOXOXOXOX\\nOXOXOXOXOXOXOX\\nOXOXOXOXOXOXOX\\nOXOXOXOXOXOXOX\\nOXOXOXOXOXOXOX\\nOXOXOXOXOXOXOX\") == \"0\""
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\nXO\nXO\nXO\nOX\nOX\nOO\nXO\nOO\nXO\n''') == '1'\nassert solution('''\n3 3\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO\nXO"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('5\\n1 2\\n0 2\\n-1 -2\\n2 0') == '0'\nassert solution('5\\n-1 2\\n0 2\\n1 -2\\n2 0') == '1'\nassert solution('5\\n2 4\\n1 2\\n0 1\\n0 3') == '2'\nassert solution('5\\n0 2\\n-1 -2\\n0 3\\n0 4') == '1'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 0\\n0 2\\n-2 0\\n0 -2') == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 0\\n0 3\\n-2 0\\n0 -2') == '16'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\nassert solution(\"3\\n1 1\\n1 2\\n1 1\") == \"3\"\nassert solution(\"4\\n1 0\\n2 0\\n3 0\\n4 0\") == \"4\"\nassert solution(\"5\\n1 2\\n2 2\\n3 2\\n4 2\\n5 2\") == \"6\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\") == \"7\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n2 0\n0 2\n-2 0\n0 -2\n2 0\n0 -2\n0 -2\n''') == '16'\n\nassert solution('''\n4\n4 0\n0 4\n-4 0\n0 -4\n''') == '13'\n\nassert solution('''\n10\n2 0\n0 2\n-2 0\n0 -2\n3 -1\n0 -3\n2 0\n0 -2\n0 -3\n-2 0\n0 -3\n''') == '15'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 0\\n0 2\\n-2 0\\n0 -2\") == \"16\"\nassert solution(\"4\") == \"1000003\"\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 0') == '1'\nassert solution('4 1') == '1'\nassert solution('5 3') == '1'\nassert solution('6 1') == '1'\nassert solution('4 5') == '1'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 0\\n0 2\\n-2 0\\n0 -2\\n') == '16'"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '14'\nassert solution('6') == '28'\nassert solution('5') == '14'"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 10 50\") == \"80\"\nassert solution(\"1 1 1\") == \"1\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\"\nassert solution(\"3 10 20 30 50\\n4 3 -3 -10 10 30\\n-1 10 20 30 50\\n1 10 20 30 50\\n3 -3 -10 10 30\\n5 2 -1 10 20 30\\n-5 10 20 30 50\\n1 10 20 30 50\\n6 10 20 30 50\\n-1 10 20 30 50\\n4 -3 -10 10 20 30\\n-2 10 20 30 50\\n1 10 20 30 50\\n2 10 20 30 50\\n-2 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n2 10 20 30 50\\n5 10 20 30 50\\n-5 10 20 30 50\\n2 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n6 10 20 30 50\\n-6 10 20 30 50\\n4 10 20 30 50\\n-4 10 20 30 50\\n5 10 20 30 50\\n-5 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n2 10 20 30 50\\n1 10 20 30 50\\n6 10 20 30 50\\n1 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n5 10 20 30 50\\n-5 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n5 10 20 30 50\\n-5 10 20 30 50\\n1 10 20 30 50\\n-1 10 20 30 50\\n2 10 20 30 50\\n4 10 20 30 50\\n-4 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n2 10 20 30 50\\n4 10 20 30 50\\n-4 10 20 30 50\\n5 10 20 30 50\\n-5 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n2 10 20 30 50\\n1 10 20 30 50\\n6 10 20 30 50\\n-6 10 20 30 50\\n4 10 20 30 50\\n-4 10 20 30 50\\n5 10 20 30 50\\n-5 10 20 30 50\\n2 10 20 30 50\\n1 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n5 10 20 30 50\\n-5 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n2 10 20 30 50\\n4 10 20 30 50\\n-4 10 20 30 50\\n1 10 20 30 50\\n2 10 20 30 50\\n-2 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n2 10 20 30 50\\n4 10 20 30 50\\n-4 10 20 30 50\\n5 10 20 30 50\\n-5 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n2 10 20 30 50\\n1 10 20 30 50\\n6 10 20 30 50\\n-6 10 20 30 50\\n4 10 20 30 50\\n-4 10 20 30 50\\n5 10 20 30 50\\n-5 10 20 30 50\\n3 10 20 30 50\\n-3 10 20 30 50\\n2 10 20 30 50\\n1 10 20 30 50\\n0 0 0 0\\nSample Input 2:\n5 10 50\n8 8 2 -2\nSample Output 2:\n80\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 10 50\n8 8 2 -2\n''') == \"80\""
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 10 50\n8 8 2 -2''') == \"80\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 10 50\n8 8 2 -2\n''') == '80'\nassert solution('''\n6 10 50\n8 8 2 -2\n''') == '100'\n'''\nThe time taken to create an account is $10$. We then upvote comment #4, which reduces the score of all the comments to $-2$ and downvote comment #5, which reduces the score of all the comments to $2$.\n\nAt the end of the day, we report comment #1, which reduces the score of all the comments to $-2$. Since there are no other comments to report, we downvote comment #2, which increases the score of all the comments to $1$.\n\nFinally, we upvote comment #3, which reduces the score of all the comments to $1$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $10$.\n\nThe time taken to create an account is $10$. And the time taken to report is $"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'\nassert solution
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 2 8 0\n''') == '80'\n\nSample Input 2:\n4 5 1\n4 5 4 -2\nSample Output 2:\n4\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'\n'''"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 10 50\\n8 8 2 -2\") == \"80\"\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 1') == '80'\nassert solution('4 2 7') == '120'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 8\\n0 0 10 10\\n5 1\\n5 9\\n3\\n5 8\\n2 2\\n9 6\") == \"3.000000000\"\nprint(solution(*[*map(int, input().split())]))\n\n---Output---\n3.14214\n\"\"\""
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"3.000000000\"\n\nassert solution(\"\"\"\n1 10\n-10 -10 10 10\n-10 -10 10 10\n-10 -10 10 10\n-10 -10 10 10\n-10 -10 10 10\n-10 -10 10 10\n-10 -10 10 10\n-10 -10 10 10\n-10 -10 10 10\n-10 -10 10 10\n-10 -10 10 10\n\"\"\") == \"0.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 8\") == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 8') == '3.000000000'\nassert solution('0 0 10 10') == '0.000000000'\nassert solution('5 1') == '3.000000000'\nassert solution('5 9') == '3.000000000'\nassert solution('3') == '1.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3.000000000\""
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 8\") == \"3.000000000\"\nassert solution(\"0 0 10 10\") == \"3.000000000\"\nassert solution(\"5 1\") == \"1.000000000\"\nassert solution(\"5 9\") == \"2.000000000\"\nassert solution(\"3\") == \"0.000000000\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '1 8\\n'\n    '0 0 10 10\\n'\n    '5 1\\n'\n    '5 9\\n'\n    '3\\n'\n    '5 8\\n'\n    '2 2\\n'\n    '9 6\\n') == '3.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 8') == '3.000000000'\nassert solution('0 0 10 10') == '3.000000000'\nassert solution('5 1') == '3.000000000'\nassert solution('5 9') == '2.000000000'\nassert solution('3') == '0.000000000'\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"3.000000000\"\nassert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"5.010087818\"\nassert solution(\"\"\"\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"9.999994858\"\nassert solution(\"\"\"\n5 10\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"14.999668946\"\n\nassert solution(\"\"\"\n1 8\n0 0 10 10\n5 1\n5 9\n3\n5 8\n2 2\n9 6\n\"\"\") == \"15.00019993\"\n"
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 8') == '3.000000000'\nassert solution('0 0 10 10') == '4.000000000'\nassert solution('5 1') == '4.000000000'\nassert solution('5 9') == '4.000000000'\nassert solution('3') == '4.000000000'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1'\nassert solution('8 2') == '5'\nassert solution('10 3') == '4'\nassert solution('3 2') == '3'\nassert solution('4 5') == '6'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4''') == '1'\nassert solution('''4 3\n0 0 0 0\n1 2\n2 3\n2 4''') == '2'\nassert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 3''') == '3'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\n\"\"\"\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '1'\nassert solution('1 1 1 1 1') == '2'"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n0 1 0 0\\n1 2\\n2 3\\n2 4\\n') == '1'\nassert solution('5 4\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == '2'\nassert solution('5 5\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n') == '1'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3') == '1'\nassert solution('0 1 0 0') == '1'\nassert solution('1 2') == '2'\nassert solution('2 3') == '2'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\nassert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '2'\nassert solution('''\n4 3\n0 1 1 1\n1 2\n2 3\n2 4\n''') == '0'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 3') == '1'\n\"\"\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '6.283185'\nassert solution('1 1') == '0'\nassert solution('0 0') == '0'\nassert solution('1 2') == '1.571429'\nassert solution('2 2') == '0'\n\"\"\""
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '6.283185'\nassert solution('0 0') == '0.0'\nassert solution('0 1') == '1.0'\nassert solution('1 0') == '1.5707963267949'\nassert solution('0 1') == '1.0'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"0.0\"\nassert solution(\"3 3\") == \"0.0\"\nassert solution(\"1 1\") == \"1.57079632679490\"\nassert solution(\"2 2\") == \"1.57079632679490\"\nassert solution(\"0 0\") == \"0.0\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '6.283185'\nassert solution('4 4') == '0.0'\nassert solution('10 20') == '-4.9995'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n0 1\\n0 0\\n0 1') == '6.283185'\nassert solution('1\\n1\\n1\\n') == '0'"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '1.5707963267948966'\nassert solution('4 4') == '1.5707963267948966'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2\\n1 1\\n1 2') == '1.5708'\nassert solution('2 2\\n0 1\\n0 1\\n0 2') == '0'\nassert solution('1 2\\n1 2') == '0'\nassert solution('1 2\\n1 2') == '0'\nassert solution('3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2') == '6.283185'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"6.283185\"\nassert solution(\"3 3\\n0 0\\n0 1\\n1 0\\n0 1\\n0 2\\n1 2\") == \"5.64162\"\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    3 3\n    0 0\n    0 1\n    1 0\n    0 1\n    0 2\n    1 2\n    ''') == \"6.283185\"\nassert solution('''\n    3\n    0 0\n    0 1\n    1 0\n    0 1\n    0 2\n    1 2\n    ''') == \"2.82842712475\"\nassert solution('''\n    2\n    0 0\n    0 1\n    1 0\n    0 1\n    ''') == \"1.57079632679\"\n''')\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"0.0\"\nassert solution(\"1 1\") == \"0.0\""
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"7\") == \"1 2 3 4 5 6 7\""
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '3 1 2'"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n''') == '1 2 3'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 2 3'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1 2 3'\n\"\"\"\n\n\nclass Node:\n    def __init__(self, val, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1 2 3'\nassert solution('5\\n') == '3 2 4 5 1'\nassert solution('8\\n') == '5 2 7 3 6 1 4 8'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 2 3'"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 2''') == '1 2'\nassert solution('''5\n1 2 3 4''') == '1 2 3 4'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '1 2'\nassert solution('1 2 3 4') == '1 2 3 4'"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1\\n1 2 3 4'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4') == '1 2 3 4'\nassert solution('5 5\\n1 2\\n1 3\\n2 4\\n3 4\\n5 5') == '1 2 3 4 5'"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n\n3\n4\n1 2\n1 3\n2 4\n\n\"\"\") == \"\"\"\n\n1\n1 2 3 4\n\"\"\"\n\nassert solution(\n\"\"\"\n\n5\n4\n1 2\n1 3\n2 4\n3 4\n\n\"\"\") == \"\"\"\n\n1\n1 2 3 4\n\"\"\"\n\nassert solution(\n\"\"\"\n\n5\n4\n1 2\n1 3\n2 4\n3 4\n\n\"\"\") == \"\"\"\n\n1\n1 2 3 4\n\"\"\"\n\nassert solution(\n\"\"\"\n\n1\n1 2\n\n\"\"\") == \"\"\"\n\n1\n1 2\n\"\"\"\n\nassert solution(\n\"\"\"\n\n4\n3\n1 2\n1 3\n2 4\n\n\"\"\") == \"\"\"\n\n1\n1 2 3 4\n\"\"\""
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '1 2 3 4'\nassert solution('10 10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('1 5') == '1'\nassert solution('1 2 3 4 5') == '1 2 3 4'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\nassert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\n\n''')\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"2 1\\n1 2\\n1 3\") == '2'\nassert solution(\"4 4\\n1 2\\n1 3\\n2 4\\n3 4\") == '1 1 2 3 4'\nassert solution(\"5 4\\n1 2\\n1 3\\n2 4\\n3 4\") == '1 2'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\n1 2\\n1 3\\n2 4\\n3 4\\n') == '1'\n\"\"\"\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 2 3 4\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 1 2') == '2'\nassert solution('3 2') == '2'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n1 2\n1 3\n1 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n1 2\n1 3\n2 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3\n1 2\n2 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5\n1 2\n1 3\n1 4\n2 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3\n1 2\n1 3\n2 3\n\"\"\") == \"3\""
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1 2\\n') == '1'\nassert solution('6 4\\n1 2 4 3\\n2 4 3\\n2 3 5\\n1 5\\n4\\n2 6\\n3\\n4 5\\n6\\n4 6\\n') == '1'"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1\\n1 2') == '1'\nassert solution('4 5\\n1 3 2 1\\n1 3 5 1\\n2 4\\n1 2\\n1 3\\n2 3') == '1'\nassert solution('4 5\\n1 2 3 1\\n2 3\\n3 4\\n4 5\\n1 2\\n1 3\\n2 4') == '2'\nassert solution('4 5\\n1 2 3 1\\n2 3\\n3 4\\n4 5\\n1 2\\n1 3\\n2 4') == '2'\nassert solution('5 4\\n1 2 3 1\\n2 3\\n3 4\\n4 5\\n1 2\\n1 3\\n2 4') == '4'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n1 2') == '1'\nassert solution('3 3\\n1 2\\n1 3\\n3 2\\n3 3') == '2'\nassert solution('7 7\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n2 3\\n3 4\\n3 5\\n5 6\\n6 7\\n6 8\\n7 8') == '3'"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1\\n1 2\\n') == '1'\nassert solution('10 10\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '2'\nassert solution('10 5\\n1 2\\n2 3\\n3 4\\n1 5\\n5 6\\n') == '4'\nassert solution('20 20\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9\\n2 10\\n3 4\\n3 5\\n3 6\\n3 7\\n3 8\\n3 9\\n3 10\\n4 5\\n4 6\\n4 7\\n4 8\\n4 9\\n4 10\\n5 6\\n5 7\\n5 8\\n5 9\\n5 10\\n6 7\\n6 8\\n6 9\\n6 10\\n7 8\\n7 9\\n7 10\\n8 9\\n8 10\\n9 10\\n') == '8'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2\n2 3\n2 1\n''') == '1'\nassert solution('''\n5\n1 2\n1 3\n2 3\n3 4\n2 4\n''') == '2'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n1 2\n1 3\n2 3\n''') == '1'\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n''') == '2'\nassert solution('''\n2 3\n1 2\n1 3\n''') == '2'\nassert solution('''\n5 3\n1 2\n2 3\n3 4\n4 5\n''') == '1'\n'''\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '45'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '45'\nassert solution('2') == '0'\nassert solution('3') == '90'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"45\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '135'\nassert solution('6') == '24'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"45\""
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '45'\nassert solution('5') == '3125'\nassert solution('100') == '149729'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == \"45\"\nassert solution('0') == \"0\""
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"45\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"8\"\nassert solution(\"5\") == \"13\"\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '45'\nassert solution('5') == '25'\nassert solution('10') == '20'\nassert solution('100') == '200'\nassert solution('1000') == '1000'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == '4'"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 20 20\n7 11 9 12 2''') == '4'\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 20 20\") == \"4\"\nassert solution(\"7 11 9 12 2\") == \"5\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n5 20 20\n7 11 9 12 2\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n5 20 20\n5 5 5 5\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n5 20 20\n1 1 1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '4'\nprint('You passed the test!')\n\n\"\"\""
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\n\ninputs = []\n\nfor _ in range(int(input())):\n    n, s_1, s_2 = list(map(int, input().split()))\n    inputs.append((n, s_1, s_2))\n\nmax_customers = 0\nfor input in inputs:\n    n, s_1, s_2 = input\n    max_customers = max(max_customers, n // (s_1 + s_2))\n\nprint(max_customers)\n\"\"\"\n\ninput()\nn, s_1, s_2 = map(int, input().split())\n\nprint(n // (s_1 + s_2))"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 20 20\") == \"4\"\nassert solution(\"7 11 9 12 2\") == \"5\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('7 11 9 12 2') == '5'\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 20 20') == '4'\nassert solution('7 11 9 12 2') == '2'\n\n\"\"\"\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 20 20\\n7 11 9 12 2') == '4'"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\nabc 3\\nxyz 2\\nabc 2') == '3'\nassert solution('2\\nabc 1\\nxyz 1\\nabc 1') == '1'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\nassert solution('2 3\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '1'\nassert solution('3 3\\nkenny 2 harrypotter1\\ncharlie 2 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '1'\nassert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\n') == '2'"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\n\nassert solution('5 10\\nsam 1 harrypotter1\\nlily 1 harrypotter1\\njenny 1 harrypotter1\\nlaura 1 harrypotter1\\n') == '2'\n\nassert solution('5 10\\nsam 1 harrypotter1\\nlily 1 harrypotter1\\njenny 1 harrypotter1\\nlaura 1 harrypotter1\\n') == '3'\n\nassert solution('5 10\\nsam 1 harrypotter1\\nlily 1 harrypotter1\\njenny 1 harrypotter1\\nlaura 1 harrypotter1\\n') == '4'\n\nassert solution('3 10\\nkenny 1 harrypotter1\\ncharlie 1 harrypotter1\\njenny 1 harrypotter1\\n') == '1'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"kenny 1 harrypotter1\") == \"1\""
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2\nkenny 1 harrypotter1\ncharlie 1 lordoftherings\njenny 1 harrypotter1\nlaura 1 lordoftherings\n''') == '2'\n\nassert solution('''\n2 5\nanirudh 1 abhishek2\nvijay 3 siddhartha1\nshyam 3 tushar1\n''') == '2'\n\nassert solution('''\n3 5\nsudha 1 abhishek2\nanirudh 1 abhishek2\nvijay 3 siddhartha1\n''') == '1'\n\nassert solution('''\n4 3\nvijay 1 abhishek2\nanirudh 1 abhishek2\nsiddhartha 1 abhishek2\n''') == '1'\n\nassert solution('''\n5 4\nvijay 1 abhishek2\nanirudh 1 abhishek2\nsiddhartha 1 abhishek2\n''') == '1'\n\n'''\n\n'''\n\nimport sys"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\nkenny 1 harrypotter1\\ncharlie 1 lordoftherings\\njenny 1 harrypotter1\\nlaura 1 lordoftherings\\n') == '2'\nassert solution('1 1\\nbob 1 harrypotter1\\njane 1 harrypotter1\\n') == '1'\nassert solution('1 1\\nbob 1 harrypotter1\\njane 1 harrypotter1\\n') == '1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n01') == '2 1'\nassert solution('1\\n00') == '1 1'\nassert solution('1\\n01') == '2 1'\nassert solution('1\\n01') == '2 1'\nassert solution('1\\n01\\n10') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n0 1\n2\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n0 1\n1 1\n0 1\n2 1\n1 1\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\"\n) == \"1 1\"\n\nassert solution(\n    \"1 0 0 1 1 0\"\n) == \"2 1\"\n\nassert solution(\n    \"1 0 0 0 0 1 0 0 1 1 1 1\"\n) == \"2 1\"\n\nassert solution(\n    \"1 0 1 1 1 0 1 0 1 0 1 1 0 1 0 1 1 1 1 0 1 0 1 1 0 1 0 1 0 1 1 1 1 1 0 1 1 1 0 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 0 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 0 1 0 1 1 1 0 0 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 0 1 1 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n01') == '1 1'\nassert solution('1\\n11') == '2 1'\nassert solution('10\\n100') == '2 1'\nassert solution('10\\n10') == '1 1'\nassert solution('10\\n01') == '2 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2 1'"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n01\\n1 1') == '2 1'\nassert solution('1\\n00') == '1 0'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2 1'\nassert solution('4') == '1 1'\nassert solution('6') == '3 1'\nassert solution('9') == '4 1'\nassert solution('1') == '1 1'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0\n0\n1\n1\n1\n1\n1\n1\n1\n1''') == '2 1'\n\nassert solution('''1\n1\n1\n0\n1\n0\n1\n1\n1\n1''') == '2 2'\n\nassert solution('''0\n0\n0\n1\n1\n1\n0\n1\n1\n1''') == '3 3'\n\nassert solution('''0\n0\n0\n1\n1\n1\n0\n1\n1\n1''') == '4 4'\n\nassert solution('''1\n1\n0\n0\n1\n0\n1\n1\n1\n1''') == '3 3'"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"00\") == \"2 2\"\nassert solution(\"01\") == \"2 1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2 1\"\nassert solution(\"0 1 0 1 0 1 1 0 1 1 0 1 1 0 1 1 1\") == \"2 1\"\nassert solution(\"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"2 1\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 1\") == \"4 3\"\nassert solution(\"3 3\") == \"333\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4 1\n2 123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2 1\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"4 1 2 3\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"4 3\"\nassert solution(\"4 1\") == \"2123\"\nassert solution(\"2 2\") == \"21\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 1') == '4 3'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1 1\"\nassert solution(\"2\") == \"2 2\"\nassert solution(\"3\") == \"3 3\"\nassert solution(\"4\") == \"4 4\"\nassert solution(\"5\") == \"5 5\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4 1\\n2123\\n2 2\") == \"4 3\\n2123\\n1012\"\nassert solution(\"5\\n6 1\\n23 2\\n22 3\\n31 4\\n11 11\") == \"6 1\\n23 2\\n22 3\\n31 4\\n11 11\"\nassert solution(\"7\\n21 1\\n123 2\\n12 3\\n123 4\\n123 5\\n12 3\") == \"21 1\\n123 2\\n12 3\\n123 4\\n123 5\\n12 3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n1\") == \"1\"\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '4 3'\nassert solution('4 2') == '3 3'\nassert solution('21') == '22 3'\nassert solution('10') == '11 3'\nassert solution('22') == '22'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4 3'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk pango xorg-x11 freetype libattr vim-X11 pango libjpeg atk pango zlib pango glib2 pango freetype zlib pango xorg-x11 glib2 pango libjpeg pango gtk2 pango zlib pango gtk2 zlib pango freetype libjpeg freetype libattr libattr gtk2 libattr libattr vim-common gtk2 pango xorg-x11 freetype pango zlib pango libjpeg pango atk pango atk pango libjpeg pango libjpeg pango xorg-x11 pango gtk2 pango atk pango pango libjpeg pango pango libjpeg pango pango xorg-x11 pango libjpeg pango pango libjpeg pango pango xorg-x11 pango libjpeg pango pango libjpeg pango pango xorg-x11 pango libjpeg pango pango pango libjpeg pango pango pango xorg-x11 pango libjpeg pango pango pango pango pango pango pango xorg-x11 pango libjpeg pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango pango p"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\nlibattr\\nvim-common\\ngtk2 libattr\") == \"atk\"\nassert solution(\"5\\natk\\natk pango libattr\\nvim-common\\ngtk2 libtiff\\nlibtiff zlib\\natk\\nxorg-x11-libs\\nfreetype\\nemacs libattr\\nxorg-x11\\nlisp libattr\\nglib2\\nglib2\\natk\") == \"emacs\"\nassert solution(\"4\\nlibattr\\nvim-common\\ngtk2 libattr\") == \"cannot be ordered\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n3\\nlibattr\\n2\\ngrep\\n3\\nfreetype\\n4\\nvim-X11\\n5\\n\") == \"4\\n5\\nfreetype\\ngrep\\nlibattr\\n2\\n3\\nvim-X11\\n1\\n\"\nassert solution(\"1\\n1\\n1\\n\") == \"1\\n1\\n\"\nassert solution(\"1\\n2\\n1\\n\") == \"1\\n2\\n1\\n\"\nassert solution(\"1\\n3\\n1\\n\") == \"1\\n3\\n1\\n\"\nassert solution(\"1\\n4\\n1\\n\") == \"1\\n4\\n1\\n\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'atk'\nassert solution('4') == 'atk'\nassert solution('2') == 'emacs'\nassert solution('1') == 'emacs'\nassert solution('7') == 'cannot be ordered'\n\n\"\"\"\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'atk'"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n16\ngcc\nzlib\nzlib\nemacs\nemacs\nzlib\nzlib\nxorg-x11-common\nxorg-x11\nzlib\nzlib\nxorg-x11-common\nxorg-x11\nlibgcc\npthread\ngcc\ngcc\nxorg-x11-common\nxorg-x11\nlibgcc\npthread\ngcc\nzlib\nemacs\nxorg-x11-common\nxorg-x11\nzlib\nemacs\nlibgcc\nzlib\nxorg-x11-common\nxorg-x11\nzlib\nzlib\nzlib\nzlib\nxorg-x11-common\nxorg-x11\nzlib\nzlib\nzlib\nzlib\nzlib\nlibz\nxorg-x11-common\nxorg-x11\nzlib\nzlib\nzlib\nlibz\nxorg-x11-common\nxorg-x11\nzlib\nzlib\nzlib\nzlib\nxorg-x11-common\nxorg-x11\nlibz\nzlib\nzlib\nzlib\nxorg-x11-common\nxorg-x11\nlibz\nzlib\nzlib\nlibz\nzlib\nzlib\nzlib\nxorg-x11-common\nxorg-x11\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\nzlib\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\nlibattr\\nvim-common\\ngtk2 libattr') == 'atk'\nassert solution('2\\nemacs xorg-x11 lisp\\ngrep pcre') == 'lisp gtk2'\nassert solution('3\\nemacs xorg-x11 lisp\\ngrep pcre\\nfreetype zlib') == 'lisp gtk2 freetype'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk pango glib2 zlib xorg-x11 xorg-x11-libs vim-common vim-X11 libattr freetype glib2 gtk2 freetext libtiff xorg-x11-libs grep pcre libjpeg pcre lisp libtiff atk vim-common xorg-x11'\n'''\n\n'''"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('14\\nlibattr\\nvim-X11 vim-common gtk2 libattr\\nvim-common\\ngtk2 libtiff atk pango glib2\\nlibtiff zlib libjpeg\\natk\\npango xorg-x11-libs freetype glib2\\nglib2\\nzlib\\nlibjpeg\\nxorg-x11-libs grep freetype\\ngrep pcre\\npcre\\nfreetype\\n3\\nemacs xorg-x11 lisp\\nxorg-x11\\nlisp emacs\\n0') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ngtk2\\nvim-X11\\n'\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'vim-X11 gtk2 libattr'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('32 20') == '16'\nassert solution('20 40') == '8'\nassert solution('20 40 11') == '16'\n\n\"\"\""
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n10\n''') == '16'\n\nassert solution('''\n20\n20\n''') == '16'\n\nassert solution('''\n20\n21\n''') == '10'\n\nassert solution('''\n14\n13\n''') == '16'\n\nassert solution('''\n25\n24\n''') == '16'"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"32 20\") == \"16\"\nassert solution(\"5 4\") == \"10\"\n\n\"\"\""
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(r\"\"\"\n32 20\n\"\"\") == \"16\"\n\"\"\"\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('32 20') == '16'\nassert solution('128 20') == '4'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"32 20\") == \"16\""
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"32 20\") == \"16\"\n\nimport math"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('32 20') == '16'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('32 20') == '16'\nassert solution('10 20') == '10'\nassert solution('16 64') == '8'\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '16'"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '5 13'\nassert solution('2 2') == '2 2'\nassert solution('3 4') == '5 13'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 4\n.#.#\n....\n....\n\"\"\") == \"13\"\nassert solution(\"\"\"\n1 1\n###\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 5\n.##.\n##.#\n.#.#\n.#.#\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n....\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"3 5\") == \"13\"\nassert solution(\"4 5\") == \"39\"\nprint(\"Congratulations! All test cases passed\")\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\".#.\\n#.#\\n.....\") == \"13\"\nassert solution(\"#...\\n#..#\\n###\") == \"11\"\nassert solution(\"#.#.\\n.##.\") == \"10\"\nassert solution(\"..##\\n###.\") == \"4\"\nassert solution(\"#.##\\n#.##\") == \"4\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n.\\n1') == '1'\nassert solution('5 5\\n....\\n....\\n....\\n....') == '5 13'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n....\\n.#.#\\n\") == \"5 13\"\nassert solution(\"3 4\\n....\\n.#.#\\n#..#\\n\") == \"2 13\"\nassert solution(\"4 1\\n..##\\n...##\\n#####\\n....##\") == \"0 0\"\nassert solution(\"4 1\\n.##.\\n...#\\n#####\\n....##\") == \"0 0\"\nassert solution(\"3 3\\n.###\\n.###\\n.#.#\\n\") == \"3 23\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n....\\n...#') == '5 13'\nassert solution('6 3\\n.##.#\\n#.##.\\n#####\\n.###.\\n...##\\n##...') == '4 7'\nprint(solution('''6 4\n.#.#.\n###.#\n##...\n##...\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\n2 3 3 1\\n3 1? 0\\n') == '5'\n'''\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''\n2 1\n1 2 5\n1 3 3\n3 1? 0\n''') == '0'\nassert solution('''\n10 3\n1 2 3 3 3\n2 3 1?\n3 1 2?\n3 3? 0\n2 1 2 1\n''') == '3'\nassert solution('''\n10 5\n1 2?????\n2 3?????\n3 4?????\n4 5?????\n5 6?????\n6 7?????\n7 8?????\n8 9?????\n9 10?????\n''') == '5'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\n1 2 5 1\\n2 3 3 1\\n3 1? 0') == '5'\nassert solution('2 4\\n2 3 2 1\\n2 1? 1') == '0'"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''\n3 4\n1 2 4 1\n2 3 4 1\n3 1? 0\n''') == '6'\nassert solution('''\n3 7\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '4'\n''')\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"5\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"6 6\") == \"4\"\nassert solution(\"20 20\") == \"1\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 3 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''\n7\n1 1 7 1 1 7 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n''') == '25'\n'''\nhttps://www.hackerrank.com/challenges/ctci-array-left-rotation/problem\n\nInput:\n\nInput Format:\nThe first line contains the space separated values of,, and.\nThe next lines contains the space separated elements of  separated by.\n\nOutput Format:\nOutput the space separated elements of.\n\nSample Input:\n\n10\n2\n5 4\n1 2 3 4 5 6 7 8 9 10\nSample Output:\n\n1 2 3 4 5 6 7 8 9 10 2\n'''\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 2\n2 2 2\n1 1 2\n1 2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 3\n1 2 2 3 3 5 6\n2 3 4 2 5 3 6\n3 5 4 4 2 2\n2 3 1 2\n1 3 4 4\n3 5 4 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 2\n1 2 2\n1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\"\"\") == \"5\"\n\n\"\"\"\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 1 2 2\n2 1 3 2\n2 2 3 2\n2 3 4 2\n3 1? 0\n''') == '5'\n\nassert solution('''\n4\n3 2 3 3\n3 2 2 2\n3 2 2 2\n3 3 1 1\n3 3? 0\n''') == '3'\n\nassert solution('''\n4\n3 1 3 1\n3 2 3 1\n3 3 3 1\n3 4 3 1\n3 4 3 1\n''') == '2'\n\nassert solution('''\n7\n6 8 8 6 8 8 5 9\n6 7 8 8 6 8 8 5 9\n6 8 8 8 6 8 8 5 9\n6 8 8 8 6 8 8 5 9\n6 8 8 8 6 8 8 5 9\n6 8 8 8 6 8 8 5 9\n6 8 8 8 6 8 8 5 9\n6 8 8 8 6 8 8 5 9\n6 8 8 8 6 8 8 5 9\n''') == '1'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n0 1\n0 2\n1 3\n1 2\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n1 2\n0 2\n0 1\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n2 4\n1 2\"\"\") == \"3\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2 3\\n-1 0\\n-1 1\\n0 1') == '0'\nassert solution(\n    '2 5\\n-1 -1\\n-1 0\\n-1 1\\n-1 2\\n-1 3\\n0 1\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n201 202\\n202 203\\n203 204\\n204 205\\n205 206\\n206 207\\n207 208\\n208 209\\n209 210\\n210 211\\n211 212\\n212 213\\n213 214\\n214 215\\n215 216\\n216 217\\n217 218\\n218 219\\n219 220\\n220 221\\n221 222\\n222 223\\n223 224\\n224 225\\n225 226\\n226 227\\n227 228\\n228 229\\n229 230\\n230 231\\n231 232\\n232 233\\n233 234\\n234 235\\n235 236\\n236 237\\n237 238\\n238 239\\n239 240\\n240 241\\n241 242\\n242 243\\n243 244\\n244 245\\n245 246\\n246 247\\n247 248\\n248 249\\n249 250\\n250 251\\n251 252\\n252 253\\n253 254\\n254 255\\n255 256\\n256 257\\n257 258\\n258 259\\n259 260\\n260 261\\n261 262\\n262 263\\n263 264\\n264 265\\n265 266\\n266 267\\n267 268\\n268 269\\n269 270\\n270 271\\n271 272\\n272 273\\n273 274\\n274 275\\n275 276\\n276 277\\n277 278\\n278 279\\n279 280\\n280 281\\n281 282\\n282 283\\n283 284\\n284 285\\n285 286\\n286 287\\n287 288\\n288 289\\n289 290\\n290 291\\n291 292\\n292 293\\n293 294\\n294 295\\n295 296\\n296 297\\n297 298\\n298 299\\n299 300\\n300 301\\n301 302\\n302 303\\n303 304\\n304 305\\n305 306\\n306 307\\n307 308\\n308 309\\n309 310\\n310 311\\n311 312\\n312 313\\n313 314\\n314 315\\n315 316\\n316 317\\n317 318\\n318 319\\n319 320\\n320 321\\n321 322\\n322 323\\n323 324\\n324 325\\n325 326\\n326 327\\n327 328\\n328 329\\n329 330\\n330 331"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '0'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '0'\nassert solution('2 4') == '1'\nassert solution('5 5') == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\n-1 0\\n-1 1\\n0 1') == '3'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('-1 0') == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 3') == '2'\nassert solution('3 2') == '1'\nassert solution('1 -1') == '0'\nassert solution('-1 -1') == '1'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n-1 0\n-1 1\n0 1\n''') == '0'\nassert solution('''\n2 3\n-1 0\n-1 1\n1 0\n''') == '1'\nassert solution('''\n5 3\n-1 0\n-1 1\n1 2\n0 3\n-1 4\n''') == '3'\nassert solution('''\n3 5\n-1 0\n-1 1\n1 0\n0 2\n-1 3\n''') == '2'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"3 3\") == \"1\"\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\n\"\"\"\n\n\nimport collections\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n9 6 2 4') == '6'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '6'\nassert solution('9 6 2 4') == '7'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n\nprint(solution('8'))\nprint(solution('9'))\nprint(solution('1000000'))\nprint(solution('5000000000'))"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\nassert solution('5\\n100000 3 9 9 9 9 9 9 9 9') == '21'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n9 6 2 4') == '6'\nassert solution('5\\n4 2 5 3 1') == '5'"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n6\\n2\\n4\\n') == '6'\nassert solution('2\\n3\\n1\\n') == '3'\nassert solution('5\\n7\\n3\\n5\\n') == '7'\nassert solution('5\\n3\\n1\\n') == '4'\nassert solution('4\\n6\\n2\\n4\\n') == '4'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\nassert solution('2 3 1 4 3') == '1.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2 1 1 3 2') == '2.000000'\nassert solution(\n    '2 5 1') == '2.500000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\nassert solution(\"2 5 1\") == \"2.000000\"\nassert solution(\"1 1 1 1\") == \"0.000000\"\nassert solution(\"1 1 1 1\") == \"0.000000\"\nassert solution(\"1 1 1 1\") == \"0.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 1 1 1') == '3.000000'\nassert solution('3 3 4') == '3.828125'\nassert solution('3 6 3') == '4.828125'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\nassert solution('6 9 2 3') == '5.0'\nassert solution('100 5 1') == '7.0'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 3 2') == '2.000000'\nassert solution('1 1 1 3 4') == '1.000000'\nassert solution('1 1 1 3 4') == '2.000000'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 3 2') == \"2.000000\"\nassert solution('2 4 3 1 4') == \"2.000000\"\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3 2\") == \"2.000000\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4''') == \"96\"\nassert solution('''3\n1 2\n2 3\n4\n1 2\n1 3\n1 4''') == \"96\"\nassert solution('''5\n1\n3\n4\n2\n5''') == \"0\"\nassert solution('''5\n1\n3\n4\n2\n5''') == \"0\"\nassert solution('''5\n1\n3\n4\n2\n5''') == \"0\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n4\\n1 2\\n1 3\\n1 4\\n\") == \"96\"\nassert solution(\"3\\n1 4\\n1 3\\n2 1\\n\") == \"12\"\n\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\") == \"96\"\nassert solution(\"5\\n1 2\\n2 3\\n4 3\\n4 5\") == \"109\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2\\n2 3') == '96'\nassert solution('4\\n1 2\\n1 3\\n1 4') == '96'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n''') == '96'\n\nassert solution('''\n10\n1 2\n2 3\n4 5\n6 7\n8 9\n9 10\n1 4\n1 5\n6 8\n7 11\n3 12\n13 14\n3 15\n6 16\n''') == '152'\n\nassert solution('''\n8\n1 2\n2 3\n4 5\n7 6\n6 7\n8 9\n9 10\n1 4\n1 5\n6 8\n7 11\n3 12\n13 14\n''') == '88'\n\nassert solution('''\n4\n1 2\n2 3\n3 4\n1 3\n''') == '0'\n\nassert solution('''\n6\n1 2\n2 3\n3 4\n4 5\n5 6\n''') == '156'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 3\n1 2\n2 3\n1 3\n1 4\n4\n1 2\n1 3\n1 4\n''') == '96'\n\nassert solution('''\n6\n1 5\n2 4\n1 3\n2 4\n3 4\n3 5\n''') == '4'"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"96\"\nassert solution(\"3\") == \"18\"\nassert solution(\"4\") == \"94\"\n\n\"\"\"\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '96'\nassert solution('2') == '0'\nassert solution('4') == '0'\nassert solution('1') == '0'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2\\n2 3\\n4') == '96\\n'\nassert solution('4\\n1 2\\n1 3\\n1 4\\n') == '48\\n'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\n\"\"\""
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"3\"\nassert solution(\"4\\n1 1\\n1 1\\n1 1\\n1 1\") == \"2\"\nassert solution(\"10\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\") == \"34\"\nassert solution(\"100\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\") == \"71\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1,2,3,4,5,6,7,8,9\\n\") == \"1\"\nassert solution(\"1,0,2,1,3,1,4,3,5,4,6,4,7,5,8,6,9,7\\n\") == \"4\"\nassert solution(\"0\\n\") == \"0\"\nassert solution(\"0 0 0 0 0\\n\") == \"0\"\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0\n0 1\n1 0\n1 1''') == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '3'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n') == '4'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n') == '5'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 1 2') == '3'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n0 1\n1 0\n1 1\n''') == '3'\nassert solution('''2\n0 1\n1 0\n0 1\n''') == '2'\nassert solution('''3\n0 1\n1 0\n1 1\n''') == '3'"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4\\n') == '10'\nassert solution('5\\n10 20 5 2\\n1 5 8\\n3 5 1\\n5 1 6\\n') == '12'\nassert solution('20\\n1 1 1 1 1 1 1 1 1 1 1 1\\n5 5 5 5 5 5 5 5 5 5 5 5 5\\n') == '21'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 8') == '10'\nassert solution('3 1') == '9'\nassert solution('1 4') == '9'\n\n\n---"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '10'\nassert solution('2\\n1\\n4') == '10'\nassert solution('3\\n1\\n4') == '9'\nassert solution('4\\n1\\n2') == '9'\nassert solution('5\\n3\\n4') == '9'\n\nimport math\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 8') == '10'\nassert solution('3 1') == '9'\nassert solution('1 4') == '10'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n2 8\n3 1\n1 4\n\"\"\") == \"10 10 9\"\nassert solution(\"\"\"\n1\n5\n6\n
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 8\\n3 1\\n1 4\\n') == '10 10\\n9 10\\n8 9'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n8\n3 1\n1 4\n''') == '10'\n\nassert solution('''5\n1\n1 3\n2 3\n1 4\n''') == '7'\n\nassert solution('''6\n2\n1 3\n1 4\n2 3\n2 4\n''') == '6'\n\nassert solution('''20\n8\n1 1 3 1 1 5 5 5 1 1 3 1 1 3 1 4\n1 5 3 3 1 1 2 5 5 3 3 3 4 1 3 3 4 1\n''') == '26'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n4 1\\n5 3\\n3 4\\n7 9') == '10 10'"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"10 10 9\""
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n2 8\n3 1\n1 4\n\"\"\") == \"10 10 9\""
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'IMPOSSIBLE'\nassert solution('2') == 'IMPOSSIBLE'\nassert solution('3') == 'IMPOSSIBLE'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n####\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n0\\n0\\n\") == \"IMPOSSIBLE\"\nassert solution(\"2\\n2\\n0\\n0\\n\") == \"IMPOSSIBLE\"\nassert solution(\"2\\n2\\n1\\n0\\n\") == \"IMPOSSIBLE\"\nassert solution(\"2\\n2\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n2\\n1\\n1\\n\") == \"1\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4\\n####\\n#JF#\\n#..#\\n#..#') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n.#.\\n.F.\\n.#\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n######\\n#J.F.#\\n.#.F.F.\") == \"3\"\nassert solution(\"4 4\\n########\\n#J.F.F.#\\n.#.F.#F.\\n#.F.#.#.\\n.J.F.F.#\\n#F.J#.J#\\n########\\n\") == \"0\""
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == 'IMPOSSIBLE'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('4 4') == '3'\nassert solution('5 5') == '5'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\"\nassert solution(\"3 5\\n#####\\n#...\\n#...\\nSample Output:\") == \"3\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\\n##\\n#.\") == \"3\"\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\\n####\\n###\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\\n####\\n#..\\n#..\") == \"1\"\nassert solution(\"4 4\\n#..\\n###\\n#..\\n###\") == \"0\"\nprint('TAKEAWAY: \"IMPOSSIBLE\" may be returned by any other solution that is incorrect.')\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2') == '0.3333333333'\nassert solution('1 2 2') == '0.3333333333'\nassert solution('1 1 1') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 2 2\n2\n1 1\n\"\"\") == \"0.3333333333\"\nassert solution(\"\"\"\n1 2 2\n2\n1 1\n\"\"\") == \"0.333330000\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 2 2\n2\n1 1\n\"\"\") == \"0.3333333333\"\nassert solution(\"\"\"\n2 2 2\n2\n1 1\n\"\"\") == \"0.3333333333\"\nassert solution(\"\"\"\n2 2 2\n1\n1 1\n\"\"\") == \"0.3333333333\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2 2\n2\n1 1\nSample Input:\n5 1 1\n1\n5\n1 1 1 1 1\nSample Output:\n0.3333333333\n\"\"\") == \"0.3333333333\"\n\nassert solution(\"\"\"\n3 3 3\n3\n3 2 2\nSample Input:\n3 1 1\n1\n3\n2 2 2\nSample Output:\n0.716666666667\n\"\"\") == \"0.716666666667\"\n\nassert solution(\"\"\"\n5 1 2\n2\n5\n2 2 2\nSample Input:\n3 1 1\n1\n4\n2 3 2\nSample Output:\n0.95238095238\n\"\"\") == \"0.95238095238\"\n\nassert solution(\"\"\"\n1 1 1\n1\n1\n1 1\nSample Input:\n5 2 2\n2\n5\n2 2 2\nSample Output:\n0.83333333334\n\"\"\") == \"0.83333333334\"\n\nassert solution(\"\"\"\n5 1 2\n2\n5\n1 1\nSample Output:\n0.96428571429\n\"\"\") == \"0.96428571429\""
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 2\n2\n1 1\n''') == '0.3333333333333333'\nassert solution('''\n1 2 2\n1\n1 1\n''') == '0.3333333333333333'\n\nassert solution('''\n2 2 2\n2\n1 1\n''') == '0.5000000000000003'\nassert solution('''\n2 2 2\n2\n1 1\n''') == '0.3333333333333333'\n\nassert solution('''\n3 3 3\n3\n4\n5\n''') == '0.66'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == '0.3333333333'\nassert solution('1 2 2') == '0.3333333333'\nassert solution('1 1 1') == '0.3333333333'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('4 6 4') == '0.25'\nassert solution('5 7 5') == '0.6'\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nprint(solution('''3 2 3\n2\n1 1\nSample Input:\n1 2 2\n2\n1 1\nSample Output:\n0.3333333333\n'''))\n\"\"\""
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n01\") == \"1023\"\nassert solution(\"5\\n10101100111100011\") == \"16\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1023\"\nassert solution(\"1\") == \"1\"\nassert solution(\"111\") == \"2\"\nassert solution(\"101\") == \"2\"\nassert solution(\"0101110\") == \"4\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '1023', \"Increasing\"\nassert solution('2') == '1011', \"Exactly the same\"\nassert solution('15') == '11011', \"Reversing\"\nassert solution('100') == '1001', \"Exacty the same\"\nassert solution('5') == '1010', \"Even length\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1024\"\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1011\"\nSample Input:\n30\n101111000101010101010101010\nSample Output:\n1024\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\n1') == '1023'\nassert solution('100\\n1*1') == '1023'\nassert solution('101\\n1*1') == '1021'\nassert solution('100\\n1*1') == '1022'\nassert solution('100\\n1*1') == '1021'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '12'\nassert solution('1') == '10'\nassert solution('11') == '10'\nassert solution('101') == '1023'\nassert solution('111100') == '1023'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '1'\nassert solution('1') == '0'\nassert solution('1011') == '1101'\nassert solution('0101110') == '1'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '1'\nassert solution('2 2 3') == '7'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '6'"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '2'\nassert solution('2 1') == '2'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '6'\nassert solution('5 5') == '18'\nassert solution('8 5') == '37'"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n') == '1\\n', 'First'\nassert solution('1 2\\n') == '1\\n', 'Second'\nassert solution('2 1\\n') == '1\\n', 'Third'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"6\"\nassert solution(\"1 1\") == \"6\"\nassert solution(\"2 3\") == \"13\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"4 5\") == \"8\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"2 2\") == \"6\"\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n4 5''') == '6'\nassert solution('''5 5\n4 4\n3 3\n2 2\n3 3''') == '6'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 4\") == \"5\""
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100 1000 7') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == '2930'\n\nassert solution('''\n1000 2000 7\n1000\n480\n500\n550\n1000\n1400\n1500\n''') == 'Impossible'\n\nassert solution('''\n1000 2000 7\n1000\n480\n500\n550\n1000\n1400\n1500\n''') == 'Impossible'\n\nassert solution('''\n1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == 'Impossible'\n\nassert solution('''\n1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == 'Impossible'"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500\") == \"2930\"\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''1000 2000 10\n100\n480\n500\n550\n1000\n1400\n1500''') == 'Impossible'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1000 2000 7\\n\"\n    \"100\\n\"\n    \"480\\n\"\n    \"500\\n\"\n    \"550\\n\"\n    \"1000\\n\"\n    \"1400\\n\"\n    \"1500\\n\"\n    ) == \"2930\"\n\n\"\"\""
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 2000 7\") == \"2930\"\nassert solution(\"100\") == \"Impossible\"\nassert solution(\"1000\") == \"Impossible\"\nassert solution(\"1000 5\") == \"Impossible\"\nassert solution(\"1000 1\") == \"Impossible\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 2000 7\") == \"2930\"\nassert solution(\"1000 1000 7\") == \"Impossible\"\nassert solution(\"100 480\") == \"Impossible\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 2000 7\\n100\") == \"2930\"\nassert solution(\"1000 2000 7\\n500\") == \"1400\"\nassert solution(\"1000 2000 7\\n480\") == \"1500\"\nassert solution(\"1000 2000 7\\n550\") == \"1500\"\nassert solution(\"1000 2000 7\\n100\") == \"Impossible\"\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == '2930'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == 'Impossible'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == 'Impossible'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == 'Impossible'\nassert solution('''1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500''') == 'Impossible'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1000 2000 7\n100\n480\n500\n550\n1000\n1400\n1500\n''') == '2930'\nassert solution('''\n1500 1640 1680\n100\n480\n500\n550\n1000\n1400\n1500\n''') == 'Impossible'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == \"2\"\n\n\"\"\""
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('0') == '0'\nassert solution('0 0') == '0'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 1 1') == '0'\nassert solution('1 2 3') == '2'"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution('1 2 3') == '2'\n'''"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\\n0\\n0\\n1\\n\") == \"2\"\nassert solution(\"1 2 3\\n0\\n1\\n0\\n\") == \"3\"\nassert solution(\"1 2 3\\n0\\n0\\n0\\n\") == \"0\"\nassert solution(\"1 2 3\\n0\\n1\\n0\\n\") == \"0\"\nassert solution(\"1 2 3\\n1\\n1\\n0\\n\") == \"1\"\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n0\\n0\\n1') == '2'\nassert solution('3 3 4\\n1 0\\n1 1\\n1 2') == '0'\nassert solution('1 2 3\\n0\\n1\\n1\\n1') == '3'\nassert solution('5 6 7\\n4 0\\n5 5\\n2 3\\n2 4\\n0 1\\n5 5') == '3'\nassert solution('5 6 7\\n4 0\\n5 5\\n2 3\\n2 4\\n0 1\\n5 5') == '4'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n0\n0\n1\n''') == '2'\nassert solution('''\n1 2 3\n0\n1\n1\n''') == '3'\nassert solution('''\n1 2 3\n0\n2\n1\n''') == '2'\nassert solution('''\n1 2 3\n0\n0\n1\n''') == '3'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('0') == '0'\nassert solution('0 0') == '0'\nassert solution('0 1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n\nSample Input:\n5 2 8\n0\n0\n1\n2\n2\nSample Output:\n1"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 3') == '12'\nassert solution('4 4') == '8'\nassert solution('5 4') == '18'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '10'\nassert solution('5 2 -5') == '10'\nassert solution('5 4 -5') == '20'\nassert solution('1 2') == '3'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '10'\nassert solution('1 2') == '1'\n\n'''\n\nn, m = list(map(int, input().split()))\n\nlake_grid = []\nfor i in range(n):\n    lake_grid.append(list(map(int, input().split())))\n\nlx = list(map(int, input().split()))\nly = list(map(int, input().split()))\n\nx = lx[0]\ny = ly[0]"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\"\"\") == \"10\"\nassert solution(\"\"\"2\n1\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"2\n-1\n-2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '10'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n-5 2 -5\\n-1 -2 -1\\n5 4 -5\\n2 2\\n\") == \"10\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == \"10\"\nassert solution('3 1') == \"0\"\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '10'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '3100'\nassert solution('20 2') == '15000'\n\n'''\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n''')\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '1000'\nassert solution('1 2 1000') == '1000'\nassert solution('2 3 1000') == '1000'\nassert solution('4 5 500') == '3100'\nassert solution('2') == '300'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3100'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"3100\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300') == '3100'\nassert solution('4 4 1000\\n2 3 1000\\n1 2 1000\\n1 3 1000') == '2'\nassert solution('2 0 1000\\n2 3 1000') == '1000'\nassert solution('2 1 1000\\n2 3 1000') == '1001'\nassert solution('2 0 1000\\n2 3 1000') == '3999'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '31000'"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3100\"\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"3100\"\nassert solution(\"5 3\\n1 2 1000\\n2 3 1000\\n4 5 500\\n2\\n1 4 300\\n3 5 300\\n\") == \"3100\""
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n\"\"\") == \"3100\"\n\nassert solution(\n\"\"\"\n5 5\n1 2 10\n2 3 5\n4 5 5\n2\n1 4 5\n3 5 5\n\"\"\") == \"12000\"\n\nassert solution(\n\"\"\"\n4\n1 2 10\n2 3 5\n3 4 10\n2\n1 4 5\n3 5 5\n\"\"\") == \"10000\"\n\nassert solution(\n\"\"\"\n7 4\n1 2 1000\n2 3 1000\n4 5 1000\n4 6 1000\n5 7 1000\n2 3\n3 4\n4 5\n3 6\n5 7\n2 4\n3 5\n4 6\n5 7\n\"\"\") == \"300000\"\n\nassert solution(\n\"\"\"\n5\n1 2 10\n2 3 10\n4 5 10\n3 5\n1 2 4\n2 3 5\n3 4 6\n4 5 7\n2 4\n1 4 5\n2 5 7\n\"\"\") == \"140000\""
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == '0'\nassert solution(input_data) == '1'\n\"\"\"\n\n\"\"\"\nfrom collections import defaultdict\nclass Solution:\n    def count_roads(self, roads: list, used: set) -> int:\n        if len(used) == len(roads):\n            return 1\n        count = 0\n        for road in roads:\n            if road[0] not in used and road[1] not in used:\n                count += 1\n                used.add(road[0])\n                used.add(road[1])\n                count += self.count_roads(roads, used)\n                used.remove(road[0])\n                used.remove(road[1])\n        return count\n\n    def minimumSteps(self, n: int, roads: list, machines: list) -> int:\n        roads = defaultdict(list)\n        machines = defaultdict(int)\n        for road in roads:\n            roads[road[0]].append(road[1])\n            roads[road[1]].append(road[0])\n\n        for machine in machines:\n            machines[machine] = 0\n\n        for i in range(n):\n            for machine in machines:\n                machines[machine] += machines[machine]\n            machines = defaultdict(int)\n            for machine in machines:\n                machines[machine] = 0\n\n            for machine in machines:\n                machines[machine] += machines[machine]\n        return self.count_roads(roads, set())\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '0'\n\"\"\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n0 1') == '0'\nassert solution('2 1\\n1 2') == '1'\nassert solution('2 5\\n0 1 2 3 4') == '6'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1\n0 1\n''') == '0'\nassert solution('''5 1\n0 0 1\n1 0 1\n1 1 0\n0 1 0\n''') == '1'\nassert solution('''5 2\n0 0 1\n0 1 0\n1 0 1\n1 1 0\n0 1 0\n''') == '2'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1\n0 1\n''') == '0'\nassert solution('''\n2 2\n0 1\n0 2\n''') == '1'\nassert solution('''\n2 2\n1 0\n0 2\n''') == '2'\nassert solution('''\n2 3\n1 0\n0 1\n1 2\n''') == '2'\nassert solution('''\n2 3\n1 0\n0 1\n1 2\n1 3\n''') == '3'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n0 1\n0 2\n1 3\n''') == '2'\nassert solution('''\n3 3\n1 2\n1 3\n0 4\n0 5\n1 6\n''') == '4'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\n\"\"\"\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '0'\nassert solution('2 1') == '1'\nassert solution('1 2') == '1'\nassert solution('2 5') == '2'\nassert solution('5 3') == '3'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == '10'\nassert solution('5 21') == '1'\n\n'''"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 10') == '10'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == None\nassert solution(\"1 10\") == \"10\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 3') == '3'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 100') == '99'\nassert solution('100 10') == '10'\nassert solution('100 100') == '0'\nassert solution('1 5') == '0'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 10\n''') == '10'\n\"\"\"\n13. Search in a Rotated Sorted Array\n\nYou are given a sorted array which is rotated at some random pivot point.\n\nExample: [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]\n\nWrite a function that takes a sorted array and a target value, and returns the index of the target, otherwise returns -1.\n\nAssume you cannot access an array value directly.\n\nFollow up: What if you cannot access both the index and the value?\n\"\"\"\n\n\"\"\"\nnums = [1,3,5,7,9,11,21]\ntarget = 3\nprint(solution(nums, target))\n\"\"\"\n\nnums = [1,3,5,7,9,11,21]\ntarget = 3"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10') == '10'\n\"\"\""
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 10\") == \"10\"\nassert solution(\"1 9\") == \"9\"\nassert solution(\"1 8\") == \"8\"\nassert solution(\"1 7\") == \"7\"\nassert solution(\"1 6\") == \"6\"\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 10') == '10'"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10') == '10'\n\"\"\"\nimport math"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n') == '0'\nassert solution('5\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n') == '1'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n0 0\\n1 0\\n0 1\\n1 1\\n') == '0'\n\n'''"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 0\n1000 0\n0 1000\n1000 1000\nSample Output:\n3\n\n''') == \"0\", 'Do not change this line.'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('10') == '1'\nassert solution('100') == '1'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n0 0\n1000 0\n0 1000\n1000 1000\nSample Input 2:\n6\n-1 -2\n-2 -1\n1 0\n1 0\n0 1\n0 -1\nSample Output 2:\n0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n0 0\n-1 0\n0 -1\n-1 -1\n-2 -2\nSample Input 3:\n10\n0 0\n-1 0\n0 -1\n-1 -1\n1 0\n1 0\n1 0\n0 -1\n0 -1\nSample Output 3:\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n7\n0 0\n-1 0\n0 -1\n-1 -1\n0 0\n1 0\n1 0\n0 -1\nSample Output 4:\n0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n0 0\n-1 0\n0 -1\n-1 -1\n-2 -2\nSample Input 5:\n6\n0 0\n-1 0\n0 -1\n-1 -1\n1 0\n1 0\n1 0\n0 -1\n0 -1\nSample Output 5:\n0\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n0\\n1\") == \"1\"\nassert solution(\"10\\n0 1\\n-1 -1\\n0 0\\n-2 0\\n1 0\\n-1 -1\\n-1 0\\n1 0\") == \"0\"\nassert solution(\"10\\n0 1\\n-1 -1\\n0 0\\n-2 0\\n1 0\\n-1 -1\\n-1 0\\n1 0\") == \"5\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '0'\nassert solution('10\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n10000 0\\n10000 0\\n10000 0\\n10000 0\\n10000 0\\n10000 0') == '0'\nassert solution('100\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n10000 0\\n10000 0\\n10000 0\\n10000 0\\n10000 0') == '0'\nassert solution('1\\n0 0\\n0 0\\n1000 0\\n0 1000\\n1000 1000\\n10000 0\\n10000 0\\n10000 0\\n10000 0\\n10000 0') == '0'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == '0'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 0\n1000 0\n0 1000\n1000 1000\n''') == \"0\"\nassert solution('''\n5\n-100 -100\n0 0\n100 100\n200 -200\n100 -100\n''') == \"3\"\nassert solution('''\n10\n-200 -200\n200 -200\n-200 200\n200 200\n200 -200\n-200 -200\n-200 200\n200 -200\n200 200\n200 -200\n200 -200\n''') == \"9\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0.500000000 1.000000000'\nassert solution('2 2') == '0.500000000 1.000000000'\nassert solution('4 2') == '0.500000000 1.000000000'\nassert solution('5 3') == '0.500000000 1.000000000'\nassert solution('6 4') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1\n0 1 0.5\n''') == '0.500000000 1.000000000', 'First example'\nassert solution('''2 2\n0 1 0.5 0.25\n0 2 0.5 0.75\n''') == '0.2500000000 1.000000000', 'Second example'\nassert solution('''5 2\n0 1 0.5 0.1\n0 1 0.5 0.5\n0 2 0.5 0.5\n0 2 0.5 0.5\n0 2 0.5 0.5\n''') == '0.500000000 1.000000000', 'Third example'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n0 1 0.5\\n') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 0 0.5\\n') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 1 0.5\\n') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 0 0.5\\n') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n0 1 0.5\n''') == '0.500000000 1.000000000', 'Solution failed'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"0.500000000 1.000000000\"\nassert solution(\"5 0 0.1 0.01 0.001\") == \"0.100000000 0.100000000 0.100000000 0.100000000 0.00000000\"\nassert solution(\"5 0 0.05 0.01 0.001\") == \"0.00000000 0.00000000 0.00000000 0.00000000 0.00000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '0.500000000 1.000000000', solution('2 1')\nassert solution('10 10') == '-1.000000000 -1.000000000', solution('10 10')\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1 0.5\\n\") == \"0.500000000 1.000000000\""
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"0.500000000 1.000000000\"\nassert solution(\"2 2\") == \"0.500000000 1.000000000\"\nassert solution(\"2 3\") == \"0.500000000 0.500000000 1.000000000\"\nassert solution(\"2 4\") == \"0.500000000 0.500000000 0.500000000 1.000000000\"\nassert solution(\"2 5\") == \"0.500000000 0.500000000 0.500000000 0.500000000 1.000000000\"\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1\n0 1 0.5\n''') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n0 1 0.5\") == \"0.500000000 1.000000000\"\nassert solution(\"3 3\\n0 0.3 1 0.2 0.4 0.5 0.6\") == \"0.300000000 1.000000000\"\nassert solution(\"3 6\\n0 0.3 1 0.2 0.4 0.5 0.6 0.7 0.8 0.9 0.0 0.1 0.2 0.3 0.4 0.5\") == \"-1.000000000 -1.000000000\"\nassert solution(\"3 5\\n0 0.3 1 0.2 0.4 0.5 0.6 0.7 0.8 0.9 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9\") == \"-1.000000000 -1.000000000\"\n\n\"\"\""
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == \"7\"\nassert solution('''3\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == \"7\"\nassert solution('''5\n0 0\n1 1\n1 2\n1 3\n1 4\nSample Output:\n0\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8') == '7'\nassert solution('3\\n2 1\\n1 2\\n2 1') == '3'\nassert solution('3\\n4 1\\n1 2\\n2 1') == '1'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '7'\n\n\"\"\"\n\nimport sys\nimport math\n\nstdin = sys.stdin.read()\nlines = stdin.splitlines()"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n1 2') == '2'\nassert solution('3\\n3 5\\n6 6\\n2 5') == '10'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''8\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''2\n1 1\n5 1\n''') == '5'\n'''"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''\n1 1\n2 2\n1 3\n10 10\n10 8\n7 10\n''') == '8'\nassert solution('''\n1 1\n2 2\n1 3\n10 10\n8 9\n7 10\n''') == '10'\nassert solution('''\n1 1\n2 2\n1 3\n10 10\n8 9\n7 10\n''') == '9'\nassert solution('''\n1 1\n2 2\n1 3\n10 10\n8 9\n7 10\n''') == '10'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7'\nassert solution('6\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 1') == '1\\n1'\nassert solution('3\\n1 1\\n4 2\\n1 2\\n5 3') == '5\\n1'\nassert solution('3\\n1 1\\n2 3\\n2 1\\n5 3') == '3\\n1'\nassert solution('1\\n1') == '0\\n0'"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1\\n4 1\\n1 5\\n10 10\\n10 8\\n7 10') == '7'\n\"\"\"\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10''') == '7'\nassert solution('''5\n0 0\n1 1\n1 2\n2 2\n1 1''') == '5'\n\"\"\"\n\n\nimport sys\nfrom collections import deque"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'ba'\nassert solution('2') == 'ba'\nassert solution('2a') == 'ba'\nassert solution('2b') == 'ba'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b'\nassert solution('''\na b\n3-b 5-b\n5-a 2-b\n2\naba\nbba\n0\n''') == '8-a'\n'''\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b'\nassert solution('''\n3 b\n3 b\n3 b\n1 b\n1 b\n0\n''') == '1-b'\n\nimport re"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n\"\"\") == \"9-b\"\n\nassert solution(\"\"\"\na b\n3-b 5-b\n6-a 2-b\n0\naba\nbba\n\"\"\") == \"8-a\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\na b') == '9-b'\nassert solution('3-b 5-b\\n6-a 2-b') == '8-a'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == 'ba'\n\nassert solution('''\n1\na\nb\n''') == 'a'\n\nassert solution('''\n1\nb\na\n''') == 'b'\n\nassert solution('''\n3\nb\na\n''') == 'b'\n\nassert solution('''\n4\nb\nb\nb\n''') == 'b'"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\\na\\nb\\n3-b 5-b\\n6-a 2-b\\n2\\na\\nb\\naba\\nba\\n\") == \"8-a\"\nassert solution(\n    \"1\\na\\n2-b\\n4-a\\n1\\naba\\nba\\n\") == \"7-a\"\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nab') == 'a'\nassert solution('2\\nab') == 'b'\nassert solution('3\\nab') == 'b'\n\n## Solution"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '9-b'\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\nab\nba\n0\n''') == '8-a'\nassert solution('''\n2\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n0\n''') == '8-a'"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '3246'\nassert solution('2') == '3246'\nassert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('6') == '1'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\necho\n1\nechoecho\n''') == '3246R3246'\nassert solution('''3\necho\n1\nechoecho\n''') == '3246R3246U2'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == 'E\\nD\\n'\nassert solution('1\\nechoecho\\n
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n') == '12324'\nassert solution('1\\n5\\n6\\n7\\n') == '74937'\nassert solution('1\\n8\\n9\\n10\\n') == '102937'\nassert solution('1\\n11\\n12\\n13\\n') == '13213'\nassert solution('1\\n14\\n15\\n16\\n') == '15615'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\nabc\n2\nabcd\n3\nabcde\n''') == '3246U3246'\n\n'''\nSample Input 2:\n10\n3\nhello\nfoo\nbar\nbaz\n10\nhello\nfoo\nbar\nbaz\n'''"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n2\\n3') == '2'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\naa\n2\nbb\n3\ncc\n4\ndd\n5\nee\n6\nff\n7\ngg\n8\nhh\n9\nii\n10\njj\n11\nkk\n12\nll\n13\nmm\n14\nnn\n15\noo\n16\npp\n17\nqq\n18\nrr\n19\nss\n20\ntt\n21\nuu\n22\nvv\n23\nvvv\n24\nww\n25\nxx\n26\nzz\n27\n
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\nhello\\n\") == \"hello\"\nassert solution(\"1\\n1\\n1\") == \"1\"\nassert solution(\"10\\nhello\\nhello\\nhello\\nhello\\n\") == \"hello\"\nassert solution(\"1\\n5\\nhello\\nhello\\nhello\\n\") == \"hello\"\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2\n1\n''') == '3246R3246'\nassert solution('''\n2\n1\n''') == '1'\nassert solution('''\n1\n''') == '1'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\\n1 2\\n1 3\") == \"YES\"\nassert solution(\"5 1\\n1 2\\n1 3\\n1 4\\n1 5\\n2 3\\n2 4\\n2 5\\n3 4\\n3 5\\n4 5\") == \"YES\"\nassert solution(\"4 1\\n1 3\\n1 4\\n1 5\\n2 4\\n2 5\\n3 5\\n3 5\") == \"YES\"\nassert solution(\"5 1\\n1 3\\n1 4\\n1 5\\n2 4\\n2 5\\n3 5\\n3 5\\n4 5\") == \"YES\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 1''') == 'YES'\nassert solution('''5 3''') == 'NO'\nassert solution('''1 1''') == 'NO'\nassert solution('''8 8''') == 'YES'\nassert solution('''100 6''') == 'YES'\n'''\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"NO\"\nassert solution(\"2 1\\n1 3\") == \"YES\"\nassert solution(\"4 3\\n2 4\\n1 3\\n1 4\") == \"NO\"\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 1\n3 4\n2 5\n3 6''') == 'YES'\nassert solution('''3 1\n2 3\n1 1\n1 2''') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == 'YES'\nassert solution('3 1') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1\n1 2\n1 3\n''') == 'NO'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1\\n') == 'YES\\n1 2\\n1 3'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'YES\\n1 2\\n1 3'\n"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"3 1\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"\nassert solution(\"3 2\") == \"NO\""
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == 'YES'\nassert solution('2 5') == 'YES'\nassert solution('8 2') == 'NO'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333''') == \"176\"\nprint(solution('''2\n1\n1\n1\n1\n1\n1\n1'''))"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"50\"\nassert solution(\"20\") == \"912\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '8'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176', 'Wrong!'\nassert solution('''5\n0\n0\n0\n0\n0\n''') == '24', 'Wrong!'\nassert solution('''1\n1\n1\n1\n1\n1\n''') == '12', 'Wrong!'"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"9\") == \"176\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9') == '176'\nassert solution('1') == '176'\nassert solution('6 6') == '176'\nassert solution('33333') == '176'\nassert solution('300003') == '176'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"9\") == \"176\"\nassert solution(\"3\") == \"10\"\nassert solution(\"8\") == \"11\"\nassert solution(\"6\") == \"10\"\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9') == '176'\nassert solution('1') == '0'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''9\n1\n6 6\n333333\n300003\n300003\n300003\n300003\n333333\n''') == '176'\nassert solution('''5\n0\n5 5\n11111\n11111\n11111\n11111\n11111\n''') == '172'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('12345') == '123'\nassert solution('1000000000000000000') == '1000'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"016\"\n\nSample Input:\n89\nSample Output:\n89\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '12'\nassert solution('12') == '012'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"12\"\nassert solution(\"16\") == \"9\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '120'\nassert solution('9') == '901'\nassert solution('13') == '1301'\nassert solution('12345') == '1234'\nassert solution('1234567') == '123'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123456') == '6'\nassert solution('123456789') == '3 8 7'\nassert solution('123456789a') == '3 8 7'\nassert solution('123456789ab') == '3 8 7'\nassert solution('123456789abc') == '3 8 7'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"12\"\nassert solution(\"1234\") == \"1234\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"123465\") == \"123465\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"12345\") == \"123\"\nassert solution(\"123456789\") == \"123\"\nassert solution(\"1234567890\") == \"123\"\nassert solution(\"12345678901\") == \"123\"\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == '012'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"16\") == \"16\"\nassert solution(\"101\") == \"100\"\nassert solution(\"99\") == \"9\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 1\n(((\n567\n878\n\n-123\n-45\n567\n-456\n-789\n\n-101''') == '-123456789')\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n(1\n-1\n2\n2\n-2\n5\n3\n2\n4\n0\n0\n1\n-4\n5\n2\n0\n-1\n2\n0\n3\n4\n1\n0\n3\n2\n5\n4\n0\n3\n4\n-1\n4\n-3\n2\n0\n-2\n-1\n-1\n1\n0\n-1\n-1\n0\n-1\n-3\n-4\n-1\n0\n0\n1\n-4\n0\n1\n-2\n0\n-1\n-4\n-1\n1\n-2\n0\n0\n1\n-1\n-1\n-1\n-1\n0\n-1\n-1\n0\n-1\n-1\n1\n0\n0\n-1\n0\n0\n1\n-1\n-1\n-1\n-1\n0\n-1\n0\n-1\n-1\n0\n-1\n0\n-1\n-1\n0\n-1\n-1\n-1\n-1\n-1\n0\n0\n1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n0\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-1\n-"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 1\n((()\n480\n617\n-570\n928\n''') == '?', 'Should be?'\nassert solution('''\n5 3\n(((()()\n-500\n1234\n-78\n-9\n''') == '1234', 'Should be 1234'\nassert solution('''\n6 2\n((((((((((()\n6\n''') == '216', 'Should be 216'\nassert solution('''\n2 1\n((()\n''') == '?', 'Should be?'\n''')\nassert solution('''\n5 5\n(((()))\n-101\n-123\n-14\n-456\n-1\n-123\n-4\n''') == '-456', 'Should be -456'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1\") == \"??\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"1 1\") == \"1\"\n\"\"\"\n\nimport sys\nfrom collections import deque\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '?', 'Should be \"??\"'"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3\\n') == '?'\nassert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\nassert solution('1\\n') == '1'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1\") == \"??\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '?', \"Should be '?'\"\nassert solution('2 1') == '?', \"Should be '?'\"\nassert solution('3 1') == '?', \"Should be '?'\"\nassert solution('4 1') == '?', \"Should be '?'\"\nassert solution('5 1') == '?', \"Should be '?'\"\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"?\", \"??\"\nassert solution(\"4 1\") == \"?\", \"??\"\nassert solution(\"5 1\") == \"?\", \"??\"\nassert solution(\"6 1\") == \"?\", \"??\"\nassert solution(\"7 1\") == \"?\", \"??\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6') == '2 4'\nassert solution('1\\n2 1') == 'none'\nassert solution('2\\n1 1') == '1'\nassert solution('3\\n3 1 3 5\\n2 2 4\\n3 1 3 6') == '3 5 6'\nassert solution('5\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6') == '2 4'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4 5'\nassert solution('13') == '0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 1 2 4\n3 1 3 2\n3 2 4 3\n1 2 4 3\n''') == '1 2 3 4'\nassert solution('''\n2\n2 1\n2 3\n1 2\n''') == 'None'\n\nassert solution('''\n13\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\nSample Output:\n2 4\n5 6\n7 8 9 10 11 12 13\n''') == '2 4'\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n''') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'''\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\", \"The empty string is an empty set.\"\nassert solution(\"1 2 4\") == \"\", \"One room with four corridors\"\nassert solution(\"1 2 4 2 1 3\") == \"1 3\", \"One room with three corridors\"\nassert solution(\"2 2 4\") == \"\", \"Two rooms with four corridors\"\nassert solution(\"2 2 4 2 1 3\") == \"1 3\", \"Two rooms with three corridors\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"5 6\"\nassert solution(\n    \"10\\n1 1 2\\n2 1 2 3\\n3 3 3\\n4 4 5\\n5 5 5 6\\n6 6 6 7\\n7 7 7\\n8 8 9\\n9 9 9 10\\n10 10 10 11\\n11 11 11 12\\n12 12 12\\n13 13 13\\n14 14 14\\n15 15 15\\n16 16 16\\n17 17 17\\n18 18 18\\n19 19 19\\n20 20 20\\n21 21 21\\n22 22 22\\n23 23 23\\n24 24 24\\n25 25 25\\n26 26 26\\n27 27 27\\n28 28 28\\n29 29 29\\n30 30 30\\n31 31 31\\n32 32 32\\n33 33 33\\n34 34 34\\n35 35 35\\n36 36 36\\n37 37 37\\n38 38 38\\n39 39 39\\n40 40 40\\n41 41 41\\n42 42 42\\n43 43 43\\n44 44 44\\n45 45 45\\n46 46 46\\n47 47 47\\n48 48 48\\n49 49 49\\n50 50 50\\n51 51 51\\n52 52 52\\n53 53 53\\n54 54 54\\n55 55 55\\n56 56 56\\n57 57 57\\n58 58 58\\n59 59 59\\n60 60 60\\n61 61 61\\n62 62 62\\n63 63 63\\n64 64 64\\n65 65 65\\n66 66 66\\n67 67 67\\n68 68 68\\n69 69 69\\n70 70 70\\n71 71 71\\n72 72 72\\n73 73 73\\n74 74 74\\n75 75 75\\n76 76 76\\n77 77 77\\n78 78 78\\n79 79 79\\n80 80 80\\n81 81 81\\n82 82 82\\n83 83 83\\n84 84 84\\n85 85 85\\n86 86 86\\n87 87 87\\n88 88 88\\n89 89 89\\n90 90 90\\n91 91 91\\n92 92 92\\n93 93 93\\n94 94 94\\n95 95 95\\n96 96 96\\n97 97 97\\n98 98 98\\n99 99 99\\n100 100 100\\n101 101 101\\n102 102 102\\n103 103 103\\n104 104 104\\n105 105 105\\n106 106 106\\n107 107 107\\n108 108 108\\n109 109 109\\n110 110 110\\n111 111 111\\n112 112 112\\n113 113 113\\n114 114 114\\n115 115 115\\n116 116 116\\n117 117 117\\n118 118 118\\n119 119 119\\n120 120 120\\n121 121 121\\n122 122 122\\n123 123 123\\n124 124 124\\n125 125 125\\n126 126 126\\n127 127 127\\n128 128 128\\n129 129 129\\n130 130 130\\n131 131 131\\n132 132 132\\n133 133 133\\n134 134 134\\n135 135 135\\n136 136 136\\n137 137 137\\n138 138 138\\n139 139 139\\n140 140 140\\n141 141 141\\n142 142 142\\n143 143 143\\n144 144 144\\n145 145 145\\n146 146 146\\n147 147 147\\n148 148 148\\n149 149 149\\n150 150 150\\n151 151 151\\n152 152 152\\n153 153 153\\n154 154 154\\n155 155 155\\n156 156 156\\n157 157 157\\n158 158 158\\n159 159 159\\n160 160 160\\n161 161 161\\n162 162 162\\n163 163 163\\n164 164 164\\n165 165 165\\n166 166 166\\n167 167 167\\n168 168 168\\n169 169 169\\n170 170 170\\n171 171 171\\n172 172 172\\n173 173 173\\n174 174 174\\n175 175 175\\n176 176 176\\n177 177 177\\n178 178 178\\n179 179 179\\n180 180 180\\n181 181 181\\n182 182 182\\n183 183 183\\n184 184 184\\n185 185 185\\n186 186 186\\n187 187 187\\n188 188 188\\n189 189 189\\n190 190 190\\n191 191 191\\n192 192 192\\n193 193 193\\n194 194 194\\n195 195 195\\n196 196 196\\n197 197 197\\n198 198 198\\n199 199 199\\n200 200 200\\n201 201 201\\n202 202 202\\n203 203 203\\n204 204 204\\n205 205 205\\n206 206 206\\n207 207 207\\n208 208 208\\n209 209 209\\n210 210 210\\n211 211 211\\n212 212 212\\n213 213 213\\n214 214 214\\n215 215 215\\n216 216 216\\n217 217 217\\n218 218 218\\n219 219 219\\n220 220 220\\n221 221 221\\n222 222 222\\n223 223 223\\n224 224 224\\n225 225 225\\n226 226 226\\n227 227 227\\n228 228 228\\n229 229 229\\n230 230 230\\n231 231 231\\n232 232 232\\n233 233 233\\n234 234 234\\n235 235 235\\n236 236 236\\n237 237 237\\n238 238 238\\n239 239 239\\n240 240 240\\n241 241 241\\n242 242 242\\n243 243 243\\n244 244 244\\n245 245 245\\n246 246 246\\n247 247 247\\n248 248 248\\n249 249 249\\n250 250 250\\n251 251 251\\n252 252 252\\n253 253 253\\n254 254 254\\n255 255 255\\n256 256 256\\n257 257 257\\n258 258 258\\n259 259 259\\n260 260 260\\n261 261 261\\n262 262 262\\"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n2 2 4\n3 1 3 5\n2 2 4\n3 1 3 6\n2 2 6\n2 4 5\n2 8 9\n2 7 9\n2 7 8\n2 11 13\n2 10 12\n2 11 13\n2 10 12\n\"\"\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\"\nassert solution(\"\"\"\n10\n1 1 2 2 1 1 1 1 2 1 2 2 1 1 1 1 1 1 2 2\n2 1 2 1 2 2 1 1 2 1 1 1 2 1 1 1 1 2 2\n1 1 1 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == \"2 4 5 6 7 8\"\nassert solution('1') == \"\"\nassert solution('3') == \"3\""
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n\") == \"2 4\\n5 6\\n7 8 9 10 11 12 13\\n\"\nassert solution(\n    \"5\\n6\") == \"\"\nassert solution(\n    \"5\\n5\") == \"5\\n\"\nassert solution(\n    \"10\\n6\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311 311 312 313 314 1516171819 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311 311 312 313 314 1516171819\"\n    ) == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 311 311 312 313 314 1516171819\"\n    )\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 2 4\\n3 1 3 5\\n2 2 4') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'\nassert solution('2\\n3 1 3 5\\n2 2 4') == 'None\\n'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '''35 39 36 27 29'''\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2') == '35 39 36 27 29'\nassert solution('3 1 2') == '1'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2''') == '35 39 36 27 29'\nassert solution('''10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n22 23\n23 24\n24 25\n25 26\n26 27\n27 28\n28 29\n29 30\n30 31\n31 32\n32 33\n33 34\n34 35''') == '100 20 18 40 48 10 60 36 30 26 28 44 49 72 50 55 74 62 62 48 58 56 70 73 68 70 62 54 68 46 38 41 74 49 74 74 70 68 70 66 57 70 72 67 64 72 58 69 68 68 66 65 74 61 61 57 61 57 65 74 61 61 61 58 61 58 61 61 57 61 57 61 56 61 57 57 57 56 56 56 56 55 57 57 55 56 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55 55"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\"\"\") == \"35 39 36 27 29\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '\\n'.join(map(str, (35, 39, 36, 27, 29)))\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '35 39 36 27 29'"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '35 39 36 27 29'\nprint('check passed')\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n1 2 3\\n1 4 8\\n2 3 12\\n3 5 4\\n4 5 2\") == \"35 39 36 27 29\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '0 672'\nassert solution('4 3 2 2') == '0 704'\n\"\"\"\n\nimport math"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '0 672'\nassert solution('5 4') == '1 735'\nassert solution('2 8') == '3 120'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n3 2 1') == '0 672'\nassert solution('1 2\\n3 2 1') == '1 4672'\nassert solution('2 3\\n3 2 1') == '1 4672'\nassert solution('2 2\\n3 2 1') == '0 672'\nassert solution('3 3\\n3 2 1') == '0 672'\n\"\"\""
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"0 672\"\nassert solution(\"3 1\") == \"1 0\"\nassert solution(\"2 10\") == \"1 1\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 1\\n3 2 1') == '0 672'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n3 2 1\n\"\"\") == \"0 672\"\n\nassert solution(\"\"\"\n3\n3 2 1\n\"\"\") == \"0 672\"\n\nassert solution(\"\"\"\n10\n10 10 10 10 10 10 10 10 10 10\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n10\n2 2 2 2 2 2 2 2 2 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 1 0\") == \"0\"\nassert solution(\"6 2 10\") == \"1\"\n\nstdin = \"\"\"4 1 0\n3 2 1\n\"\"\"\n\n\"\"\"\n\n3\n4 1 0\n3 2 1\n\n\"\"\"\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3\\n2 1 2 4') == '1'\nassert solution('5 4\\n3 1 2 5\\n3 2 1 3') == '0'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('3 3 3\\n0 0 10\\n1 20 30\\n2 30 60\\n3 60 100') == 'Impossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 100') == 'Impossible'\nassert solution('1 5 100') == 'Impossible'\nassert solution('2 2 18') == '2.500000'\nassert solution('2 3 100') == 'Impossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 100\n0 10 10\n1 10 5\n1 20 35\n2 2 18\n2 40 50\n''') == '2.5000000'\n'''"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\") == \"2.500000\"\nassert solution(\"100 500 100\\n0 0 100\\n1 100 100\\n1 100 100\\n2 100 100\\n2 100 100\") == \"Impossible\"\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5 100') == '2.500000'\nassert solution('10 10 10') == 'Impossible'\nassert solution('1 10 5') == '1.000000'\nassert solution('1 20 35') == 'Impossible'\nassert solution('2 2 18') == '2.000000'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"Impossible\"\nassert solution('3\\n3 4 8\\n1 1 1\\n0 0 0\\n2 2 5\\n1 1 8\\n2 1 1\\n') == \"2.499999\"\nassert solution('5\\n10 10 10 10 10\\n0 0 0 0 0\\n1 1 1 1 1\\n1 1 1 1 1\\n1 1 1 1 1\\n2 2 2 2 2\\n1 1 1 1 1\\n') == \"Impossible\""
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 5 100\\n\" +\n    \"0 10 10\\n\" +\n    \"1 10 5\\n\" +\n    \"1 20 35\\n\" +\n    \"2 2 18\\n\" +\n    \"2 40 50\"\n    ) == \"2.5\""
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'Impossible'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == 'Impossible'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5 3 4\n''') == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 3') == '2'\nassert solution('2\\n2 3') == '3'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 3 4') == '3'\nassert solution('3\\n2 3 2') == '2'\nassert solution('3\\n5 1 1') == '4'\nassert solution('3\\n5 4 1') == '3'\nassert solution('3\\n3 1 3') == '2'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '3'\n\n\"\"\"\n\nfrom collections import deque"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5 1 4\") == \"1\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"10\"\nassert solution(\"5 3 4\") == \"3\"\nassert solution(\"1 1 1 1 1\") == \"5\"\nassert solution(\"3 2 1\") == \"3\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('5 3 4') == '3'\nassert solution('20 30 40 50') == '4'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n4') == '1'\nassert solution('2\\n3 3') == '1'\nassert solution('3\\n3 4 4') == '1'\nassert solution('4\\n4 4 4') == '1'\nassert solution('5\\n4 4 4 4') == '1'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5 3 4\") == \"3\"\nassert solution(\"3\\n5 3 4\\n2 4 6\") == \"4\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(INP) == EXP\n\nINP = \"\"\"\n3 4 1\n\"\"\"\nEXP = \"\"\"\n4\n\"\"\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\") == \"2\"\nassert solution(\"10 5 10\") == \"92\"\n\nassert solution(\"2 3 2\") == \"0\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 1') == '2'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == \"2\"\nassert solution(\"12 1 1\") == \"12\"\nassert solution(\"4 4 2\") == \"8\"\nassert solution(\"4 4 3\") == \"11\""
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"2\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 1 1\n''') == '2'\nassert solution('''\n5 1 1\n''') == '2'\nassert solution('''\n10 1 1\n''') == '1'\nassert solution('''\n10 10 1\n''') == '1'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"2\""
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '2'\nassert solution('2 5 5') == '2'\nassert solution('10 10 10') == '1'\n\"\"\"\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('10 1 1') == '4'\nassert solution('10 9 5') == '0'\n\n'''\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 1') == '2'\nassert solution('2 5 4') == '5'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3''') == '6'\nassert solution('''4 6 7''') == '7'\nassert solution('''1 2 3 4''') == '6'\nassert solution('''1 2 3 4 5''') == '5'\nassert solution('''1 2 3 4 5 6''') == '7'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 5') == '7'\n\"\"\"\n\nn = int(input())\na = input().split()\nprint(max([int(i, 2) ^ sum(list(map(int, i))) for i in zip(a, a[1:])]))\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('2 2 5 5 3 2 3') == '5'"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"1\"\nassert solution(\"3\\n2 1 4\\n\") == \"1\"\nassert solution(\"1\\n1 2\\n\") == \"1\"\nassert solution(\"1\\n4 8\\n\") == \"4\"\nassert solution(\"1\\n10 20\\n\") == \"1\""
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 3 5\\n') == '7'\nassert solution('1\\n1 2\\n') == '2'\nassert solution('3\\n3 2 1\\n') == '2'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6') == '1\\n1\\n4'\nassert solution('0 1 2 3 4 5 6') == '2\\n6'\nassert solution('0 1 2 3 4 5 6\\n7 8 9 10 11 12 13 14 15 16 17') == '17\\n15\\n8'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 3 5') == '7'\nassert solution('3\\n2 5 4') == '10'\nassert solution('3\\n2 5 2') == '8'\nassert solution('3\\n2 5 1') == '7'\nassert solution('3\\n1 3 4') == '6'\n\nprint(solution(input()))\n'''"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 5\") == \"7\"\nassert solution(\"2 5 6\") == \"7\"\n\n-----Explanation-----\nThe subset is {1, 3, 5}. The xor-sum of this subset is 7. The answer is 7.\n\"\"\""
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"2\\n3 1\") == \"0\"\nassert solution(r\"4\\n2 1 2 3\") == \"4\"\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 3 5\n''') == '7'\n\nassert solution('''\n2\n5\n10\n''') == '10'\n\nassert solution('''\n3\n3 9 12\n''') == '12'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n4\\n1\\n2\\n3') == '1 2 3 4', 'First example'\nassert solution('4\\n4\\n1\\n2\\n3') == '1 2 3 4', 'Second example'\nassert solution('2\\n4\\n1\\n2') == '1 2', 'Third example'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Impossible.\\n'\nassert solution('4') == 'fred jetsons\\n'\nassert solution('5') == 'john jets\\n'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n') == 'john jets'\nassert solution('3\\n') == 'john jets\\n'\nassert solution('4\\n') == 'john jets\\n'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n4\nfred dinosaur 2\njohn rhinocerous 2\nmary rhinocerous 2\nruth platypus 1\n4\n''') == 'fred dinosaur\\njohn rhinocerous\\nmary rhinocerous\\nruth platypus\\n'''\n\n\n\"\"\""
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == 'fred jetsons\\njohn jets\\nruth rockets'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rocks\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"3\\n4\\nfred dinosaur 2 jets\\njohn rhinocerous 2 jets\\nmary rhinocerous 2 jets\\nruth platypus 1 rockets\") == \"fred jetsons\\njohn jets\\nruth rockets\"\nassert solution(\"1\\n2\\n\") == \"Impossible.\"\n\n\"\"\")"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2 jets\nruth platypus 1\n''') == 'fred jetsons\\njohn jets\\nruth rockets'\n\nassert solution('''\n2\n4\nfred dinosaur 2 jets\njohn rhinocerous 2 jets\nmary rhinocerous 2 jets\nruth platypus 1\n''') == 'Impossible.'\n'''\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Impossible.\\n', \"input 1\"\nassert solution('2') == 'john jets\\nmary rhinocerous 2 jetsons\\nruth rockets\\n', \"input 2\""
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rocks\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == \"fred jetsons\\njohn jets\\nruth rockets\\n\"\nassert solution('2\\n4\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rocks\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets') == \"Impossible\"\nassert solution('10\\n16\\nfred dinosaur 2 jets jetsons\\njohn rhinocerous 2 jets rocks\\nmary rhinocerous 2 jetsons rockets\\nruth platypus 1 rockets\\n' * 40) == \"fred jetsons\\njohn jets\\nruth rockets\\n\" * 40\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == \"ruth jetsons\"\nassert solution('''\n1\nn\n''') == \"n\"\n'''\n\nimport collections"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 3\n-10 9\n-2 3\n''') == '1 2 1'\n\n'''\nOther\n------\n    a = '2'\n    b = a\n    a = '1'\n    print(a)\n    print(b)\n'''\n'''\nb = a\na = '1'\nprint(a)\nprint(b)\n'''\n'''\na = 1\nb = '2'\na = '2'\nprint(a)\nprint(b)\n'''\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na = '1'\nprint(a)\nprint(b)\n'''\na = 1\nb = 1\na ="
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"3\") == '1 2 1'\nassert solution(\"2 3\") == '1 1 1'\nassert solution(\"5\") == '1 2 2 1 1'"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n2 3\n3 2\n\"\"\") == \"1 1 1\"\n\nassert solution(\"\"\"\n1\n1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n3 3\n1 1\n2 2\n\"\"\") == \"1 2 1\"\n\nassert solution(\"\"\"\n100000\n-10 10\n-20 -3\n\"\"\") == \"7373\"\n\nassert solution(\"\"\"\n1\n2 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n3 4\n-10 9\n-2 3\n\"\"\") == \"1 2 1\"\n\"\"\""
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 3') == '1'\nassert solution('2 4') == '2'\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n4 3\\n-10 9\\n-2 3') == '1 2 1'"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n4 3\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n4\n1 2\n4 3\n1 2\n''') == '0 0 0'\n'''\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1 2 1'\nassert solution('5') == '1 2 1 2 3'\nassert solution('10') == '1 2 1 2 2 2 2 2 3 3 3 3 2 2 1'\nassert solution('1') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n4 3\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n3\n4 3\n-10 9\n-3 3\n''') == '1 2 1'\nassert solution('''\n1\n1\n''') == '0 1'\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4 3\n-10 9\n-2 3\n''') == '1 2 1'\n\n'''\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\nSample Output: 2.125\\n') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\nassert solution('4\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '2.125'\nassert solution('5\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10') == '3.0'\nassert solution('8\\n1 1 7\\n3 2 3\\n5 1 4\\n6 10 10\\n7 1 1\\n1 1 1\\n1 1 7') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 7\") == \"2.125\"\nassert solution(\"3 2 3\") == \"2.125\"\nassert solution(\"5 1 4\") == \"2.125\"\nassert solution(\"6 10 10\") == \"2.125\"\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125', f'''\n    actual: {solution('''+stdin+''')}\n    expected: {'2.125'}\n'''"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2.125'\nassert solution('4') == '2.125'\nassert solution('10') == '2.125'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2.125'\nassert solution('1 1 7') == '2.125'\nassert solution('3 2 3') == '0.125'\nassert solution('5 1 4') == '0.375'\nassert solution('6 10 10') == '0.375'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n10\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n10\n1 2 3\n2 5 3\n5 8 3\n8 13 3\n13 17 3\n17 20 3\n''') == '3.0625'\nassert solution('''\n10\n1 1 5\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\n\n''')"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 1 7\n3 2 3\n5 1 4\n6 10 10''') == '2.125', 'Sample Test 1'\n\nassert solution('''3\n1 1 7\n3 2 3\n5 1 4''') == '1.7142857142857144', 'Sample Test 2'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2.125'"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('*') == []\n\n'''\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('*.*') == ['main.c', 'a.out']\nassert solution('*.c') == ['main.c']\n\n'''"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"*.*\",\n    4,\n) == \"main.c\\na.out\\ndef solution(stdin: str) -> str:\\n    pass\"\n\"\"\"\nimport re\nimport sys\n\npattern = r\"\\*.*\"\nn = int(input())\n\nfor _ in range(n):\n    line = input()\n    for filename in re.finditer(pattern, line):\n        print(filename.group())\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(*input()) == \"main.c\\na.out\\n\"\n\n\"\"\""
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''*.*''') == ['main.c', 'a.out','readme', 'yacc']\nassert solution('''a.c''') == []\nassert solution('''a.c\nb.c\nc.c\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"*.*\") == ['main.c', 'a.out']\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"main.c\") == [\"main.c\"]\n\nassert solution(\"a.out\") == [\"a.out\"]\n\nassert solution(\"readme\") == [\"readme\"]\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('*.*') == ['main.c', 'a.out']\nassert solution('a.out') == []\nassert solution('readme') == ['readme']\nassert solution('yacc') == []\nassert solution('*') == ['main.c', 'a.out','readme', 'yacc']"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('*.*') == ['main.c', 'a.out','readme']\nassert solution('a.b.c') == []\nassert solution('a.*.b') == ['a.b', 'a.b.c']\nassert solution('a.b.c') == []\n\n--\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"*.*\") == [\"main.c\", \"a.out\", \"def solution(stdin: str) -> str:\", \"pass\"]\n\nSample Input:\n*.py\n1\na.txt\n*.py\n\nSample Output:\na.txt\n*.py\n\"\"\"\nfrom itertools import permutations"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n0.50000') == '0.500000'\n'''\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1\\n0.5\\n') == '0.500000'\nassert solution('1 1\\n0.5\\n') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0.500000'\nassert solution('1.000000') == '0.500000'\nassert solution('1.1') == '0.501000'\nassert solution('1.0') == '0.501000'\nassert solution('1.00001') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n1 2\n0.500000\n\"\"\"\n) == \"0.500000\"\n\nassert solution(\n    \"\"\"\n1 2\n0.000001\n\"\"\"\n) == \"0.0\"\n\nassert solution(\n    \"\"\"\n1 1\n0.500000\n\"\"\"\n) == \"0.500000\"\n\nassert solution(\n    \"\"\"\n1 1\n0.000100\n\"\"\"\n) == \"0.000100\"\n\nassert solution(\n    \"\"\"\n1 1\n0.002000\n\"\"\"\n) == \"0.002000\""
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1\\n0.500000\\n') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\n0.50000') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.5'\nassert solution('1\\n1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1\\n0.1') == '0.1000000000000001'\nprint('Tests passed')\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1\\n0.500000\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.50000000\\n0.50000000') == '0.500000'\nassert solution('1 1\\n0.500000\\n0.500000\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000'\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n0.500000\") == \"0.500000\"\nassert solution(\"0.9000001 0.8000001 0.7000001 0.6000001 0.5000001 0.4000001 0.3000001 0.2000001 0.100000001\") == \"0.100000001\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 50.0\n''') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0\") == \"0.0\"\nassert solution(\"1 3\") == \"0.3\"\nassert solution(\"4 99\") == \"2.0\"\nassert solution(\"99 99\") == \"0.9\"\nassert solution(\"99 99.99\") == \"1.3\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('100 99.9') == '-0.0'\nassert solution('0 50.9') == '1.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0.15') == '0.15'\nassert solution('0 0.15') == '0.15'\n\nSample Input:\n30 20.91\nSample Output:\n-1.0\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 49.9') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nassert solution(\"0 49.91\") == \"0.0\"\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0') == '0.0'\nassert solution('49.9') == '0.0'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 49.9\") == \"0.0\"\nprint(solution())\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 49.9') == '0.0'\n\n'''\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 49.9\n0.0''') == '0.0'\nassert solution('''10 15.5\n0.1''') == '1.0'\n\nTEST_CASES = '''0 49.9\n0.0\n10 15.5\n0.1'''"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 3\") == \"1 3\"\nassert solution(\"3 1\") == \"2 1\"\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2\n2 3\n3 1\n4 1\n''') == '1 2\\n2 3\\n3 1\\n4 1\\n'''\n\ns = \"1 2\\n2 3\\n3 1\"\n\nprint([x[:x.index('\\n')] for x in s.split('\\n')])\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2\n2 3\n3 1\n4 1''') == '4 1 2 3'\n\nassert solution('''2\n3\n2\n3\n3\n1\n4\n1\n2''') == '4 1 2 3'\n\nassert solution('''1\n2\n1\n1\n1\n4\n1\n2''') == '4 1 2 3'\n\nassert solution('''2\n2\n1\n4\n1\n4\n1\n2''') == '4 1 2 3'\n\nassert solution('''1\n1\n4\n1\n4\n1\n2''') == '4 1 2 3'"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n2 3\\n3 1\\n4 1') == '1 2\\n2 3\\n3 1\\n1 4'\nassert solution('4\\n1 2\\n2 3\\n3 1\\n4 1') == '1 2\\n2 3\\n3 1\\n1 4'"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 1\\n4 1\\n') == '4 1\\n2 1\\n3 2\\n1 3'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n2 3\n3 1''') == '1 2\\n2 3\\n3 1'''\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1 2\n2 3\n3 1\n4 1\n''') == '4 1 2 3'\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '2 4 5 7 8 6 3 1'\nassert solution('''10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 1\n''') == '8 9 10 1 2 3 4 5 6 7 8'\nassert solution('''20\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 1\n''') == '9 10 11 12 13 14 15 16 17 18 19 20 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2\n2 3\n3 1\n4 1\n4 2\nSample Input 2:\n4\n2 3\n3 1\n1 2\nSample Output 2:\n1 3\n2 3\n''') == '1 3\\n2 3\\n'\n\nprint(solution('''\n3\n1 3\n2 1\n2 4\n''')) == '1 3\\n2 1\\n2 4\\n'\n\nprint(solution('''\n4\n1 3\n2 3\n1 4\n1 5\n''')) == '1 3\\n2 3\\n1 4\\n1 5\\n'\n\nprint(solution('''\n5\n1 2\n2 3\n3 1\n4 1\n4 2\n4 5\n''')) == '1 3\\n2 3\\n3 1\\n4 1\\n4 2\\n4 5\\n'\n\nprint(solution('''\n1\n4\n1 2\n2 3\n3 4\n''')) == '1 2\\n1 3\\n1 4\\n'\n\nprint(solution('''\n1\n4\n1 2\n2 3\n3 4\n''')) == '1 2\\n1 3\\n1 4\\n'"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 1\\n4 1\") == \"4 1\\n2 1\\n3 2\\n1 3\"\n\"\"\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 5\") == \"1\"\nassert solution(\"10 10\") == \"inf\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n') == '1'\nassert solution('1000000000000\\n100000000000000\\n1000000000000\\n') == 'forever'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5 2 1 6 3 5 3') == '1'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n4 3\\n2 1 5 3 5') == '1'\nassert solution('3\\n5 5 5') == '0'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n) == \"1\"\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n) == \"2\"\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n) == \"3\"\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n) == \"4\"\nassert solution(\n    \"6 5\\n\"\n    \"2 1 6 3 5 3\\n\"\n    \"1 2 5 3 5\\n\"\n) == \"forever\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5') == '1'\nassert solution('6 5') == '2'\nassert solution('6 5') == '2'\nassert solution('6 5') == '2'\nassert solution('6 5') == '2'\n\nThe answer for your first input is:\n1\n\nThe answer for your second input is:\n2\n\nThe answer for your third input is:\n2\n\nThe answer for your fourth input is:\n2\n\nThe answer for your fifth input is:\n2\n\nThe answer for your sixth input is:\n2\n\nThe answer for your seventh input is:\n2\n\nThe answer for your eighth input is:\n2\n\nThe answer for your nineth input is:\n2\n\nThe answer for your tenth input is:\n2\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever\n\nThe answer for your eleventh input is:\nforever\n\nThe answer for your twelfth input is:\nforever\n\nThe answer for your thirteenth input is:\nforever\n\nThe answer for your fourteenth input is:\nforever\n\nThe answer for your fifteenth input is:\nforever\n\nThe answer for your seventeenth input is:\nforever\n\nThe answer for your eighteenth input is:\nforever\n\nThe answer for your nineteenth input is:\nforever\n\nThe answer for your twentieth input is:\nforever"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 1 6 3 5 3\n1 2 5 3 5\n''') == '1'\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"forever\"\nassert solution(\"3\") == \"1\"\nassert solution(\"7 1 5 5 6 5 4\") == \"1\""
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n\") == \"1\"\nassert solution(\n    \"6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n2 1 6 3 5 3\\n\") == \"1\"\n"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n') == '1'\nprint('Congratulations, have a nice day!')\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10 3 10\n0 1 2 3 4 5 6 7 8 9 10\n3 1 3 3 4 5 6 7 8 9 10\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10 4 10\n0 1 2 3 4 5 6 7 8 9 10\n3 2 1 3 4 5 6 7 8 9 10\n2 4 1 2 4 5 6 7 8 9 10\n3 5 1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 10\\n0 1 1 2 6\") == \"3\"\nassert solution(\"1 1 3 1 2\\n1 1 1 2 6\") == \"2\"\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6\\n') == '3'\nassert solution('3 3 3 6\\n0 1 1 2 6\\n') == 'impossible'"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1 10\n0 1 1 2 6\n''') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 10\n0 1 1 2 6\n''') == '3'\n\nassert solution('''\n3 1 10\n0 1 2 2 6\n''') == 'impossible'\n\nassert solution('''\n4 1 10\n0 1 2 2 6\n''') == '3'\n\nassert solution('''\n3 1 10\n1 1 2 6\n''') == '3'\n\nassert solution('''\n4 1 10\n0 1 2 2 6\n''') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 1 10\n0 1 1 2 6\n''') == '3'\nassert solution('''\n2 1 10\n0 1 3 4 5\n''') == 'impossible'\n''')\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1 10\n0 1 1 2 6\n''') == '3'\n\nassert solution('''\n2 1 2\n0 1 1 2\n''') == 'impossible'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 10') == '3'\nassert solution('1 1 10') == '3'\nassert solution('1 1 10') == '3'\nassert solution('1 1 10') == '3'\nassert solution('1 1 10') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('2 1000000 1 1000000 1000000 1 1000000 1000000 1') == '999999'\nassert solution('3 3 3 3 3 3 3') == '3'\nassert solution('0 0 0 0 0 0') == '-1'\nassert solution('1 1 1 1 1 1') == '1'"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2\\n1 2\\n'\nassert solution('5 6\\n8 10\\n4 1\\n1 9\\n2 4\\n3 7\\n') == '3\\n1 2 4\\n1 3\\n2 4\\n'\n\n\"\"\""
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 100') == '1 2'\n\nassert solution('99 1') == '1 99'\n\nassert solution('1 99') == '1 99'\n\nassert solution('99 1') == '1 99'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2\\n1 2\"\nassert solution(\"5 5\\n1 2\\n2 1\\n3 5\\n3 1\\n4 5\\n4 1\\n4 1\\n3 1\\n5 1\\n1 2\\n2 1\\n3 1\\n3 1\\n\") == \"1\\n1 2\\n2 1\\n1 2\\n2 1\\n1 2\\n3 1\\n2 1\\n\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([[99, 1], [1, 99]]) == \"1 2\"\nassert solution([[99, 1], [1, 99], [1, 99]]) == \"1 2\"\nassert solution([[99, 1], [1, 99], [1, 99], [99, 1]]) == \"1 2\"\nassert solution([[1, 99], [1, 99], [99, 1]]) == \"1 2\"\nassert solution([[1, 99], [1, 99], [99, 1]]) == \"1 2\"\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 100\n99 1\n1 99\n\"\"\") == \"2 1 2\"\nassert solution(\"\"\"\n3 100\n99 1\n1 99\n1 3\nSample Output:\n2\n2 3\n\"\"\" ) == \"2 2 3\""
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 100\\n99 1\\n1 99\\n') == '2 1'\nassert solution('2 100\\n10 99\\n1 99\\n') == '2 1'\nassert solution('2 100\\n99 1\\n1 99\\n') == '2 1'\nassert solution('2 100\\n99 1\\n1 99\\n') == '2 1'"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 100\\n99 1\\n1 99\") == \"2 1\""
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 5\n2 1\n''') == '3 1"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 100\\n99 1\\n1 99') == '2\\n1 2'\nassert solution('2 200\\n98 1\\n1 99') == '1\\n2 1'\nassert solution('2 200\\n99 1\\n1 99') == '2'\nassert solution('1 3\\n2 1\\n1 3') == '1'\nassert solution('1 3\\n2 2\\n1 3') == '1'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"H\" * 20) == \"TT\"\nassert solution(\"T\" * 20) == \"TT\"\nassert solution(\"H\" * 20 + \"T\") == \"TT\"\nassert solution(\"H\" * 20 + \"T\" * 20) == \"TT\"\nassert solution(\"H\" * 19 + \"T\" * 21) == \"TT\"\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\", solution(\"H\\nT\\n0.5\")\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Gon\\nKillua\\n1') == '0.5'\n'''\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('H') == '0.5'\nassert solution('T') == '0.5'\nassert solution('0.5') == '0.5'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\nH\nT\n0.5\n\"\"\") == \"0.5\"\n\nprint(\"You're a smart cookie!\")"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"H\\nT\\n0.5\"\n) == \"0.5\"\n\"\"\"\nimport math\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Gon\\nKillua\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.1') == '0.1'\nassert solution('H\\nT\\n0.9') == '0.9'"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.1') == '0.0'\nassert solution('H\\nT\\n1.0') == '0.0'\nassert solution('H\\nT\\n0.5\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5\\n0.5') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.01') == '0.01'\nassert solution('H\\nT\\n0.10') == '0.11'\nassert solution('H\\nT\\n0.99') == '0.99'\nassert solution('H\\nT\\n0.5\\n0.6') == '0.5'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"H\\nT\\n0.5\") == \"0.5\"\nprint(solution(\"H\\nT\\n0.5\"))\n\"\"\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '8'\nassert solution('6') == '1 3 5 7 9 11 13 15'\n\n'''"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '8 1 3 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"1 2 3\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"8\") == \"1 2 3 4 5 6 7\"\nassert solution(\"11\") == \"1 2 3 4 5 6 7 8 9 10 11\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1 2\"\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n9\n7\n4\n2\n1''') == '8 1 3 5 7 9 11 13 15'\nassert solution('''8\n2\n4\n1\n3\n9\n6\n5\n7\n''') == '5 1 2 4 6 7 9 11 13 15'\nassert solution('''3\n3\n7\n5\n''') == '3 1 5 7 9 11 13 15'\nassert solution('''8\n8\n8\n8\n8\n8\n8\n8\n''') == '7 1 5 7 9 11 13 15'\nassert solution('''13\n13\n12\n11\n10\n9\n8\n7\n6\n5\n4\n3\n2\n1\n''') == '12 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15'"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n') == '8 1 3 5 7 9 11 13 15'\n\nSample Input:\n5\nSample Output:\n20\n1 3 5 7 9 11 13 15\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n3\n1\n1 1\n''') == '8 1 3 5 7 9 11 13 15'\n\nassert solution('''\n9\n1\n1 1 1\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n1 10 10\n1 11 11\n1 12 12\n1 13 13\n''') == '12 1 3 5 7 9 11 13 15'\n\nassert solution('''\n20\n1\n1 1\n1 2 2\n1 3 3\n1 4 4\n1 5 5\n1 6 6\n1 7 7\n1 8 8\n1 9 9\n1 10 10\n1 11 11\n1 12 12\n1 13 13\n1 14 14\n1 15 15\n1 16 16\n1 17 17\n1 18 18\n1 19 19\n1 20 20\n1 21 21\n1 22 22\n1 23 23\n1 24 24\n1 25 25\n1 26 26\n1 27 27\n1 28 28\n1 29 29\n1 30 30\n1 31 31\n1 32 32\n1 33 33\n1 34 34\n1 35 35\n1 36 36\n1 37 37\n1 38 38\n1 39 39\n1 40 40\n1 41 41\n1 42 42\n1 43 43\n1 44 44\n1 45 45\n1 46 46\n1 47 47\n1 48 48\n1 49 49\n1 50 50\n1 51 51\n1 52 52\n1 53 53\n1 54 54\n1 55 55\n1 56 56\n1 57 57\n1 58 58\n1 59 59\n1 60 60\n1 61 61\n1 62 62\n1 63 63\n1 64 64\n1 65 65\n1 66 66\n1 67 67\n1 68 68\n1 69 69\n1 70 70\n1 71 71\n1 72 72\n1 73 73\n1 74 74\n1 75 75\n1 76 76\n1 77 77\n1 78 78\n1 79 79\n1 80 80\n1 81 81\n1 82 82\n1 83 83\n1 84 84\n1 85 85\n1 86 86\n1 87 87\n1 88 88\n1 89 89\n1 90 90\n1 91 91\n1 92 92\n1 93 93\n1 94 94\n1 95 95\n1 96 96\n1 97 97\n1 98 98\n1 99 99\n1 100 100\n1 101 101\n1 102 102\n1 103 103\n1 104 104\n1 105 105\n1 106 106\n1 107 107\n1 108 108\n1 109 109\n1 110 110\n1 111 111\n1 112 112\n1 113 113\n1 114 114\n1 115 115\n1 116 116\n1 117 117\n1 118 118\n1 119 119\n1 120 120\n1 121 121\n1 122 122\n1 123 123\n1 124 124\n1 125 125\n1 126 126\n1 127 127\n1 128 128\n1 129 129\n1 130 130\n1 131 131\n1 132 132\n1 133 133\n1 134 134\n1 135 135\n1 136 136\n1 137 137\n1 138 138\n1 139 139\n1 140 140\n1 141 141\n1 142 142\n1 143 143\n1 144 144\n1 145 145\n1 146 146\n1 147 147\n1 148 148\n1 149 149\n1 150 150\n1 151 151\n1 152 152\n1 153 153\n1 154 154\n1 155 155\n1 156 156\n1 157 157\n1 158 158\n1 159 159\n1 160 160\n1 161 161\n1 162 162\n1 163 163\n1 164 164\n1 165 165\n1 166 166\n1 167 167\n1 168 168\n1 169 169\n1 170 170\n1 171 171\n1 172 172\n1 173 173\n1 174 174\n1 175 175\n1 176 176\n1 177 177\n1 178 178\n1 179 179\n1 180 180\n1 181 181\n1 182 182\n1 183 183\n1 184 184\n1 185 185\n1 186 186\n1 187 187\n1 188 188\n1 189 189\n1 190 190\n1 191 191\n1 192 192\n1 193 193\n1 194 194\n1 195 195\n1 196 196\n1 197 197\n1 198 198\n1 199 199\n1 200 200\n1 201 201\n1 202 202\n1 203 203\n1 204 204\n1 205 205\n1 206 206\n1 207 207\n1 208 208\n1 209 209\n1 210 210\n1 211 211\n1 212 212\n1 213 213\n1 214 214\n1 215 215\n1 216 216\n1 217 217\n1 218 218\n1 219 219\n1 220 220\n1 221 221\n1 222 222\n1 223 223\n1 224 224\n1 225 225\n1 226 226\n1 227 227\n1 228 228\n1 229 229\n1 230 230\n1 231 231\n1 232 232\n1 233 233\n1 234 234\n1 235 235\n1 236 236\n1 237 237\n1 238 238\n1 239 239\n1 240 240\n1 241 241\n1 242 242\n1 243 243\n1 244 244\n1 245 245\n1 246 246\n1 247 247\n1 248 248\n1 249 249\n1 250 250\n1 251 251\n1 252 252\n1 253 253\n1 254 254\n1 255 255\n1 256 256\n1 257 257\n1 258 258\n1 259 259\n1 260 260\n1 261 261\n1 262 262\n1 263 263\n1 264 264\n1 265 265\n1 266 266\n1 267 267\n1 268 268\n1 269 269\n1 270 270\n1 271 271\n1 272 272\n1 273 273\n1 274 274\n1 275 275\n1 276 276\n1 277 277\n1 278 278\n1 279 279\n1 280 280\n1 281 281\n1 282 282\n1 283 283\n1 284 284\n1 285 285\n1 286 286\n1 287 287\n1 288 288\n1 289 289\n1 290 290\n1 291 291\n1 292 292\n1 293 293\n1 294 294\n1 295 295\n1 296 296\n1 297 297\n1 298 298\n1 299 299\n1 300 300\n1 301 301\n1 302 302\n1 303 303\n1 304 304\n1 305 305\n1 306 306\n1 307 307\n1 308 308\n1 309 309\n1 310 310\n1 311 311\n1 312 312\n1 313 313\n1 314 314\n1 315 315\n1 316 316\n1 317 317\n1 318 318\n1 319 319\n1 320 320\n1 321 321\n1 322 322\n1 323 323\n1 324 324\n1 325 325\n1 326 326\n1 327 327\n1 328 328\n1 329 329\n1 330 330\n1 331 331\n1 332 332\n1 333 333\n1 334 334\n1 335 335\n1 336 336\n1 337 337\n1 338 338\n1 339 339\n1 340 340\n1 341 341\n1 342 342\n1 343 343\n1 344 344\n1 345 345\n1 346 346\n1 347 347\n1 348 348\n1 349 349\n1 350 350\n1 351 351\n1 352 352\n1 353 353\n1 354 354\n1 355 355\n1 356 356\n1 357 357\n1 358 358\n1 359 359\n1 360 360\n1 361 361\n1 362 362\n1 363 363\n1 364 364\n1 365 365\n1 366 366\n1 367 367\n1 368 368\n1 369 369\n1 370 370\n1 371 371\n1 372 372\n1 373 373\n1 374 374\n1 375 375\n1 376 376\n1 377 377\n1 378 378\n1 379 379\n1 380 380\n1 381 381\n1 382 382\n1 383 383\n1 384 384\n1 385 385\n1 386 386\n1 387 387\n1 388 388"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n\n''') == '8 1 3 5 7 9 11 13 15'\nassert solution('''\n3\n\n''') == '3 1 5 7 9 11 13 15'"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '8'\nassert solution('3') == '8 1 3 5 7 9 11 13 15'\nassert solution('4') == '8 1 3 5 7 9 11 13 15 16 17'\nassert solution('5') == '8 1 3 5 7 9 11 13 15 16 17 18 19'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"3\"\n\nassert solution(\"6\") == \"8\"\n\n\"\"\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '0'\nassert solution('''\n4\n1 3 5 7\n3\n2 2\n2 5\n1 5\n''') == '3'\nassert solution('''\n5\n1 3 5 7\n2\n2 2\n2 5\n1 5\n''') == '1'\nassert solution('''\n4\n2 4\n1\n1\n''') == '1'\nassert solution('''\n3\n7 9 2\n3\n4\n''') == '3'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0\\n', solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5')\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 2\n1\n1\n1\n''') == '1'\n\"\"\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 3 5 7\"\"\") == \"3\"\nassert solution(\"\"\"3\n2 2\"\"\") == \"0\"\nassert solution(\"\"\"1 2 5 7\"\"\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 5 7') == '3'\nassert solution('3') == '1'\nassert solution('2 2') == '0'\nassert solution('2 5') == '1'\nassert solution('1 5') == '0'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0'\nassert solution('5\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0'\nassert solution('5\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5') == '3\\n1\\n0'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"3\"\nassert solution(\"4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n3\\n2\\n4\") == \"1\""
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 3 5 7\\n2 2\\n2 5\\n1 5\") == \"0\\n3\\n1\"\nassert solution(\"3\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\") == \"1\\n0\\n1\"\nassert solution(\"4\\n1 3 5 7\\n2 2\\n2 5\\n1 5\\n3\") == \"0\\n1\\n1\\n1\"\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5''') == '3\\n0'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5''') == '3'\nassert solution('''4\n1 3 5 7\n3\n2 2\n2 5\n1 5\nSample Output:\n''') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0'"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"0\"\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n1 1 -2 0\n''') == '0'\nassert solution('''\n4 4\n1 1 -2 -2\n1 1 2 2\n1 2 -1 -1\n2 2 1 -2\n''') == '1'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 1') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\n1 1 -2 0\") == \"0\"\nassert solution(\"3 5\\n0 1 -2 0\\n-2 2 2 0\\n1 1 1 1\") == \"1\"\n\n'''\n\nfrom math import sqrt\n\nw, n = list(map(int, input().split()))"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1\n1 1 -2 0\n1 2 3 4\nSample Output:\n1\n''') == '1'\nassert solution('''\n3 2\n1 1 -2 0\n1 2 3 4\nSample Output:\n1\n''') == '1'\nassert solution('''\n5 3\n1 1 -2 0\n1 2 3 4\n5 4 -2 -1\nSample Output:\n2\n''') == '2'\nassert solution('''\n3 3\n1 1 -2 0\n1 2 3 4\n1 3 1 -2 0\nSample Output:\n0\n''') == '0'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n-2 0\n''') == '0'\nassert solution('''\n1 2\n1 2 3\n''') == '1'\nassert solution('''\n1 3\n1 1 -2 0\n''') == '1'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n1 -2 0\n''') == '0'\nassert solution('''\n2 1\n-1 1 -2 0\n''') == '1'\nassert solution('''\n2 1\n-1 2 0\n''') == '0'\n'''\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\nprint(solution())\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '194'\nassert solution('5') == '2019 10 25'\nassert solution('3') == '194'\nassert solution('4') == '195'\nassert solution('5') == '2019 10 25'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sorted(stdin)) == \"2020 10 30\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n5\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194'\nassert solution('''\n2\n6\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n''') == '194'\nassert solution('''\n2\n7\n2019 10 18\n2019 10 19\n2020 10 02\n2020 10 16\n2020 10 23\n2020 10 31\n''') == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n5\n1 2 1\n3 4 3\n2 3 3\n5 4 5\n8 9 8\n\"\"\") == \"194\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '194'\nassert solution('3') == '1674'\nassert solution('4') == '10'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194'\nassert solution('5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '200'\nassert solution('5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194'\nassert solution('5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194'\nassert solution('5\\n2019 10 18\\n2019 10 19\\n2020 10 02\\n2020 10 16\\n2020 10 23') == '194'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"194\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '194'\nassert solution('4') == '187'\nassert solution('2 5') == '177'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"194\"\nassert solution(\"5\") == \"2019 10 25\"\nassert solution(\"1\") == \"2019 10 18\"\nassert solution(\"2\") == \"2019 10 10\"\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"194\"\nassert solution(\"1\") == \"2018\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('6 10 10 10 10 0') == '5 12.5'\nassert solution('5 10 10 5 10 0') == 'negative-infinity -5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity -5'"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'negative-infinity 0'\nassert solution() == '5 12.5'\nassert solution() == 'negative-infinity -5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity -5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 10 10 10 10 0\\n5 10 10 5 10 0\") == \"negative-infinity 0\\n5 12.5\\nnegative-infinity -5\"\nassert solution(\"5 10 10 10 10 0\\n0 0 5 10 10 0\") == \"negative-infinity -5\\n5 0\\n5 0\"\nassert solution(\"5 10 10 10 10 0\\n-5 0 5 10 10 0\") == \"negative-infinity 5\\n0 0\\n5 0\\n5 0\"\nassert solution(\"5 10 10 10 10 0\\n-5 0 5 10 10 0\\n-5 0 5 10 10 0\\n5 0\\n5 0\") == \"negative-infinity 5\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n5 0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 0\\n5 1 1 4 4 4 5 5\\n5 6 7 8 9 0\") == \"5 -5 -5 -5 -5 -5 -5 -5 -5 -5 -5 -5 -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity -5'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity 0\nassert solution('''5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == 'negative-infinity -5\nassert solution('''4 10 10 10 10 0\n4 10 10 5 10 0\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n6 10 10 5 10 0\n''') == 'negative-infinity 12.5\n'''\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 10 10 10 10 0\n5 10 10 5 10 0\n6 10 10 10 10 0\n''') == '''-infinity 4\n4 -5\nnegative-infinity -5\n'''\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"5 12.5\"\nassert solution(\"5 10 10 5 10 0\") == \"5 12.5\"\nassert solution(\"6 10 10 10 10 0\") == \"negative-infinity -5\"\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10 10 10 10 0\") == \"negative-infinity 0\"\nassert solution(\"5 10 10 5 10 0\") == \"negative-infinity -5\"\nassert solution(\"6 10 10 10 10 0\") == \"negative-infinity -5\"\n\n\"\"\""
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '2'\nassert solution('3 5') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == 'IMPOSSIBLE'\nassert solution('4 2') == '2'\nassert solution('5 2') == '1'"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4\\n100 30000\\n200 20000\\n300 10000\\n400 0') == '2'\nassert solution('2 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\n\nSample Input 2:\n3\n2 3\n4 5\n6 7\nSample Output 2:\nIMPOSSIBLE\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n100 30000\\n200 20000\\n300 10000\\n400 0\\n50 10000\\n75 20000\\n400 -40000') == '2'\nassert solution('1000000000\\n50 1000000000\\n-202000000\\n4 2000000000\\n10 2000000000\\n150000000\\n50000000\\n2000000000\\n400000000\\n100000000\\n200000000\\n600000000\\n300000000\\n100000000\\n500000000\\n100000000\\n400000000\\n500000000\\n500000000\\n400000000\\n300000000\\n20000000000\\n-400000000\\n-20000000000\\n-100000000\\n-200000000\\n-300000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-800000000\\n-100000000\\n-200000000\\n-300000000\\n-400000000\\n-500000000\\n-600000000\\n-8"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"5 4\") == \"2\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4') == 'IMPOSSIBLE'\nassert solution('1 4') == '2'\nassert solution('1 3') == '1'\nassert solution('3 3') == '2'"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 4\\n\"\n    \"100 30000\\n\"\n    \"200 20000\\n\"\n    \"300 10000\\n\"\n    \"400 0\\n\"\n    \"50 10000\\n\"\n    \"75 20000\\n\"\n    \"400 -40000\"\n    ) == \"2\"\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\nassert solution('''\n1 4\n1 10000\n3 10000\n1 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 5\n1 5\n1 5\n3 5\n''') == 'IMPOSSIBLE'\n''')\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"345 2\"\nassert solution(\"\"\"\n3 4\n1 2 -3 3\n4 -1 -5 5\n6 6 1 1\n\"\"\") == \"3 -1\"\nassert solution(\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"3 -1\"\nassert solution(\"\"\"\n3 4\n1 2 3\n4 -1 -5 5\n6 6 1 1\n\"\"\") == \"3 2\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\""
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'\nassert solution('3 3\\n2 3 4 5 2\\n1 2 3 4 5\\n2 5 6 7 5') == '135 2\\nrotS 2 1\\nnegR 2'"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 5 2 -7 3 6 -8 -1\n-1 -2 -8 2 -2 -4 1\n5 -1 0 7 -1 -4 -8\n''') == '344 2\\nrotS 2 1\\nnegR 2\\n'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100''') == '345 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n1 2 3 4\n-5 6 7 8\n10 11 12 13\n''') == '345 2'\nassert solution('''\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n''') == '345 2'\nassert solution('''\n2 2\n1 -2\n1 -2\n''') == '0 2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2 2\"\nassert solution(\"1 2\") == \"2 2\"\nassert solution(\"3 1\") == \"3 1\"\nassert solution(\"1 1\") == \"3 1\"\nassert solution(\"1 2\") == \"3 1\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"\"\"345 2\nrotS 2 1\nnegR 2\n\"\"\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100\") == \"345 2\\nrotS 2 1\\nnegR 2\"\nassert solution(\"3\\n10\\n1 2 3 4 5 6 7 8 9\\n10 2 3 4 5 6 7 8 9\") == \"75\\nrotS 3 1\\nnegS 2\\nnegS 3 2\\nnegS 3 4\\nnegS 3 5\\nnegS 3 6\\nnegS 3 7\\nnegS 3 8\\nnegS 3 9\\nnegS 4 2\\nnegS 4 5\\nnegS 4 6\\nnegS 4 7\\nnegS 4 8\\nnegS 4 9\\nnegS 5 2\\nnegS 5 3\\nnegS 5 4\\nnegS 5 5\\nnegS 5 6\\nnegS 5 7\\nnegS 5 8\\nnegS 5 9\\nnegS 6 2\\nnegS 6 3\\nnegS 6 4\\nnegS 6 5\\nnegS 6 6\\nnegS 6 7\\nnegS 6 8\\nnegS 6 9\\nnegS 7 2\\nnegS 7 3\\nnegS 7 4\\nnegS 7 5\\nnegS 7 6\\nnegS 7 7\\nnegS 7 8\\nnegS 7 9\\nnegS 8 2\\nnegS 8 3\\nnegS 8 4\\nnegS 8 5\\nnegS 8 6\\nnegS 8 7\\nnegS 8 8\\nnegS 8 9\\nnegS 9 2\\nnegS 9 3\\nnegS 9 4\\nnegS 9 5\\nnegS 9 6\\nnegS 9 7\\nnegS 9 8\\nnegS 9 9\" == \"135\\nrotR 2 1\\nnegR 2\\nrotS 2 1\\nnegS 2\\nrotS 4 1\\nrotS 4 2\\nnegS 4\\nrotS 5 1\\nrotS 5 2\\nnegS 5\\nrotS 5 5\\nnegS 5\\nrotS 6 1\\nrotS 6 2\\nnegS 6\\nrotS 6 3\\nrotS 6 4\\nrotS 6 5\\nrotS 6 6\\nnegS 6\\nrotS 7 1\\nrotS 7 2\\nnegS 7\\nrotS 7 7\\nrotS 7 8\\nrotS 7 9\\nnegS 7\\nrotS 8 1\\nrotS 8 2\\nnegS 8\\nrotS 8 3\\nrotS 8 4\\nrotS 8 5\\nrotS 8 6\\nnegS 8\\nrotS 9 1\\nrotS 9 2\\nnegS 9\\nrotS 9 9\"\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 4\n1 -2 5 200\n-8 0 -4 -10\n11 4 0 100\n\"\"\") == \"345 2\"\nassert solution(\"\"\"\n3 4\n1 2 5\n-8 0 -4\n11 4 0\n\"\"\") == \"455 3\"\nassert solution(\"\"\"\n3 4\n1 -2\n-8 0\n11 4\n\"\"\") == \"455 4\"\nassert solution(\"\"\"\n3 4\n1 -2\n-8 0\n11 4\n\"\"\") == \"500 5\"\nassert solution(\"\"\"\n3 4\n1 2 5\n-8 0 -4\n11 4 0\n\"\"\") == \"500 5\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"0.5\"\n\"\"\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n3 1 1\n''') == '0.5'\nassert solution('''\n10 4\n1 2 3 4 5 6 7 8 9 10\n''') == '7.5'\nassert solution('''\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == '7.5'\nassert solution('''\n100 200\n
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('5 10') == '4.125'\nassert solution('20 30') == '8.4375'\n\n\"\"\""
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n3 1 1\n''') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '0.5'"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '0.5'\nassert solution('1 1 1') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0.5'\nassert solution('3 2') == '0.5'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n3 1 1') == '0.5'\nassert solution('5 5\\n2 4 1 5 1') == '0.625'\n\"\"\"\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0.5\"\nassert solution(\"1 1 1\") == \"1.0\"\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9 11') == '1 4 5 2 6 7 3 8 9'\nassert solution('1 10') == '1 10'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9 11') == '1 4 5 2 6 7 3 8 9'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 11') == '1 4 5 2 6 7 3 8 9'\nassert solution('17 6') == '1 2 6 7 8 9 10 11 12 13 14 15 16 17'\nprint(solution(input()))"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 5 4 1 5 4 1 6 2 7 3 8') == '1 4 5 2 6 7 3 8'\nassert solution('15 8 10 4 1 5 4 1 6 2 7 3 8 9 12') == '1 4 5 6 8 9 12'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 10') == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution('2 6') == \"1 5 6\"\n\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom collections import defaultdict"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5 2 6 7 3 8 9 8 9'\nassert solution(\n'''\n4 4\n1 4\n2 5\n1 6\n2 7\n''') == '1 4 5 2 6 7'\nassert solution(\n'''\n5 5\n1 4\n2 4\n2 5\n3 5\n4 6\n''') == '1 4 2 4 5'\n'''\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7\\n3 8 9'\nassert solution('12 4\\n1 5\\n2 4\\n1 4\\n4 5\\n3 2\\n1 3\\n1 4\\n2 5') == '1 4 5\\n2 4 3'\nassert solution('9 9\\n7 7\\n1 6\\n3 7\\n2 6\\n2 7\\n1 7\\n2 6\\n4 5\\n4 6') == '1 4 5\\n2 6 7'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\\\n6 8\n3 6\n1 4\n5 2\n3 5\n4 1\n1 2\n6 7\n6 9\n8 5\n''') == '1 4 5 2 6 8 6 9 9'\nassert solution('''\\\n12 4\n4 7\n3 5\n2 6\n8 1\n2 7\n5 8\n1 5\n1 9\n1 10\n3 7\n5 2\n''') == '1 3 5 2 6 8 1 9'\n'''\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9 11\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5\\n2 6 7\\n3 8 9\\n4 9 6'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10\\n1 4\\n5 4\\n1 5\\n6 2\\n6 7\\n7 2\\n3 8\\n3 9\\n8 9\\n6 8\\n5 9') == '1 4 5 2 6 7 3 8 9'\nassert solution('1 2\\n2 3\\n3 4\\n4 5\\n5 6') == '2 3 4 5 6'\nassert solution('5\\n4\\n3\\n5\\n2\\n6\\n7') == '3 2 5 6 7'\n\n'''"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 2\") == \"13500\"\nassert solution(\"12000\") == \"13500\"\nassert solution(\"9000\") == \"10000\"\nassert solution(\"4500\") == \"10000\"\nassert solution(\"10000\") == \"12500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\nassert solution('''\n100 10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '10'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n1000\n\"\"\") == \"1000\"\nassert solution(\"\"\"\n1\n0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2\n100\n\"\"\") == \"100\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 2') == '1350'\nassert solution('12000') == '12000'\nassert solution('9000') == '9000'\nassert solution('4500') == '0'\nassert solution('10000') == '10000'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"11 2\\n12000\\n9000\\n4500\\n10000\\n12000\\n11000\\n12000\\n18000\\n10000\\n9000\\n12000\") == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"13500\"\nprint(\"You're a smart cookie!\")\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\\n12000\") == \"13500\"\nassert solution(\"11 2\\n12000\") == \"13500\"\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 2') == '13500'\nassert solution('12000') == '13500'\nassert solution('9000') == '13500'\nassert solution('4500') == '13500'\nassert solution('10000') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n12000\n10000\n''') == '13500'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n12000\n11000\n11000\n12000\n''') == '13500', f\"({solution('''4 2\n12000\n11000\n11000\n12000\n''')})\"\nprint(solution('''\n4 2\n12000\n11000\n11000\n12000\n'''))\nassert solution('''\n10 1\n10000\n9000\n9000\n12000\n9000\n10000\n9000\n10000\n9000\n12000\n9000\n9000\n12000\n11000\n9000\n9000\n10000\n9000\n10000\n9000\n''') == '12000', f\"({solution('''10 1\n10000\n9000\n9000\n12000\n9000\n10000\n9000\n10000\n9000\n12000\n9000\n9000\n10000\n9000\n10000\n9000\n''')})\"\nprint(solution('''\n10 1\n10000\n9000\n9000\n12000\n9000\n10000\n9000\n10000\n9000\n12000\n9000\n9000\n10000\n9000\n10000\n9000\n'''))\n'''\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 2''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!_=________Hot_cross_buns!_=\\nHot___cross____buns!"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 16\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\n''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution('''\n2 20\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 4 4 4 4\n''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution('''\n2 30\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 16\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\"\nassert solution(\"2 4 4 4 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\"\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 3\nMONDAY\nMON\nMOR\nMIER\nMIR\nMAY\nMAY\n\"\"\"\n    ) == \"MONDAY_\"\n\nassert solution(\"\"\"\n2 4\nMONDAY\nMONDAY\nMONDAY\nMONDAY\nMONDAY\nMONDAY\nMONDAY\nMONDAY\n\"\"\"\n    ) == \"MON_\"\n\nassert solution(\"\"\"\n1 7\nTuesday\nWEDNESDAY\nWEDNESDAY\nWEDNESDAY\nWEDNESDAY\nWEDNESDAY\nWEDNESDAY\n\"\"\"\n    ) == \"TUE_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_WED_"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 16\\nHot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\"2 16\\nHot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\n    pass\n\nassert solution(\"2 16\\nHot cross buns! =\\n4 4 4 4 4 4 4 4\\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\\n2 2 2 2 2 2 2 2 4 4 4 4\") == \"Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\ndef solution(stdin: str) -> str:\n    pass\n\n\n'''\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 16') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4''') == 'Hot_cross_buns!_=___Hot_cross_buns!_=\\n____________________Hot_cross_buns!_=\\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\\n'\n\n\nSample Input:\n1 10\nHey you guys! = Hey you guys! =\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\nHey you guys! =\n1 1 1 1 1 1 1 1 1 1\n\nSample Output:\nHey_you_guys_!_=__Hey_you_guys___=\n__Hey_you_guys___=_Hey_you_guys___=\n\nSample Input:\n1 100\nHa! Ha! = Ha! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2\nHa! =\n1 2 2 2 2 2 2 2 2\n1 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 16') == \"\"\"Hot_cross_buns!_=___Hot_cross_buns!_=\n____________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________Hot_cross_buns!_=\nTwo_a_pen-_ny,_One_a_pen-_ny,_Hot_cross_buns!_=\nHot_cross_buns!_=________Two_a_pen-_ny,_One_a_pen-_ny,\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot_cross_buns!_=\nHot_cross_buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_buns!_=_____Hot_cross_buns!_=\nHot_cross_buns!_=___Hot_cross_buns!_=\nHot_cross_"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 4 4 4 4\nSample Output:\nHot_cross_buns!_=___Hot_cross_buns!_=\n____________________Hot_cross_buns!_=\nOne_a_pen-_ny,_Two_a_pen-_ny,_Hot___cross____buns!_=\nHot___cross____buns!_=________One_a_pen-_ny,_Two_a_pen-_ny,\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == '33'\nassert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n2 5 9 1') == '9'\nassert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n2 5 9 1\\n2 7 3 1') == '1'"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '33'\nassert solution('3 2 1') == '0'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('10 1 2') == '1'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33\\n') == '33'"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"33\"\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 2 2\n1 2 5\n1 2 5\n1 2 5\n2 3 5\nSample Input:\n4 3\n1 2 4\n1 2 5\n1 2 3\n1 2 3\nSample Output:\n8\n\"\"\"\n) == \"8\""
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 1\\n1 2 10\\n1 4 6 6\\n1 6 10 5\\n2 10 30 33') == '33'\nassert solution('3 3 2\\n1 2 3 3\\n1 5 6 2\\n1 6 7 3\\n1 8 9 4\\n1 10 1 5\\n2 10 30 33') == '35'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n1\n2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '30'\n"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 1') == '33'\nassert solution('3 2 1') == '33'\nassert solution('3 2 1') == '33'"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n1 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\n'''\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n20 15 10\\n30 0') == '405'\nassert solution('3\\n20 15 10\\n30 0\\n20 7') == '405'\nassert solution('3\\n20 15 10\\n30 0\\n30 0') == '415'\nassert solution('3\\n20 15 10\\n30 0\\n20 7') == '405'\nassert solution('3\\n20 15 10\\n30 0\\n20 7\\n30 0') == '415'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n5 5 3\\n1 2 3 4\\n5 6\\n0 1\\n3 5\\n2 4\\n4 5\\n1 2\\n0 3\\n1 1\\n0 2\\n1 2\\n0 1\\n4 3\\n2 4\\n1 3\\n0 3\\n0 0\\n1 1\\n0 2\\n1 1\\n0 0\\n0 0\\n1 1\\n1 2\\n1 1\\n1 2\\n0 3\\n0 3\\n1 2\\n1 3\\n0 3\\n0 0\\n0 0\\n0 0\\n1 1\\n0 0\\n1 1\\n0 1\\n1 2\\n0 0\\n0 0\\n0 0\\n1 2\\n0 0\\n0 0\\n1 1\\n0 1\\n0 0\\n0 0\\n0 0\\n0 0\\n1 1\\n0 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n1 1\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '16'\nassert solution('5') == '50'\nassert solution('6') == '66'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n3 5\\n1 2\\n2 3\\n1 2\\n') == '1'\nassert solution('3\\n2 4\\n0 1\\n2 0\\n') == '4'\nassert solution('2\\n1 0\\n2 0\\n') == '2'\nassert solution('3\\n2 1\\n0 1\\n0 1\\n') == '3'\nassert solution('4\\n3 2\\n0 1\\n0 2\\n1 1\\n1 1\\n') == '4'"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '405'\nassert solution('3 2') == '1335'\nassert solution('3 2 3') == '1815'\nassert solution('3 3') == '1645'\nassert solution('3 3 3') == '4175'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\n5\n50 30 20 70\n5 5\n20 30 50\n30 0\n70 50\n''') == '330'\nassert solution('''\n3\n10 20 30\n10 20 30\n10 20 30\n''') == '30'\nassert solution('''\n4\n50 10 30 50\n0 10 10\n30 50 50\n0 0 0\n''') == '40'\n''') == '40'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n20 15 10\\n7 7\\n30 0\\n') == '405'"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"1\"\nassert solution('3') == \"1\"\nassert solution('4') == \"2\"\nassert solution('5') == \"2\"\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '405'\nassert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '405'\nassert solution('3 1 1') == '21'\nassert solution('3 3 3') == '16'"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '28 4 21 14.0'\nassert solution('3') == '4 4 4 14.0'\nassert solution('4') == '28 4 21 14.0'\n\"\"\"\n\nimport sys\nfrom collections import Counter, namedtuple"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3 4 8\n''') == '8.5'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"28 3 1\"\nassert solution(\"4\\n1 2 3 4\") == \"28 4 1\"\nassert solution(\"5\\n1 2 3 4 5\") == \"28 4 2\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"32 5 1\""
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2 4 7\n''') == '28 4 21 14.0'\nassert solution('''\n3\n2 5 3\n''') == '24 6 7.0'\nassert solution('''\n2\n1 2\n''') == '2 2.0'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n3\n3 4 5\n\"\"\") == \"\"\"28 4 21 14.0\"\"\"\nassert solution(\"\"\"\n1\n1 2\n\"\"\") == \"\"\"12 2.0\"\"\"\nassert solution(\"\"\"\n3\n4 4 4\n\"\"\") == \"\"\"12 12\"\"\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 4 7''') == '28 4 21 14.0'''\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == \"6 5 7\"\nassert solution('4') == \"8 6 7\"\nassert solution('5') == \"10 8 9 11\"\nassert solution('6') == \"14 9 8 7 11\"\nassert solution('7') == \"21 9 10 11 14\"\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    4\n    1 2 4 7\n    ''') == '28 4 21 14.0'\n    '''\n    Explanation:\n    If we randomly choose a $4$-pack of figurines with weights 1, 2, 4, and 7, then the resulting $4$-pack would be of weight 28, the minimum weight, and have a distinct number of weights.\n    '''\n\n\nimport math"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '28 4 21 14.0'\nassert solution('2') == '28 4 21 14.0'\nassert solution('3') == '28 4 21 14.0'\nassert solution('4') == '28 4 21 14.0'"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 4 7') == '28 4 21 14.0'"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 9\n7 1 2 3 4 5 6 7 8 9\n''') == 'yes\\n1 2 3 4\\n5 6 7 8 9\\n9 8 7 6 5 4 3 2 1\\n'''\n\nstdin = '''\n10 9\n7 1 2 3 4 5 6 7 8 9\n'''\n\nsolution(stdin)"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2 3\n2 3 1\n3 1 2''') == 'yes'\nassert solution('''8 5\n1 2 3 4 5 6 7 8\n2 4 6 8 7 5 3\n3 5 7 8 6 4 2\n4 6 8 5 7 3 2\n5 7 8 6 4 3 2\n6 4 5 7 3 2 8\n7 4 5 3 6 2 8''') == 'no'\nassert solution('''20 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n2 4 6 8 7 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n3 5 7 8 6 4 2 9 10 11 12 13 14 15 16 17 18 19 20\n4 6 8 5 7 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n5 7 8 6 4 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n6 4 5 7 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n7 4 5 3 6 2 9 10 11 12 13 14 15 16 17 18 19 20\n8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n10 6 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n11 7 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n12 7 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n13 8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n14 8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n15 7 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n16 7 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n17 8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n18 8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n19 9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n20 9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n21 9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n22 9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20''') == 'no'\nassert solution('''10 20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n2 4 6 8 7 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n3 5 7 8 6 4 2 9 10 11 12 13 14 15 16 17 18 19 20\n4 6 8 5 7 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n5 7 8 6 4 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n6 4 5 7 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n7 4 5 3 6 2 9 10 11 12 13 14 15 16 17 18 19 20\n8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n10 6 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n11 7 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n12 7 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n13 8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n14 8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n15 7 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n16 7 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n17 8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n18 8 5 3 2 9 10 11 12 13 14 15 16 17 18 19 20\n19 9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n20 9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n21 9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20\n22 9 6 5 3 2 8 10 11 12 13 14 15 16 17 18 19 20''') == 'no'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2\\n1 2 3 4\\n2 3 4 1') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nassert solution(\"10 1\") == \"no\"\nassert solution(\"5 1\") == \"no\"\nassert solution(\"3 2\") == \"no\"\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\nprint(solution(\"4 2\\n1 2 3 4\\n2 3 4 1\\n\"))\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_stdin) == output_stdout\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n1 2 3 4\n2 3 4 1''') == 'no'\nassert solution('''5 3\n5 6 6 4\n4 5 9 1\n7 8 5 3\n1 2 3 3''') == 'no'"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\n1 2 3\\n2 3 4\\n4 1 2\\n') == 'no'\nassert solution('3 3\\n1 2 3\\n2 3 4\\n4 1 2\\n') == 'no'\nassert solution('5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\\n') == 'yes'\nassert solution('5 5\\n1 2 3 4 5\\n2 3 4 5 1\\n3 4 5 1 2\\n4 5 1 2 3\\n5 1 2 3 4\\n') == 'no'"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes\\n1 2 3 4\\n2 3 4 1'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n2 3 4\") == \"yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '10'\nassert solution('1') == '0'\nassert solution('2') == '0.0'\nassert solution('3') == '0.0'\nassert solution('4') == '0.0'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n10 3 -10 -4 10\\n\") == \"10.000000000\"\nassert solution(\"3\\n-1 -2 -3 -4 1\\n\") == \"1.000000000\"\nassert solution(\"3\\n1 -1 -2 -3 1\\n\") == \"1.000000000\"\nassert solution(\"3\\n0 0 0 0 0\\n\") == \"0.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n10 10 -10 -4 10\n''') == '10.000000000'\nassert solution('''4\n0 -1 1 1\n''') == '0.0'\n'''\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n10 -10 -4 10\\n') == '10.000000000'\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"10.000000000\""
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n10\n10 -10 -4 10\n\"\"\") == \"10.000000000\"\nassert solution(\"\"\"\n5\n10 10 -10 -4 10\n\"\"\") == \"10.000000000\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"10.000000000\"\nassert solution(\"15\") == \"7.36111111\"\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n-10 -9 -8 -7 -6') == '-2.5'"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n10 10 -10 -4 10') == \"10.000000000\"\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '10.000000000'\nassert solution_fast() == '10.000000000'\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nprint('SUCCESS')\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n30\n3\n2\n45''') == \"1\"\nassert solution('''4\n3\n6\n3\n2\n45''') == \"2\"\nassert solution('''4\n20\n4\n5\n6''') == \"1\""
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n2\\n45') == '1'\nassert solution('2\\n3\\n2\\n45') == '2'\n\n'''"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4') == '1'\n\n'''\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n2\\n45') == '1'\nassert solution('5\\n3\\n2\\n4\\n5') == '2'\nassert solution('10\\n30\\n5\\n15\\n2') == '3'\n\"\"\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1'\nassert solution('4') == '0'\nassert solution('5') == '4'\nassert solution('3') == '0'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('10') == '5'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n4 6 2.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n\"\"\"\n) == \"0.000000000 1.360000000\"\nprint(solution(input()))\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 1.000000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 -1.000000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"0.000000000 0.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n\") == \"-0.880000000 0.000000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\nassert solution('5 5 8\\n4 6 2\\n3 6 1\\n2 4 8\\n3 5 3\\n') == '0.000000000 -1.000000000'\nassert solution('7 7 2.1\\n6 7 2\\n5 6 1\\n4 7 2\\n4 5 2\\n5 6 1\\n3 5 3\\n') == '-1.50000000 -0.70000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 6 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.360000000\nassert solution('''5 3 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.000000000\nassert solution('''6 6 2.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.000000000\nassert solution('''5 3 2.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 1.000000000\nassert solution('''5 3 3.0 0.66\n2 4 8\n4 6 1\n3 6 1\n4 5 5\n1 5 7\n3 5 3\n''') == '0.000000000 -1.000000000\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 6 3.0 0.66') == '0.000000000 1.360000000'\nassert solution('2 4 8') == '0.000000000 1.000000000'\nassert solution('4 6 1') == '0.000000000 1.000000000'\nassert solution('3 6 1') == '0.000000000 -1.000000000'\nassert solution('4 5 5') == '0.000000000 0.360000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 6 3.0 0.66') == '0.000000000 1.360000000'\nassert solution('2 4 8') == '0.000000000 1.000000000'\nassert solution('4 6 1') == '0.000000000 1.000000000'\nassert solution('3 6 1') == '0.000000000 -1.000000000'\nassert solution('4 5 5') == '0.880000000 0.000000000'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '0.000000000 1.360000000'\nassert solution('4 1 3.0 2.0\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3') == '1.000000000 -1.000000000'\nprint(solution(*input().split()))\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000\\n0.000000000 1.000000000\\n0.000000000 -1.000000000\\n0.000000000 0.360000000\\n0.880000000 0.000000000\\n-0.880000000 -0.360000000\\n1.02037965897'\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.000000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 -1.000000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 0.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"-0.880000000 -0.360000000\"\n"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 1.000000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 -1.000000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"0.000000000 0.360000000\"\nassert solution(\"6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\") == \"1.02037965897\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '4'"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('12') == '6'\nassert solution('50000') == '1'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == '4', 'First example'\nassert solution('''\n5\n0 0\n1 1\n0 3\n1 3\n2 2\n3 4\n1 4\nSample Output:\n5\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"4\"\n\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2''') == '4'\nassert solution('''20\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n16\n3 4\n7 5\n12 11\n13 14\n19 16\n20 18\n7 8\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13 19\n16 17\n1 20\n3 20\n8 10\n12 13\n13 14\n16 17\n1 9\n13 16\n11 16\n13 14\n19 20\n18 20\n10 14\n11 15\n12 19\n13"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n''') == '4'\nassert solution('''\n4\n0 0\n0 3\n3 3\n3 0\n2\n1 1\n2 2\n4 4\n5 5\n''') == '4'\nassert solution('''\n1\n0\n1\n''') == '1'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '4'\nassert solution('8') == '4'\nassert solution('16') == '5'\nassert solution('32') == '4'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '3'"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"0 0\") == \"1\"\nassert solution(\"0 3\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 0\") == \"1\"\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\") == \"4\"\nassert solution(\"5\\n0 0\\n0 3\\n3 3\\n3 0\\n2\") == \"3\"\n\n'''\n\n\nimport sys\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 0') == '2'\nassert solution('4 0') == '3 2'\nassert solution('4 0') == '3 1'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n''') == '2 3 2'\nassert solution('''4 0\n0 1\n1 0\n0 2\n''') == '1 3 3'"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n0 1\\n0 2\\n0 3\") == \"2\\n1 2\\n1 1\"\nassert solution(\"2\\n0 1\\n0 2\") == \"2\\n1 2\"\nassert solution(\"3\\n0 1\\n0 2\\n1 0\") == \"1\"\nassert solution(\"2\\n1 2\\n0 3\") == \"1\"\nassert solution(\"2\\n1 2\\n1 1\") == \"1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 0\\n0 1\\n0 2\\n0 3\") == \"2\\n3 2\\n3 1\"\nassert solution(\"4 0\\n0 0\\n0 1\\n0 2\\n0 3\") == \"1\\n2 1\\n2 0\\n2 3\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 0\n0 1\n0 2\n0 3\n\"\"\") == \"2 3 1\"\nassert solution(\"\"\"\n4 0\n0 1\n0 2\n0 3\n\"\"\") == \"2 3 1\"\nassert solution(\"\"\"\n4 0\n0 0\n0 1\n0 2\n0 3\n\"\"\") == \"2 3 1\"\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3 2\\n3 1\\n'\nassert solution('2') == '2\\n2\\n'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 0') == '2'\nassert solution('5 0') == '3 2'\nassert solution('4 2') == '1 3'"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 0\n0 1\n0 2''') == '2 1 2'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 0') == '2'\nassert solution('4 0') == '3 2'\nassert solution('4 0') == '3 1'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 0\n0 1\n0 2\n0 3\n''') == '2 3 1'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\n    '0 0 0',\n    '0 1.5 0',\n]) == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 0 0\n0 1.5 0\n''') == 'ok'\n\nassert solution('''2\n1\n3\n''') == 'crash'\n\nprint('trying')\nassert solution('''2\n1\n1\n''') == 'crash'\nprint('success')\n\n\"\"\""
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2.5 2.5 0') == 'ok'\nassert solution('2\\n2 1.5 0') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0 0\\n0 1.5 0\") == \"ok\"\nassert solution(\"2\\n0 0 1\\n0 1.5 1\") == \"ok\"\nassert solution(\"2\\n0 0 0\\n0 -1.5 0\") == \"ok\"\nassert solution(\"2\\n0 0 0\\n0 1.5 1\") == \"ok\"\nassert solution(\"2\\n0 0 0\\n0 -1.5 -1\") == \"ok\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n0 0 0\n0 1.5 0\n\"\"\") == \"ok\"\nassert solution(\"\"\"\n1\n0 0 0\n1 1 1\n\"\"\") == \"crash\"\nassert solution(\"\"\"\n5\n0 0 0\n1 1 1\n0 1 0\n0 1 1\n0 0 1\n\"\"\") == \"crash\"\nassert solution(\"\"\"\n2\n1 1 0\n1 0 1\n\"\"\") == \"crash\"\nassert solution(\"\"\"\n2\n0 0 0\n0 0 0\n\"\"\") == \"crash\"\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 0 0') == 'ok'\n\nassert solution('2 0 0') == 'crash'\n\nassert solution('3 0 0') == 'crash'\n\nassert solution('4 0 0') == 'crash'\n\nassert solution('5 0 0') == 'crash'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'ok'\n\nassert solution('''\n3\n0 0 0\n0 1.5 0\n0 0 0\n''') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0 0\\n0 1.5 0\\n') == 'ok'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n0 0 0\n0 1.5 0\n\"\"\") == \"ok\"\n\nassert solution(\"\"\"\n4\n0 0 0\n0 1.5 0\n\"\"\") == \"crashed\"\n\nassert solution(\"\"\"\n1\n0 0 0\n\"\"\") == \"crashed\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"20 20\") == \"20\""
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"5 5\") == \"2\"\nassert solution(\"6 5\") == \"3\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == \"2\"\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '2'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2'\nprint(solution('''\n3\n0 1\n0 2\n0 3\n'''))\nprint(solution('''\n4\n0 1\n0 2\n0 3\n0 4\n'''))\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n0 1\\n0 3\\n1 2\\n2 4\\n0 2\\n0 4\\n2 3\\n2 4\\n\") == \"2\""
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 3 3 3\") == \"2\"\nassert solution(\"6 3 2 3\") == \"1\"\nassert solution(\"5 5 3 3\") == \"1\"\nassert solution(\"6 2 2 3\") == \"0\"\nassert solution(\"6 7 3 3\") == \"0\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''\n4 4 4 4\nA B C\nD E F\nG H I\nJ K L\n''') == '1'\nassert solution('''\n7 3 3 3\nA B C\nD E F\nG H I\nJ K L\nM N O\nP Q R S\nT U V\n''') == '4'\n'''\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3 3 3') == '2'\nassert solution('8 3 2 2') == '3'\nassert solution('10 3 5 3') == '1'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 3 3') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3 3 3') == '2'\nassert solution('10 1 2 3') == '3'\nassert solution('20 5 5 5') == '2'\nassert solution('100 5 5 5') == '3'\nassert solution('100 10 20 5') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n3 C D E F\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''\n7 5 4 4\nA B C\nD E F\nG H I\nJ K L\nM N O\nP Q R\nS T U\n''') == '4'\nassert solution('''\n7 3 3 3\nA B C\nD E F\nG H I\nJ K L\nM N O\nP Q R\nS T U\nV W X\n''') == '1'\nassert solution('''\n5 5 1 1\nA B C D E\nF G H I J\nK L M N O\nP Q R S T\nU V W X Y\n''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2 1 2'\nassert solution('4\\nYYY\\nNYY\\nYNY\\nYYY') == '3 1 2 3'\nassert solution('4\\nYYY\\nYYY\\nYYY\\nYYY') == '4 1 2 3 4'\n\"\"\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1\\n1\\n') == '1\\n1\\n1'\nassert solution('2\\nYYY\\nNYY\\nYNY\\n') == '2\\n1 2 3\\n3 1 2'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\nYYY\nNYY\n''') == '1 2 3'\n\nassert solution('''\n2\nYYY\nYNY\n''') == '2 1 2'\n\nassert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2 1 2 3'\n'''\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join(['YYY', 'NYY', 'YNY'])) == '1 2 3'\nassert solution('\\n'.join(['NNNN', 'NNNN', 'NNNN'])) == '0'\nassert solution('\\n'.join(['YYY', 'NYY', 'YNY'])) == '1 2 3'\nassert solution('\\n'.join(['NNNN', 'NNNN', 'NNNN'])) == '0'\nassert solution('\\n'.join(['YYY', 'NNNN', 'NNNN'])) == '1 2 3'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nYYY\\nNYY\\nYNY') == '3 1 2'\nprint('PASSED')\nassert solution('2\\nYYY\\nNYY\\nYYY') == '1 2 2'\nprint('PASSED')\nassert solution('2\\nYYY\\nYYY\\nYYY') == '1 1 1'\nprint('PASSED')\nassert solution('2\\nYYY\\nYYY\\nYYY\\nYYY') == '1 2 2'\nprint('PASSED')\nassert solution('2\\nYYY\\nYYY\\nYYY\\nYYY\\nYYY') == '1 1 1'\nprint('PASSED')\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"YYY\") == \"2\"\nassert solution(\"NYY\") == \"2\"\nassert solution(\"YNY\") == \"1 2\"\nassert solution(\"A B C D\") == \"4 1 2 3\"\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nYYY\\nNYY\\nYNY') == '2 1 2'\nassert solution('3\\nYYY\\nNYY\\nYYY') == '1 3 2'\nassert solution('3\\nYYY\\nNYY\\nYYY') == '2 3 1'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\nY') == '1'\nassert solution('2\\n2\\nY') == '2'\nassert solution('3\\n3\\nY') == '3'\nassert solution('4\\n4\\nY') == '1'\nassert solution('5\\n5\\nY') == '2'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\nYYY\nNYY\nYNY\n''') == '2 1 2'\nassert solution('''\n3\nYYY\nNYY\nYNY\n''') == '0'\nassert solution('''\n4\nYYY\nNYY\nYNY\nYYY\n''') == '1 3 1 3'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n\"\"\"\n) == \"4\\n0\\n5\\n\"\n\nassert solution(\n    \"\"\"\n10 20\nx.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x."
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n\"\"\") == \"4 0 5\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\nx..\n...\n...\n3\n1 3\n1 1\n3 2\n\"\"\") == \"4\\n0\\n5\\n\"\n\"\"\"\nimport sys\nsys.path.append('/Users/vsadnayash/Desktop/SProject/lab6_A')\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2\nx.\n.\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 2\n.x\n..\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 2\nx.\n.x\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\nx.\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1\nx.\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == \"1 1\\n4 4\\n5 5\\n1 1\\n3 3'\n\nassert solution('1 1') == \"0"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n    xxx\n    xxx\n    xxx\n    3\n    1 3\n    1 1\n    3 2\n    ''') == '4'\n\nassert solution('''3\n    xxx\n    xxx\n    xxx\n    3\n    1 3\n    1 1\n    3 2\n    ''') == '0'\n\nassert solution('''3\n    xxx\n    xxx\n    xxx\n    3\n    1 3\n    1 1\n    3 2\n    ''') == '5'\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == '0\\n0\\n0\\n', \"Empty\"\nassert solution(\"3 3\") == '4\\n0\\n0\\n', \"Rows = 3\"\nassert solution(\"x..\") == '0\\n0\\n0\\n', \"Columns = 3\"\nassert solution(\"x.x\") == '4\\n0\\n0\\n', \"x.x\"\nassert solution(\"xx\") == '0\\n0\\n0\\n', \"xx\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '4'\nassert solution('3 3') == '0'\n\"\"\"\nimport math\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 5\nx.x.x.x.x\n.x.x.x.x.x\nx.x.x.x.x.x\nx.x.x.x.x.x\nx.x.x.x.x.x\n\"\"\") == \"25\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n3') == '4.114 -2.842'\nassert solution('3\\n4\\n3') == '6.297 -0.784'\nassert solution('2\\n100\\n10') == '100.000 -10.000'\nassert solution('2\\n100\\n10') == '100.000 -10.000'\nassert solution('2\\n100\\n10') == '100.000 -10.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5\n3\n4\n5 3\n''') == '4.114 -2.842'\nassert solution('''\n3\n5\n3\n4\n5 3\n''') == '6.297 -0.784'\nassert solution('''\n2\n4\n5\n4\n1 1\n''') == '5.000 -0.000'\n'''\n    return \"Case #{}: {}\".format(i+1, solution(input))\n    \n'''"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n3\\n4\\n3\\n4') == '6.294 -0.784'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.000 -1.000'\nassert solution('2') == '0.000 -2.000'\nassert solution('3') == '0.000 -1.000'\nassert solution('4') == '0.000 0.000'\nassert solution('5') == '0.000 0.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0.000 -1.000'\nassert solution('3') == '0.000 -0.000'\nassert solution('4') == '0.000 -0.000'\nassert solution('5') == '0.000 -0.000'\nassert solution('6') == '0.000 -0.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1.110'\nassert solution('2') == '2.100'\nassert solution('3') == '2.100'\nassert solution('4') == '1.064'\nassert solution('5') == '5.000'\n\nprint('All tests passed')\n'''"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    2\n    2\n    3\n    4\n    5 3\n''') == '1.118 -2.842\\n5.000 3.000'\nassert solution('''\n    3\n    2\n    4\n    5 3\n''') == '4.114 -2.842\\n6.297 -0.784\\n5.000 3.000'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3\\n5\\n1\\n4\\n5 3\") == \"4.114 -2.842\\n6.297 -0.784\\n5.000 3.000\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\") == \"18.557 -1.843\\n16.198 -2.002\\n13.000 3.000\\n12.000 4.000\\n11.000 5.000\\n10.000 6.000\\n9.000 7.000\\n8.000 8.000\\n7.000 9.000\\n6.000 10.000\\n5.000 11.000\\n4.000 12.000\\n3.000 13.000\\n2.000 14.000\\n1.000 15.000\\n0.000 16.000\\n-1.000 17.000\\n-2.000 18.000\\n-3.000 19.000\\n-4.000 20.000\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-3.618 -2.903'\nassert solution('2') == '3.600 -1.400'\nassert solution('3') == '-2.002 -2.121'\nassert solution('4') == '0.800 -0.500'\nassert solution('5') == '1.400 0.000'\n\"\"\"\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n5\\n3\") == \"4.114 -2.842\"\nassert solution(\"1\\n2\\n3\") == \"6.297 -0.784\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '3 5 8'\nassert solution('5 4\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '5 6'\nassert solution('6 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '6 7'\nassert solution('10 4\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8') == '10 8'"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n2 3 5 7\") == \"3\"\nassert solution(\"3 2\\n2\\n3\\n5\\n\") == \"5\"\nassert solution(\"4 5\\n1 2 3 4\\n2\\n2\") == \"5\"\nassert solution(\"4 5\\n2 1 3 2\\n2\\n2\") == \"3\"\nassert solution(\"3 5\\n1\\n1\\n2\\n\") == \"3\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\") == \"3\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\") == \"5\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"8\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n') == '10'"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3\\n3') == '3'\nassert solution('1 2 3\\n4') == '4'\nassert solution('2 2 2\\n3') == '4'\nassert solution('3 3 4\\n4') == '8'\nassert solution('4 5\\n5 6 7\\n1\\n2 3') == '10'"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 3 5 7\n2\n3\n5\n6\n8\n''') == '13'\nassert solution('''\n2\n5\n3\n8\n''') == '8'\nassert solution('''\n7\n2 3 5 7\n2\n8\n7\n5\n13\n10\n''') == '13'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"5 1\") == \"3\"\nassert solution(\"4 3\") == \"4\"\n\nimport sys\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"5 2 2\") == \"5\"\nassert solution(\"5 2 3\") == \"8\"\nassert solution(\"5 2 5\") == \"10\"\nassert solution(\"5 2 6\") == \"13\"\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\") == \"3\\n5\\n8\"\nassert solution(\"2 1\\n3\\n2\\n3\") == \"6\""
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4 5\\n\"\n    \"2 3 5 7\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"8\\n\") == \"3\\n\"\nassert solution(\n    \"4 5\\n\"\n    \"2 3 5 7\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"5\\n\"\n    \"6\\n\"\n    \"8\\n\"\n    \"8\\n\"\n    \"7\\n\"\n    \"10\\n\") == \"8\\n\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 3\\n4 5 1\\n5 2 4\\n') == '0'\nassert solution('1 1 2\\n1 1 2\\n') == '1'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"6 3\") == \"1\"\nassert solution(\"6 0\") == \"2\"\nassert solution(\"6 1\") == \"3\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5\\n') == '0'\nassert solution('12\\n0 1\\n1 2\\n2 3\\n2 4\\n5 6\\n5 7\\n5 2 7\\n') == '1'\nassert solution('15\\n0 1\\n1 2\\n2 3\\n2 4\\n5 6\\n5 7\\n5 2 7\\n6 8\\n6 9\\n6 2 9\\n') == '2'\nassert solution('200\\n0 1\\n1 2\\n2 3\\n2 4\\n5 6\\n5 7\\n5 2 7\\n6 8\\n6 9\\n6 2 9\\n') == '1'\nassert solution('2\\n0 1\\n1 2\\n2 3\\n2 4\\n5 6\\n5 7\\n5 2 7\\n') == '1'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'\nassert solution([3, 5, 2, 1, 5, 3]) == '1'\nassert solution([0, 1, 2, 3, 4, 5]) == '0'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n6 3\n0 1\n1 2\n2 3\n2 4\n1 5\n1 2 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10 10\n0 1\n2 3\n2 5\n4 6\n4 7\n3 8\n3 9\n4 10\n4 11\n5 12\n5 13\n6 14\n6 15\n\"\"\") == \"2\"\n\n\"\"\"\n0. The description seems to have been changed and it is now 3, 5, 7, 11, 13, 15.\n\n1. Let's create a directed graph and assign a value to each node, starting with 0 and ending with 15.\n\n2. We can use a helper function to find the maximum connection possible between the nodes.\n\n3. A recursive function will need to accept two arguments:\n    1. The current value of the recursion call\n    2. The maximum value (m) of the current call.\n\n4. If the current value of the recursion call is less than the maximum value of the current call, then the value of the recursion call will be added to the maximum value of the current call.\n\n5. Once the recursion call is finished, the maximum value of the current call will be the maximum value in the previous call plus the maximum value of the current call.\n\n6. If the current value of the recursion call is equal to the maximum value of the current call, then the maximum value of the current call will be added to the maximum value of the previous call.\n\n7. This process repeats until the maximum value in the current call is equal to the maximum value in the previous call.\n\n8. The maximum value at the end of the current call is returned, and the maximum value at the end of the previous call is added to the maximum value in the current call.\n\n9. The maximum value at the end of the current call is added to the maximum value of the current call.\n\n10. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n11. The maximum value at the end of the current call is returned.\n\n12. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n13. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n14. The maximum value at the end of the current call is returned.\n\n15. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n16. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n17. The maximum value at the end of the current call is returned.\n\n18. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n19. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n20. The maximum value at the end of the current call is returned.\n\n21. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n22. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n23. The maximum value at the end of the current call is returned.\n\n24. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n25. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n26. The maximum value at the end of the current call is returned.\n\n27. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n28. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n29. The maximum value at the end of the current call is returned.\n\n30. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n31. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n32. The maximum value at the end of the current call is returned.\n\n33. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n34. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n35. The maximum value at the end of the current call is returned.\n\n36. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n37. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n38. The maximum value at the end of the current call is returned.\n\n39. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n40. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n41. The maximum value at the end of the current call is returned.\n\n42. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n43. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n44. The maximum value at the end of the current call is returned.\n\n45. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n46. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n47. The maximum value at the end of the current call is returned.\n\n48. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n49. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n50. The maximum value at the end of the current call is returned.\n\n51. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n52. This process will be repeated until the maximum value in the current call is equal to the maximum value in the previous call.\n\n53. The maximum value at the end of the current call is returned.\n\n54. The maximum value at the end of the previous call is added to the maximum value in the current call.\n\n55. This process will be repeated"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3\\n0 1\\n1 2\\n2 3\\n2 4\\n1 5\\n1 2 5') == '0'\nassert solution('15 4\\n0 1\\n1 3\\n2 2\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1 156\\n1 157\\n1 158\\n1 159\\n1 160\\n1 161\\n1 162\\n1 163\\n1 164\\n1 165\\n1 166\\n1 167\\n1 168\\n1 169\\n1 170\\n1 171\\n1 172\\n1 173\\n1 174\\n1 175\\n1 176\\n1 177\\n1 178\\n1 179\\n1 180\\n1 181\\n1 182\\n1 183\\n1 184\\n1 185\\n1 186\\n1 187\\n1 188\\n1 189\\n1 190\\n1 191\\n1 192\\n1 193\\n1 194\\n1 195\\n1 196\\n1 197\\n1 198\\n1 199\\n1 200')\n\nassert solution('15 4\\n0 1\\n1 3\\n2 2\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n1 17\\n1 18\\n1 19\\n1 20\\n1 21\\n1 22\\n1 23\\n1 24\\n1 25\\n1 26\\n1 27\\n1 28\\n1 29\\n1 30\\n1 31\\n1 32\\n1 33\\n1 34\\n1 35\\n1 36\\n1 37\\n1 38\\n1 39\\n1 40\\n1 41\\n1 42\\n1 43\\n1 44\\n1 45\\n1 46\\n1 47\\n1 48\\n1 49\\n1 50\\n1 51\\n1 52\\n1 53\\n1 54\\n1 55\\n1 56\\n1 57\\n1 58\\n1 59\\n1 60\\n1 61\\n1 62\\n1 63\\n1 64\\n1 65\\n1 66\\n1 67\\n1 68\\n1 69\\n1 70\\n1 71\\n1 72\\n1 73\\n1 74\\n1 75\\n1 76\\n1 77\\n1 78\\n1 79\\n1 80\\n1 81\\n1 82\\n1 83\\n1 84\\n1 85\\n1 86\\n1 87\\n1 88\\n1 89\\n1 90\\n1 91\\n1 92\\n1 93\\n1 94\\n1 95\\n1 96\\n1 97\\n1 98\\n1 99\\n1 100\\n1 101\\n1 102\\n1 103\\n1 104\\n1 105\\n1 106\\n1 107\\n1 108\\n1 109\\n1 110\\n1 111\\n1 112\\n1 113\\n1 114\\n1 115\\n1 116\\n1 117\\n1 118\\n1 119\\n1 120\\n1 121\\n1 122\\n1 123\\n1 124\\n1 125\\n1 126\\n1 127\\n1 128\\n1 129\\n1 130\\n1 131\\n1 132\\n1 133\\n1 134\\n1 135\\n1 136\\n1 137\\n1 138\\n1 139\\n1 140\\n1 141\\n1 142\\n1 143\\n1 144\\n1 145\\n1 146\\n1 147\\n1 148\\n1 149\\n1 150\\n1 151\\n1 152\\n1 153\\n1 154\\n1 155\\n1 156\\n1 157\\n1 158\\n1 159\\n1 160\\n1 161\\n1 162\\n1 163\\n1 164\\n1 165\\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\\n\") == \"0\"\nassert solution(\"2 3\\n\") == \"1\"\nassert solution(\"4 3\\n\") == \"0\"\nassert solution(\"4 3\\n\") == \"1\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '1'\nassert solution('5 4') == '2'\nassert solution('5 6') == '1'\nassert solution('6 7') == '2'\nassert solution('6 8') == '3'\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1'\nassert solution('6 2') == '2'\nassert solution('3 3') == '0'\nassert solution('7 7') == '1'"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106\\n107\\n71\"\nassert solution(\"\"\"\n3 1\n1 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n\"\"\") == \"106\\n107\\n72\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '107'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1\n50 2 5 C1 L1 C1 U1 C1\n1 1 5 C1 L1 C100 U1 C1\n70 3 1 C1\n''') == '106\\n107\\n71\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\") == \"106\\n107\\n71\"\nassert solution(\"2 2\\n2 2 0 0\\n2 1 1 1\\n\") == \"2\\n2\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n\") == \"1\\n1\"\nassert solution(\"1 1 1 1\\n1 1 1 1\\n\") == \"1\"\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '107'\nassert solution('2 3') == '106'\nassert solution('2 3') == '106'\nassert solution('3 1') == '107'\nassert solution('4 1') == '107'"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '106\\n107\\n71'\nassert solution('1 1') == '107\\n'"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1') == '107'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\\n') == '106\\n107\\n71\\n'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n50 2 5 C1 L1 C1 U1 C1\\n1 1 5 C1 L1 C100 U1 C1\\n70 3 1 C1\\n') == '106\\n107\\n71\\n'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 3\n20 2 3 L1\n3 1 L1 U1\n100 2 4 U1\n4 1 5 C1\n20 2 2 U2\n1 3 5 L2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20 3 1 C2\n30 2 2 L2\n20 4 1 L3\n1 2 5 U2\n20 3 1 C2\n1 1 2 U1\n30 3 1 C2\n1 3 4 U1\n1 3 5 L2\n20"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AA') == '1'\nassert solution('BB') == '1'\nassert solution('CCCCCCCC') == '515'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == 0\nassert solution(\"a\") == 1\nassert solution(\"ab\") == 1\nassert solution(\"abab\") == 1\nassert solution(\"ababa\") == 1\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AA\") == \"1\"\nassert solution(\"AB\") == \"0\"\nassert solution(\"ABA\") == \"6\"\nassert solution(\"ABB\") == \"2\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AA') == '51'"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AA') == '1'\nassert solution('AC') == '0'\n'''\nn = int(input())\ns = input()\n\nfrom collections import Counter\ncounts = Counter(s)"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"51\", solution()\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AA') == \"1\"\nassert solution('AAB') == \"8\"\nprint(f\"Solution: {solution(input())}\")\n\n\"\"\"\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AA') == '51'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AA') == 51\n\n\"\"\""
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AA\") == \"51\""
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '2 1'\nassert solution('''\n5\n1 20 30 40 50\n10 5 6 7 8\n15 10 15 15 15\n18 1 2 3 4\n6 1 2 3 4\n''') == '1 2 3 4'\n\nassert solution('''\n3\n23 42 57\n31 50 72\n37 19\nSample Output:\n''') == 'no ties'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\nassert solution(\"3\\n5 6 7 8 9\\n1 2 3 4 5\\n1 3 2 4 5\\n1 4 2 3 5\\n1 5 2 3 4\\n1 6 2 3 4\") == \"2 3\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71') == '1 2'\nassert solution('5\\n2 2 4 1 2\\n3 5 4 2 3\\n4 2 1 2 5\\n2 5 3 1 2\\n4 4 3 3 4\\n1 1 2 1 2\\n2 2 3 2 1') == '2 1'\nassert solution('10\\n2 2 3 3 4 4 2 2\\n3 4 5 5 3 3 3 4\\n5 5 1 1 5 5 1\\n3 1 1 1 3 1 1 1\\n5 5 4 4 5 5 5\\n2 5 5 5 2 5 5 1\\n4 4 4 4 4 5 5\\n1 1 1 1 1 5 5\\n2 2 2 1 2 1 5') == '1 2 1'\nassert solution('20\\n3 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n4 6 7 9 10 11 13 14 15 16 17 18 19 20\\n2 5 7 9 10 11 13 14 15 16 17 18 19 20\\n3 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n1 1 1 1 1 1 1 1 1 1 1 1\\n4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n1 1 1 1 1 1"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == '1 2'\nassert solution('''4\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == '2 4'\nassert solution('''2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == 'no ties'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n3 29 45 56 68\\n1 19 43 50 72\\n11 25 40 49 61\\n9 23 31 58 63\\n4 27 42 54 71\") == \"1 2\"\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''5 13 9 24 5\n20 19 32 42 35\n27 28 36 46 45\n5 4 7 8 21\n18 17 20 23 34\n10 11 4 12 30\n''') == '5 10'\nassert solution('''1 2 3 5 7 9\n5 3 2 1 7 9\n9 7 3 1 2 5\n7 9 2 1 3 5\n5 3 9 1 7 2\n1 8 9 2 7 3\n''') == '9 7 8 1 5'\nassert solution('''16 5 9 14 19\n17 2 5 10 7\n11 14 4 3 21\n2 3 3 9 7\n3 15 4 1 17\n14 19 3 9 12\n13 5 8 7 15\n5 10 6 7 13\n11 17 9 2 15\n14 1 3 9 8\n5 2 3 1 9\n4 5 6 3 11\n7 5 8 9 4\n3 5 4 8 2\n''') == '11 17 9 2 15'\n\nprint(solution('''9 14 9 4 5\n14 15 9 5 4\n2 9 8 4 5\n5 9 5 4 2\n5 9 4 8 2\n4 5 8 9 2\n4 5 2 9 8\n2 5 9 4 5\n9 5 4 2 4\n2 4 9 5 9\n9 2 5 4 8\n'''))"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''2\n7 3 2\n1 5 6\n4 2 3\n3 7 6\n1 3 5\n8 5 7\n9 4 7\n2 6 9\n''') == '8 5 7'\nassert solution('''3\n1 5 2\n5 3 2\n5 4 2\n''') == '5 3 2'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n3\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == 'no ties'\n''')\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == \"1 2\"\nassert solution('''14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\nSample Output:\n9 20''') == \"9 20\"\nassert solution('''8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\nSample Output:\n''') == \"1 2\"\n\nNote: For this problem, assume that the cards are numbered from 1 to n in the order that they are given.\n\n------\n\nBingo is a game of chance played by a group of players. Each player has his or her own bingo card with a $5$-by-$5$ grid of numbers. Each number appears at most once per card. The bingo caller calls out a sequence of randomly drawn numbers, and the players mark the numbers that appear on their card as they are called out. The winner is the player that completes a line of five marked numbers (horizontally, vertically or diagonally) on his or her card. The winning player then yells \u201cbingo\u201d and the game ends.\n\nYou have been volunteering with a local youth group and have been running bingo games for the children. They love bingo, but every time two or more kids yell \u201cbingo\u201d at the same time, a spirited \u201cdisagreement\u201d breaks out. You\u2019ve created a slightly modified version of bingo (in the hopes of introducing fewer ties or the subsequent disagreements) and your goal is to determine if there is any possibility that a tie (where two kids can yell bingo at the same time) can occur. Write a program that takes a collection of bingo cards and determines if there is any possibility that a tie (where two kids can yell bingo at the same time) can occur, when the last number in the sequence is called.\n\nFor example, consider the following two bingo cards:\n\n$ \\begin{array}{ccccc} 3 & 29 & 45 & 56 & 68 \\\\ 1 & 19 & 43 & 50 & 72 \\\\ 11 & 25 & 40 & 49 & 61 \\\\ 9 & 23 & 31 & 58 & 63 \\\\ 4 & 27 & 42 & 54 & 71 \\end{array} $\n\n\u00a0\n\n$ \\begin{array}{ccccc} 14 & 23 & 39 & 59 & 63 \\\\ 8 & 17 & 35 & 55 & 61 \\\\ 15 & 26 & 42 & 53 & 71 \\\\ 10 & 25 & 31 & 57 & 64 \\\\ 6 & 20 & 44 & 52 & 68 \\\\ \\end{array} $\n\nThen this set of two cards could result in a tie if the sequence of numbers called was\\[ 40~ 61~ 64~ 10~ 57~ 49~ 11~ 31~ 25 \\]\n\nThis sequence would result in the card on the left completing the third row and the card on the right completing the fourth row when the number $25$ is called.\n\n-----Input-----\nThe first line of the input is an integer $n$ ($2 \\leq n \\leq 100$), the number of bingo cards. After the first line are the $n$ bingo cards, each separated from the next by a blank line of input.\n\nEach bingo card consists of five lines of input. Each line consists of five integers in the range from $1$ to $3000$. The numbers on each bingo card are unique.\n\n-----Output-----\nIf no ties are possible between any two cards, output \u201cno ties\u201d. Otherwise, output the two numbers $a$ and $b$ ($1 \\le a < b \\le n$) identifying the two cards for which a tie could occur, where the cards are numbered from $1$ to $n$ in the order that they appear in the input. If multiple pairs of cards can tie, output the pair with the smallest $a$, breaking any remaining ties with the smallest $b$.\n\n-----Examples-----\nSample Input:\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\nSample Output:\n1 2\n\nSample Input:\n14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\nSample Output:\n''') == \"1 2\"\n\nassert solution('''3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71''') == \"1 2\"\n\nassert solution('''14 23 39 59 63\n8 17 35 55 61\n15 26 42 53 71\n10 25 31 57 64\n6 20 44 52 68\nSample Output:\n''') == \"1 2\""
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n\"\n    \"3 2 1\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n) == \"0\"\nassert solution(\n    \"5\\n\"\n    \"5 2 1\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n) == \"4\"\nassert solution(\n    \"9\\n\"\n    \"9 2 1\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n) == \"8\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''\n2\n2 3\n1 2\n''') == '0'\nassert solution('''\n5\n5 1 3 2 1\n1 3 3 2 1\n1 4 4 2 1\n1 2 1 1 1\n1 2 3 3 1\n''') == '6'\nassert solution('''\n10\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n''') == '15'\nassert solution('''\n10\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n3 2 1\n''') == '15'\n'''"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n\n'''\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n1 1 2 1\n2 1 2 1\n3 1 2 1\n1 1 3 1\n1 1 3 1\n2 2 2 2\n1 2 3 1\n1 3 1 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\n\nassert solution('''\n1\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\n\nassert solution('''\n1\n5 3 1\n4 2 3\n2 1 3\n4 2 1\n''') == '3'\n\nassert solution('''\n1\n5 3 1\n4 2 3\n2 1 3\n4 2 1\n''') == '3'\n\nassert solution('''\n1\n1 1 1\n1 1 1\n''') == '0'"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 1\n1 2\n1 2\n''') == '0'\n\nassert solution('''\n10\n6 3 1 1 4 2 4 1 1\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''\n7\n3 1 4\n2 3 2\n1 5 2\n5 6 1\n4 5 6\n3 5 5\n2 6 3\n''') == '2'\nassert solution('''\n7\n3 2 1\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n''') == '0'\n''')\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 2 1\n1 2 3\n1 2 3\n''') == '0'\nassert solution('''\n3\n3 2 1\n2 3 1\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n4 2 1 3\n4 2 1 3\n4 2 1 3\n4 2 1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n2 1 1\n1 2 3\n1 2 3\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3') == '0.4\\n0.2\\n0.171428571429\\n0.228571428571'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\") == \"0.4\\n0\"\n\nassert solution(\"4\\n1 2 3\\n6 2 3\\n10 2 3\") == \"0.2\\n0\"\n\nassert solution(\"5\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == \"0.171428571429\\n0.428571428571\"\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n') == '0.4\\n0.2\\n0.171428571429\\n0.228571428571\\n'\nassert solution('6\\n2 3\\n1 2 3\\n10 2 3\\n16 3 4\\n') == '0.4\\n0.2\\n0.171428571429\\n0.228571428571\\n'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0.2'\n\nassert solution([\n    '3',\n    '2',\n    '1'\n]) == '0.0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3') == '0.4\\n0'\nassert solution('10\\n1 2 3\\n16 3 4\\n25 3 4\\n49 3 4') == '0.171428571429\\n0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3') == '0.4\\n0'\nassert solution('4\\n1 2 3\\n6 2 3\\n16 3 4') == '0.2\\n0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\") == '0.2\\n0.171428571429\\n'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n4 5 6\n1 1 1 2\n''') == '0.2171428571428571428571428571429\n\nassert solution('''\n2\n5 2 3\n1 1 1 2\n''') == '0.22222222222222222222222222222222'\n\nassert solution('''\n10\n1 1 1 2 2 2 2 2 2 2 2\n''') == '0.2105263157894736842105263157895'"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3\\n6 2 3\\n10 2 3') == '0.171428571429'\nassert solution('5\\n1 2 3\\n10 2 3\\n15 2 3\\n20 2 3') == '0.228571428571'\nassert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 5\\n3 3') == '3 + 3 = 6'\nassert solution('2\\n1 5\\n3 3') == '3 * 3 = 9'\nassert solution('2\\n1 5\\n3 3') == '4 - 5 = -1'\nassert solution('2\\n1 5\\n3 3') == '-1 - -6 = 5'\nassert solution('2\\n1 5\\n3 3') == 'impossible'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1 + 1 = 2\\n3 * 3 = 9'\nassert solution('5') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('7') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n5 + 5 = 10\\n5 * 5 = 25'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"3 + 2 = 5\"\nassert solution(\"3\") == \"5 + 3 = 8\"\nassert solution(\"5\") == \"5 + 5 = 10\"\nassert solution(\"5\") == \"10 - 5 = 5\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"3\\n1 2\\n3 4\\n\") == \"1 + 2 = 3\\n3 * 4 = 12\"\nassert solution(\"5\\n-4 -3 2\\n1 2 4\") == \"1 + 2 = 3\\n3 * 4 = 12\\n-4 - 3 = -1\\n1 * 2 = 2\"\nassert solution(\"2\\n-3 1\\n2 1\") == \"1 + 2 = 3\\n3 * 2 = 6\"\nassert solution(\"5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n\") == \"1 + 2 = 3\\n3 * 4 = 12\\n4 - 5 = -1\\n1 * 2 = 2\\n5 * 6 = 30\""
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 4\\n-2 3\\n-1 -6') == '3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('5\\n1 5\\n3 3\\n4 5\\n-1 -6') == '3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n1 + 5 = 6'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n'\nassert solution('''\n1\n1\n-1\n-1\n''') == '-1 = 1\\n-1 = -1\\n'\nassert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\\n'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n1 5\n3 3\n4 5\n-1 -6\n''') == '3 * 3 = 9\\n1 + 5 = 6\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('''\n3\n2 3\n5 6\n4 -1\n''') == '3 * 3 = 9\\n5 + 6 = 11\\n4 - 1 = 3'\nassert solution('''\n3\n1 3\n2 6\n3 4\n''') == '1 + 3 = 4\\n2 * 6 = 18\\n3 * 4 = 24'\nassert solution('''\n3\n2 3\n1 3\n2 3\n''') == 'impossible'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\n\nassert solution('''\n4\n1 5\n3 3\n4 5\n-1 -6\n''') == 'impossible'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 5\\n3 3\\n4 5\\n-1 -6') == '1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5'\nassert solution('5\\n1 2\\n3 4\\n5 2\\n-1 -6\\n-7 -8') == '1 + 2 = 3\\n3 * 4 = 8\\n5 - 2 = -1\\n-1 - -6 = 5\\n-7 - 8 = -5'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '4'\nassert solution('1 4') == '0'\nassert solution('5 1') == '1'\n\nprint('All tests passed!')"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '1\\n'\nassert solution('2 3') == '4\\n'\nassert solution('5 3') == '6\\n'\nassert solution('5 9') == '0\\n'\nassert solution('4 1') == '0\\n'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4\\n1\\n4\\n6\\n'\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '4'\nassert solution('5 2') == '0'\nassert solution('10 3') == '1'\nassert solution('10 2') == '9'\nassert solution('10 10') == '9'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 8\\n2 3\\n2 8\\n5 8\\n5 9\\n3 6 6\\n1 7 4\\n1 3 1\") == \"4\\n1\\n4\\n6\\n0\"\nassert solution(\"10 20\\n1 9\\n1 4\\n1 6\\n1 8\\n1 2\\n2 5\\n2 9\\n3 4\\n3 8\\n3 11\\n4 5\\n4 9\\n4 12\\n5 7\\n5 10\\n6 6\\n6 9\\n7 8\\n7 11\\n8 4\\n8 6\\n8 9\\n9 8\\n9 11\\n10 6\\n10 9\\n11 6\\n11 9\\n12 8\\n12 9\\n13 6\\n13 9\\n14 6\\n14 9\\n15 7\\n15 10\\n16 6\\n16 9\\n17 8\\n17 11\\n18 6\\n18 9\\n19 8\\n19 11\\n20 7\\n20 10\\n21 6\\n21 9\\n22 8\\n22 11\\n23 6\\n23 9\") == \"18\\n18\\n20\\n21\\n22\\n\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '4'\nassert solution('6 3') == '1'\nassert solution('5 2') == '0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"5\\n\"\n    \"1\\n\"\n    \"5\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    ) == \"0\"\n\nassert solution(\n    \"2\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"2\\n\"\n    ) == \"1\"\n\nassert solution(\n    \"6\\n\"\n    \"2\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"3\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"4\\n\"\n    ) == \"4\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '''\n4\n1\n4\n6\n0\n'''\n\nassert solution('''\n5 1\n1 7\n3 5\n5 7\n8 8\n8 8\n1 2\n''') == '''\n-1\n-1\n-1\n-1\n'''"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '4\\n1\\n4\\n6\\n0'\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 8\n2 3\n2 8\n5 8\n5 9\n3 6 6\n1 7 4\n1 3 1\n''') == '''4\n1\n4\n6\n0'''\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2') == '2'\nassert solution('3\\n1 2 3') == '2'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == \"4\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == \"2\"\nassert solution('4') == \"3\"\nassert solution('5') == \"6\"\nassert solution('10') == \"6\"\nassert solution('2') == \"0\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2 3 4\") == \"4\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"4\", \"Should be 4\"\nassert solution(\"\"\"\n3\n2 3\n\"\"\") == \"2\", \"Should be 2\"\nassert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"0\", \"Should be 0\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"5\", \"Should be 5\"\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3 4\\n') == '4\\n'\nassert solution('5\\n1 2 3 4\\n5 6 7 8\\n') == '7\\n'"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3 4') == '4'\nassert solution('3\\n1 1 2') == '2'\nassert solution('5\\n1 2 3 4 5') == '2'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 2 4') == '4'\nassert solution('3 5 7 1') == '6'\nassert solution('3 2 3 1') == '2'\nassert solution('3 2 3 1 2') == '3'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    5\n    1 2 3 4 5\n''') == '4'\nassert solution('''\n    7\n    1 2 3 4 5 6 7\n''') == '5'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\""
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 31 2') == '4 3'\nassert solution('20 60') == '4 2'\nassert solution('50 90') == '2 1'\nassert solution('10 10') == '3 3'\nassert solution('1 10') == '2 0'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '4 3'\nassert solution('20 10') == '4 2'\nassert solution('5 20') == '1 2'\nassert solution('10 10') == '0 0'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2 1\"\nassert solution(\"\"\"\n2 1\n20 60\n50 90\n\"\"\") == \"4 3\"\nassert solution(\"\"\"\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 32 2') == '4 3'\nassert solution('20 57 3') == '4 2'\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n30 100\\n50 100\") == \"1 1\\n1 1\\n2 2\\n3 3\\n3 3\"\nassert solution(\"1 1\\n30 100\\n100 20\\n50 60\\n50 90\\n100 20\\n60 100\\n20 60\\n100 60\\n50 60\\n50 100\\n100 60\\n100 100\\n100 100\") == \"1 1\\n1 1\\n2 2\\n3 3\\n3 3\\n2 2\\n2 2\\n1 3\\n0 2\\n1 3\\n1 3\\n0 2\\n1 2\\n1 2\\n0 2\\n1 1\\n1 1\""
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 30 2\") == \"4 3\"\n\nassert solution(\"1 100 20\") == \"4 4\"\n\nassert solution(\"100 100 20\") == \"4 4\""
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 31 2\n20 60\n50 90\n''') == '4 3'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3 5'"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 30 2') == '1 30 2'\nassert solution('20 60') == '20 60'\nassert solution('50 90') == '50 90'\nassert solution('1 30 2 0 30 0 0 20 0 0 0 20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4 3\"\nassert solution(\"\"\"\n20 60\n60 30\n20 70\n90 60\n\"\"\") == \"2 2\"\nassert solution(\"\"\"\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n100 100\n50 100\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50\n50 50"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '1'\n\nSample Input:\n1 2 1\nSample Output:\n2\n\"\"\"\n\nR, W, D = map(int, input().split())\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 1 1\n''') == \"1\", \"1\"\nassert solution('''\n10 1 2\n''') == \"0\", \"1\"\nassert solution('''\n10 2 1\n''') == \"0\", \"2\"\nassert solution('''\n10 2 2\n''') == \"0\", \"2\"\nassert solution('''\n10 3 1\n''') == \"0\", \"3\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('3 2 1') == '6'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('2 3 1') == '4'\nassert solution('2 5 2') == '5'\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"10 10 1\") == \"11\"\nassert solution(\"100 100 1\") == \"999\"\n\"\"\"\nfrom functools import reduce\n\nR, W, d = list(map(int, input().split()))\nprint(reduce(lambda x, y: x * y, range(1, R + 1)) % (10 ** 9 + 7))\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1\") == \"3\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"3\"\nassert solution(\"1 2 2\") == \"7\"\nassert solution(\"1 1 2\") == \"7\"\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3'"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391\\n') == '3 1'\nassert solution('20\\n2 4 0 1 0 1 2\\n') == '2 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n1341 2412 1200 3112 2391\n\"\"\") == \"3 1\"\nassert solution(\"\"\"\n5\n1000\n1000\n1000\n1000\n1000\n\"\"\") == \"2 1\"\n\n\"\"\""
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nassert solution(\"3\\n1630 2412 1200 3112 2391\") == \"4 2\"\nassert solution(\"4\\n1630 2412 1200 3112 2391\") == \"2 2\"\nassert solution(\"3\\n1630 2412 1200 3112 2391\") == \"2 2\"\nassert solution(\"3\\n1630 2412 1200 3112 2391\") == \"0 0\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1341 2412 1200 3112 2391\") == \"3 1\"\nprint(solution())\n\n---Input---\n4\n1341 2412 1200 3112 2391\nSample Output:\n4 1\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1341 2412 1200 3112 2391\n''') == '3 1'\nassert solution('''\n3\n3 2\n''') == '2 1'\nassert solution('''\n3\n1341\n2391\n''') == '1 0'\nassert solution('''\n5\n1341\n2412\n1200\n3112\n2391\n''') == '2 1'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n1341 2412 1200 3112 2391\n\"\"\") == \"3 1\"\nassert solution(\"\"\"\n3\n12000 12000 12000\n\"\"\") == \"1 3\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"1 2 3 4\"\nassert solution(\"6\") == \"4 3 2 5 1\"\nassert solution(\"100\") == \"11\"\nassert solution(\"14\") == \"2 4\"\nassert solution(\"5\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n1341 2412 1200 3112 2391\"\n) == \"3 1\"\nassert solution(\n    \"1\\n1341 2412 1200 3112 2391\"\n) == \"0 1\"\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391\\n') == '3 1'\nprint(solution(input()))\n\"\"\"\n\nn = int(input())\nb = list(map(int, input().split()))\n\nanswer = 0\npillar = []\n\nfor i in range(n):\n    if i == 0:\n        pillar.append(b[0])\n        pillar.append(b[1])\n    elif i == n - 1:\n        pillar.append(b[i - 1])\n        pillar.append(b[i])\n    else:\n        pillar.append(b[i - 1])\n        pillar.append(b[i])\n        pillar.append(b[i + 1])\n\nfor j in range(n - 1):\n    if pillar[j] + pillar[j + 1] < pillar[j + 2] + pillar[j + 2]:\n        answer += 1\nprint(answer, pillar.index(max(pillar)) + 1)\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('10\\n11 20 12 20 10 10 20 10 20') == '2 2'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'\nassert solution('''\n3 5\n2 3 5\n1 3 2\n2 3 5\n3 2 4\n''') == '8'\n'''\n\nimport sys\nimport re\n\nlines = [x.strip() for x in sys.stdin if x!= '']"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '6'\nassert solution('''\n0 0\n1 1\n''') == '0'\nassert solution('''\n10 20\n10 3\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n''') == '3'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n\"\"\") == \"6\"\nassert solution(\"\"\"\n10 20\n1 3 8\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n\"\"\") == \"8\"\nassert solution(\"\"\"\n10 20\n3 5\n1 3 7\n2 1 1\n2 3 2\n2 3 5\n3 2 4\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n10 10\n3 5\n2 5 7\n1 4 1\n2 5 2\n2 4 3\n2 5 5\n3 5 5\n4 2 2\n\"\"\") == \"7\"\nassert solution(\"\"\"\n10 20\n2 5 7\n1 4 1\n2 5 2\n2 4 3\n2 5 5\n3 5 5\n4 2 2\n\"\"\") == \"8\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([10, 20, 3, 5, 1, 3, 7, 2, 1, 1, 2, 3, 2, 3, 5, 4]) == \"6\""
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('1.000000000000001\\n10\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\nassert solution('5\\n1\\n3\\n4\\n1\\n3\\n') == '6'"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"10 20\") == \"6\"\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 20\") == \"6\"\nassert solution(\"1 1\") == \"1\""
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 20') == '6'\nassert solution('6 5') == '0'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 20\\n3 5\\n1 3 7\\n2 1 1\\n2 3 2\\n2 3 5\\n3 2 4\\n') == '6'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0 1 -1'"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 ab b\n1 b\n''') == '0 1'\n\nassert solution('''\n1 ab b\n''') == '-1 0'\n\nassert solution('''\n1 ab b\n2 a\n''') == '1 1'\n\nassert solution('''\n2 ab b\n1 c\n''') == '1 -1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 b') == '0 1'\nassert solution('2 ab b') == '0 -1'\nassert solution('2 aa b') == '-1 -1'\nassert solution('2 aa b') == '-1 -1'\nassert solution('2 ab b') == '-1 -1'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3\nab\n2\nc\n''') == '1 0 -1'\nassert solution('''\n1\n2\nab\n''') == '1 0 -1'\nassert solution('''\n2\n3\nab\n2\nc\n''') == '0 0 2'\n\n'''\nSample Input:\n\n3\n2\nab\n2\nc\nSample Output:\n\n0 0 1\n-1 -1 2\n'''"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 ab b\\n1 b\\n\") == \"0 1 \nassert solution(\"2 ab b\\n1 ab\\n\") == \"0 -1 \nassert solution(\"2 ab c\\n1 ab\\n\") == \"1 -1 \nassert solution(\"2 ab c\\n1 ab\\n\") == \"0 2 \nassert solution(\"3 a\\n2 ab\\n1 ab\\n\") == \"0 -1 \n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n10 ab a\n1 b\n5 a\n\"\"\") == \"0 1\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 ab 2') == '0 1'\nassert solution('2 ab b') == '0 1'\nassert solution('3 ab b') == '-1 0'\nassert solution('4 ab b') == '-1 0'\nassert solution('5 ab b') == '-1 0'\n\n\"\"\"\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 ab b') == '0 1 -1'\nassert solution('3 a b') == '0 1 -1'\nassert solution('4 a b') == '0 1 -1'\nassert solution('5 a b') == '0 1 -1'\nassert solution('10 a b') == '4 3 4 4 4 4 4 5 2 3 2 5'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 ab b\") == \"0 1\"\nassert solution(\"1 b\") == \"-1 0\"\n\nstdin = '''3\na\na b\nb\na\nb'''\n\nstdin = '''5\na\nb b\nb\nc c\nc\n'''\n\nprint(solution(stdin))"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 ab b\n1 b\n''') == '0 1 -1'\nassert solution('''\n3\naa\n-b\n''') == '0 1 2 -1'\nassert solution('''\n1\nac\n''') == '-1 0'\nassert solution('''\n5\nab\nac\nb\nac\nc\n''') == '0 2 0 2 1'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\"\nassert solution(\"2 4\\n1 2 2 2 2 2\\n
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n\") == \"1\"\nassert solution(\"2 4\\n1 1 2\\n2\\n\") == \"3\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n1\\n2\\n') == '1\\n3\\n'"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4\n1 1 2\n2\n1 1 2\n2''') == '1'\nassert solution('''2 2\n1 1\n2''') == '1'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n1 2\n1 3''') == '1.2'\n\nassert solution('''2 3\n1 3\n1 3''') == '0.5'\n\nassert solution('''2 3\n1 2\n2 3''') == '1.6666666666666667'\n\nprint(solution('''2 4\n1 1 2\n2\n1 1 2'''))\n\nprint(solution('''3 4\n1 1 2\n2\n1 1 2'''))\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4\\n1 1 2\\n2') == '3'\nassert solution('2 5\\n1 1 2 3 4 5\\n2') == '8'"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 1 2\\n2\\n1 1 2\\n2\") == \"1\"\nassert solution(\"4 4\\n1 2 1 1\\n2\\n1 1 1 1\\n2\") == \"5\"\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2\\n1 1 2\\n2\\n') == '3'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2\n1 1 2\n2\n1 1 2\n2\n1 1 2\n2\n''') == \"1\"\nassert solution('''\n1\n2\n1 1 2\n2\n1 1 2\n2\n''') == \"3\"\nassert solution('''\n1\n2\n1 1 2\n2\n1 1 2\n2\n''') == \"1\"\nassert solution('''\n1\n2\n1 1 2\n2\n1 1 2\n2\n''') == \"3\"\n''')\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n0 5 2\n5 0 4\n2 4 0\n3 4 0\n4 5 2\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n3\n0 1 2\n2 1 3\n1 2 3\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n5\n0 5 2\n5 0 4\n2 4 0\n3 4 0\n4 5 2\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n2\n0 5 2\n2 5 3\n1 5 3\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n2\n0 5 2\n2 5 3\n1 5 3\n\"\"\") == \"4\""
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    0 5 2\n    5 0 4\n    2 4 0\n    ''') == \"7\"\n\"\"\""
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n5 2 4\n2 4 0\n4 3 2\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n9\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n\"\"\") == \"17\"\n\nassert solution(\"\"\"\n20\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n0 5 2\n5 0 4\n2 4 0''') == '7'\nprint('Solution: ', solution('''3\n0 5 2\n5 0 4\n2 4 0'''))\n\"\"\"\nimport heapq"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '4'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"11\"\nassert solution(input()) == \"12\"\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\n\n'''"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '7'\nassert solution('5') == '5'\nassert solution('2') == '0'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''0 5 2\n5 0 4\n2 4 0''') == '7'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20') == '1'\nassert solution('5') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '1'\nassert solution('100000') == '2'\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n5\") == \"3\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\") == \"2\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"1\"\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '8'\nassert solution('1099511627776') == '8'"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '4'\nassert solution('13') == '4'\nassert solution('22') == '2'\nassert solution('101010101') == '2'\nassert solution('0000') == '4'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('53425174859') == '12'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '2'\nassert solution('7\\n') == '4'\nassert solution('2147483647\\n') == '0'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '5\\n'\n    '1\\n'\n    '2\\n'\n    '3\\n'\n    '4\\n'\n    '5\\n'\n) == '8'\nassert solution(\n    '4\\n'\n    '1\\n'\n    '2\\n'\n    '3\\n'\n    '4\\n'\n) == '0'\nassert solution(\n    '0\\n'\n    '1\\n'\n    '2\\n'\n    '3\\n'\n    '4\\n'\n) == '0'\nassert solution(\n    '1\\n'\n    '2\\n'\n    '3\\n'\n    '4\\n'\n    '5\\n'\n) == '0'\nassert solution(\n    '10\\n'\n    '1\\n'\n    '2\\n'\n    '3\\n'\n    '4\\n'\n) == '4'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\n\"\"\""
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"8\"\n\n--Input Format--\nThe only line contains the number $X$ satisfying the condition above.\n\n--Output Format--\nPrint a single integer $k$, satisfying the condition above.\n\n--Constraints--\n0 <= $X$ <= 10^15\n\n--Hint--\nUse dynamic programming to solve the problem in less than $O(n)$ time.\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\nx.x\n.x.x\nx.x''') == \"2\""
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n.x.\nx.x\nx.x\n''') == '2'\nassert solution('''\n2 3\nx..\n.x.\nx.x\n''') == '1'\nassert solution('''\n2 2\nx.x\n''') == '1'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 1') == '1'\nassert solution('3 2') == '2'\nassert solution('10 10') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n.x..\n.x.x\n.x.x\n..x.\n..x.\n''') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 3') == '1'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2'\n"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\\nx.x\\nx..x\\nx.\") == \"2\"\n\nassert solution(\"1 1\\nx.x\\nx.x\\nx.x\") == \"1\"\n\nassert solution(\"1 1\\nx.x\\n.x.\\n.x.\") == \"0\"\n\nassert solution(\"2 2\\nx.x\\nx.x\\nx.x\") == \"1\"\n\nassert solution(\"4 4\\nx.x.\\nx.x.\\nx.x.\\nx.x.\\nx.x.\\nx.x.\\nx.x.\") == \"0\""
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''x.\n.x.\nx.''') == '2'\nassert solution('''x.\n.x.\nx.''') == '0'\nassert solution('''x.\n.x.\nx.x''') == '1'\nassert solution('''x.\nx.x\nx.x''') == '0'"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n''') == '9'\nassert solution('''\n4\n1 3 1\n2 5 2\n3 4 3\n4 0 0\n5 3 0\n''') == '5'\nassert solution('''\n5\n1 3 2\n2 5 2\n3 4 3\n4 0 0\n5 3 0\n''') == '6'\nassert solution('''\n3\n1 3 2\n2 5 2\n3 4 3\n''') == '-1'\nassert solution('''\n1\n1 3 1\n''') == '3'"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '10\\n2\\n10\\n12\\n5\\n-1'"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0\\n') == '9\\n-1\\n5\\n6\\n'"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"9\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n1 3 2\n2 5 2\n3 0 0\n4 2 4\n5 3 0\n\"\"\") == \"9\"\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 2') == '9'\nassert solution('2 5 2') == '6'\nassert solution('3 0 0') == '-1'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '4'\nassert solution('2 5 2') == '5'\nassert solution('3 0 0') == '-1'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n3 2 1\\n3 0 0') == '6'\nassert solution('4\\n5 3 1\\n3 0 0') == '-1'"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6\\n'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '91'\nassert solution('1') == '40'\nassert solution('1 1 40 30 20 10') == '91'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '95'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == \"91\"\nassert solution('100') == \"0\"\nassert solution('1000') == \"0\"\nassert solution('10000') == \"0\"\nassert solution
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\n\n'''\n------Task------\nThe speedrun of the video game \"Prince of Python\" is as follows:\n\nLevel 1:\n- You find a weapon and get it in hand.\n- You find an item and get it into your inventory.\n- You find an item and get it into your inventory.\n- You find a 2-digit integer that says \"the level is\" and complete the level.\n\nLevel 2:\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n\nLevel 3:\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n- You obtain the item from the first level.\n\nYou are going to speedrun this game by finishing all of the levels as fast as possible, and you can beat them in any order that you want.\n\nYou enter each level equipped with one of $n+1$ magical items. In the beginning you only have item $0$ in your inventory. Once you beat a level, you get to keep the item numbered the same as that level. For example, on finishing level $5$, you obtain a mighty Gauntlet of 5 Fingers you may equip thereafter instead of the less-acclaimed Sword of 0 Damage you always start out with.\n\nBeating a level can take different amounts of time depending on which item you take into the level with you. Higher-numbered items are more powerful, so if playing by the rules it is always at least as fast as finishing the level with a higher-numbered item.\n\nHowever, each level also has a shortcut left in by the developers. The shortcut for a level can be accessed by applying a specific item in an unconventional way. By doing so you can finish the level as fast as, or even faster than, if you had used any of the other items.\n\nHow long will it take you to beat all of the levels of the game?\n\n-----Input-----\nThe input consists of:\n - One line containing an integer $n$ ($1 \\le n \\le 2500$), the number of levels.\n - $n$ lines, describing the levels.\n\nThe $i$th such line starts with two integers $x_ i$ and $s_ i$ ($0 \\le x_ i \\le n$, $1 \\le s_ i \\le 10^9$), the shortcut item for level $i$ and the completion time for level $i$ when using the shortcut.\n\nThe remainder of the line has $n+1$ integers $a_{i,0}, \\ldots, a_{i,n}$ ($10^9 \\ge a_{i,0} \\ge a_{i,1} \\ge \\ldots \\ge a_{i,n} \\ge s_ i$), where $a_{i,j}$ is the completion time for level $i$ when playing by the rules using item $j$.\n\n-----Output-----\nOutput the minimum time it takes to beat, in any order, all of the levels in the game.\n\n-----Example-----\nSample Input:\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\nSample Output:\n91\n'''\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n\"\"\") == \"91\"\nassert solution(\"\"\"\n4\n3 2 40 30 20 10\n1 2 1 100 10\n2 1 95 50 30 20\n3 1 95 95 95 10\n4 1 100 10\n\"\"\") == \"3372\"\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"91\""
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '91'\nassert solution('100') == '0'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '91'\nassert solution('2\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '84'\nassert solution('3\\n1 1 40 30 20 10\\n3 1 95 95 95 10\\n2 1 95 50 30 20') == '99'\n\n##\n\n## Notes:\n## - The shortcut item is used only as fast as the item it replaces.\n## - The shortcut item can be chosen any of the items in the level.\n## - The shortcut item can be used to complete any level, however, you are required to finish the level by applying the shortcut item in the appropriate order.\n## - The time of finishing a level by applying a shortcut item is equal to the time of finishing that level without applying any other items.\n## - The minimum time it takes to beat the game is equal to the sum of the minimum time it takes to finish the game by using the shortcut items plus the minimum time it takes to finish a level using any other item.\n## - For example, if the level is from position $1$ to $5$, the minimum time it takes to beat it is $84$ by using any item. For the positions $1$, $2$, and $3$, the minimum time it takes to beat it is $40$. For the positions $2, 3, and 4$, the minimum time it takes to beat it is $30$.\n## - Since the level is a n-ary tree, the levels are numbered from $0$ to $n$, not $1$ to $n+1$.\n## - The first line contains the number of levels in the game.\n## - The $i$th such line contains two integers $x_ i$ and $s_ i$ ($0 \\le x_ i \\le n$, $1 \\le s_ i \\le 10^9$), the shortcut item for level $i$ and the completion time for level $i$ when using the shortcut.\n## - The rest of the line has n+1 integers $a_{i,0}, \\ldots, a_{i,n}$ ($10^9 \\ge a_{i,0} \\ge a_{i,1} \\ge \\ldots \\ge a_{i,n} \\ge s_ i$), where $a_{i,j}$ is the completion time for level $i$ when playing by the rules using item $j$.\n## - Note that, as an example, the $5$th level of the game is just an example that can be used as an input.\n## - The output must be the minimum time it takes to beat the game.\n\n## Notes:\n## - In the example above, there is no shortcut item that can be used to complete the level of the game.\n## - The shortcut item can be used to complete any level, however, you are required to finish the level by applying the shortcut item in the appropriate order.\n## - The time of finishing a level by applying a shortcut item is equal to the time of finishing that level without applying any other items.\n## - The minimum time it takes to beat the game is equal to the sum of the minimum time it takes to finish the game by using the shortcut items plus the minimum time it takes to finish a level using any other item.\n## - For example, if the level is from position $1$ to $5$, the minimum time it takes to beat it is $84$ by using any item. For the positions $1$, $2$, and $3$, the minimum time it takes to beat it is $40$. For the positions $2, 3, and 4$, the minimum time it takes to beat it is $30$.\n## - Since the level is a n-ary tree, the levels are numbered from $0$ to $n$, not $1$ to $n+1$.\n## - The first line contains the number of levels in the game.\n## - The $i$th such line contains two integers $x_ i$ and $s_ i$ ($0 \\le x_ i \\le n$, $1 \\le s_ i \\le 10^9$), the shortcut item for level $i$ and the completion time for level $i$ when using the shortcut.\n## - The rest of the line has n+1 integers $a_{i,0}, \\ldots, a_{i,n}$ ($10^9 \\ge a_{i,0} \\ge a_{i,1} \\ge \\ldots \\ge a_{i,n} \\ge s_ i$), where $a_{i,j}$ is the completion time for level $i$ when playing by the rules using item $j$.\n## - Note that, as an example, the $5$th level of the game is just an example that can be used as an input.\n## - The output must be the minimum time it takes to beat the game.\n\nimport collections\nimport heapq"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == \"91\"\nassert solution('1 1 40 30 20 10') == \"91\"\nassert solution('2 1 95 95 95 10') == \"95\"\nassert solution
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '91'\nassert solution('''\n1\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '100'\nassert solution('''\n2\n1 1 40 30 20 10\n3 1 95 95 95 10\n2 1 95 50 30 20\n''') == '99'\nassert solution('''\n1\n1 1 40 30 20 10\n2 1 95 95 95 10\n3 1 95 50 30 20\n''') == '80'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 5\n1 2\n2 3\n''') == '15'"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '15'\nassert solution('5') == '15'\nassert solution('1') == '15'\nassert solution('100') == '100'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\\n\") == \"15\"\nassert solution(\"10\\n25 20\\n0\\n1 2\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n\") == \"50\"\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n10 20\n0\n1 1\nSample Input 2:\n8\n1 2 3 4 5 6 7 8\n0\n1 1\n0\n1 2\n0\n1 3\n0\n1 4\n0\n1 5\n0\n1 6\n0\n1 7\nSample Output 2:\n5\n''') == '5'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n15 20\n0\n1 1\n''') == '15'\nassert solution('''\n2\n15 20\n0\n1 1\n''') == '15'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"15\"\nassert solution(\"2\") == \"20\"\nassert solution(\"3\") == \"5\"\nprint(solution(input()))\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('2\\n10\\n0\\n1 1\\n') == '10'\n\n'''\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"15\""
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n15 20\\n0\\n1 1\") == \"15\"\nassert solution(\"2\\n10 20\\n1 1\") == \"10\"\nassert solution(\"2\\n10 20\\n1 1\\n0 1\\n1 2\\n2 1\") == \"9\"\n\n\"\"\"\n\nclass Node:\n    def __init__(self, item):\n        self.val = item\n        self.left = None\n        self.right = None"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '15'\nassert solution('1') == '0'\nassert solution('0') == '0'"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == 'impossible'\nassert solution('3 1 375') == '375'\nassert solution('2 5 283') == '283'\nassert solution('1 4 716') == '716'\nassert solution('3 4 98') == '98'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1 375\") == \"375\"\nassert solution(\"2 3 283\") == \"impossible\"\n\ninput\n2 3 3\n5 1 716\n2 4 98\n4 1 375\n4 2 716\n3 1 375\nSample Output\n375\nimpossible\n\"\"\"\nimport collections\nimport math\nimport re\nimport sys\nimport itertools"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"impossible\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 4\\n2 5 283\") == \"impossible\"\nassert solution(\"3 3 10\\n4 5 82\\n5 4 72\") == \"1150\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == 'impossible'\nassert solution('5 1 375') == '0'\nassert solution('2 5 283') == '500'\nassert solution('1 4 716') == '1048'\nprint('Congratulations! All test cases passed!')"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\n3 1 375\n2 5 283\n1 4 716\n3 4 98\n''') == 'impossible'\n\nassert solution('''\n5 7\n3 1 2\n2 1 7\n1 2 4\n3 1 3\n4 2 5\n4 3 1\n3 2 4\n''') == '500'\n\nassert solution('''\n5 7\n2 1 2\n1 2 4\n1 2 7\n3 1 3\n4 2 5\n4 3 1\n3 2 4\n''') == '2000'\n\nassert solution('''\n5 9\n1 2 3\n2 1 5\n3 2 4\n4 1 2\n5 2 3\n6 1 3\n7 1 5\n8 1 4\n9 1 6\n10 1 7\n''') == '10000'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3\\n2 5 283') == 'impossible'\n\nassert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == '375'\n\nassert solution('3 3\\n1 2 716\\n3 4 98\\n2 5 283') == 'impossible'\n\n\n'''\n\nn, m = map(int, input().split())\n\nN = []\nfor i in range(n):\n    l = list(map(int, input().split()))\n    N.append(l)\n\nF = []\nfor i in range(m):\n    l = list(map(int, input().split()))\n    F.append(l)\n\nans = []"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\") == \"impossible\"\nassert solution(\"5 8\\n7 2 68\\n4 3 783\\n1 6 29\\n6 6 39\\n3 4 835\\n1 6 39\\n6 4 783\\n3 1 835\\n1 4 629\\n1 4 39\\n1 6 29\\n3 3 835\\n6 3 983\\n2 6 39\\n1 4 39\\n1 6 29\\n2 6 983\\n3 3 835\\n2 1 835\\n3 2 983\\n3 3 835\\n2 3 983\\n3 2 835\\n3 1 835\\n2 1 983\\n2 3 983\\n1 4 629\\n1 4 39\\n3 4 835\\n2 1 835\\n2 2 983\\n3 2 835\\n3 2 983\\n2 3 835\\n1 4 629\\n1 4 39\\n1 6 29\\n1 2 983\\n2 3 983\\n3 2 835\\n3 3 835\\n3 1 835\\n1 2 983\\n3 2 835\\n3 3 835\\n2 3 983\\n2 2 983\\n3 1 835\\n3 2 835\\n3 3 835\\n2 3 983\\n3 3 835\\n1 1 835\\n1 4 629\\n1 4 39\\n1 6 29\\n2 6 39\\n2 1 835\\n3 1 835\\n3 2 835\\n3 3 835\\n3 4 835\\n2 6 983\\n1 4 629\\n1 4 39\\n1 6 29\\n2 5 283\\n1 1 835\\n1 4 39\\n1 6 29\\n2 5 283\\n3 1 835\\n1 4 629\\n1 4 39\\n1 6 29\\n3 4 98\\n3 4 835\\n1 2 835\\n1 4 39\\n2 3 983\\n3 3 835\\n3 3 835\\n3 4 835\\n2 1 835\\n2 3 983\\n1 1 835\\n1 4 629\\n1 4 39\\n1 6 29\\n2 6 39\\n3 1 835\\n3 2 835\\n3 2 835\\n3 4 835\\n2 3 983\\n2 2 983\\n2 3 835\\n2 3 983\\n3 3 835\\n2 3 983\\n3 2 835\\n2 1 835\\n2 2 983\\n1 4 629\\n1 4 39\\n1 6 29\\n2 5 283\\n1 6 29\\n1 4 39\\n1 2 835\\n2 2 983\\n3 3 835\\n3 3 835\\n3 4 835\\n2 3 983\\n2 3 835\\n2 1 835\\n1 4 39\\n3 1 835\\n3 3 835\\n3 3 835\\n2 3 983\\n2 2 983\\n3 1 835\\n3 2 835\\n3 2 835\\n2 3 983\\n2 3 835\\n1 4 39\\n1 4 629\\n1 4 39\\n1 6 29\\n3 4 98\\n2 5 283\\n1 1 835\\n2 1 835\\n3 2 835\\n2 2 983\\n2 3 835\\n3 3 835\\n3 3 835\\n3 4 835\\n2 3 983\\n2 2 983\\n2 3 835\\n2 3 983\\n3 3 835\\n2 3 983\\n3 2 835\\n2 1 835\\n2 2 983\\n1 4 629\\n1 4 39\\n1 6 29\\n1 2 835\\n2 2 983\\n3 2 835\\n3 2 835\\n3 4 835\\n2 3 983\\n2 2 983\\n2 3 835\\n2 3 983\\n3 3 835\\n2 3 983\\n3 2 835\\n2 1 835\\n2 2 983\\n1 4 39\\n1 4 629\\n1 4 39\\n1 6 29\\n3 4 98\\n3 4 835\\n1 2 835\\n1 4 39\\n2 3 983\\n3 3 835\\n3 3 835\\n3 4 835\\n2 3 983\\n2 2 983\\n2 3 835\\n2 3 983\\n3 3 835\\n2 3 983\\n3 2 835\\n2 1 835\\n2 2 983\\n1 4 629\\n1 4 39\\n1 6 29\\n2 5 283\\n1 1 835\\n1 4 39\\n1 6 29\\n2 5 283\\n3 1 835\\n1 4 629\\n1 4 39\\n1 6 29\\n3 4 98\\n3 4 835\\n1 2 835\\n1 4 39\\n2 3 983\\n3 3 835\\n3 3 835\\n3 4 835\\n2 3 983\\n2 2 983\\n2 3 835\\n2 3 983\\n3 3 835\\n2 3 983\\n3 2 835\\n2 1 835\\n2 2 983\\n1 4 39\\n1 4 629\\n1 4 39\\n1 6 29\\n2 5 283\\n1 1 835\\n1 4 39\\n1 6 29\\n2 5 283\\n3 1 835\\n1 4 629\\n1 4 39\\n1 6 29\\n3 4 98\\n3 4 835\\"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"impossible\"\nassert solution(\"5 10\") == \"99999999999999999999999999999999999999999999999999999999999999999999999999999\"\nassert solution(\"5 3\") == \"32\"\nassert solution(\"5 2\") == \"0\"\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == 'impossible', 'Should be impossible'\nassert solution('5 5') == '716', 'Should be 716'\n\nNote:\n\nThe input contains at least $n = 5$ and $m = 5$ pairs.\nThe total number of students is at least $n = 4$.\nEach friend is at least $1$ and at most $n$.\nAll students have distinct integers.\n'''\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '2.000000000'\nassert solution('3') == '3.000000000'\n\"\"\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1.000000000'\nassert solution('7') == '3.6363636363636364'\n\"\"\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '2'\nassert solution('1000') == '14999999999.999999999'"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1.000000000'\nassert solution('5') == '1.000000000'\nassert solution('1') == '0.000000000'\nassert solution('0') == '0.000000000'\nassert solution('1') == '0.000000000'\n\"\"\"\n\nimport math\nimport sys\nimport io\n\nsys.stdout = io.TextIOWrapper(sys.stdout.detach(), encoding = 'utf-8')\nsys.stdin = open('input.txt', 'r')"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('10') == '10.00000000'\n\"\"\""
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1.000000000'"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == \"1.000000000\"\nassert solution('2') == \"0.9999999999\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '1.000000000'\nassert solution('3') == '2.000000000'\nassert solution('10') == '2.999999999'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == \"1.0\"\n\"\"\"\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1.000000000'\nassert solution('5') == '1.099999994'\n\n--Optimal--\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"100 3 10\") == \"115.000000\"\nprint(solution(\"100 3 10\"))"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    '100 3 10',\n    '15 99 98',\n    '40 3 2',\n    '90 10 9'\n]) == '115.000000000'"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\nassert solution('''\n100 1 10\n10 99 98\n40 3 2\n90 10 9\n''') == '0.01'\nassert solution('''\n100 1 5\n5 10 4\n1 5 3\n5 5 3\n''') == '3.454545454545454'\nassert solution('''\n100 1 5\n5 10 4\n1 5 3\n5 5 3\n''') == '5.999999999'\nassert solution('''\n100 1 5\n5 10 4\n1 5 3\n5 5 3\n''') == '8.333333333'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    100, 3, 10\n    ,15, 99, 98\n    ,40, 3, 2\n    ,90, 10, 9\n]) == '115.000000000'\nassert solution([\n    0, 1, 1\n    ,0, 0\n    ,0, 0\n    ,0, 0\n    ,0, 0\n    ,0, 0\n]) == '110.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    100 3 10\n    15 99 98\n    40 3 2\n    90 10 9\n    ''') == '115.000000000'\nassert solution('''\n    10 10 10\n    1 1 1\n    1 1 1\n    1 1 1\n    1 1 1\n    ''') == '16.0'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n\"\"\") == \"115.000000000\"\nassert solution(\"\"\"\n100 3 10\n15 99 98\n40 3 2\n80 10 9\n\"\"\") == \"103.59299999\"\nassert solution(\"\"\"\n100 3 10\n15 99 98\n40 3 2\n100 99 98\n80 9 9\n\"\"\") == \"105.11111111\"\nassert solution(\"\"\"\n100 3 10\n15 99 98\n40 3 2\n100 99 98\n80 9 9\n\"\"\") == \"109.99999999\""
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2\n1 5\n7 9\"\"\") == \"115.0000000000\"\n\nassert solution(\"\"\"\n2 1\n8 4\n\"\"\") == \"17.0000000005\""
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 3 10\") == \"115.000000000\"\nassert solution(\"100 3 10\") == \"105.6000000000\"\nassert solution(\"1000 3 10\") == \"1054.8000000000\"\nassert solution(\"1000 2 10\") == \"1054.8000000000\"\nassert solution(\"1000 3 3\") == \"1054.8000000000\"\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n100 3 10\n15 99 98\n40 3 2\n90 10 9\n''') == '115.000000000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('10\\n1 2 1\\n1 1 1.5\\n2 2 1\\n3 3 1\\n3 3 2\\n') == '999.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10\n0 1 1\n0 1 1.5\n\"\"\") == \"199.500000\"\nassert solution(\"\"\"\n9\n100 1 1\n100 1 1.5\n\"\"\") == \"199.500000\"\nassert solution(\"\"\"\n1\n1\n1.5\n\"\"\") == \"1.5\"\nassert solution(\"\"\"\n1\n1\n1.5\n\"\"\") == \"1.5\"\nassert solution(\"\"\"\n1\n1\n0.5\n\"\"\") == \"1.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"100\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"100\\n100 1 1.5\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"100\\n100 1 1\\n100 1 1.5\\n100 1 1.5\") == \"199.500000\"\nassert solution(\"100\\n100 1 1\\n100 1 1.5\\n100 1 1.5\\n100 1 1\\n100 1 1.5\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.5'\nassert solution('4\\n10 1.5 2.3\\n3 2.2 1.5\\n3 2.5 3.7\\n3 2.5 2.3') == '8.2'\nassert solution('6\\n1.5 1.5 1.5 1.5 1.5 1.5') == '1.25'\nassert solution('3\\n0.5 1 0.5') == '1.5'"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0.000000\"\nassert solution(\"2\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\n\"\"\""
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '199.500000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nassert solution('3\\n100 1 1\\n100 1 1.5\\n10 1 1.5') == '198.500000'"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"199.500000\"\nassert solution(\"2\") == \"199.500000\"\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5\\n') == '199.500000'\nassert solution('1\\n1\\n1\\n') == '1.0'\nassert solution('5\\n10.9 1.8\\n100 100 0.3\\n1000 1000 0.1\\n10000 10000 0.2\\n10000000 100000000 0.1\\n') == '19.5'\nassert solution('4\\n1.2 1.1 1.8\\n4.5 4.6 4.8\\n') == '5.4'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2 3 4 5 6 7 8 9 10 11 12''') == '1'\nassert solution('''2 4\n2 3 6 7 8 9 10 11 12''') == '2'\n\n'''"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nassert solution('2 2 3 4 5 6 7 8 9 10 11 12') == '2'\nassert solution('10 11 12') == '1'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1'\nassert solution('''\n2 3\n1 2 5\n''') == '1'\nassert solution('''\n3 3\n1 2 4\n''') == '2'\nassert solution('''\n3 3\n5 7 2\n''') == '4'\nassert solution('''\n4 4\n1 1 1 1\n''') == '1'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2 3\\n3 2\\n') == '1'\nassert solution('2\\n2 2\\n2 2\\n') == '0'\nassert solution('1\\n2 5\\n3 2\\n') == '0'\nassert solution('2\\n2 4\\n3 2\\n') == '1'\nassert solution('5\\n5 5 5 5 5 5\\n4 4 4 4 4 4\\n') == '0'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"3 4\") == \"1\"\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 3') == '0'\nassert solution('3 2') == '1'\n\ninput = sys.stdin.read()\nprint(solution(input))\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == '1'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\n1 2 3 4 5 6 7 8 9 10 11 12') == '1'\nprint('Congratulations! All test cases passed')"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 3\\n1 2 3 4 5 6 7 8 9 10 11 12\"\n) == \"1\"\n\"\"\""
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"5 2\") == \"2\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Impossible'\nassert solution(input('1\\n2\\n5\\n3\\n3\\n')) == '4'\nassert solution(input('100000\\n3\\n4\\n1\\n5\\n')) == '4'\nassert solution(input('1000000000000000\\n3\\n4\\n1\\n5\\n')) == '3'\nprint('You passed the test!')\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n2 3 1\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == 'Impossible'\nassert solution('''4\n1 1 1 2\n''') == '2'\n'''"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 1 1''') == 'Impossible', 'Test #1 Failed'\nassert solution('''10 2 1 1''') == '5', 'Test #2 Failed'\nassert solution('''10 5 1 1''') == '6', 'Test #3 Failed'\nassert solution('''100 2 1 1''') == 'Impossible', 'Test #4 Failed'\nassert solution('''100 5 1 1''') == 'Impossible', 'Test #5 Failed'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n5 5 1 1\") == \"Impossible\"\nassert solution(\"5\\n3 2 1 1\") == \"5\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n------Task------\nYou will be given a price $P$ that Per was going to pay. You will also be given the number of 1-, 5-, 10- and 25-cent coins that he had in his wallet. He didn\u2019t have any notes. Find the maximum number of coins he could have used for paying the price $P$ without getting any change back.\n\n------Input------\nThe first line of input contains an integer $P$ that Per was going to pay. On the second line there are 4 space separated integers $N_1, N_5, N_{10}, N_{25}; 0\\leq N_1, N_5, N_{10}, N_{25}\\leq 100000000$, the number of 1-, 5-, 10- and 25-cent coins in Per\u2019s wallet.\n\n------Output------\nIf Per couldn\u2019t pay exactly $P$ without getting any change back, output Impossible on a single line. Otherwise output the maximum number of coins Per could use to pay the price $P$.\n\"\"\") == \"5\"\nassert solution(\"\"\"\n------Task------\nYou will be given a price $P$ that Per was going to pay. You will also be given the number of 1-, 5-, 10- and 25-cent coins that he had in his wallet. He didn\u2019t have any notes. Find the maximum number of coins he could have used for paying the price $P$ without getting any change back.\n\n------Input------\nThe first line of input contains an integer $P$ that Per was going to pay. On the second line there are 4 space separated integers $N_1, N_5, N_{10}, N_{25}; 0\\leq N_1, N_5, N_{10}, N_{25}\\leq 100000000$, the number of 1-, 5-, 10- and 25-cent coins in Per\u2019s wallet.\n\n------Output------\nIf Per couldn\u2019t pay exactly $P$ without getting any change back, output Impossible on a single line. Otherwise output the maximum number of coins Per could use to pay the price $P$.\n\"\"\") == \"Impossible\"\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == 'Impossible'\nassert solution('3 2 1 1') == '5'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3 2 1 1''') == 'Impossible'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 2 1 1\\n') == '5'\nassert solution('1\\n5 1 3 2\\n') == 'Impossible'"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '10\\n3 2 1 1\\n') == 'Impossible', solution.__doc__"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aabcad') == 'yes', \"Should return 'yes'\"\nassert solution('aba') == 'no', \"Should return 'no'\"\nassert solution('acd') == 'no', \"Should return 'no'\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aabcad''') == 'yes', 'Not possible'\nassert solution('''aba''') == 'no', 'Not possible'\nassert solution('''acd''') == 'yes', 'Not possible'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\naabcad\naba\nacd\n''') == 'yes'\n\nassert solution('''\naaabcad\naba\nacd\n''') == 'no'\n\nassert solution('''\naabcad\nba\nacd\n''') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'yes'\nassert solution('acd') == 'no'\n\n'''"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''aabcad\naba\nacd''') == 'yes'\nassert solution('''aabcad\naba\ncad''') == 'no'\nassert solution('''aabcad\naba\naad''') == 'no'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\nassert solution('abacd') == 'no'\nassert solution('a') == 'yes'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''aabcad''') == 'yes'\nassert solution('''aba''') == 'no'\nassert solution('''acd''') == 'no'"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aabcad\") == \"yes\"\nassert solution(\"aba\") == \"yes\"\nassert solution(\"acd\") == \"no\"\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'yes'\nassert solution('aabcad') == 'yes'\nassert solution('aba') == 'no'\nassert solution('acd') == 'no'\nassert solution('mw') == 'no'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\n\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"5\"\n\nassert solution('''3 4 7\n1 1 2 3\n2 3 4 5\n3 5 6 7\n2 7 8 9\n5 8 9 10\n3 1 1 6\n4 2 8 9\n''') == \"9\"\n\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == \"0\""
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\") == \"5\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n8 9 10\") == \"6\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n8 9 10\\n4\") == \"6\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n8 9 10\\n4 4\") == \"7\"\nassert solution(\"4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n8 9 10\\n4 4\\n4 4\") == \"8\"\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 10\\n3 2\\n1 2 4 7\\n3 1 1 6\\n3 4 7 10\\n2 4 3 5\\n4 2 8 9\\n') == '5'\nassert solution('6 7 20\\n3 1 1 6\\n3 4 7 10\\n4 2 8 9\\n2 4 3 5\\n5 6 8 10\\n') == '6'\nassert solution('6 7 20\\n3 1 1 6\\n3 4 7 10\\n4 2 8 9\\n2 4 3 5\\n5 6 8 10\\n') == '10'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 2') == '5'\nassert solution('4\\n3 2') == '5'\nassert solution('1\\n3 2') == '5'\nassert solution('4\\n3 2') == '5'\nassert solution('1\\n3 2') == '5'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5 10') == '5'\n\nassert solution('2 2 1 5') == '4'\n\nassert solution('2 4 3 5') == '5'"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5 10') == '5'\nassert solution('3 2') == '2'\nassert solution('3 1 1 6') == '6'\nassert solution('3 4 7 10') == '7'\nassert solution('2 4 3 5') == '4'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\""
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\nassert solution('''5 4 2 3\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '3'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"4 5 10\") == '5'\nassert solution(\"3 2\") == '2'\nassert solution(\"3 1 1 6\") == '7'\nassert solution(\"3 4 7 10\") == '10'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 10\") == \"5\"\nassert solution(\"4 5 10\") == \"5\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"3 1 1 6\") == \"1\"\nassert solution(\"3 4 7 10\") == \"3\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1 5 same\\n3 3 5 same\") == \"4\\n\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n2 4 same\n3 5 same\n''') == '4'\nassert solution('''\n5 2\n2 4 same\n3 5 same\n4 6 same\n''') == '4'\nassert solution('''\n5 2\n2 4 same\n3 5 same\n6 8 same\n''') == '4'\n\n'''\n--- Part Two ---\nAlice and Bob have a true/false worksheet, consisting of a list of $n$ problems where each answer is either \u201ctrue\u201d or \u201cfalse\u201d. The problems are numbered from $1$ to $n$. They are too hard for Bob, so the TA, Alice, has given Bob $m$ hints. For each hint $i$, Alice gives Bob an (inclusive) range of problems $[l_ i, r_ i]$, and tells him either \u201call answers in the range are the same\u201d (in other words, either all are \u201ctrue\u201d, or all are \u201cfalse\u201d); or \u201cnot all of the answers in the range are the same.\n\nEach problem is too hard for Bob, so he has to play a trick. To help Bob, he has given to Alice a list of all the possible answers that a problem can have. Each answer is given as a string consisting of $n$ characters, where each character represents an answer to the problem. For example, if Alice has the answers \u201ca b c\u201d, then Alice can answer all the problems \u201cb c\u201d, \u201cc a\u201d, and \u201cc a\u201d, for example.\n\nThe trick is, if Alice has a list of all the possible answers to the problem, she can just guess and count how many problems contain a particular answer. For example, if Alice has the answer \u201ca b c\u201d, then she only needs to guess \u201ca\u201d and count how many problems contain this answer, and so on.\n\nHelp Bob count how many different answer sequences satisfies the given hints. Since this number may be huge, print the answer modulo $10^9+7$.\n\n-----Input-----\nThe first line of the input contains two space-separated integers $n$ and $m$ $(1 \\le n \\le 5000, 1 \\le m \\le 1000000)$, the number of problems and number of hints, respectively. The next $m$ lines each encode a hint, and contain two space-separated integers $l_ i$ and $r_ i$ $(1\\leq l_ i \\leq r_ i\\leq n)$ followed by either the word same, if all answers in the range are the same, or different, if all answers in the range are not the same (i.e., at least one answer is \u201ctrue\u201d and at least one other answer is \u201cfalse\u201d).\n\n-----Output-----\nPrint the number of different answer sequences satisfying all the hints, modulo $10^9+7$.\n\n-----Sample Explanation-----\nIn the first sample, the four possible sequences consistent with the hints are 00000, 10000, 01111, and 11111 where 0 stands for a \u201cfalse\u201d answer and 1 stands for a \u201ctrue\u201d answer. In the second sample, the third hint conflicts with the first two hints, so no answer sequence exists consistent with all hints.\n\n-----Examples-----\nSample Input:\n5 2\n2 4 same\n3 5 same\nSample Output:\n4\n\n'''"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same') == '4'\nprint(solution(input()))\n\"\"\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n5 2\n2 4 same\n3 5 same\n\"\"\") == \"4\"\nassert solution(r\"\"\"\n5 2\n2 3 same\n3 4 same\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n5 2\n2 3 different\n3 4 same\n\"\"\") == \"2\"\nassert solution(r\"\"\"\n5 2\n2 4 different\n3 5 same\n\"\"\") == \"3\"\nassert solution(r\"\"\"\n5 2\n2 5 different\n3 4 same\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 same\") == \"4\"\nassert solution(\"3 3 same\") == \"2\"\n\nn, m = list(map(int, input().split()))\nhints = []\nfor i in range(m):\n    hints.append(input())\n\nnot_same_count = 0\n\nfor i in range(1, n):\n    for j in range(i):\n        if hints[i-j] == hints[j]:\n            if hints[i-j] == \"same\":\n                not_same_count += 1\n            break\n\nprint(not_same_count)\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\") == \"4\"\nassert solution(\"5 5\\n3 5 same\\n4 4 same\\n4 4 same\") == \"1\"\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 same\\n3 5 same\\n\") == \"4\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([6, 4], ['0 1', '0 2', '3 4', '3 5']) == '3'\n\nprint(solution([6, 4], ['0 1', '0 2', '3 4', '3 5']))\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n0 1\\n0 2\\n3 4\\n3 5\\n') == '3'\nassert solution('2\\n0 1\\n0 2\\n3 4\\n3 5\\n') == '2'\nassert solution('1\\n1 1\\n0 2\\n3 4\\n3 5\\n') == '1'\nassert solution('2\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n') == '3'\nassert solution('3\\n0 1\\n0 2\\n0 3\\n0 4\\n0 5\\n') == '2'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '3'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1,2\") == \"0\"\nassert solution(\"4,5\") == \"1\"\nassert solution(\"2,5\") == \"2\"\nassert solution(\"3,5\") == \"1\"\nassert solution(\"1,5\") == \"3\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n') == '3'\nassert solution('6 5\\n0 1\\n0 2\\n3 4\\n3 5\\n') == '2'\nassert solution('10 5\\n0 1\\n0 2\\n3 4\\n3 5\\n6 6\\n7 7\\n8 8\\n9 9\\n') == '9'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == \"3\"\nassert solution('2 3') == \"2\"\nassert solution('5 3') == \"4\"\nassert solution('8 3') == \"6\"\nassert solution('5 4') == \"4\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 4\\n0 1\\n0 2\\n3 4\\n3 5\") == \"3\"\nassert solution(\"10\\n1 2\\n4 5\\n9 8\\n4 6\\n3 7\\n5 6\\n7 8\\n0 9\\n4 8\\n8 7\\n1 6\\n7 5\\n4 2\\n3 5\\n8 1\\n4 0\\n9 9\\n2 1\\n8 7\\n7 2\\n9 4\\n5 4\\n3 5\\n2 5\\n0 8\\n9 0\\n1 6\\n4 7\\n2 8\\n8 6\\n6 1\\n5 2\\n3 7\\n9 5\\n5 9\\n6 1\\n4 8\\n5 1\\n2 9\\n0 4\\n3 6\\n9 7\\n4 8\\n5 5\\n6 0\\n2 7\\n6 2\\n1 4\\n1 0\\n0 3\\n3 1\\n2 1\\n3 1\\n0 6\\n3 7\\n9 5\\n2 3\\n4 2\\n8 3\\n5 2\\n4 7\\n6 8\\n1 5\\n0 9\\n8 1\\n4 0\\n6 1\\n7 5\\n4 8\\n2 4\\n2 9\\n2 8\\n1 0\\n1 7\\n8 1\\n5 2\\n7 5\\n5 9\\n7 5\\n4 8\\n2 3\\n2 2\\n3 3\\n5 4\\n7 5\\n5 8\\n8 5\\n8 2\\n5 1\\n6 2\\n4 1\\n6 1\\n9 5\\n8 1\\n9 9\\n5 0\\n4 0\\n8 4\\n5 0\\n5 2\\n6 1\\n7 7\\n7 5\\n8 4\\n2 6\\n7 2\\n4 0\\n3 2\\n6 5\\n2 3\\n7 5\\n2 3\\n0 4\\n1 5\\n4 1\\n6 4\\n9 0\\n6 1\\n4 4\\n8 9\\n6 4\\n6 1\\n9 0\\n1 5\\n6 0\\n2 4\\n1 4\\n4 6\\n1 3\\n1 1\\n9 7\\n4 9\\n0 7\\n7 9\\n1 5\\n3 2\\n2 5\\n3 3\\n8 6\\n8 1\\n6 4\\n0 1\\n7 7\\n6 5\\n5 4\\n0 6\\n7 0\\n9 2\\n8 6\\n1 0\\n9 3\\n4 3\\n1 4\\n6 2\\n8 1\\n0 8\\n4 4\\n9 0\\n9 9\\n4 5\\n3 5\\n8 1\\n3 5\\n0 9\\n2 2\\n8 5\\n5 8\\n0 0\\n7 4\\n1 1\\n0 4\\n3 6\\n6 6\\n6 1\\n8 3\\n6 5\\n2 3\\n8 5\\n3 7\\n4 2\\n5 3\\n2 5\\n0 8\\n0 9\\n4 0\\n1 5\\n9 7\\n3 7\\n2 4\\n5 2\\n8 4\\n4 0\\n7 1\\n5 0\\n6 6\\n9 9\\n6 7\\n9 9\\n2 2\\n0 5\\n4 9\\n9 8\\n1 6\\n9 3\\n5 4\\n2 9\\n3 6\\n5 5\\n5 2\\n3 5\\n0 3\\n1 3\\n5 3\\n5 5\\n0 9\\n1 1\\n8 2\\n0 0\\n3 2\\n3 2\\n3 2\\n0 3\\n9 4\\n2 7\\n6 7\\n3 4\\n8 4\\n5 8\\n5 8\\n4 2\\n7 4\\n4 3\\n7 5\\n7 2\\n1 1\\n1 2\\n5 8\\n2 2\\n8 2\\n1 4\\n0 4\\n2 1\\n3 5\\n6 4\\n0 1\\n6 1\\n9 1\\n7 3\\n3 4\\n8 1\\n7 5\\n1 2\\n1 1\\n1 1\\n8 8\\n1 4\\n7 0\\n8 0\\n2 1\\n0 0\\n4 0\\n8 7\\n1 4\\n7 3\\n5 5\\n7 1\\n9 1\\n5 6\\n0 3\\n8 1\\n6 2\\n1 1\\n5 7\\n7 5\\n8 7\\n2 2\\n4 4\\n7 8\\n0 6\\n3 7\\n3 7\\n0 4\\n2 7\\n6 2\\n5 3\\n9 2\\n0 4\\n8 1\\n2 6\\n6 7\\n8 0\\n0 1\\n7 3\\n2 5\\n4 7\\n4 4\\n4 3\\n2 2\\n0 7\\n6 0\\n7 5\\n1 3\\n5 4\\n5 6\\n1 7\\n3 4\\n9 7\\n0 5\\n0 7\\n0 0\\n0 8\\n8 7\\n1 9\\n0 5\\n4 8\\n8 7\\n5 4\\n0 6\\n6 5\\n2 3\\n0 6\\n6 3\\n5 1\\n0 3\\n0 8\\n1 0\\n8 4\\n2 1\\n3 8\\n0 5\\n0 7\\n7 4\\n8 1\\n2 2\\n1 7\\n7 5\\n3 6\\n6 5\\n9 1\\n2 6\\n1 3\\n0 4\\n2 4\\n1 2\\n1 0\\n5 6\\n5 2\\n4 5\\n3 4\\n2 1\\n3 3\\n7 2\\n8 0\\n2 3\\n0 4\\n0 2\\n4 6\\n0 7\\n0 0\\n4 0\\n8 1\\n9 3\\n6 6\\n0 4\\n9 1\\n4 4\\n2 7\\n5 3\\n1 8\\n0 1\\n4 7\\n4 4\\n8 1\\n9 3\\n8 3\\n0 5\\n6 2\\n1 8\\n4 0\\n0 4\\n1 2\\n0 8\\n4 3\\n2 0\\n6 5\\n6 8\\n0 6\\n9 0\\n7 3\\n8 3\\n3 7\\n5 3\\n5 3\\n4 5\\n1 5\\n7 1\\n1 4\\n7 1\\n0 4\\n4 4\\n8 3\\n0 9\\n0 5\\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"6 4\") == \"2\"\nassert solution(\"8 5\") == \"2\"\nassert solution(\"10 10\") == \"2\"\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 4\n0 1\n0 2\n3 4\n3 5''') == '3'\n\nassert solution('''6 4\n0 1\n0 2\n2 4\n3 4\n3 5''') == '4'\n\nassert solution('''6 4\n0 1\n0 2\n0 3\n0 4\n0 5''') == '4'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n0 1') == '0'\nassert solution('1\\n1\\n0 2') == '1'\nassert solution('3\\n4\\n3 4') == '1'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"5.0\"\nassert solution(\"100\") == \"11.0\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\n''') == '9.0\n6.5\n2.5\n''' == solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nRDD\n'''))\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR''') == '9.0\\n6.5\\n2.5\\n'''\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"9.0\\n6.5\\n2.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\\n2 3 4\\n4 5 6\\n6 5 8\\n\") == \"9.5\"\n\nassert solution(\"2\\n3 2 3\\n3 5 6\\n6 3 3\\n\") == \"0.5\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 4\n2 2\n4 1\n3 5\n5 3\nLUR\n''') == '9.0'\nassert solution('''3\n1 2\n2 3\n3 4\n''') == '12.0'\nassert solution('''3\n1 1\n2 1\n3 1\n''') == '8.0'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '9.0'\nassert solution('5') == '6.5'\nassert solution('5') == '2.5'\nassert solution('5') == '1.0'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"9.0\"\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '9.0\\n6.5\\n2.5\\n'\nassert solution('4') == '9.0\\n6.5\\n2.5\\n'\nassert solution('3') == '9.0\\n6.5\\n2.5\\n'\nassert solution('2') == '9.0\\n6.5\\n2.5\\n'\nassert solution('1') == '9.0\\n6.5\\n2.5\\n'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6 3 2\nR 3 1\nB 2 3\nB 1 2\nB 1 3\nR 1 4\nR 1 5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\n\nassert solution('''\n2 2 2\nR 1 2\n''') == '0'\n\n''')"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 2') == '1'\nassert solution('3 3 2') == '0'\n\n'''\nfrom collections import defaultdict"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution('1\\n2 3\\nR 2 3') == '0'\nassert solution('1\\n2 3\\nB 1 2\\nB 2 3') == '1'\nassert solution('3\\n2 3\\nR 2 3') == '1'\nassert solution('3\\n2 3\\nB 1 2\\nB 2 3') == '0'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('5') == '0'\n\nn,m,k = input().split(' ')\nn,m,k = int(n),int(m),int(k)\n\nnodes = []\nfor i in range(m):\n    n1,n2,color = input().split(' ')\n    n1,n2,color = int(n1),int(n2),color\n    nodes.append([color,n1,n2])\n\ncolor = []\nfor i in range(n):\n    color.append(0)"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\n'''\nSample Input:\n7 8 5\nB 1 2 3\nB 2 4 3\nB 4 7 3\nR 3 5 1\nR 5 6 2\nR 6 7 1\nB 7 6 1\nB 6 8 1\nR 2 4 1\nR 5 3 3\nSample Output:\n1\n'''\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"1\"\nprint(solution(input_string))"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6 4\nB 1 2\nB 2 3\nB 4 5\nR 3 1\nR 1 4\nR 4 2\nR 1 5\nR 3 5\n''') == '1'\nassert solution('''\n5 6 4\nR 2 1\nR 5 1\nR 2 4\nB 3 2\nB 2 5\nB 5 3\nR 4 5\n''') == '0'\nassert solution('''\n5 6 4\nR 1 2\nR 5 1\nR 4 2\nB 3 2\nB 2 5\nB 5 3\nR 4 5\n''') == '1'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n2 3 2\nR 1 2\nR 1 3\n''') == '0'\n'''\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '0'\nassert solution('1 1 1 1 1') == '1'\n\n'''\n\nclass Graph:\n    def __init__(self, adjList):\n        self.adjList = adjList\n\n    def get_adj(self, node):\n        return self.adjList[node]"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 0 5\\n7 0 7\\n4\") == \"88\"\nassert solution(\"2\\n0 0 0\\n0 0 0\\n0 0 0\") == \"0\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 0 5\") == \"88\"\nassert solution(\"7 0 7\") == \"5\"\nassert solution(\"4\") == \"7\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 0 5\") == \"88\"\nassert solution(\"7 0 7\") == \"7\"\nassert solution(\"4\") == \"5\"\nassert solution(\"88\") == \"5\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2,5,0,5,7]) == \"88\"\nassert solution([4]) == \"5\"\nassert solution([4,2,4,5,3,4]) == \"6\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"7\""
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == \"5.0\"\nassert solution('3') == \"5.0\"\nassert solution('4') == \"2.25\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5 0 5\") == \"88\"\nassert solution(\"4\\n88 0 0\") == \"88\"\nassert solution(\"4\\n88 0 0\") == \"88\"\n\"\"\"\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5, 0, 5]) == '88'\nassert solution([7, 0, 7]) == '7'\nassert solution([4]) == '4'"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 0 5') == '88'\nassert solution('7 0 7') == '5'\nassert solution('4') == '7'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '88'\nassert solution('3') == '8'\nassert solution('4') == '3'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('3 4 1 1 2 3 2 4') == '-1'\nassert solution('3 3 1 2 2') == '5'\nassert solution('3 5 1 1 2 3 4') == '-1'\nassert solution('3 5 1 2 2 1') == '5'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 1 1\n1 3 1\n''') == '5'\n\nassert solution('''\n3 5 3 3\n2\n2\n1\n3\n2\n''') == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '5'\nprint('PASSED')"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n''') == '5'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1 2') == '5'\nassert solution('3 3 1 2') == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('3 3 1 3') == '-1'\nassert solution('3 3 2 2') == '5'\n\"\"\""
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '5'\nassert solution('''3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3''') == '-1'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n1 2\\n1 3 1\\n2 3 3') == '5'\nassert solution('3\\n3 3\\n3 1 2\\n3 3 1\\n1 3 1\\n2 3 1\\n1 2 2\\n2 3 3') == '7'\nassert solution('3\\n3 3\\n2 3 3\\n1 2 2\\n1 3 1\\n2 3 3\\n2 2 2\\n2 3 3') == '-1'"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3 1 2\n2\n1 2 2\n1 3 1\n2 3 3\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('6 4 1 2') == '-1'\nassert solution('3 4 1 2') == '5'\nassert solution('6 4 1 3') == '-1'\nassert solution('3 2 4 1') == '5'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkniz'\nassert solution('ab') == 'a'\nassert solution('aab') == 'a'\nassert solution('aabcd') == 'abcd'\nassert solution('abab') == 'ab'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''mirkovC4nizCC44''') =='mirkovniz'\nassert solution('''C4''') == 'C4'\nassert solution('''C4nizCC44''') == 'C4nizCC44'"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkniz'\nassert solution('haha') == 'haha'\nassert solution('test') == 'tees'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz', \"Wrong\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirknizCC44\"\nassert solution(\"C4\") == \"C4\"\nassert solution(\"mirkovC4nizCC44C4\") == \"mirknizCC44C4\""
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkiviz'\n\n\"\"\""
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('mirkovC4nizCC44') =='mirnoviz'\nassert solution('mirkovC4nizCC44') =='mirnoviz'\nassert solution('mirkovC4nizCC44') =='mirnoviz'\nassert solution('mirkovC4nizCC44') =='mirnoviz'\nassert solution('mirkovC4nizCC44') =='mirnoviz'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz', \"Wrong\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovnizCC44\"\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"mirkovC4nizCC44\") == \"mirkovniz\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n3 65\n45 10\n60 25\n\"\"\") == \"32\"\nassert solution(\"\"\"\n3\n2 16\n6 10\n3 30\n\"\"\") == \"34\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"32\"\nprint(solution())\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '32'"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'\nassert solution('''\n10\n1\n10\n1\n10\n1\n10\n1\n10\n1\n10\n1\n10\n1\n''') == '14'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"3\n3 2\n1\n2\n\"\"\") == \"32\"\nassert solution(\"\"\"3\n3 2\n3\n1\n\"\"\") == \"31\"\nassert solution(\"\"\"3\n3 2\n3\n1\n\"\"\") == \"32\"\nassert solution(\"\"\"3\n3 2\n3\n1\n\"\"\") == \"31\"\nassert solution(\"\"\"3\n3 2\n3\n2\n\"\"\") == \"31\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n3 4 1 3 1\\n6 1 3\\n5 1 2\\n8 1 3\\n5 1 4\\n6 1 5') == '32'\nassert solution('5\\n6 3 3\\n1 3 5\\n2 3 5\\n3 3 6\\n4 3 5\\n5 3 6\\n6 3 6') == '25'\nassert solution('5\\n5 2 4\\n3 1 5\\n1 5 5\\n1 5 5\\n1 5 5\\n3 5 5') == '6'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    5\n    4 1000000\n    2 1\n    3 2\n    5 4\n    6 8\n    ''') == '32'\nassert solution('''\n    5\n    5 1000000\n    6 10\n    4 7\n    6 8\n    ''') == '25'\nassert solution('''\n    5\n    5 1000000\n    6 9\n    4 7\n    7 4\n    ''') == '25'\nassert solution('''\n    5\n    5 1000000\n    6 9\n    4 7\n    7 6\n    ''') == '26'\nassert solution('''\n    5\n    5 1000000\n    6 9\n    4 7\n    7 6\n    3 5\n    ''') == '27'\n''')\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"32\"\nassert solution(\"3\\n3\") == \"32\"\nassert solution(\"3\\n3\\n3\") == \"32\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"6\") == \"0\"\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 65\n45 10\n60 25\n''') == '32'\nassert solution('''\n7\n8 5 2 1 3 2 2\n''') == '31'\nassert solution('''\n2\n1 2\n''') == '2'\n\n'''\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 0 3 1\n''') == '3'\nassert solution('''\n5\n1 2 0 3 1\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2'"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2'\n\"\"\""
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 2 2\\n3\\n') == '2'\nassert solution('5\\n1 2 0 3 1\\n') == '2'\nassert solution('5\\n1 2 0 3 1\\n1 2 0 3 1\\n') == '3'\nassert solution('5\\n1 2 0 3 1\\n1 2 0 3 1\\n1 2 0 3 1\\n1 2 0 3 1\\n') == '1'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 0 3 1\n''') == '3\nassert solution('''10\n1 2 4 3 5 2 1 4 5\n''') == '2\nassert solution('''100\n1 3 5 8 12 11 10 17 17\n''') == '20\n'''\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 0 3 1') == '3\\n2'\nassert solution('5\\n1 1 0 3 1') == '3\\n2'\nassert solution('5\\n1 2 0 3 1') == '2'\nassert solution('5\\n1 2 0 3 1') == '3'\nassert solution('5\\n1 2 0 3 1') == '3'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 0 3 1\n''') == '3'\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 0 3 1\n''') == '2\\n3'\nassert solution('''\n10\n2 5 0 4 5 1 1 4 5\n''') == '5\\n2'\nassert solution('''\n5\n1 2 0 3 1\n''') == '3\\n2'\n'''\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"4\\n1 2 0 3 1\") == \"2\"\nassert solution(\"5\\n1 2 0 3 1\") == \"3\"\nassert solution(\"6\\n1 2 0 3 1\") == \"2\"\nassert solution(\"1\\n1 2 3 4 1\") == \"1\"\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1 2\\n0 3 1\\n') == '1\\n1 2\\n'\nassert solution('4\\n2 3 0\\n') == '2\\n1\\n'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 0 3 1\n''') == '3'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '4'\nassert solution('5 5 5\\n+ 1 1\\n- 1 2\\n+ 1 3\\n+ 1 4\\n+ 1 5\\n+ 1 6\\n- 1 7\\n+ 1 8') == '7'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 4 4\") == \"5\"\nassert solution(\"+ 1 1\") == \"1\"\nassert solution(\"+ 1 2\") == \"1\"\nassert solution(\"+ 1 3\") == \"1\"\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n+ 1 1\n+ 1 2\n+ 1 3\n+ 1 4\n- 1 1\n- 1 2\n- 1 3\n- 1 4\n- 1 5\n+ 1 1\n- 1 1\n+ 1 2\n- 1 3\n+ 1 4\n+ 1 5\n+ 1 6\n- 1 1\n- 1 2\n+ 1 3\n+ 1 4\n+ 1 5\n- 1 6\n+ 1 6\n- 1 7\n+ 1 8\n- 1 9\n- 1 10\n+ 1 11\n+ 1 12\n- 1 13\n+ 1 14\n- 1 15\n+ 1 16\n+ 1 17\n+ 1 18\n- 1 19\n- 1 20\n+ 1 21\n+ 1 22\n+ 1 23\n+ 1 24\n- 1 25\n+ 1 26\n+ 1 27\n- 1 28\n+ 1 29\n+ 1 30\n- 1 31\n+ 1 32\n+ 1 33\n- 1 34\n+ 1 35\n- 1 36\n+ 1 37\n+ 1 38\n+ 1 39\n- 1 40\n- 1 41\n+ 1 42\n+ 1 43\n+ 1 44\n- 1 45\n+ 1 46\n+ 1 47\n- 1 48\n+ 1 49\n+ 1 50\n- 1 51\n- 1 52\n+ 1 53\n+ 1 54\n- 1 55\n- 1 56\n+ 1 57\n+ 1 58\n- 1 59\n+ 1 60\n- 1 61\n+ 1 62\n+ 1 63\n+ 1 64\n+ 1 65\n- 1 66\n+ 1 67\n+ 1 68\n+ 1 69\n+ 1 70\n+ 1 71\n+ 1 72\n- 1 73\n+ 1 74\n+ 1 75\n+ 1 76\n+ 1 77\n+ 1 78\n+ 1 79\n+ 1 80\n- 1 81\n+ 1 82\n+ 1 83\n+ 1 84\n+ 1 85\n+ 1 86\n+ 1 87\n+ 1 88\n- 1 89\n+ 1 90\n+ 1 91\n+ 1 92\n+ 1 93\n+ 1 94\n- 1 95\n+ 1 96\n+ 1 97\n- 1 98\n+ 1 99\n+ 1 100\n- 1 101\n+ 1 102\n+ 1 103\n+ 1 104\n+ 1 105\n+ 1 106\n+ 1 107\n- 1 108\n- 1 109\n+ 1 110\n+ 1 111\n+ 1 112\n+ 1 113\n+ 1 114\n- 1 115\n+ 1 116\n+ 1 117\n+ 1 118\n+ 1 119\n+ 1 120\n+ 1 121\n+ 1 122\n+ 1 123\n+ 1 124\n- 1 125\n+ 1 126\n+ 1 127\n+ 1 128\n+ 1 129\n+ 1 130\n+ 1 131\n+ 1 132\n+ 1 133\n+ 1 134\n+ 1 135\n+ 1 136\n- 1 137\n+ 1 138\n+ 1 139\n+ 1 140\n+ 1 141\n+ 1 142\n+ 1 143\n+ 1 144\n+ 1 145\n+ 1 146\n+ 1 147\n+ 1 148\n- 1 149\n+ 1 150\n+ 1 151\n+ 1 152\n+ 1 153\n+ 1 154\n+ 1 155\n+ 1 156\n- 1 157\n+ 1 158\n+ 1 159\n+ 1 160\n+ 1 161\n+ 1 162\n+ 1 163\n+ 1 164\n+ 1 165\n+ 1 166\n+ 1 167\n+ 1 168\n+ 1 169\n+ 1 170\n+ 1 171\n+ 1 172\n- 1 173\n+ 1 174\n+ 1 175\n+ 1 176\n+ 1 177\n+ 1 178\n+ 1 179\n+ 1 180\n+ 1 181\n+ 1 182\n+ 1 183\n+ 1 184\n+ 1 185\n+ 1 186\n+ 1 187\n+ 1 188\n+ 1 189\n+ 1 190\n+ 1 191\n+ 1 192\n+ 1 193\n+ 1 194\n+ 1 195\n+ 1 196\n+ 1 197\n+ 1 198\n+ 1 199\n+ 1 200\n+ 1 201\n+ 1 202\n+ 1 203\n+ 1 204\n+ 1 205\n+ 1 206\n+ 1 207\n+ 1 208\n+ 1 209\n+ 1 210\n+ 1 211\n+ 1 212\n+ 1 213\n+ 1 214\n+ 1 215\n+ 1 216\n+ 1 217\n+ 1 218\n+ 1 219\n+ 1 220\n+ 1 221\n+ 1 222\n+ 1 223\n+ 1 224\n+ 1 225\n+ 1 226\n+ 1 227\n+ 1 228\n+ 1 229\n+ 1 230\n+ 1 231\n+ 1 232\n+ 1 233\n+ 1 234\n+ 1 235\n+ 1 236\n+ 1 237\n+ 1 238\n+ 1 239\n+ 1 240\n+ 1 241\n+ 1 242\n+ 1 243\n+ 1 244\n+ 1 245\n+ 1 246\n+ 1 247\n+ 1 248\n+ 1 249\n+ 1 250\n+ 1 251\n+ 1 252\n+ 1 253\n+ 1 254\n+ 1 255\n+ 1 256\n+ 1 257\n+ 1 258\n+ 1 259\n+ 1 260\n+ 1 261\n+ 1 262\n+ 1 263\n+ 1 264\n+ 1 265\n+ 1 266\n+ 1 267\n+ 1 268\n+ 1 269\n+ 1 270\n+ 1 271\n+ 1 272\n+ 1 273\n+ 1 274\n+ 1 275\n+ 1 276\n+ 1 277\n+ 1 278\n+ 1 279\n+ 1 280\n+ 1 281\n+ 1 282\n+ 1 283\n+ 1 284\n+ 1 285\n+ 1 286\n+ 1 287\n+ 1 288\n+ 1 289\n+ 1 290\n+ 1 291\n+ 1 292\n+ 1 293\n+ 1 294\n+ 1 295\n+ 1 296\n+ 1 297\n+ 1 298\n+ 1 299\n+ 1 300\n+ 1 301\n+ 1 302\n+ 1 303\n+ 1 304\n+ 1 305\n+ 1 306\n+ 1 307\n+ 1 308\n+ 1 309\n+ 1 310\n+ 1 311\n+ 1 312\n+ 1 313\n+ 1 314\n+ 1 315\n+ 1 316\n+ 1 317\n+ 1 318\n+ 1 319\n+ 1 320\n+ 1 321\n+ 1 322\n+ 1 323\n+ 1 324\n+ 1 325\n+ 1 326\n+ 1 327\n+ 1 328\n+ 1 329\n+ 1 330\n+ 1 331\n+ 1 332\n+ 1 333\n+ 1 334\n+ 1 335\n+ 1 336\n+ 1 337\n+ 1 338\n+ 1 339\n+ 1 340\n+ 1 341\n+ 1 342\n+ 1 343\n+ 1 344\n+ 1 345\n+ 1 346\n+ 1 347\n+ 1 348\n+ 1 349\n+ 1 350\n+ 1 351\n+ 1 352\n+ 1 353\n+ 1 354\n+ 1 355\n+ 1 356\n+ 1 357\n+ 1 358\n+ 1 359\n+ 1 360\n+ 1 361\n+ 1 362\n+ 1 363\n+ 1 364\n+ 1 365\n+ 1 366\n+ 1 367\n+ 1 368\n+ 1 369\n+ 1 370\n+ 1 371\n+ 1 372\n+ 1 373\n+ 1 374\n+ 1 375\n+ 1 376\n+ 1 377\n+ 1 378\n+ 1 379\n+ 1 380\n+ 1 381\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4\") == \"2\"\nassert solution(\"2 5 10\\n+ 1 1\\n- 1 2\\n- 1 4\\n- 1 3\\n+ 1 7\\n+ 1 8\\n+ 1 6\\n- 1 9\\n- 1 5\\n- 1 1\\n+ 1 10\\n- 1 9\\n+ 1 4\\n- 1 8\\n- 1 7\\n- 1 6\\n+ 1 2\\n+ 1 1\\n- 1 10\\n+ 1 9\\n+ 1 5\\n+ 1 6\\n- 1 4\\n+ 1 7\\n+ 1 1\\n- 1 5\\n+ 1 8\\n+ 1 2\\n+ 1 9\\n+ 1 3\\n+ 1 4\\n- 1 8\\n+ 1 8\\n+ 1 3\\n- 1 1\\n+ 1 8\\n- 1 7\\n- 1 6\\n+ 1 9\\n+ 1 1\\n- 1 2\\n+ 1 9\\n+ 1 4\\n- 1 1\\n+ 1 6\\n+ 1 5\\n+ 1 9\\n+ 1 3\\n+ 1 4\\n- 1 5\\n+ 1 1\\n- 1 9\\n- 1 6\\n+ 1 8\\n+ 1 1\\n- 1 7\\n+ 1 6\\n+ 1 4\\n+ 1 3\\n+ 1 7\\n- 1 8\\n+ 1 9\\n+ 1 3\\n+ 1 7\\n- 1 4\\n+ 1 4\\n+ 1 4\\n- 1 8\\n+ 1 5\\n+ 1 4\\n- 1 5\\n+ 1 4\\n+ 1 6\\n+ 1 2\\n+ 1 2\\n- 1 7\\n+ 1 2\\n+ 1 3\\n+ 1 6\\n+ 1 4\\n- 1 4\\n+ 1 5\\n+ 1 6\\n+ 1 1\\n- 1 9\\n+ 1 8\\n- 1 4\\n+ 1 7\\n+ 1 1\\n- 1 7\\n+ 1 1\\n+ 1 6\\n+ 1 5\\n+ 1 1\\n+ 1 1\\n+ 1 5\\n- 1 9\\n+ 1 3\\n- 1 7\\n+ 1 2\\n+ 1 8\\n+ 1 3\\n+ 1 5\\n+ 1 9\\n+ 1 9\\n+ 1 3\\n- 1 3\\n+ 1 9\\n+ 1 4\\n+ 1 5\\n+ 1 6\\n+ 1 2\\n+ 1 7\\n+ 1 9\\n+ 1 4\\n- 1 4\\n+ 1 1\\n- 1 8\\n+ 1 3\\n+ 1 5\\n+ 1 8\\n+ 1 7\\n+ 1 6\\n+ 1 3\\n- 1 9\\n+ 1 7\\n- 1 2\\n+ 1 7\\n+ 1 6\\n+ 1 4\\n+ 1 2\\n+ 1 6\\n+ 1 8\\n+ 1 1\\n+ 1 2\\n- 1 9\\n+ 1 3\\n+ 1 4\\n+ 1 4\\n+ 1 1\\n- 1 8\\n+ 1 6\\n+ 1 3\\n+ 1 1\\n+ 1 3\\n+ 1 1\\n+ 1 4\\n+ 1 1\\n- 1 7\\n+ 1 1\\n+ 1 8\\n+ 1 1\\n+ 1 8\\n+ 1 3\\n+ 1 9\\n+ 1 1\\n+ 1 2\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1\\n+ 1 1"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5 3\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('5 5 2\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '1'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4\n''') == '8'\n\nassert solution('''\n2 5 2\n+ 1 1\n- 1 2\n+ 1 3\n+ 1 4\n- 1 5\n''') == '9'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('3 3 3') == '8'\nassert solution('3 4 2') == '4'\nassert solution('4 4 3') == '6'\nassert solution('7 7 7') == '17'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 1\n+ 1 2\n+ 1 3\n- 1 4\n''') == '1'\n\nassert solution('''\n2\n2 1\n+ 1 2\n+ 1 3\n- 1 4\n''') == '2'\n\nassert solution('''\n5\n5 5\n+ 1 1\n- 1 2\n- 1 3\n+ 1 4\n+ 1 5\n- 1 6\n+ 1 7\n- 1 8\n- 1 9\n+ 1 10\n- 1 11\n+ 1 12\n- 1 13\n+ 1 14\n+ 1 15\n- 1 16\n- 1 17\n+ 1 18\n- 1 19\n+ 1 20\n''') == '0'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4 4\n+ 1 1\n- 1 2\n+ 1 3\n- 1 4''') == '2'\nassert solution('''2 5 8\n+ 1 4\n- 1 6\n- 1 7\n- 1 8\n+ 2 3\n+ 2 6\n+ 2 7\n+ 2 8\n+ 3 1\n+ 3 2\n+ 3 3\n+ 3 4\n+ 3 5\n+ 4 1\n+ 4 2\n+ 4 3\n+ 4 5\n+ 4 6\n+ 4 7\n+ 4 8\n+ 5 1\n+ 5 2\n+ 5 3\n+ 5 4\n+ 5 5\n+ 6 1\n+ 6 2\n+ 6 3\n+ 6 4\n+ 6 5\n+ 7 1\n+ 7 2\n+ 7 3\n+ 7 4\n+ 7 5\n+ 7 6\n+ 7 7\n+ 7 8\n+ 8 1\n+ 8 2\n+ 8 3\n+ 8 4\n+ 8 5\n+ 8 6\n+ 8 7\n+ 8 8''') == '3'\nassert solution('''2 2 2\n+ 1 2\n- 1 2''') == '0'\nassert solution('''2 3 2\n+ 1 2\n+ 1 2\n+ 1 2''') == '1'\nassert solution('''10 4 10\n+ 1 4\n+ 2 4\n+ 3 4\n+ 4 4\n+ 5 4\n+ 6 4\n+ 7 4\n+ 8 4\n+ 9 4\n+ 1 1\n+ 1 2\n+ 1 3\n+ 1 4\n+ 1 5\n+ 1 6\n+ 1 7\n+ 1 8\n+ 1 9\n+ 2 1\n+ 2 2\n+ 2 3\n+ 2 4\n+ 2 5\n+ 2 6\n+ 2 7\n+ 2 8\n+ 2 9\n+ 3 1\n+ 3 2\n+ 3 3\n+ 3 4\n+ 3 5\n+ 3 6\n+ 3 7\n+ 3 8\n+ 3 9\n+ 4 1\n+ 4 2\n+ 4 3\n+ 4 4\n+ 4 5\n+ 4 6\n+ 4 7\n+ 4 8\n+ 4 9\n+ 5 1\n+ 5 2\n+ 5 3\n+ 5 4\n+ 5 5\n+ 5 6\n+ 5 7\n+ 5 8\n+ 5 9\n+ 6 1\n+ 6 2\n+ 6 3\n+ 6 4\n+ 6 5\n+ 6 6\n+ 6 7\n+ 6 8\n+ 6 9\n+ 7 1\n+ 7 2\n+ 7 3\n+ 7 4\n+ 7 5\n+ 7 6\n+ 7 7\n+ 7 8\n+ 7 9\n+ 8 1\n+ 8 2\n+ 8 3\n+ 8 4\n+ 8 5\n+ 8 6\n+ 8 7\n+ 8 8''') == '2'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 3') == \"11\"\nassert solution('6 5 4') == \"10\"\n\n\"\"\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '500000004'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1') == '500000004'\nassert solution('3\\n2 2\\n2 1\\n1 2') == '0.375'\nassert solution('3\\n2 2\\n2 1\\n1 2') == '0.375'\nassert solution('10\\n1 0\\n2 0\\n3 0\\n4 0\\n5 0\\n6 0\\n7 0\\n8 0\\n9 0\\n10 1') == '0.2667'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1000000000000 0\n1000000000000 1\n''') == '500000004'\nprint('PASSED!')\nassert solution('''\n1000000000 0\n1000000000 1\n''') == '500000004'\nprint('PASSED!')\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1000000000 0\n1000000000 1\n\"\"\") == \"500000004\"\n\nassert solution(\"\"\"\n1000000000 1\n1000000000 1\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5000000000 2\n0 0\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5000000000 5\n1000000000 1\n1000000000 1\n1000000000 1\n1000000000 1\n\"\"\") == \"1048576\"\n\nprint(\"All test cases passed!\")\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 1\\n3 0\\n4 1\\n5') == \"1000001\"\nassert solution('6\\n4 4\\n2 2\\n4 2\\n6 4\\n4 4\\n2 2\\n1 1\\n5') == \"50000001\"\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '500000004'\nassert solution('100') == '48132211'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1000000000 0\\n1000000000 1') == '500000004'"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '10000004'\nassert solution('2 2') == '0'\nassert solution('1 1 1') == '0'\nassert solution('2 2 2') == '0'\nassert solution('2 3') == '0'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000000000 0') == '500000004'\nassert solution('1000000000 1') == '99999999'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1000000000 0\n1000000000 1\n''') == '500000004'\nassert solution('''\n2\n1000000000 0\n1000000000 1\n''') == '500000004'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 3 13 27\\n3 5 23 24\\n\") == \"12\"\nassert solution(\n    \"5 6\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 3 13 27\\n3 5 23 24\\n\") == \"3\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nassert solution('''\n3 4\n1 2\n1 3\n3 4\n''') == '4'\nassert solution('''\n2 3\n1 3\n1 3\n3 5\n''') == '4'\n''')\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"12\""
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 2 3\") == \"3\"\nassert solution(\"5 8\") == \"12\"\nassert solution(\"3 1 2 5 2 3 4\") == \"16\"\nassert solution(\"4 3 9 2 1 6 8\") == \"13\"\nassert solution(\"4 3 7 5 6 4 8\") == \"14\"\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\n\n''')"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8') == '12'\nassert solution('10 10') == '0'\nassert solution('3 3') == '1'\nassert solution('5 7') == '3'\nassert solution('5 5') == '5'"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nprint(solution('''1 1\n3 2 3\n2 3 1\n2 4 3\n3 2 1\n1 3 3\n1 4 4\n3 2 2\n4 3 1\n3 4 1\n3 3 2\n4 3 3\n3 3 3\n'''))"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 10') == '12'\nassert solution('2 4 11 16') == '10'\nassert solution('2 1 9 12') == '9'\nassert solution('3 5 28 100') == '18'\nassert solution('1 2 3 8') == '7'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 8\\n1 2 1 10\\n2 4 11 16\\n2 1 9 12\\n3 5 28 100\\n1 3 13 27\\n3 5 23 24\") == \"12\"\nassert solution(\"3 1\\n1 2\\n1 3\") == \"2\"\nassert solution(\"5 1\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\") == \"9\"\nassert solution(\"3 2\\n2 5\\n1 5\") == \"0\"\nassert solution(\"5 1\\n2 3\\n4 5\\n6 7\\n8 9\\n10 11\") == \"4\""
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 19\n15 5 3\n12 4 4\n20 10 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1\n1 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 3\n1 3 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n100 100\n4 4 4 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 20\n12 5 8\n10 5 10\n13 10 12\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('10') == '10'\nassert solution('50') == '10'\nassert solution('100') == '10'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n10 5\\n20 10 5') == '3'\nassert solution('1\\n10 5\\n20 10 5') == '2'\nassert solution('2\\n20 10\\n10 20') == '1'\nassert solution('3\\n20 10\\n10 20') == '2'\nassert solution('4\\n20 10\\n10 20') == '3'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3'\nassert solution('1 1 1') == '3'\nassert solution('1 1 1 2') == '3'\nassert solution('1 1 1 2 1') == '4'\nassert solution('1 2 2 2 2') == '2'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2\n5 4 0\n5 3 5\n5 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 2\n5 4 0\n5 3 5\n5 1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 2\n5 4 0\n5 3 5\n5 1 2\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n15 5 3\n12 4 4\n20 10 5\n''') == '3'\nassert solution('''\n2\n15 5 3\n12 4 4\n20 10 5\n''') == '4'\nassert solution('''\n3\n15 5 3\n12 4 4\n20 10 5\n''') == '3'\nassert solution('''\n1\n20 5 3\n12 4 4\n''') == '0'\nassert solution('''\n3\n15 5 3\n12 4 4\n20 10 5\n''') == '0'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 5\n3 10 3\n9 15 4\n''') == '3'\nassert solution('''\n10 5\n5 3\n10 6 5\n''') == '0'\nassert solution('''\n8 7\n4 3\n6 5\n''') == '0'\nassert solution('''\n6 7\n3 4\n2 3\n4 6\n''') == '2'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1\n2 2\n3 3''') == \"1\"\nassert solution('''4\n3 2\n3 3\n4 5\n1 2''') == \"4\"\nassert solution('''5\n1 3\n1 4\n2 4\n3 2\n2 3''') == \"0\"\nassert solution('''6\n2 3\n2 4\n2 5\n1 3\n1 4\n1 5''') == \"2\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1\\n') == '1'\nassert solution('2\\n2 1\\n') == '1'\nassert solution('3\\n3 1 2\\n') == '0'\nassert solution('4\\n4 1 1 1\\n') == '1'\nassert solution('5\\n5 1 2 3\\n') == '0'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n1 2\n''') == '1'\nassert solution('''2\n1 2\n''') == '0'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"10 3\") == \"4\"\nassert solution(\"10 100\") == \"7\"\nassert solution(\"100 5\") == \"14\"\n\n\"\"\"\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 3 4\\n1 2 4 5') == '1'\nassert solution('20\\n1 1 3 4\\n1 2 4 5') == '3'\n\nfrom collections import defaultdict\nn = int(input())\ngraph = defaultdict(list)\nfor _ in range(n):\n    v1, v2 = map(int, input().split())\n    graph[v1].append(v2)\n    graph[v2].append(v1)"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\n1 2\n''') == '1'\n\nassert solution('''\n5\n1 1\n1 3\n2 2\n2 3\n3 1\n''') == '5'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 1') == '1'\nassert solution('2\\n1 1\\n2 2') == '2'\nassert solution('3\\n1 2\\n1 2\\n1 2') == '2'\nassert solution('4\\n1 2\\n2 1\\n1 1\\n1 1\\n1 2') == '2'\nassert solution('5\\n1 2\\n2 1\\n1 1\\n1 2\\n1 1') == '2'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 1\\n3 2\\n5 5\\n7 3\\n') == '1'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3 2 1 3\") == \"2\"\nassert solution(\"3 2 1 3 2 4 5\") == \"1\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\n\"\"\""
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('RGR') == '1'\nassert solution('GBG') == '1'\nassert solution('BYB') == '4'\nassert solution('YRY') == '4'\nassert solution('RRR') == '1'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''RGGR\nGBGB\nBYBY\nYRYR''') == '3'\n\n'''\n\n## CODING QUESTIONS ##\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RGRR\") == \"3\"\nassert solution(\"RGBG\") == \"2\"\nassert solution(\"BYBY\") == \"1\"\nassert solution(\"YYYY\") == \"0\""
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RGGR') == '3'\nassert solution('GBGB') == '1'\nassert solution('BYBY') == '1'\nassert solution('YRYR') == '4'\nassert solution('ZZZZ') == '13'\nprint(solution
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('RGGR') == '3'\nassert solution('GBGB') == '4'\nassert solution('BYBY') == '4'\nassert solution('YRYR') == '5'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RRYG\") == \"3\"\n\"\"\"\nfrom collections import deque\n\nR = deque('RGGR')\nG = deque('GBGB')\nB = deque('BYBY')\nY = deque('YRYR')\n\nfor _ in range(3):\n    if len(R)!= 0:\n        R.popleft()\n    if len(G)!= 0:\n        G.popleft()\n    if len(B)!= 0:\n        B.popleft()\n    if len(Y)!= 0:\n        Y.popleft()\n    R.append('R')\n    G.append('G')\n    B.append('B')\n    Y.append('Y')\n\nR = ''.join(R)\nG = ''.join(G)\nB = ''.join(B)\nY = ''.join(Y)\n\nprint(R + G + B + Y)"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"3\"\nassert solution(\"BYBY\") == \"3\"\nassert solution(\"YRYR\") == \"3\"\n\"\"\""
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nRGGGR\nGBGB\nBYBY\nYRYR\n''') == \"3\"\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RGGR') == '1'\nassert solution('GBGB') == '2'\nassert solution('BYBY') == '3'\nassert solution('YRYR') == '4'"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n-2 -1 0 1 2\\n2 1 0 -1 -2\") == \"AAAAA\"\nassert solution(\"5\\n1 -1 0 1 2\\n2 1 0 -1 -2\") == \"BBBB\"\nassert solution(\"5\\n-2 -1 0 1 2\\n-1 -2 0 1 2\") == \"BBBB\"\nassert solution(\"5\\n0 -1 0 1 2\\n1 -1 0 1 2\") == \"AAAA\"\nassert solution(\"5\\n0 1 -1 0 2\\n1 -1 0 1 2\") == \"AAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([-2, -1, 0, 1, 2]) == 'AAAAA'\nassert solution([2, 1, 0, -1, -2]) == 'BBBB'\n\"\"\""
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n\"\"\") == \"AAAAA\"\n\nassert solution(\n\"\"\"\n5\n3 4 -3 1 -1\n2 1 -2 2 2\n\"\"\") == \"AAAAB\"\n\nassert solution(\n\"\"\"\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n\"\"\") == \"BBBBA\"\n\nassert solution(\n\"\"\"\n5\n3 4 -3 1 -1\n2 1 -2 2 2\n\"\"\") == \"BBBBB\"\n\nassert solution(\n\"\"\"\n5\n-2 -1 0 1 2\n2 1 0 -1 -2\n\"\"\") == \"BBBBA\""
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"A\" * 5\nassert solution(\"4\") == \"AABB\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 -2 3\n-2 0 -1\n1 -3 -2\n''') == 'ABAB'\n'''"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == ''\nassert solution(\"\") == ''\nassert solution(\"5\") == 'AAABAA'\nassert solution(\"-2 -1 0 1 2\") == 'AAABAA'\nassert solution(\"0 1 0 -1 -2\") == 'AAABAA'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2''') == \"AAAAA\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n-2 -1 0 1 2\\n2 1 0 -1 -2') == 'AAAAA'\nassert solution('10\\n-2 -1 0 1 2 3 4 5 6 7 8 9\\n2 1 0 -1 -2') == 'AABAAB'\n\nstdin = \"\"\"\n5\n2 1 0 -1 -2\n2 1 0 -1 -2\n\"\"\"\n\nassert solution(stdin) == 'AABAAB'\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3\\n-1 -2') == 'AABB'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3\\n2 3\\n4 0\\n0 2\\n6 1\") == \"IMPOSSIBLE\"\n\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3\n2 3\n4 0\n0 2\n6 1\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data='''\n4 4\n0 1\n0 2\n0 3\n0 4\n''') == '2'\n\nassert solution(input_data='''\n6 6\n0 1\n0 3\n0 4\n1 2\n1 3\n2 3\n3 4\n4 5\n''') == '2'\n\n'''\n--- Part Two ---\nNow, we have another wire. The circuit board is still the same size, but it should contain a wire that goes from $A_1$ to $B_2$ and a wire that goes from $A_2$ to $B_1$. The point (0, 0) should be connected to the wire, and there should be no other intersections (points with no coordinates).\n\n-----Input-----\nThe first line contains two integers, $N$ ($2 \\le N \\le 100$) and $M$ ($2 \\le M \\le 100$), the grid size of the circuit board.\n\nThen follows four lines containing the coordinates for the points $A_1$, $A_2$, $B_1$ and $B_2$, respectively. Each coordinate pair will be described using two integers and will correspond to an intersection point in the grid. The first coordinate will be between $0$ and $N$ inclusive and the second coordinate between $0$ and $M$ inclusive. All coordinate pairs will be unique.\n\n-----Output-----\nA single line containing the minimum length of wire needed to connect the points, or \u201cIMPOSSIBLE\u201d if it\u2019s not possible to do so.\n\n-----Examples-----\nSample Input:\n6 4\n0 1\n0 3\n0 4\n1 2\n1 3\n2 3\n3 4\n4 5\n\nSample Output:\n2\n\n'''"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n4\\n3 0\\n6 1') == \"2\"\nassert solution('2\\n3\\n2 1\\n3 1\\n2 2\\n2 1') == \"1\"\nassert solution('2\\n3\\n1 0\\n6 1') == \"IMPOSSIBLE\"\nassert solution('1\\n4\\n3 0\\n6 1') == \"IMPOSSIBLE\""
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"IMPOSSIBLE\"\nassert solution(\"10 3\") == \"5\"\nassert solution(\"20 3\") == \"IMPOSSIBLE\"\nassert solution(\"10 20\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"4 0\") == \"2\"\nassert solution(\"0 2\") == \"2\"\nassert solution(\"6 1\") == \"1\""
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3\") == \"IMPOSSIBLE\"\nassert solution(\"6 4\") == \"1\"\nassert solution(\"2 3\") == \"1\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n2 3\\n4 0\\n0 2') == \"IMPOSSIBLE\"\nassert solution('1 2\\n0 2\\n3 3\\n0 4\\n0 1\\n4 5\\n1 3\\n5 3\\n2 4\\n3 5\\n1 5') == \"1\"\nprint(\"solution()\")\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"IMPOSSIBLE\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 3\") == \"3\"\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '12'\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '13'\nassert solution('''\n5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria\n''') == '14'\n'''\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '12\\n11\\n3\\n2\\n'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\n' + 'austria\\n' + 'autocorrect\\n' + 'program\\n' + 'programming\\n' + 'computer\\n' + 'autocorrelation\\n' + 'programming\\n' + 'competition\\n' + 'zyx\\n') == '12\\n4\\n11\\n3\\n2\\n'\nassert solution('1 5\\n' + 'austria\\n' + 'autocorrect\\n' + 'program\\n' + 'programming\\n' + 'computer\\n' + 'autocorrelation\\n' + 'programming\\n' + 'competition\\n' + 'zyx\\n') == '11\\n4\\n11\\n3\\n2\\n'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria') == '12'\nassert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria') == '15'\nassert solution('10 5\\n' +\n                'austria\\n' +\n                'autocorrect\\n' +\n                'program\\n' +\n                'programming\\n' +\n                'computer\\n' +\n                'autocorrelation\\n' +\n                'programming\\n' +\n                'competition\\n' +\n                'zyx\\n' +\n                'austria\\n' +\n                'autocorrect\\n' +\n                'program\\n' +\n                'programming\\n' +\n                'computer\\n' +\n                'autocorrelation\\n' +\n                'programming\\n' +\n                'competition\\n' +\n                'zyx\\n' +\n                'austria\\n' +\n                'autocorrect\\n' +\n                'program\\n' +\n                'programming\\n' +\n                'computer\\n' +\n                'autocorrelation\\n' +\n                'programming\\n' +\n                'competition\\n' +\n                'zyx\\naustria\\n' +\n                'autocorrect\\n' +\n                'program\\n' +\n                'programming\\n' +\n                'computer\\n' +\n                'autocorrelation\\n' +\n                'programming\\n' +\n                'competition\\n' +\n                'zyx\\n') == '15'\nassert solution('0 0\\n') == '0'\nassert solution('0 10\\n') == '0'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\naustria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria''') == '''12\n4\n11\n3\n2\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == \"12\\n4\\n11\\n3\\n2\"\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n'\n           'austria\\n'\n           'autocorrect\\n'\n           'program\\n'\n           'programming\\n'\n           'computer\\n'\n           'autocorrelation\\n'\n           'programming\\n'\n           'competition\\n'\n           'zyx\\n'\n           'austria\\n') == '12\\n4\\n11\\n3\\n2\\n'"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''austria\nautocorrect\nprogram\nprogramming\ncomputer\nautocorrelation\nprogramming\ncompetition\nzyx\naustria''') == '12'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '12'\nassert solution('10 10') == '11'\nassert solution('15 15') == '16'\nassert solution('7 7') == '18'\nassert solution('5 5') == '12'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx') == '12\\n4\\n11\\n3\\n2\\n'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 2\\n0 1 1') == '3'\nassert solution('2 1 1\\n0 1 1') == '3'\nassert solution('3 0 0\\n0 2 1') == '3'\nassert solution('4 1 2\\n0 2 3') == '3'\nassert solution('6 1 2\\n0 2 3') == '3'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n0 1 1') == '3'\nassert solution('1\\n4\\n1 2 1') == '2'\nassert solution('1\\n8\\n4 3 1 2 2 3 2 3') == '4'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '4'\nassert solution('2\\n4\\n2') == '3'\nassert solution('5\\n3\\n1') == '3'\nassert solution('12\\n10\\n9') == '15'\nassert solution('12\\n14\\n12') == '13'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Impossible'\nassert solution('3') == '4'\nassert solution('2') == '4'\nassert solution('4') == '4'\nassert solution('5') == 'Impossible'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('4\\n2\\n0\\n1') == '2'\nassert solution('5\\n1\\n2\\n0\\n1') == '5'\nassert solution('6\\n1\\n2\\n3\\n4') == '7'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 3\\n') == '0'\nassert solution('4\\n2 4 2\\n') == '1'\nassert solution('15\\n8 5 1 2 7 0 3 0 2 2 3\\n') == '8'\nassert solution('15\\n8 5 1 2 7 0 3 0 2 2 3\\n') == '13'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '12'\nassert solution('5') == '10'\nassert solution('6') == '1'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'impossible'\nassert solution('3') == '3'\nassert solution('5') == 'impossible'"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n0 1 1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"impossible\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"2\"\n\"\"\""
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HFBBIGEDCJA') == 'HFBJCDEGIA'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'\nassert solution('BIGEDCJFAH') == 'BIGEDCJFAH'\n-----Hints-----\nIn the first part, you can decide to try all possible reconstructions and find the one that has the highest score. However, in the second part, you should find the first tree that has the highest inorder and postorder print.\n\nIn order to start from the root of the tree, you should not only use the standard preorder traversal, but also the tree traversal with two stack stacks. Each stack stack stores nodes that are either left or right child of a node. The left node has stack 0 and the right node has stack 1. The empty stack at the bottom of the stack is the current node.\n\nTo find the postorder, you can use the stack to traverse the tree bottom up, but instead of returning the current node, you should return the node\u2019s value, which is equivalent to the value of the node.\n\nThe first step to understand the method of constructing the tree is to understand the inorder and postorder traversals. You should use the inorder traversal to construct the left subtree and the postorder traversal to construct the right subtree.\n\nThe first node of the tree is the root, which you already know. As you look at the left subtree, you should find the leftmost node in the left subtree and find the value of that node. The root node\u2019s value is already stored in the value variable. After constructing the left subtree, you have to push the value onto the stack and start the right subtree traversal on the right subtree.\n\nThe right subtree traversal starts at the leftmost node in the right subtree, and so on.\n\nNow the postorder traversal starts at the leftmost node in the right subtree, and so on. The first node is pushed to the stack, and the value is obtained by calling pop. In this way, when you\u2019re done traversing the right subtree, you will have the value of the node you want.\n\nOne way to reach the bottom of the stack is to use a stack to traverse the tree from bottom up, so that the first node is the rightmost node, and the last node is the leftmost node. This is equivalent to traversing the tree bottom up by calling the inorder traversal.\n\nThen, the postorder traversal starts at the leftmost node in the right subtree, and so on.\n\nNow the first node of the tree is the root node, and so on.\n\nFinally, when we finish the first tree, we need to push the node value onto the stack again, so that we can build the left subtree from that node.\n\n'''\n\n'''\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\n\"\"\"\n\nimport sys\nfrom collections import defaultdict, deque"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nHFBIGEDCJA\nBIGEDCJFAH\nBIGEDCJFAH\n''') == '''\nPre In Post In Pre\nHFBJCDEGIA\nBIGEDCJFAH\nIGEDCJBAFH\n'''\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"\") == \"\"\n\nimport sys\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"HFBBIGEDCJA\") == \"Pre Post In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Post\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"HFBBIGEDCJA\") == \"Pre In Post In Pre\"\nassert solution(\"HFBBIGEDCJA\") == \"Pre In Post In Pre\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"BIGEDCJFAH\"\nassert solution(\"BIGEDCJFAH\") == \"BIGEDCJFAH\"\n\"\"\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''HFIJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nHFIJBABCGEDCEHGHI''') == 'Pre In Post In Pre'\n\nassert solution('''HFIJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nHFIJBABCGEDCEHGHI''') == 'Pre In Post In Pre'\n\nassert solution('''HFIJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nHFIJBABCGEDCEHGHI''') == 'Pre In Post In Pre'\n\nassert solution('''HFIJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nHFIJBABCGEDCEHGHI''') == 'Pre In Post In Pre'\n\nassert solution('''HFIJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nJBABCGEDCEHGHI\nHFIJBABCGEDCEHGHI''') == 'Pre In Post In Pre'"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"HFBJCDEGIA\"\nassert solution(\"BIGEDCJFAH\") == \"BIGEDCJFAH\"\nassert solution(\"BIGEDCJFAH\") == \"BIGEDCJFAH\"\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre In In In In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In In In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In In In In\""
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('HFBIGEDCJA') == 'Pre In Post In Pre'\nassert solution('BIGEDCJFAH') == 'Pre In Post In Pre'\nassert solution('BIGEDCJFAH') == 'Pre In Post In Pre'\nassert solution('C') == 'Pre In Post In Pre'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3 1 1\\n1\\n4 1 0\\n') == '10'\nassert solution('4\\n6 1 0\\n5 1 0\\n9 1 0\\n3 1 1\\n') == '11'\nassert solution('5\\n10 1 0\\n4 1 0\\n9 1 0\\n3 1 1\\n') == '11'\nassert solution('6\\n10 1 0\\n5 1 0\\n9 1 0\\n3 1 1\\n') == '11'\nassert solution('10\\n0 0 0\\n6 1 0\\n5 1 0\\n9 1 0\\n3 1 1\\n') == '10'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n2\\n10 0\\n3 1 1\\n1\\n4 1 0') == '10'\nassert solution('2\\n2\\n10 1 1\\n3 1 0\\n0\\n4 1 0') == '10'\nassert solution('2\\n2\\n10 1 1\\n3 1 0\\n1\\n4 1 0') == '10'\nassert solution('2\\n2\\n10 1 1\\n3 1 0\\n1\\n4 1 0') == '10'"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n10 0\") == \"10\"\nassert solution(\"3\\n1 1 1\") == \"4\"\nassert solution(\"1\\n4 1 0\") == \"1\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"11\"\nassert solution(\"5\") == \"8\"\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2\n1 0\n3 1 1\n1\n4 1 0\n''') == \"10\""
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n10 0') == '10'\nassert solution('3\\n1 1 1') == '7'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '10'\nassert solution('1') == '10'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '10'\nassert solution('''3\n2\n10 1\n1\n4 0''') == '5'\nassert solution('''3\n2\n11 0\n2\n4 0''') == '11'\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n10 0\\n3 1 1\\n1\") == \"10\"\n"
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n2\n10 0\n3 1 1\n1\n4 1 0''') == '10'\nassert solution('''3\n2\n4 1 0\n3 1 1\n1\n4 1 0''') == '12'\nassert solution('''5\n2\n10 0\n3 1 1\n1\n4 1 0\n3 1 1\n1\n4 1 0''') == '16'\nassert solution('''7\n2\n10 0\n3 1 1\n1\n4 1 0\n3 1 1\n1\n4 1 0\n3 1 1\n1\n4 1 0''') == '20'\nassert solution('''7\n2\n10 0\n3 1 1\n1\n4 1 0\n3 1 1\n1\n4 1 0\n3 1 1\n1\n4 1 0''') == '19'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0 100 100\\n30 30 60 60') == '10000.00'\nassert solution('3\\n0 0 100 100\\n30 30 60 60\\n0 0 100 100\\n30 30 60 60') == '100000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 0 100 100\n30 30 60 60''') == '10000.00'''\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n1\n0 0 100 100\n''') == '100.00'\nassert solution('''\n1\n30 30 60 60\n''') == '30.00'\n'''"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n0 0 100 100\\n30 30 60 60\") == \"10000.00\"\nassert solution(\"3\\n0 0 0 0\\n0 0 10 10\\n0 0 0 0\\n0 0 0 0\") == \"0.00\"\nassert solution(\"3\\n0 0 0 0\\n-10 -10 10 10\\n0 0 0 0\") == \"90.00\"\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n4\n0 0 0 0\n10 10 10 10\n10 10 10 10\n10 10 10 10\n''') == '20500.00'\n\n'''"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\n''')"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '100000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0 100 100\\n30 30 60 60\\n') == '10000.00'\nassert solution('3\\n0 0 100 100\\n30 30 60 60\\n20 20 20 20\\n') == '10000.00'\nassert solution('3\\n0 0 100 100\\n-30 -30 60 60\\n-20 -20 20 20\\n') == '2000.00'\nassert solution('3\\n0 0 100 100\\n0 0 0 0\\n20 20 20 20\\n') == '2000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n0 0 100 100\n30 30 60 60\n20 20 50 50\n10 10 50 50\n30 30 60 60\n10 20 50 50\n30 30 60 60\n20 20 50 50\n10 10 50 50\n30 30 60 60\n20 20 50 50\n10 10 50 50\n30 30 60 60\n20 20 50 50\n10 10 50 50\n30 30 60 60\n''') == '40000.00'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.00'\nassert solution('2') == '10000.00'\n'''\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '6'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('1 3') == '1'\nassert solution('4 5') == '4'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4\\n') == '5'\nassert solution('20 4\\n1 3\\n4 5\\n2 4\\n') == '20'\nassert solution('5 3\\n1 2\\n4 5\\n2 4\\n') == '8'\nassert solution('15 3\\n1 3\\n4 5\\n2 4\\n') == '15'\nassert solution('5 3\\n1 3\\n3 4\\n2 4\\n') == '1'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n1 3\n4 5\n2 4\n''') == '5'\nassert solution('''\n10 5\n1 3\n4 5\n2 4\n''') == '5'\nassert solution('''\n1 4\n1 2\n1 3\n''') == '0'\nassert solution('''\n2 4\n1 2\n1 3\n''') == '0'\nassert solution('''\n1 4\n1 2\n2 4\n''') == '0'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 3\\n\"\n    \"1 3\\n\"\n    \"4 5\\n\"\n    \"2 4\\n\") == \"5\"\nassert solution(\n    \"10 3\\n\"\n    \"1 3\\n\"\n    \"4 5\\n\"\n    \"2 4\\n\"\n    \"6 4\\n\"\n    \"7 5\\n\"\n    \"8 6\\n\"\n    \"9 7\\n\"\n    \"10 8\\n\"\n    \"11 9\\n\"\n    \"12 10\\n\"\n    \"13 11\\n\"\n    \"14 12\\n\"\n    \"15 13\\n\"\n    \"16 14\\n\"\n    \"17 15\\n\"\n    \"18 16\\n\"\n    \"19 17\\n\"\n    \"20 18\\n\"\n    \"21 19\\n\"\n    \"22 20\\n\"\n    \"23 21\\n\"\n    \"24 22\\n\"\n    \"25 23\\n\"\n    \"26 24\\n\"\n    \"27 25\\n\"\n    \"28 26\\n\"\n    \"29 27\\n\"\n    \"30 28\\n\"\n    \"31 29\\n\"\n    \"32 30\\n\"\n    \"33 31\\n\"\n    \"34 32\\n\"\n    \"35 33\\n\"\n    \"36 34\\n\"\n    \"37 35\\n\"\n    \"38 36\\n\"\n    \"39 37\\n\"\n    \"40 38\\n\"\n    \"41 39\\n\"\n    \"42 40\\n\"\n    \"43 41\\n\"\n    \"44 42\\n\"\n    \"45 43\\n\"\n    \"46 44\\n\"\n    \"47 45\\n\"\n    \"48 46\\n\"\n    \"49 47\\n\"\n    \"50 48\\n\"\n    \"51 49\\n\"\n    \"52 50\\n\"\n    \"53 51\\n\"\n    \"54 52\\n\"\n    \"55 53\\n\"\n    \"56 54\\n\"\n    \"57 55\\n\"\n    \"58 56\\n\"\n    \"59 57\\n\"\n    \"60 58\\n\"\n    \"61 59\\n\"\n    \"62 60\\n\"\n    \"63 61\\n\"\n    \"64 62\\n\"\n    \"65 63\\n\"\n    \"66 64\\n\"\n    \"67 65\\n\"\n    \"68 66\\n\"\n    \"69 67\\n\"\n    \"70 68\\n\"\n    \"71 69\\n\"\n    \"72 70\\n\"\n    \"73 71\\n\"\n    \"74 72\\n\"\n    \"75 73\\n\"\n    \"76 74\\n\"\n    \"77 75\\n\"\n    \"78 76\\n\"\n    \"79 77\\n\"\n    \"80 78\\n\"\n    \"81 79\\n\"\n    \"82 80\\n\"\n    \"83 81\\n\"\n    \"84 82\\n\"\n    \"85 83\\n\"\n    \"86 84\\n\"\n    \"87 85\\n\"\n    \"88 86\\n\"\n    \"89 87\\n\"\n    \"90 88\\n\"\n    \"91 89\\n\"\n    \"92 90\\n\"\n    \"93 91\\n\"\n    \"94 92\\n\"\n    \"95 93\\n\"\n    \"96 94\\n\"\n    \"97 95\\n\"\n    \"98 96\\n\"\n    \"99 97\\n\"\n    \"100 98\\n\"\n    \"101 99\\n\"\n    \"102 100\\n\"\n    \"103 101\\n\"\n    \"104 102\\n\"\n    \"105 103\\n\"\n    \"106 104\\n\"\n    \"107 105\\n\"\n    \"108 106\\n\"\n    \"109 107\\n\"\n    \"110 108\\n\"\n    \"111 109\\n\"\n    \"112 110\\n\"\n    \"113 111\\n\"\n    \"114 112\\n\"\n    \"115 113\\n\"\n    \"116 114\\n\"\n    \"117 115\\n\"\n    \"118 116\\n\"\n    \"119 117\\n\"\n    \"120 118\\n\"\n    \"121 119\\n\"\n    \"122 120\\n\"\n    \"123 121\\n\"\n    \"124 122\\n\"\n    \"125 123\\n\"\n    \"126 124\\n\"\n    \"127 125\\n\"\n    \"128 126\\n\"\n    \"129 127\\n\"\n    \"130 128\\n\"\n    \"131 129\\n\"\n    \"132 130\\n\"\n    \"133 131\\n\"\n    \"134 132\\n\"\n    \"135 133\\n\"\n    \"136 134\\n\"\n    \"137 135\\n\"\n    \"138 136\\n\"\n    \"139 137\\n\"\n    \"140 138\\n\"\n    \"141 139\\n\"\n    \"142 140\\n\"\n    \"143 141\\n\"\n    \"144 142\\n\"\n    \"145 143\\n\"\n    \"146 144\\n\"\n    \"147 145\\n\"\n    \"148 146\\n\"\n    \"149 147\\n\"\n    \"150 148\\n\"\n    \"151 149\\n\"\n    \"152 150\\n\"\n    \"153 151\\n\"\n    \"154 152\\n\"\n    \"155 153\\n\"\n    \"156 154\\n\"\n    \"157 155\\n\"\n    \"158 156\\n\"\n    \"159 157\\n\"\n    \"160 158\\n\"\n    \"161 159\\n\"\n    \"162 160\\n\"\n    \"163 161\\n\"\n    \"164 162\\n\"\n    \"165 163\\n\"\n    \"166 164\\n\"\n    \"167 165\\n\"\n    \"168 166\\n\"\n    \"169 167\\n\"\n    \"170 168\\n\"\n    \"171 169\\n\"\n    \"172 170\\n\"\n    \"173 171\\n\"\n    \"174 172\\n\"\n    \"175 173\\n\"\n    \"176 174\\n\"\n    \"177 175\\n\"\n    \"178 176\\n\"\n    \"179 177\\n\"\n    \"180 178\\n\"\n    \"181 179\\n\"\n    \"182 180\\n\"\n    \"183 181\\n\"\n    \"184 182\\n\"\n    \"185 183\\n\"\n    \"186 184\\n\"\n    \"187 185\\n\"\n    \"188 186\\n\"\n    \"189 187\\n\"\n    "
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 3\\n4 5\\n2 4\") == \"5\"\nassert solution(\"5 4\\n1 3\\n4 5\\n2 4\") == \"5\"\nassert solution(\"5 4\\n1 3\\n4 5\\n2 3\") == \"5\"\nassert solution(\"5 4\\n1 3\\n4 5\\n2 5\") == \"5\"\nassert solution(\"5 4\\n1 3\\n4 5\\n2 4\") == \"5\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n') == '5'\nassert solution('1 3\\n4 5\\n2 4\\nSample Output:') == '5'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '5'\nassert solution('4 5') == '5'\nassert solution('2 4') == '7'\nassert solution('1 3') == '8'\nassert solution('4 5') == '4'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '5'\nassert solution('1 3') == '1'\nassert solution('4 5') == '1'\nassert solution('2 4') == '1'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n1\\n4\\n5\\n2\\n4\\n\") == \"1\"\nassert solution(\"10\\n1\\n2\\n3\\n4\\n5\\n1\\n2\\n3\\n4\\n5\\n1\\n2\\n3\\n4\\n5\\n\") == \"9\"\nassert solution(\"4\\n10\\n1\\n2\\n1\\n4\\n5\\n1\\n2\\n3\\n4\\n\") == \"3\"\nassert solution(\"8\\n6\\n1\\n2\\n1\\n6\\n7\\n1\\n2\\n3\\n4\\n5\\n1\\n2\\n3\\n4\\n5\\n\") == \"5\"\nassert solution(\"9\\n6\\n1\\n2\\n1\\n6\\n7\\n1\\n2\\n3\\n4\\n5\\n1\\n2\\n3\\n4\\n5\\n\") == \"4\"\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 3\\n4 5\\n2 4') == '5'\nassert solution('5 4\\n1 4\\n4 3\\n3 4') == '3'\nassert solution('10 10\\n1 2\\n2 1\\n3 4\\n4 1\\n5 3\\n4 2\\n3 5') == '7'\nassert solution('2 3\\n3 2\\n1 4\\n1 5\\n2 1\\n5 1\\n2 4\\n2 5') == '4'\nassert solution('4 1\\n1 4\\n4 2\\n2 4\\n3 1\\n1 3') == '1'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([11, 13, 17]) == '2095'\nprint(solution([11, 13, 17]))\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n11 13 17\n5 2 4\n0 0 0\n''') == '2095'\nassert solution('''\n5 2 4\n0 0 0\n''') == '203'\nassert solution('''\n11 13 17\n5 2 4\n0 0 0\n''') == '2095'\nassert solution('''\n5 2 4\n0 0 0\n''') == '203'\nassert solution('''\n11 13 17\n5 2 4\n0 0 0\n''') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([11, 13, 17]) == \"2095\"\nassert solution([5, 2, 4]) == \"2095\"\nassert solution([0, 0, 0]) == \"0\"\nassert solution([10, 1, 1]) == \"10\"\nassert solution([50, 1, 1]) == \"49\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"11 13 17\\n\"\n    \"5 2 4\\n\"\n    \"0 0 0\"\n    ) == \"2095\"\n\nassert solution(\n    \"10 10 10\\n\"\n    \"3 3 3\\n\"\n    \"0 0 0\"\n    ) == \"330\"\n\nassert solution(\n    \"15 10 15\\n\"\n    \"4 4 4\\n\"\n    \"0 0 0\"\n    ) == \"0\"\n\nassert solution(\n    \"23 23 23\\n\"\n    \"6 6 6\\n\"\n    \"0 0 0\"\n    ) == \"0\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n11 13 17\n5 2 4\n0 0 0\n\"\"\") == \"2095\"\nassert solution(r\"\"\"\n7 6 1\n2 2 2\n0 0 0\n\"\"\") == \"1199\"\nassert solution(r\"\"\"\n3 7 11\n2 3 3\n0 0 0\n\"\"\") == \"1929\"\nassert solution(r\"\"\"\n31 7 11\n2 3 4\n0 0 0\n\"\"\") == \"2189\"\nassert solution(r\"\"\"\n51 5 11\n2 3 4\n0 0 0\n\"\"\") == \"2179\"\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 13 17') == '2095'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 13 17') == '2095'\nassert solution('11 13 17 0 0') == '1036'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([11, 13, 17]) == \"2095\""
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n11 13 17\n5 2 4\n0 0 0\n\"\"\") == \"2095\"\n\nassert solution(\"\"\"\n7 19 5\n3 2 1\n0 0 0\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n13 19 5\n1 2 1\n0 0 0\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n23 21 5\n1 2 1\n0 0 0\n\"\"\") == \"21\"\n\nassert solution(\"\"\"\n100 99 3\n4 2 2\n0 0 0\n\"\"\") == \"101\""
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n11 13 17\n5 2 4\n0 0 0\n\"\"\") == \"2095\"\nassert solution(\"\"\"\n14 17 18\n5 2 4\n0 0 0\n\"\"\") == \"4450\"\nassert solution(\"\"\"\n13 17 18\n5 2 4\n0 0 0\n\"\"\") == \"9975\"\nassert solution(\"\"\"\n13 14 17\n5 2 4\n0 0 0\n\"\"\") == \"14136\"\nassert solution(\"\"\"\n13 13 17\n5 2 4\n0 0 0\n\"\"\") == \"3115\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('var a = \"Gon\"; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.') == 'My name is Gon'\n\nSample Input:\nvar a = \"Gon\";\nprint `My name is ${a}`;\nprint `My name is ${a}`;\nend.'''\n\nimport math\nimport re\nimport sys\nimport calendar\nimport datetime\nimport itertools\nimport calendar\nimport re\nfrom datetime import datetime\nimport calendar\nimport math\nimport itertools\nimport sys\nfrom collections import Counter, OrderedDict\nfrom functools import reduce\nfrom operator import mul\nfrom collections import deque\nfrom collections import OrderedDict\nimport os\nimport sys\nfrom io import StringIO\nimport unittest\nfrom unittest import main"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nend.''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nend.''') == \"My name is Gon\\nMy name is Gon\"\nassert solution('''var a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nend.''') == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"print(a); print(b); print(c);\") == \"My name is Gon\"\nassert solution(\"print(a); print(c);\") == \"My name is Gon\"\nassert solution(\"print(a); print(b);\") == \"My name is Gon\"\nassert solution(\"print(c);\") == \"My name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\nassert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint `My name is ${b}`;\\nprint `My name is ${c}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('var a = \"Gon\";\\nvar b = a;\\nvar c = `My name is ${a}`;\\nprint c;\\nprint `My name is ${b}`;\\nend.') == 'My name is Gon'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"var a = \\\"Gon\\\"; var b = a; var c = `My name is ${a}`; print(c); print(`My name is ${b}`); end.\\n\") == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nprint `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"\"\"\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"\"\"\nprint `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n\"\"\") == \"My name is Gon\\nMy name is Gon\"\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"var a = 'Gon'; var b = a; var c = `My name is ${a}`; print c; print `My name is ${b}`; end.\".split()) == \"My name is Gon\\nMy name is Gon\"\nassert solution(\"print `My name is ${a}`; print `My name is ${b}`; end.\") == \"My name is Gon\\nMy name is Gon\"\n\"\"\""
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint(c);\nprint(`My name is ${b}`);\nend.\n''') == 'My name is Gon\\nMy name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint(c);\nprint(`My name is ${b}`);\nend.\n''') == 'My name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint(c);\nprint(`My name is ${b}`);\nend.\n''') == 'My name is Gon'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1\\n1\\n2') == 'discard 2\\ndiscard 1\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('3\\n7 4\\n8\\n7\\n7\\n6\\n') == 'discard 7\\ndiscard 6\\nfill 7\\ntransfer 7 0\\ntransfer 7 1\\ndiscard 6\\nfill 7\\ntransfer 7 1\\ntransfer 7 0\\ndiscard 6\\nfill 7\\ntransfer 7 0\\ntransfer 7 1'\nassert solution('2\\n1\\n2\\n3\\n4\\n4\\n4\\n') == 'discard 4\\ndiscard 4\\ndiscard 4\\nfill 4\\ntransfer 4 0\\ntransfer 4 0\\ntransfer 4 1\\ntransfer 4 0\\ntransfer 4 1\\ntransfer 4 0\\ndiscard 4\\nfill 4\\ntransfer 4 0\\ntransfer 4 1\\ntransfer 4 0\\ntransfer 4 1'"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '2 3'\nassert solution('3') == '2 2'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"discard 2\\ndiscard 1\\ndiscard 2\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\"\nassert solution(\"5\") == \"discard 2\\ndiscard 1\\ndiscard 2\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\"\nassert solution(\"8\") == \"discard 2\\ndiscard 1\\ndiscard 2\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\"\nassert solution(\"1000\") == \"discard 2\\ndiscard 1\\ndiscard 2\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\nfill 2\\ndiscard 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\nfill 2\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\ndiscard 2\\ndiscard 2\\ndiscard 2\\ndiscard 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 2\\nfill 2\"\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('2\\n5 5\\n2\\n1') == 'impossible'"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n10\\n') == 'discard 10\\nfill 10\\ntransfer 1 0\\ndiscard 1\\n'\nassert solution('2\\n7 8\\n10\\n') == 'discard 8\\ntransfer 2 0\\ndiscard 8\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 2 1\\ndiscard 8\\ntransfer 2 0\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n7 8\n10\"\"\") == \"\"\"fill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\"\"\".strip()\n\nassert solution(\"\"\"2\n7 8\n10\"\"\") == \"\"\"impossible\"\"\".strip()\n\nassert solution(\"\"\"3\n7 8\n10\n5\n6\"\"\") == \"\"\"fill 2\ntransfer 2 1\ndiscard 1\ntransfer 2 0\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\"\"\".strip()\n\nassert solution(\"\"\"1\n10\"\"\") == \"\"\"impossible\"\"\".strip()\n\nassert solution(\"\"\"2\n2\n10\"\"\") == \"\"\"impossible\"\"\".strip()"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n7 8\n10\nSample Output:\n--------\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\nfill 2\ntransfer 2 0\ndiscard 1\n--------''') == '-1'\n\nassert solution('''\n3\n5 6\n0\nSample Output:\n--------\ndiscard 2\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\ndiscard 2\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\ndiscard 1\n--------''') == '0'\n\nassert solution('''\n4\n3 3\n6\nSample Output:\n--------\ndiscard 2\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\ndiscard 1\nfill 2\ntransfer 2 1\ntransfer 2 0\ndiscard 1\ndiscard 1\ndiscard 1\n--------''') == '0'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 0\\n'\nassert solution('1\\n4') == 'fill 1\\ntransfer 1 0\\ntransfer 1 1\\ntransfer 1 2\\ntransfer 1 3\\ndiscard 1\\nfill 1\\n'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('4\\n3 1 2 4\\n5') == 'fill 4\\ntransfer 3 1\\ntransfer 3 2\\ntransfer 3 0\\ndiscard 4\\ntransfer 4 2\\ntransfer 4 0\\ndiscard 3\\nfill 2\\ntransfer 2 0\\ntransfer 2 1\\ntransfer 2 3\\ntransfer 2 4\\ndiscard 2\\ntransfer 2 1\\ntransfer 2 0\\ntransfer 4 3\\ndiscard 4'\nassert solution('100\\n1000 1000\\n0') == 'fill 100\\ntransfer 100 1\\ntransfer 100 0\\ndiscard 1000\\ntransfer 1000 1000\\ntransfer 1000 0\\ndiscard 1000'\n"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3\n10\nSample Output:\n(1,1)\n(0,1)\n(1,0)\n''') == '((0, 1), (1, 1), (1, 0))'\nassert solution('''\n2\n5\n30\nSample Output:\n((0, 2), (1, 2), (0, 1))\n((1, 1), (0, 1))\n((2, 2), (1, 1), (0, 1))\n((0, 0), (2, 0), (1, 1), (0, 1))\n''') == '(((0, 2), (1, 2), (0, 1)), ((1, 1), (0, 1)), ((2, 2), (1, 1), (0, 1)), ((0, 0), (2, 0), (1, 1), (0, 1)))'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"27\""
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 4 3\") == \"27\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"6 6 6\") == \"0\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 4 3\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10''') == '27'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('100 4 7') == '114'\nassert solution('10 100 10') == '10'\nassert solution('1000 1000 1000') == '0'\nassert solution('1 1 1') == '1'\n\n'''\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('10 20 10') == '20'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 4 3') == '27'"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '7 4 3'\n) == '27'\n\nassert solution(\n    '30 30 30'\n) == '75'\n\nassert solution(\n    '1000000 1000000 1000000'\n) == '1000000'\n\nassert solution(\n    '1000000 1000000 1000000'\n) == '1000000'\n\nassert solution(\n    '1000000 1000000 1000000'\n) == '1000000'"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 4 3\") == \"27\"\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 4 3\n4 7 2''') == '27'\nassert solution('''10 10 3\n7 7 6''') == '37'\n'''\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 5') == '3'\nassert solution('4 3 5') == '-1'"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n1 1 1''') == '3'\nassert solution('''1 3\n2\n2''') == '-1'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3 5') == '4'\nassert solution('2 3 1 2') == '3'\nassert solution('2') == '-1'\nassert solution('1 1 1') == '-1'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '4'\nassert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '-1'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 5\\n2 3 1 2\") == \"3\"\nassert solution(\"2 2 3\\n2\\n1 1 1\") == \"4\"\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2\n1 3 3\n2''') == '4'\nassert solution('''4 3 5\n2 3 1 2\n1 3 3\n2\n1 1 1\n2\nSample Input:\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\nSample Output:\n4\n-1\n4\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3 5\") == \"3\"\nassert solution(\"2 3 1 2\") == \"4\"\nassert solution(\"2\") == \"-1\""
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '3'\n\nassert solution('''\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '-1'\n\nassert solution('''\n2\n10 20\n3\n1 4 5\n''') == '5'\n\nassert solution('''\n5\n1 2 3 5 7\n2\n1 3 4 5\n''') == '4'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3 5\n2 3 1 2\n2''') == '3'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '4', 'First'\nassert solution('''\n4 3 5\n2 3 1 2\n2\n1 3 3\n2\n1 1 1\n2\n''') == '3', 'Second'\n\nassert solution('''\n5 6 3\n5 4 4 1 2 5\n5\n6 4 4 5\n''') == '1', 'Third'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1000 3000 1000\",\n) == \"533.3333333333\"\nassert solution(\n    \"500 1000 300\",\n) == \"250.0\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('1 1 1') == '1.0'\nassert solution('0 0 0') == '0.0'\nassert solution('1000000 0 0') == '0.0'\nassert solution('10e8 10e8 10e8 10e8 10e8 10e8 10e8 10e8 10e8 10e8 10e8 10e8 10e8') == '10.0'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '3.6666666666667'\nassert solution('1000000 1000000000 1000 3000 1000') == '533.3333333333'\nassert solution('1000000 1000000000 1000 3000 1000 2000') == '533.3333333333'\nassert solution('1000000 1000000000 1000 3000 1000 2000 8000') == '533.3333333333'\nassert solution('1000000 1000000000 1000 3000 1000 2000 8000 1000') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '5.0'\nassert solution('10 10 10') == '105.0'\nassert solution('10 10 10 10') == '110.0'\nassert solution('10 10 10 10 10') == '110.0'\nassert solution('0 0 0 0 0 0') == '0.0'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n10 3\\n') == '533.3333333333'\nassert solution('1\\n100 3\\n') == '531.3333333333'\nassert solution('1\\n10 3\\n') == '531.3333333333'\nassert solution('1\\n100 3\\n') == '531.3333333333'"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n1 1 1\n10 10 10\n\"\"\") == \"533.3333333333\"\nassert solution(\n    \"\"\"\n2 2 1\n10 10 10\n\"\"\") == \"545.5\"\nassert solution(\n    \"\"\"\n3 2 1\n10 10 10\n\"\"\") == \"544.5\"\nassert solution(\n    \"\"\"\n5 5 1\n10 10 10\n\"\"\") == \"522.5\"\nassert solution(\n    \"\"\"\n5 5 2\n10 10 10\n\"\"\") == \"534.5\"\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 1000 1000\\n') == '533.3333333333'\nassert solution('10 1000 1000\\n') == '533.3333333333'\nassert solution('1000 10 1000\\n') == '533.3333333333'\nassert solution('1000 10 1000\\n') == '533.3333333333'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 3000 1000\\n') == '533.3333333333'\nassert solution('1000 1000 1000\\n') == '0'\nassert solution('10000 10000 10000\\n') == '-1'"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 0 1000') == '531.3333333333'\nassert solution('0 1 1000') == '531.3333333333'\nassert solution('1 1 1000') == '531.3333333333'\nassert solution('0 0 1000') == '501.0'\nassert solution('0 0 0') == '501.0'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 20 30\\n') == '6'\nassert solution('20 10 30\\n') == '8.3333333333'\nassert solution('20 1 0\\n') == '20'"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n''') == '17.91'\nassert solution('''\n5 1\n5 1\n5 5\n3 4\n2 2\n1 1\n6 6\n''') == '17.05'\nassert solution('''\n5 5\n5 1\n4 2\n4 5\n3 4\n2 3\n1 2\n8 8\n''') == '17.05'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2 0\\n10 0\\n10 10\\n') == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '14.14'"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 0\n10 0\n10 10\n\"\"\") == \"14.14\"\nassert solution(\"\"\"\n1 0\n1 0\n\"\"\") == \"0.00\"\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 0') == '14.14'\nassert solution('10 0') == '14.14'\nassert solution('10 10') == '20.12'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 0\n10 0\n10 10\n''') == '14.14'\nassert solution('''\n10 1\n10 0\n10 10\n''') == '13.41'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 0\n10 0\n10 10\n''') == '14.14', solution\nassert solution('''\n2 1\n2 1\n''') == '1.0', solution\nassert solution('''\n2 0\n10 0\n10 0\n''') == '1.5', solution\nassert solution('''\n2 0\n10 0\n10 10\n''') == '2.0', solution\nassert solution('''\n2 0\n10 0\n10 10\n''') == '3.0', solution\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 0\n10 0\n10 10\n''') == '14.14'\nassert solution('''\n1 1\n100 100\n''') == '1.00'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 0\\n10 0\\n10 10') == '14.14'\nassert solution('5 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0') == '0.00'\nassert solution('15 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4 0\n2 2\n1 3\n4 1\n1 2\n\"\"\") == \"4.14\"\nassert solution(\"\"\"\n8 0\n0 0\n5 5\n4 4\n4 5\n4 5\n4 5\n4 5\n4 5\n\"\"\") == \"18.17\"\nassert solution(\"\"\"\n9 0\n1 1\n2 2\n2 2\n1 2\n2 2\n1 2\n2 2\n1 2\n2 2\n\"\"\") == \"17.39\"\nassert solution(\"\"\"\n8 0\n0 0\n1 0\n4 0\n0 0\n1 0\n4 0\n0 0\n1 0\n\"\"\") == \"17.39\"\nassert solution(\"\"\"\n1 1\n0 1\n0 1\n\"\"\") == \"0.00\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '0 2\\n0 2\\n0 2\\n'\nassert solution('100 3') == '0 1\\n0 2\\n'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\\\n10\n12 30000000\n14 80000000\n15 30000000\n16 80000000\n17 30000000\n18 80000000\n19 30000000\n20 80000000\n21 80000000\n22 80000000\n23 80000000\n24 80000000\n25 80000000\n26 80000000\n27 80000000\n28 80000000\n29 80000000\n30 80000000\n31 80000000\n32 80000000\n33 80000000\n34 80000000\n35 80000000\n36 80000000\n37 80000000\n38 80000000\n39 80000000\n40 80000000\n41 80000000\n42 80000000\n43 80000000\n44 80000000\n45 80000000\n46 80000000\n47 80000000\n48 80000000\n49 80000000\n50 80000000\n51 80000000\n52 80000000\n53 80000000\n54 80000000\n55 80000000\n56 80000000\n57 80000000\n58 80000000\n59 80000000\n60 80000000\n61 80000000\n62 80000000\n63 80000000\n64 80000000\n65 80000000\n66 80000000\n67 80000000\n68 80000000\n69 80000000\n70 80000000\n71 80000000\n72 80000000\n73 80000000\n74 80000000\n75 80000000\n76 80000000\n77 80000000\n78 80000000\n79 80000000\n80 80000000\n81 80000000\n82 80000000\n83 80000000\n84 80000000\n85 80000000\n86 80000000\n87 80000000\n88 80000000\n89 80000000\n90 80000000\n91 80000000\n92 80000000\n93 80000000\n94 80000000\n95 80000000\n96 80000000\n97 80000000\n98 80000000\n99 80000000\n100 80000000\n101 80000000\n102 80000000\n103 80000000\n104 80000000\n105 80000000\n106 80000000\n107 80000000\n108 80000000\n109 80000000\n110 80000000\n111 80000000\n112 80000000\n113 80000000\n114 80000000\n115 80000000\n116 80000000\n117 80000000\n118 80000000\n119 80000000\n120 80000000\n121 80000000\n122 80000000\n123 80000000\n124 80000000\n125 80000000\n126 80000000\n127 80000000\n128 80000000\n129 80000000\n130 80000000\n131 80000000\n132 80000000\n133 80000000\n134 80000000\n135 80000000\n136 80000000\n137 80000000\n138 80000000\n139 80000000\n140 80000000\n141 80000000\n142 80000000\n143 80000000\n144 80000000\n145 80000000\n146 80000000\n147 80000000\n148 80000000\n149 80000000\n150 80000000\n151 80000000\n152 80000000\n153 80000000\n154 80000000\n155 80000000\n156 80000000\n157 80000000\n158 80000000\n159 80000000\n160 80000000\n161 80000000\n162 80000000\n163 80000000\n164 80000000\n165 80000000\n166 80000000\n167 80000000\n168 80000000\n169 80000000\n170 80000000\n171 80000000\n172 80000000\n173 80000000\n174 80000000\n175 80000000\n176 80000000\n177 80000000\n178 80000000\n179 80000000\n180 80000000\n181 80000000\n182 80000000\n183 80000000\n184 80000000\n185 80000000\n186 80000000\n187 80000000\n188 80000000\n189 80000000\n190 80000000\n191 80000000\n192 80000000\n193 80000000\n194 80000000\n195 80000000\n196 80000000\n197 80000000\n198 80000000\n199 80000000\n200 80000000\n201 80000000\n202 80000000\n203 80000000\n204 80000000\n205 80000000\n206 80000000\n207 80000000\n208 80000000\n209 80000000\n210 80000000\n211 80000000\n212 80000000\n213 80000000\n214 80000000\n215 80000000\n216 80000000\n217 80000000\n218 80000000\n219 80000000\n220 80000000\n221 80000000\n222 80000000\n223 80000000\n224 80000000\n225 80000000\n226 80000000\n227 80000000\n228 80000000\n229 80000000\n230 80000000\n231 80000000\n232 80000000\n233 80000000\n234 80000000\n235 80000000\n236 80000000\n237 80000000\n238 80000000\n239 80000000\n240 80000000\n241 80000000\n242 80000000\n243 80000000\n244 80000000\n245 80000000\n246 80000000\n247 80000000\n248 80000000\n249 80000000\n250 80000000\n251 80000000\n252 80000000\n253 80000000\n254 80000000\n255 80000000\n256 80000000\n257 80000000\n258 80000000\n259 80000000\n260 80000000\n261 80000000\n262 80000000\n263 80000000\n264 80000000\n265 80000000\n266 80000000\n267 80000000\n268 80000000\n269 80000000\n270 80000000\n271 80000000\n272 80000000\n273 80000000\n274 80000000\n275 80000000\n276 80000000\n277 80000000\n278 80000000\n279 80000000\n280 80000000\n281 80000000\n282 80000000\n283 80000000\n284 80000000\n285 80000000\n286 80000000\n287 80000000\n288 80000000\n289 80000000\n290 80000000\n291 80000000\n292 80000000\n293 80000000\n294 80000000\n295 80000000\n296 80000000\n297 80000000\n298 80000000\n299 80000000\n300 80000000\n301 80000000\n302 80000000\n303 80000000\n304 80000000\n305 80000000\n306 80000000\n307 80000000\n308 80000000\n309 80000000\n310 80000000\n311 80000000\n312 80000000\n313 80000000\n314 80000000\n315 80000000\n316 80000000\n317 80000000\n318 80000000\n319 80000000\n320 80000000\n321 80000000\n322 80000000\n323 80000000\n324 80000000\n325 80000000\n326 80000000\n327 80000000\n328 80000000\n329 80000000\n330 80000000\n331 80000000\n332 80000000\n333 80000000\n334 80000000\n335 80000000\n336 80000000\n337 80000000\n338 80000000\n339 80000000\n340 80000000\n341 80000000\n342 80000000\n343 80000000\n344 80000000\n345 80000000\n346 80000000\n347 80000000\n348 80000000\n349 80000000\n350 80000000\n351 80000000\n352 80000000\n353 80000000\n354 80000000\n355 80000000\n356 80000000\n357 80000000\n358 80000000\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == \"123457 0\\n0 2\\n123458 1\\n\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n1 2 3 9000000\n1 2 1 50000000\n1 2 2 40000000\n1 2 2 30000000\n1 2 2 40000000\n1 2 1 50000000\n''') == '0 1 1\\n2 0 2\\n1 1 1\\n2 1 1\\n1 0 0\\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n'\n\nassert solution('''\n1 0\n1\n''') == '0 1\\n1\\n'\n\nassert solution('''\n1\n1\n''') == '0 1\\n1\\n'\n\nassert solution('''\n4\n123456 14414 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n1 2\\n'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '0 2\\n0 1\\n1 0\\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '123456 0'\nassert solution('2 4') == '2 5'\nassert solution('1 2') == '1 2'\n\nstdin = \"\"\"\n10 10\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n12345678 9678912345\n\"\"\"\n\nprint(solution(stdin))\n\"\"\"\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    3 3\n    123456 14323 1700000\n    123458 41412 1900000\n    123457 15221 1800000\n    123456\n    123458\n    123457\n''') == '123457 0\\n0 2\\n123458 1\\n'''\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n0 2\\n123457 2\\n0 2\\n'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == \"123457 0\\n0 2\\n123458 1\\n\"\"\n\nassert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n\"\"\") == \"123457 1\\n0 2\\n123458 0\\n\"\"\n\nassert solution(\"\"\"\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n\"\"\") == \"123457 1\\n0 2\\n123457 0\\n\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n6\n3\n4\n1\n''') == '90'\nassert solution('''\n6\n3\n1\n2\n5\n4\n''') == '100'\nassert solution('''\n2\n7\n1\n2\n3\n4\n5\n''') == '100'\nassert solution('''\n4\n10\n9\n8\n7\n1\n''') == '102'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n1 2 3 4 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"101010\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 10 2 5\\n2 4 5 1 3\\n') == '90'\nassert solution('4\\n10 5 7 4\\n3 4 5 3 1\\n') == '85'\nassert solution('3\\n5 1 5 5\\n1 2 2 2 2\\n') == '13'"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\nassert solution(\"\"\"\n5\n3 1 2 5 5\n\"\"\") == \"30\"\nassert solution(\"\"\"\n5\n3 2 1 3 5\n\"\"\") == \"5\"\n\"\"\"\n\nIn the wild west, many bodies were found dead. The train was long and dangerous.\n\nThey also found that there was a massive chaos in the train. The amount of chaos was equal to the number of passengers multiplied by the number of passengers in each train segment. The passengers died out of the train and they were buried alive in the train.\n\nHint: Don't forget to round up to the nearest multiple of $10$ in the solution.\n\nSince the amount of chaos in the train is equal to the sum of the amount of chaos in each train segment multiplied by the number of train segments, a train segment with even amount of chaos could have even amount of passengers that got blown out.\n\nIn the wild west, many bodies were found dead. The train was long and dangerous.\n\nThey also found that there was a massive chaos in the train. The amount of chaos was equal to the number of passengers multiplied by the number of passengers in each train segment. The passengers died out of the train and they were buried alive in the train.\n\nHint: Don't forget to round up to the nearest multiple of $10$ in the solution.\n\nThe amount of chaos in the train was equal to the sum of the amount of chaos in each train segment multiplied by the number of train segments. The passengers died out of the train and they were buried alive in the train.\n\"\"\""
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\n\nassert solution(\"\"\"\n4\n6 6 3 6\n1 2 2\n\"\"\") == \"18\"\n\nassert solution(\"\"\"\n4\n1 1 1 1\n1 1 1 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n8\n3 3 3 3 3 1 1 1\n3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"57\"\n\nassert solution(\"\"\"\n5\n5 5 5 5 5\n5 5 5 5 5\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('3') == '60'\nassert solution('4') == '130'\nassert solution('5') == '100'\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\nassert solution('100\\n15 50 5 20 3\\n30 3 2 1') == '125'\nassert solution('15\\n10 2 5 3\\n1') == '10'\n\"\"\""
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n3 5 10 2 5\n2 4 5 1 3\n\"\"\") == \"90\"\nassert solution(\"\"\"\n3\n2 4 5 1 3\n3 5 10 2 5\n\"\"\") == \"100\"\nassert solution(\"\"\"\n1\n4 2 5 3\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '90'\nassert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\nassert solution('5\\n1 1 2 1 3\\n1 1 1 1 2') == '4'\n\"\"\""
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 5 10 2 5\\n2 4 5 1 3\\n\") == \"90\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n\") == \"108\"\nassert solution(\"5\\n2 3 5 10 2 5\\n4 5 1 3 2\\n\") == \"106\"\nassert solution(\"3\\n6 9 12 4 4 2 1\\n7 7 8 2 1\\n\") == \"137\"\nassert solution(\"3\\n1 4 6 8\\n5 2 3\\n\") == \"55\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10\n1 2 6\n0 4 3\n0 8 2\n''') == '6.000000'\n'''\n\nimport math"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10\") == \"6.000000\"\nassert solution(\"3 10\") == \"7.000000\"\nassert solution(\"4 10\") == \"9.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\nassert solution(\"2 2 4\\n1 0 0\\n0 1 2\") == \"2.000000\"\nassert solution(\"3 10\\n1 2 6\\n0 4 3\\n0 8 2\") == \"6.000000\"\nassert solution(\"3 5\\n1 2 3\\n0 4 5\\n0 8 2\") == \"5.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"6.000000\"\n\nassert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n1 1 6\n\"\"\") == \"2.60000\"\n\nassert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n0 6 2\n\"\"\") == \"10.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 10\n1 2 6\n0 4 3\n0 8 2\n''') == '6.000000'\nassert solution('''\n3 10\n1 2 6\n0 4 3\n0 8 2\n2 4 1\n''') == '8.000000'\n\nstdin = input()\nn, d = [int(i) for i in input().split()]\n\na = []\nfor i in range(n):\n    a.append([int(j) for j in input().split()])\n\na.sort()"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10') == '6.000000'\nassert solution('1 2 6') == '3.000000'\nassert solution('0 4 3') == '1.000000'\nassert solution('0 8 2') == '4.000000'\nprint('\"Run\" is good. Coder is not cool.')"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1.000000', '1 2 3'\nassert solution('1 1 4') == '1.000000', '1 1 4'\nassert solution('1 2 3') == '1.000000', '1 2 3'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"6.000000\""
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"6.000000\"\n\nassert solution(\"\"\"\n3 10\n1 2 6\n0 4 3\n0 8 2\n\"\"\") == \"6.000000\"\n\nassert solution(\"\"\"\n2 1\n0\n\"\"\") == \"1.000000\"\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n') == '6.000000'"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.') == '2.'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n0 0\n0 0\n1.\n..\n0\nSample Output:\n2\n..\n1.\n..\n1.\n''') == '''\n1.\n..\n2.\n..\n1.\n'''"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1.\\n0.\\n1.\\n1.\\n0.\\n0.\\n') == '1.\\n0.\\n0.\\n'\nassert solution('10\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1.1\\n1."
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.') == '1.'\nassert solution('3\\n0 0\\n0 0\\n1.') == '1.\\n1.\\n1.'\nassert solution('3\\n0 0\\n0 0\\n1.\\n0 0\\n0 0\\n0 0\\n1.') == '1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.'\nassert solution('3\\n0 0\\n0 0\\n1.\\n0 0\\n0 0\\n0 0\\n1.\\n0 0\\n0 0\\n0 0\\n1.') == '1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.'\nassert solution('10\\n2 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n1.\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n0 0\\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1.2.1.1.2.1.1.2.1.2.1.1.2.2.1.1.2.2.1.1.2.1.1.1.1.1.2.2.1.2.1.2.2.1.2.1.2.1.1.2.1.2.2.1.2.2.2.1.1.2.1.2.2.1.1.1.1.2.1.2.1.2.1.1.2.1.2.1.2.2.2.1.2.1.1.1.1.1.1.1.1.1.1.2.1.2.1.1.1.2.1.1.2.1.2.1.1.1.1.2.1.2.1.1.2.1.2.1.1.2.1.1.1.1.1.1.2.1.1.1.1.1.1.2.1.1.1.1.1.1.1.1.1.2.1.1.1.1.2.1.1.1.1.1.2.1.1.1.1.1.1.1.1.1.1.1.2.1.1.1.1.1.1.2.1.2.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.2.1.1.2.1.1.1.1.1.1.1.1.2.1.1.1.1.1.2.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.2.1.1.1.1.1.1.1.1.1.1.1.1.1.2.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.2.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.2.1.2.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1.1"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n0 0\n0 0\n1.\n..\n0\n''') == '1.\\n.\\n'\n\nassert solution('''10\n0 0\n0 0\n1.\n..\n0\n''') == '1.\\n.\\n'\n\nassert solution('''10\n0 0\n0 0\n1.\n.\n.\n.\n.\n.\n.\n.\n''') == '1.\\n.\\n'\n\nassert solution('''10\n0 0\n0 0\n1.\n.\n.\n.\n.\n.\n.\n.\n.\n''') == '1.\\n.\\n'\n\nassert solution('''2\n0 0\n0 0\n1.\n.\n.\n.\n.\n.\n''') == '1.\\n.\\n'"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n0.5\\n0.5\\n1.5\\n0.5\\n0.5\\n1.5\\n') == '1.5\\n0.5\\n0.5\\n1.5\\n', 'First'\nassert solution('1\\n3\\n0.5\\n0.5\\n1.5\\n0.5\\n0.5\\n1.5\\n') == '1.5\\n0.5\\n0.5\\n1.5\\n', 'Second'\nassert solution('1\\n1\\n0.5\\n0.5\\n1.5\\n0.5\\n0.5\\n1.5\\n') == '0.5\\n0.5\\n1.5\\n0.5\\n', 'Third'\nassert solution('3\\n0.5\\n0.5\\n0.5\\n1.5\\n0.5\\n0.5\\n1.5\\n') == '1.5\\n0.5\\n0.5\\n1.5\\n', 'Fourth'\nassert solution('3\\n0.5\\n0.5\\n0.5\\n1.5\\n0.5\\n0.5\\n1.5\\n') == '1.5\\n0.5\\n0.5\\n1.5\\n', 'Fifth'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 0\\n0 0\\n1.\") == \"1.\\n..\\n1.\"\nassert solution(\"5\\n0.\\n0.\\n0.\\n1.\\n0.\") == \"1.\\n..\\n1.\\n0.\\n1.\"\nassert solution(\"4\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\") == \"1.\\n..\\n1.\\n0.\\n1.\"\nassert solution(\"8\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\") == \"1.\\n..\\n1.\\n0.\\n1.\"\nassert solution(\"15\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n0.\\n1.\\n0.\\n0.\\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2.1\\n2.2\\n1.2\\n..\\n.1\\n'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('8') == '1'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '1 1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '1\\n2\\n3'\nassert solution('''\n4\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '0\\n1\\n2\\n3'\nassert solution('''\n1\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '2\\n1\\n1'\nassert solution('''\n4\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '2\\n1\\n1\\n2\\n3'\nassert solution('''\n1\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '0\\n1\\n1\\n2\\n3'\n'''\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution('''\n1\n1 abca\n2 1\n2 3\n''') == '1'\n\nSample Input:\n5\nabc\nabc\nabc\ncba\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('9') == '1'\n\nassert solution('10') == '1'\n\nassert solution('20') == '1'"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '1', 'First'\nassert solution('''\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '2', 'Second'\nassert solution('''\n3\nabc\nabc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '3', 'Third'\n'''"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3''') == '1'\nassert solution('''5\ncba\nabac\nabcde\ncdefg\nefghi\n''') == '1'\nassert solution('''15\nabcabcabc\nabc\nab\nabca\nabcdeabcdefg\nabcd\nabcde\nabcdecabcdefg\nabcdabc\nabcd\nabc\n''') == '1'\nassert solution('''20\nabcabcabc\nabc\nab\nabca\nabcdeabcdefg\nabcd\nabcde\nabcdecabcdefg\nabcdabc\nabcd\nabc\n''') == '1'\nassert solution('''30\nabcabcabc\nabc\nab\nabca\nabcdeabcdefg\nabcd\nabcde\nabcdecabcdefg\nabcdabc\nabcd\nabc\n''') == '1'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\na\nbc\nabc\n3\n1 abca\n2 1\n2 3\n''') == '1'\nassert solution('''\n10\na\nbc\nabc\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n\n''') == '2', \"First\"\nassert solution('''\n\nabc\n\n''') == '2', \"Second\"\nassert solution('''\n\n''') == '0', \"Third\"\nassert solution('''\n\n''') == '0', \"Fourth\"\nassert solution('''\n\na\n\n''') == '1', \"Fifth\"\n\n''') == '0', \"Sixth\"\n\n''') == '0', \"Seventh\"\n\n''') == '1', \"Eighth\"\n\n''') == '2', \"Nineth\"\n\n''') == '3', \"Tenth\"\n\n''') == '3', \"Eleventh\"\n\n''') == '2', \"Twelfth\"\n\n''') == '1', \"Thirteenth\"\n\n''') == '2', \"Fourteenth\"\n\n''') == '1', \"Fifteenth\"\n\n''') == '1', \"Sixteenth\"\n\n''') == '2', \"Seventeenth\"\n\n''') == '0', \"Nineteenth\"\n\n''') == '3', \"Twentyfirst\"\n\n''') == '2', \"Twentysecond\"\n\n''') == '1', \"Twentythird\"\n\n''') == '3', \"Twentyfourth\"\n\n''') == '1', \"Twentyfifth\"\n\n''') == '2', \"Twentysixth\"\n\n''') == '1', \"Twentyseventh\"\n\n''') == '2', \"Twentyeighth\"\n\n''') == '0', \"Twentyninth\"\n\n''') == '1', \"Twentyfirst\"\n\n''') == '2', \"Twentysecond\"\n\n''') == '1', \"Twentythird\"\n\n''') == '1', \"Twentyfourth\"\n\n''') == '2', \"Twentyfifth\"\n\n''') == '1', \"Twentysixth\"\n\n''') == '2', \"Twentyseventh\"\n\n''') == '2', \"Twentyeighth\"\n\n''') == '1', \"Twentyninth\"\n\n''') == '2', \"Twentyfirst\"\n\n''') == '1', \"Twentysecond\"\n\n''') == '2', \"Twentythird\"\n\n''') == '2', \"Twentyfourth\"\n\n''') == '1', \"Twentyfifth\"\n\n''') == '2', \"Twentysixth\"\n\n''') == '1', \"Twentyseventh\"\n\n''') == '2', \"Twentyeighth\"\n\n''') == '1', \"Twentyninth\"\n\n''') == '1', \"Twentyfirst\"\n\n''') == '2', \"Twentysecond\"\n\n''') == '2', \"Twentythird\"\n\n''') == '2', \"Twentyfourth\"\n\n''') == '1', \"Twentyfifth\"\n\n''') == '2', \"Twentysixth\"\n\n''') == '1', \"Twentyseventh\"\n\n''') == '2', \"Twentyeighth\"\n\n''') == '2', \"Twentyninth\"\n\n''') == '1', \"Twentyfirst\"\n\n''') == '2', \"Twentysecond\"\n\n''') == '2', \"Twentythird\"\n\n''') == '2', \"Twentyfourth\"\n\n''') == '1', \"Twentyfifth\"\n\n''') == '2', \"Twentysixth\"\n\n''') == '1', \"Twentyseventh\"\n\n''') == '2', \"Twentyeighth\"\n\n''') == '1', \"Twentyninth\"\n\n''') == '2', \"Twentyfirst\"\n\n''') == '1', \"Twentysecond\"\n\n''') == '2', \"Twentythird\"\n\n''') == '2', \"Twentyfourth\"\n\n''') == '1', \"Twentyfifth\"\n\n''') == '2', \"Twentysixth\"\n\n''') == '1', \"Twentyseventh\"\n\n''') == '2', \"Twentyeighth\"\n\n''') == '1', \"Twentyninth\"\n\n''') == '2', \"Twentyfirst\"\n\n''') == '1', \"Twentysecond\"\n\n''') == '2', \"Twentythird\"\n\n''') == '2', \"Twentyfourth\"\n\n''') == '1', \"Twentyfifth\"\n\n''') == '2', \"Twentysixth\"\n\n''') == '1', \"Twentyseventh\"\n\n''') == '2', \"Twentyeighth\"\n\n''') == '1', \"Twentyninth\"\n\n''') == '2', \"Twentyfirst\"\n\n''') == '1', \"Twentysecond\"\n\n''') == '2', \"Twentythird\"\n\n''') == '2', \"Twentyfourth\"\n\n''') == '1', \"Twentyfifth\"\n\n''') == '2', \"Twentysixth\"\n\n''') == '1', \"Twentyseventh\"\n\n''') == '2', \"Twentyeighth\"\n\n''') == '1', \"Twentyninth\"\n\n''') == '2', \"Twentyfirst\"\n\n''') == '1', \"Twentysecond\"\n\n''') == '2', \"Twentythird\"\n\n''') == '2', \"Twentyfourth\"\n\n''') == '1', \"Twentyfifth\"\n\n''') == '2', \"Twentysixth\"\n\n''') == '1', \"Twentyseventh\"\n\n''') == '2', \"Twentyeighth\"\n\n''') == '1', \"Twentyninth\"\n\n''') == '2', \"Twentyfirst\"\n\n''') == '1', \"Twentysecond\"\n\n''') == '2', \"Twentythird\"\n\n''') == '2', \"Twentyfourth\"\n\n''') == '1', \"Twentyfifth\"\n\n''')"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5 2') == 'YES'\nassert solution('1 1 1 1') == 'NO'\nassert solution('2 4 5 2') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 1 1''') == 'YES'\nassert solution('''1 1 1 2''') == 'NO'\nassert solution('''1 1 1 1 1 1 1 1''') == 'YES'\nassert solution('''1 1 1 1 1 2 1 1''') == 'NO'\nassert solution('''1 1 1 1 2 1 1 1''') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 2\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"NO\"\n\"\"\""
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('2 3 6 3') == 'NO'\nassert solution('2 3 6 4') == 'YES'\nassert solution('5 4 3 2') == 'NO'\nassert solution('5 4 3 3') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('0 0 0 0') == 'NO'\nassert solution('1 3 1 3') == 'YES'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1 1 1''') == 'YES'\nassert solution('''1 2 1 1''') == 'NO'\nassert solution('''1 3 1 1''') == 'YES'\nassert solution('''1 1 5 1''') == 'NO'\n\n'''\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 2 2 2\") == \"NO\"\nassert solution(\"3 3 3 3\") == \"YES\"\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1 1 1''') == 'YES'\nassert solution('''1 2 3 4''') == 'NO'\nassert solution('''1 3 3 3''') == 'NO'\nassert solution('''1 5 1 2''') == 'NO'\nassert solution('''1 2 5 1''') == 'NO'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"2 1 2 3\") == \"YES\"\nassert solution(\"4 1 5 2\") == \"YES\"\nassert solution(\"5 3 1 4\") == \"NO\"\nassert solution(\"10 1 2 5\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 96\") == \"80.5696000000\"\nassert solution(\"-1 -1 -1\") == \"-1.4159673888888888\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n') == '80.56960000', \"Wrong\"\nassert solution('3 3\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n') == '80.56960000', \"Wrong\"\nassert solution('3 4\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n') == '80.56960000', \"Wrong\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 96\n-0.0080 1.5417 25.0000\n-0.0080 1.5417 25.0000''') == '80.5696000000'\nprint('all tests passed')\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 96\") == \"80.5696000000\"\nassert solution(\"2 10\") == \"33.3333333333\"\nassert solution(\"2 10\") == \"83.3333333333\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('3 2\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '81.9806000000'\n\"\"\"\n\nimport math\n\nn, t = list(map(float, input().split(' ')))\n\na, b, c = list(map(float, input().split(' ')))"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 96 -0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('3 1 2') == '3.75'\nassert solution('4') == '11.75'\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 -0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"2 1 -0.0080 1.5417 25.0000\") == \"80.5696000000\"\nassert solution(\"3 4 -0.0080 1.5417 25.0000\") == \"80.5696000000\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5696000000'\nassert solution('3 1\\n1 1 1') == '4.000000000'\nassert solution('3 1\\n0 1 1') == '4.000000000'\nassert solution('3 1\\n-1 1 1') == '3.5000000000'\nassert solution('3 1\\n-10 1 1') == '0.0000000000'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 96\\n-0.0080 1.5417 25.0000\\n-0.0080 1.5417 25.0000') == '80.5634'\n\"\"\"\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 96') == '80.5696'\nassert solution('-0.0080 1.5417 25.0000') == '80.5696'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 0 0 1 1 1 0 0 1\n''') == '2'\nassert solution('''\n3 0 0 1 1 1 0 0 1\n''') == '3'\nassert solution('''\n4 0 0 1 1 1 0 0 1\n''') == '3'"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 0 1 0 0 1 0 1') == '2'\nassert solution('1 1 1 0 0 1 1 1') == '3'\nassert solution('1 1 1 1 0 1 1 1') == '4'\nassert solution('1 1 1 1 1 1 1 1') == '5'\nassert solution('1 1 1 1 1 1 1 1') == '6'"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4 0 0 1 1 1 0 0 1\"\n) == \"2\"\nassert solution(\n    \"4 0 0 1 1 1 0 0 1 0\"\n) == \"1\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('3 0 1 1 1 1 1 1') == '3'\nassert solution('1') == '1'\n\"\"\"\n\nn = int(input())\nholes = list(map(int, input().split()))\ncount = 0\nmax = 0\n\nfor i in range(n):\n    if holes[i] == 0:\n        count += 1\n        continue\n    for j in range(i+1, n):\n        if holes[j] == 0:\n            count += 1\n            continue\n        if holes[i] > 0:\n            for k in range(j+1, n):\n                if holes[k] == 0:\n                    count += 1\n                    continue\n                if holes[j] > 0:\n                    for l in range(k+1, n):\n                        if holes[l] == 0:\n                            count += 1\n                            continue\n                        if holes[k] > 0:\n                            for m in range(l+1, n):\n                                if holes[m] == 0:\n                                    count += 1\n                                    continue\n                                if holes[k] > 0:\n                                    for o in range(m+1, n):\n                                        if holes[o] == 0:\n                                            count += 1\n                                            continue\n                                    if holes[k] > 0:\n                                        for p in range(o+1, n):\n                                            if holes[p] == 0:\n                                                count += 1\n                                                continue\n                                        if holes[k] > 0:\n                                            for q in range(p+1, n):\n                                                if holes[q] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for r in range(q+1, n):\n                                                if holes[r] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for s in range(r+1, n):\n                                                if holes[s] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for t in range(s+1, n):\n                                                if holes[t] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for u in range(t+1, n):\n                                                if holes[u] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for v in range(u+1, n):\n                                                if holes[v] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for w in range(v+1, n):\n                                                if holes[w] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for x in range(w+1, n):\n                                                if holes[x] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for y in range(x+1, n):\n                                                if holes[y] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for z in range(y+1, n):\n                                                if holes[z] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for a in range(z+1, n):\n                                                if holes[a] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for b in range(a+1, n):\n                                                if holes[b] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for c in range(b+1, n):\n                                                if holes[c] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for d in range(c+1, n):\n                                                if holes[d] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for e in range(d+1, n):\n                                                if holes[e] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for f in range(e+1, n):\n                                                if holes[f] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for g in range(f+1, n):\n                                                if holes[g] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for h in range(g+1, n):\n                                                if holes[h] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for i in range(h+1, n):\n                                                if holes[i] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for j in range(i+1, n):\n                                                if holes[j] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for k in range(j+1, n):\n                                                if holes[k] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for l in range(k+1, n):\n                                                if holes[l] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for m in range(l+1, n):\n                                                if holes[m] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for n in range(m+1, n):\n                                                if holes[n] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for o in range(n+1, n):\n                                                if holes[o] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for p in range(o+1, n):\n                                                if holes[p] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for q in range(p+1, n):\n                                                if holes[q] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k] > 0:\n                                            for r in range(q+1, n):\n                                                if holes[r] == 0:\n                                                    count += 1\n                                                    continue\n                                        if holes[k]"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1\\n') == '2'\nassert solution('6 -1 -1\\n4 1 1\\n-1 2 1\\n-1 2 2\\n1 3 3\\n0 0 0\\n1 1 1\\n0 0 0\\n0 0 0\\n') == '4'\nassert solution('20 -1 -1\\n1 4 1\\n-1 2 1\\n-1 2 2\\n1 3 3\\n0 0 0\\n1 1 1\\n0 0 0\\n0 0 0\\n') == '5'\nassert solution('30 -1 -1\\n4 1 1\\n-1 2 1\\n-1 2 2\\n1 3 3\\n0 0 0\\n1 1 1\\n0 0 0\\n0 0 0\\n') == '4'\nassert solution('50 -1 -1\\n7 1 1\\n-1 2 1\\n-1 2 2\\n1 3 3\\n0 0 0\\n1 1 1\\n0 0 0\\n0 0 0\\n') == '4'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\n\n\"\"\""
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('5 0 0 2 0 0 0 0') == '2'\nassert solution('5 2 2 2 2 2 2 2') == '5'\nassert solution('10 0 0 0 1 0 0 0 1 0 0 0 0 0 1 1 1 1 0') == '8'\nassert solution('5 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1') == '11'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 0 0 1 1 1 0 0 1\n''') == '2'\nprint(solution('''5 0 0 1 1 1 0 0 1 1\n'''))"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 2 2 1 1 1 0 0 1\") == \"2\"\nassert solution(\"2 2 2 2 1 1 1 0 0 1\") == \"2\"\nassert solution(\"3 3 0 0 1 1 1 0 0 1\") == \"2\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n') == '1400'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n') == 'impossible'\nassert solution('3 2 3\\n0 0 400\\n1000 0 400\\n2000 0 400\\n300 0 150\\n1300 0 150\\n') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 3') == 'impossible'\nassert solution('0 0 400') == 'impossible'\nassert solution('1000 0 400') == 'impossible'\nassert solution('2000 0 400') == 'impossible'\nassert solution('300 0 150') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 3') == 'impossible'\nassert solution('7 3 6') == '1700'\nassert solution('4 3 3') == '1400'"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == \"1400\"\nassert solution('''3 2 3\n0 0 400\n2000 0 400\n1500 0 400\n300 0 150\n1300 0 150''') == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 3') == '1400'\nassert solution('1 2 1') == 'impossible'\n\n\"\"\"\n\n\nimport math\nimport copy\nimport random\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 3') == 'impossible'\nassert solution('6 2 8 3 4 1 0 5 3 1 2 3 1 1 1') == 'impossible'\nassert solution('8 6 3 5 1 1 1 1 1 1') == 'impossible'\nassert solution('2 2 2 2 2 2 2 2 2') == 'impossible'\nassert solution('10 10 10 10 10 10 10 10 10') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 3') == \"impossible\"\nassert solution('20 10 5') == \"infinite\"\nassert solution('1 1 1') == \"infinite\"\nassert solution('2 2 1') == \"impossible\"\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150\n''') == '1400'\n\nassert solution('''\n2 2 2\n2 5 5\n0 0 400\n1 0 400\n2 0 400\n''') == 'impossible'\n\nassert solution('''\n2 2 2\n1 2 3\n0 0 400\n1 0 400\n2 0 400\n''') == 'impossible'\n"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == '1400'\nassert solution('''6 5 3\n0 0 300\n1000 0 400\n2000 0 400\n3000 0 300\n4000 0 300\n5000 0 300''') == '16000'\nassert solution('''3 2 3\n0 0 400\n1000 0 400\n2000 0 400\n300 0 150\n1300 0 150''') == 'impossible'"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 3') == 'impossible'\nassert solution('3 2 3') == '1400'\nassert solution('1 1 3') == '1400'\nassert solution('3 4 1') == '1400'\nassert solution('10000 2 20000 1') == 'impossible'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam''') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\nreykjavik dublin\nbrussels helsinki\n''') == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"10 15\\n\"\n    \"stockholm\\n\"\n    \"amsterdam\\n\"\n    \"london\\n\"\n    \"berlin\\n\"\n    \"copenhagen\\n\"\n    \"oslo\\n\"\n    \"helsinki\\n\"\n    \"dublin\\n\"\n    \"reykjavik\\n\"\n    \"brussels\\n\"\n    \"oslo stockholm\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen\\n\"\n    \"oslo berlin\\n\"\n    \"oslo helsinki\\n\"\n    \"oslo dublin\\n\"\n    \"oslo reykjavik\\n\"\n    \"oslo brussels\\n\"\n    \"oslo amsterdam\\n\"\n    \"oslo london\\n\"\n    \"oslo copenhagen"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 15\\nstockholm\\namsterdam\\nlondon\\ndublin\\nberlin\\n') == '3907'\nassert solution('10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\n') == '3907'\nassert solution('10 10\\nstockholm\\namsterdam\\nlondon\\nberlin\\n') == '4047'\nassert solution('5 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\n') == '4047'\n\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 15\") == \"3907\"\nassert solution(\"20 40\") == \"3906\"\nassert solution(\"10 40\") == \"3906\"\nassert solution(\"20 40\") == \"3906\"\nassert solution(\"10 20\") == \"3906\""
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3907'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10 15\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam''') == '3907'"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 15') == '3907'\nassert solution('2 2') == '1'"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 15\") == \"3907\"\nassert solution(\"10 15\\nstockholm\\namsterdam\\nlondon\\nberlin\\ncopenhagen\\noslo\\helsinki\\ndublin\\nreykjavik\\nbrussels\\noslo stockholm 415\\nstockholm helsinki 396\\noslo london 1153\\noslo copenhagen 485\\nstockholm copenhagen 522\\ncopenhagen berlin 354\\ncopenhagen amsterdam 622\\helsinki berlin 1107\\nlondon amsterdam 356\\nberlin amsterdam 575\\nlondon dublin 463\\nreykjavik dublin 1498\\nreykjavik oslo 1748\\nlondon brussels 318\\nbrussels amsterdam 173\\nstockholm amsterdam\") == \"3907\"\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 20\nstockholm\namsterdam\nlondon\nberlin\ncopenhagen\noslo\nhelsinki\ndublin\nreykjavik\nbrussels\noslo stockholm 415\nstockholm helsinki 396\noslo london 1153\noslo copenhagen 485\nstockholm copenhagen 522\ncopenhagen berlin 354\ncopenhagen amsterdam 622\nhelsinki berlin 1107\nlondon amsterdam 356\nberlin amsterdam 575\nlondon dublin 463\nreykjavik dublin 1498\nreykjavik oslo 1748\nlondon brussels 318\nbrussels amsterdam 173\nstockholm amsterdam\noslo london\n''') == '3907'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\nassert solution(\"5 6\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n2 2\") == \"2\"\nassert solution(\"5 5\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n2 2\") == \"3\"\nassert solution(\"5 6\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n2 2\") == \"1\"\nassert solution(\"5 6\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n1 2\") == \"0\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"3 1 3 4 2\\n\"\n    \"0 5\\n\"\n    \"0 9\\n\"\n    \"4 5\\n\"\n    \"2 1\\n\"\n) == \"1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"4 1\") == \"1\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\nprint(\"check complete!\")"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2'"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n3 1\") == \"1\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n3 1\\n3 1\\n4 5\\n5 5\\n4 5\\n3 1\") == \"2\"\nassert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n3 1\\n3 1\\n4 5\\n5 5\\n4 5\\n3 1\\n3 1\\n4 5\\n4 5\\n3 1\") == \"1\""
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\") == \"2\"\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '2'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"2\"\nassert solution(\"3 1 3 4 2\") == \"1\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"4 5\") == \"1\""
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n3 1 3 4 2\n0 5\n0 9\n4 5\n2 1\n''') == '2'\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5\\n01001\\n11100\\n10111') == '00010'\n'''\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 1\\n11 100\\n01 001\\n') == '00010'\nassert solution('6 4\\n00100 11000 10011\\n1 0011 1\\n11 1001 1\\n00011 1\\n10001 0101\\n') == '00100'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4') == '01110'\nassert solution('5 3') == '01100'\n\n--Input--\n3 5\n01001\n11100\n10111\n--Output--\n00010\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join(['0','1']*10)) == '00010'"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 2\n01001\n11100\n10111\n00111\n00010\n\"\"\") == \"00010\"\n\"\"\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"00010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3 5\n01001\n11100\n10111\n\"\"\") == \"00010\"\n\nassert solution(\n\"\"\"\n2 1\n1\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n3 4\n11111\n00001\n00011\n\"\"\") == \"00001\"\n\nassert solution(\n\"\"\"\n3 7\n101111\n01001\n00111\n11100\n00011\n01001\n00001\n11100\n00011\n\"\"\") == \"00011\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"0001\"\nassert solution(\"5 4\") == \"0000\"\nassert solution(\"5 4\") == \"0000\"\n\"\"\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"0100\"\nassert solution(\"4 5\") == \"01001\"\nassert solution(\"2 5\") == \"01010\"\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5') == '00010'\nassert solution('4 1') == '01110'\nassert solution('5 2') == '01110'\nassert solution('6 1') == '01110'\nassert solution('6 2') == '01110'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\") == \"impossible\"\nassert solution(\"1\\n2 2\") == \"impossible\"\nassert solution(\"1\\n2 2 1\") == \"impossible\"\nassert solution(\"1\\n2 2 1 2\") == \"possible\"\nassert solution(\"1\\n2 2 1 2 1\") == \"possible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 1\n2 2\n1 2\n3 1\n2 1\n''') == 'impossible'\nassert solution('''\n2\n1 2\n2 1\n''') == 'possible'\n\n2\n0 4\n6 12\n''')\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2\n0 4\n6 12\n''') == 'possible'\nassert solution('''\n5 2\n0 1\n4 6\n''') == 'impossible'\n'''\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\\\n1\n2\n0 5\n6 10\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\\\n10\n3\n5\n1\n0 6\n3 7\n3 8\n4 9\n7 10\n5 11\n6 12\n2 14\n0 10\n5 16\n4 17\n6 18\n2 20\n\"\"\") == \"possible\""
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 3\\n4 5\\n3') == 'possible'\nassert solution('2\\n1 1\\n0 1') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 2\\n0 4\\n6 12\\n') == 'possible'\nassert solution('1\\n3\\n5\\n7\\n9\\n') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"possible\"\nassert solution(\"\"\"\n5\n4 8\n0 8\n0 6\n7 6\n0 7\nSample Input:\n2\n3 1\n0 0\n3 1\nSample Output:\nimpossible\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n0 4\\n6 12') == 'possible'\nassert solution('10\\n3 4\\n2 3\\n6 2\\n1 1\\n4 1\\n5 1\\n3 1\\n') == 'impossible'\n\"\"\"\n\nfrom heapq import heapify, heappush, heappop"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n6 2\\n0 4') == 'possible'\nassert solution('1\\n6 12\\n0 4') == 'impossible'\nassert solution('1\\n6 12\\n0 4\\n10 16\\n0 4') == 'possible'\nassert solution('1\\n6 12\\n0 4\\n10 16\\n0 4\\n15 20\\n0 4') == 'impossible'\nassert solution('1\\n6 12\\n0 4\\n10 16\\n0 4\\n15 20\\n0 4\\n5 30\\n0 4') == 'impossible'\n"
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2\\n0 4\\n6 12') == 'possible'\nassert solution('5 1\\n0 3\\n2 2\\n4 4\\n7 2\\n9 3') == 'impossible'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '4'\nassert solution('0') == '0'\nassert solution('0') == '0'\n'''\n\nn = int(input())\n\nfor i in range(n):\n    x, y, r = map(float, input().split())\n    dist = (x*x + y*y)**.5\n    if dist <= r:\n        print(1)\n    else:\n        print(2)\n        "
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == \"2\"\nassert solution('''\n1\n5 1 -1\n''') == \"1\"\n\nsolution('''\n5\n5 0 1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == \"2\"\n\nsolution('''\n1\n5 1 -1\n''') == \"1\"\n\nsolution('''\n5\n5 0 -1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == \"1\"\n\nsolution('''\n10\n5 0 -1\n10 0 1\n0 5 1\n0 -5 1\n-5 0 1\n''') == \"1\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('7\\n2 0 1\\n5 0 1\\n0 -5 1\\n-5 0 1\\n-5 0 1\\n0 5 1') == '1'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('10\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '1'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n1 1\n3 2\n\n2\n0 0 1\n1 2\n1 1\n\n3\n1 0 1\n0 1\n1 1\n''') == '2'\n\nassert solution('''\n3\n1 2 3\n1 1\n3 2\n\n1\n0 0 1\n1 2\n1 1\n\n2\n0 0 1\n0 1\n1 1\n''') == '3'\n\nassert solution('''\n3\n1 0 1\n0 1\n1 1\n\n2\n0 0 1\n0 1\n1 1\n\n3\n1 0 1\n0 1\n1 1\n\n''') == '3'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('5 0 1') == '2'\nassert solution('10 0 1') == '3'\nassert solution('0 5 1') == '3'\nassert solution('0 -5 1') == '3'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"5 0 1\") == \"2\"\nassert solution(\"10 0 1\") == \"2\"\nassert solution(\"0 5 1\") == \"1\"\nassert solution(\"0 -5 1\") == \"1\"\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0 1') == '1'\nassert solution('5\\n0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1\\n') == '2'\n'''\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n5\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nS 3!bobby_dies it_goes_on_and_on\nS 4!bobby_dies\nS 5!bobby_dies\n''') == 'Yes'\nassert solution('''\n5\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nS 3!bobby_dies it_goes_on_and_on\nS 4!bobby_dies\nS 5!bobby_dies\nS 6!bobby_dies\nS 7!bobby_dies\n''') == 'Plot Error'\nassert solution('''\n7\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nS 3!bobby_dies it_goes_on_and_on\nS 4!bobby_dies\nS 5!bobby_dies\nS 6!bobby_dies\nS 7!bobby_dies\nS 8!bobby_dies\nS 9!bobby_dies\nS 10!bobby_dies\nS 11!bobby_dies\nS 12!bobby_dies\nS 13!bobby_dies\nS 14!bobby_dies\nS 15!bobby_dies\nS 16!bobby_dies\nS 17!bobby_dies\nS 18!bobby_dies\nS 19!bobby_dies\nS 20!bobby_dies\nS 21!bobby_dies\nS 22!bobby_dies\nS 23!bobby_dies\nS 24!bobby_dies\nS 25!bobby_dies\nS 26!bobby_dies\nS 27!bobby_dies\nS 28!bobby_dies\nS 29!bobby_dies\nS 30!bobby_dies\n''') == 'Yes'\nassert solution('''\n14\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nS 3!bobby_dies it_goes_on_and_on\nS 4!bobby_dies\nS 5!bobby_dies\nS 6!bobby_dies\nS 7!bobby_dies\nS 8!bobby_dies\nS 9!bobby_dies\nS 10!bobby_dies\nS 11!bobby_dies\nS 12!bobby_dies\nS 13!bobby_dies\nS 14!bobby_dies\nS 15!bobby_dies\nS 16!bobby_dies\nS 17!bobby_dies\nS 18!bobby_dies\nS 19!bobby_dies\nS 20!bobby_dies\nS 21!bobby_dies\nS 22!bobby_dies\nS 23!bobby_dies\nS 24!bobby_dies\nS 25!bobby_dies\nS 26!bobby_dies\nS 27!bobby_dies\nS 28!bobby_dies\nS 29!bobby_dies\nS 30!bobby_dies\nS 31!bobby_dies\nS 32!bobby_dies\nS 33!bobby_dies\nS 34!bobby_dies\nS 35!bobby_dies\nS 36!bobby_dies\nS 37!bobby_dies\nS 38!bobby_dies\nS 39!bobby_dies\nS 40!bobby_dies\nS 41!bobby_dies\nS 42!bobby_dies\nS 43!bobby_dies\nS 44!bobby_dies\nS 45!bobby_dies\nS 46!bobby_dies\nS 47!bobby_dies\nS 48!bobby_dies\nS 49!bobby_dies\nS 50!bobby_dies\nS 51!bobby_dies"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == 'Yes'\nassert solution('10') == '3 Just A Dream'\nassert solution('10') == 'Plot Error'\n\"\"\"\nimport collections"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'Yes'\nassert solution(input_small) == 'No'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies\nS 3!bobby_dies\nS 4!bobby_dies it_goes_on_and_on\nS 5!bobby_dies\nD 1\nD 2\nS 3!bobby_dies\nS 4!bobby_dies it_goes_on_and_on\nS 5!bobby_dies\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies\nS 3!bobby_dies\nS 4!bobby_dies it_goes_on_and_on\nS 5!bobby_dies\nD 1\nD 2\nD 3\nS 1!bobby_dies\nS 2!bobby_dies\nD 3\nD 4\nS 1!bobby_dies\nS 3!bobby_dies\nS 5!bobby_dies\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies\nS 3!bobby_dies\nS 4!bobby_dies it_goes_on_and_on\nS 5!bobby_dies\nD 1\nD 2\nD 3\nS 1!bobby_dies\nS 2!bobby_dies\nD 3\nD 4\nD 5\nS 1!bobby_dies\nS 3!bobby_dies\nS 5!bobby_dies\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n1\nE\n\"\"\") == \"Plot Error\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"Yes\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies\\n') == 'Yes'\nassert solution('5\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nD 4\\n') == '3 Just A Dream'\nassert solution('7\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies\\nD 4\\nS 3!bobby_died\\n') == 'Yes'"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nE stuff_happens\\nS 1!bobby_dies\\nS 2!bobby_dies\\n\") == \"3 Just A Dream\"\nassert solution(\"2\\nS 1 bobby_dies\\nS 2!bobby_dies\\n\") == \"Plot Error\"\nassert solution(\"3\\nS 1 bobby_dies\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies\\n\") == \"Yes\"\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nE business_as_usual\\nE bobby_dies\\nS 1 bobby_died\\nE stuff_happens\\nE jr_does_bad_things\\nS 2!bobby_dies business_as_usual\\nE it_goes_on_and_on\\nD 4\\nS 1!bobby_dies\\nS 2!bobby_dies it_goes_on_and_on') == 'Yes\\n3 Just A Dream'\nassert solution('6\\nE business_as_usual\\nS 1 business_as_usual\\nE business_as_usual\\nE business_as_usual\\nS 2 business_as_usual\\nE business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nE business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nE business_as_usual\\nE business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nE business_as_usual\\nS 1 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nE business_as_usual\\nS 1 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nE business_as_usual\\nE business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 1 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 1 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nE business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 1 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 1 business_as_usual\\nS 1 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 3 business_as_usual\\nS 2 business_as_usual\\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\ne\\ne\\nS\\n1\\ne\\ne\\n\") == \"Yes\\nYes\\nYes\\n\"\nassert solution(\"1\\ne\\nS\\n1\\ne\\n\") == \"Yes\\nYes\\nYes\\n\"\nassert solution(\"1\\ne\\nD\\nS\\n1\\ne\\n\") == \"Plot Error\\nYes\\n\"\nassert solution(\"1\\nD\\nD\\nS\\n1\\nE\\n\") == \"Plot Error\\nYes\\nYes\\n\"\nassert solution(\"1\\nD\\nS\\n1\\nE\\n\") == \"Plot Error\\nYes\\nYes\\n\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"24 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\\n\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"24 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\n\n\"\"\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('24 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"24 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4 8 7') == '-+-+-\\n|L|\\n|M|\\n|R|\\n+-+-+'\nassert solution('8 3 7 6') == '+------------------------------------\\n|H|\\n|H|\\n|M|\\n+------------------------------------'\nassert solution('8 3 6 7') == '+------------------------------------\\n|H|\\n|H|\\n|M|\\n+------------------------------------'\nassert solution('8 3 5 6') == '+------------------------------------\\n|H|\\n|H|\\n|M|\\n+------------------------------------'\nassert solution('8 3 5 4') == '+------------------------------------\\n|H|\\n|H|\\n|M|\\n+------------------------------------'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('24 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consectetur |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"24 5 8 7\") == \"+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+\"\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('24 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 8 5 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n\"\"\"\nimport time\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5 8 7\nLorem ipsum dolor sit amet consectetur adipisicing elit sed do\neiusmod tempor incididunt ut labore et dolore magna aliqua\nUt enim ad minima veniam quis nostrud exercitation\nullamco laboris nisi ut aliquip ex ea commodo\nconsequat Duis aute irure dolor in\nreprehenderit in voluptate velit esse\ncillum dolore eu fugiat nulla pariatur\nExcepteur sint occaecat cupidatat non proident\nsunt in culpa qui officia deserunt mollit\nanim id est laborum\n''') == '''\n+-------------------------------------+\n|exercitation ullamco    |^|\n|laboris nisi ut aliquip | |\n|ex ea commodo consequat |X|\n|Duis aute irure dolor in | |\n|reprehenderit in        |v|\n+-------------------------------------+\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 10') == 'impossible'\nassert solution('10 10') == 'possible'"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4 10\\n\"\n    \"0 3 2 1\\n\"\n    \"3 0 1 3\\n\"\n    \"2 1 0 2\\n\"\n    \"1 3 2 0\\n\"\n    ) == \"possible\"\nassert solution(\n    \"3 10\\n\"\n    \"1 2 2 1\\n\"\n    \"2 0 1 0\\n\"\n    \"2 1 0 2\\n\"\n    \"1 3 2 0\\n\"\n    ) == \"impossible\"\nassert solution(\n    \"5 10\\n\"\n    \"0 3 2 1\\n\"\n    \"3 0 1 3\\n\"\n    \"2 1 0 2\\n\"\n    \"1 3 2 0\\n\"\n    \"1 1 1 1\\n\"\n    \"2 1 0 2\\n\"\n    \"2 0 1 0\\n\"\n    \"3 2 1 0\\n\"\n    \"3 0 1 3\\n\"\n    \"2 2 2 2\\n\"\n    \"1 3 2 0\\n\"\n    \"2 3 2 0\\n\"\n    \"3 2 2 2\\n\"\n    ) == \"possible\"\nassert solution(\n    \"1 100\\n\"\n    \"0 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n    \"2 1 2 1\\n\"\n    \"2 1 2 1\\n\"\n    \"1 1 1 1\\n\"\n    \"2 1 2 1\\n\"\n    \"2 1 2 1\\n\"\n    \"3 1 1 1\\n\"\n    \"3 1 1 1\\n\"\n    \"2 1 2 1\\n\"\n    \"2 1 2 1\\n\"\n    \"3 1 1 1\\n\"\n    \"3 1 1 1\\n\"\n    ) == \"impossible\"\nassert solution(\n    \"3 100\\n\"\n    \"0 1 1 1\\n\"\n    \"1 1 1 1\\n\"\n    \"2 1 2 1\\n\"\n    \"2 1 2 1\\n\"\n    \"1 1 1 1\\n\"\n    \"2 1 2 1\\n\"\n    \"2 1 2 1\\n\"\n    \"3 1 1 1\\n\"\n    \"3 1 1 1\\n\"\n    \"2 1 2 1\\n\"\n    \"2 1 2 1\\n\"\n    \"3 1 1 1\\n\"\n    \"3 1 1 1\\n\"\n    ) == \"impossible\"\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 10\") == \"impossible\"\nassert solution(\"3 2\") == \"possible\"\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('4 10\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'impossible'\nassert solution('4 10\\n0 1 3\\n2 1 0 2\\n3 1 2 0\\n0 3 2 1') == 'possible'\nassert solution('4 10\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n0 1 2 3\\n3 1 2 0') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 10') == 'possible'\nassert solution('3 0 2 1') == 'impossible'\nassert solution('2 1 0 2') == 'possible'\nassert solution('1 3 2 0') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"2 5\\n1 4 1 2\\n3 2 2 1\\n2 3 2 1\\n3 1 2 1\\n2 0 2 2\\n1 1 2 1\\n4 1 2 1\\n2 3 2 1\\n2 3 2 1\\n1 2 2 1\\n1 1 2 1\\n2 2 2 1\\n2 2 2 1\\n0 1 2 1\\n3 1 2 1\\n2 0 2 2\\n2 1 2 1\\n1 0 2 1\\n3 1 2 1\\n1 3 2 1\\n2 3 2 1\\n3 0 2 1\\n3 3 2 1\\n1 1 2 1\\n0 0 2 1\\n3 2 2 1\\n3 0 2 1\\n1 1 2 1\\n1 3 2 1\\n1 2 2 1\\n0 2 2 1\\n2 3 2 1\\n1 3 2 1\\n2 3 2 1\\n3 1 2 1\\n1 2 2 1\\n2 2 2 1\\n1 2 2 1\\n2 0 2 2\\n2 0 2 1\\n2 1 2 1\\n0 2 2 1\\n1 0 2 1\\n1 0 2 1\\n2 0 2 1\\n0 0 2 1\\n1 1 2 1\\n2 2 2 1\\n2 3 2 1\\n1 1 2 1\\n2 3 2 1\\n1 1 2 1\\n0 2 2 1\\n0 2 2 1\\n1 1 2 1\\n1 1 2 1\\n0 3 2 1\\n1 2 2 1\\n2 2 2 1\\n2 3 2 1\\n2 2 2 1\\n3 0 2 1\\n2 2 2 1\\n0 0 2 1\\n1 1 2 1\\n0 3 2 1\\n0 3 2 1\\n1 1 2 1\\n2 1 2 1\\n0 2 2 1\\n0 1 2 1\\n1 3 2 1\\n1 1 2 1\\n2 0 2 1\\n2 0 2 1\\n0 1 2 1\\n2 0 2 1\\n2 1 2 1\\n2 1 2 1\\n2 0 2 1\\n1 1 2 1\\n3 0 2 1\\n2 1 2 1\\n2 0 2 1\\n1 3 2 1\\n1 0 2 1\\n0 1 2 1\\n1 1 2 1\\n0 0 2 1\\n1 1 2 1\\n1 1 2 1\\n0 2 2 1\\n2 1 2 1\\n3 0 2 1\\n1 3 2 1\\n3 0 2 1\\n1 3 2 1\\n3 0 2 1\\n1 2 2 1\\n1 1 2 1\\n0 1 2 1\\n1 0 2 1\\n2 3 2 1\\n2 0 2 1\\n3 0 2 1\\n2 2 2 1\\n2 3 2 1\\n2 1 2 1\\n2 1 2 1\\n0 2 2 1\\n1 2 2 1\\n0 3 2 1\\n1 0 2 1\\n1 0 2 1\\n3 0 2 1\\n1 0 2 1\\n0 3 2 1\\n0 2 2 1\\n1 2 2 1\\n3 2 2 1\\n1 1 2 1\\n2 1 2 1\\n1 2 2 1\\n0 2 2 1\\n1 2 2 1\\n1 0 2 1\\n0 0 2 1\\n0 1 2 1\\n1 3 2 1\\n2 0 2 1\\n2 1 2 1\\n3 1 2 1\\n1 1 2 1\\n1 2 2 1\\n0 2 2 1\\n1 0 2 1\\n0 2 2 1\\n1 1 2 1\\n1 1 2 1\\n0 3 2 1\\n0 0 2 1\\n1 3 2 1\\n2 0 2 1\\n0 2 2 1\\n0 0 2 1\\n0 0 2 1\\n0 0 2 1\\n2 0 2 1\\n1 1 2 1\\n1 1 2 1\\n2 1 2 1\\n0 3 2 1\\n1 0 2 1\\n2 3 2 1\\n2 3 2 1\\n0 1 2 1\\n2 1 2 1\\n1 3 2 1\\n1 2 2 1\\n0 0 2 1\\n1 0 2 1\\n0 2 2 1\\n2 1 2 1\\n2 3 2 1\\n2 2 2 1\\n1 0 2 1\\n1 1 2 1\\n1 2 2 1\\n1 1 2 1\\n1 3 2 1\\n1 1 2 1\\n1 1 2 1\\n2 2 2 1\\n1 1 2 1\\n0 3 2 1\\n2 1 2 1\\n0 3 2 1\\n1 1 2 1\\n0 3 2 1\\n0 3 2 1\\n2 0 2 1\\n1 0 2 1\\n0 0 2 1\\n1 3 2 1\\n2 1 2 1\\n1 0 2 1\\n1 1 2 1\\n0 0 2 1\\n1 0 2 1\\n2 0 2 1\\n2 3 2 1\\n1 2 2 1\\n0 0 2 1\\n0 2 2 1\\n1 1 2 1\\n1 0 2 1\\n0 0 2 1\\n0 0 2 1\\n1 1 2 1\\n1 0 2 1\\n1 0 2 1\\n0 1 2 1\\n1 0 2 1\\n1 0 2 1\\n0 0 2 1\\n0 0 2 1\\n1 1 2 1\\n1 0 2 1\\n0 0 2 1\\n1 1 2 1\\n1 0 2 1\\n0 1 2 1\\n1 0 2 1\\n0 0 2 1\\n1 1 2 1\\n1 1 2 1\\n0 1 2 1\\n2 0 2 1\\n1 1 2 1\\n2 2 2 1\\n0 0 2 1\\n2 1 2 1\\n1 1 2 1\\n1 1 2 1\\n0 0 2 1\\n2 1 2 1\\n1 1 2 1\\n1 1 2 1\\n1 1 2 1\\n2 1 2 1\\n0 1 2 1\\n1 1 2 1\\n1 0 2 1\\n1 0 2 1\\n1 0 2 1\\n0 0 2 1\\n1 0 2 1\\n0 0 2 1\\n1 1 2 1\\n1 1 2 1\\n0 3 2 1\\n2 0 2 1\\n2 1 2 1\\n0 2 2 1\\n0 2"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 0\\n1 1 2 1 1 3 1 3 1 2 2 3') == 'impossible'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\") == \"possible\"\nassert solution(\"4 10\\n0 3 2 1\\n2 1 0 2\\n1 3 2 0\\n3 0 1 3\") == \"impossible\""
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 10') == 'impossible'\nassert solution('2 2') == 'possible'\nassert solution('2 4') == 'impossible'\nassert solution('5 3') == 'impossible'\nassert solution('5 10') == 'impossible'\n\"\"\"\n\n\"\"\""
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10\") == \"impossible\"\nassert solution(\"4 10\") == \"possible\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1\\n1') == '1.00000000'\nassert solution('2 1 1\\n2') == '0.9999998'\nassert solution('2 1 1\\n3') == '1.000000'\nassert solution('2 1 1\\n4') == '1.000001'\nassert solution('2 1 1\\n5') == '0.999999'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1 1\n1''') == '1.00000000'\n\nassert solution('''2 1 1\n1\n2\nSample Input:\n2 3 5\n2\n6\n4\nSample Output:\n1.9999999999\n''') == '0.9999999999'\n\nassert solution('''4 6 5\n4\n2\n2\nSample Input:\n10 10 3\n1\n5\n4\nSample Output:\n2.6666666666''') == '2.66666667'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 1') == '1.00000000'\nassert solution('2 2 2') == '1.0'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1.00000000'\nassert solution('2 1 1\\n1\\n2\\n3') == '0.99999999'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 3 2\n3\n1 2\n\"\"\") == \"1.00000000\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1.00000000'\nassert solution('2 2 3\\n3\\n1') == '1.00000000'\nassert solution('1 2 2\\n3\\n2') == '1.00000000'\nassert solution('1 1 1\\n2\\n3') == '1.00000000'\nassert solution('1 1 1\\n2\\n3') == '0.6666666666666666'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 1') == '1.00000000'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 1') == '1.00000000'\nassert solution('10 1 10') == '9.9999999'\n\n\"\"\"\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1 1\n1\n2\n''') == '1.00000000', 'First'\nassert solution('''\n2 1 1\n2\n2\n''') == '1.00000000', 'Second'\nassert solution('''\n3 1 1\n1\n3\n''') == '0.99999994', 'Third'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1') == '1.0'\nassert solution('5 4 2') == '3.0'\nassert solution('5 4 1') == '2.0'\nassert solution('5 3 1') == '1.5'\n\"\"\"\n\nn, d, c = [int(x) for x in input().split()]"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2 1'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"1\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3 3 2 1\n2 3 4''') == '3'\nassert solution('''5\n4 3 3 2\n3 1\n1 2\n2 4\nSample Output:\n2\n1''') == '3'\nprint('All test cases passed.')\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n4 3 3 2\n3\n1 2\n1 1\n2 4''') == '2'\nassert solution('''5\n4 3 3 2\n3\n1 2\n1 1\n2 4''') == '1'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '3'\nassert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '1'\nassert solution('''5\n5 4 3 3 2\n3\n1 2\n1 1\n2 4\n''') == '2'\nassert solution('''5\n5 4 3 3 2\n3\n2 4\n1 1\n1 2\n3\n''') == '3'"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 3 3 2') == '1'\nassert solution('5 4 3 3 2') == '2'\nassert solution('5 5 3 5 2') == '1'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 3 2\") == \"2\"\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('5 4 3 3 2') == '2'\nassert solution('3') == '1'\nassert solution('3 4 3 3 2') == '2'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '4'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 3 3 2') == '2'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 2\") == \"1\""
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\n\nassert solution(\"4 2\") == \"3\""
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 2') == '2'\nassert solution('3 2') == '4'\nassert solution('3 2') == '2'\nassert solution('3 2') == '4'"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'never meet'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"5 3\") == \"2\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n0 1\n1 2\n0 2\n2 3\n2 4\n''') == '1'\n'''\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == \"1\"\nassert solution('2\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == \"9\"\nassert solution('3\\n0\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9') == \"1\"\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 2') == '1'\nassert solution('3 2') == 'never meet'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\"\nassert solution(\"10 4 2\") == \"145500000\"\nassert solution(\"15 5 2\") == \"147294816\"\nassert solution(\"5 5 2\") == \"145555552\"\nassert solution(\"30 5 2\") == \"145555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555555"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1/1\"\nassert solution(\"3 3 2\") == \"1/2\"\nassert solution(\"3 4 4\") == \"1/16\"\nassert solution(\"5 5 3\") == \"1/9\"\nassert solution(\"4 4 4\") == \"1/64\"\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 4 2\n''') == '14500000001'\nassert solution('''\n5 6 2\n''') == '98689755316826028352237'\nassert solution('''\n10 10 5\n''') == '16669932024981096022356'\nassert solution('''\n10 10 10\n''') == '2'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4 2\n3 0\n8 1\n5 1\n6 2''') == '14500000001'''\n\nassert solution('''5 3 2\n1 0\n8 1\n5 1\n6 2''') == '240000000000000001'''\n\nassert solution('''5 1 3\n3 0\n8 1\n5 1\n6 2''') == '80000000000000001'''\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\") == \"14500000001\""
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2\n1\n''') == '144'\nassert solution('''\n4\n4\n2\n''') == '144'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1''') == '14500000001'\nassert solution('''1 0 0 0 0\n0 0 0 1 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0''') == '1'\nassert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1481697'\nassert solution('''5 5 2\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1\n0 1 1 1 1''') == '1472996'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4 2\n1 0\n1 1\n1 0\n0 1\n1 1''') == '14500000001'\n\nassert solution('''4 4 2\n0 0\n1 1\n0 0\n1 1''') == '14900000001'''\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1\n4 2\n3\n''') == '14500000001'\n\nassert solution('''\n2 2\n2 2\n4 2\n''') == '12'\n\nassert solution('''\n3 3\n3 4\n3 2\n''') == '1'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4\\n3 7\\n1 6\\n2 6') == '0\\n1\\n1\\n2'"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 4\n3 7\n1 6\n2 6''') == '0\\n1\\n1\\n2'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '0\\n1\\n1\\n2\\n'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n1\\n3 7\\n1 6\\n2 6\\n') == '0 1 1 1 2'"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1\\n3\\n2\\n') == '0\\n1\\n1\\n2\\n'\nassert solution('5\\n10 4\\n2 3\\n6 5\\n2 4\\n2 6\\n') == '2\\n5\\n2\\n4\\n3\\n2\\n'\nassert solution('5\\n10 4\\n3 3\\n6 5\\n6 4\\n2 6\\n') == '0\\n1\\n2\\n3\\n4\\n5\\n6\\n'\nassert solution('7\\n1 10\\n6 2\\n1 6\\n3 5\\n4 4\\n6 8\\n7 7\\n') == '2\\n5\\n2\\n4\\n3\\n1\\n0\\n'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n2\n3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n4\n5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n0\n2\n5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n4\n5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2\n3\n3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 4\\n3 7') == '0'\nassert solution('4\\n1 4\\n3 7\\n1 6\\n2 6') == '1'\nassert solution('100\\n1 1\\n10 10\\n1 1\\n10 10') == '99'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 5\n2 3\n5 1\n''') == '2'"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 2\n1 2\n1 3\n2 3\n2 4\n''') == '0'\nassert solution('''\n4 2\n1 2\n1 3\n1 4\n1 5\n''') == '0'\nassert solution('''\n4 5\n1 2\n1 3\n1 4\n1 5\n''') == '0'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3100\"\n\"\"\"\n\nimport sys\n\n\nclass Tree:\n    def __init__(self, info: str, left=None, right=None):\n        self.info = info\n        self.left = left\n        self.right = right\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3300'\nassert solution('''\n5 4\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3300'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3300'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3300'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3300'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '3100'"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300''') == '3100'\nassert solution('''5 3\n1 2 1000\n2 3 1000\n4 5 500\n2''') == '3100'\n\nprint(solution('''6 3\n2 5 1000\n3 4 1000\n1 2 1000\n2 5 1000\n4 5 500\n3 4 500'''))\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"3000\"\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '3100'\nassert solution('3 3') == '3100'\nassert solution('5 5') == '25000'\nassert solution('1 2 3') == '-1'\nassert solution('4 3') == '3300'"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '3000'\nassert solution('5 3') == '3100'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '3100'\n\n\"\"\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1.5\"\nassert solution(\"4 2\") == \"2.5\"\nassert solution(\"1 2\") == \"1.5\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3.5\"\nassert solution(\"4 2\") == \"3.5\"\nassert solution(\"7 8\") == \"3.0\"\n\"\"\""
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"3.0\"\nassert solution(\"4 2\") == \"3.0\"\nassert solution(\"2 2\") == \"1.0\"\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '4.0', 'Example'\nassert solution('3 2') == '2.0', 'Example'\nassert solution('6 7') == '4.5', 'Example'\nassert solution('1 1') == '1.0', 'Example'\nassert solution('4 4') == '4.0', 'Example'\n\nstdin = \"\"\"\n3 2\n1 8\n6 5\n2 5\n2 9\n7 13\n\"\"\""
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1.5\"\nassert solution(\"4 1\") == \"4.0\"\nassert solution(\"4 4\") == \"2.5\""
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 8\n6 5\n2 5\n2 9\n7 13\n''') == '5.250000000'\nassert solution('''\n10 3\n1 3 1 5 1 5 1 6 1 2 3\n''') == '4.000000'\nassert solution('''\n10 5\n1 3 1 5 1 5 1 6 1 2 3\n''') == '6.000000'\n'''\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\\n2 3\\n1 2\") == \"1.5\"\nprint(solution(\"3 2\\n4 3\\n2 2\"))\nprint(solution(\"2 2\\n10 100\"))\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n1 8\n6 5\n2 5\n2 9\n7 13\n''') == '5.250000000'\nassert solution('''\n3 3\n3 1\n5 5\n1 1\n1 5\n''') == '1.250000000'\nassert solution('''\n2 2\n3 3\n1 1\n1 1\n''') == '2.50000000'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '5.25'\nassert solution('10 7') == '10.53125'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2\\n1 8\\n6 5\\n2 5\\n2 9\\n7 13') == '5.25'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\nassert solution('8') == '2'\n\"\"\"\nfrom math import log"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\"\n) == \"7\\n2\\n2\\n0\\n4\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1 2 3 1 2 1 1\"\n) == \"7\"\nassert solution(\n    \"1 2 3 1 2 1 1\"\n) == \"2\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\") == \"7\\n2\\n2\\n0\\n4\"\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4\\n'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4\\n'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n3\n1 2 3\n1 2 1 2\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '3'\n\nassert solution('''\n1\n2\n3\n1 2 3\n1 2 1 2\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '2'\n\nassert solution('''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\n\nassert solution('''\n7\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7'\n\nassert solution('''\n1\n2\n3\n1 2 3\n1 2 1 2\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '1'"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"7\\n1 2 3 1 2 1 1\\n5\\n1 3 1 2 3\\n1 2 1 2\\n2 2 2 3\\n3 2 1 2\\n4 2 1 2\\n\"\n) == \"7\\n2\\n2\\n0\\n4\\n\""
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4\\n'\nassert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4\\n'\nassert solution('''\n4\n1 2 2 3\n2 3 4\n3 4 5\n4 5 6\n5 6 7\n''') == '1\\n2\\n2\\n2\\n3\\n'\nassert solution('''\n4\n2 3 4 5 6 7\n1 2 3 4 5\n3 4 5 6 7\n5 6 7 8\n''') == '1\\n2\\n2\\n2\\n3\\n'\nassert solution('''\n10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10 10 10 10 10 10 10 10 10 10 10 10\n10"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nprint(solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n'''))\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nprint('Tests passed')"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n5 0 0 0 0\n0.2 0.1 0.2 0.2\n0.0 0.0 0.0 0.0\n0.0 0.0 0.0 0.0\n0.5 0.5 0.5 0.5\n''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\nprint(solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''')) == '32.6405451448')\nprint(solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''')) == '32.6405451448')\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448', 'incorrect value'\n\nprint(solution('''\n6\n1 1 1 1 1 1\n0.7\n0.6\n0.4\n0.3\n0.2\n0.2\n'''))\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n40 30 30 40 20 40 50 30 30 50\\n0.0 0.0 0.45 0.45 0.1\\n0.0 0.3 0.3 0.3 0.3 0.1\\n0.3 0.0 0.3 0.3 0.3 0.1\\n0.0 0.3 0.3 0.3 0.3 0.1\\n0.2 0.2 0.2 0.2 0.2\\n0.3 0.0 0.3 0.3 0.1\\n0.0 0.8 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.4 0.4 0.0 0.0 0.2\\n0.8 0.0 0.0 0.0 0.2') == '32.6405451448'"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n\n'''\nimport math\nimport random"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.2''') == '32.6405451448'\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n\nassert solution('''\n8\n35 15 10 25 25 20 18 12\n0.5 0.5 0.0 0.0 0.5 0.5 0.5 0.5\n0.2 0.2 0.4 0.4 0.2 0.2 0.4 0.2\n0.4 0.4 0.4 0.4 0.4 0.4 0.4 0.4\n0.6 0.6 0.4 0.4 0.6 0.6 0.4 0.6\n0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2\n0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2\n0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2\n0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2\n''') == '3.6458967655'"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '3 2 1 4 1'\nassert solution('''\n1\n1 2\n''') == '1 2 1 2'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '2',\n    '1 2',\n    '4 3',\n])) == '2 3 1 4'\nassert solution('\\n'.join([\n    '3',\n    '1 2 3',\n])) == '1 3 2'\nassert solution('\\n'.join([\n    '4',\n    '1 2 3 4',\n])) == '1 2 3 4'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('\\n'.join([\"3\",\"1 1 1\"])) == \"1 1\"\nprint(solution(\"\\n\".join([\"4\",\"1 1 1 2 1\"])))\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 4 3\n''') == '2 3 1 4'\nassert solution('''\n3\n1 2 4 3\n''') == '1 2 3 4'\nassert solution('''\n4\n2 3 1 4\n''') == '2 1 3 4'\nassert solution('''\n5\n1 2 4 3 1\n''') == '1 2 3 1 4'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 1 4 3\n\"\"\") == \"3 4 2 1\"\nassert solution(\"\"\"\n1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n2 1 4 3\n\"\"\") == \"2 3 1 4\"\nassert solution(\"\"\"\n5\n5 1 4 2 3\n\"\"\") == \"3 4 1 5\"\nassert solution(\"\"\"\n5\n3 4 2 1 5\n\"\"\") == \"2 1 3 4 5\"\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '2 3 4 1'\nassert solution('''\n6\n1 2 3 4 5 6\n''') == '1 2 3 4 5 6'\nassert solution('''\n4\n4 2 6 5 3\n''') == '4 2 3 5 6'\nassert solution('''\n6\n4 2 6 5 3 7\n''') == '4 2 3 6 5 7'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2 1 4 3\n''') == '2 3 4 1'\nassert solution('''\n5\n2 2 4 4 1\n''') == '2 3 1 4 4'\n'''"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 1 4 3'\n) == '2 3 4 1'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 1 4 3') == '2 3 4 1'\nassert solution('20\\n3 1 4 2 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n') == '3 1 4 2 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'\nassert solution('20\\n1 1 4 2 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n') == '1 1 4 2 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'\nassert solution('20\\n3 1 2 5 4 7 6 8 9 10 11 12 13 14 15 16 17 18 19 20\\n') == '3 1 2 5 4 7 6 8 9 10 11 12 13 14 15 16 17 18 19 20'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n' +\n                '3 2 4 5 6\\n' +\n                '1 2 4 5 6\\n' +\n                '1 3 4 5 6\\n' +\n                '1 4 5 6 7\\n' +\n                '1 5 6 7 8\\n' +\n                '1 6 7 8 9\\n' +\n                '1 7 8 9 10\\n') == '3 4 1 5 6'"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1\\n2\\n3\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n4 1\\n2 2\\n3 3\\n4 3\\n3 1\\n1 1') == '4.0'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\\n') == '7.656854249492381'"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6') == '7.656854249492381'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '7.656854249492381'\nassert solution('6\\n1\\n2\\n3\\n4\\n5') == '7.656854249492381'\nassert solution('10\\n100\\n200\\n300\\n400\\n500') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\nassert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\nassert solution('''\n1\n5\n3\n2\n3\n5\n4\n5\n5\n''') == '5.555555555555557'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1\") == \"7.656854249492381\"\nassert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\") == \"7.656854249492381\""
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\nassert solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n''') == '7.656854249492381'\nassert solution('''\n3\n1 2\n3 2\n1 3\n''') == '5.792030482516888'\n''')\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 2\\n3 4\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n7 8\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\") == \"7.656854249492381\"\nassert solution(\"6\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\") == \"7.656854249492381\"\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1 2') == '7.656854249492381'\nassert solution('6\\n1 2\\n3 2\\n3 1\\n1 3\\n2 4') == '7.656854249492381'\nprint(solution('''\n6\n1 2\n1 3\n2 4\n3 3\n3 2\n2 1\n'''))\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 3') == '2'\nassert solution('2 3 2') == '2'\nassert solution('3 1 3') == '2'\nassert solution('10 1 3') == '11'"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 2\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0') == \"2\"\n\nInput:\n2 4 5\n0 0\n0 3\n0 0\n0 1\n1 4\n2 2\n0 0\n0 0\n\nOutput:\n3\n'''"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n\n''') == '2'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '1'\nassert solution('''\n4 4 3\n0 0\n0 3\n3 0\n3 3\n''') == '2'\nassert solution('''\n4 5 5\n1 2\n3 2\n4 3\n3 2\n3 3\n''') == '3'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 3\\n1 1\\n2 2\\n1 3\\n0 0\\n0 3\\n1 4\\n3 3\\n3 0\\n') == '2'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n3 5 4\n2 2\n1 1\n4 4\n1 2\n3 1\n3 4\n2 4\n''') == '3'\nassert solution('''\n4 4 4\n2 2\n1 1\n4 4\n1 2\n3 1\n3 4\n2 4\n''') == '4'\nassert solution('''\n5 4 4\n3 2\n1 1\n4 4\n1 2\n3 1\n3 4\n2 4\n''') == '4'\nassert solution('''\n5 5 5\n2 2\n1 1\n4 4\n1 2\n3 1\n3 4\n2 4\n2 5\n''') == '5'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"2 1 1 1\") == \"16\"\nassert solution(\"2 1 1 1 1\") == \"32\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '9'\nassert solution('2 1') == '9'\n\n---Input---\nThe input contains a single line of integer $m$ and $k$.\n\n---Output---\nAn integer $s$, such that $s$ is the maximum number of weighings you can use to determine the fake bag, if you can always determine the fake bag.\n\n----Explanation----\nWe can use any number of weighings ($k$) and put any number of coins in any bag from the bag ($m$) at most once.\n\nWe have seen how to put a coin from one bag onto another and to put any number of coins in a bag at most once. So we can use these methods to determine the fake bag.\n\nWe can use any number of weighings ($k$) to determine the fake bag and the number of weighings ($m$) to determine the real bag. The weights of the coins are positive integers, and we can use the left-sided weights for the fake bag and the right-sided weights for the real bag. Thus, the fake bag can be determined exactly by using a single weighing.\n\nTo determine the real bag, we can use any number of weighings ($m$) to determine the fake bag. So we can use all weighings ($k$) to determine the real bag.\n\nThis is a classic example of the binomial distribution. We can see that for a large enough $m$, we are guaranteed to be able to determine the real bag. Thus, the maximum number of weighings we can use is $2^{m-1}$.\n\n----Explanation----\nWe can use any number of weighings ($k$) to determine the fake bag.\n\nWe can use any number of weighings ($m$) to determine the real bag. The weights of the coins are positive integers, and we can use the left-sided weights for the fake bag and the right-sided weights for the real bag. Thus, the fake bag can be determined exactly by using a single weighing.\n\nTo determine the real bag, we can use any number of weighings ($m$) to determine the fake bag.\n\nWe know that the maximum number of weighings we can use is $2^{m-1}$. So, for a large enough $m$, we are guaranteed to be able to determine the real bag. Thus, the maximum number of weighings we can use is $2^{m-1}$.\n\nIn the above example, $m=9$ and $k=9$. The maximum number of weighings we can use is $2^{9-1}=49$.\n\nGiven $m=9$ and $k=9$, we can deduce that the fake bag is at most 9 grams heavier than the real bag.\n\nGiven $m=3$ and $k=10$, we can deduce that the fake bag is at most 3 grams heavier than the real bag.\n\nGiven $m=4$ and $k=7$, we can deduce that the fake bag is at most 4 grams heavier than the real bag.\n\nGiven $m=10$ and $k=3$, we can deduce that the fake bag is at most 10 grams heavier than the real bag.\n\nGiven $m=1$ and $k=3$, we can deduce that the fake bag is at most 3 grams heavier than the real bag.\n\nGiven $m=1$ and $k=5$, we can deduce that the fake bag is at most 5 grams heavier than the real bag.\n\nGiven $m=2$ and $k=2$, we can deduce that the fake bag is at most 2 grams heavier than the real bag.\n\nGiven $m=3$ and $k=4$, we can deduce that the fake bag is at most 3 grams heavier than the real bag.\n\nGiven $m=3$ and $k=5$, we can deduce that the fake bag is at most 5 grams heavier than the real bag.\n\nGiven $m=4$ and $k=3$, we can deduce that the fake bag is at most 4 grams heavier than the real bag.\n\nGiven $m=4$ and $k=4$, we can deduce that the fake bag is at most 4 grams heavier than the real bag.\n\nGiven $m=4$ and $k=7$, we can deduce that the fake bag is at most 7 grams heavier than the real bag.\n\nGiven $m=4$ and $k=8$, we can deduce that the fake bag is at most 8 grams heavier than the real bag.\n\nGiven $m=5$ and $k=7$, we can deduce that the fake bag is at most 7 grams heavier than the real bag.\n\nGiven $m=5$ and $k=8$, we can deduce that the fake bag is at most 8 grams heavier than the real bag.\n\nGiven $m=6$ and $k=7$, we can deduce that the fake bag is at most 7 grams heavier than the real bag.\n\nGiven $m=6$ and $k=8$, we can deduce that the fake bag is at most 8 grams heavier than the real bag.\n\nGiven $m=7$ and $k=7$, we can deduce that the fake bag is at most 7 grams heavier than the real bag.\n\nGiven $m=7$ and $k=8$, we can deduce that the fake bag is at most 8 grams heavier than the real bag.\n\nGiven $m=7$ and $k=9$, we can deduce"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '9'\nassert solution('4 2') == '9'\n\nimport math\nfrom itertools import product\n\nn, k = map(int, input().split())"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"9\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"0 1\") == \"1\"\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '9'\nassert solution('9 10') == '30'\nassert solution('10 10') == '-1'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '9'\nassert solution('3 2') == '9'\nassert solution('4 2') == '9'\nassert solution('6 4') == '9'\nassert solution('5 5') == '9'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '9'\nassert solution('3 2') == '9'\nassert solution('3 1') == '9'\nassert solution('9 5') == '18'\nassert solution('9 2') == '18'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '9'\nassert solution('2 1') == '9'\nassert solution('3 2') == '7'\nassert solution('4 3') == '6'\nassert solution('5 4') == '5'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '9'"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '9'\nassert solution('12 2') == '9'\nassert solution('1 2') == '5'\nassert solution('12 2') == '5'\nassert solution('1 2') == '5'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"4\\n2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"3\\n2\\n3\\n5\\n7\\n12\") == \"5\"\nassert solution(\"3\\n5\\n7\\n12\") == \"5\"\nassert solution(\"5\\n7\\n12\") == \"5\"\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n5\\n7\\n12\\n') == '12'\nassert solution('10\\n1\\n7\\n13\\n9\\n8\\n7\\n5\\n6\\n4\\n') == '7'"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'None'\nassert solution('3') == '3'\nassert solution('5') == '5'\nassert solution('7') == '7'\nassert solution('12') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '12'"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('7') == '2'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'a'\nassert solution('3') == 'b'\nassert solution('5') == 'c'\nassert solution('7') == 'd'\nassert solution('12') == 'a'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n3\n5\n7\n12\n''') == '12'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"12\"\nassert solution(\"12\\n2\\n3\\n5\\n7\\n12\") == \"\"\nassert solution(\"5\\n2\\n3\\n5\\n7\\n12\") == \"\""
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '12'\n\n\"\"\"\nimport sys"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12\\n') == '12'\nassert solution('3\\n5\\n7\\n') == 'None'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '10'\nassert solution('00') == '10'\nassert solution('111') == '110'\nassert solution('111') == '110'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n11') == '110'\nassert solution('0\\n10') == '10'\nassert solution('0\\n10\\n01') == '11'\nassert solution('0\\n10\\n01\\n11') == '11'\nassert solution('1\\n11\\n110') == '11'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '100'\nassert solution('10') == '010'\nassert solution('110') == '111'\nassert solution('111') == '110'\nassert solution
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n00\n01\n10\n110\n111\nSample Output:\n11''') == '11'\n\nassert solution('''5\n0\n1\n10\n110\n111\nSample Output:\n-1''') == '-1'"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111\\n') == '111'\n\"\"\""
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n8\n00\n01\n10\n110\n111\n''') == '111'\nassert solution(\n'''\n7\n00\n01\n10\n110\n''') == '110'\nassert solution(\n'''\n5\n00\n01\n10\n110\n111\n''') == '110'\nassert solution(\n'''\n7\n00\n01\n10\n110\n111\n''') == '110'\nassert solution(\n'''\n1\n0\n''') == '-1'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '11'\nassert solution('10') == '10'\nassert solution('110') == '11'\nassert solution('111') == '10'\n\n'''"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '110'\n\"\"\"\n\nimport sys\nfrom collections import deque\n\nsys.setrecursionlimit(100000)\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == '11'\nassert solution('20\\n0011\\n00110\\n01100\\n010001001101') == '010001001101'"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n00\\n01\\n10\\n110\\n111') == '11'\nassert solution('5\\n01\\n00\\n10\\n110\\n111') == '11'\nassert solution('5\\n11\\n11\\n10\\n110\\n111') == '11'\nassert solution('5\\n10\\n11\\n11\\n10\\n110\\n111') == '11'\nassert solution('5\\n11\\n11\\n10\\n110\\n111') == '11'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '100 250 320'\nassert solution('20') == '100 250 320'\nassert solution('100') == '100'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n100\\n50') == '100 250 320'\nassert solution('2\\n20 100\\n100 10\\n1') == '100 250 320'\nassert solution('3\\n3\\n20 100\\n100 10\\n1\\n150 50\\n1') == '100 250 320'"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '6'\nassert solution('6') == '6'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == \"100 250 320\", \"You have given wrong input\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\"\"\") == \"\"\"100 250 320\"\"\"\nprint(solution(input()))"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2\\n20 100\\n100 10\\n1\\n150 50\\n1\"\n    ) == \"100 250 320\"\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320', 'First Test'\nassert solution('''3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320', 'Second Test'\nassert solution('''4\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320', 'Third Test'\nassert solution('''5\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320', 'Fourth Test'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n100\\n10\\n20\\n50\\n100\\n150\\n100\\n150\\n100\\n50') == '100 250 320'\nassert solution('2\\n10\\n20\\n50\\n100\\n150\\n100\\n150\\n100\\n50') == '100 250 320'\nassert solution('3\\n2\\n20 100\\n100 10\\n1\\n150 50\\n1\\n150 100') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2\n20 100\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '100 250 320'\nassert solution('5') == '100 250 320 100 150'\n\n'''\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n50 100\n''') == '''\n3 7 4 6 5 7 2 15 2\n'''\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 7 4 6 5 7 2 15 2'\nassert solution('10') == '9 9 9 9 9 9 9 9 9 9'\nassert solution('100') == '9 9 9 9 9 9 9 9 9 9'\n\"\"\"\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''50 100''') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n'''"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n20') == '3 7 4 6 5 7 2 15 2'\nassert solution('5\\n100') == '2 4 6 8 10'\nassert solution('10\\n50') == '9 8 7 6 5 4 3 2 1'"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100') == '7'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"50 100\") == \"3 7 4 6 5 7 2 15 2\""
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\\n0\\n0\\n\") == \"0\"\nassert solution(\"2\\n0\\n0\\n\") == \"1\"\nassert solution(\"2\\n0\\n0\\n\") == \"1\"\nassert solution(\"3\\n0\\n0\\n\") == \"1\"\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n0 0\n0 14\n15 14\n15 0\n3\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000', '''\nExample Tests:\n1. For the case above, there is no need to cut out the $B$ piece, so the cost is $40$ (the difference between $40$ and $40$ is just a relative error of $10^{-6}$).\n2. If the $A$ and $B$ are both convex, the $A$ piece must have been correctly cut out and the remaining $B$ piece should be a single point. In this case, the $A$ piece was $8$.\n3. If the $A$ and $B$ are both concave, you will have two separate pieces that must be cut out of $A$. In this case, the $B$ piece must have been cut out by $6$.\n4. For the case above, we may want to cut $B$ out by $5$, which results in $24$.\n'''\nassert solution('''\n5\n10 10\n11 15\n18 18\n18 10\n10 11\n7 10\n4 11\n2 7\n1 5\n''') == '24.0000000000', '''\n---\n\nSample Input:\n8\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\nSample Output:\n12.5\n'''\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0\\n0 14\\n15 14\\n15 0\\n4') == '40.0000000000'\nassert solution('5\\n0 0\\n0 7\\n7 7\\n7 0\\n4') == '10.0000000000'\nassert solution('3\\n0 0\\n3 1\\n3 0\\n4\\n') == '1.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 0\\n0 14\\n15 14\\n15 0\\n4\\n8 3\\n4 6\\n7 10\\n11 7') == '40.0000000000'\nassert solution('1\\n-1 -1\\n1 1\\n0 -1\\n-1 1') == '11.0'"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '40.0000000000'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1.0000000000'\nassert solution('5') == '4.0000000000'\n\"\"\"\n\nfrom math import inf\n\nclass Vector:\n    def __init__(self, v: list):\n        self.v = v\n        self.m = len(v)\n        self.M = self.m + 1\n        self.a = [[0] * self.M for _ in range(self.M)]\n        self.c = [[0] * self.m for _ in range(self.m)]\n\n    def __getitem__(self, index):\n        return self.v[index]\n\n    def __setitem__(self, index, item):\n        self.v[index] = item\n        self.m = len(self.v)\n\n    def __add__(self, v):\n        return Vector([self.v[i] + v.v[i] for i in range(self.m)])\n\n    def __sub__(self, v):\n        return Vector([self.v[i] - v.v[i] for i in range(self.m)])\n\n    def __eq__(self, v):\n        if self.m!= v.m:\n            return False\n        for i in range(self.m):\n            if self.v[i]!= v.v[i]:\n                return False\n        return True\n\n    def __mul__(self, a):\n        if isinstance(a, Vector):\n            return Vector([self.v[i] * a.v[i] for i in range(self.m)])\n        return Vector([self.v[i] * a for i in range(self.m)])\n\n    def __truediv__(self, a):\n        return self * (1 / a)\n\n    def __matmul__(self, v):\n        return Vector([v.v[i] * self.v[i] for i in range(self.m)])\n\n    def __str__(self):\n        return str(self.v)"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n8 9\\n4 0\\n4 6\\n7 10\\n11 7') == '41.0'\nassert solution('10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12\\n13 13\\n14 14\\n15 15\\n16 16\\n17 17\\n18 18\\n19 19\\n20 20\\n21 21\\n22 22\\n23 23\\n24 24\\n25 25\\n26 26\\n27 27\\n28 28\\n29 29\\n30 30\\n31 31\\n32 32\\n33 33\\n34 34\\n35 35\\n36 36\\n37 37\\n38 38\\n39 39\\n40 40\\n41 41\\n42 42\\n43 43\\n44 44\\n45 45\\n46 46\\n47 47\\n48 48\\n49 49\\n50 50\\n51 51\\n52 52\\n53 53\\n54 54\\n55 55\\n56 56\\n57 57\\n58 58\\n59 59\\n60 60\\n61 61\\n62 62\\n63 63\\n64 64\\n65 65\\n66 66\\n67 67\\n68 68\\n69 69\\n70 70\\n71 71\\n72 72\\n73 73\\n74 74\\n75 75\\n76 76\\n77 77\\n78 78\\n79 79\\n80 80\\n81 81\\n82 82\\n83 83\\n84 84\\n85 85\\n86 86\\n87 87\\n88 88\\n89 89\\n90 90\\n91 91\\n92 92\\n93 93\\n94 94\\n95 95\\n96 96\\n97 97\\n98 98\\n99 99\\n100 100\\n101 101\\n102 102\\n103 103\\n104 104\\n105 105\\n106 106\\n107 107\\n108 108\\n109 109\\n110 110\\n111 111\\n112 112\\n113 113\\n114 114\\n115 115\\n116 116\\n117 117\\n118 118\\n119 119\\n120 120\\n121 121\\n122 122\\n123 123\\n124 124\\n125 125\\n126 126\\n127 127\\n128 128\\n129 129\\n130 130\\n131 131\\n132 132\\n133 133\\n134 134\\n135 135\\n136 136\\n137 137\\n138 138\\n139 139\\n140 140\\n141 141\\n142 142\\n143 143\\n144 144\\n145 145\\n146 146\\n147 147\\n148 148\\n149 149\\n150 150\\n151 151\\n152 152\\n153 153\\n154 154\\n155 155\\n156 156\\n157 157\\n158 158\\n159 159\\n160 160\\n161 161\\n162 162\\n163 163\\n164 164\\n165 165\\n166 166\\n167 167\\n168 168\\n169 169\\n170 170\\n171 171\\n172 172\\n173 173\\n174 174\\n175 175\\n176 176\\n177 177\\n178 178\\n179 179\\n180 180\\n181 181\\n182 182\\n183 183\\n184 184\\n185 185\\n186 186\\n187 187\\n188 188\\n189 189\\n190 190\\n191 191\\n192 192\\n193 193\\n194 194\\n195 195\\n196 196\\n197 197\\n198 198\\n199 199\\n200 200\\n201 201\\n202 202\\n203 203\\n204 204\\n205 205\\n206 206\\n207 207\\n208 208\\n209 209\\n210 210\\n211 211\\n212 212\\n213 213\\n214 214\\n215 215\\n216 216\\n217 217\\n218 218\\n219 219\\n220 220\\n221 221\\n222 222\\n223 223\\n224 224\\n225 225\\n226 226\\n227 227\\n228 228\\n229 229\\n230 230\\n231 231\\n232 232\\n233 233\\n234 234\\n235 235\\n236 236\\n237 237\\n238 238\\n239 239\\n240 240\\n241 241\\n242 242\\n243 243\\n244 244\\n245 245\\n246 246\\n247 247\\n248 248\\n249 249\\n250 250\\n251 251\\n252 252\\n253 253\\n254 254\\n255 255\\n256 256\\n257 257\\n258 258\\n259 259\\n260 260\\n261 261\\n262 262\\n263 263\\n264 264\\n265 265\\n266 266\\n267 267\\n268 268\\n269 269\\n270 270\\n271 271\\n272 272\\n273 273\\n274 274\\n275 275\\n276 276\\n277 277\\n278 278\\n279 279\\n280 280\\n281 281\\n282 282\\n283 283\\n284 284\\n285 285\\n286 286\\n287 287\\n288 288\\n289 289\\n290 290\\n291 291\\n292 292\\n293 293\\n294 294\\n295 295\\n296 296\\n297 297\\n298 298\\n299 299\\n300 300\\n301 301\\n302 302\\n303 303\\n304 304\\n305 305\\n306 306\\n307 307\\n308 308\\n309 309\\n310 310\\n311 311\\n312 312\\n313 313\\n314 314\\n315 315\\n316 316\\n317 317\\n318 318\\n319 319\\n320 320\\n321 321\\n322 322\\n323 323\\n324 324\\n325 325\\n326 326\\n327 327\\n328 328\\n329 329\\n330 330\\n331 331\\n332 332\\n333 333\\n334 334\\n335 335\\n336 336\\n337 337\\n338 338\\n339 339\\n340 340\\n341 341\\n342 342\\n343 343\\n344 344\\n345 345\\n346 346\\n347 347\\n348 348\\n349 349\\n350 350\\n351 351\\n352 352\\n353 353\\n354 354\\n355 355\\n356 356\\n357 357\\n358 358\\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 0\n0 14\n15 14\n15 0\n4\n8 3\n4 6\n7 10\n11 7\n''') == '40.0000000000'\nassert solution('''\n5\n0 0\n0 7\n8 7\n8 0\n5\n''') == '32.0000000000'\nassert solution('''\n3\n0 1\n1 4\n''') == '12.0000000000'\nassert solution('''\n2\n0 0\n0 1\n''') == '2.0000000000'\nassert solution('''\n3\n-3 -2\n-5 -3\n-4 4\n''') == '7.0000000000'"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2 1 3\") == \"2 1\"\nassert solution(\"2\\n4 5 6\\n3 1 4\") == \"3 4\"\nprint(solution(input()))\n\"\"\"\nfrom bisect import bisect_left\n\nn, k = map(int, input().split())\nn = list(map(int, input().split()))\nn.sort()\nres = 0\nfor i in range(n[0]):\n    if n[i] > n[i+1]:\n        res += 1\n    else:\n        break\nfor i in range(n[-1]):\n    if n[-i-1] > n[-i]:\n        res += 1\n    else:\n        break\nprint(res)\nprint(' '.join([str(j) for j in range(1, res+1)]))\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 1 3') == '2'\nassert solution('5\\n2 1 3 4 6') == '2 4'\nassert solution('8\\n3 4 5 1 6 7 9') == '2 4 5 6 7'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n3\n2 1 3\n''') == '1'\nassert solution('''\n2\n2\n3 1\n''') == '2'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2 1 3\n''') == '1'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n2 1 3') == '1'\nassert solution('2\\n1 2\\n2') == '1'\nassert solution('1\\n3\\n3') == '0'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3\\n5 6 7') == '2 1\\n1 2\\n1 3'"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '2'\nassert solution('''\n3\n4 2 2\n''') == '1,2,3'\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2 1 3') == '1\\n1\\n'\nassert solution('1\\n2 2 3') == '0\\n'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n2 1 3\") == \"1\"\nassert solution(\"4\\n5 3 2 1\") == \"1 2 3\""
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0.25 2.26 3.59\") == \"239\"\nassert solution(\"0.23 0.37 1.07\") == \"None\"\n\n'''"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"725.85 1.71 2.38\") == \"199 162\"\nassert solution(\"13.61 1.71 1.71\") == \"None\"\nassert solution(\"73.83 1.71 1.71\") == \"2 1\"\nassert solution(\"121.28 2.61 1.71\") == \"1 2\""
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    75.00 1.71 2.38\n    70.00 1.71 2.38\n    70.00 1.70 2.38\n    70.00 1.70 2.37\n    70.00 1.70 2.36\n    70.00 1.70 2.34\n    70.00 1.70 2.32\n    70.00 1.70 2.31\n    70.00 1.70 2.30\n    70.00 1.70 2.29\n    70.00 1.70 2.28\n    70.00 1.70 2.27\n    70.00 1.70 2.26\n    70.00 1.70 2.25\n    70.00 1.70 2.24\n    70.00 1.70 2.23\n    70.00 1.70 2.22\n    70.00 1.70 2.21\n    70.00 1.70 2.20\n    70.00 1.70 2.19\n    70.00 1.70 2.18\n    70.00 1.70 2.17\n    70.00 1.70 2.16\n    70.00 1.70 2.15\n    70.00 1.70 2.14\n    70.00 1.70 2.13\n    70.00 1.70 2.12\n    70.00 1.70 2.11\n    70.00 1.70 2.10\n    70.00 1.70 2.09\n    70.00 1.70 2.08\n    70.00 1.70 2.07\n    70.00 1.70 2.06\n    70.00 1.70 2.05\n    70.00 1.70 2.04\n    70.00 1.70 2.03\n    70.00 1.70 2.02\n    70.00 1.70 2.01\n    70.00 1.70 2.00\n    70.00 1.70 1.99\n    70.00 1.70 1.98\n    70.00 1.70 1.97\n    70.00 1.70 1.96\n    70.00 1.70 1.95\n    70.00 1.70 1.94\n    70.00 1.70 1.93\n    70.00 1.70 1.92\n    70.00 1.70 1.91\n    70.00 1.70 1.90\n    70.00 1.70 1.89\n    70.00 1.70 1.88\n    70.00 1.70 1.87\n    70.00 1.70 1.86\n    70.00 1.70 1.85\n    70.00 1.70 1.84\n    70.00 1.70 1.83\n    70.00 1.70 1.82\n    70.00 1.70 1.81\n    70.00 1.70 1.80\n    70.00 1.70 1.79\n    70.00 1.70 1.78\n    70.00 1.70 1.77\n    70.00 1.70 1.76\n    70.00 1.70 1.75\n    70.00 1.70 1.74\n    70.00 1.70 1.73\n    70.00 1.70 1.72\n    70.00 1.70 1.71\n    70.00 1.70 1.70\n    70.00 1.70 1.69\n    70.00 1.70 1.68\n    70.00 1.70 1.67\n    70.00 1.70 1.66\n    70.00 1.70 1.65\n    70.00 1.70 1.64\n    70.00 1.70 1.63\n    70.00 1.70 1.62\n    70.00 1.70 1.61\n    70.00 1.70 1.60\n    70.00 1.70 1.59\n    70.00 1.70 1.58\n    70.00 1.70 1.57\n    70.00 1.70 1.56\n    70.00 1.70 1.55\n    70.00 1.70 1.54\n    70.00 1.70 1.53\n    70.00 1.70 1.52\n    70.00 1.70 1.51\n    70.00 1.70 1.50\n    70.00 1.70 1.49\n    70.00 1.70 1.48\n    70.00 1.70 1.47\n    70.00 1.70 1.46\n    70.00 1.70 1.45\n    70.00 1.70 1.44\n    70.00 1.70 1.43\n    70.00 1.70 1.42\n    70.00 1.70 1.41\n    70.00 1.70 1.40\n    70.00 1.70 1.39\n    70.00 1.70 1.38\n    70.00 1.70 1.37\n    70.00 1.70 1.36\n    70.00 1.70 1.35\n    70.00 1.70 1.34\n    70.00 1.70 1.33\n    70.00 1.70 1.32\n    70.00 1.70 1.31\n    70.00 1.70 1.30\n    70.00 1.70 1.29\n    70.00 1.70 1.28\n    70.00 1.70 1.27\n    70.00 1.70 1.26\n    70.00 1.70 1.25\n    70.00 1.70 1.24\n    70.00 1.70 1.23\n    70.00 1.70 1.22\n    70.00 1.70 1.21\n    70.00 1.70 1.20\n    70.00 1.70 1.19\n    70.00 1.70 1.18\n    70.00 1.70 1.17\n    70.00 1.70 1.16\n    70.00 1.70 1.15\n    70.00 1.70 1.14\n    70.00 1.70 1.13\n    70.00 1.70 1.12\n    70.00 1.70 1.11\n    70.00 1.70 1.10\n    70.00 1.70 1.09\n    70.00 1.70 1.08\n    70.00 1.70 1.07\n    70.00 1.70 1.06\n    70.00 1.70 1.05\n    70.00 1.70 1.04\n    70.00 1.70 1.03\n    70.00 1.70 1.02\n    70.00 1.70 1.01\n    70.00 1.70 1.00\n    70.00 1.69 1.99\n    70.00 1.69 1."
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"162 189\""
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12.345 12.567 13.35') == '168 196'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2.00 7.50\n2.00 1.61\n3.00 1.46\n2.00 1.41\n2.00 1.40\n1.25 2.00\n2.00 1.41\n2.00 1.41\n2.00 1.40\n1.25 2.00\n3.00 1.46\n2.00 1.41\n2.00 1.40\n1.25 2.00\n2.00 1.41\n1.25 2.00\n2.00 1.41\n1.25 2.00\n3.00 1.46\n''') == '159 162'\n\nassert solution('''\n2.00 7.50\n2.00 1.61\n3.00 1.46\n2.00 1.41\n2.00 1.40\n1.25 2.00\n2.00 1.41\n2.00 1.41\n2.00 1.40\n1.25 2.00\n3.00 1.46\n2.00 1.41\n2.00 1.40\n1.25 2.00\n2.00 1.41\n1.25 2.00\n2.00 1.41\n1.25 2.00\n3.00 1.46\n''') == 'None'\n\nassert solution('''\n1.50 3.00\n4.50 3.00\n7.00 3.00\n10.00 2.00\n15.00 1.00\n''') == 'None'"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0.70 1.80 2.30\") == \"199 162\"\nassert solution(\"0.71 1.80 2.30\") == \"199 163\"\nassert solution(\"0.71 1.75 2.30\") == \"199 164\"\nassert solution(\"0.71 1.74 2.30\") == \"199 165\"\nassert solution(\"0.70 1.74 2.30\") == \"199 166\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5.99 1.91 2.38\") == \"199 162\"\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('825.85 1.71 2.38') == '199 162'\nassert solution('10.65 8.75 9.45') == '5 4'\nassert solution('13.33 4.37 9.99') == '1 1'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '199 162'"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0\") == \"16\""
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nassert solution('7 4\\n-3 -1 -1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '5'\nassert solution('7 4\\n-2 -1 -1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '8'\nassert solution('7 4\\n-2 -1 -1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1') == '0'\nassert solution('7 4\\n-2 -1 -1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1') == '-4'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0\n''') == '16'\nassert solution('''\n5 3\n1 1 1\n2 3 1\n1 2 3\n2 1 1\n3 3 0\n''') == '13'\n'''\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == \"16\"\nassert solution('5 6\\n4 -2 -2 1 1 1\\n3 2 -1 2 3 -1\\n1 1 1 1 3\\n1 1 3 1 1\\n1 1 2 3 4\\n3 2 3 1 1\\n3 2 3 1 1\\n3 3 3 1 1\\n3 3 3 1 1\\n3 3 3 1 1\\n3 3 3 1 1\\n3 3 3 1 1\\n3 3 3 1 1\\n') == \"18\"\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0\n''') == '16'\n\n'''\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nassert solution('4 6\\n1 1 2 3\\n2 3 2 4\\n1 2 1 4\\n1 2 1 4\\n3 2 2 4\\n1 1 3 4\\n3 2 2 4\\n3 3 3 4') == '23'\nassert solution('1 1 1 1') == '1'\nassert solution('5 4\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '2'\nassert solution('5 5\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1') == '5'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\n"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1') == '16'"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '16'\nassert solution('7 3') == '17'\nassert solution('10 1') == '18'\nassert solution('2 2') == '3'\nassert solution('4 0') == '4'\n\"\"\""
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2 1 4'\nassert solution('2') == '4 1 2'\nassert solution('3') == '1 1 2'\n\nsolution('10')\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('O 1') == '1 1 1'\nassert solution('O 2') == '1 1 1'\nassert solution('O 1') == '1 1 1'\nassert solution('E 2') == '2 1 1'\nassert solution('E 1') == '2 1 1'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '2 1 4'\nassert solution('4 3') == '4 3 3 1'\nassert solution('5 3') == '2 1 4'\n\nassert solution('4') == '4 1 4'\nassert solution('4 2') == '2 1 4'"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nO 3\nI 1\nE 3\n''') == '3 1 3'\n\nassert solution('''\nO 4\nI 2\nO 3\nE 4\n''') == '3 2 4'\n'''\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nO 2 4 I\") == \"1 2 2 2\"\n\"\"\"\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\nO 4') == '2 1 4'\nassert solution('3\\nO 5\\nE 9\\nI 4\\nO 5\\nI 8\\nI 2\\nO 4') == '3 2 4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2 1 4\"\n'''\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nO 4') == '2 1 4'\nassert solution('2\\nO 4') == '1 1 4'\nassert solution('3\\nO 4') == '1 2 2'\nassert solution('4\\nO 4') == '1 2 2'\nassert solution('5\\nO 4') == '1 1 4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\nO 4\nO 3\nI 3\nI 4\nI 3''') == '4 1 4'\n\nassert solution('''1\nO 7\nO 2\nO 4\nO 5\nI 4\nI 3\nI 5\nI 5''') == '5 3 4'\n\nassert solution('''1\nO 6\nO 2\nO 3\nO 6\nI 6\nI 4''') == '4 1 4'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1 2 3\"\nassert solution(\"2\") == \"2 1 2\"\nassert solution(\"3\") == \"3 1 4\"\nassert solution(\"4\") == \"3 2 4\"\n\n---\nSample Input:\n3\nO 5\nE 5\nI 4\nSample Output:\n5 2 4 1\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n3 5 1 7\nSample Input 2:\n8 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\nSample Output 2:\n6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n20 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10 20 10 20 10 20\n10"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n\") == \"4\"\nassert solution(\"6 8\\n3 6 2 3 6 1\\n6 3 12 4 9 6\\n5 6 2 1 4 10\\n5 2 3 1 5 6\\n6 2 2 2 2 3\\n\") == \"6\"\nassert solution(\"2 5\\n3 6 2 3 6 1\\n5 3 12 4 9 6\\n5 2 3 1 5 6\\n6 2 2 2 2 3\\n\") == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14\\n') == '4'\n\n------SOLUTION----\nfrom collections import deque\nfrom math import sqrt\n\nr, length = map(int, input().split())\n\ngraph = [[] for _ in range(r)]\n\nfor _ in range(length):\n    x1, y1, x2, y2 = map(int, input().split())\n    graph[x1-1].append((y1, x2-1, sqrt((x2-1)**2+(y2-1)**2)))\n    graph[y1-1].append((x1-1, y2-1, sqrt((x2-1)**2+(y2-1)**2)))\n\ncolors = []\nfor _ in range(r):\n    colors.append([-1]*r)\n\nn = len(colors)"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"5 1 4 2\") == \"3\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1, 2, 3, 4\\n') == '1'\n\nassert solution('5, 1, 4, 5\\n') == '4'\n\nassert solution('5, 5, 9, 10\\n') == '1'\n\nassert solution('1, 6, 4, 10\\n') == '2'\n\nassert solution('2, 11, 7, 14\\n') == '3'"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 8\\n2 1 4 5\\n5 1 12 4\\n5 5 9 10\\n1 6 4 10\\n2 11 7 14') == '4'\n\n\"\"\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    2 8\n    5 1 4 5\n    5 5 9 10\n    1 6 4 10\n    2 11 7 14\n    \"\"\"\n) == \"4\"\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n''') == '4'\n\nassert solution('''\n5 6\n1 1 1 1 1\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == '1'\n\nassert solution('''\n5 10\n1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n''') == '2'\n\nassert solution('''\n5 10\n1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n''') == '1'\n\nassert solution('''\n5 10\n1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n''') == '1'"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 8\n2 1 4 5\n5 1 12 4\n5 5 9 10\n1 6 4 10\n2 11 7 14\n''') == '4'\n\nassert solution('''10\n2 4\n5 6\n3 4\n3 4\n4 4\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('99.99 99.99 9999.99') == '9.585073'\nassert solution('99 999 999 9999') == '9.5785847'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '0.4545454545454545'\nassert solution('9 99 9 999 9') == '0.6666666666666666666666666667'\nassert solution('9 9 999 9999') == '0.7777777777777777777777777778'\nassert solution('99 9 9 999 9') == '0.7777777777777777777777777778'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n-99.99 99.99 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\nassert solution('''\n-1.0 1.0 9999.99\n99 9 999 9999\n9 99 9 99 9\n''') == '9.585073'\n'''\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('9 99 9 99 9') == '9.585073'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 99 9999 99.99 9999.99 9999.99\") == \"9.585073\"\nassert solution(\"99.99 9999.99 9999.99 9999.99 9999.99 9999.99\") == \"9.585073\"\nassert solution(\"99 99 9999 99.99 9999.99 9999.99 9999.99 9999.99 9999.99\") == \"9.585073\"\nassert solution(\"99.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9999.99 9"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\n\"\"\"\n\n\nfrom math import *\nimport re"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"-99.99 99.99 9999.99\") == \"9.585073\"\nassert solution(\"99 9 999 9999\") == \"9.585073\"\nassert solution(\"9 99 9 99 9\") == \"9.585073\"\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.571190'\nassert solution('9 99 9 99 9') == '9.543308'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('99.99 99.99 9999.99') == '9.585073'\nassert solution('99 99 999 9999') == '8.297551'\nassert solution('99 99 9999 9999') == '8.843852'\nassert solution('99.99 9999.99 9999.99') == '9.631827'"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('9 99 9 99 9') == '9.585073'"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 30') == '12.74 127.83'\nassert solution('2 10 20 2 24 18 28 10') == '12.74 127.83'\n\n\n---Input---\nThe first line contains a single integer $n \\geq 1$. The next $n$ lines contain one integer each. Each integer is either $1$ or $2$, where $1$ means that the ball is at the center of the table, and $2$ means that the ball is in the top left hole. No ball can be in the center or the top right hole.\n\n----Output----\nFor each test case, display the distance $d$ to place the ball on the dashed line and the angle $\\theta $ to shoot the ball, or the word \u201cimpossible\u201d if the trick shot cannot be done. Output $\\theta $ in degrees, and round both $d$ and $\\theta $ to the nearest hundredth. Always show two digits after the decimal point, even if the digits are zero.\n\n---Example---\nSample Input:\n3\n1\n2\n1\nSample Output:\n1.69\n2.82\n2.82\n'''\n\nimport math\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\nassert solution('''\n20 30\n4 8 2 4 8 20 2 4\n''') == 'impossible'\nassert solution('''\n20 30\n4 8 2 4 8 20 2 4\n''') == 'impossible'\nassert solution('''\n20 30\n2 10 20 2 24 18 28 10\n''') == 'impossible'\n''')\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 30') == '12.74 127.83'\nassert solution('20 30') == '12.74 127.83'\n'''\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 30') == '12.74 127.83'\nassert solution('20 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"impossible\"\nassert solution(\"1 3 5\") == \"impossible\"\nassert solution(\"2 1 8\") == \"impossible\"\nassert solution(\"3 3 2\") == \"impossible\"\nassert solution(\"2 2 1\") == \"impossible\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\nassert solution(\n'''5 10\n2 5 9 1 5 10\n''') == 'impossible'\nassert solution(\n'''3 10\n1 5 9 1 5 10\n''') == 'impossible'\nassert solution(\n'''20 20\n2 5 9 1 5 10\n''') == 'impossible'\nassert solution(\n'''20 10\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\n''')\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 30\") == \"12.74 127.83\"\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\n\nassert solution('''\n20 30\n2 10 20 2 24 18 28 10\n1 1 1 1 1 1 1\n''') == 'impossible'\n\nassert solution('''\n20 30\n2 10 20 2 24 18 28 10\n1 1 1 1 1 1 1\n''') == 'impossible'\n\nassert solution('''\n20 30\n2 10 20 2 24 18 28 10\n1 1 1 1 1 1 1\n''') == '12.74 127.83'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 50\n2 10 20 2 24 18 28 10\n''') == 'impossible'\nassert solution('''\n20 30\n2 10 20 2 24 18 28 10\n''') == '12.74 127.83'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n\n\"\"\") == r\"\"\"\n0116\n\n\"\"\", \"\"\"\nimport sys\nimport math"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n2\n1\n2\n1\n2\n\"\"\") == \"0116\"\n\nassert solution(r\"\"\"\n5\n1234\n4\n9\n3\n2\n\"\"\") == \"4234\"\n\nassert solution(r\"\"\"\n2\n1\n1\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n5\n0\n1\n2\n3\n4\n\"\"\") == \"1111\"\n\nassert solution(r\"\"\"\n3\n10\n0\n9\n\"\"\") == \"1110\""
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n000\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n100\n110\n101\"\"\") == \"1101\"\n\nassert solution(\"\"\"\n9\n9\n9\n9\n9\n9\n9\n9\n9\n9\"\"\") == \"99999\"\n\nassert solution(\"\"\"\n4\n100\n100\n100\n100\n100\n100\n100\n100\"\"\") == \"101101\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1110'\nassert solution('2') == '111'\n\"\"\"\n\nfrom itertools import permutations\n\nnum_of_magnets = int(input())\n\nmagnets = input()\ncost = list(map(int, magnets.split()))\ncost.sort(reverse=True)\n\npermutations_of_magnets = list(permutations(list(range(num_of_magnets)), num_of_magnets))\n\nprint(\" \".join(str(i) for i in cost))\nfor perm in permutations_of_magnets:\n    print(\" \".join(str(i) for i in perm), end=\"\")\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3\n6\n7\nSample Input:\n4\n101\n101\n102\n103\nSample Output:\n22101\n''') == '1010122'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n10\n5\n12\n1\n4\n\"\"\") == \"0116\"\nassert solution(\"\"\"\n2\n1\n2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n3\n2\n\"\"\") == \"002\"\nassert solution(\"\"\"\n5\n7\n8\n3\n4\n\"\"\") == \"005\"\nassert solution(\"\"\"\n7\n2\n3\n4\n5\n6\n\"\"\") == \"5020\"\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n110\\n6') == '0116'\nassert solution('1\\n1') == '1'"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().strip()"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '16', \"Should print '16'\"\nassert solution('110') == '016', \"Should print '016'\"\nassert solution('6') == '06', \"Should print '06'\"\nassert solution('6') == '06', \"Should print '06'\""
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0116'\nassert solution('0116') == '0116'"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '0 2'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == '0 2 4'\nassert solution('4 1') == '1 0'\nassert solution('4 0') == '2 0'\nassert solution('3 3') == '0 0 0'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 3\\n4 4 4\") == \"0 2 4\"\nassert solution(\"7 3\\n8 3 3 3\") == \"0 3\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 3\n4 4 4''') == '0 2 4'"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3\\n4 4 4\\n') == '0 2 4'\nassert solution('10 10\\n9 7 2\\n7 5 3\\n8 6 8\\n6 6 2\\n4 9 4\\n1 3 5\\n9 9 3\\n6 7 8\\n9 9 1\\n6 3 8\\n7 1 8\\n3 3 2\\n6 6 9\\n') == '0 2 4 3 8 5 6 9'\nassert solution('5 5\\n5 5\\n') == '0 0'\nassert solution('5 5\\n6 5\\n') == '0 0'\nassert solution('10 10\\n6 7 2\\n8 8 6\\n4 5 5\\n1 2 3\\n1 2 4\\n1 3 2\\n') == '0 0 1 2 3 4'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0 2 4\"\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1\\n') == '2'\nassert solution('5 2\\n') == '2'\nassert solution('5 5\\n') == '1'\nassert solution('5 10\\n') == '5'\nassert solution('5 100\\n') == '4'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3\n1\n0\n2''') == '2 0'\nassert solution('''3\n3\n1\n0\n2''') == '0 1 2'\nassert solution('''3\n3\n1\n0\n2''') == '0 1 2'\nassert solution('''3\n3\n1\n0\n2''') == '0 1 2'\nassert solution('''3\n3\n1\n0\n2''') == '0 1 2'\n''') == '1 0 1'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0 0 0\"\nassert solution(\"2\") == \"0 2 0\"\nassert solution(\"3\") == \"2 0 0\"\nassert solution(\"4\") == \"2 2 0\"\nassert solution(\"5\") == \"2 4 0\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n5\n4\n5 4 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n5\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'possible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n5\n6\n2 1 5\n2 2 4\n2 1 3\n3 4 5\n3 1 4\nSample Output:\nimpossible\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n5\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\nSample Output:\nimpossible\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n6\n4 2 2 1 3\n4 2 1 2\n3 1 4 1\n4 3 4\n2 3\n3 1 3 2\n\"\"\") == \"impossible\""
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'impossible'\nassert solution('4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7') == 'impossible'\nassert solution('8\\n20\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5') == 'impossible'\nassert solution('10\\n20\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n8 9 9') == 'impossible'\nassert solution('10\\n20\\n2 2 4\\n3 1 3 5\\n1 2\\n2 1 5\\n4 2 6 4 7\\n2 5 7\\n2 6 5\\n8 9 9\\n1 2 3') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3\n1 2\n2 1 5\n2 5\n1 2\n1 2\nSample Output:\nimpossible\n''') == 'impossible'\nassert solution('''\n3\n1\n2\n3\nSample Output:\npossible\n''') == 'possible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"3\") == \"possible\"\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n7\\n2 2 4\\n3 1 3 5\\n1 2\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\") == \"impossible\"\nassert solution(\"4\\n7\\n2 2 4\\n3 1 3 5\\n1 2\") == \"possible\""
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == 'impossible'\nassert solution('5\\n7') == 'impossible'\nassert solution('10\\n7 3 2 1 5 3 4') == 'possible'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'impossible'\nassert solution('2') == 'possible'"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == 'impossible'\nprint(solution())\n\nSample Input:\n4\n6\n2 4 3 2 5 2\n3 3 4\n4 5\n4 7\n1 1 5\n4 8\nSample Output:\npossible\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\nassert solution('''\n5\n0 0\n0 10\n2\n4 10\n4 0\n''') == '2.00000'\n\nassert solution('''\n0\n0\n''') == 'impossible'"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n0 0\n0 10\n2\n4 10\n4 0\n''') == '4.00000'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == \"4.00000\"\nassert solution(\"\"\"\n2\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2\n0 0\n0 10\n3 0\n3 10\n3 0\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2\n0 0\n0 10\n4 0\n4 10\n4 0\n\"\"\") == \"2.00000\"\nassert solution(\"\"\"\n2\n0 0\n0 10\n4 0\n4 10\n4 0\n\"\"\") == \"4.00000\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == \"4.00000\"\nassert solution(\"\"\"\n5\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n5\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4.00000'\nassert solution('2 4 10 4 0') == '4.00000'\nassert solution('3 4 10 4 0') == 'impossible'\nassert solution('3 3 10 10 10 10') == 'impossible'\nassert solution('3 3 10 10 0 0') == 'impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n0 0\n0 10\n2\n2 4\n3\n\"\"\") == \"5.00000\"\nassert solution(\"\"\"\n5\n0 0\n0 10\n2\n4 10\n4 0\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1\n1 0\n1 0\n1\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 0\n0 10\n2\n4 10\n4 0\n''') == \"4.00000\"\nassert solution('''\n2\n0 0\n0 10\n2\n4 10\n4 0\n''') == \"impossible\"\nassert solution('''\n3\n0 1\n1 2\n2 3\n3 4\n1 2\n2 1\n''') == \"3.00000\"\n\nstdin = '''\n3\n0 1\n1 2\n2 3\n3 4\n1 2\n2 1\n'''\nimport itertools\nimport math\n\nT = int(stdin)\n\nfor _ in range(T):\n    n = int(stdin.strip())\n    s = stdin.strip()\n\n    p = s.split()\n    xs, ys = zip(*[(int(p[i]), int(p[i + 1])) for i in range(0, len(p), 2)])\n\n    dist = 0\n    x_init = xs[0]\n    y_init = ys[0]\n    for i in range(len(xs) - 1):\n        x_diff = x_init - xs[i + 1]\n        y_diff = y_init - ys[i + 1]\n        dist += math.sqrt(x_diff * x_diff + y_diff * y_diff)\n        x_init = xs[i + 1]\n        y_init = ys[i + 1]\n    dist += math.sqrt(x_init * x_init + y_init * y_init)\n\n    dist = round(dist)\n\n    print(dist)"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0 0\\n0 10') == '4.00000'\nassert solution('2\\n4 10\\n4 0') == 'impossible'\n'''"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4.00000'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 5') == '1'\nassert solution('3 2 5') == '1'\nassert solution('3 3 3') == '0'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == \"1\"\nassert solution('''\n4 4 5\n0 1\n1 1\n0 2\n0 3\n0 4\n1 0\n3 0\n3 0\n2 0\n''') == \"1\"\nassert solution('''\n6 6 5\n0 1\n1 1\n1 2\n1 3\n2 2\n2 3\n2 4\n3 2\n3 3\n3 4\n4 2\n4 3\n4 4\n''') == \"0\"\nassert solution('''\n8 8 5\n0 1\n1 1\n1 2\n1 3\n1 4\n2 1\n2 2\n2 3\n2 4\n3 1\n3 2\n3 3\n3 4\n4 1\n4 2\n4 3\n4 4\n''') == \"0\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5 1\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\nassert solution('''4 5 1\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '0'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1'\nassert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '0'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '0'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n3 1\n2 2\n''') == '1'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n3 1\n2 2\n''') == '1'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n3 1\n2 2\n''') == '0'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 5 2\n5 4\n3 1\n4 2\n2 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1', 'First'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '0', 'Second'\nassert solution('''\n5 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1', 'Third'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\nassert solution('''\n3 4 6\n1 1\n3 2\n2 2\n1 4\n4 2\n3 3\n''') == '0'\nassert solution('''\n3 4 5\n1 1\n3 2\n2 3\n1 4\n4 2\n3 3\n''') == '0'\n''')"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 5\\n1 1\\n1 3\\n3 1\\n3 3\\n2 2\\n') == '1'\nassert solution('100 10 100\\n50 50\\n100 100\\n150 150\\n100 100\\n50 50\\n50 50\\n50 50\\n50 50\\n100 100\\n100 100\\n150 150\\n100 100\\n150 150\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100 100\\n100"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n'''\n) == '5 3\\n1 0\\n2 4\\n', solution.__doc__\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n\"\"\") == \"3 4\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5 6\\n'\n    '0 1\\n'\n    '0 2\\n'\n    '1 3\\n'\n    '2 3\\n'\n    '1 2\\n'\n    '4 3\\n'\n) == '5 3\\n1 0\\n2 4'\nassert solution(\n    '4 6\\n'\n    '0 1\\n'\n    '0 2\\n'\n    '1 3\\n'\n    '2 3\\n'\n    '1 2\\n'\n    '4 3\\n'\n) == 'impossible'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"5 3\"\nassert solution(\"3 2\") == \"1 0\"\nassert solution(\"4 6\") == \"impossible\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '''1 0\n2 4\n'''\n\nassert solution('''\n1 2\n0 1\n2 3\n''') == '''impossible\n'''\n\nassert solution('''\n1 4\n0 1\n3 3\n0 2\n1 3\n''') == '''impossible\n'''\n\nassert solution('''\n1 6\n0 1\n2 3\n0 2\n1 3\n1 2\n4 3\n''') == '''3 2\n1 0\n4 3\n'''\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\") == \"5 3\\n1 0\\n2 4\"\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5 3\\n1 0\\n2 4'"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 6\n0 1\n0 2\n1 3\n2 3\n1 2\n4 3\n''') == '5 3\\n1 0\\n2 4\\n'\n\nassert solution('''\n3 3\n0 1\n2 3\n1 2\n''') == 'impossible\\n'\n\nassert solution('''\n3 3\n0 1\n2 3\n1 0\n''') == '5 3\\n1 2\\n2 4\\n'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6\\n0 1\\n0 2\\n1 3\\n2 3\\n1 2\\n4 3\\n') == '3 4'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '3 0'\nassert solution('2 5') == '2 4'\nassert solution('5 2') == '0 1'\n\nThe input was so large that it was difficult to construct the expected output. Thus, please submit your output on the judge system.\n\n'''"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('2 3 1') == '2 1'\nassert solution('6 1 4') == '2 4'\nassert solution('10 1 2 3 4 5 6 8 9 10') == '2 3 4 5 6'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\n0 0\n0 1\n1 0\n1 1\n2 0\n2 1\n''') == '2"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1 2'\nassert solution('3') == '2 1'\nassert solution('4') == '2 1'\nassert solution('5') == '4 2 3 1'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4') == '3'\nassert solution('4 3') == '4'\nassert solution('5 5') == '2'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"4 1\") == \"2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2 1\\n0 0\\n1 0\\n1 1\") == \"2\\n1 2\"\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n0 0\n0 1\n1 0\n1 1\n''') == '2\\n1 2\\n'''\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 1\n0 0\n0 1\n1 0\n1 1\n''') == '2'\nassert solution('''2 2\n1 1\n0 0\n1 1\n''') == '2'\nassert solution('''3 2\n0 0\n0 1\n1 0\n1 1\n''') == '3'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 1') == '3'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1\n0 0\n1 1''') == '2 1 2'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution(\"10 2\\n1 3 5 7 9 11 13 15 17 16\") == \"1\"\nprint(\"Congratulations! Your solution passed all tests\\n\")\n\n'''"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n1 1\n1 2\n''') == '0'\nassert solution('''\n5 7\n1 2 3 4 5 6 7\n''') == '3'\nassert solution('''\n5 10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '10 2'\n    ) == '1'\n\"\"\"\n\n###############################################################################\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '0'\nassert solution('''\n5 20\n14 32 25 30 42 55 65 75\n''') == '4'\nassert solution('''\n7 2\n7 8 9 10 11 12 13\n''') == '2'\nassert solution('''\n5 20\n14 32 25 30 42 55 65 75\n''') == '0'\n'''"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('1 2') == '1'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\n'''\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\n\"\"\"\n    \n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)-1):\n        diff.append(abs(a[i]-a[i+1]))\n\n    print(min(diff))\n\"\"\"\n\n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            diff.append(abs(a[i]-a[j]))\n\n    print(min(diff))\n\"\"\"\n\n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)-1):\n        diff.append(abs(a[i]-a[i+1]))\n\n    print(diff[0])\n\"\"\"\n\n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)-1):\n        diff.append(abs(a[i]-a[i+1]))\n\n    print(diff[0])\n\"\"\"\n\n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            diff.append(abs(a[i]-a[j]))\n\n    print(max(diff))\n\"\"\"\n\n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            diff.append(abs(a[i]-a[j]))\n\n    print(max(diff))\n\"\"\"\n\n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            diff.append(abs(a[i]-a[j]))\n\n    print(min(diff))\n\"\"\"\n\n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)-1):\n        diff.append(abs(a[i]-a[i+1]))\n\n    print(max(diff))\n\"\"\"\n\n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)-1):\n        diff.append(abs(a[i]-a[i+1]))\n\n    print(max(diff))\n\"\"\"\n\n\"\"\"\n    n = int(input())\n    a = list(map(int, input().split()))\n\n    diff = []\n\n    for i in range(len(a)-1):\n        diff.append(abs(a[i]-a[i+1]))\n\n    print(min(diff))\n\"\"\"\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1', 'First Test'\nassert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '0', 'Second Test'\nassert solution('''\n5 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1', 'Third Test'\nassert solution('''\n6 2\n1 3 5 7 9 11 13 15 17 16\n''') == '3', 'Fourth Test'\nassert solution('''\n11 2\n1 3 5 7 9 11 13 15 17 16\n''') == '6', 'Fifth Test'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n10 2\n1 2 3 4 5 6 7 8 9 10\n''') == '-1'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\nA\n2 1\n''') == '1 1'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\nABC\nACBB\nABA\nBCB\nABC\nACBB\n''') == '''5 4'''\nassert solution('''\n6 5\nABC\nACBB\nABA\nBCB\nABC\nACBB\n''') == '''5 4'''\nassert solution('''\n5 3\nCBD\nABC\nACBD\nABB\nCAB\n''') == '''2 5'''\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7') == '7 4'\nassert solution('7 5\\nABCD\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n201 202\\n202 203\\n203 204\\n204 205\\n205 206\\n206 207\\n207 208\\n208 209\\n209 210\\n210 211\\n211 212\\n212 213\\n213 214\\n214 215\\n215 216\\n216 217\\n217 218\\n218 219\\n219 220\\n220 221\\n221 222\\n222 223\\n223 224\\n224 225\\n225 226\\n226 227\\n227 228\\n228 229\\n229 230\\n230 231\\n231 232\\n232 233\\n233 234\\n234 235\\n235 236\\n236 237\\n237 238\\n238 239\\n239 240\\n240 241\\n241 242\\n242 243\\n243 244\\n244 245\\n245 246\\n246 247\\n247 248\\n248 249\\n249 250\\n250 251\\n251 252\\n252 253\\n253 254\\n254 255\\n255 256\\n256 257\\n257 258\\n258 259\\n259 260\\n260 261\\n261 262\\n262 263\\n263 264\\n264 265\\n265 266\\n266 267\\n267 268\\n268 269\\n269 270\\n270 271\\n271 272\\n272 273\\n273 274\\n274 275\\n275 276\\n276 277\\n277 278\\n278 279\\n279 280\\n280 281\\n281 282\\n282 283\\n283 284\\n284 285\\n285 286\\n286 287\\n287 288\\n288 289\\n289 290\\n290 291\\n291 292\\n292 293\\n293 294\\n294 295\\n295 296\\n296 297\\n297 298\\n298 299\\n299 300\\n300 301\\n301 302\\n302 303\\n303 304\\n304 305\\n305 306\\n306 307\\n307 308\\n308 309\\n309 310\\n310 311\\n311 312\\n312 313\\n313 314\\n314 315\\n315 316\\n316 317\\n317 318\\n318 319\\n319 320\\n320 321\\n321 322\\n322 323\\n323 324\\n324 325\\n325 326\\n326 327\\n327 328\\n328 329\\n329 330\\n330 331\\n331 332\\n332 333\\n333 334\\n334 335\\n335 336\\n336 337\\n337 338\\n338 339\\n339 340\\n340 341\\n341 342\\n342 343\\n343 344\\n344 345\\n345 346\\n346 347\\n347 348\\n348 349\\n349 350\\n350 351\\n351 352\\n352 353"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"7 4\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '7 4'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '7 4'\nassert solution('7 8') == '5 6'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 5\\nACDBB\\n5 6\\n8 9\\n4 13\\n1 10\\n7 4\\n10 9\\n3 7\\n') == '7 4\\n'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([7, 5]) == \"7 4\"\nassert solution([5, 6]) == \"8 9\"\nassert solution([8, 9]) == \"4 13\"\nassert solution([4, 13]) == \"1 10\"\nassert solution([1, 10]) == \"7 4\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"7 4\"\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '7 4'"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE'\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 LET A = 1\\n10 PRINT 'HELLO '\\n20 PRINTLN A\\n30 LET A = A + 1\\n40 IF A <= 5 THEN GOTO 20\\n50 PRINTLN A\\n60 LET A = A + 1\\n70 IF A <= 5 THEN GOTO 20\\n80 PRINTLN A\\n90 LET A = A + 1\\n100 IF A <= 5 THEN GOTO 20\\n110 PRINTLN A\\n120 LET A = A + 1\\n130 IF A <= 5 THEN GOTO 20\\n140 PRINTLN A\\n150 LET A = A + 1\\n160 IF A <= 5 THEN GOTO 20\\n170 PRINTLN A\\n180 LET A = A + 1\\n190 IF A <= 5 THEN GOTO 20\\n200 PRINTLN A\\n210 LET A = A + 1\\n220 IF A <= 5 THEN GOTO 20\\n230 PRINTLN A\\n240 LET A = A + 1\\n250 IF A <= 5 THEN GOTO 20\\n260 PRINTLN A\\n270 LET A = A + 1\\n280 IF A <= 5 THEN GOTO 20\\n290 PRINTLN A\\n300 LET A = A + 1\\n310 IF A <= 5 THEN GOTO 20\\n320 PRINTLN A\\n330 LET A = A + 1\\n340 IF A <= 5 THEN GOTO 20\\n350 PRINTLN A\\n360 LET A = A + 1\\n370 IF A <= 5 THEN GOTO 20\\n380 PRINTLN A\\n390 LET A = A + 1\\n400 IF A <= 5 THEN GOTO 20\\n410 PRINTLN A\\n420 LET A = A + 1\\n430 IF A <= 5 THEN GOTO 20\\n440 PRINTLN A\\n450 LET A = A + 1\\n460 IF A <= 5 THEN GOTO 20\\n470 PRINTLN A\\n480 LET A = A + 1\\n490 IF A <= 5 THEN GOTO 20\\n500 PRINTLN A\\n510 LET A = A + 1\\n520 IF A <= 5 THEN GOTO 20\\n530 PRINTLN A\\n550 LET A = A + 1\\n560 IF A <= 5 THEN GOTO 20\\n570 PRINTLN A\\n580 LET A = A + 1\\n590 IF A <= 5 THEN GOTO 20\\n600 PRINTLN A\\n610 LET A = A + 1\\n620 IF A <= 5 THEN GOTO 20\\n630 PRINTLN A\\n650 LET A = A + 1\\n660 IF A <= 5 THEN GOTO 20\\n670 PRINTLN A\\n680 LET A = A + 1\\n690 IF A <= 5 THEN GOTO 20\\n700 PRINTLN A\\n710 LET A = A + 1\\n720 IF A <= 5 THEN GOTO 20\\n730 PRINTLN A\\n750 LET A = A + 1\\n760 IF A <= 5 THEN GOTO 20\\n770 PRINTLN A\\n780 LET A = A + 1\\n790 IF A <= 5 THEN GOTO 20\\n800 PRINTLN A\\n810 LET A = A + 1\\n820 IF A <= 5 THEN GOTO 20\\n830 PRINTLN A\\n850 LET A = A + 1\\n860 IF A <= 5 THEN GOTO 20\\n870 PRINTLN A\\n880 LET A = A + 1\\n890 IF A <= 5 THEN GOTO 20\\n900 PRINTLN A\\n910 LET A = A + 1\\n920 IF A <= 5 THEN GOTO 20\\n930 PRINTLN A\\n940 LET A = A + 1\\n950 IF A <= 5 THEN GOTO 20\\n960 PRINTLN A\\n970 LET A = A + 1\\n980 IF A <= 5 THEN GOTO 20\\n990 PRINTLN A\\n1000 LET A = A + 1\\n1010 IF A <= 5 THEN GOTO 20\\n1020 PRINTLN A\\n1030 LET A = A + 1\\n1040 IF A <= 5 THEN GOTO 20\\n1050 PRINTLN A\\n1060 LET A = A + 1\\n1070 IF A <= 5 THEN GOTO 20\\n1080 PRINTLN A\\n1100 LET A = A + 1\\n1110 IF A <= 5 THEN GOTO 20\\n1120 PRINTLN A\\n1130 LET A = A + 1\\n1140 IF A <= 5 THEN GOTO 20\\n1150 PRINTLN A\\n1160 LET A = A + 1\\n1170 IF A <= 5 THEN GOTO 20\\n1180 PRINTLN A\\n1190 LET A = A + 1\\n1200 IF A <= 5 THEN GOTO 20\\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10 LET A = 1\n20 PRINT \"HELLO THERE \"\n30 PRINTLN A\n40 LET A = A + 1\n50 IF A <= 5 THEN GOTO 20\n60 PRINTLN \"DONE\"\n\"\"\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n\n\"\"\"\n\n--- Day 3: Toboggan Trajectory ---\nThe Elves in accounting just need you to fix your expense report (your puzzle input); apparently, something isn't quite adding up.\n\nSpecifically, they need you to find the two entries that sum to 2020 and then multiply those two numbers together.\n\nFor example, suppose your expense report contained the following:\n\n1721\n979\n366\n299\n675\n1456\nIn this list, the two entries that sum to 2020 are 1721 and 299. Multiplying them together produces 1721 * 299 = 514579, so the correct answer is 514579.\n\nOf course, your expense report is much larger. Find the two entries that sum to 2020; what do you get if you multiply them together?\n\n\"\"\"\n\nfrom utils import *"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\nassert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN A\\n70 LET A = A + 1\\n80 PRINT 'GOODBYE'\\n90 PRINTLN A\\n100 IF A <= 5 THEN GOTO 20\\n110 PRINTLN A\\n120 LET A = A + 1\\n130 PRINT 'GOODBYE'\\n140 PRINTLN A\\n150 LET A = A + 1\\n160 PRINT 'GOODBYE'\\n170 LET A = A + 1\\n180 PRINTLN A\\n190 PRINTLN A\\n200 PRINT 'GOODBYE'\\n210 LET A = A + 1\\n220 PRINTLN A\\n230 PRINTLN A\\n240 PRINT 'GOODBYE'\\n250 LET A = A + 1\\n260 PRINTLN A\\n270 LET A = A + 1\\n280 PRINT 'GOODBYE'\\n290 PRINTLN A\\n300 PRINTLN A\\n310 LET A = A + 1\\n320 PRINTLN A\\n330 PRINTLN A\\n340 PRINT 'GOODBYE'\\n350 LET A = A + 1\\n360 PRINTLN A\\n370 LET A = A + 1\\n380 PRINT 'GOODBYE'\\n390 PRINTLN A\\n400 PRINTLN A\\n410 LET A = A + 1\\n420 PRINTLN A\\n430 LET A = A + 1\\n440 PRINT 'GOODBYE'\\n450 LET A = A + 1\\n460 PRINTLN A\\n470 LET A = A + 1\\n480 PRINT 'GOODBYE'\\n490 PRINTLN A\\n500 PRINTLN A\\n510 LET A = A + 1\\n520 PRINTLN A\\n530 PRINTLN A\\n540 PRINT 'GOODBYE'\\n550 LET A = A + 1\\n560 PRINTLN A\\n570 LET A = A + 1\\n580 PRINT 'GOODBYE'\\n590 PRINTLN A\\n600 PRINTLN A\\n610 LET A = A + 1\\n620 PRINTLN A\\n630 PRINTLN A\\n640 PRINT 'GOODBYE'\\n650 LET A = A + 1\\n660 PRINTLN A\\n670 LET A = A + 1\\n680 PRINT 'GOODBYE'\\n690 PRINTLN A\\n700 PRINTLN A\\n710 LET A = A + 1\\n720 PRINTLN A\\n730 PRINTLN A\\n740 PRINT 'GOODBYE'\\n750 LET A = A + 1\\n760 PRINTLN A\\n770 LET A = A + 1\\n780 PRINT 'GOODBYE'\\n790 PRINTLN A\\n800 PRINTLN A\\n810 LET A = A + 1\\n820 PRINTLN A\\n830 PRINTLN A\\n840 PRINT 'GOODBYE'\\n850 LET A = A + 1\\n860 PRINTLN A\\n870 LET A = A + 1\\n880 PRINT 'GOODBYE'\\n890 PRINTLN A\\n900 PRINTLN A\\n910 LET A = A + 1\\n920 PRINTLN A\\n930 PRINTLN A\\n940 PRINT 'GOODBYE'\\n950 LET A = A + 1\\n960 PRINTLN A\\n970 LET A = A + 1\\n980 PRINT 'GOODBYE'\\n990 PRINTLN A\\n1000 PRINTLN A\\n1010 LET A = A + 1\\n1020 PRINTLN A\\n1030 PRINTLN A\\n1040 PRINT 'GOODBYE'\\n1050 LET A = A + 1\\n1060 PRINTLN A\\n1070 LET A = A + 1\\n1080 PRINT 'GOODBYE'\\n1090 PRINTLN A\\n1100 PRINTLN A\\n1110"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \") == \"HELLO THERE 1\"\nassert solution(\"10 LET A = 1\\n20 PRINTLN A\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \") == \"HELLO THERE 2\"\nassert solution(\"10 LET A = 1\\n20 PRINT \") == \"HELLO THERE 1\"\nassert solution(\"10 LET A = 1\\n20 PRINTLN A\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \") == \"HELLO THERE 2\"\nassert solution(\"10 LET A = 1\\n20 PRINT \") == \"HELLO THERE 1\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \") == \"HELLO THERE 1\\n\"\nassert solution(\"10 LET A = 1\\n20 PRINTLN A\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN A\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\\n\"\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT \"\n                 \"\\\"HELLO THERE \"\n                 \"\\\"\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN \\\"DONE\\\"\\n\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\""
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 0 1\n0 1\nSample Input 2:\n2\n3 2 1\n0 1\nSample Output 2:\n8\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n2 1\n2 1\n''') == '6'\n\nassert solution('''\n3\n3 0 1\n0 1\n1 0\n''') == '1'\n\nassert solution('''\n4\n3 0 1\n0 1\n1 2\n''') == '8'\n\nassert solution('''\n5\n3 0 1\n0 2\n2 1\n1 0\n''') == '3'\n\nassert solution('''\n6\n3 0 1\n0 2\n1 3\n2 1\n1 0\n''') == '2'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 0 1\\n0 1\\n') == '3'\nassert solution('2 2 2\\n0 1\\n1 1\\n') == '6'\nassert solution('2 1 2\\n0 1\\n1 1\\n') == '8'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('6') == '6'\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n1 0\n0 1\n\"\"\"\n) == \"3\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('3') == '3'\n\"\"\""
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n3 0 1\n0 1\n3 1 0\n0 1\n3 2 0\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n3 0 1\n0 1\n\"\"\") == \"3\""
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 0 1\n0 1\n''') == '3'"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'RRLLLRRRR'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRLLRLLLLRRLLLLRRLLRRRRRLLRRRRLLRRLLRRRRLLRRRRLLRRRRRRRRLLRRRRLLRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRLLRRRRRRRRLLRRRRLLRRRRRRLLRRRRRRLLRRRRLLRRRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRRRLLRRRRRRLLRRRRRRRRLLRRRRLLRRRRRRLLRRRRRRLLRRRRRRRRLLRRRRLLRRRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRRRLLRRRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRRRRRLLRRRRLLRRRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRRRRLLRRRRRRLLRR"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'LLRRRRLL', solution('5')\nassert solution('1 2') == 'LLRLR', solution('1 2')\nassert solution('2 5') == 'LLRRRRLL', solution('2 5')\nassert solution('2 3') == 'LLRRRLR', solution('2 3')\nassert solution('1 3') == 'impossible', solution('1 3')\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == \"LLRRRRLL\"\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LRRLR'\n\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'RRLLLLLL'\n\nassert solution('''\n6\n1 2\n2 3\n2 4\n3 4\n3 5\n4 5\n3 6\n1 3\n''') == 'impossible'\n\nassert solution('''\n4\n1 2\n2 3\n2 4\n''') == 'RRLLRLRRRLR'\n\nassert solution('''\n5\n1 2\n2 3\n2 4\n3 4\n3 5\n''') == 'LRRLRRLLLRRRLL'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"LLRRRRLL\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"RRLLRRLL\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"RRLLRRRRLLLL\"\n\nassert solution(\"5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n\") == \"RRLLRRRRLLRRRRLLLLLL\"\n\n\n\n---\n\nThe first solution is more simple:"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LLRRRRLL'\nassert solution('10\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'LLRRRRLL'\nassert solution('4\\n1 2\\n2 5\\n2 3\\n1 3\\n') == 'LLRRRRLL'\nassert solution('6\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'RLRRRLLLL'\nassert solution('100\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'RLRRRLLLLLLLRRRRLLLL'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'LLRRRRLL'\nassert solution('2') == 'LLRLRRLR'\n\nSample Input:\n3\n1 2\n2 3\n3 4\nSample Output:\n
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3\\n') == 'RLRRRLL'"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2\\n2 5\\n2 3\\n1 3\\n3 5\\n4 5\\n3 4\\n1 3') == 'RRLLRLRLR'\nassert solution('1\\n3') == 'impossible'"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL', 'First'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRLRRLR', 'Second'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1009 2011\\n1017 2011\\n\") == \"1\\n2011\\n\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1009 2011\n1017 2011\n''') == '1\\n2011'\nassert solution('''\n2\n1009 2011\n1015 2011\n''') == '1\\n2011'\nassert solution('''\n1\n1009\n''') == '1\\n1009'\n'''\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1\n1009 2011\n1017 2011\"\"\") == \"2011\"\nassert solution(\"\"\"2\n1009 2011\n1018 2011\"\"\") == \"2001\"\nassert solution(\"\"\"2\n1009 2011\n1018 2011\"\"\") == \"1001\"\n\"\"\"\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1009 2011\n1017 2011\n1019 2011\n''') == '1\\n2011'\n\"\"\"\n\nfrom math import factorial\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011') == '1\\n2011\\n', solution('2\\n1009 2011\\n1017 2011')\nassert solution('3\\n835 951\\n1417 923\\n1465 923\\n1764 923\\n1865 923\\n1944 923\\n1972 923\\n1865 923\\n1984 923\\n1991 923\\n1887 923\\n1954 923\\n1969 923\\n1845 923\\n1935 923\\n1959 923\\n1875 923\\n1955 923\\n1969 923\\n1877 923\\n1952 923\\n1956 923\\n1879 923\\n1960 923\\n1960 923\\n1949 923\\n1957 923\\n1870 923\\n1958 923\\n1881 923\\n1943 923\\n1943 923\\n1944 923\\n1945 923\\n1880 923\\n1949 923\\n1946 923\\n1880 923\\n1950 923\\n1952 923\\n1884 923\\n1951 923\\n1951 923\\n1888 923\\n1951 923\\n1954 923\\n1947 923\\n1882 923\\n1950 923\\n1951 923\\n1888 923\\n1949 923\\n1884 923\\n1957 923\\n1952 923\\n1940 923\\n1883 923\\n1950 923\\n1953 923\\n1931 923\\n1883 923\\n1938 923\\n1882 923\\n1940 923\\n1942 923\\n1951 923\\n1928 923\\n1942 923\\n1947 923\\n1955 923\\n1887 923\\n1947 923\\n1938 923\\n1939 923\\n1936 923\\n1938 923\\n1932 923\\n1896 923\\n1948 923\\n1895 923\\n1933 923\\n1895 923\\n1940 923\\n1953 923\\n1892 923\\n1939 923\\n1946 923\\n1940 923\\n1938 923\\n1888 923\\n1939 923\\n1932 923\\n1897 923\\n1950 923\\n1932 923\\n1898 923\\n1940 923\\n1934 923\\n1895 923\\n1930 923\\n1932 923\\n1896 923\\n1940 923\\n1934 923\\n1895 923\\n1934 923\\n1935 923\\n1890 923\\n1947 923\\n1893 923\\n1933 923\\n1895 923\\n1943 923\\n1932 923\\n1896 923\\n1938 923\\n1927 923\\n1897 923\\n1937 923\\n1926 923\\n1897 923\\n1936 923\\n1925 923\\n1894 923\\n1930 923\\n1926 923\\n1927 923\\n1931 923\\n1896 923\\n1930 923\\n1925 923\\n1894 923\\n1937 923\\n1925 923\\n1895 923\\n1935 923\\n1890 923\\n1940 923\\n1927 923\\n1927 923\\n1887 923\\n1934 923\\n1927 923\\n1892 923\\n1938 923\\n1923 923\\n1895 923\\n1930 923\\n1931 923\\n1895 923\\n1925 923\\n1927 923\\n1930 923\\n1926 923\\n1886 923\\n1932 923\\n1925 923\\n1888 923\\n1930 923\\n1931 923\\n1937 923\\n1892 923\\n1932 923\\n1887 923\\n1928 923\\n1927 923\\n1935 923\\n1891 923\\n1931 923\\n1937 923\\n1887 923\\n1932 923\\n1925 923\\n1937 923\\n1932 923\\n1929 923\\n1888 923\\n1930 923\\n1928 923\\n1897 923\\n1937 923\\n1930 923\\n1930 923\\n1932 923\\n1893 923\\n1928 923\\n1932 923\\n1939 923\\n1890 923\\n1930 923\\n1935 923\\n1886 923\\n1935 923\\n1940 923\\n1923 923\\n1890 923\\n1929 923\\n1931 923\\n1887 923\\n1933 923\\n1925 923\\n1890 923\\n1934 923\\n1923 923\\n1893 923\\n1932 923\\n1935 923\\n1928 923\\n1896 923\\n1932 923\\n1886 923\\n1936 923\\n1891 923\\n1935 923\\n1923 923\\n1888 923\\n1938 923\\n1932 923\\n1927 923\\n1896 923\\n1940 923\\n1923 923\\n1947 923\\n1886 923\\n1937 923\\n1927 923\\n1931 923\\n1937 923\\n1930 923\\n1932 923\\n1927 923\\n1889 923\\n1931 923\\n1925 923\\n1928 923\\n1930 923\\n1925 923\\n1886 923\\n1930 923\\n1926 923\\n1885 923\\n1932 923\\n1927 923\\n1929 923\\n1932 923\\n1927 923\\n1887 923\\n1928 923\\n1932"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1001\\n1002\\n') == '2\\n1002\\n'\nassert solution('2\\n1001\\n1019\\n') == '3\\n1019\\n'"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n1\n2011\n2\n2012\n3\n2013\n4\n2014\n5\n2015\n6\n2016\n7\n2017\n8\n2018\n9\n2019\n10\n2020\n11\n2021\n12\n2022\n13\n2023\n14\n2024\n15\n2025\n16\n2026\n17\n2027\n18\n2028\n19\n2029\n2030\n2031\n2032\n2033\n2034\n2035\n2036\n2037\n2038\n2039\n2040\n2041\n2042\n2043\n2044\n2045\n2046\n2047\n2048\n2049\n2050\n2051\n2052\n2053\n2054\n2055\n2056\n2057\n2058\n2059\n2060\n2061\n2062\n2063\n2064\n2065\n2066\n2067\n2068\n2069\n2070\n2071\n2072\n2073\n2074\n2075\n2076\n2077\n2078\n2079\n2080\n2081\n2082\n2083\n2084\n2085\n2086\n2087\n2088\n2089\n2090\n2091\n2092\n2093\n2094\n2095\n2096\n2097\n2098\n2099\n2100\n2101\n2102\n2103\n2104\n2105\n2106\n2107\n2108\n2109\n2110\n2111\n2112\n2113\n2114\n2115\n2116\n2117\n2118\n2119\n2120\n2121\n2122\n2123\n2124\n2125\n2126\n2127\n2128\n2129\n2130\n2131\n2132\n2133\n2134\n2135\n2136\n2137\n2138\n2139\n2140\n2141\n2142\n2143\n2144\n2145\n2146\n2147\n2148\n2149\n2150\n2151\n2152\n2153\n2154\n2155\n2156\n2157\n2158\n2159\n2160\n2161\n2162\n2163\n2164\n2165\n2166\n2167\n2168\n2169\n2170\n2171\n2172\n2173\n2174\n2175\n2176\n2177\n2178\n2179\n2180\n2181\n2182\n2183\n2184\n2185\n2186\n2187\n2188\n2189\n2190\n2191\n2192\n2193\n2194\n2195\n2196\n2197\n2198\n2199\n2200\n2201\n2202\n2203\n2204\n2205\n2206\n2207\n2208\n2209\n2210\n2211\n2212\n2213\n2214\n2215\n2216\n2217\n2218\n2219\n2220\n2221\n2222\n2223\n2224\n2225\n2226\n2227\n2228\n2229\n2230\n2231\n2232\n2233\n2234\n2235\n2236\n2237\n2238\n2239\n2240\n2241\n2242\n2243\n2244\n2245\n2246\n2247\n2248\n2249\n2250\n2251\n2252\n2253\n2254\n2255\n2256\n2257\n2258\n2259\n2260\n2261\n2262\n2263\n2264\n2265\n2266\n2267\n2268\n2269\n2270\n2271\n2272\n2273\n2274\n2275\n2276\n2277\n2278\n2279\n2280\n2281\n2282\n2283\n2284\n2285\n2286\n2287\n2288\n2289\n2290\n2291\n2292\n2293\n2294\n2295\n2296\n2297\n2298\n2299\n2300\n2301\n2302\n2303\n2304\n2305\n2306\n2307\n2308\n2309\n2310\n2311\n2312\n2313\n2314\n2315\n2316\n2317\n2318\n2319\n2320\n2321\n2322\n2323\n2324\n2325\n2326\n2327\n2328\n2329\n2330\n2331\n2332\n2333\n2334\n2335\n2336\n2337\n2338\n2339\n2340\n2341\n2342\n2343\n2344\n2345\n2346\n2347\n2348\n2349\n2350\n2351\n2352\n2353\n2354\n2355\n2356\n2357\n2358\n2359\n2360\n2361\n2362\n2363\n2364\n2365\n2366\n2367\n2368\n2369\n2370\n2371\n2372\n2373\n2374\n2375\n2376\n2377\n2378\n2379\n2380\n2381\n2382\n2383\n2384\n2385\n2386\n2387\n2388\n2389\n2390\n2391\n2392\n2393\n2394\n2395\n2396\n2397\n2398\n2399\n2400\n2401\n2402\n2403\n2404\n2405\n2406\n2407\n2408\n2409\n2410\n2411\n2412\n2413\n2414\n2415\n2416\n2417\n2418\n2419\n2420\n2421\n2422\n2423\n2424\n2425\n2426\n2427\n2428\n2429\n2430\n2431\n2432\n2433\n2434\n2435\n2436\n2437\n2438\n2439\n2440\n2441\n2442\n2443\n2444\n2445\n2446\n2447\n2448\n2449\n2450\n2451\n2452\n2453\n2454\n2455\n2456\n2457\n2458\n2459\n2460\n2461\n2462\n2463\n2464\n2465\n2466\n2467\n2468\n2469\n2470\n2471\n2472\n2473\n2474\n2475\n2476\n2477\n2478\n2479\n2480\n2481\n2482\n2483\n2484\n2485\n2486\n2487\n2488\n2489\n2490\n2491\n2492\n2493\n2494\n2495\n2496\n2497\n2498\n2499\n2500\n2501\n2502\n2503\n2504\n250"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011\\n') == '1\\n2011'"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4 4\") == \"0 3\"\nassert solution(\"0 1 100\") == \"0 2\"\nassert solution(\"0 2 100\") == \"0 1\"\nassert solution(\"1 3 100\") == \"0 2\"\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '0 3'\n'''\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1\n1 2 1\n1 2 3\n1 3 2\n1 3 3\n2 3 1\n2 3 3''') == '0 3'''\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n0 1 100\\n0 2 100\\n1 3 100\\n2 3 100\\n0 3\") == \"0 3\"\n\n'''\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0 3'\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n\"\"\") == \"0 3\""
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n'''\n\nimport sys\nimport os\nimport math\nimport time\nfrom collections import defaultdict\n\nsys.setrecursionlimit(10**6)"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3''') == '0 3'\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0 3\"\n\nimport itertools\nimport math\nimport re\nfrom collections import Counter\nfrom collections import defaultdict"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2.0 10.0\") == \"20\"\nassert solution(\"3 3 0 0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.0 10.0') == '20'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == \"20\"\nassert solution('''2.0 10.0\n3 3 0 0\n100 10 100 100\n100 100 100 100\n100 0 0\n''') == \"5.2\"\nassert solution('''2.0 10.0\n3 3 0 0\n10 20 20 20\n20 30 30 30\n30 40 40 40\n40 50 50 50\n50 60 60 60\n60 70 70 70\n70 80 80 80\n80 90 90 90\n90 100 100 100\n100 110 110 110\n110 120 120 120\n120 130 130 130\n130 140 140 140\n140 150 150 150\n150 160 160 160\n160 170 170 170\n170 180 180 180\n180 190 190 190\n190 200 200 200 200\n200 210 210 210\n210 220 220 220 220\n220 230 230 230 230\n230 240 240 240 240\n240 250 250 250 250\n250 260 260 260 260\n260 270 270 270 270\n270 280 280 280 280\n280 290 290 290 290\n290 300 300 300 300\n300 310 310 310 310\n310 320 320 320 320\n320 330 330 330 330\n330 340 340 340 340\n340 350 350 350 350\n350 360 360 360 360\n360 370 370 370 370\n370 380 380 380 380\n380 390 390 390 390\n390 400 400 400 400\n400 410 410 410 410\n410 420 420 420 420\n420 440 440 440 440\n440 450 450 450 450\n450 460 460 460 460\n460 470 470 470 470\n470 480 480 480 480\n480 490 490 490 490\n490 500 500 500 500\n500 510 510 510 510\n510 520 520 520 520\n520 530 530 530 530\n530 540 540 540 540\n540 550 550 550 550\n550 560 560 560 560\n560 570 570 570 570\n570 580 580 580 580\n580 590 590 590 590\n590 600 600 600 600\n600 610 600 610 610\n610 620 620 620 620\n620 630 630 630 630\n630 640 640 640 640\n640 650 650 650 650\n650 660 660 660 660\n660 670 670 670 670\n670 680 680 680 680\n680 690 690 690 690\n690 700 700 700 700\n700 710 700 710 710\n710 720 720 720 720\n720 730 730 730 730\n730 740 740 740 740\n740 750 750 750 750\n750 760 760 760 760\n760 780 780 780 780\n780 790 790 790 790\n790 800 800 800 800 800\n800 810 800 810 810 810\n810 820 820 820 820\n820 830 830 830 830 830\n830 840 840 840 840 840\n840 860 860 860 860 860\n860 870 870 870 870 870 870\n871 880 880 880 880 880 880\n880 891 891 891 891 891 891\n892 900 900 900 900 900 900\n900 910 900 910 910 910 910\n910 920 920 920 920 920 920 920\n920 930 930 930 930 930 930\n930 940 940 940 940 940 940\n940 950 950 950 950 950 950 950\n950 960 960 960 960 960 960 960\n960 970 970 970 970 970 970 970\n970 980 980 980 980 980 980 980\n980 990 990 990 990 990 990 990\n990 1000 1000 1000 1000 1000 1000\n1000 1010 1000 1010 1000 1010 1000\n1010 1010 1010 1010 1010 1010 1010 1010\n1010 1110 1000 1110 1000 1110 1000 1110\n1110 1111 1111 1111 1111 1111 1111 1111 1111\n1112 1112 1112 1112 1112 1112 1112 1112 1112\n1113 1113 1113 1113 1113 1113 1113 1113 1113\n1114 1114 1114 1114 1114 1114 1114 1114 1114\n1115 1115 1115 1115 1115 1115 1115 1115 1115 1115\n1116 1116 1116 1116 1116 1116 1116 1116 1116 1116\n1117 1117 1117 1117 1117 1117 1117 1117 1117 1117\n1118 1118 1118 1118 1118 1118 1118 1118 1118 1118\n1119 1119 1119 1119 1119 1119 1119 1119 1119 1119 1119\n1120 1120 1120 1120 1120 1120 1120 1120 1120 1120 1120\n1130 1130 1130 1130 1130 1130 1130 1130 1130 1130 1130\n1131 1131 1131 1131 1131 1131 1131 1131 1131 1131 1131\n1132 1132 1132 1132 1132 1132 1132 1132 1132 1132 1132\n1133 1133 1133 1133 1133 1133 1133 1133 1133 1133 1133\n11"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '20'\nprint(solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0'''))\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\") == \"20\"\nassert solution(\"2.0 10.0\\n3 3 0 0\\n1001 1000 100\\n2001 1000 100\\n100 0 0\") == \"20\"\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '20'\n\nassert solution(input_data=\"3.0 10.0\") == \"20\"\nassert solution(input_data=\"1.0 10.0\") == \"1.0\"\n\"\"\"\n\nfrom math import exp, cos, pi\nfrom typing import List\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n0.5 0.5\n10\n10 1 5\n5 2 10\n3 4 1\n''') == '20.0'"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2.0 10.0') == \"20.0\"\nassert solution('3 3 0 0') == \"20.0\"\nassert solution('2001 1000 100') == \"20.0\"\nassert solution('1001 10000 200') == \"20.0\"\nassert solution('100 0 0') == \"20.0\""
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2.0 10.0\\n3 3 0 0\\n2001 1000 100\\n1001 10000 200\\n100 0 0\\n') == '20'"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '4'\nassert solution('0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0') == '1'\nassert solution
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n0 1 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\") == \"4\"\nassert solution(\"3\\n0 2 3\\n0 1 3\\n1 1 2\\n\") == \"2\"\nassert solution(\"7\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n0 1 2 3 4 5 6\\n\") == \"2\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"0 2 3 4 5 6\") == \"4\"\nassert solution(\"0 1 3 4 5 6\") == \"4\"\nassert solution(\"1 6 5 4 2 1\") == \"4\"\nassert solution(\"2 6 5 3 2 1\") == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\nSample Output 2:\") == \"4\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\") == \"4\"\nassert solution(\"5\\n0 1 3 4 5 6\\n0 2 3 4 5 6\\n0 1 3 2 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n\") == \"3\"\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '4'\nassert solution('0 2 3 4 5 6') == '4'\nassert solution('0 1 3 4 5 6') == '3'\nassert solution('1 6 5 4 2 1') == '3'\nassert solution('2 6 5 3 2 1') == '2'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '4'\nassert solution('1 2 3 4 5 6') == '4'\nassert solution('0 1 3 4 5 6') == '3'\nassert solution('0 2 4 3 1 6') == '3'\nassert solution('1 6 5 4 2 1') == '2'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n0 1 3 4 5 6') == '4'\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n1 2 1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '4'\nassert solution('0 2 3 4 5 6') == '3'\nassert solution('0 1 3 4 5 6') == '3'\nassert solution('1 6 5 4 2 1') == '1'\nassert solution('2 6 5 3 2 1') == '2'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    4\n    1 1\n    1 2 3 4\n    2 3 4 5\n    3 4 5 6\n    4 5 6 7\n''') == '4'\nassert solution('''\n    8\n    1 1\n    1 2 3 4 5\n    1 2 3 4 5 6\n    1 2 3 4 5 6 7\n    1 2 3 4 5 6 7 8\n    1 2 3 4 5 6 7 8 9\n    1 2 3 4 5 6 7 8 9 10\n    1 2 3 4 5 6 7 8 9 10 11\n    1 2 3 4 5 6 7 8 9 10 11 12\n    1 2 3 4 5 6 7 8 9 10 11 12 13\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52\n    1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53\n    "
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '1'\nassert solution('1 2 3 4') == '5'\nassert solution('2 3 4 5') == '6'\nassert solution('3 4 5 6') == '7'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7''') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nassert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '7'\nassert solution('5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '6'\nassert solution('7\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n6 7') == '8'\nassert solution('6\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 6 7') == '5'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2\n1 2\n3''') == '3'\n\nassert solution('''10\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n''') == '9'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n') == '4'"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 1\n1 2 3 4\n2 3 4 5\n3 4 5 6\n4 5 6 7\n''') == '4'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nassert solution('16\\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5\\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3') == '16'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6') == '4'\nassert solution('10\\n1 1\\n1 2 3 4 5 6 7 8 9 10\\n1 1\\n2 3 4 5 6 7 8 9 10') == '10'\nassert solution('10\\n1 1\\n1 2 3 4 5 6 7 8 9 10\\n1 1\\n2 3 4 5 6 7 8 9 10') == '11'\nassert solution('10000\\n1 1\\n1 2 3 4 5 6 7 8 9 10\\n1 1\\n2 3 4 5 6 7 8 9 10') == '10001'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('3\\n1.0 1.0\\n3.1 1.0\\n3.1 3.1') == '4'\nassert solution('10\\n0.0 0.0\\n1.0 1.0\\n0.1 0.1\\n0.1 0.1\\n1.0 1.0\\n1.0 1.0\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\n0.9 0.9\\"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n') == '6'\nassert solution('5\\n2.0 1.0\\n1.0 2.0\\n1.0 3.1\\n2.0 3.1\\n3.0 2.0\\n') == '4'\nassert solution('5\\n1.0 2.0\\n1.0 3.1\\n2.0 3.1\\n3.0 2.0\\n') == '3'\nassert solution('5\\n1.0 2.0\\n1.0 3.1\\n2.0 3.1\\n3.0 2.0\\n4.2 3.1\\n5.1 3.1\\n') == '4'\nassert solution('5\\n1.0 2.0\\n1.0 3.1\\n2.0 3.1\\n3.0 2.0\\n4.2 3.1\\n5.1 3.1\\n5.1 3.1\\n') == '5'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n3.1 1.0') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '7'\n\"\"\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1.0 1.0\n3.1 1.0\n1.0 3.1\n3.1 3.1\n4.2 3.1''') == '6'\nprint('The local tests are passing!')"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n1.0 1.0\") == \"3\"\nassert solution(\"3\\n1.0 3.1\") == \"4\"\nassert solution(\"5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\") == \"6\"\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '7'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '5'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '5'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('10\\n1.1 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1\\n1.1 2.0\\n3.1 2.0\\n1.0 4.0\\n4.2 3.1') == '7'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2\n2\n2''') == \"5\"\n\nassert solution('''1\n2\n2\n2''') == \"4\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n'.join([\n    '3',\n    '2',\n    '2',\n    '2',\n])) == '5'\n\nassert solution('\\n'.join([\n    '3',\n    '3',\n    '2',\n    '2',\n])) == '7'\n\nassert solution('\\n'.join([\n    '3',\n    '4',\n    '3',\n    '2',\n])) == '10'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n2\n2\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n2\n1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n2\n2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3\n2\n3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6\n2\n2\n2\n1\n1\n\"\"\") == \"4\""
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2\n2\n2\n''') == '5'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"5\"\nassert solution([5,2,2,2]) == \"5\""
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n2') == '1'\nassert solution('3\\n2\\n2') == '2'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n2''') == '5'\nassert solution('''3\n3\n3\n3\nSample Input:\n2\n2\n1\nSample Output:\n6''') == '5'\n\n'''\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n2\\n2') == '2'\nassert solution('2\\n2\\n2\\n1\\n1') == '2'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n3\\n4\\n5\\n') == '1'\nassert solution('3\\n3\\n4\\n5\\n') == '3'\nassert solution('1\\n2\\n3\\n4\\n') == '2'\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 3\n2 2 2 1\n''') == '1 1'\n\nassert solution('''\n10 20\n10 20 10 10 10\n''') == '10 10'\n\nassert solution('''\n10 3\n4 4 4 1\n''') == '1 2'\n\nassert solution('''\n1 1\n1 1\n''') == '1 1'\n\nassert solution('''\n2 2\n1 1\n''') == '1 1'"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 2 2') == '1 1'"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 3\n2 2 2 1\n\"\"\") == \"1 2\"\n\nassert solution(\"\"\"\n1 3\n2 2 1\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n1 6\n5 3 2 1\n\"\"\") == \"2 2\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1 1'\nassert solution('10 10') == '9 9'\nassert solution('8 6') == '0 1'\n\"\"\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3\n2 2 2 1\n''') == '1 1'\n\nassert solution('''\n2 3\n2 2 2 1\n''') == '1 1'\n\nassert solution('''\n3 3\n2 2 2 1\n''') == '1 1'\n\nassert solution('''\n3 3\n1 2 2 1\n''') == '2 1'\n\nassert solution('''\n1 9\n2 2 2 1\n''') == '1 1'"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '1 2 2 1\\n') == '1 1\\n'\nassert solution(\n    '2 2 2 1\\n') == '2 1\\n'\nassert solution(\n    '2 5 2 1\\n') == '2 2\\n'\nassert solution(\n    '3 3 2 1\\n') == '1\\n'\nassert solution(\n    '4 6 2 1\\n') == '1\\n'\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n2 2 2 1\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n10\n3 6 8 2\n\"\"\") == \"3 1\"\n\nassert solution(\"\"\"\n10\n0 0 0 1\n\"\"\") == \"3 1\"\n\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n5\n5 1 1 1 1\n\"\"\") == \"3 2\""
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 3\n2 2 2 1''') == '1 1'\nassert solution('''3 10\n2 2 2 1\n3 2 3 1''') == '2 1'\nassert solution('''2 3\n2 2 2 1\n3 2 3 1''') == '3 1'\nassert solution('''5 9\n1 2 3 4 5\n4 3 2 1\n3 2 1''') == '3 1'\nassert solution('''3 100\n2 2 2 1\n3 2 3 1''') == '6 1'"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 3\n2 2 2 1\n\"\"\") == \"1 1\"\n\nassert solution(\"\"\"\n10 3\n2 2 2 1\n\"\"\") == \"2 1\"\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\\n2 2 2 1\") == \"1 1\"\nassert solution(\"2 5\\n1 2 1 1 3\") == \"2 2\"\nassert solution(\"3 5\\n1 2 1 1 2\") == \"2 2\"\nassert solution(\"4 5\\n1 2 1 1 2 1\") == \"2 2\"\nassert solution(\"5 5\\n1 2 1 1 2 1 2\") == \"2 2\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"10\"\nassert solution([1]) == \"10\"\nassert solution([1,1]) == \"10\"\nassert solution([1,1,1,1]) == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('1234567891011121314151617181920') == '1'\nassert solution('123456789101112131415161718') == '1'\nassert solution('12345678') == '10'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"21\") == \"42\"\nassert solution(\"1000000\") == \"1000\"\nassert solution(\"123456789\") == \"86\"\nassert solution(\"1000000000000000000\") == \"0\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12345678910111213141516171819202122232425262728293031\") == \"85\"\nassert solution(\"99999\") == \"1\""
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('666') == '10'\nassert solution('875') == '9'\nassert solution('20') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('2') == '2'\nassert solution('10') == '4'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"10\"\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '20'\nassert solution('3') == '21'\nassert solution('5') == '24'\nassert solution('10') == '58'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2'\nassert solution('9') == '27'\nassert solution('1') == '10'\nassert solution('2') == '4'\n\"\"\"\n\nn = int(input())"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '10'\nassert solution('11') == '10'\nassert solution('12') == '4'\nassert solution('13') == '5'"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1 1000 1') == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1 1 1') == '1.000'\nassert solution('1 2 3') == '1.000'\nassert solution('4 4 3') == '1.000'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '1.000'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1 0 1') == '0.003'\nassert solution('1000 1 0 1') == '0.0003'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2\n1000 1 0\n1 1000 1''') == '0.001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n1000 1 0\n1 1000 1\n\"\"\") == \"0.001\""
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2\n1000 1 0\n1 1000 1\n\"\"\") == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0.001\"\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1 2 0.001') == '0.001'\nassert solution('1 1 2') == '1'\nassert solution('1 1 2.001') == '2'\nassert solution('1 1 2.0017') == '1.000000000001'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n1000 1 0\n1 1000 1\n''') == '0.001'\nassert solution('''\n2 4\n10 5 1\n8 8 8\n''') == '1.0'\nassert solution('''\n1 7\n2 4 1\n3 3 1\n''') == '0.2'\nassert solution('''\n2 3\n8 5 6\n4 5 6\n''') == '1.0'\n'''\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2\\n1000 1 0\\n1 1000 1') == '0.001'\nassert solution('2 3\\n4 2 4\\n3 2 1\\n4 5\\n5 1 1\\n3 1 2\\n2 1 2\\n3 3 1') == '0.0068'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2 10000') == '0'\nassert solution('10 1 1 1') == '0'\nassert solution('1 2') == '2'\nassert solution('1') == '0'\nassert solution('5 10 4') == '7'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 2 10000') == '0'\nassert solution('1 2') == '1'\nassert solution('3 3 1') == '1'\nassert solution('1 3') == '0'\nassert solution('1 2 2 3') == '3'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 3 2 10000\n1 2\n2 3\n3 1''') == '0'"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 3') == '1'\nassert solution('3 1') == '0'"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n') == '0'"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 2 10000\") == \"0\"\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 2 10000\") == \"0\"\nassert solution(\"5 3 2 10000\") == \"24\"\nassert solution(\"5 5 2 10000\") == \"744\"\nassert solution(\"3 3 3 10000\") == \"0\""
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 1 10000\") == \"0\"\nassert solution(\"2 2 1 1\") == \"1\"\n\"\"\"\nfrom collections import deque\n\n\nclass Solution:\n    def kColor(self, n, m, k, p):\n        \"\"\"\n        :type n: int\n        :type m: int\n        :type k: int\n        :type p: int\n        :rtype: int\n        \"\"\"\n        res = 0\n        graph = [[] for _ in range(n + 1)]\n\n        for a, b in m:\n            graph[a].append(b)\n            graph[b].append(a)\n\n        def dfs(node):\n            if not graph[node]:\n                return 0\n            visited = [0] * (k + 1)\n            visited[0] = 1\n\n            for i in graph[node]:\n                visited[dfs(i) + 1] = 1\n\n            return sum(visited) % p\n\n        res = dfs(1)\n        return res\n\n\nprint(Solution().kColor(3, 3, 2, 10000))\nprint(Solution().kColor(2, 3, 2, 10000))\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 2 10000') == '0'\nassert solution('5 5 2 100000') == '2'\nassert solution('5 5 1 100000') == '1'"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 2 10000') == '0'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '26'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n\"\"\") == \"26\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"26\""
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 2\n1 2 0\n''') == '26'"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"26\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '26'\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n0 1 1 1\\n1 0 2 2\\n1 2 0 3\\n1 2 3 0\\n\") == \"26\"\nprint(solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n'''))\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 2\\n1 2 3\\n1 2 3 4') == '26'\nprint(solution(input()))\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"26\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"1\"\n"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"6\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.16666666667'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.333333333'\nprint('All test cases passed')\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '0.333333333'\nassert solution('1 2') == '0.33333333'"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3 2\\n'\n    '20 20 20 40\\n'\n    'X.X\\n'\n    'T.T\\n'\n    ) == '0.666666667'\nassert solution(\n    '3 2\\n'\n    '10 10 10 30\\n'\n    'X.X\\n'\n    'T.T\\n'\n    ) == '0.33333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n20 20 20 40\n.X\n.T\n''') == '0.16666666667'\n\"\"\"\nSAMPLE INPUT \n3 2\n20 20 20 40\n.X\n.T\nSAMPLE OUTPUT \n0.16666666667\n\"\"\""
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2\\n20 20 20 40\\nX.X') == '0.333333333'\nassert solution('3 2\\n20 20 20 40\\nT.T') == '0.666666667'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('3 3') == '0.5'\nassert solution('10 10') == '0.1666666667'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.3333333333333333'\nassert solution('''\n3 2\n20 20 20 40\nT.T\nX.X\n''') == '0.66666667'\nassert solution('''\n3 2\n20 20 20 40\nX.X\n.X\n''') == '0.50000000000000004'\nassert solution('''\n3 2\n20 20 20 40\n.X\nT.T\n''') == '0.3333333333333333'\nassert solution('''\n3 2\n20 20 20 40\n.X\n.X\n''') == '0.3333333333333333'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.333333333'\nassert solution('2') == '0.666666667'\n\n\"\"\"\n\nw, h = map(int, input().split())\nu, d, l, r = map(float, input().split())\n\ndp = [[u, d, l, r]]\n\nfor i in range(h):\n    dp.append([])\n    for j in range(w):\n        if j == 0:\n            dp[i + 1].append(u)\n        elif j == w - 1:\n            dp[i + 1].append(d)\n        else:\n            dp[i + 1].append((u + d + l + r) / 8)\n\nfor i in range(w):\n    if dp[0][i] == u:\n        dp[0][i] = '.'\n    elif dp[0][i] == d:\n        dp[0][i] = 'X'\n    elif dp[0][i] == l:\n        dp[0][i] = 'T'\n    elif dp[0][i] == r:\n        dp[0][i] = '.'\n\nfor i in range(h):\n    if dp[i][0] == u:\n        dp[i][0] = '.'\n    elif dp[i][0] == d:\n        dp[i][0] = 'X'\n    elif dp[i][0] == l:\n        dp[i][0] = 'T'\n    elif dp[i][0] == r:\n        dp[i][0] = '.'\n\nfor i in range(h):\n    for j in range(w):\n        if dp[i][j] == 'T':\n            dp[i][j] = 'T'\n        else:\n            dp[i][j] = '.'\n\nans = ''\nfor i in range(h):\n    ans += dp[i][0]\n    ans += '\\n'\nprint(ans)\n\n\"\"\"\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.66666667'\nassert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.5'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('45 45 45 45') == '0.957'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"5 5 0 0\") == \"1\"\nassert solution(\"7 7 0 0\") == \"1.5\"\nassert solution(\"90 90 0 0\") == \"1\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''45 45 0 0''') == '0.75'\nassert solution('''21 21 0 0''') == '0.0'\nassert solution('''23 22 0 0''') == '0.0'\nassert solution('''16 17 0 0''') == '1.0'\nassert solution('''15 16 0 0''') == '0.0'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('1 1 0 0') == '0.25'\nassert solution('2 2 0 0') == '0.50'\nassert solution('3 3 0 0') == '0.75'\nassert solution('4 4 0 0') == '1.00'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('45 45 0 0.1') == '0.75'\n\"\"\"\nimport math\na, b, c, d = list(map(float, input().split()))\nm = math.radians(90)\np = m*a\nq = m*b\nr = m*c\ns = m*d\nf = 1/(math.cos(math.radians(s)))\ng = 1/(math.cos(math.radians(r)))\nh = 1/(math.cos(math.radians(q)))\nj = 1/(math.cos(math.radians(p)))\ny = f+g+h+j\nx = (b*d-a*c)/(math.cos(math.radians(p)))\nprint(x, y)\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 0 0\n''') == '0.5'\nassert solution('''\n6 6 0 0\n''') == '0.5'\nassert solution('''\n45 45 0 0\n''') == '0.75'\nassert solution('''\n10 10 0 0\n''') == '0.5'\nassert solution('''\n70 70 0 0\n''') == '0.5'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nprint(solution(input()))\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('45 45 0 45') == '0.5'\n\"\"\"\nimport math\nimport re\n\nx = input().strip()\na, b, c, d = re.findall('\\d+\\.\\d+', x)\na = float(a)\nb = float(b)\nc = float(c)\nd = float(d)\n\ns = math.pi*(a**2 + b**2)\ns1 = math.pi*(c**2 + d**2)\n\ns = s + s1\n\nprint(s)"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"45 45 0 0\") == \"0.75\"\nassert solution(\"0 0 0 0\") == \"1\"\nassert solution(\"0 0 0 1\") == \"0\"\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 6 0 0\n''') == '0.75'\nassert solution('''\n1.1 1.1 1.1\n''') == '0.375'\nassert solution('''\n0 0 0 0\n''') == '0.75'\nassert solution('''\n1 1 1 1\n''') == '0.375'\nassert solution('''\n0 0 0 0\n0 0 0 0\n''') == '0.5'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '4'\nassert solution('10 10') == '9'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"4\"\nassert solution([\n    \"3\",\n    \"2\",\n    \"2\"\n]) == \"4\""
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\nassert solution('''\n10\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n5 6 8\n6 7 8\n7 8 9\n8 9 10\n''') == '10'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\n'''\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\"\nassert solution(\"3 3\\n0 1 2\\n1 2 1\\n2 2 5\\n2 3 3\") == \"7\"\nassert solution(\"5 5\\n0 0 2\\n0 1 1\\n1 2 0\\n2 1 1\\n3 2 2\") == \"6\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '1'\nassert solution('3 4') == '0'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == \"4\"\nassert solution('''\n5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == \"6\"\nassert solution('''\n4\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == \"9\"\nassert solution('''\n5\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == \"0\"\nassert solution('''\n6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == \"12\"\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\\n0 1 2\\n0 3 8\\n1 2 11\\n2 3 5\\n2 4 2\\n4 3 9\") == \"4\"\nassert solution(\"10 10\\n0 1 2\\n0 3 4\\n1 3 5\\n2 3 6\\n3 2 7\\n4 4 8\\n5 5 9\\n6 6 10\\n7 7 11\\n8 8 12\\n9 9 13\\n10 10 14\\n11 11 15\\n12 12 16\\n13 13 17\\n14 14 18\\n15 15 19\") == \"24\""
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\n\nassert solution('''\n3 3\n2 3 6\n3 2 8\n''') == '1'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '10'\n\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '10'\n\nassert solution('''\n3 3\n2 3 6\n3 2 8\n''') == '1'"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n10 10 0 5\n''') == '100'\nassert solution('''1\n10 10 0 5\n''') == '100'\nassert solution('''1\n10 10 0 5\n''') == '100'\nassert solution('''1\n10 10 0 5\n''') == '100'\nassert solution('''1\n10 10 0 5\n''') == '100'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"100\"\nassert solution('1') == \"0\""
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n10 10 0 5') == '100'\nassert solution('2\\n10 10 0 5\\n10 10 0 5') == '500'\nassert solution('3\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5') == '500'\nassert solution('4\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5') == '0'\nassert solution('5\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5\\n10 10 0 5') == '0'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"10 10 0 5\") == \"100\"\nassert solution(\"10 10 0 5 100000 1 0 1\") == \"100\"\nassert solution(\"100 10 0 5 100000 1 0 1\") == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '100'\nassert solution([\n    '1',\n    '5',\n    '0',\n    '5'\n]) == '100'\nassert solution([\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '10',\n    '"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10 10 0 5') == '100'\nassert solution('1\\n1 10 0 5') == '100'\nassert solution('1\\n1 10 1 0 5') == '96'\nassert solution('1\\n1 1 0 0 5') == '94'\nassert solution('1\\n1 1 1 1 0 5') == '93'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"100\"\nassert solution([1]) == \"100\"\n\"\"\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"100\"\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"100\""
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n10 10 0 5\nSample Input:\n2\n6 5 1 0\n3\n3 1 0 1\nSample Output:\n3\n''') == '3'\nassert solution('''\n1\n5 5 1 0\n2\n2 2 1 0\nSample Input:\n3\n5 1 0 1\n2\n1 1 1 0\nSample Output:\n0\n''') == '0'\nassert solution('''\n1\n1 1 1 0\n2\n2 2 2 0\nSample Output:\n0\n''') == '0'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\nassert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '0'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n3 4 2 1\n4 5 5 4\n3 4 3 2\n4 5 3 2\n''') == '1'\n\n'''\n-----------------------------\nProblem Description\n-----------------------------\n\nGiven a set of $n$ axis-aligned rectangles, determine whether they all intersect.\n\nConsider the following two rectangles:\n\n  * A has 2 units of height and 1 unit of width.\n  * B has 1 unit of height and 2 units of width.\n\nIf they have a common vertical line of height, where the line crosses either side of the rectangles, and if there are no common points, they do not intersect.\n\nIf they do intersect, print YES on a new line; otherwise, print NO.\n\n-----Input-----\nEach test case will begin with a line with a single integer $n$ ($1\\! \\le \\! n\\! \\le \\! 10^5$), which is the number of rectangles.\n\nEach of the next $n$ lines will contain four space-separated integers:$x_1$ $y_1$ $x_2$ $y_2$\n\n($-10^9\\! \\le \\! x_1,y_1,x_2,y_2\\! \\le \\! 10^9, x_1\\! <\\! x_2, y_1\\! <\\! y_2$), which describe a rectangle, where $(x_1,y_1)$ is the lower left corner and $(x_2,y_2)$ is the upper right corner. All $x$ values will be distinct. All $y$ values will be distinct.\n\n-----Output-----\nOutput a single integer, which is $1$ if some pair of rectangles intersect, $0$ if no pair of rectangles intersect.\n\n-----Examples-----\nSample Input:\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\nSample Output:\n1\n'''"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '1'\nassert solution('8\\n-10 10 10 10\\n-10 -10 10 10\\n-10 -10 -10 10\\n-10 10 -10 10\\n-10 10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 10 -10 10\\n-10 -10 -10 10\\n-10 -10 -10 10\\n-10 -10 -10 10\\n-10 10 -10 10\\n-10 10 10 10\\n-10 10 10 10\\n-10 10 10 10\\n-10 10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-10 -10 10 10\\n-"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\"\nassert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"0\"\nassert solution(\"2\\n0 0 2 2\\n1 1 3 4\") == \"1\"\nassert solution(\"1\\n0 0 2 2\\n1 1 3 4\") == \"0\"\nassert solution(\"3\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\") == \"1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n2 2 5 3\n3 4 6 8\n6 5 2 6\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    5\n    0 1 2 3\n    1 2 3 4\n    2 3 4 5\n    4 5 6 7\n    7 8 9 10\n    ''') == '1'\n\nassert solution('''\n    3\n    0 0 2 2\n    1 1 3 4\n    5 7 6 8\n    ''') == '0'\n\nassert solution('''\n    1\n    0 0 2 2\n    1 1 3 4\n    ''') == '1'\n\nassert solution('''\n    1\n    0 0 2 2\n    1 1 3 4\n    2 2 2 2\n    ''') == '0'\n\nassert solution('''\n    3\n    0 0 2 2\n    1 1 3 4\n    5 7 6 8\n    2 4 1 2\n    ''') == '1'"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n\"\n    \"0 0 2 2\\n\"\n    \"1 1 3 4\\n\"\n    \"5 7 6 8\\n\"\n) == \"1\\n\"\nprint(solution(\n    \"3\\n\"\n    \"0 0 2 2\\n\"\n    \"1 1 3 4\\n\"\n    \"5 7 6 8\\n\"\n))\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '1'\nassert solution('5\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8\\n0 0 2 2\\n1 1 3 4\\n5 7 6 8') == '0'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nprint(solution(input()))\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\") == \"17\"\nassert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\nS S S S S\") == \"2\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n\") == \"17\""
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n') == '17'\nassert solution('4 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S\\n') == '11'\nassert solution('6 5\\nE E E E E E E\\n1 2 3 4 5 6 7 8\\n5 4 3 2 1\\n-2 -2 -2 -2 -2 -2 -2\\n8 8 8 8 8 8 8 8 8\\n9 9 9 9 9 9 9 9 9 9\\nS S S S S S S S S S S\\n') == '11'\nassert solution('10 5\\n
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\nassert solution('''4 3\nE E E E\n1 2 3\n4 5 6\n7 8 9\n10 11 12\nS S S S''') == '3'\nassert solution('''2 4\nE E E E\n1 2 3\n4 5 6\n7 8 9\n10 11 12\nS S S S''') == '4'\nassert solution('''5 4\nE E E E\n1 2 3\n4 5 6\n7 8 9\n10 11 12\nS S S S''') == '0'\n\n[exec(f'{line} = {solution(line)}') for line in stdin.splitlines()]\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n1 1 1 1 1 1''') == '12'\nassert solution('''4 4\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n1 1 1 1 1 1''') == '14'\nassert solution('''4 4\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n1 1 1 1 1 1''') == '14'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S\n1 1 1 1 1 1''') == '17'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '17'\nassert solution('4 6') == '8'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == \"17\"\nassert solution('1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == \"0\"\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '17'\nassert solution('5 5\\nE E E E E\\n1 2 3 4 5\\n5 4 3 2 1\\n-2 -2 -2 -2 -2\\n8 8 8 8 8\\n9 9 9 9 9\\nS S S S S') == '19'\nassert solution('10\\nAB ABCAB\\nA3 2 1\\n9 8 2\\n2 3\\n3\\n2\\n3\\n2\\n3') == '23'\nassert solution('2\\nAB\\nA3 2 1\\n3\\n2\\n3\\n2\\n3\\n2') == '27'\nassert solution('10\\nAB ABCAB\\nA3 2 1\\n3\\n2\\n3\\n2\\n3\\n2') == '31'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2'\nassert solution('6\\n2 2 3 3 2 1') == '1 4 4 1 5 3'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\"\nassert solution(\"6\\n4 1 5 3 2 1\") == \"1 4 5 2 3 1\"\nassert solution(\"7\\n3 6 5 4 2 1\") == \"1 4 5 6 2 3\"\nassert solution(\"8\\n2 1 3 4 5 1 6\") == \"1 4 5 6 2 3\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\"\nassert solution(\"20\\n5 8 3 2 1\") == \"3 2 5 8 1 4\"\n\nstdin = \"\"\"6\n4 1 3 2 5 4\n\"\"\""
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3 1 1\") == \"1 4 3 5 2\"\n\n--Input-----\n3\n6\n5 1 2 5 1 3\n--Output-----\n2 1 4 3 5\n3 1 4 5 2\n\"\"\"\n\n\nimport itertools\nfrom typing import List\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 3 3 1 1') == '1 4 3 5 2'\nassert solution('5\\n3 2 3 1 1') == '1 4 3 5 2'\nassert solution('5\\n4 3 2 3 1 1') == '1 4 3 5 2'\nassert solution('5\\n5 2 3 3 1 1') == '1 4 3 5 2'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3 1 3 1') == '1 2 4 3'\nassert solution('10\\n3 5 2 1 4 3 6 7 8') == '1 8 7 6 5 4 3 2'\nassert solution('10\\n1 3 2 5 4 7 8') == '2 5 1 8 3 4 7'\nassert solution('100\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1'\n\"\"\"\n\n\n\"\"\"\n4\n5 3 2 1 1\n1 2 4 3 5 2\n2 3 5 1 4\n3 4 3 1 2\n5 4 2 3 1\n\"\"\"\n\"\"\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 4 3 5 2'\nassert solution('5 1 2 3 4') == '3 1 4 2 5'\nassert solution('3 1 2 3 1 4') == '1 4 3 5 2'\nassert solution('3 1 3 2 1') == '2 3 1 1'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'impossible'\nassert solution('5') == '1 4 3 5 2'\nassert solution('10') == '10 8 3 6 2 5 1'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"impossible\"\nassert solution(\"2\") == \"impossible\"\nassert solution(\"4\") == \"impossible\"\nassert solution(\"3\") == \"1 4 3 5 2\"\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3 2 3 1 1\") == \"1 4 3 5 2\"\nassert solution(\"5\\n3 2 3 1 1\") == \"2 3 5 1 4\"\nassert solution(\"5\\n3 2 3 1 1\") == \"impossible\"\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == '0.76772047'\nassert solution('2\\n2 0 2\\n1 4\\n2 0') == '0.88076008'"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 0 1\\n1 4') == '0.76772047'\nassert solution('2\\n0 1 2\\n1 2') == '1.0'\nprint('Almost done!')\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 1\\n2 1\\n3 4\\n') == '0.76772047'\nassert solution('3 0 1\\n2 4\\n3 2\\n') == '0.0'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 0 1\\n1 4\\n') == '0.76772047'\nassert solution('4 0 4\\n1 4\\n3 4\\n1 0\\n') == '0.50338207'\nassert solution('5 0 5\\n1 4\\n4 4\\n3 0\\n') == '0.35'"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2 1 3') == '0.76772047'\nassert solution('3\\n0 1\\n1 4') == '0.1537994'\nassert solution('3\\n0 1\\n1 4') == '0.6673919'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == '0.76772047'\n\"\"\"\nimport cmath\nimport math"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n0 0 1\n1 4\n\"\"\") == \"0.76772047\"\nprint(\"All Tests Passed\")"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.76772047'\nassert solution('2') == '0.71568719'\nassert solution('3') == '0.68895844'\nassert solution('4') == '0.59494771'\nassert solution('5') == '0.546875'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n0 0 10\\n3 4') == '0.3'\nassert solution('1\\n10 10\\n5 5') == '0.125'\nassert solution('100\\n10000 10000\\n5 5') == '0.03125'\nassert solution('3\\n2 4\\n1 5\\n5 5\\n4 4\\n3 4') == '0.04625'\nassert solution('5\\n1 1\\n0 0\\n2 2\\n1 1\\n1 1') == '0.25'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n3 0 1\n1 4\n\"\"\") == \"0.76772047\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello') == '1'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '26'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"hello teams\") == \"27\""
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('hello teams') == '27'\nassert solution('helppppp') == '1+13+3=15'\n\"\"\"\n\nn1, n2 = input().split()\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello there') == '29'"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"holle foo teams\") == \"3\"\nassert solution(\"hello   teams\") == \"5\"\nassert solution(\"hoblahtoepas\") == \"3\"\nassert solution(\"hoblahtoepas\") == \"2\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '27'\n\ninput()\nprint(solution(input()))\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello z') == '27'\nassert solution('hello b') == '27'\nassert solution('hello a') == '27'\nassert solution('hello z z z z') == '27'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"hello world\") == \"32\"\nassert solution(\"hello big world\") == \"6\"\nassert solution(\"hello how are you\") == \"10\"\nassert solution(\"hello how are you?\") == \"9\"\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"zjrgh\") == \"0\"\n\nprint(solution())"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"hello teams\") == \"27\"\nassert solution(\"bbbbbbbbbb\") == \"1\""
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '6 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == '2\\n'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3') == '2'\n\n---"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"7 8\\n5 4\\n7 7\") == \"2\"\nassert solution(r\"1 8\\n5 4\\n7 7\") == \"1\"\nassert solution(r\"8 7\\n5 4\\n7 7\") == \"0\"\nassert solution(r\"7 8\\n4 7\\n5 8\") == \"1\"\nassert solution(r\"10 10\\n3 7\\n5 4\\n7 4\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 8\n5 4\n7 7\n9 2\n''') == '2'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n\nSample Input:\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\nSample Output:\n1\n\"\"\"\n\n\nimport sys\n\nclass Node:\n    def __init__(self, location):\n        self.location = location\n\n\nclass PriorityQueue:\n    def __init__(self, value, index):\n        self.value = value\n        self.index = index"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == \"2\"\nassert solution(\"1 8\") == \"1\"\nassert solution(\"5 4\") == \"1\"\nassert solution(\"7 7\") == \"1\"\nassert solution(\"9 2\") == \"1\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3\\n1 8\\n5 4\\n7 7\\n9 2\\n16 6\\n17 10\\n4 7 2\\n6 3 1\\n12 6 3\\n') == '2'"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('3 2') == '2'\nassert solution('3 5') == '3'\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == \"2\"\n"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n1 8\n5 4\n7 7\n9 2\n''') == '1'\n\nassert solution('''\n3\n1 8\n5 4\n7 7\n9 2\n''') == '1'\n\nassert solution('''\n2\n1 8\n5 4\n7 7\n9 2\n''') == '1'\n\nassert solution('''\n2\n1 8\n5 4\n7 7\n9 2\n''') == '1'\n\nassert solution('''\n1\n5 5\n''') == '1'"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne') == '26'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"26\"\nassert solution(\"10 3\") == \"8\"\nassert solution(\"6 3\") == \"7\"\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\na\nb\nc\nd\ne\ncad''') == '26'\n\nassert solution('''5 3\na\nb\nc\nd\ne\nacd''') == '19'\n\nassert solution('''5 3\na\nb\nc\nd\ne\nacb''') == '19'\n\nassert solution('''5 3\na\nb\nc\nd\ne\nacb''') == '10'\n\nassert solution('''5 3\na\nb\nc\nd\ne\nacb''') == '12'"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '7'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\na\\nb\\nc\\nd\\ne') == '26'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '26'\nassert solution('4 5') == '7'\nassert solution('5 5') == '13'\nassert solution('4 5') == '13'"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 2') == '4'\nassert solution('8 1') == '8'\nassert solution('12 5') == '5'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\nabcde\\na\\nc\") == 26\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\na\nb\nc\nd\ne\ncad\n''') == '26'\nassert solution('''\n5 1\nabcd\nace\nbdc\nefg\n''') == '13'\nassert solution('''\n6 3\na\nb\nc\nd\ne\nf\n''') == '11'\n\nimport sys"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"0\"\nassert solution(\"aa\") == \"1\"\nassert solution(\"aab\") == \"1\"\nassert solution(\"aabb\") == \"1\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10 30\") == \"3 5 2 1 4\"\nassert solution(\"1 10 2\") == \"1 1\""
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('3 10 20 30') == '1 3 2 5'\nassert solution('3 10 40 30') == '1 3 2 5'\nassert solution('3 10 50 30') == '1 3 2 5'\nassert solution('3 10 60 30') == '1 3 2 5'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 10 30\") == \"3 5 2 1 4\"\nassert solution(\"4 4 4\") == \"1 2 3 4\"\nassert solution(\"5 5 5\") == \"1 2 3 4\"\nassert solution(\"5 5 5\") == \"1 2 3 4\"\nassert solution(\"3 3 3\") == \"1 2 3\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2 3 1 4 5\""
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4', 'Wrong'\nassert solution('1 10 5 3') == '1 5 3 2', 'Wrong'"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('10 5 3 1 3') == '3 5 2 1 4'\nassert solution('5 10 20') == 'impossible'\nassert solution('5 10 50') == 'impossible'\nassert solution('5 10 20 50') == 'impossible'"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('7 10 30') == '2 1 5 6 7 3 4'"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"4 5 2 1 3\"\n"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 10 30\") == \"3 5 2 1 4\"\nassert solution(\"1 1 2 2\") == \"1 1 2 2\"\n\n'''\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == '2'\nassert solution('8\\n1 1\\n2 3\\n2 2\\n3 4\\n3 4\\n4 5\\n4 5') == '9'\nassert solution('10\\n1 1\\n2 3\\n2 2\\n3 4\\n3 4\\n4 5\\n4 5') == '4'\nassert solution('13\\n1 1\\n2 3\\n2 2\\n3 4\\n3 4\\n4 5\\n4 5') == '2'\nassert solution('100\\n1 1\\n2 3\\n2 2\\n3 4\\n3 4\\n4 5\\n4 5') == '1'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('1') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') == '2'\nassert solution('4\\n1 2\\n2 2\\n3 3\\n2 3') == '1'\nassert solution('5\\n1 3\\n2 3\\n3 2\\n3 3') == '0'\nassert solution('10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9') == '9'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('1') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"shovel time!\"\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3\\n') == '2'\nassert solution('8\\n0 0\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n') =='shovel time!'\nassert solution('10\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n5 5\\n') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"shovel time!\""
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1\\n2\\n2\\n2\\n2') == '2'\nassert solution('1\\n1\\n2\\n2\\n2\\n3') == '2'\nassert solution('1\\n1\\n2\\n2\\n2\\n3') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n2 3\\n2 3') =='shovel time!'\nassert solution('1\\n0 0') =='shovel time!'\nassert solution('1\\n0 0\\n0 0') =='shovel time!'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') =='shovel time!'\nassert solution('5') =='shovel time!'\nassert solution('7') =='shovel time!'\nassert solution('100') =='shovel time!'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == '3'\nassert solution('''\n4\n1 2 1 2\n1 2 3 4\n''') == '2'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n1 2 1 2\n''') == '3'\n\nassert solution('''\n4\n1 2 1 2\n''') == '2'\n\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    4\n    1 2 1 2\n''') == '3'\n\nassert solution('''\n    2\n    1 2\n''') == '1'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n2\n1 2 1 2\n''') == '3'\n\nassert solution(\n'''\n3\n2 2 1 2\n''') == '2'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 1 2') == '3'\nassert solution('5\\n1 3 2 1 1\\n5\\n2 2 3 1 1') == '4'\n\nstdin = input()\nn = int(input())\nl = list(map(int,input().split()))\nl1 = sorted(l, key=lambda x: (-x,x))\nmax = 0\nfor i in range(n):\n    if i == 0:\n        continue\n    for j in range(i):\n        if l1[i] - l1[j] < l1[i] and l1[i] > max:\n            max = l1[i]\n\nprint(max)\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 2 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n1 2 1 2\n\"\"\") == \"3\"\n\"\"\"\n\n\nimport math\n\nfrom collections import Counter\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n5 6 1\\n1\\n2 3 4') == '1'\nassert solution('4\\n5 6 1 2\\n1\\n2 3 4') == '1 2 3 4'"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1 2 1 2\n''') == '3'\nassert solution('''\n2\n1 2 1 2\n''') == '3'\nassert solution('''\n5\n1 1 1 1 1\n''') == '4'\nassert solution('''\n5\n1 1 1 1 1\n''') == '4'\n'''\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"1 2 1 2\") == \"3\""
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4 999999937\") == \"79\""
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3 3 999999937\\n\"\n) == \"79\"\n\nassert solution(\n    \"5 5 399999937\\n\"\n) == \"87\"\n\nassert solution(\n    \"25 25 899999937\\n\"\n) == \"3023165856\"\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4 999999937') == '79'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\nassert solution(\"2 2 999999937\") == \"78\"\n\n\"\"\""
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 4') == '8'\nassert solution('1000000000 999999900 9999999999 999999999 9999999999 999999999999999999999999999999') == '440000000'\nassert solution('4 1 2') == '1'\nassert solution('1000000000 1') == '1000000000'\nassert solution('1000000000 1 1') == '1000000000'\n\nn, m, p = stdin.split()\nn = int(n)\nm = int(m)\np = int(p)\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4 999999937\n4 4 999999937''') == '79'\nassert solution('''20 20 5\n5 5 5 5 5 5 5 5 5 5 5 5''') == '10801'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4 999999937\n1 1\n2 1\n1 1\n2 1''') == '79'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4 999999937') == '79'\nassert solution('1 1 1') == '0'\nassert solution('5 1 6') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '2'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4 999999937\") == \"79\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\nassert solution('''\n1\n1 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\nassert solution('''\n1\n1 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\nassert solution('''\n1\n1 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\nassert solution('''\n1\n1 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\n''') == 'zucchini'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"zucchini\"\nassert solution(\"2\") == \"zucchini mozzarella mushrooms artichoke\"\nassert solution(\"3\") == \"zucchini mozzarella mushrooms artichoke\"\nassert solution(\"4\") == \"zucchini mozzarella mushrooms artichoke\"\nassert solution(\"5\") == \"zucchini mozzarella mushrooms artichoke\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1\n4 +zucchini +mozzarella +mushrooms -artichoke\n\"\"\") == \"zucchini\"\n\nassert solution(\"\"\"2\n1 +sugar +cheese\n3 +sugar +cheese\n\"\"\") == \"sugar\"\n\nassert solution(\"\"\"1\n+pepper +milk +strawberry +apple +water\n3 +pepper +milk +strawberry +apple +water\n\"\"\") == \"pepper\"\n\nassert solution(\"\"\"1\n+pepper +milk +strawberry +apple +water\n3 +pepper +milk +strawberry +apple +water\n\"\"\") == \"pepper\"\n\nassert solution(\"\"\"1\n+pepper +milk +strawberry +apple +water\n3 +pepper +milk +strawberry +apple +water\n\"\"\") == \"pepper\""
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'zucchini'\nassert solution('2') == 'zucchini mozzarella'\nassert solution('3') == 'zucchini mozzarella mushrooms'\nassert solution('4') == 'zucchini mozzarella mushrooms artichoke'"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n+zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\nassert solution('''\n1\n-zucchini -mozzarella +mushrooms artichoke\n''') == 'artichoke'\nassert solution('''\n1\n+zucchini +mozzarella -mushrooms +artichoke\n''') == 'zucchini'\nassert solution('''\n1\n-zucchini +mozzarella +artichoke -mushrooms\n''') == 'zucchini'\nassert solution('''\n1\n+zucchini +mozzarella -artichoke +mushrooms\n''') == 'zucchini'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n4 +zucchini +mozzarella +mushrooms -artichoke') == 'zucchini\\nmushrooms\\n'\n\n'''"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'zucchini'\nassert solution('2') == 'zucchini'\nassert solution('3') == 'zucchini'\nassert solution('4') == 'zucchini'\nassert solution('5') == 'zucchini'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"zucchini\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"zucchini\"\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == correct_output\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n+zucchini +mozzarella\n+mushrooms +parmesan''') == 'zucchini mozzarella mushrooms parmesan'\nassert solution('''4\n+zucchini +mozzarella +parmesan -artichoke\n-artichoke +parmesan +mushrooms''') == 'zucchini mozzarella mushrooms parmesan artichoke'\nassert solution('''4\n-zucchini -mozzarella +mushrooms +parmesan\n+parmesan -pizzas +toppings +mushrooms\n+cheese +parmesan''') == 'parmesan cheese pizzas parmese mushrooms parmese'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\nPP\nRR\nPS\n\"\"\") == \"PS\"\nassert solution(\"\"\"\n1\nPS\nRR\n\"\"\") == \"PS\"\nassert solution(\"\"\"\n1\nPP\nPP\n\"\"\") == \"PP\"\nassert solution(\"\"\"\n1\nPS\nPP\n\"\"\") == \"PP\"\nassert solution(\"\"\"\n1\nPS\nPS\n\"\"\") == \"PS\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"3 1\") == \"1 2 3\"\nassert solution(\"1 4\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    3 4\n    PP\n    RR\n    PS\n    \"\"\") == \"\"\"PS\nPP\nRR\"\"\"\n\nassert solution(\"\"\"\n    3 5\n    PPPSP\n    PPPPR\n    PPSSS\n    \"\"\") == \"\"\"PPSP\"\"\"\n\nassert solution(\"\"\"\n    3 5\n    PPPSP\n    PPPPR\n    PPSSS\n    \"\"\") == \"\"\"PPSP\"\"\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\nPP\nRR\nPS\nSS\n''') == 'PS'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'P'\nassert solution('3') == 'PS'\nassert solution('4') == 'PP'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"SS\"\nassert solution(\"2 2\") == \"SS\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == 'PS'\nassert solution('2 2') == 'PP'\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\nPP\\nRR\\nPS\\nSS\") == \"PP\\nSS\\nRR\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"PP\"\nassert solution(\"3 2\") == \"PS\"\n\"\"\"\n"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == \"PP\"\nassert solution(\"4 4\") == \"RR\"\nassert solution(\"3 3\") == \"PP\"\nassert solution(\"4 4\") == \"RR\"\nassert solution(\"3 3\") == \"PP\"\n\n'''\nfrom collections import Counter\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n2.0\n2.0\n0.1\n1\n1\n0.1\n0\n0\n0.1\n0\n''') == '488'\nassert solution('''\n5\n0.1 2.0\n0\n0\n0\n0\n0\nSample Output:\n288\n''') == '488'"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0.1 2.0\n0\n0\n0\n0\n0''') == '288.0'\nassert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0''') == '300.0'\nassert solution('''6\n0.1 2.0\n0\n0\n0\n0\n0\n0''') == '330.0'\nassert solution('''6\n0.1 2.0\n0\n0\n0\n0\n0\n0\n0''') == '330.0'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0.0\"\nassert solution(\"1 2.0\") == \"1.6\"\nassert solution(\"5 0.1 2.0\") == \"4.5\"\nassert solution(\"5 1.6 2.0\") == \"4.0\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n1.0 1.0\n2\n0\n0\n1\n\"\"\") == \"288.0\"\nassert solution(\"\"\"3\n1.0 1.0 1.0\n2\n0\n0\n1\n\"\"\") == \"361.0\"\nassert solution(\"\"\"5\n0.5 0.1 0.1 0.1 0.1\n1\n2\n2\n2\n1\n\"\"\") == \"365.0\"\nassert solution(\"\"\"7\n0.1 0.1 0.1 0.1 0.1 0.1 0.1\n1\n2\n2\n2\n2\n2\n1\n\"\"\") == \"369.0\"\nassert solution(\"\"\"6\n1.0 1.0 1.0 1.0 1.0 1.0\n1\n2\n1\n2\n1\n2\n1\n\"\"\") == \"413.0\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '288'\nassert solution('5.2') == '2.64'\nassert solution('5.1') == '2.59'\nassert solution('4.0') == '2.0'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '288.000000'\nassert solution('4') == '276.000000'\nassert solution('5.3') == '278.000000'\nassert solution('0.1') == '276.000000'\nassert solution('0') == '276.000000'\n\nstdin = \"\"\"\n3\n0.1 2.0\n0\n0\n0\n0\n0\nSample Output:\n276.000000\"\"\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n0.1 2.0\n0\n0\n0\n0\n0''') == \"288.0\"\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '288.0000'\n\"\"\"\n\nfrom math import floor\n\nwhile True:\n    try:\n        T = float(input())\n        rain = sorted([float(input()) for _ in range(int(input()))])\n        seater = float(input())\n        c = float(input())\n        days = []\n        for i in range(int(input())):\n            days.append([float(input()), int(input())])\n        days.sort(key=lambda x: (x[0], x[1]))\n\n        times = []\n        for time in days:\n            times.append(time[0] + (T - time[1]) * c)\n\n        times = sorted(times)\n        total_rain = 0\n        current_seater = 0\n        for time in times:\n            rain_fraction = (time - current_seater) / seater\n            total_rain += rain_fraction * rain[floor(time / rain[0]) - 1]\n            current_seater += rain_fraction * rain[floor(time / rain[0]) - 1]\n            if current_seater > seater:\n                break\n        print(total_rain)\n    except EOFError:\n        break"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == '288'\nprint(solution(s))\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0.1 2.0\\n0\\n0\\n0\\n0\\n0\\n') == '288.0'\n\nstdin = '''2\n0.1 2.0\n0\n0\n0\n0\n0\nSample Output:\n0.0'''\n\nassert solution(stdin) == '0.0'"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('pastimeofwhimsy') == '1'\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('pastimeofwhimsy') == '1'\n\"\"\""
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('pastimeofwhimsy') == '1'"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\"\n\"\"\"\nimport sys\nfrom collections import Counter"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('pastimeofwhimsy') == '1'\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('pastimeofwhimsy') == '1'\n\"\"\"\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"hello\") == 1\nassert solution(\"meow\") == 2\nassert solution(\"billy\") == 3\nassert solution(\"yoyo\") == 2\nassert solution(\"xxxx\") == 4\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"pastimeofwhimsy\") == \"1\""
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('pastimeofwhimsy') == '1'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"1 2 2 1\") == \"YES\"\nassert solution(\"2 2 2 1\") == \"NO\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\n1 2 2 1\\n') == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 2 2 1\n''') == 'YES'\nassert solution('''8 5\n1 2 2 1 2 3 1\n''') == 'NO'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 2 2 1\") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 2 2 1\") == \"YES\""
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4\\n1 2 2 1\\n') == 'YES'\nassert solution('2 5\\n1 2\\n') == 'NO'\nassert solution('3 4\\n1 2 2 1\\n1 3\\n') == 'YES'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n1 2 2 1 \n''') == 'YES'\nassert solution('''100 10\n1 2 3 4 5 6 7 8 9 10 \n''') == 'NO'\nassert solution('''2 7\n2 5 1 7 \n''') == 'YES'\nassert solution('''1 7\n1 2 3 4 5 6 7 8 9 10 \n''') == 'NO'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == 'YES'\nassert solution(\"1 2 2 1\") == 'YES'\nassert solution(\"3 4\") == 'NO'\nassert solution(\"2 2 2 1\") == 'NO'\nassert solution(\"100 100000 1\") == 'YES'"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2 2 2 \n3 2 1 2''') == 'YES'\nassert solution('''5 5\n1 2 1 2 1''') == 'NO'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3\\n4') == '3/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n4') == '4/5'\nassert solution('3 3\\n2 2') == '4/6'\nassert solution('5 3\\n4 5') == '0/1'\nassert solution('2 2\\n3 4') == '4/3'\nassert solution('5 4\\n4 5') == '1/4'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2\n3\n4\n\"\"\") == \"3/1\"\nassert solution(\"\"\"\n10\n2 4\n3 5\n4 6\n5 8\n6 9\n7 10\n8 11\n9 12\n10 13\n11 14\n12 15\n13 16\n14 17\n15 18\n\"\"\") == \"9/10\"\n\nimport sys\nimport io\n\nsys.stdin = io.BytesIO(b\"\\n\")\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"6/1\"\nassert solution(\"4 5\") == \"7/1\"\nassert solution(\"5 5\") == \"3/1\"\nassert solution(\"4 2\") == \"1/2\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n1 2\n3\n4\n\"\"\") == \"3/1\"\nassert solution(\"\"\"\n1\n1 2\n\"\"\") == \"1/2\"\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3/1'\nassert solution('3') == '3/1'\nassert solution('3 4') == '12/3'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n4') == '3/1'\nassert solution('10\\n1 2\\n3 4\\n4 5\\n6 7\\n7 8\\n8 9\\n9 10\\n') == '2/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n') == '3/1'\nassert solution('2 4 3\\n') == '4/2'\nassert solution('10 8\\n') == '8/10'\nassert solution('1 2 1 3 4\\n') == '3/2'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3') == '3/1'\nassert solution('4\\n10') == '5/4'\nassert solution('6\\n1\\n2\\n5') == '1/1'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"3/1\"\nassert solution(\"2\") == \"1/2\"\nassert solution(\"3\") == \"2/3\"\n\n'''\nimport math\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1.2 10.2\\n2.2 15.2\") == \"1.114672365\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1.114672365'\nassert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('10') == '1'\nassert solution('20') == '2'\n\"\"\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nassert solution('1\\n1.2\\n2.2') == '1.114518538'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1.114672365'\nassert solution('1.1') == '1.11'\nassert solution('1.11') == '1.11'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0.0000'\nassert solution('2') == '1.1141'\nassert solution('2') == '1.1141'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    2\n    1.2 10.2\n    2.2 15.2\n    ''') == '1.114672365', 'First'\n\nassert solution('''\n    3\n    1.2 10.2\n    2.2 15.2\n    3.2 25.2\n    ''') == '1.072365', 'Second'\n\nassert solution('''\n    4\n    1.2 10.2\n    2.2 15.2\n    3.2 25.2\n    4.2 33.2\n    ''') == '1.246065', 'Third'\n\nassert solution('''\n    5\n    1.2 10.2\n    2.2 15.2\n    3.2 25.2\n    4.2 33.2\n    5.2 41.2\n    ''') == '1.2576843', 'Fourth'\n\nassert solution('''\n    6\n    1.2 10.2\n    2.2 15.2\n    3.2 25.2\n    4.2 33.2\n    5.2 41.2\n    6.2 42.2\n    ''') == '1.369619', 'Fifth'"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1.2 10.2\n2.2 15.2\n''') == '1.114672365'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n1.2 10.2\n2.2 15.2\n\"\"\") == \"1.114672365\"\n\nassert solution(\"\"\"\n3\n1.2 10.2\n2.2 15.2\n4.2 20.2\n\"\"\") == \"3.433915249\"\n\nassert solution(\"\"\"\n6\n1.2 10.2\n2.2 15.2\n3.2 20.2\n4.2 20.2\n5.2 25.2\n6.2 10.2\n\"\"\") == \"1.841880791\"\n\nassert solution(\"\"\"\n10\n1.2 10.2\n2.2 15.2\n3.2 20.2\n4.2 20.2\n5.2 25.2\n6.2 10.2\n7.2 20.2\n8.2 25.2\n9.2 20.2\n10.2 10.2\n\"\"\") == \"20.73735467\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1.2 10.2\\n2.2 15.2') == '1.114672365'\nassert solution('5\\n2.2 8.4 10.4 20.4\\n9.2 12.5\\n3.1 9.2\\n4.1 10.1\\n5.1 15.1\\n') == '0.0015652525'\n\n\"\"\"\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.2 10.2') == '1.114672365'\nassert solution('2.2 15.2') == '1.114672365'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n4 0 3\\n1 1\\n2 1\\n2 0\\n\") == \"3 1 2 3\""
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n0 3\n1 1\n2 1\n2 0\n''') == '3 1 2 3 2'''\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0\\n') == '3\\n1 2 3 2'\nassert solution('10\\n0 3\\n1 1\\n2 1\\n2 0\\n3 4\\n2 2\\n3 3\\n4 5\\n3 3\\n4 1\\n4 0\\n4 1\\n') == '2 4 5 4 2'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1 2'\nassert solution('4') == '1 2 3 4'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n0 3\n1 1\n2 1\n2 0\n''') == '3 2 1 1'\nassert solution('''\n10\n1 5\n1 3\n1 2\n1 8\n1 9\n2 2\n2 5\n2 6\n2 8\n2 9\n3 3\n3 4\n3 5\n4 4\n4 5\n''') == '5 5 4 5'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3 1 2 3 2'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3 2'\nassert solution('4') == '1 2 3 2'\nassert solution('5') == '1 2 3 2'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n1 1\\n2 1\\n2 0') == '3 2 1 2'\nassert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3 1 2 3 2'\nassert solution('6\\n3 1\\n4 2\\n3 1\\n2 1\\n5 0') == '4 3 2 2 1'\nassert solution('1\\n1\\n0') == '1'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '3 2 1 2'"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '2 3'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == 'none'\nassert solution('3') == '3'\nassert solution('4') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 2 1 3\n\"\"\") == \"none\"\nassert solution(\"\"\"\n4\n1 2 1 3\n\"\"\") == \"none\"\nassert solution(\"\"\"\n5\n1 1 3 2 4\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 1 2') == '2'\nassert solution('3') == 'none'\n\n'''"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\n''') == '1 2'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2\n1 2 3\n\"\"\") == \"1 2 3\"\nassert solution(\"\"\"3\n1 1 2\n\"\"\") == \"1 2\"\nassert solution(\"\"\"4\n1 1 1 2\n\"\"\") == \"none\"\nassert solution(\"\"\"5\n1 1 1 1 2\n\"\"\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('5') == '4'\nassert solution('2') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 2 3\\n\") == \"1\"\nassert solution(\"2\\n1 1 2\\n\") == \"none\"\nassert solution(\"4\\n1 2 1 3\\n\") == \"none\"\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1 2\n''') == '1'\nassert solution('''\n3\n1 2 1 3\n''') == 'none'\nassert solution('''\n4\n1 1 2 1 3\n''') == 'none'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == 'none'\nassert solution('5') == 'none'\n\"\"\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n2 1 0 1 2 3 3\\n\") == \"5\"\nassert solution(\n    \"1\\n2 1 0 1 2 3 3\\n\") == \"5\"\nassert solution(\n    \"2\\n3 1 0 1 2 3 3\\n\") == \"4\"\nassert solution(\n    \"2\\n4 1 0 1 2 3 3\\n\") == \"3\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n2 1 0 1 2 3 3') == '5'\nassert solution('10\\n2 1 1 2 1 1 2 2 2 2') == '7'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1 0 1 2 3 3') == '5'\nassert solution('9 8') == '0'\nassert solution('50 30 20 30') == '5'\nassert solution('100 1000 500') == '4'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 1 0 1 2 3 3\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\n2 1 0 1 2 3 3') == '5'\nassert solution('101\\n1 1 1 1 1 1 1') == '6'\nassert solution('101\\n1 1 1 1 1 1 1\\n1 2 1 1 1 1 1') == '10'\nassert solution('100\\n1 1 1 1 1 1 1') == '0'\nassert solution('100\\n1 1 1 1 1 1 1\\n1 2 1 1 1 1 1') == '11'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n1 2 1 1 2 3\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 2 1 1 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2\n1 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 0 1 2 3 3') == '5'\nassert solution('4 4 4 4 4 4 4 4 4') == '5'\nassert solution('6 6 6 6 6 6 6 6 6') == '5'\nassert solution('7 7 7 7 7 7 7 7 7') == '5'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2 3 2 1 1 2 1 2\") == \"4\"\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 1 0 1 2 3 3\\n') == '5\\n'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 0 1 2 3 3') == '4'\nassert solution('10\\n4 1 1 1 2 3 3 4') == '8'\nassert solution('100\\n1 1 1 1 2 3 3 4 5') == '10'\nassert solution('1000000\\n1 1000000 1 1000000 2 1000000 3 1000000 4 1000000') == '987654321'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '-1 -1 -1 -1 -1'\nassert solution('5 7') == '-1 5 6 7 -1'\nassert solution('8 8') == '-1 -1 -1 -1 -1 -1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '-1 -1 -1 -1 -1'\nassert solution('2 3') == '-1 -1 -1 -1 -1'\nassert solution('6 3') == '-1 -1 -1 -1 -1 -1 -1'\n\n\"\"\"\nimport collections\nimport itertools\nimport functools\nimport time\n\nclass Maze:\n    def __init__(self, input_str):\n        self.input_str = input_str\n        self.maze_dict = collections.defaultdict(list)\n        self.maze = collections.defaultdict(int)\n\n        input_data = self.input_str.split(\"\\n\")\n        self.width = int(input_data[0])\n        self.height = int(input_data[1])\n        self.start = self.get_start(input_data[2])\n\n        for i in range(self.height):\n            row_input = input_data[i+2].split(\" \")\n            for j in range(self.width):\n                self.maze_dict[(i,j)].append(row_input[j])\n\n        self.end = self.get_end(input_data[self.height+2])\n\n    def get_start(self, input_str):\n        start_square = ()\n        for i in range(len(input_str)):\n            if input_str[i] == 'M':\n                start_square = (i, 0)\n        return start_square\n\n    def get_end(self, input_str):\n        end_square = ()\n        for i in range(len(input_str)):\n            if input_str[i] == 'M':\n                end_square = (i, self.width-1)\n        return end_square\n\n    def check_for_maze(self, start, end):\n        explored = {}\n        moves = 0\n        stack = collections.deque([start])\n        while stack:\n            moves += 1\n            node = stack.pop()\n            x = node[0]\n            y = node[1]\n            if (x, y) in explored:\n                continue\n            explored[(x, y)] = True\n            if (x, y) == end:\n                return moves\n            if self.maze_dict[(x,y)]!= \"#\":\n                stack.extend(self.get_adjacent_squares((x,y)))\n        return -1\n\n    def get_adjacent_squares(self, curr):\n        result = []\n        for dir in itertools.product([-1, 0, 1], repeat=2):\n            if curr[0] + dir[0] < 0 or curr[0] + dir[0] > self.height-1:\n                continue\n            if curr[1] + dir[1] < 0 or curr[1] + dir[1] > self.width-1:\n                continue\n            if self.maze_dict[(curr[0] + dir[0], curr[1] + dir[1])]!= \"#\":\n                result.append((curr[0] + dir[0], curr[1] + dir[1]))\n        return result\n\n    def num_moves_to_end(self):\n        return self.check_for_maze(self.start, self.end)\n\n    def num_moves_to_end_v2(self):\n        # Need to keep track of moves by adding each time a cell is visited.\n        # State will be: (x, y)\n        # State is considered to be \"visited\" when there is something in the cells in its adjacency list.\n\n        # 0 - Empty\n        # 1 - Obstacle\n        # 2 - Start\n        # 3 - Goal\n        # 4 - Block\n        # 5 - Marked for a maze_solution\n        # 6 - Maze solved\n        maze = [[6 for x in range(self.width)] for y in range(self.height)]\n        visited = set()\n        stack = collections.deque()\n        stack.append(self.start)\n\n        while stack:\n            node = stack.pop()\n            x = node[0]\n            y = node[1]\n            visited.add((x,y))\n            maze[x][y] = 0\n            if x == self.end[0] and y == self.end[1]:\n                if maze[x][y] == 3:\n                    maze[x][y] = 5\n                    return 0\n                maze[x][y] = 6\n                return 1\n            if maze[x][y] == 1:\n                continue\n            for direction in [(0,1),(0,-1),(1,0),(-1,0)]:\n                x_ = x + direction[0]\n                y_ = y + direction[1]\n                if (x_, y_) in visited:\n                    continue\n                if maze[x_][y_] == 0:\n                    stack.append((x_,y_))\n            maze[x][y] = 1\n\n        return -1\n\n    def num_moves_to_end_v3(self):\n        # Set all the cells to not visited\n        maze = [[None for x in range(self.width)] for y in range(self.height)]\n        visited = set()\n        stack = collections.deque()\n        stack.append(self.start)\n\n        while stack:\n            node = stack.pop()\n            x = node[0]\n            y = node[1]\n            visited.add((x,y))\n            maze[x][y] = 0\n            if x == self.end[0] and y == self.end[1]:\n                return 0\n            for direction in [(0,1),(0,-1),(1,0),(-1,0)]:\n                x_ = x +"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1\\n'\nassert solution('10 10') == '-1 -1 -1 -1 -1\\n-1 0 -1 -1 -1\\n-1 -1 0 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n-1 -1 -1 -1 -1\\n'\nassert solution('2 6') == '-1 -1\\n-1 2\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n-1 -1\\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6\n#####\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '-1 -1 -1 -1 -1'\nassert solution() == '-1 4 5 6 -1'\nassert solution() == '-1 4 -1 -1 -1'\nassert solution() == '-1 1 0 1 -1'\nassert solution() == '-1 3 1 2 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6\\n#####\\n#...#\\n_###\\n_M.#\\n__.#') == '-1 -1 -1 -1 -1\\n-1 4 5 6 -1\\n-1 4 -1 -1 -1\\n-1 1 0 1 -1\\n-1 3 1 2 -1\\n-1 -1 -1 -1 -1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 6\") == \"2 2 2 2 2\"\nassert solution(\"3 3\") == \"6 1 1 3 1\"\nassert solution(\"2 10\") == \"10 2 2 2 2\"\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == '-1 -1 -1 -1 -1'\nassert solution('1 1') == '1'"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '-1 -1 -1 -1 -1'\nassert solution('10 10') == '-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\\n.##\\n###\\n##\") == \"3\"\nassert solution(\"5 6\\n#####\\n#..#\\n#_##\\n#__#\\n#####\") == \"-1\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''\n4 6 2\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\nassert solution('''10 4 1\n1\n2\n2\n4\n4\n5\n6\n3\n5\n3\n2\n7\n5\n5\n6\n''') == 'impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"6\"\nassert solution_again(\n    \"\"\"\n        4 6 1\n        1\n        1 2 1\n        1 3 1\n        1 4 1\n        2 3 2\n        2 4 4\n        3 4 3\n        \"\"\") == \"6\""
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '6'\nassert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n') == '6'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 6 1') == '6'\nassert solution('6 1') == 'Impossible'\nassert solution('1') == 'Impossible'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"11\"\nassert solution(\"2 6 1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"6\"\nassert solution(\"10 4 1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3\\n\") == \"impossible\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 6 1\\n1\\n1 2 1\\n1 3 1\\n1 4 1\\n2 3 2\\n2 4 4\\n3 4 3') == '6'\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'impossible'\nassert solution(\"\"\"5\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n\"\"\") == \"impossible\"\nassert solution(\"\"\"2\n1\n2\n\"\"\") == \"impossible\"\n\"\"\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"impossible\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''\n4 6 2\n1\n2 2 1\n2 3 3\n3 4 4\n2 4 4\n''') == 'impossible'\nassert solution('''\n4 6 3\n2\n2 3 2\n3 1 2\n3 1 1\n1 4 3\n''') == 'impossible'\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n\n\"\"\""
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4 2 1''') == '01001'\nassert solution('''1 1 1 1''') == '10101'\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\nassert solution(\"10 10 2 1\") == \"00011\"\nassert solution(\"12 10 2 1\") == \"00001\"\nassert solution(\"16 10 2 1\") == \"00010\"\nassert solution(\"20 10 2 1\") == \"000001\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 2 1') == '01001'\nassert solution('5 4 2 10') == '01100'\nassert solution('5 4 2 10 11') == '01101'\nassert solution('5 4 2 10 11 11') == '01110'\nassert solution('5 4 2 10 11 11 11') == '01111'\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 2 1') == '01001'"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 2 1\") == \"01001\"\n\"\"\""
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n2\n3\n4''') == '01001'\n\"\"\"\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 2 1\") == \"01001\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3''') == 'possible'\nassert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4''') == 'impossible'\n\"\"\"\n\nimport sys\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\nSample Input:\n10 10 5\n1 1\n2 3\n3 4\n3 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n8 9\nSample Output:\nimpossible\n< 2\n^ 3\n< 3\n^ 4\n< 4\n^ 5\n< 5\n^ 6\n< 6\n^ 7\n< 7\n^ 8\n< 8\n^ 9\n< 9\n^ 10\n< 10\n^ 11\n< 11\n^ 12\n< 12\n^ 13\n< 13\n^ 14\n< 14\n^ 15\n< 15\n^ 16\n< 16\n^ 17\n< 17\n^ 18\n< 18\n^ 19\n< 19\n^ 20\n< 20\n^ 21\n< 21\n^ 22\n< 22\n^ 23\n< 23\n^ 24\n< 24\n^ 25\n< 25\n^ 26\n< 26\n^ 27\n< 27\n^ 28\n< 28\n^ 29\n< 29\n^ 30\n< 30\n^ 31\n< 31\n^ 32\n< 32\n^ 33\n< 33\n^ 34\n< 34\n^ 35\n< 35\n^ 36\n< 36\n^ 37\n< 37\n^ 38\n< 38\n^ 39\n< 39\n^ 40\n< 40\n^ 41\n< 41\n^ 42\n< 42\n^ 43\n< 43\n^ 44\n< 44\n^ 45\n< 45\n^ 46\n< 46\n^ 47\n< 47\n^ 48\n< 48\n^ 49\n< 49\n^ 50\n< 50\n^ 51\n< 51\n^ 52\n< 52\n^ 53\n< 53\n^ 54\n< 54\n^ 55\n< 55\n^ 56\n< 56\n^ 57\n< 57\n^ 58\n< 58\n^ 59\n< 59\n^ 60\n< 60\n^ 61\n< 61\n^ 62\n< 62\n^ 63\n< 63\n^ 64\n< 64\n^ 65\n< 65\n^ 66\n< 66\n^ 67\n< 67\n^ 68\n< 68\n^ 69\n< 69\n^ 70\n< 70\n^ 71\n< 71\n^ 72\n< 72\n^ 73\n< 73\n^ 74\n< 74\n^ 75\n< 75\n^ 76\n< 76\n^ 77\n< 77\n^ 78\n< 78\n^ 79\n< 79\n^ 80\n< 80\n^ 81\n< 81\n^ 82\n< 82\n^ 83\n< 83\n^ 84\n< 84\n^ 85\n< 85\n^ 86\n< 86\n^ 87\n< 87\n^ 88\n< 88\n^ 89\n< 89\n^ 90\n< 90\n^ 91\n< 91\n^ 92\n< 92\n^ 93\n< 93\n^ 94\n< 94\n^ 95\n< 95\n^ 96\n< 96\n^ 97\n< 97\n^ 98\n< 98\n^ 99\n< 99\n^ 100\n< 100\n^ 101\n< 101\n^ 102\n< 102\n^ 103\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"impossible\"\nassert solution(\"3 4 6\") == \"possible\"\nassert solution(\"3 2\") == \"impossible\"\nassert solution(\"3 1\") == \"impossible\"\nassert solution(\"4 1\") == \"impossible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 6\") == \"possible\"\nassert solution(\"3 4 7\") == \"impossible\"\nassert solution(\"5 5 5\") == \"possible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\") == \"impossible\"\nassert solution(\"3 4 6\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3\\n3 4\\n4 4\") == \"possible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\n\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == \"possible\"\nassert solution(\"\"\"\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n2 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n\"\"\") == \"impossible\"\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\nSample Input 2:\n6 6 5\n2 2\n1 2\n3 3\n2 2\n1 2\n2 2\n1 2\nSample Output 2:\nimpossible\n< 1\n^ 2\n< 2\n^ 3\n< 3\n^ 4\n< 4\n^ 5\n< 5\n^ 6\n< 6\n''') == 'impossible'\nassert solution('''5 5 2\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 4\n5 5\nSample Output 3:\npossible\n< 1\n^ 2\n< 2\n^ 3\n< 3\n^ 4\n< 4\n^ 5\n< 5\n^ 6\n< 6\n''') == 'possible'\nassert solution('''5 5 2\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 4\n5 5\nSample Output 4:\nimpossible\n''') == 'impossible'\nassert solution('''6 6 5\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 4\n5 5\nSample Output 5:\npossible\n< 1\n^ 2\n< 2\n^ 3\n< 3\n^ 4\n< 4\n^ 5\n< 5\n^ 6\n< 6\n''') == 'possible'\nassert solution('''6 6 5\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n4 4\n5 5\nSample Output 6:\nimpossible\n''') == 'impossible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\nassert solution('''3 4 6\n1 2\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\nassert solution('''1 2\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\nassert solution('''2 3\n2 3\n3 3\n3 4\n''') == 'impossible'\nassert solution('''3 4\n3 4\n4 4\n''') == 'possible'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 6\") == \"possible\"\nassert solution(\"3 3\") == \"impossible\"\nassert solution(\"10 1\") == \"impossible\"\nassert solution(\"5 4\") == \"possible\"\nassert solution(\"7 1\") == \"impossible\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == '2.0'\nprint(solution(input_data))"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0.5\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([0, 1, 2, 0, 1, 2]) == \"2.0\"\nassert solution([0, 0, 1]) == \"1.4142135623730951\"\nassert solution([0, 0, 0, 0, 0, 0]) == \"0.0\"\nassert solution([0, 0, 0, 0, 0, 0, 0, 0, 0]) == \"0.0\""
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '3.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n0 0 1\n0 1 1\n2 0 3\n2 1 3''') == '2.0'\nassert solution('''5\n0 0 1\n0 1 1\n1 0 2\n1 1 2\n2 0 3\n2 1 3\n2 2 4''') == '3.82842712475'\nassert solution('''9\n0 0 1\n0 1 1\n1 0 2\n1 1 2\n2 0 3\n2 1 3\n2 2 4\n2 3 5\n2 4 6\n3 4 7\n4 5 8\n5 6 9''') == '7.3241376238'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == '2.0\\n'"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1\n0 0 1\n0 1 1\n2 0 3\n2 1 3\"\"\") == \"2.0\"\"\", \"\"\"Our spaceship first connects the two parts of the quadrant, but the second part collapses on itself, so the spaceship has landed safely on the home planet and must return to it.\"\"\"\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n\") == \"2.0\"\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n') == '2.0'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 0 1\n0 1 1\n2 0 3\n2 1 3\n''') == '2.0'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1 2\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2'\n) == '4'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2') == '4'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5\n4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n\"\"\") == \"4\"\nassert solution(\"\"\"5\n1 2 3 4 5 6\n1 2 3 4 5 6\n3 4 5 6 1 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '3'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\\n5 4 3 2 1 6 7\\n5 5 1 1 3 4 7\\n3 7 1 4 5 6 2\") == \"4\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4 3 2 1 6 7\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\n\"\"\"\nimport math\n\nn = int(input())\n\nsorted_nums = sorted([int(i) for i in input().split()])\n\nsorted_nums_counter = {}\n\nfor num in sorted_nums:\n    if num in sorted_nums_counter:\n        sorted_nums_counter[num] += 1\n    else:\n        sorted_nums_counter[num] = 1\n\nanswer = 0\nfor sorted_nums_counter_key in sorted_nums_counter:\n    if sorted_nums_counter_key in [1, 2, 3, 4, 5]:\n        continue\n    else:\n        answer = max(answer, sorted_nums_counter[sorted_nums_counter_key] - math.ceil(sorted_nums_counter_key / 5))\n\nprint(answer)\n\"\"\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('4 2') == '2'\nassert solution('4 2 3') == '2'\nassert solution('4 2 3 0') == '2'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"4\\n-10 0\\n-10 10\"\n) == \"2\"\n\nassert solution(\n    \"100\\n0 0\\n100 10\"\n) == \"100\"\n\nassert solution(\n    \"5\\n0 0\\n5 10\"\n) == \"6\"\n\nassert solution(\n    \"100\\n-10 0\\n-10 10\"\n) == \"100\"\n\"\"\"\n\nL = int(input())\nx1, y1 = map(int, input().split())\nx2, y2 = map(int, input().split())"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"4\"\n\n\"\"\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\n\"\"\"\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '3'\n\n'''"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('6') == '3'\nassert solution('1000') == '4'\nassert solution('10000') == '5'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2') == '2'\nassert solution(\n    '4') == '4'\nassert solution(\n    '6') == '4'\nassert solution(\n    '1000000000') == '1000000000'\n\n\"\"\""
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n-10 0\\n-10 10\\n') == '2'\nassert solution('2\\n1 1\\n2 2\\n') == '3'\n\n---"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n-10 0\n-10 10\n''') == '2'\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '2'\nassert solution('-1') == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"2 5\") == \"1\"\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"0\""
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 5\n''') == '0'\nassert solution('''1 8\n''') == '2'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 5\n''') == '0'\nassert solution('''\n1 10\n''') == '9'\nassert solution('''\n1 100\n''') == '95'\nassert solution('''\n100 5\n''') == '95'\nassert solution('''\n10 100\n''') == '110'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '0'\nassert solution('1 100') == '9'\nassert solution('1 1') == '1'\nassert solution('2 4') == '6'\nassert solution('7 6') == '3'"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 5\n''') == '0', 'Your solution does not pass the assertion test'\n\nassert solution('''\n1 2\n''') == '1', 'Your solution does not pass the assertion test'\n\nassert solution('''\n1 5\n''') == '1', 'Your solution does not pass the assertion test'\n\nassert solution('''\n5 6\n''') == '2', 'Your solution does not pass the assertion test'\n\nassert solution('''\n10 10\n''') == '3', 'Your solution does not pass the assertion test'"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '0'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 5\n''') == '0'\nassert solution('''3 5\n''') == '1'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n1 5\n''') == '0'\nassert solution(\n'''\n10 2\n''') == '5'\nassert solution(\n'''\n100 10\n''') == '0'\nassert solution(\n'''\n1 100\n''') == '101'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5\") == \"0\"\nassert solution(\"5 5\") == \"1\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\"\n) == \"0 0\\n1 1\"\nassert solution(\n    \"3 3\\n1 0 0\\n0 1 0\\n0 0 1\"\n) == \"0 0\\n1 1\"\nassert solution(\n    \"2 3\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\"\n) == \"1 1\\n2 2\"\nassert solution(\n    \"3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n0 0 1\"\n) == \"0 0\\n1 1\""
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\nassert solution(\"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '0 0'\nassert solution('3 3') == '1 1'"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n\"\"\") == \"0 0\"\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '0 0'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\nassert solution(\n    \"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 1\\n1 0\"\nassert solution(\n    \"2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\") == \"0 0\\n1 1\"\n\n\"\"\"\n\nW, H = list(map(int, input().split()))\n\nfloor_image = set()\nrobot_image = set()\n\nfor i in range(H):\n    image_line = list(map(int, input().split()))\n    for j in range(W):\n        if image_line[j] == 1:\n            robot_image.add((j,i))\n        else:\n            floor_image.add((j,i))\n\nrobot_image = sorted(robot_image, key=lambda x: (x[0], x[1]))\nfloor_image = sorted(floor_image, key=lambda x: (x[0], x[1]))"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n1 0\n0 1\n3 3\n1 0 0\n0 1 0\n0 0 1\n''') == '0 0\\n1 1\\n'''\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '0 0'\nassert solution('1 1') == '1 1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1') == '0 0\\n1 1\\n'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 0.950000\n0.700000 50''') == '44.975'\nassert solution('''2 2 0.950000\n0.700000 50''') == '55.375'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == \"44.975\""
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 0.950000') == '44.975'\nassert solution('4 0.4 100') == '0.00071'\nassert solution('0 2 0.950000') == '6.34625'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 0.950000') == '44.975'\n\nassert solution('1 2 0.940000') == '26.750000'\n\nassert solution('1 2 0.920000') == '21.6000000'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50\\n') == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 0.950000') == '44.975'\nassert solution('0.700000 50') == '50.00'"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 0.950000\n0.700000 50\n''') == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 0.950000\") == \"44.975\"\nassert solution(\"1 2 0.950000 1.5\") == \"54.17\"\nassert solution(\"1 2 0.950000 1.1\") == \"54.17\"\nassert solution(\"1 2 0.950000 0.95\") == \"54.2\"\nassert solution(\"1 2 0.950000 0.95 0.95\") == \"54.2\"\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\nassert solution('0.700000 50\\n1 2 0.950000') == '44.975'\n\nassert solution('1\\n2\\n0.950000\\n0.700000 50') == '44.975'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == \"44.975\""
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\nassert solution(\"1 3\") == \"IMPOSSIBLE\"\nassert solution(\"2 2\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\nassert solution('1 1') == '1'\nassert solution('5 2') == '1'\nassert solution('1 3') == 'IMPOSSIBLE'\nassert solution('3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\n''') == \"2\"\nassert solution('''3 2 5\n1 1\n5 2\n1 3\n3\n3\n2\n1\n''') == \"2\"\nassert solution('''3 2 5\n1 1\n5 2\n1 3\n3\n3\n2\n1\n''') == \"2\"\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('5 2') == 'IMPOSSIBLE'\nassert solution('1 3') == '2'\nassert solution('3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"2 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\"\"\") == \"2\"\n\nassert solution(\"\"\"3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\"\"\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('3 4 5') == '3'\nassert solution('5 2 7') == '2'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1''') == '2'\nassert solution('''10 2 5\n10 1\n5 2\n10 3\n5 3\n2\n1\n10\n10\n10\n10\n3\n3\n3\n2''') == '2'\n\nimport sys\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('3 2 3') == '2'\nassert solution('3 2 3') == '2'\n\n'''\nimport sys"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 3') == 'IMPOSSIBLE'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('5 2') == 'IMPOSSIBLE'\nassert solution('1 3') == '2'\nassert solution('3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 2 3\n1 1\n5 2\n1 3\n3\n3\n2\n1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3 3 3\n1 1\n5 3\n1 3\n3\n3\n2\n1\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n5 2 5\n1 1\n10 5\n1 5\n5\n1\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n\"\"\") == \"4.0\"\nassert solution(\"\"\"\n4 4\n0.0 0.0\n6.0 6.0\n6.0 0.0\n0.0 6.0\n\"\"\") == \"8.0\"\nassert solution(\"\"\"\n5 5\n0.0 0.0\n0.0 6.0\n6.0 0.0\n0.0 0.0\n\"\"\") == \"12.0\"\nassert solution(\"\"\"\n5 5\n0.0 6.0\n6.0 0.0\n0.0 6.0\n6.0 0.0\n\"\"\") == \"18.0\"\nassert solution(\"\"\"\n5 5\n0.0 6.0\n6.0 0.0\n0.0 6.0\n6.0 0.0\n\"\"\") == \"25.0\""
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('5 5') == '1.0'\nassert solution('10 10') == '1.0'\nassert solution('20 20') == '0.0'\nassert solution('100 100') == '0.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == \"4.0\""
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0') == \"4.0\"\nassert solution('5\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n0.0 6.0') == \"8.0\"\nassert solution('10\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n0.0 6.0\\n0.0 6.0\\n0.0 6.0') == \"16.0\"\nassert solution('10\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n0.0 6.0\\n0.0 6.0\\n0.0 6.0') == \"20.0\"\nassert solution('10\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\\n0.0 6.0\\n0.0 6.0\\n0.0 6.0') == \"20.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"2.0\"\nassert solution(\"1 1\") == \"2.0\"\nassert solution(\"10 10\") == \"12.0\"\n\n=====\nEwan is a park ranger, and part of his duty is to observe how the ecosystem changes over time. He has just detected that a group of pine trees and aspens have started to share the same space. Before, there was a clear line between the species.\n\nThis isn\u2019t unusual, but Ewan is a bit curious about how this will evolve in the future. To track it, he wants to know how much of the area is covered by both species right now.\n\n-----Input-----\nThe input begins with a single line with two integers $P$ and $A$: the number of pine trees and aspens, respectively. Then follow $P + A$ lines, one line for each tree. The first $P$ of these lines contain locations for the pine trees, and the remaining $A$ lines contain locations for the aspens.\n\nEach tree is represented by two real numbers $x_ i$ and $y_ i$, representing the location of the tree on a 2D map in metres.\n\n-----Output-----\nOutput the area covered by both species in square metres. Your answer must have an absolute or relative error of at most $10^{-3}$.\n\nA point is covered by a species if it is at the edge of or inside a triangle made by three distinct trees of that species.\n\n-----Limits-----\n - $0 \\leq P, A \\leq 1000$\n - $0.0 \\leq x_ i, y_ i \\leq 1000.0$\n - $0.2 < |x_ i-x_ j|+|y_ i-y_ j|$ for all $0 \\leq i < j < P + A$\n - Real numbers in the input will have at most $8$ digits after the decimal point\n\n-----Examples-----\nSample Input:\n3 3\n0.0 6.0\n6.0 0.0\n6.0 6.0\n4.0 4.0\n10.0 4.0\n4.0 10.0\nSample Output:\n4.0\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"4.0\"\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1.0'\nassert solution('3 3') == '1.0'\nassert solution('4 3') == '1.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '0.16666666666666666'\nassert solution('1 1') == '1.0'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('5 5') == '8.0'\nassert solution('6 6') == '4.0'\nprint('Yay, all tests passed!')\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 3\\n0.0 6.0\\n6.0 0.0\\n6.0 6.0\\n4.0 4.0\\n10.0 4.0\\n4.0 10.0\") == \"4.0\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '18000'\nassert solution('3') == '6750'\nassert solution('4') == '18000'\nassert solution('2') == '34560'\nassert solution('1') == '400'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n220 29\n195 20\n200 9\n''') == '18000'\nassert solution('''\n5\n280 150\n175 10\n190 20\n170 10\n160 30\n''') == '37000'\n'''\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n220 29\n195 20\n180 30\n\"\"\") == \"18000\"\nassert solution(\"\"\"\n4\n220 29\n195 20\n200 9\n180 30\n\"\"\") == \"45000\"\nassert solution(\"\"\"\n3\n290 5\n100 5\n200 20\n\"\"\") == \"18000\"\nassert solution(\"\"\"\n5\n260 30\n260 50\n160 20\n185 10\n130 50\n\"\"\") == \"24000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n220 29\n195 20\n200 9\n''') == '18000'\nassert solution('''\n4\n280 30\n220 20\n280 20\n150 120\n''') == '3600'\n'''\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r\"\"\"\n4\n220 29\n195 20\n200 9\n180 30\n\"\"\") == \"18000\"\n\nprint(solution(r\"\"\"\n5\n220 30\n195 20\n200 9\n180 30\n\"\"\"\")) == \"60000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"3\\n180 30\\n195 20\\n220 29\") == \"16000\"\n\"\"\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '18000'\nassert solution('4') == '18000'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"3\\n220 29\\n195 20\\n200 9\\n180 30\") == \"18000\"\nassert solution(\"4\\n220 29\\n195 20\\n200 9\\n180 30\") == \"15000\"\nassert solution(\"5\\n220 29\\n195 20\\n200 9\\n180 30\") == \"12000\"\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n200\n180\n''') == '18000'\nassert solution('''\n1\n300\n250\n''') == '4500'\nassert solution('''\n1\n125\n150\n''') == '4000'\nassert solution('''\n2\n200\n180\n''') == '3600'\nassert solution('''\n3\n300\n240\n250\n''') == '4200'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == '18000'\nprint(solution(input_))\n\"\"\"\nimport sys\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BUYSTICKERS') == '28'\nassert solution('TICKERS') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''BUYSTICKERS\n4\nBUYER 10\nSTICKY 10\nTICKERS 1\nERS 8''') == '28'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('BUYSTICKERS') == '28'\nassert solution('STICKY') == 'impossible'\nassert solution('TICKERS') == 'impossible'\nassert solution('ERS') == 'impossible'\nassert solution('SODA') == 'impossible'\n\nprint(f\"{solution(input()) = }\")\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28'\nassert solution('BAITERS\\n6\\nBAITER 1\\nBAITER 2\\nBAITER 3\\nBAITER 4\\nBAITER 5\\nBAITER 6\\nBAITER 7\\nBAITER 8\\nBAITER 9\\nBAITER 10\\nBAITER 11') == 'IMPOSSIBLE'\nassert solution('TICKERS\\n5\\nTICKER 1\\nTICKER 2\\nTICKER 3\\nTICKER 4') == '28'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    BUYER\n    STICKY\n    TICKERS\n    ERS 8\n    BUYER 10\n    STICKY 10\n    TICKERS 1\n    ''') == '28'\n'''"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8') == '28'\nassert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\nIMPOSSIBLE') == 'IMPOSSIBLE'\nassert solution('BUYSTICKERS\\n2\\nBUYER 10\\nERS 10\\nTICKERS 1\\nERS 8') == 'IMPOSSIBLE'\nassert solution('BUYSTICKERS\\n5\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\nERS 5\\nTICKERS 1') == '28'\nassert solution('BUYSTICKERS\\n5\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\nERS 5\\nTICKERS 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"BUYSTICKERS\\n\") == \"28\"\nassert solution(\"ERS\\n\") == \"Impossible\"\nassert solution(\"TICKERS\\n\") == \"Impossible\"\nassert solution(\"BUYER\\n10\\nSTICKY\\n8\\n\") == \"28\"\nassert solution(\"ERS\\n1\\n1\\n\") == \"Impossible\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BUYSTICKERS') == \"28\"\nassert solution('STICKY') == \"2\"\n"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('BUYSTICKERS') == '28'\nassert solution('TICKERS') == 'IMPOSSIBLE'\n'''"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 8\\n') == '28'\nassert solution('BUYSTICKERS\\n4\\nBUYER 10\\nSTICKY 10\\nTICKERS 1\\nERS 20\\n') == 'IMPOSSIBLE'\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"INDV 3\"\nassert solution(\"3 3\") == \"INDV 2\"\nassert solution(\"10 2\") == \"CORP 2\"\nassert solution(\"5 3 1\") == \"INDV 4\"\nassert solution(\"1 1\") == \"INDV 1\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 8') == 'INDV 2\\nINDV 4\\nCORP 1\\nINDV 5\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 1\\nCORP 2\\nINDV 1\\nCORP 1\\nINDV 2\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\nCORP 3'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == 'INDV 2'\nassert solution('3 2') == 'CORP 1'\nassert solution('3 2') == 'INDV 2'\n\"\"\""
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 8') == 'INDV 2'\nassert solution('1 1') == 'INDV 1'\nassert solution('2 1') == 'INDV 1'\nassert solution('3 1') == 'INDV 4'\nassert solution('4 2') == 'CORP 1'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 8') == 'INDV 1'\nassert solution('1 1') == 'INDV 1'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 8') == 'CORP 1'\n\nassert solution('7 5 11') == 'CORP 5'\n\nassert solution('9 9 5') == 'CORP 4'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 4') == 'INDV 1'\nassert solution('2 3') == 'INDV 2'\nassert solution('2 1') == 'INDV 1'\nassert solution('1 3') == 'INDV 3'\nassert solution('3 3') == 'INDV 5'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 8') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5\\nCORP 2'\nassert solution('10 5 3') == 'INDV 4\\nINDV 5\\nINDV 1\\nCORP 2\\nCORP 3\\nCORP 5\\nCORP 1\\nINDV 2\\nCORP 4'\nassert solution('10 5 2') == 'CORP 3\\nCORP 2\\nCORP 1\\nINDV 2\\nINDV 3\\nCORP 5\\nINDV 1\\nCORP 4\\nINDV 4\\nCORP 5'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 1\") == \"INDV 1\"\nassert solution(\"5 3 8\") == \"INDV 2\"\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"INDV 4\"\nassert solution(\"1 1\") == \"INDV 1\"\nassert solution(\"2 1\") == \"INDV 2\"\nassert solution(\"3 1\") == \"CORP 1\"\nassert solution(\"4 2\") == \"INDV 4\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    4\n    10 1\n    0\n    10\n    10\n''') == '2.4142135624'\nassert solution('''\n    5\n    10 1\n    0\n    10\n    10\n    10\n''') == '5.0'\nassert solution('''\n    1000\n    1000\n    1000\n''') == '0.0'\nassert solution('''\n    1000\n    500\n    500\n    500\n''') == '250.0'\nassert solution('''\n    1000\n    500\n    500\n''') == '250.0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2.4142135624\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n10 1\n1\n0\n10\n10\n\"\"\") == \"2.4142135624\"\nassert solution(\"\"\"\n3\n10 2\n1\n4\n10\n\"\"\") == \"1.1666666745\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n10 1\n1\n0\n10\n10\n''') == '2.4142135624'\nassert solution('''\n4\n100 10\n20\n0\n100 20\n10\n0\n''') == '121.75'\nassert solution('''\n5\n5 1\n0\n0\n0\n0\n''') == '0'\nassert solution('''\n1\n1\n0\n0\n''') == '0'\nassert solution('''\n100\n100\n0\n0\n''') == '0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n6 1\n3\n0\n10\n8\n\"\"\") == \"7.083333333333333\"\nassert solution(\"\"\"\n6\n3 5\n2\n1\n4\n0\n\"\"\") == \"7.142857142857143\"\nassert solution(\"\"\"\n6\n4 2\n3\n0\n5\n1\n\"\"\") == \"7.571428571428571\"\nassert solution(\"\"\"\n6\n3 4\n2\n1\n5\n0\n\"\"\") == \"7.777777777777778\"\nassert solution(\"\"\"\n5\n4 3\n2\n1\n5\n0\n\"\"\") == \"6.666666666666668\"\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1.4142135624'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2.4142135624\""
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2.4142135624'\nassert solution_part2(input_data) == '3.74358974359'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '1.4142135624'\nassert solution('100') == '3.9270072925'\nassert solution('1000') == '2.2222084351'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.5'\nassert solution('3') == '2'\nassert solution('4') == '1.75'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\n\"\"\"\nsolution:\nintuition:\nlalalala\n\n\"\"\"\n\"\"\"\nwhoo\n\"\"\"\n\nfhjh\nclass Solution:\n    def solve(self, n, u, v, c, x, y):\n        x -= u\n        y -= v\n        x = x if x >= 0 else 0\n        y = y if y >= 0 else 0\n        print(x,y)\n        for i in range(1,n):\n            x, y = y, x + y\n            if x < y:\n                print(x,y)\n                break\n        print(c*x + y)\n\nimport sys\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '2\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'\nassert solution(\n    '5\\n1 2 5\\n3 1 5\\n2 1\\n5 0\\n1 3') == '15'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '6'\nassert solution('4') == '10'\nassert solution('10') == '73'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n2\n2 2\n3 1\n''') == '3'\nassert solution('''\n1\n10\n''') == '10'\nassert solution('''\n1\n5\n''') == '0'\nassert solution('''\n1\n5\n''') == '5'\n''')\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '20'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''2\n3 1 5\n2 1\n5 0\n1 3\n''') == '18'\n'''\n\nimport itertools\nimport math\nfrom collections import defaultdict"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 5') == '15'\nassert solution('3 1 5') == '10'\nassert solution('2 1') == '1'\nassert solution('5 0') == '5'\nassert solution('1 3') == '3'\n'''\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2\n2 1\n''') == '0'\nassert solution('''3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3 1 5\\n3 1 5\\n2 1\\n5 0\\n1 3\\n') == '15'\nassert solution('5\\n1 3\\n3 1\\n5 0\\n1 3\\n') == '15'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5 3 3 4\n''') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 3 3 4\\n\") == \".....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n\"\n\nSample Input:\n4 2 6 5\nSample Output:\n..R.\n..P\n@.C\n@.A\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 3 10\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '..ABC.@DDDD'\n\nassert solution('''\n10 10 10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5 3 3 4\n''') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5 3 3 4\n''') == '...BD.C'\n\nassert solution('''\n6 7 6 6 4\n''') == '...ABCBB'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 5 3 3 4\n.....\n..BBC\n..A.C\n....C\n@DDDD''') == 'ABCDDAB'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 3 3 4') == '....C'\n\n\"\"\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 3 3 4\") == \"...BBBC\"\nassert solution(\"5 5 5 5 4\") == \"...AAAA\"\nassert solution(\"3 3 3 3 3\") == \"...ABAA\"\n\n\"\"\"\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1 5 1 4\") == \"ABC@D\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5\n1\n11\n11''') == '1111'\nassert solution('''2 2\n1\n11''') == '1111'\nassert solution('''1 1\n1\n11''') == '1111'\nassert solution('''1 1\n1\n11''') == '1111'\nassert solution('''1 1\n1\n11''') == '1111'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n111\n001\n000\n111\n000\n''') == '001'\nassert solution('''\n4 2\n101\n001\n001\n001\n''') == '001'\nassert solution('''\n10 1\n111\n001\n000\n111\n000\n111\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n000\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"001\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1\\n2\\n\") == \"0011\"\nassert solution(\"10\\n1\\n2\\n\") == \"0001\"\nassert solution(\"10\\n1\\n3\\n\") == \"00013\"\nassert solution(\"10\\n1\\n3\\n\") == \"00013\"\nassert solution(\"1\\n1\\n1\\n\") == \"00011\"\n\nstdin = \"\"\"\n5 3\n111\n001\n000\n111\n000\n\"\"\"\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '001'\nassert solution('8 3') == '001'\nassert solution('9 3') == '001'"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n111\n001\n000\n111\n000\nSample Input 2:\n3 3\n001\n001\n011\nSample Output 2:\n001\n001\n011\n''') == '001'"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 3\n1 2\n''') == '1 2\\n1 3\\n1 3\\n1 2\\n1 3\\n1 3\\n1 2\\n'\nassert solution('''\n3 3\n100\n10\n''') == '100\\n10\\n'\nassert solution('''\n3 3\n100\n10\n''') == '100\\n10\\n'\nassert solution('''\n5 3\n1111\n001\n000\n''') == '001\\n001\\n001\\n001\\n001\\n'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n111\\n001\\n000\\n111\\n000') == '001\\n001\\n001\\n111\\n200'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '001'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('19/13\\n10/1') == '10 20'\nassert solution('19/14\\n4/3') == '19 20'\nassert solution('19/15\\n19/7') == '19 20 15 13 7 2'\nassert solution('19/2\\n19/17') == '19 20 15 13 7 2'\nassert solution('4/3\\n20/7') == '4 20 7 13 14'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"19/13\") == \"19 20\"\nassert solution(\"10/1\") == \"10 20\"\nassert solution(\"19/14\") == \"19 20\"\nassert solution(\"4/3\") == \"4 6 3\"\nassert solution(\"20/7\") == \"20 10 9 5 3 1\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('19/13') == '20/7'\nassert solution('10/1') == '20/13'\nassert solution('19/14') == '20/13'\nassert solution('4/3') == '20/15'\nassert solution('20/7') == '20/13'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('19/13') == '19 20'\nassert solution('10/1') == '10'\nassert solution('19/14') == '14'\nassert solution('4/3') == '3'\nassert solution('20/7') == '7'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''19/13\n10/1\n19/14\n4/3\n20/7\n19/7\n20/13\n19/15\n10/7\n20/17\n19/2\n19/17''') == '19 20\\n17 15 14 13 7 2'"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"19/13\") == \"10 20\"\nassert solution(\"19/14\") == \"19 20\"\nassert solution(\"4/3\") == \"10 20\"\nassert solution(\"20/7\") == \"19 20\"\nassert solution(\"19/7\") == \"19 20\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12/3') == '12 18'\nassert solution('4/3') == '5 6'\nassert solution('20/7') == '18 19'\nassert solution('19/2') == '17'\nassert solution('19/17') == '15 14 13 7 2'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('19/13') == '19 20'\nassert solution('10/1') == '10'\nassert solution('19/14') == '19'\nassert solution('4/3') == '4 3'\nassert solution('20/7') == '20'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\\n4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\\n\") == \"17 15 14 13 7 2\"\nassert solution(\"16/9\\n16/3\\n\") == \"16 16\"\nassert solution(\"17/9\\n17/3\\n\") == \"17 17\"\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"19/13\\n10/1\\n19/14\") == \"20 17 14 13 7 2\"\nassert solution(\"4/3\\n20/7\\n19/7\\n20/13\\n19/15\\n10/7\\n20/17\\n19/2\\n19/17\") == \"20 17 14 13 7 2\"\nassert solution(\"19/13\\n19/14\\n10/1\\n19/15\\n20/7\\n19/2\\n19/17\\n4/3\") == \"20 17 14 13 7 2\"\nassert solution(\"19/13\\n10/7\\n19/15\\n20/13\\n19/2\\n19/17\\n4/3\") == \"20 17 14 13 7 2\"\nassert solution(\"19/13\\n10/7\\n19/14\\n20/13\\n19/2\\n19/17\\n4/3\") == \"20 17 14 13 7 2\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'possible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 1') == 'impossible'\n\n\"\"\"\n\nfrom math import sqrt\nfrom itertools import combinations\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n4 4\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\\n2 2 2\\n') == 'impossible'\nassert solution('5\\n4 3\\n0 2\\n0 0\\n3 0\\n1 1\\n1 0\\n1 1\\n1 1\\n1 1\\n1 1\\n') == 'possible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\nassert solution('2 2\\n0 0\\n0 2\\n1 2 3\\n2 2 2\\n3 0 3') == 'impossible'\nassert solution('2 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'impossible'"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'impossible'\nassert solution('0 0') == 'possible'\n\n-------Hints-------\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"3 1\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n0 2\\n0 3\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"possible\"\nassert solution(\"3 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3\") == \"impossible\"\nassert solution(\"3 4\\n0 0\\n0 1\\n1 2\\n1 3\\n2 0\\n2 1\\n2 2\\n2 3\\n3 0\\n3 1\\n3 2\\n3 3\") == \"possible\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n0\\n0\\n1\\n0\\n0') == 'possible'\nassert solution('2\\n2\\n1\\n0\\n1\\n0\\n0') == 'impossible'\nassert solution('3\\n3\\n0\\n0\\n0\\n0\\n0') == 'possible'\nassert solution('4\\n4\\n0\\n0\\n0\\n0\\n0') == 'impossible'\nassert solution('5\\n5\\n0\\n0\\n0\\n0\\n0') == 'impossible'\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n0 0\\n0 2\\n2 0\\n1 2 3\\n2 2 2\\n3 0 3') == 'possible'\nassert solution('1 1\\n0 0\\n0 2\\n0 3') == 'impossible'\nassert solution('0 1\\n0 1\\n0 2\\n0 3') == 'impossible'\nassert solution('1 2\\n2 1\\n2 2\\n3 1\\n3 2\\n3 3') == 'impossible'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '4'\nassert solution('5 3') == '5'\nassert solution('4 1') == '1'"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"4\""
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1') == '4'\nassert solution('3\\n3\\n1\\n1') == '3'\nassert solution('3\\n3\\n2\\n2') == '2'\nassert solution('3\\n3\\n3\\n3') == '1'"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n1\n1\n''') == '4'\nassert solution('''2\n2\n2\n2\n''') == '4'\nassert solution('''1\n2\n1\n1\n''') == '4'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n1\\n2') == '4'\nassert solution('1\\n2\\n3\\n1\\n1') == '5'\nassert solution('2\\n2\\n3\\n1\\n1') == '4'\nassert solution('2\\n2\\n3\\n2\\n1') == '3'\nassert solution('3\\n2\\n3\\n1\\n1') == '3'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '2 1'\nassert solution('4 3') == '5'\nassert solution('3 3') == '4'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '4'\nassert solution('4 5') == '7'\nassert solution('5 10') == '9'"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n2\n''') == '1'\nassert solution('''\n2\n2\n''') == '2'\nassert solution('''\n2\n4\n3\n''') == '4'\nassert solution('''\n6\n1\n2\n3\n4\n5\n''') == '6'\nassert solution('''\n10\n6\n3\n1\n2\n7\n8\n9\n10\n''') == '10'"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2\n1 1\n1 2\n1 3\n\"\"\") == \"Mirko\"\n\nassert solution(\"\"\"\n3\n1 1\n1 2\n1 3\n\"\"\") == \"Slavko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'Mirko'\n\"\"\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1 2\n2 1\n3 2\n\"\"\") == \"Mirko\"\n\nassert solution(\"\"\"3\n1 1\n2 2\n3 3\n\"\"\") == \"Slavko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Mirko'\nassert solution('1 1') == 'Mirko'\nassert solution('1 2') == 'Slavko'\nassert solution('1 1') == 'Slavko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\\n1 2\\n1 3\") == \"Slavko\"\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'Slavko'\nassert solution('6') == 'Slavko'\nassert solution('2') == 'Slavko'\nassert solution('1000') == 'Slavko'\nassert solution('100') == 'Mirko'"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 3\n''') == 'Mirko'\n'''\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Mirko', 'Sample Test 1 Failed'\nassert solution('1') == 'Slavko', 'Sample Test 2 Failed'\nassert solution('3') == 'Slavko', 'Sample Test 3 Failed'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n1 2\n1 3\n''') == 'Slavko'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 3\n''') == 'Mirko'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n4\n6''') == '2 4'\n\nassert solution('''4\n8\n20\n32\n8''') == '2 2'\n\nassert solution('''10\n15\n16\n14\n16\n12''') == '2 4 4'\n\nassert solution('''5\n6\n10\n12\n16''') == '2 2 2 4'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '3 2 1'\nassert solution('4') == '4 3 2 1'\nassert solution('5') == '5 4 3 2 1'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2 4'\nassert solution('2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2 4\"\nassert solution(input()) == \"4 2\"\nprint('solution = ', solution(input()))\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2 4\""
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2 4'\nassert solution('3') == '2 4 6'\nassert solution('4') == '3 6'\n\nimport math\nimport collections"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '2 4'\nassert solution('3') == '2 4'\nassert solution('2') == '2'\nassert solution('5') == '1 2 3 4 5'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n8\n15\n18\n''') == '1 2 4'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1 2 3'"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n6\n34\n38\n''') == \"2 4\"\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == \"1\"\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == \"1\"\n'''"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 5\n7 8 9\n10 11 12\n''') == '12'\nassert solution('''\n1\n3\n9\n''') == '9'\nassert solution('''\n2\n2\n4\n''') == '4'\nassert solution('''\n2\n4\n3\n''') == '3'\nassert solution('''\n3\n2\n2\n''') == '2'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '1'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '12'\nassert solution('5') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    4\n    10000 400000 500000 900000\n    \"\"\") == \"12\"\n\nassert solution(\n    \"\"\"\n    5\n    8 10 2 1000000 30556926000\n    \"\"\") == \"12\"\n\nassert solution(\n    \"\"\"\n    4\n    1 2 3 4\n    5 6 7 8\n    9 10 11 12\n    13 14 15 16\n    \"\"\") == \"21\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10000 400000 500000 900000\") == \"12\"\nassert solution(\"5\\n8 10 2 1000000 30556926000\") == \"12\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '1'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '12'\nprint('SUCCESS')\n\"\"\"\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\nassert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'NO'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 8') == 'YES'\nassert solution('1 1') == 'NO'\nassert solution('2 2') == 'NO'\n\nstdin = '1 1'\nprint(solution(stdin))\n\nstdin = '2 2'\nprint(solution(stdin))\n\nstdin = '4 4'\nprint(solution(stdin))\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0\") == \"YES\"\nassert solution(\"4 4\\n0\\n1 3 0\\n2 4 0\\n3 4 0\\n\") == \"NO\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 8\") == \"YES\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"1\") == \"NO\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2\\n0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'\n\nprint(solution(input()))\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 8\\n0\\n2 4 0\\n1 8 0\\n8 5 0\\n4 3 7 0\\n5 2 6 0\\n1 6 0\\n7 3 0') == 'YES'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 8') == 'YES'\nassert solution('0') == 'YES'\nassert solution('1') == 'NO'"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 8\") == \"YES\"\nassert solution(\"10 10\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2\\n3 4 5 6 1 2') == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == \"1 1\"\nassert solution('3 4 5 6 1 2') == \"5 6 1 2 3 4\"\nassert solution('6 2') == \"1 1 1 1 1 1\"\nassert solution('2 3 2') == \"1 1 2 1 1 1\"\nassert solution('1 1 1') == \"1 1 1 1 1 1\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n3 2\n1 2 3\n    \"\"\") == \"5 6 1 2 3 4\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    3 2\n    1 2 3\n''') == '5 6 1 2 3 4'\n\"\"\"\n\n\n\"\"\"\nn=int(input())\nk=int(input())\nl=[]\nfor i in range(1,n+1):\n    l.append(i)\nfor i in range(k):\n    t=int(input())\n    for j in range(len(l)):\n        if(l[j]==t):\n            l.remove(l[j])\n            break\nprint(\"\".join(str(x) for x in l))\n\"\"\"\n\"\"\"\ns=\"abcdefghijklmnopqrstuvwxyz\"\ndic={}\nfor i in range(1,27):\n    dic[i]=0\nfor i in range(len(s)):\n    dic[ord(s[i])]+=1\nfor i in range(1,27):\n    if(dic[i]==0):\n        print(i,end=\"\")\n\"\"\"\n\"\"\"\ninput = \"\"\"\n3 2\n1 2 3\n\"\"\""
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n3 4 5 6 1 2\n''') == '5 6 1 2 3 4'\nassert solution('''\n5\n1 1 2 2 2\n''') == '1 2'\nassert solution('''\n5\n1 1 2 2 2\n''') == '1 2'\nassert solution('''\n4\n1 1 2 2\n''') == '1 2'\nassert solution('''\n4\n1 1 2 2\n''') == '1 2'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5 6 7 8 1 2') == '1 2 3 4 5 6 7 8'\nassert solution('4 3 6 9 2 6 7 1') == '1 2 3 4 5 6 7 8'\nassert solution('2 4 6 3 7 8 2 2') == '1 2 3 4 5 6 7 8'\nassert solution('2 3 4 5 6 7 8 1 2') == '1 2 3 4 5 6 7 8'\nassert solution('5 4 5 5 6 7 8 1 2') == '1 2 3 4 5 6 7 8'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 5 6 1 2') == '5 6 1 2 3 4'\n\n\"\"\"\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 5 6 1 2') == '5 6 1 2 3 4'"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 8 4\") == \"20512\"\nassert solution(\"15 5 13 4\") == \"IMPOSSIBLE\"\nassert solution(\"2 5 6 4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 7 4 1') == 'IMPOSSIBLE'\n\nassert solution('1 2 5 9') == '1123'\n\nassert solution('1 5 7 4') == '1114'\n\nassert solution('8 1 7 4') == '1114'\n\nassert solution('5 1 3 4') == '2112'"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 2 8 4\"\n) == \"20512\"\nprint(solution(\n    \"5 2 8 4\"\n))\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('7 4 8 5') == 'IMPOSSIBLE'\nprint('ALL TEST CASES PASSED')"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3\n6\n1''') == '204'\nassert solution('''7\n2\n8\n2''') == '7254'\nassert solution('''5\n2\n4\n2\n2''') == '204'\nassert solution('''6\n2\n4\n2\n2''') == '7254'\nassert solution('''3\n3\n3\n3''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input) == sample_output\nassert solution(input) == output\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\n\"\"\"\n5 2 8 4\n\"\"\") == \"20512\"\n\nassert solution(\n\"\"\"\n1 10 2 4\n\"\"\") == \"1024\"\n\nassert solution(\n\"\"\"\n4 3 8 5\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n20\n30\n40\n50\n10\n20\n50\n30\n30\n10\n20\n30\n20\n10\n20\n30\n30\n10\n20\n50\n40\n10\n20\n30\n30\n10\n20\n40\n30\n30\n10\n20\n30\n20\n10\n20\n50\n30\n40\n10\n20\n30\n30\n10\n20\n40\n30\n30\n10\n20\n30\n20\n10\n20\n40\n30\n30\n10\n20\n30\n30\n10\n20\n40\n30\n30\n10\n20\n30\n30\n30\n30\n10\n20\n30\n40\n10\n20\n30\n30\n10\n20\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30\n30"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 2 3 4 5\n       6\"\"\") == \"1\"\nassert solution(\"\"\"6 8 9 1\n       0\"\"\") == \"1\"\nassert solution(\"\"\"1 0 0 0\n       10\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"0 0 1 0\n       2\"\"\") == \"2\"\nassert solution(\"\"\"5 0 0 0\n       0\"\"\") == \"0\"\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 8 4\n''') == '20512'\nassert solution('''\n0 1 8 4\n''') == 'IMPOSSIBLE'\nassert solution('''\n1 0 8 4\n''') == 'IMPOSSIBLE'\nassert solution('''\n2 0 8 4\n''') == '8'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 8') == '3'\nassert solution('4 5') == '4'\nassert solution('6 6') == '4'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 8') == '3'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '3'\nassert solution(input()) == '3'\nassert solution(input()) == '1'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == 2\nassert solution(\"3 8\") == 3\nassert solution(\"4 5\") == 3\nassert solution(\"1 2\") == 1\nassert solution(\"3 1\") == 2\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\nABC\nBCD\nEFG\n''') == '3'\nassert solution('''1 1\nAAA\n''') == '1'\nassert solution('''3 3\nBAC\nABC\n''') == '3'\nassert solution('''5 3\nABCDEFG\nABCDFG\nABEFG\nABCDFG\nACFG\n''') == '5'\nprint(solution('''1 1\nAAA\n'''))\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nBAC\nABC\n''') == \"2\"\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == \"3\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"3 8\") == \"3\"\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n\n## DO NOT TOUCH ANY CODE BELOW THIS LINE ##\nimport sys\nfrom io import BytesIO"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 8') == '3'"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == 2\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == 3\nassert solution('''\n5 5\nAACCCD\nABCBAA\nBDDAAE\nBCDABA\nBCDABA\n''') == 7"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '6'\nassert solution('2 2') == '6'\n\n\"\"\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '3'\nassert solution('1 1') == '1'\nassert solution('10 10') == '208'\nassert solution('1 0') == '1'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 3\") == \"6\"\nassert solution(\"2 3\") == \"8\"\nassert solution(\"3 3\") == \"13\"\nassert solution(\"4 5\") == \"42\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 1\") == \"3\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"3 3\") == \"10\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1,2]) == '3'\nassert solution([1,1]) == '2'\nassert solution([1,1,1]) == '1'\nassert solution([1,1,1,1]) == '0'"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 3') == '12'\nassert solution('2 4') == '19'\n\"\"\"\n\na, b = input().split()\na = int(a)\nb = int(b)\na = a - 1\nb = b - 1\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"10 10\") == \"208\"\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '3'\nassert solution('3 2') == '12'\nassert solution('4 3') == '9'\nassert solution('5 5') == '54'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\nassert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n1 1 1') == '2'\nassert solution('5 5\\n0 1 2 3\\n1 1 1\\n1 1 1\\n0 1 2 3\\n1 1 1\\n1 1 1') == '2'\nassert solution('5 5\\n0 1 2 3\\n1 1 1\\n1 1 1\\n0 1 2 3\\n1 1 1\\n1 1 1') == '1'\nassert solution('5 5\\n0 1 2 3\\n1 1 1\\n1 1 1\\n0 1 2 3\\n1 1 1\\n1 1 1') == '1'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n''') == \"3\"\nassert solution('''\n5 3\n2 1 2\n3 1 4\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n''') == \"2\"\nassert solution('''\n10 3\n1 2 0\n3 2 4\n4 1 4\n5 1 5\n5 2 5\n6 2 6\n6 3 5\n7 2 7\n7 3 5\n''') == \"2\"\nassert solution('''\n5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n''') == \"2\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n'''\n\nfrom itertools import combinations\n\nn, k = map(int, input().split())"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '3'\nassert solution('5 3') == '3'\nassert solution('5 5') == '5'\n\"\"\""
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\\n') == '3'\nassert solution('2 2\\n1 1\\n1 1\\n') == '1'"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4 2\n2 1 3\n3 0 2 4\n3 0 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n1 2\n3 0 2\n3 0 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5 2\n1 2 3\n3 0 2 4\n3 0 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1 3\n1 2 3\n2 3 4\n2 1 3\n\"\"\") == \"3\""
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3''') == '3'\nassert solution('''5 3\n3 1 2\n3 1 1 4\n2 1 4\n2 2 3\n''') == '1'\nprint('All test cases passed')"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3\") == \"3\"\nassert solution(\"6 3\\n1 3 2 3\\n2 2 3 4\\n3 0 2 3\\n4 2 4 4\\n3 2 3 4\\n2 1 4\\n3 2 4\") == \"2\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'YES'\nassert solution('1') == 'NO'\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'NO'\nassert solution('2') == 'YES'\nassert solution('1') == 'YES'\nassert solution('1') == 'YES'\nassert solution('1') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\", \"Not implemented\"\n\"\"\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n3\n1 1\n1 2\n2 1\n''') == 'YES'\n\nassert solution('''\n2\n2 2\n3 1\n''') == 'NO'\n\nassert solution('''\n1\n1 2\n2 1\n''') == 'YES'\n\nassert solution('''\n10\n1 1\n1 2\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3\n4 1\n4 2\n4 3\n4 4\n5 1\n5 2\n5 3\n5 4\n5 5\n5 6\n5 7\n5 8\n5 9\n5 10\n6 1\n6 2\n6 3\n6 4\n6 5\n6 6\n6 7\n6 8\n6 9\n6 10\n''') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n3 1\n3 2\n2 1\n3 1\n3 2\n1 2\n''') == 'YES'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == \"YES\"\nassert solution('5') == \"YES\"\nassert solution('2') == \"NO\"\nassert solution('5') == \"NO\"\nassert solution('5') == \"YES\"\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n''') == 'YES'\nassert solution('''\n1\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n''') == 'NO'\nassert solution('''\n5\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n''') == 'NO'\nassert solution('''\n5\n1 1\n1 3\n2 2\n2 3\n3 1\n3 2\n''') == 'NO'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 3\\n1 1') == 'YES'\nassert solution('2\\n3 1\\n3 1') == 'NO'\nassert solution('3\\n1 1\\n3 3') == 'NO'\nassert solution('6\\n3 2\\n1 2\\n2 2\\n1 3\\n3 1\\n2 3') == 'NO'"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\nassert solution('1\\n1\\n2\\n3\\n3\\n4\\n4') == 'NO'\n\"\"\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('3') == '4.000000000'\n'''"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('10') == '7.0714285714'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1\n1''') == '1.0'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\\\n4\n\"\"\") == \"3.000000000\"\nassert solution(\"\"\"\\\n5\n\"\"\") == \"3.99999999\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('100') == '289.999999999'\nassert solution('9') == '29.999999999'\n\"\"\""
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3.000000000\"\nassert solution(\"5\") == \"7.999999999999999999999999999\"\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('5') == '3.99999999'\nassert solution('10') == '3.999999999999999'\nassert solution('20') == '4.000000000000001'\nassert solution('60') == '4.99999999999999'\n\nimport math"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3.000000000'\nassert solution('10') == '3.000000000'\nassert solution('100') == '3.000000000'\nassert solution('1000') == '3.000000000'\nassert solution('10000') == '3.000000000'\n\"\"\""
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n') == '2.000000000'\nassert solution('1\\n100\\n') == '101.000000000'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2\n1\n1\n''') == '3.000000000'\nassert solution('''3\n2\n1\n2\n''') == '2.000000000'\nassert solution('''3\n2\n1\n2\n''') == '3.000000000'\nassert solution('''10\n6\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '93.33333333333333'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n3\") == \"1\"\nassert solution(\"1 2\\n3 2\\n\") == \"1\"\nassert solution(\"1 2\\n3 3\\n\") == \"0\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 5 2 1 4\") == \"2\"\nassert solution(\"3 3 3\") == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\n3\n''') == '1'\nassert solution('''\n1 2\n5\n''') == '0'\nassert solution('''\n5 3\n8\n''') == '2'\nassert solution('''\n7 3\n4\n''') == '1'\nassert solution('''\n7 3\n2\n''') == '1'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\n\n\"\"\"\n\nfrom math import sqrt"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n    2\n    2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n    3\n    5 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n    4\n    5 2 3 4\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3') == '1'\nassert solution('1 2\\n3\\n5') == '1'\nassert solution('1\\n2\\n3\\n4') == '2'\nassert solution('1\\n2\\n3\\n4\\n5') == '1'"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 2\n3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 3\n5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 3\n5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 2\n4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n\"\"\"\n\nstdin = \"\"\"\n2 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n\"\"\"\n\nstdout = \"\"\"\n3\n2\n3\n1\n\"\"\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n') == '3'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 4 2 3 2 3 4') == '2'\nassert solution('2 1 2 3 3 4') == '3'\nassert solution('2 1 2 3 3 4') == '3'\nassert solution('2 1 4 3 2 3 4') == '3'\nassert solution('2 1 4 3 2 3 4') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\n\nassert solution('''5 6 7\n0 0 0 0 1 1\n1 2 3 4 2\n2 2 3 2 2\n3 3 3 3\n3 2 4 2\n3 1 4 2\n3 3 2 2\n3 1 2 2\n1 1 1 1\n1 1 1 1\n3 3 4\n2 2 3\n2 2 3\n3 3 3\n1 2 1\n1 3 4\n3 3 3\n2 2 2\n3 3 4\n1 1 4\n''') == '4'\n\nassert solution('''3 4 5\n0 2 2 3\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\n\nassert solution('''3 4 5\n1 2 2 3\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\n\nassert solution('''3 5 6\n0 0 0 0 1 1\n1 2 3 4 2\n2 2 3 2 2\n3 3 3 3\n3 2 4 2\n3 1 4 2\n3 3 2 2\n3 1 2 2\n1 1 1 1\n1 1 1 1\n3 3 4\n2 2 3\n2 2 3\n3 3 3\n1 2 1\n1 3 4\n3 3 3\n2 2 2\n3 3 4\n1 1 4\n''') == '2'"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5') == '3'\nassert solution('1 3 4') == '3'\nassert solution('0 2 2 3 2') == '3'\nassert solution('1 3 2') == '3'\nassert solution('1 2 4') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"3\"\nassert solution(\"3 4 5\\n1 3 4\\n0 2 2 3 2\\n1 3 2\\n1 2 4\\n1 1 4\\n\") == \"2\"\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '1'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\\n2\\n3\\n1\\n\""
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == '2 HelloWorld.c\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str) -> str: pass\\n\\ndef solution(stdin: str"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nHelloWorld.c\\nint Main() {') == '1 HelloWorld.c'\nassert solution('4\\nHelloWorld.c\\nint Main() {') == '0'\nassert solution('5\\nAdd.c\\nint Main() {') == '3 Add.c'\n\"\"\"\n\nN = int(input())\n\nrepository = {}\nfor _ in range(N):\n    file_name, line_num, line = input().split()\n    repository[file_name] = (line_num, line)\n\nfragment = input()\nwhile fragment!= '***END***':\n    matched_lines = []\n    line_num = 0\n    while True:\n        if fragment[line_num] == '\\n':\n            line_num += 1\n            continue\n        if fragment[line_num:].find(repository[fragment][1])!= -1:\n            matched_lines.append(line_num)\n        line_num += 1\n    if len(matched_lines) == 0:\n        print(0)\n    else:\n        print(len(matched_lines))\n    fragment = input()\n\n\n\"\"\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"0\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2 HelloWorld.c\"\nassert solution(\"1\") == \"1 Add.c\"\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\nHelloWorld.c\\nint Main() {\\n\\tprintf(\"Hello %d\\n\",i);\\n}\\n***END***\\nAdd.c\\nint Main() {\\n\\tfor (int i=0; i<10; i++) sum += i;\\n\\tprintf(\"SUM %d\", sum);\\n}\\n***END***\\n') == '2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n\\tpass'"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\nHelloWorld.c\\nint Main() {printf('Hello %d\\n',i);}\\n***END***\\nadd.c\\nint Main() {printf('Hello %d\\n',i);}\\n***END***\\n\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"2\\nAdd.c\\nint Main() {sum += i; printf('SUM %d', sum);}\\n***END***\\nadd.c\\nint Main() {printf('Hello %d\\n',i);}\\n***END***\\n\") == \"2 Add.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\nassert solution(\"2\\n***END***\\nadd.c\\nint Main() {sum += i; printf('SUM %d', sum);}\\n***END***\\nHelloWorld.c\\nint Main() {printf('Hello %d\\n',i);}\\n***END***\\n\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\n\"\"\"\n\nfrom collections import defaultdict"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\nHelloWorld.c\\nint Main() {\\n    printf(\"Hello %d\\n\",i);\\n}\") == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++) \\n    sum += i;\\n  printf(\"SUM %d\", sum);\\n}\") == \"2 Add.c\\ndef solution(stdin: str) -> str:\\n    pass\\n\"\nassert solution(\"2\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\n3\\"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"HelloWorld.c\") == \"HelloWorld.c, add.c\"\nassert solution(\"Add.c\") == \"Add.c, add.c\""
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '2 Add.c'"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"HelloWorld.c\\n\" * 10) == \"2 HelloWorld.c\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\"\nassert solution(\"Add.c\\n\" * 10) == \"0 Add.c\\ndef solution(stdin: str) -> str:\\n\\tpass\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n\nassert solution(\"\"\"\n3 3\n2 2 2\n4 2 1\n4 4 1\n\"\"\") == '2'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 3\n2 2 2\n4 2 1\n4 4 1\n''') == '2\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '1'\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3\n2 2 2\n4 2 1\n4 4 1\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 3\n1 1 1\n2 2 2\n3 3 3\"\"\") == \"3\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 2\n2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3 3\n2 2 2\n4 2 1\n4 4 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 2\n2 2 3 4\n3 3 2 2\n4 4 1 1\n4 5 1\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n3\n4\n3\n4\n5\n6\n''') == \"2\"\nassert solution('''\n4\n2\n3\n4\n3\n4\n5\n6\n''') == \"4\"\nassert solution('''\n6\n2\n3\n4\n3\n4\n5\n6\n''') == \"4\"\nassert solution('''\n5\n2\n3\n4\n3\n4\n5\n6\n''') == \"5\"\nassert solution('''\n8\n2\n3\n4\n3\n4\n5\n6\n''') == \"5\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\"\n"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('4\\n2 2 2\\n4 4 1') == '2'"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n2 2 2\\n4 2 1\\n4 4 1\") == \"1\\n2\\n2\\n\""
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"2 2 2\\n\"\n    \"4 2 1\\n\"\n    \"4 4 1\"\n    ) == \"1\\n2\\n2\\n\"\n\nassert solution(\n    \"5 3\\n\"\n    \"1 1 1\\n\"\n    \"2 2 2\\n\"\n    \"2 1 1\\n\"\n    \"2 3 2\\n\"\n    \"2 4 2\\n\"\n    \"2 1 2\\n\"\n    \"3 1 1\\n\"\n    \"4 3 2\\n\"\n    \"4 1 1\"\n    ) == \"1\\n2\\n1\\n1\\n1\\n2\\n2\\n\"\n\nassert solution(\n    \"4 5\\n\"\n    \"3 5 1\\n\"\n    \"3 4 2\\n\"\n    \"3 1 1\\n\"\n    \"3 2 3\\n\"\n    \"3 4 2\\n\"\n    \"3 1 1\\n\"\n    \"4 3 2\\n\"\n    \"4 1 1\"\n    ) == \"1\\n1\\n2\\n2\\n1\\n2\\n1\\n2\\n\"\n\nassert solution(\n    \"4 3\\n\"\n    \"1 2 3\\n\"\n    \"2 2 2\\n\"\n    \"2 1 2\\n\"\n    \"2 3 2\\n\"\n    \"2 4 2\\n\"\n    \"2 1 2\\n\"\n    \"3 1 1\\n\"\n    \"4 3 2\\n\"\n    \"4 1 1\"\n    ) == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'\n\"\"\"\n\nn, c = map(int, input().split())\nmin_b_i, max_b_i = map(int, input().split())\nm_u = list(map(int, input().split()))\nassert len(m_u) == n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10\n15\n20\n\"\"\") == \"5\"\nassert solution(\"\"\"\n6\n23\n10\n20\n100\n150\n20\n\"\"\") == \"5\"\nassert solution(\"\"\"\n20\n15\n8\n20\n10\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n12\n10\n15\n10\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'\n'''\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 20') == '5'\nassert solution('3 5') == '5'\nassert solution('4 20') == '4'\nassert solution('4 3') == '3'\nassert solution('5 20') == '3'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 20\\n50 70 10\\n100 110 4\\n150 190 16') == '5'\nassert solution('5 1\\n1 1 1\\n2 2') == '0'\n\"\"\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 20\n50 70 10\n100 110 4\n150 190 16\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2 3\n4 5\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n50\n70\n10''') == '5'\nassert solution('''4\n100\n110\n4\n16''') == '5'\nassert solution('''2\n10\n1''') == '0'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\nassert solution('''\n5 10\n1000000 1000000 1\n''') == '4'\nassert solution('''\n5 10\n100 100 100 100 100\n''') == '0'\nassert solution('''\n10 10\n1000000 1000000 1\n''') == '1'\nassert solution('''\n100 10\n100 100 100 100 100\n''') == '0'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 20') == '5'\nassert solution('3 5') == '4'\nassert solution('2 5') == '4'\nassert solution('3 20') == '6'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"26\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\nassert solution(\"2 5\") == \"26\""
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '26'"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n(2 5) (5 3)\n.....\n.#.#.\n''') == 'IMPOSSIBLE'\nassert solution('''\n5\n(2 5) (5 3)\n.....\n.#.#.\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'\nassert solution('''\n8\n(1 1) (1 2) (1 3) (1 4) (2 1) (2 2) (2 3) (2 4) (3 1) (3 2) (3 3) (3 4) (4 1) (4 2) (4 3) (4 4)\n....#\n.....\n.#.#.\n..#.#\n...##\n''') == 'IMPOSSIBLE'\nassert solution('''\n8\n(1 1) (1 2) (1 3) (1 4) (2 1) (2 2) (2 3) (2 4) (3 1) (3 2) (3 3) (3 4) (4 1) (4 2) (4 3) (4 4)\n.....\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)''') == '26'\nassert solution('''6 6\n(2 2) (2 2) (2 2) (2 2) (2 2) (2 2)\n.....\n.###\n.###\n.....\n.###\n.###\n.....\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5') == '26'\nassert solution('10 10') == 'IMPOSSIBLE'\nassert solution('5 5') == '26'\nassert solution('3 1') == 'IMPOSSIBLE'\nassert solution('3 2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 5\\n\"\n    \"(2 5)\\n\"\n    \"(5 3)\\n\"\n    \".....\\n\"\n    \"#.#.#\\n\"\n    \"#.#.#\\n\"\n    \"....#\\n\"\n    \"#.##\\n\"\n    \"1\\n\"\n    \"6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"26\"\nassert solution(\n    \"5 5\\n\"\n    \"(2 5) (5 3)\\n\"\n    \"...\\n\"\n    \".#.#\\n\"\n    \"#.#.#\\n\"\n    \"....#\\n\"\n    \"#.##\\n\"\n    \"1\\n\"\n    \"6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\"\nassert solution(\n    \"5 5\\n\"\n    \"(2 5) (5 3)\\n\"\n    \"...\\n\"\n    \".#.#\\n\"\n    \"#.#.#\\n\"\n    \"#.#.#\\n\"\n    \"#.#.#\\n\"\n    \"1\\n\"\n    \"6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\"\nassert solution(\n    \"5 5\\n\"\n    \"(2 5) (5 3)\\n\"\n    \"...\\n\"\n    \".#.#\\n\"\n    \"#.#.#\\n\"\n    \"#.#.#\\n\"\n    \"#.#.#\\n\"\n    \"1\\n\"\n    \"6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\"\nassert solution(\n    \"5 5\\n\"\n    \"(2 5) (5 3)\\n\"\n    \"...\\n\"\n    \".#.#\\n\"\n    \"#.#.#\\n\"\n    \"#.#.#\\n\"\n    \"#.#.#\\n\"\n    \"1\\n\"\n    \"6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == \"IMPOSSIBLE\"\nassert solution('1') == \"IMPOSSIBLE\"\nassert solution('5 5') == \"26\""
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"./sample-input-file.txt\") == \"26\"\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '26'\nassert solution('4 2') == 'IMPOSSIBLE'\nassert solution('4 3') == 'IMPOSSIBLE'\nassert solution('7 6') == 'IMPOSSIBLE'\nassert solution('6 3') == '26'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') =='success'\nassert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\nassert solution('1\\n-1') == 'failure'\nassert solution('5\\n-1 1') == 'failure'\n\"\"\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"success\", \"1st example test\"\nassert solution(\"2\") == \"success\", \"2nd example test\"\nassert solution(\"3\") == \"success\", \"3rd example test\"\nassert solution(\"4\") == \"failure\", \"4th example test\"\nassert solution(\"5\") == \"success\", \"5th example test\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n-1 0\\n0 0') == 'failure'\nassert solution('3\\n-1 0\\n0 0\\n-1 1') == 'failure'\nassert solution('2\\n0 0\\n1 0') =='success'\nassert solution('2\\n-1 0\\n0 0\\n-1 1') == 'failure'\nassert solution('2\\n0 0\\n1 0\\n-1 1') =='success'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') =='success'\nassert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == \"failure\"\nassert solution('4') == \"success\"\nassert solution('5') == \"failure\"\nassert solution('2') == \"failure\"\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure','sample tests'\nassert solution('''\n5\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') =='success','single test'\nassert solution('''\n10\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n-1 -2\n0 4\n1 4\n-1 5\n0 6\n1 5\n-1 7\n0 8\n1 7\n-1 -8\n0 10\n1 -10\n-1 -11\n0 12\n1 -11\n-1 -12\n0 14\n1 -12\n''') == 'failure','multiple tests'"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure'\nassert solution('''\n5\n-1 0\n0 0\n1 0\n-1 1\n0 2\n''') =='success'\nassert solution('''\n100\n-999 999\n999 999\n-999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999\n999 999"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure'\nassert solution('''\n2\n-1 0\n0 0\n0 2\n''') =='success'\nassert solution('''\n3\n-1 0\n0 0\n1 0\n''') == 'failure'\nassert solution('''\n100\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n2 3\n-1 1\n1 2\n-1 1\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') == 'failure'\nassert solution('''\n6\n-1 0\n0 0\n1 0\n-1 1\n0 2\n1 1\n''') =='success'"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"failure\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2\") == \"possible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"3 3\") == \"possible\"\nassert solution(\"5 2 2\") == \"impossible\"\nassert solution(\"5 2 2\") == \"possible\"\n\"\"\""
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == 'impossible'"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 2 2\\n1 2\\n3 3\\n5 2 2\\n5 2 2\\n\") == \"possible\"\nassert solution(\n    \"1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"impossible\"\nassert solution(\n    \"5 5 5\\n6 6 6\\n7 7 7\\n8 8 8\\n\") == \"impossible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 2\") == \"possible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"3 3\") == \"impossible\"\nassert solution(\"5 2 2\") == \"impossible\"\nassert solution(\"5 2 2\") == \"impossible\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"possible\"\nassert solution(\"1 2 2\") == \"impossible\"\nassert solution(\"1 1 1\") == \"impossible\"\nassert solution(\"1 2 1\") == \"possible\"\nassert solution(\"1 2 1 1\") == \"possible\"\n\"\"\"\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"impossible\"\nassert solution(\"1 1 2\") == \"impossible\"\nassert solution(\"3 3\") == \"possible\"\nassert solution(\"4 2 2\") == \"possible\"\nassert solution(\"5 2 2\") == \"impossible\""
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2 2\n1 2\n3 3\n5 2 2\n5 2 2\n''') == \"possible\"\nassert solution('''\n3 2 3\n1 2\n2 2\n5 2 2\n5 2 2\n''') == \"impossible\"\nassert solution('''\n100 2 3\n2 4\n5 2\n3 2\n''') == \"impossible\"\nassert solution('''\n1 2\n3 2\n3 2\n''') == \"possible\"\n'''\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('3 3') == 'impossible'\nassert solution('5 2 2') == 'impossible'\nassert solution('5 2 2') == 'impossible'\n'''\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('3 3') == 'impossible'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5 3\n3 3\n6 5\n2 4\n1 1\n5 4\n1 3\n2 4\n4 4\n2 3\n2 4\n1 5\n''') == \"possible\"\nassert solution('''3 5 2\n5 4\n2 5\n2 4\n1 4\n1 3\n''') == \"impossible\"\nassert solution('''5 5 1\n5 5\n5 5\n5 5\n5 5\n5 5\n''') == \"possible\"\nassert solution('''4 3 5\n5 5\n2 4\n3 3\n1 2\n3 5\n1 1\n''') == \"impossible\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2 10\n1 1 2 1 1 2 1 2 2 1 2 1 1 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '0'\nassert solution('5 5') == '1'\nassert solution('2 2') == '1'"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 1 2\n1 2 1\n-1 1 2\n''') == '0'\n'''"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4 4\n1 4 1 4\n2 1 4 2\n3 1 4 3\n4 2 4 4\nSample Output:\n2\n\"\"\") == \"2\""
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 2\n1 1 2\n1 2 1\n-1 1 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3\n1 1 2\n1 2 3\n3 3 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3\n1 1 2\n1 2 3\n3 3 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 4\n1 1 2\n1 2 3\n3 3 1\n3 4 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 3\n1 1 2\n1 2 3\n3 3 1\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2\n3\n1 1 2\n1 2 1\n-1 1 2\n''') == '0'\nassert solution('''\n3\n4\n4\n1 1 2\n1 2 1\n-1 1 2\n''') == '1'\nassert solution('''\n4\n2\n2\n1 1 2\n1 2 1\n-1 1 2\n''') == '2'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 2') == '1'\nassert solution('3 3') == '1'"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\nassert solution('1\\n1\\n1\\n') == '1'\nassert solution('2\\n3\\n1\\n1\\n') == '0'\nassert solution('3\\n4\\n1\\n2\\n') == '0'\nassert solution('4\\n5\\n2\\n4\\n') == '2'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\\n1 1 2\\n1 2 1\\n-1 1 2\") == \"0\"\nassert solution(\"3 3\\n2 3 4\\n5 6 6\\n2 2 2\\n3 1 2\\n5 4 4\\n2 1 2\\n4 2 3\\n4 3 4\\n2 5 2\\n3 4 1\\n4 6 4\\n3 5 2\\n2 6 5\\n2 5 2\\n3 6 2\\n2 5 2\\n2 4 2\\n3 6 1\\n2 6 4\\n2 5 2\\n3 6 2\\n2 6 1\\n4 1 5\\n5 4 6\\n2 1 1\\n1 1 1\\n2 4 1\\n4 2 4\\n1 3 1\\n2 5 2\\n1 2 2\\n3 1 1\\n1 3 3\") == \"4\"\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 2') == '4'\nassert solution('3 5') == '5'\nassert solution('3 8') == '3'\nassert solution('8 3') == '8'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\n\nassert solution('''\n1\n6\n5\n4\n3\n''') == '4'\n\nassert solution('''\n2\n10\n9\n8\n7\n''') == '3'\n\nassert solution('''\n4\n80\n80\n80\n9\n''') == '4'\n\nassert solution('''\n3\n123\n567\n6\n''') == '5'"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3 2\\n'\n    '353\\n'\n) == '3\\n'\n\nassert solution(\n    '4 2\\n'\n    '1234\\n'\n) == '4\\n'\n\nassert solution(\n    '7 2\\n'\n    '9798\\n'\n) == '7\\n'\n\nassert solution(\n    '7 2\\n'\n    '9798\\n'\n    '213\\n'\n) == '7\\n'\n\nassert solution(\n    '7 2\\n'\n    '9798\\n'\n    '321\\n'\n) == '7\\n'"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"4\""
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 2') == '4'\nassert solution('6 2') == '6'"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1\\n2'\nassert solution('4 2') == '3\\n13'\nassert solution('6 3') == '3\\n1111'\nassert solution('7 2') == '4\\n111111'\nassert solution('8 3') == '4\\n11111111'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\""
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\nassert solution(\"0 0 0 0 0\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''12 30 45 3 11\n    ''') == 'NO'\nassert solution('''12 0 1 12 1\n    ''') == 'YES'\nassert solution('''3 47 0 4 9\n    ''') == 'YES'\nassert solution('''3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30''') == 'YES'"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'\nassert solution('3 3 3 0 2') == 'YES'\nassert solution('3 3 2 1 1') == 'YES'\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('3 47 0 4 9') == 'YES'\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"NO\""
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 30 45 3 11') == 'NO'\nassert solution('12 0 1 12 1') == 'YES'\nassert solution('3 47 0 4 9') == 'YES'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n1 1 2 3 1 0') == '0'"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 2 3 1 0\\n2 4 20') == '3'\nassert solution('1 1 2 3 1 0\\n15 27 26') == '2'\nassert solution('1 1 2 3 1 0\\n1 1 2 3 1 0') == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 2 3 1 0') == '3', solution('1 1 2 3 1 0')\nassert solution('2 4 20') == '2', solution('2 4 20')\nassert solution('1 1 2 3 1 0') == '0', solution('1 1 2 3 1 0')"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 2 3 1 0') == '3'\nassert solution('2 4 20') == '2'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == str(puzzle(input_))"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3 1 0\") == '3'\nassert solution(\"2 4 20\") == '2'\nassert solution(\"1 1 2 3 1 0\") == '0'\n\n'''"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3 1 0\") == '3'\nassert solution(\"2 4 20\") == '2'\nassert solution(\"1 1 2 3 1 0\") == '0'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 2 3 1 0\n2 4 20''') == '3'\nassert solution('''1 1 2 3 1 0\n2 2 1''') == '0'\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '2'\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1 1 2 3 1 0\n2 4 20\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n15 27 26\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n1 1 2 3 1 0\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n15 27 26\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 1 2 3 1 0\n15 27 26\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == '3'\nassert solution(input_) == '2'\nassert solution(input_) == '0'\n\n\n\"\"\"\nimport math\n\ninput_ = input().split()\n\nx_0, y_0, a_x, a_y, b_x, b_y = int(input_[0]), int(input_[1]), int(input_[2]), int(input_[3]), int(input_[4]), int(input_[5])\nt = int(input_[6])\n\nx_s, y_s = x_0, y_0"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '4', solution.__doc__\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n0 0 1\n2 0 1\n4 0 1\n''') == '4'\nassert solution('''3\n0 0 2\n3 0 2\n6 0 2\n''') == '8'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n\n''') == '4', 'First example'\nassert solution('''\n3\n0 0 2\n2 0 2\n1 1 2\n\n''') == '8', 'Second example'\n'''\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n\n''') == '4'\n\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n\n''') == '6'\n\nassert solution('''\n3\n0 0 2\n2 0 2\n1 1 2\n\n''') == '8'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0 1\\n2 0 1\\n4 0 1\\n') == '4'\nassert solution('3\\n0 0 2\\n3 0 2\\n6 0 2\\n') == '6'\nassert solution('3\\n0 0 3\\n2 0 2\\n1 1 2\\n') == '8'\n\n\"\"\"\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('3') == '4'\nassert solution('3') == '4'\n\nstdin = \"\"\"3\n0 0 1\n2 0 1\n4 0 1\n\"\"\"\n\nstdin = \"\"\"3\n0 0 2\n3 0 2\n6 0 2\n\"\"\"\n\nstdin = \"\"\"3\n0 0 2\n2 0 2\n1 1 2\n\"\"\"\n\nstdin = \"\"\"3\n0 0 2\n2 0 2\n1 1 2\n\"\"\"\nassert solution(stdin) == '8'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n0 0 1\n2 0 1\n''') == '4'\nassert solution('''3\n0 0 1\n2 0 1\n4 0 1\n''') == '6'\nassert solution('''3\n0 0 2\n3 0 2\n6 0 2\n''') == '8'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n0 0 1\\n2 0 1\\n4 0 1\\n') == '4\\n'\nassert solution('3\\n0 0 2\\n3 0 2\\n6 0 2\\n') == '8\\n'"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n''') == '4'\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n''') == '6'\n\nassert solution('''\n3\n0 0 2\n2 0 2\n1 1 2\n''') == '8'"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 1 3 1\n1 2 1 3 1\n''') == \"YES\"\n\nassert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == \"YES\"\n\nassert solution('''\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == \"NO\"\n\nassert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == \"YES\"\n\nassert solution('''\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == \"NO\""
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES'\nassert solution('''0 0 6 0 6 6 0 6\n7 4 4 7 7 10 10 7\n''') == 'NO'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\") == \"YES\"\nassert solution(\"1 3 3 5 5 3 3 1\") == \"NO\""
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"YES\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"YES\"\nassert solution(\"6 0 6 6 0 6 0 0\\n9 8 5 10 7 8 5 10 7\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n10 7 8 9 10 7 8 10 7\\n\") == \"NO\"\nassert solution(\"6 0 6 6 0 6 0 0\\n9 10 10 7 8 9 10 7 8\\n\") == \"NO\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 6 0 6 6 0 6') == 'YES'\nassert solution('1 3 3 5 5 3 3 1') == 'NO'\nassert solution('6 0 6 6 0 6 0 0') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n7 3 9 5 11 3 9 1\\n\") == \"YES\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"NO\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == 'YES', 'This should return \"Yes\"'\nassert solution('''\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO', 'This should return \"No\"'\n''')\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 6 0 6 6 0 6\\n1 3 3 5 5 3 3 1\\n\") == \"YES\"\nassert solution(\"6 0 6 6 0 6 0 0\\n7 4 4 7 7 10 10 7\\n\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES'\nassert solution('''0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO'\nassert solution('''6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == 'YES'"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n\"\"\") == \"NO\"\n\n\"\"\"\n--- Day 3: Toboggan Trajectory ---\n\nWith the toboggan login problems resolved, you set off toward the airport. While travel by toboggan might be easy, it's certainly not safe: there's very minimal steering and the area is covered in trees. You'll need to see which angles will take you near the fewest trees.\n\nDue to the local geology, trees in this area only grow on exact integer coordinates in a grid. You make a map (your puzzle input) of the open squares (.) and trees (#) you can see. For example:\n\n..##.......\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\""
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n0\n\n2\n1 0\n\n3\n2 3 1\n\n4\n2 2\n\n5\n2 1\n\n6\n1 1''') == 'cslnb', 'First'\nassert solution('''1\n0\n\n2\n1 0\n\n3\n2 3 1\n\n4\n2 2\n\n5\n2 1\n\n6\n1 1''') == 'cslnb', 'Second'\nassert solution('''1\n0\n\n2\n1 0\n\n3\n2 3 1\n\n4\n2 2\n\n5\n2 1\n\n6\n1 1''') =='sjfnb', 'Third'\nassert solution('''1\n0\n\n2\n1 0\n\n3\n2 3 1\n\n4\n2 2\n\n5\n2 1\n\n6\n1 1''') =='sjfnb', 'Fourth'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n0\\n') =='sjfnb'\nassert solution('3\\n2 3 1\\n') =='sjfnb'\nassert solution('4\\n2 2 2 2\\n') == 'cslnb'\nassert solution('5\\n3 1 3 3 3\\n') == 'cslnb'\nassert solution('6\\n4 4 4 4 4 4\\n') == 'cslnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n0\n\n''') == 'cslnb', 'Wrong result'\n\nassert solution('''2\n1 0\n\n''') =='sjfnb', 'Wrong result'\n\nassert solution('''3\n2 3 1\n\n''') =='sjfnb', 'Wrong result'"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n1\n0\n\n'''\n    ) =='sjfnb', f\"({solution('''\n1\n0\n\n''')})\"\n\nassert solution(\n    '''\n2\n1 0\n\n'''\n    ) =='sjfnb', f\"({solution('''\n2\n1 0\n\n''')})\"\n\nassert solution(\n    '''\n2\n2 2\n\n'''\n    ) =='sjfnb', f\"({solution('''\n2\n2 2\n\n''')})\"\n\nassert solution(\n    '''\n3\n2 3 1\n\n'''\n    ) =='sjfnb', f\"({solution('''\n3\n2 3 1\n\n''')})\""
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() in [\"cslnb\", \"sjfnb\"], f\"Got {solution()} from stdin: {stdin!r}\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') =='sjfnb'\nassert solution('2') == 'cslnb'\nassert solution('3') =='sjfnb'\nassert solution('4') == 'cslnb'"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') =='sjfnb'\nassert solution('2') =='sjfnb'\nassert solution('3') =='sjfnb'\nassert solution('4') == 'cslnb'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"cslnb\"\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n0\n''') =='sjfnb', 'First example'\n\nassert solution('''\n2\n1 0\n''') == 'cslnb', 'Second example'\n\nassert solution('''\n3\n2 3 1\n''') =='sjfnb', 'Third example'\n\nassert solution('''\n4\n1 3 1\n''') == 'cslnb', 'Fourth example'"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 2') == '1'\nassert solution('2 1') == '2'\nassert solution('3 3') == '2'\nassert solution('4 4') == '3'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5\n1 5 3\n1\n2''') == '2'\n\nassert solution('''1 2\n1\n2''') == '1'\n\nassert solution('''1 1\n1\n2''') == '0'\n\nassert solution('''1 3\n1\n1\n1''') == '0'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5\") == \"2\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"1\""
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"3 6\") == \"3\"\nassert solution(\"5 6\") == \"5\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"0\""
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4\n1 2\n2 4\n3 2\n1 3\n''') == '1'\nassert solution('''1 1\n1\n''') == '0''')"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 5, 3]) == 2\nassert solution([1, 2, 1]) == 1\nassert solution([1, 1, 1]) == 0\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\nassert solution('3') == '2 -1 0 1'\nassert solution('4') == '2 -1 0 1'\nassert solution('5') == '2 -1 0 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2\n\"\"\"\n) == \"\"\"2\n-1 0 1\n\"\"\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"-1 0 1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"-1 0 1\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n''') == '1 0 1'\n\nassert solution('''2\n-1 0 1\n''') == '2 -1 0 1'\n\nassert solution('''3\n0 1 1\n0\n1\n''') == '3 -1 0 1'\n\nassert solution('''4\n0 1 1\n0\n1\n''') == '4 1 0 1'\n\nassert solution('''5\n0 1 1\n0\n1\n''') == '5 1 0 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\\n-1 0 1\"\nassert solution(\"1\") == \"1\\n0 1\"\n\nassert solution(\"10\") == \"10\\n-1 0 1\\n1\\n0 1\"\n\nassert solution(\"1\") == \"1\\n0 1\"\n\nassert solution(\"2\") == \"2\\n-1 0 1\""
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\\n0 1\"\nassert solution(\"2\") == \"-1 0 1\"\n\n\"\"\"\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1 0 1\"\nassert solution(\"2\") == \"-1 0 1\"\n\ninput\n2\n\noutput\n2\n-1 0 1\n1\n0 1\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1 0 1\\n0 1\\n1 0'\nassert solution('2\\n') == '2 -1 0 1\\n1\\n0 1'\nassert solution('5\\n') == '5 -1 0 1\\n1\\n0 1'\n\n\n\n'''"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 5 4') == '1 3 3', 'First'\nassert solution('3 1 5 3') == '1 3 1', 'Second'\nassert solution('3 2 5 3') == '1 2 2', 'Third'"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1 5 4') == '1 3 3'\nassert solution('3 1 5 3') == '2 3 2'\nprint(solution(input()))"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 3 3\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 1 5 4\n1 2 1 3\n\n\"\"\") == \"1 3 3\"\nassert solution(\"\"\"3 1 5 3\n1 3 1\n\n\"\"\") == \"2 3 2\"\n\nassert solution(\"\"\"3 1 5 4\n1 2 1 3\n\n\"\"\") == \"1 3 3\"\nassert solution(\"\"\"3 2 5 4\n1 3 1\n\n\"\"\") == \"2 3 2\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '1 3 3'\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '2 3 2'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 1 5 4\n1 2 1 3\n\"\"\") == \"1 2 1 3\"\n\nassert solution(\"\"\"\n3 1 5 3\n1 3 1\n\"\"\") == \"1 3 1\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 1 5 4\"\n) == \"1 3 3\"\n\nassert solution(\n    \"3 1 5 3\"\n) == \"1 2 2\"\n\nassert solution(\n    \"3 2 5 3\"\n) == \"2 2 2\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 2 2\"\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 5 4') == '1 3 3'\nassert solution('3 1 5 3') == '1 3 1'"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 1 5 4\\n\"\n    \"1 2 1 3\"\n    ) == \"1 3 3\"\nassert solution(\n    \"3 1 5 3\\n\"\n    \"1 3 1\"\n    ) == \"2 3 2\"\nassert solution(\n    \"3 2 5 3\\n\"\n    \"1 3 1\"\n    ) == \"2 3 2\"\nassert solution(\n    \"4 1 7 2\\n\"\n    \"1 3 1\"\n    ) == \"1 3 2\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input().strip()) == \"3\""
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\nassert solution('11000000') == '27'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''101\n3\n''') == '3'\nassert solution('''11111111111\n2\n''') == '169'\nassert solution('''101\n3\n''') == '4'\nassert solution('''1111111111111111\n2\n''') == '4'\nassert solution('''10111011101111101\n2\n''') == '3'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input().strip()) == \"3\""
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"110\\n2\") == \"3\"\nassert solution(\n    \"111111011\\n2\") == \"169\"\nassert solution(\n    \"12\\n2\") == \"3\"\nassert solution(\n    \"0\\n2\") == \"1\"\nassert solution(\n    \"11111\\n2\") == \"169\"\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4'\nassert solution('101111111') == '169'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n110\n2\n''') == '3'\nassert solution('''\n111111011\n2\n''') == '169'\nprint(solution('''\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n\"\"\") == \"11.084259940083\"\n\nassert solution(\"\"\"\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n\"\"\") == \"33.121375178000\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n\n''') == '11.084259940083'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 1 2 0 0') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 1 1 2 0 0\n3\n1 1\n2 1\n2 2\n''') == '11.084259940083'\nassert solution('''\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n''') == '33.121375178000'\nassert solution('''\n10 0 4 0 0 0 0 0 0 0 0 0\n0\n1\n2\n3\n5\n7\n11\n16\n22\n''') == '17.084259940083'\nassert solution('''\n10 0 4 0 0 0 0 0 0 0 0\n0\n2\n4\n6\n8\n10\n12\n14\n16\n''') == '16.084259940083'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 2 1') == \"11.084259940083\"\nassert solution('1') == \"3.415624405612\"\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 1 2 0 0') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n3\n2\n1 1\n1 1\n''') == '11.084259940083'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 0 4 2 2 0') == '33.121375178000'\nassert solution('3 1 1 2 0 0') == '11.084259940083'\nassert solution('3 1 1 2 0 0') == '7.8111023677567'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1 1 2 0 0\n3\n1 1\n2 1\n2 3\n''') == '11.084259940083'\n\nassert solution('''\n5 0 4 2 2 0\n5\n5 2\n3 0\n5 5\n3 5\n3 3\n''') == '33.121375178000'"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 5\") == '2'\nassert solution(\"8 15\") == '1'\nassert solution(\"7 20\") == '0'\nassert solution(\"1000000000000 1000000000001\") == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 5\n''') == '2'\nassert solution('''\n8 5\n''') == '1'\nassert solution('''\n7 20\n''') == '0'\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 5\\n') == '2'\nassert solution('8 15\\n') == '1'\nassert solution('7 20\\n') == '0'\nassert solution('1000000000000 1000000000001\\n') == '500000000000'\nprint('\"Run\" is good. How is \"Check\"?')"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 5\n''') == '2'\nassert solution('''7 20\n''') == '1'\nassert solution('''1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 5\n''') == '2'\nassert solution('''\n8 15\n''') == '1'\nassert solution('''\n7 20\n''') == '0'\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\nassert solution('''\n6 6\n''') == '0'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 5\n''') == '2'\nassert solution('''\n8 5\n''') == '1'\nassert solution('''\n7 20\n''') == '0'\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 5\n''') == '2'\nassert solution('''\n8 15\n''') == '1'\nassert solution('''\n7 20\n''') == '0'\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 5') == '2'\nassert solution('7 20') == '1'\nassert solution('1000000000000 1000000000001') == '500000000000'\nassert solution('1000000000000') == '0'\nassert solution('1000000000000 10') == '5000000000000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    5 1\n''') == '2'\nassert solution('''\n    8 5\n''') == '2'\nassert solution('''\n    7 20\n''') == '0'\nassert solution('''\n    1000000000000 1000000000001\n''') == '500000000000'\nprint(\"Congratulations! Your solutions works!\")\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 10\n01000\n''') == '11'\nassert solution('''5 10 1\n01000\n''') == '2'\nassert solution('''7 2 3\n1111111\n''') == '0'\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 10\") == \"11\"\nassert solution(\"5 10 1\") == \"2\"\nassert solution(\"7 2 3\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == str(11)\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1 10\n01000\n\n''') == '11'\nassert solution('''7 2 3\n1111111\n\n''') == '0'\nprint(solution('''5 10 1\n01000\n\n''')) == '2'\nprint(solution('''5 10 1\n01000\n\n''')) == '11'\nprint(solution('''5 10 1\n1111111\n\n''')) == '0'\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1 10\") == \"11\"\nassert solution(\"5 10 1\") == \"2\"\nassert solution(\"7 2 3\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '11'"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1 1\n01\n''') == '11'\n\nassert solution('''1 1 1\n10\n''') == '11'\n\nassert solution('''5 1 10\n1 0 1 1 1\n''') == '11'\n\nassert solution('''5 10 1\n1 0 1 1 1\n''') == '11'\n\nassert solution('''7 2 3\n11111\n''') == '0'"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1 1\\n11\") == \"2\"\nassert solution(\"5 1 10\\n01000\") == \"11\"\nassert solution(\"7 2 3\\n1111111\") == \"0\"\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 1 10\"\"\") == \"11\"\nassert solution(\"\"\"5 10 1\"\"\") == \"2\"\nassert solution(\"\"\"7 2 3\"\"\") == \"0\""
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"11\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1 1\n''') == '2 1'\nassert solution('''5 1 2\n''') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 1') == '2 1'\nassert solution('3 1 2') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1 2\n''') == '19 5'\nassert solution('''3 1 1\n''') == '2 1'\nassert solution('''5 1 2\n''') == '19 5'\nassert solution('''3 1 1\n''') == '2 1'\nassert solution('''5 1 2\n''') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 1\") == \"2 1\"\nassert solution(\"5 1 2\") == \"19 5\""
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 1\n''') == '6'\n\nassert solution('''\n10 2\n''') == '4'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"7 1\") == \"6\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 1''') == '6'\nassert solution('''10 2''') == '4'"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 1\n''') == '6'\n\nassert solution('''10 2\n''') == '4'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\"\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 1\") == \"6\"\nassert solution(\"10 2\") == \"4\""
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 1\n6''') == '6'\nassert solution('''10 2\n4''') == '4'\nassert solution('''1 5\n3''') == '6'"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 1\\n\") == \"6\"\nassert solution(\"10 2\\n\") == \"4\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0.0.0.0/0\"\nassert solution(\"4\") == \"0.0.0.0/0\"\nassert solution(\"5\") == \"195.0.0.0/8\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"1\") == \"0.0.0.0/0\"\nassert solution(\"4\") == \"149.154.167.99/30\"\nassert solution(\"5\") == \"195.0.0.0/8\"\nassert solution(\"6\") == \"127.0.0.1/32\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('2') == '195.0.0.0/8'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n-149.154.167.99\\n\") == \"1\\n0.0.0.0/0\\n\"\nassert solution(\"4\\n-149.154.167.99\\n+149.154.167.100/30\\n+149.154.167.128/25\\n-149.154.167.120/29\\n\") == \"2\\n149.154.167.99\\n149.154.167.120/29\\n\"\nassert solution(\"5\\n-127.0.0.4/31\\n+127.0.0.8\\n+127.0.0.0/30\\n-195.82.146.208/29\\n-127.0.0.6/31\\n\") == \"2\\n195.0.0.0/8\\n127.0.0.4/30\\n\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('2') == '149.154.167.99'\nassert solution('3') == '0.0.0.0/0'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('2') == '195.0.0.0/8'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0.0.0.0/0\"\nassert solution(\"4\") == \"0.0.0.0/0\"\nassert solution(\"5\") == \"195.0.0.0/8\"\nassert solution(\"2\") == \"195.0.0.0/8\""
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('2') == '149.154.167.99'\nassert solution('3') == '0.0.0.0/0'"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n+127.0.0.1/32\n-127.0.0.1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n+127.0.0.1/32\n+127.0.0.1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n+127.0.0.1/32\n-127.0.0.1\n\"\"\") == \"-1\"\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n-149.154.167.99\n\nOutput\n1\n0.0.0.0/0\n\nInput\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\nOutput\n2\n149.154.167.99\n149.154.167.120/29\n\nInput\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\nOutput\n2\n195.0.0.0/8\n127.0.0.4/30\n\nInput\n2\n+127.0.0.1/32\n-127.0.0.1\n\nOutput\n-1\n''') == '2\\n195.0.0.0/8\\n127.0.0.4/30\\n'\n\nassert solution('''\n1\n-149.154.167.99\n\nOutput\n1\n0.0.0.0/0\n\nInput\n4\n-149.154.167.99\n+149.154.167.100/30\n+149.154.167.128/25\n-149.154.167.120/29\n\nOutput\n2\n149.154.167.99\n149.154.167.120/29\n\nInput\n5\n-127.0.0.4/31\n+127.0.0.8\n+127.0.0.0/30\n-195.82.146.208/29\n-127.0.0.6/31\n\nOutput\n2\n195.0.0.0/8\n127.0.0.4/30\n\nInput\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n111111111111\") == \"1\", \"Wrong answer in test 4\"\nassert solution(\"5\\n11010000111\") == \"1\", \"Wrong answer in test 5\"\nassert solution(\"10\\n000000000\") == \"0\", \"Wrong answer in test 10\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 1\nassert solution('11') == 1\nassert solution('22') == 2\nassert solution('11') == 0\nassert solution('31415926535') == 0\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\nassert solution(\"22\") == '2'\nassert solution(\"11\") == '0'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"1\", \"1st example\"\nassert solution(\"22\") == \"2\", \"2nd example\"\nassert solution(\"11\") == \"0\", \"3rd example\"\nassert solution(\"31415926535\") == \"0\", \"4th example\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == \"1\"\nassert solution('1') == \"1\"\nassert solution('2') == \"0\"\n\n\"\"\"\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n11\n00000000008\n\n''') == '1'\n\nassert solution('''\n22\n0011223344556677889988\n\n''') == '2'\n\nassert solution('''\n11\n31415926535\n\n''') == '0'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"11\") == \"0\""
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 3') == '3'\nassert solution('10 10') == '10'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1') == '-1'\nassert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0') == '3'\n\n\"\"\"\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 3') == '3'\nassert solution('1 1 1') == '2'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '4'\nassert solution('3 3') == '3'"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '4'\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\n\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '-1'"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '4'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '-1'\n'''\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n\n''') == '4'\n\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n\n''') == '3'\n\nassert solution('''3 3\n0 0 0\n0 1 0\n0 0 0\n\n''') == '-1'\n\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n\n''') == '3'\n\nassert solution('''3 5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\n''') == '1'"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '4'\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\nassert solution('''\n3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '-1'\n'''"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5\\n2 2 2 3 2\\n0 0 0 1 0\\n1 1 1 2 1\\n') == '4'\nassert solution('3 3\\n1 1 1\\n1 1 1\\n1 1 1\\n') == '3'\nassert solution('3 3\\n0 0 0\\n0 1 0\\n0 0 0\\n') == '-1'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n0 0 0 1 0\n1 1 1 2 1\n1 1 1 2 1\n0 0 0 1 0\n0 0 0 1 0''') == 'row 1\nassert solution('''5 3\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == 'row 2\nassert solution('''5 3\n0 0 0\n1 1 1\n1 1 1\n1 1 1\n1 1 1''') == 'col 3\n'''\n    pass\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(\"input.txt\", \"r\").read()) == \"NO\"\nassert solution(open(\"input2.txt\", \"r\").read()) == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\"\"8 6 4 5\"\"\") == \"YES\"\nassert solution(\"\"\"8 6 4 6\"\"\") == \"NO\"\nassert solution(\"\"\"10 3 11 4\"\"\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8 6 4 5\n''') == 'YES'\nassert solution('''\n8 6 4 6\n''') == 'NO'\nassert solution('''\n10 3 11 4\n''') == 'YES'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 6 4 5\n''') == 'YES'\nassert solution('''\n8 6 4 6\n''') == 'NO'\nassert solution('''\n10 3 11 4\n''') == 'YES'\nassert solution('''\n4 2 1 4\n''') == 'NO'\n\n'''\n\n------SOLUTION------\n\nimport math"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 6 4 5\\n') == 'YES'\nassert solution('8 6 4 6\\n') == 'NO'\nassert solution('10 3 11 4\\n') == 'YES'\nassert solution('4 2 1 4\\n') == 'YES'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\"\nassert solution(\"4 2 1 4\") == \"YES\"\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8 6 4 5\") == \"YES\"\nassert solution(\"8 6 4 6\") == \"NO\"\nassert solution(\"10 3 11 4\") == \"YES\""
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8 6 4 5\n''') == 'YES'\nassert solution('''\n10 3 11 4\n''') == 'NO'\nassert solution('''\n4 2 1 4\n''') == 'YES'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"7 8\") == \"12\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6'\nassert solution('7 8') == '12'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n1 3\n1 4\n''') == \"6\"\nassert solution('''7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == \"12\"\nassert solution('''2 2\n1 2\n2 1\n''') == -1"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '-1', '2 2'\nassert solution('1 2') == '4', '1 2'\nassert solution('4 4') == '12', '4 4'\nassert solution('4 4') == '-1', '4 4'\nassert solution('8 8') == '48', '8 8'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 2\n1 3\n1 4\n\n''') == '6'\nassert solution('''7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n\n''') == '12'\nassert solution('''2 2\n1 2\n2 1\n\n''') == '-1'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2\\n1 3\\n1 4\\n') == '6'\nassert solution('7 8\\n1 6\\n2 6\\n3 5\\n3 6\\n4 3\\n5 1\\n5 2\\n5 3\\n') == '12'\nassert solution('2 2\\n1 2\\n2 1\\n') == '-1'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n1 3\n1 4\n''') == '6'\n\nassert solution('''\n7 8\n1 6\n2 6\n3 5\n3 6\n4 3\n5 1\n5 2\n5 3\n''') == '12'\n\nassert solution('''\n2 2\n1 2\n2 1\n''') == '-1'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"7 8\") == \"12\"\nassert solution(\"2 2\") == \"-1\"\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '6'\nassert solution('7 8') == '12'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '6', solution('1 2')\nassert solution('7 8') == '12', solution('7 8')\nassert solution('4 2') == '-1', solution('4 2')\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 0\n1 1\n0 1''') == 'NO'\nassert solution('''3\n1 0\n1 1\n0 1\n1 0\n0 1''') == 'YES'"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1 0\n1 1\n0 1''') == 'NO'\n\nassert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n\n''') == 'YES'\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(\"YES\") == \"YES\"\nassert solution(\"YES\") == \"NO\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"NO\"\n\"\"\"\n\nn, k = map(int, input().split())\nproblems = []\nfor _ in range(n):\n    problems.append([int(i) for i in input().split()])\nprint(\"NO\" if any(problems[i][:len(problems)//2]) else \"YES\")\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n''') == 'NO'\n\n'''\nSolution\n\nThe idea is to find the maximum non-zero value in the first k rows of the input data.\n\nThe maximum non-zero value is used to know, whether some of the problems are already known or not.\n\nThe maximum non-zero value is the maximum value of the first k numbers in the input data.\n\nThe maximum non-zero value is used to see whether any of the problems are known or not.\n\nFor each problem, the value of the problem will be compared to the maximum value.\nIf the value of the problem is higher than the maximum value, then this problem cannot be known.\n\nIf the value of the problem is lower than the maximum value, then the problem can be known.\n\nSince we are using the maximum value, we can just look at the first k values of the input data and find out the maximum value in that data.\n\nLet's look at the first k values of the input data:\n\ndata[0], data[1], data[2],..., data[k\u22121]\n\nThe maximum value is data[0].\n\nLet's say we know the maximum value is data[0], then we can know that, all the problems from data[1] to data[k\u22121] are known.\n\nIf we know that the maximum value is data[k\u22121], then we can know that the maximum value in data[k\u22121] and data[k\u22122] is data[1], and the maximum value in data[k\u22122] is data[0].\n\nLet's see the data[k\u22121] value:\n\ndata[k\u22121]\n\nIf the value of the problem is higher than the maximum value, then this problem cannot be known.\n\nIf the value of the problem is lower than the maximum value, then the problem can be known.\n\nIf we know that the maximum value is data[k\u22121], then we can know that the maximum value in data[k\u22121] and data[k\u22122] is data[1], and the maximum value in data[k\u22122] is data[0].\n\nSo, we know that the maximum value in data[k\u22121] and data[k\u22122] is data[1].\n\nLet's look at the next k values:\n\ndata[k], data[k+1], data[k+2],..., data[k+k\u22121]\n\nThe maximum value is data[k].\n\nIf we know the maximum value is data[k], then we can know that all the problems from data[k+1] to data[k+k\u22121] are known.\n\nIf we know that the maximum value is data[k+k\u22121], then we can know that all the problems from data[k+1] to data[k+k\u22121] are known.\n\nLet's see the data[k+k\u22121] value:\n\ndata[k+k\u22121]\n\nIf the value of the problem is higher than the maximum value, then this problem cannot be known.\n\nIf the value of the problem is lower than the maximum value, then the problem can be known.\n\nIf we know that the maximum value is data[k+k\u22121], then we can know that all the problems from data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1], and the maximum value in data[k+k\u22122] is data[0].\n\nSo, the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u22122] is data[1].\n\nSo, we know that all the problems in data[k+1] to data[k+k\u22121] are known.\n\nSo, we know that the maximum value in data[k+k\u22121] and data[k+k\u2212"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n''') == 'NO', 'First'\nassert solution('''3 2\n1 0\n1 1\n0 1\n\n''') == 'YES', 'Second'\n\nassert solution('''5 3\n1 0 1\n1 1 0\n0 1\n\n''') == 'YES', 'Third'\n\nassert solution('''5 3\n1 0 1\n0 1\n1 0\n0 1\n1 0\n\n''') == 'NO', 'Fourth'\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"NO\"\nassert solution(input()) == \"YES\""
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"NO\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'YES'\n\"\"\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 0 1\n1 1 0''') == 'NO'\n\nassert solution('''5 2\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0''') == 'YES'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5\\n2 3 5 12') == \"Yes\"\nassert solution('2 7\\n2 3') == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n2 3') == 'Yes'\nassert solution('2 7\\n2 3') == 'No'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 5\n2 3\n''') == 'Yes'\nassert solution('''\n2 7\n2 3\n''') == 'No'"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"\n\n\"\"\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('4 5') == 'Yes'\nassert solution('2 7') == 'No'"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 5\n2 3 5 12\n''') == 'Yes'\nassert solution('''2 7\n2 3\n''') == 'No'\nassert solution('''5 3\n2 4 3\n''') == 'Yes'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\""
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5\\n2 3 5 12') == \"Yes\"\nassert solution('2 7\\n2 3') == \"No\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\""
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4 1\n4 5 2\n''') == '6'\nassert solution('''6 4 2\n2 5 1\n''') == '8'\nassert solution('''2 3 4\n1 1 1\n''') == '-1'\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 1\") == \"6\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 4\") == \"8\"\nassert solution(\"6 4 2\") == \"8\"\nassert solution(\"2 3 4\") == \"-1\"\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"5\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1 2 2 4 3\") == \"2\"\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '-1'\nassert solution('5') == '2'\nassert solution('3') == '2'\nassert solution('4') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 2 4 3\n\nOutput\n2\n''') == \"2\"\n\nassert solution('''4\n0 3 0 4\n\nOutput\n0\n''') == \"0\"\n\nassert solution('''6\n0 2 0 2 1 0\n\nOutput\n1\n''') == \"1\"\n\nassert solution('''1\n0\n\nOutput\n1\n''') == \"1\""
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '0'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    5\n    1 2 2 4 3\n    '''\n) == '2'\nassert solution(\n    '''\n    3\n    4 1 1\n    '''\n) == '0'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n2 4 1 0\\n') == '2'\nassert solution('5\\n1 2 2 4 3\\n') == '2'\nassert solution('3\\n4 1 1\\n') == '-1'"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\n\n'''\n\n\nn = int(input())\nnums = list(map(int, input().split()))\n\ni=0\nwhile i<n:\n    if nums[i]>=3:\n        i+=1\n        continue\n    if nums[i]>=2:\n        nums[i]-=3\n        if nums[i]==0:\n            nums[i]+=4\n            i+=1\n            continue\n        nums[i]-=2\n        i+=1\n        continue\n    i+=1\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n') == '2'\nassert solution('4\\n') == '0'\nassert solution('3\\n') == '0'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 2 4 3') == '2'\nassert solution('3\\n4 1 1') == '0'\nassert solution('4\\n0 3 0 4') == '0'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n10000011''') == 5\nassert solution('''2\n01''') == 2\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '10000011'\n) == '5'\nassert solution(\n    '01'\n) == '2'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(inp) == \"5\""
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 5"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n10\n01\n0\n1\n''') == '2'\nassert solution('''1\n1\n''') == '1'\n\n'''"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('01') == '2'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8\n10000011\n''') == '5'\nassert solution('''2\n01\n''') == '2'\nassert solution('''7\n01010101\n''') == '4'"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('01') == '1'\nassert solution('0101') == '2'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"3\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 3 1 4\n\n''') == '3'\nassert solution('''\n4\n4 4 4 4\n\n''') == '-1'\nassert solution('''\n4\n2 1 4 3\n\n''') == '1'\nassert solution('''\n4\n4 4 4 4\n\n''') == '-1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '-1'\nassert solution('4') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"-1\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"2 3 1 4\") == \"3\"\nassert solution(\"4 4 4 4\") == \"1\"\nassert solution(\"2 1 4 3\") == \"1\"\n\n----------------------------------------"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-\"\nassert solution(\"4\\n2 1 4 3\") == \"1\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n2 3 1 4\n''') == '3'\n\nassert solution('''4\n4 4 4 4\n''') == '-1'\n\nassert solution('''4\n2 1 4 3\n''') == '1'"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4\n''') == '-1'\nassert solution('''5\n2 3 1 4\n''') == '3'\nassert solution('''5\n4 4 4 4\n''') == '-1'\n\n'''\nFind smallest t such that for each person x, if x starts some round and y becomes the Joon-Joon of the round, then by starting from y, x would become the Joon-Joon of the round. \n'''\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 3 1 4\") == \"3\"\nassert solution(\"4\\n4 4 4 4\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\") == \"1\"\n\n\"\"\"\n\nn = int(input())\ncrush = list(map(int, input().split()))\n\nfor j in range(n):\n    for i in range(n):\n        if i!= j:\n            if crush[i] == j:\n                crush[i] = i+1\n\nfor j in range(n):\n    for i in range(n):\n        if i!= j:\n            if crush[i] == j:\n                crush[i] = i+1\n\nprint(' '.join(map(str, crush)))"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 1 4\\n\") == \"3\"\nassert solution(\"4\\n4 4 4 4\\n\") == \"-1\"\nassert solution(\"4\\n2 1 4 3\\n\") == \"1\"\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '-1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 3 2 0''') == '2'\nassert solution('''7\n1 3 3 2 1 2 3''') == '0'\nassert solution('''2\n2 2''') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n\n1 3 2 0\n\n''') == '2'\nassert solution('''\n7\n\n1 3 3 2 1 2 3\n\n''') == '0'\nassert solution('''\n2\n\n2 2\n\n''') == '1'\nprint('All test cases are passed!')"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n\n1 3 2 0\n\n''') == '2'\n\nassert solution('''\n7\n\n1 3 3 2 1 2 3\n\n''') == '0'\n\nassert solution('''\n2\n\n2 2\n\n''') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 3 2 0''') == '2'\nassert solution('''7\n1 3 3 2 1 2 3''') == '0'\nassert solution('''2\n2 2''') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n\n1 3 2 0\n\n''') == '2'\n\nassert solution('''\n7\n\n1 3 3 2 1 2 3\n\n''') == '0'\n\nassert solution('''\n2\n\n2 2\n\n''') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input( )) == \"1\"\nassert solution(input( ) ) == \"0\"\n\n--- Day 9: Encoding Error ---\n\nA website requires that users register every day and the front-end and the backend both use JSON to communicate. JSON, which the front-end uses to communicate with the backend, must adhere to a number of rules.\n\nThe rules are:\n\n    - Each object must have a type and a list of keys.\n    - Each object must have a type and a list of keys.\n    - For an object to be valid, each key in the list must be present in the object.\n    - There cannot be two objects of the same type in the same object.\n    - The keys in each object must be in sorted order.\n\nWrite a function to decode JSON data stored on disk. It is guaranteed that each object has a type declaration and each object has an array of key/value pairs. The values in the array must be decoded in their original form. For example, if a key/value pair is stored like this:\n\n    \"person\": {\n        \"name\": \"John Doe\",\n        \"age\": 30\n    },\n\nThen the function should return the object in the form:\n\n    {\n        \"type\": \"person\",\n        \"name\": \"John Doe\",\n        \"age\": 30\n    }\n\n    If the object is invalid or does not have the expected structure, it should return False.\n\nThe rules are applied to each object in the list. If any are invalid, the entire list is invalid, and the function returns false.\n\nThe function is generic so it can handle any type of JSON data.\n\nSample input 1\n\n{\n    \"person\": {\n        \"name\": \"John Doe\",\n        \"age\": 30\n    }\n}\n\nSample output 1\n\n{\n    \"type\": \"person\",\n    \"name\": \"John Doe\",\n    \"age\": 30\n}\n\n\nSample input 2\n\n{\n    \"person\": {\n        \"name\": \"John Doe\",\n        \"age\": 30\n    },\n    \"dog\": {\n        \"name\": \"Willie\"\n    }\n}\n\nSample output 2\n\n{\n    \"type\": \"person\",\n    \"name\": \"John Doe\",\n    \"age\": 30\n}\n\nSample input 3\n\n{\n    \"person\": {\n        \"name\": \"John Doe\",\n        \"age\": 30\n    },\n    \"dog\": \"woofs\"\n}\n\nSample output 3\n\nFalse\n\nNotes\n\nAll input JSON strings will be valid, so you can use any encoding for strings. Because of the additional characters that aren't JSON valid, this is not a generic problem, but a new problem for you to solve.\n\"\"\"\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('7') == '0'\nassert solution('2') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 3 2 0') == '2'\nassert solution('2\\n2 2') == '0'\nassert solution('3\\n3 3 2') == '1'"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 3 2 0\n''') == '2'\n\nassert solution('''\n7\n1 3 3 2 1 2 3\n''') == '0'\n\nassert solution('''\n2\n2 2\n''') == '1'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '504'\nassert solution('9') == '504'\nassert solution('7') == '210'\nassert solution('8') == '504'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '7'\nassert solution('6') == '6'\nassert solution('5') == '5'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n\nsolution = lambda stdin: int(stdin) % 10\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"7\") == \"210\"\nassert solution(\"10\") == \"900\"\nassert solution(\"10\") == \"900\"\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '504'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"504\"\nassert solution(\"7\") == \"210\""
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\nassert solution('9') == '9'\nassert solution('7') == '210'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n4\n0 0 5 5\n0 1 4 4\n1 0 2 1\n1 1 1 2\n\"\"\") == \"1 1\"\nassert solution(\"\"\"\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\"\"\") == \"3 4\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 1 5 4\n1 0 4 4\n1 1 4 4\n\n''') == '3 4'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n\n''') == '1 1'\n\n\"\"\"\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 1 1 1\n1 2 6 7\n1 1 4 4\n8 1 9 2\n''') == '1 1'\nassert solution('''\n5\n0 0 10 8\n0 1 1 1\n1 2 6 7\n2 3 5 6\n8 1 9 2\n''') == '3 4'\nassert solution('''\n8\n0 0 1 1\n1 1 2 2\n2 3 5 6\n3 4 4 5\n4 5 6 7\n5 6 7 8\n6 7 8 9\n''') == '1 1'\nassert solution('''\n10\n0 0 1 1\n1 1 2 2\n2 3 5 6\n3 4 4 5\n4 5 6 7\n5 6 7 8\n6 7 8 9\n7 8 9 10\n8 9 10 11\n9 10 11 12\n10 11 12 13\n''') == '1 1'\n\n'''\nThe picture below shows the rectangles in the first and second samples. The possible answers are highlighted. [Image] \n\nThe picture below shows the rectangles in the third and fourth samples. [Image]\n'''\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '1 1'\nassert solution('''5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '3 4'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    0 0 1 1\n    1 1 2 2\n    3 0 4 1\n    ''') == '1 1'\n\nassert solution('''\n    4\n    0 0 5 5\n    0 1 4 4\n    1 0 2 1\n    1 1 4 4\n    ''') == '3 4'\n\nassert solution('''\n    5\n    0 0 10 8\n    0 1 9 2\n    1 2 6 7\n    1 1 4 4\n    8 1 9 2\n    ''') == '1 1'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1 1\"\nassert solution(\"4\") == \"1 1\"\nassert solution(\"5\") == \"3 4\""
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n3\n0 0 1 1\n0 1 1 2\n1 0 2 1\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '3 4'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '3 4'\nassert solution('''\n7\n0 0 1 1 2 1 1\n1 1 2 2 3 2 1\n2 2 3 3 4 3 1\n3 4 4 5 5 4 1\n5 5 6 6 7 7 5\n''') == '0 0'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n0 0 1 1\n1 1 2 2\n3 0 4 1\n3 0 4 1\n\n3\n0 0 5 5\n0 1 6 7\n1 0 2 3\n1 1 4 3\n8 1 9 2\n\n1\n0 0 5 5\n1 2 6 7\n2 0 4 4\n3 1 4 4\n8 1 9 2\n\n3\n0 0 5 5\n0 1 6 7\n1 0 2 3\n1 1 4 3\n8 1 9 2\n''') == '1 2'\n\nassert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n\n3\n0 0 5 5\n1 2 6 7\n2 0 4 4\n\n3\n0 0 5 5\n1 2 6 7\n2 0 4 4\n\n1\n0 0 5 5\n1 2 6 7\n2 0 4 4\n\n3\n0 0 5 5\n0 1 6 7\n1 0 2 3\n1 1 4 3\n8 1 9 2\n\n1\n0 0 5 5\n1 2 6 7\n2 0 4 4\n\n3\n0 0 5 5\n0 1 6 7\n1 0 2 3\n1 1 4 3\n8 1 9 2\n''') == '1 1'\n\n'''\nIn the first sample, there are four rectangles: the first one, the second one, the third one and the fourth one.\n\nThe common point belongs to the first one, the third one, and the fourth one. The fourth one is the point which belongs to the third one.\n\nIn the second sample, there are three rectangles.\n\nThe common point belongs to the first one, the second one, and the fourth one. The fourth one is the point which belongs to the second one.\n\nIn the third sample, there are five rectangles.\n\nThe common point belongs to the first one, the third one, the fifth one, the fourth one and the sixth one.\n\nIn the fourth sample, there are five rectangles.\n\nThe common point belongs to the first one, the fourth one, the fifth one, the sixth one and the seventh one.\n\nIn the fifth sample, there are five rectangles.\n\nThe common point belongs to the first one, the fifth one, the sixth one, the seventh one and the seventh one.\n\nIn the sixth sample, there are five rectangles.\n\nThe common point belongs to the first one, the sixth one, the seventh one, the seventh one and the seventh one.\n\nIn the seventh sample, there are five rectangles.\n\nThe common point belongs to the first one, the seventh one, the seventh one, the seventh one and the seventh one.\n\nIn the eight sample, there are four rectangles.\n\nThe common point belongs to the first one, the third one, the fifth one, the sixth one.\n\nIn the ninth sample, there are four rectangles.\n\nThe common point belongs to the first one, the second one, the fourth one, and the sixth one.\n\n'''"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 0 4 4\n1 1 4 4\n1 1 4 4\n''') == '1 1'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '3 4'"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"4\") == \"1 1\"\nassert solution(\"5\") == \"3 4\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == 'YES'\nassert solution('6') == 'NO'\nassert solution('4') == 'YES'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\", solution()\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == 'NO'\nassert solution('8') == 'YES'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n18 55 16 17\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6\n40 41 43 44 44 44\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n8\n5 972 3 4 1 4 970 971\n\"\"\") == \"YES\""
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n18 55 16 17\n''') == 'YES'\nassert solution('''6\n40 41 43 44 44 44\n''') == 'NO'\nassert solution('''8\n5 972 3 4 1 4 970 971\n''') == 'YES'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n18 55 16 17\n\n6\n40 41 43 44 44 44\n\n8\n5 972 3 4 1 4 970 971\n\n''') == 'YES'\nassert solution('''\n6\n55 59 55 55 55 55\n\n3\n45 45 45 45 45\n\n''') == 'YES'\n'''\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == 'NO'\nassert solution('3') == 'YES'\nassert solution('10') == 'NO'\n\"\"\"\n\nimport sys\nfrom math import sqrt"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"10\"\nassert solution(\"10 1\") == \"10\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"9\"\n\nassert solution('''\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == \"9\"\n\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == \"10\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''\n5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\nassert solution('''\n2 5\n1 1 1 1 1\n''') == '5'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 9\\n1 2 3\\n1 2 3 7 8 9 11 12 13\") == \"9\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 2 3 4 5\") == \"10\""
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 9\") == \"9\"\nassert solution(\"5 5\") == \"10\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 9') == '9'\nassert solution('5 5') == '10'\n\n\nimport heapq\nfrom collections import deque, defaultdict"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 9\") == \"9\"\nassert solution(\"5 5\") == \"10\"\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == 'Vasya', 'Basic test'\nassert solution('''\n2\n''') == 'Petya', 'Basic test'\nassert solution('''\n8\n''') == 'Petya', 'Basic test'"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == \"Vasya\"\nassert solution('2') == \"Petya\"\nassert solution('8') == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Vasya\"\nassert solution(\"2\") == \"Petya\"\nassert solution(\"8\") == \"Petya\""
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n\n''') == 'Petya', 'First sample'\nassert solution('''\n2\n\n''') == 'Vasya', 'Second sample'"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Petya'\nassert solution('8') == 'Petya'\nassert solution('1') == 'Vasya'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3\\n1 2\\n2 2\") == \"0\"\nassert solution(\"1 5 3\\n1 3\\n1 1\\n1 5\") == \"1\"\nassert solution(\"4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3\") == \"1\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution('''\n2 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n''') == '1'\nassert solution('''\n2 2 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n''') == '1'\nassert solution('''\n3 3 5\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n''') == '3'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 3\") == \"0\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"4 3 6\") == \"1\"\nassert solution(\"5 5 3\") == \"1\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 3') == '0'\nassert solution('1 10 3') == '2'\nassert solution('1 20 3') == '1'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\") == \"0\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"4 3 6\") == \"1\"\nprint('all test cases passed')"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 3') == '0'\nassert solution('1 5 3') == '2'\nassert solution('4 3 6') == '1'\n\n'''\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 3\") == \"0\"\nassert solution(\"1 5 3\") == \"2\"\nassert solution(\"4 3 6\") == \"1\"\n\n\n[Image] \n\n[Image] \n[Image] \n\n[Image]\n[Image]\n[Image]\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2 3\n1 2\n2 2\n2 1\n''') == '0'\n\nassert solution('''1 5 3\n1 3\n1 1\n1 5\n''') == '1'\n\nassert solution('''4 3 6\n1 2\n1 3\n2 2\n2 3\n3 1\n3 3\n''') == '1'\n\nassert solution('''9 9 9\n1 1\n2 1\n3 2\n4 2\n5 1\n6 2\n7 3\n8 1\n9 2\n10 2\n''') == '10'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 3') == '0'\nassert solution('1 5 3') == '2'\nassert solution('4 3 6') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 3\\n1 2') == '0'\nassert solution('1 5 3\\n1 3') == '2'\nassert solution('4 3 6\\n1 2\\n1 3\\n2 2\\n2 3\\n3 1\\n3 3') == '1'\nprint('Tests passed.')\n\n'''\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 2\nassert solution('3') == 0\nassert solution('2') == 0\nassert solution('1') == 1\nassert solution('0') == 0\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nA\nB\nB\nA''') == '2'\nprint(solution('''1\nB\nA\nA\nB'''))"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 2\nassert solution('''4\nA\nB\nB\nA''') == 2\nassert solution('''5\nA\nB\nC\nA\nD''') == 8\nassert solution('''10\nA\nB\nC\nA\nD\nE\nF\nG\nH\nI''') == 140\nassert solution('''1\nA\nA''') == 2\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nAB\\nAB\\nBA') == '3'\nassert solution('1\\nA\\nA\\nA') == '1'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == 2\n\"\"\"\n\nimport math\nfrom functools import reduce\nfrom operator import xor\nfrom itertools import product"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\nAB\\nAB\\nBB') == '2'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"5\nA\nB\nB\nA\n\"\"\") == \"2\"\nassert solution(r\"\"\"20\nA\nB\nB\nA\n\"\"\") == \"0\"\nassert solution(r\"\"\"100\nA\nB\nB\nA\n\"\"\") == \"2\""
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nAA\\nAB\\nBA\\nBB') == '2'\nassert solution('4\\nA\\nB\\nA\\nB') == '2'\nassert solution('4\\nA\\nB\\nA\\nB') == '1'\nassert solution('4\\nAA\\nAB\\nBA\\nBB') == '1'\n"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nA\nB\nB\nA\n''') == '2'\nassert solution('''8\nB\nA\nA\nB\nB\nB\nA\nA\n''') == '2'\nassert solution('''4\nA\nA\nB\nB\n''') == '0'\nassert solution('''1\nA\n''') == '0'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('10') == '4'\nassert solution('4') == '3'\nassert solution('50') == '1'"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2 3 4\n''') == '2'\nassert solution('''\n5\n2 3 4 6 7\n''') == '3'\nassert solution('''\n3\n1 3 2\n''') == '1'\nassert solution('''\n5\n1 3 2 4 5\n''') == '5'\nassert solution('''\n3\n1 3 2 4\n''') == '3'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 4\") == \"2\"\nassert solution(\"2 2 4\") == \"2\"\nassert solution(\"3 2 4\") == \"2\"\nassert solution(\"10 3 1\") == \"10\"\nassert solution(\"5 6 7 8\") == \"8\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 3 4\n''') == '2'\nassert solution('''\n5\n2 3 4 6 7\n''') == '3'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3 4') == '2'\nassert solution('5\\n2 3 4 6 7') == '3'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\n\"\"\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n2 3 4\n\n2\n4 3''') == '2'\nassert solution('''5\n2 3 4 6 7\n\n3\n4 3 5''') == '3'\nassert solution('''10\n2 3 4 5 6 7 8 9 10\n\n10\n2 3 4 5 6 7 8 9 10''') == '8'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2 3 4\\n') == '2'\nassert solution('5\\n2 3 4 6 7\\n') == '3'\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\nABBBCCCCCCCCCCCCCCCCC\") == \"20\"\n\n\"\"\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"11\"\nassert solution(\"3\") == \"2\""
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nABABCD') == '11'\nassert solution('5\\nABABCD') == '10'\nassert solution('9\\nABABCD') == '8'\n\"\"\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5\nABAAC\n\n\"\"\"\n) == \"11\"\nassert solution(\n\"\"\"\n3\nABABC\n\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"A\") == \"1\"\nassert solution(\"AA\") == \"2\"\nassert solution(\"ABABC\") == \"3\"\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nABAAC\") == \"11\"\nassert solution(\"2\\nAABAC\") == \"10\""
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nABAAC\\n\") == \"11\"\nassert solution(\"5\\nABAAC\\n\") == \"11\""
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '8'\nassert solution('5') == '10'"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"1023 1 2\") == \"-1\"\nassert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"-1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\\n\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\\n\") == \"-\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n4 2\n1 1\n0 1\n2 3\n''') == '3'\nassert solution('''\n1023\n1 2\n1 0\n1 2\n1 1\n''') == '-1'\nassert solution('''\n5\n4 2\n1 1\n0 1\n2 3\n''') == '-1'\nassert solution('''\n5\n4 2\n1 1\n0 1\n2 3\n''') == '2'\nassert solution('''\n5\n4 2\n1 1\n0 1\n2 3\n''') == '2'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"1023\") == \"-1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n1 1\n0 1\n2 3''') == '3'\nassert solution('''5\n4 2\n1 1\n0 1\n2 3\n''') == '-1'"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n4 2\n1 1\n0 1\n2 3\n''') == '3'\nassert solution('''1023\n1 2\n1 0\n1 2\n1 1\n''') == '-1'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4 2\\n1 1\\n0 1\\n2 3\") == \"3\"\nassert solution(\"1023\\n1 2\\n1 0\\n1 2\\n1 1\") == \"-1\"\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '3'\nassert solution('1023') == '-1'\nassert solution('3 4 1 5 6 2 7 8') == '-1'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n4 5') == '2'\nassert solution('1\\n3 5') == '1'\nassert solution('10\\n89 1903 3242 2') == '8'\nassert solution('1\\n100 100') == '1'\n\n'''\n\nfrom math import sqrt"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 5') == '2'\nassert solution('2\\n4 5') == '2'\n\"\"\""
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\n\n---\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n4 5\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"4\\n1 2 3 4\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 3 4\\n\") == \"2\"\nassert solution(\"1\\n4 3 2\\n\") == \"1\"\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n4 5\n''') == '2'\nassert solution('''\n2\n4 5\n''') == '2'\n\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(__file__))\nfrom collections import deque\nfrom heapq import heappush, heappop, heappushpop, heapify, heapreplace, heapify"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n4 5\") == \"2\"\nassert solution(\"5\\n2 3 5 6 1\") == \"4\"\nassert solution(\"6\\n1 2 3 4 5 6\") == \"7\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 2 1''') == 'YES'\nassert solution('''1 2 3 4''') == 'NO'\nassert solution('''2 2 2 3''') == 'NO'"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 2 3') == 'NO'\nassert solution('2 2 2 3') == 'YES'\nassert solution('1 2 3 4') == 'NO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"NO\"\nprint(solution(input()))\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2 1') == 'YES'\nassert solution('1 2 3 4') == 'NO'\nassert solution('2 2 2 3') == 'NO'"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2 2 1\n''') == 'YES'\nassert solution('''\n1 2 3 4\n''') == 'NO'\nassert solution('''\n2 2 2 3\n''') == 'NO'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 2, 1, 0]) == 'YES'\nassert solution([2, 2, 2, 3]) == 'NO'\nassert solution([1, 2, 3, 4]) == 'YES'\n\n\"\"\"\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 2 1') == \"YES\"\nassert solution('1 2 3 4') == \"NO\"\nassert solution('2 2 2 3') == \"NO\"\n\n\n\n\"\"\"\nimport itertools"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\""
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 2 3\") == \"NO\"\nassert solution(\"1 2 2 3 0\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\\n\") == \"YES\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n\") == \"YES\"\nassert solution(\"3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n\") == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == 'YES'\nassert solution(input_) == 'NO'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 4\n1 3 2 4\n1 3 4 2\n''') == 'NO'\nassert solution('''4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'YES'\nassert solution('''3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n''') == 'YES'\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"YES\"\nassert solution(\"3 6\") == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == 'YES'\nassert solution('5 5') == 'NO'"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4\\n1 3 2 4\\n1 3 4 2\\n') == 'NO'\nassert solution('3 6\\n2 1 3 4 5 6\\n1 2 4 3 5 6\\n1 2 3 4 6 5\\n') == 'NO'"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3 2 4\n1 3 4 2\n''') == \"YES\"\nassert solution('''\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == \"YES\"\nassert solution('''\n3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n''') == \"YES\"\nassert solution('''\n1 3 4 1 2 3 4 1 2 4 3 5 6\n1 3 4 1 2 3 4 1 2 3 4 6 5\n1 3 4 1 2 3 4 1 2 3 4 5 6\n1 3 4 1 2 3 4 1 2 3 4 5 6\n''') == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\n1 3 2 4\\n1 3 4 2\\n\") == \"YES\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3 4\n2 3 4 1\n1 2 4 3\n''') == 'YES'\nassert solution('''\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'YES'\nassert solution('''\n3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n\n''') == 'YES'"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 4\n1 3 2 4\n1 3 4 2\n''') == 'YES', 'First'\nassert solution('''4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'NO', 'Second'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\nassert solution('2 2 1') == '0'\nassert solution('1 1 1') == '0'\nassert solution('1 1 1') == '0'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\n\"\"\"\nfrom fractions import Fraction\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n\"\"\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n\"\"\"\n\nf, w, h = (int(x) for x in stdin.split())"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"1 2 1\") == \"666666672\"\nassert solution(\"1 3 1\") == \"2\"\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n\nstdin = '1 1 1\\n'\nprint(solution(stdin))\n\nstdin = '1 2 1\\n'\nprint(solution(stdin))\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\nassert solution('1 3 1') == '0'"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 1 1\n''') == '0'\n\nassert solution('''\n1 2 1\n''') == '666666672'\n\nassert solution('''\n1 2 2\n''') == '89443357'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('1\\n0') == '0'\n\n\"\"\""
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 3 1\n''') == '1'\nassert solution('''\n3\n2 3 1 5 6\n''') == '5'\nassert solution('''\n3\n7 2 3 1 5 6\n''') == '2'"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([7, 2, 3, 1, 5, 6]) == 5"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n7 2 3 1 5 6\n''') == '5'\nassert solution('''\n5\n7 2 3 1 5 7\n''') == '6'\nassert solution('''\n5\n7 2 3 1 5 4\n''') == '4'\nassert solution('''\n6\n7 2 3 1 5 6\n''') == '5'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('10\\n1 3 5 6 8 9 2 7 5') == '7'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\n7 2 3 1 5 6\") == \"5\"\nassert solution(\"6\\n4 5 2 3 1\") == \"4\"\nassert solution(\"6\\n5 1 2 3 4\") == \"4\"\nassert solution(\"6\\n7 1 2 3 4\") == \"3\"\nassert solution(\"6\\n5 2 2 3 4\") == \"3\"\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '5'"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('2\\n3 2') == '2'\nassert solution('1\\n3 3') == '1'\nassert solution('5\\n1 2 3 4 5') == '4'\nassert solution('100\\n10 20 30 40 50') == '1'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n\n'''\n\nfrom itertools import permutations"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 8\") == '2'\nassert solution(\"4 2 2 6\") == '3'\nassert solution(\"3 7 4 6\") == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 8\") == '2'\nassert solution(\"4 2 2 6\") == '3'\nassert solution(\"3 7 4 6\") == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1 8') == '2'\nassert solution('4 2 2 6') == '3'\nassert solution('3 7 4 6') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '2'\nassert solution(input) == '3'\nassert solution(input) == '1'\n\"\"\"\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1 1 8\n''') == '2'\nassert solution('''4 2 2 6\n''') == '3'\nassert solution('''3 7 4 6\n''') == '1'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 5\n''') == '2'\nassert solution('''-1 4 15\n''') == '4'\nassert solution('''0 -1 5\n''') == '-1'\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"4\""
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\""
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'\n\"\"\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-\"\n\n\"\"\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 5') == '2'\nassert solution('-1 4 15') == '4'\nassert solution('0 -1 5') == '-1'\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 5''') == '2'\nassert solution('''-1 4 15''') == '4'\nassert solution('''0 -1 5''') == '-1'"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == str(min(i for i in range(len(a) + 1) if all(0 < b < 10 for b in a[i::i])))\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"2\"\nassert solution(\"2 5\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 1\n2 1 2 3 4 3''') == '2'\nassert solution('''6 2\n1 1 2 2 3 3''') == '0'\nassert solution('''6 1\n2 1 2 3 4 3''') == '2'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\"\nassert solution(\"6 2\\n1 1 2 2 3 3\") == \"0\"\nassert solution(\"6 1\\n2 1 2 3 4 3\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 2 3 4 3''') == '2'\nassert solution('''2 1 2 3 4 3''') == '0'\nassert solution('''6 1\n2 1 2 3 4 3\n''') == '2'\nassert solution('''6 1\n1 1 2 2 3 3\n''') == '0'\nassert solution('''6 1\n1 1 2 2 3 3\n''') == '2'\n\n'''\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n6 1\n2 1 2 3 4 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n6 2\n1 1 2 2 3 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n6 1\n1 1 2 2 3 3\n\"\"\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"2\"\nassert solution(\"6 2\") == \"0\"\nassert solution(\"6 1\") == \"2\""
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n2 1 2 3 4 3\\n\") == \"2\"\nassert solution(\"6 2\\n1 1 2 2 3 3\\n\") == \"0\"\nassert solution(\"6 1\\n1 1 2 2 3 3\\n\") == \"2\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"6 1\n2 1 2 3 4 3\"\"\") == \"2\"\nassert solution(\"\"\"6 2\n1 1 2 2 3 3\"\"\") == \"0\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"monday\\ntuesday\") == \"NO\"\nassert solution(\"saturday\\ntuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"monday\") == \"NO\"\nassert solution(\"tuesday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nmonday\ntuesday\n''') == 'NO'\nassert solution('''\nsunday\nsunday\n''') == 'YES'\nassert solution('''\nsaturday\nsaturday\n''') == 'NO'\nassert solution('''\nsaturday\ntuesday\n''') == 'YES'\n''')"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"monday\\ntuesday\") == \"NO\"\nassert solution(\"saturday\\ntuesday\") == \"YES\"\nassert solution(\"sunday\\ntuesday\") == \"YES\"\nassert solution(\"saturday\\nsunday\") == \"NO\"\nassert solution(\"monday\\nfebruary\") == \"YES\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('sunday\\ntuesday\\n') == 'YES'\nassert solution('saturday\\ntuesday\\n') == 'NO'\n\n'''\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"monday\\ntuesday\") == \"NO\"\nassert solution(\"saturday\\ntuesday\") == \"YES\""
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''monday\ntuesday''') == 'NO'\nassert solution('''saturday\nsunday''') == 'YES'\nassert solution('''tuesday\nsunday''') == 'YES'"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''monday\ntuesday''') == 'NO'\nassert solution('''saturday\nsunday''') == 'YES'\nassert solution('''saturday\ntuesday''') == 'YES'\nassert solution('''saturday\nsunday''') == 'NO'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"sunday\") == \"YES\"\nassert solution(\"monday\") == \"NO\"\nassert solution(\"saturday\") == \"YES\"\nassert solution(\"thursday\") == \"NO\"\nassert solution(\"friday\") == \"NO\"\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''monday\ntuesday''') == 'NO'\nassert solution('''saturday\ntuesday''') == 'YES'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"17\"\nassert solution(input()) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('35\\n') == '17'\nassert solution('10000000000\\n') == '91'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"35\") == \"17\"\nassert solution(\"10000000000\") == \"91\"\nassert solution(\"2\") == \"\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('15') == '8'\nassert solution('10000000000') == '91'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123') == '6'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10000000000') == '91'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('-2147483648') == '-2147483648'"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(in1) == \"17\"\nassert solution(in2) == \"91\""
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('35') == '17'\nassert solution('10000000000') == '91'\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12345\") == \"6\"\nassert solution(\"10000000000\") == \"17\"\nassert solution(\"0\") == \"0\"\nassert solution(\"5000000001\") == \"91\"\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n'''"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AHA') == 'YES', 'Please fix the code'\nassert solution('XO') == 'NO', 'Please fix the code'\n\n'''\n\nimport string\nimport sys"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n\n\n'''\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n\"\"\""
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\nassert solution('B') == 'YES'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\nprint(solution(input()))\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AHA\") == \"YES\"\nassert solution(\"Z\") == \"NO\"\nassert solution(\"XO\") == \"NO\"\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == '1'\nassert solution(s) == '0'\n\"\"\"\n\nfrom typing import List\nimport pytest\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 5\n''') == '0'\nassert solution('''3\n1 2 5\n''') == '1'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == \"1\"\nassert solution('3 2 1') == \"1\"\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '1'\n\n\"\"\"\n\nn = int(input())\nstewards = list(map(int, input().split()))\n\ncount = 0\nfor steward_strength in stewards:\n    first_steward_strength = min(stewards)\n    second_steward_strength = max(stewards)\n    if steward_strength <= first_steward_strength and steward_strength >= second_steward_strength:\n        count += 1\n\nprint(count)\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'Yes'\nassert solution() == 'No'\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin):\n        return 'Yes' if abs(0 - int(stdin[0])) <= int(stdin[1]) else 'No'\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('-1 1000000000') == 'Yes'\nassert solution('0 0') == 'Yes'\nprint('Congratulations! All test cases passed.')\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\nRU\n\n''') == 'Yes'\nassert solution('''-1 1000000000\nLRRLU\n\n''') == 'Yes'\nassert solution('''0 0\nD\n\n''') == 'Yes'\nassert solution('''0 0\nU\n\n''') == 'No'"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\"\nassert solution(\"R\") == \"Yes\"\n\n\"\"\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\"\nassert solution('') == \"Yes\"\nassert solution('R') == \"Yes\"\nassert solution('RUD') == \"Yes\"\nassert solution('DDDD') == \"Yes\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\n\"\"\"\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\"\nprint(solution(input()))\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 3 7') == \"1\"\nassert solution('10   3   7') == \"1\"\nassert solution('314') == \"0\"\nassert solution('22 19 3') == \"1\""
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 3 7\n''') == '1'\nassert solution('''\n10   3   7\n''') == '1'\nassert solution('''\n314\n159 265\n358\n''') == '0'\nassert solution('''\n22 19 3\n''') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\") == \"1\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Simple case\"\nassert solution(\"10   3   7\") == \"1\", \"Multiple spaces\"\nassert solution(\"314\") == \"0\", \"Upper case\"\nassert solution(\"22 19 3\") == \"1\", \"Negative numbers\"\nassert solution(\"60\") == \"1\", \"One line\"\n\n###"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 3 7''') == '1'\nassert solution('''10   3   7''') == '1'\nassert solution('''314''') == '0'\nassert solution('''22 19 3''') == '1'\nassert solution('''60''') == '1'\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 3 7\") == \"1\", \"Should return 1\"\nassert solution(\"10   3   7\") == \"1\", \"Should return 1\"\nassert solution(\"314\") == \"0\", \"Should return 0\"\nassert solution(\"22 19 3\") == \"1\", \"Should return 1\""
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 3 7') == '1'\nassert solution('10   3   7') == '1'\nassert solution('314') == '0'\nassert solution('22 19 3') == '1'\nassert solution('60') == '1'"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3''') == '1'\nassert solution('''3 3 7''') == '1'\nassert solution('''314''') == '0'\nassert solution('''223 223 3''') == '1'\nassert solution('''  0  ''') == '0'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n\n''') == '9'\nassert solution('''3\n\n''') == '0'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '9'\nassert solution('2\\n') == '8'\nassert solution('3\\n') == '7'\nassert solution('4\\n') == '6'\nassert solution('5\\n') == '5'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n2''') == '9'\nassert solution('''1\n2\n4\n6\n8\n10\n12\n14\n16''') == '19'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == '19'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '19'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('123456789') == '82'\nassert solution('1000000000000') == '2162'\nassert solution('11011011010110111001011001010101101') == '73'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '9'\n\"\"\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n''') == '9', solution('''1''')\nassert solution('''6\n''') == '10', solution('''6''')\nassert solution('''13\n''') == '20', solution('''13''')\nprint(solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n'''))\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"9\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '8'\nassert solution('3') == '7'\nassert solution('4') == '6'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '9'\nassert solution('10') == '20'\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '9'\nassert solution('5') == '16'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n3 6 28 9\n\n''') == '4'\nassert solution('''\n5\n5 12 9 16 48\n\n''') == '3'\nassert solution('''\n4\n1 2 4 8\n\n''') == '-1'\nassert solution('''\n4\n5 12 9 16 48\n\n''') == '-1'\nassert solution('''\n4\n1 2 4 8\n\n''') == '-1'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 4 8\") == \"4\"\nassert solution(\"4\\n3 6 28 9\") == \"4\"\nassert solution(\"5\\n5 12 9 16 48\") == \"3\"\n\n\n------References------\nhttps://www.geeksforgeeks.org/cycle-checking-in-a-graph/\n\n\"\"\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 6 28 9\n''') == '4'\nassert solution('''5\n5 12 9 16 48\n''') == '3'\nassert solution('''4\n1 2 4 8\n''') == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\"\nassert solution(\"4\\n1 2 4 8\\n\") == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n') == '-1'\nassert solution('3\\n') == '4'\nassert solution('4\\n') == '3'"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3 6 28 9') == '4'\nassert solution('5\\n5 12 9 16 48') == '3'\nassert solution('4\\n1 2 4 8') == '-1'"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3 6 28 9\n\n''') == \"4\"\nassert solution('''\n5\n5 12 9 16 48\n\n''') == \"3\"\nassert solution('''\n4\n1 2 4 8\n\n''') == \"-1\"\nassert solution('''\n4\n1 2 4 8\n\n''') == \"-1\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n0 1\") == \"0\"\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n3 6 28 9\\n\") == \"4\\n\"\nassert solution(\"5\\n5 12 9 16 48\\n\") == \"3\\n\"\nassert solution(\"6\\n1 2 4 8\\n\") == \"-1\\n\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n0 5 0 2 3\n''') == '2'\nassert solution('''7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\nassert solution('''4\n2 5 4\n''') == '1'\nassert solution('''10\n0 5 0 0 2 1 9 3 4 6 5 8\n''') == '4'\nassert solution('''30\n0 5 0 0 2 1 9 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5 8 7 0 7 0 8 9 0 2 3 4 6 5"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0 5 0 2 3\n''') == '2'\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\nprint('All tests passed!')"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n0 5 0 2 3\n''') == '2'\n\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n0 5 0 2 3\n''') == '2'\nassert solution('''7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n0 5 0 2 3') == '2'\nassert solution('7\\n1 0 0 5 0 0 2') == '1 7 3 5 6 4 2'"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1 7 3 5 6 4 2\""
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n0 5 0 2 3''') == '2'\nassert solution('''7\n1 0 0 5 0 0 2''') == '1'\nassert solution('''8\n0 7 3 0 1 4 5 6''') == '1'\nassert solution('''13\n0 0 1 1 2 3 4 4 5 5 6 6 6 6 6 7 7 7 7 7 8 8 8 8 9 9 9 9 9 10 10 10 10 10 11 11 11 11 11 11 11 11 11 11 12 12 12 12 12 12 12 12 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"7\") == \"1\"\nprint(solution(input()))"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2\n1''') == '4'\nassert solution('''4\n3\n2\n1''') == '5'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '5'\nassert solution('5') == '5'\n\n\"\"\"\n\nfrom math import floor"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '1'\nassert solution('3\\n') == '3'\nassert solution('5\\n') == '5'\nassert solution('10\\n') == '10'\nassert solution('100\\n') == '100'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 1\n1 3 2\n3 4 1\n''') == '5'\n\nassert solution('''10\n10 8 1 2 1 5 3 8 4 2\n6 7 6 6 4 2 1 3 4 6\n''') == '7'\n\nassert solution('''5\n3 1 2 1 3\n2 5 1 2 3\n''') == '5'\n\nassert solution('''4\n1 2 3 1\n1 2 3 1\n1 3 2 1\n''') == '4'\n\nassert solution('''3\n1 2 1\n1 3 2\n3 4 1\n''') == '3'"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n') == '2\\n'\nassert solution('5\\n') == '5\\n'\nassert solution('8\\n') == '4\\n'\nassert solution('10\\n') == '5\\n'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'\n'''\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\"\n\n\"\"\""
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n''') == '1'\nassert solution('''\n5\n''') == '5'\nassert solution('''\n10\n''') == '7'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('5 3 1') == '1 3 5'\nassert solution('4 2 2') == '31'\nassert solution('6 3 1 6 3') == '4'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"5 3 1\") == \"1 3 5\"\nassert solution(\"5 4 3 2\") == \"1 2 3 4\""
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 2\") == \"18\"\nassert solution(\"4 2 2\") == \"31\"\nassert solution(\"5 3 1\") == \"1 3 5\"\nassert solution(\"4 3 1 6 3\") == \"4\""
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 2\") == \"18\"\nassert solution(\"10 8 8 3\") == \"31\"\nassert solution(\"4 2 2\") == \"23\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '18 4'\nassert solution(input_data=\"4 2 2\") == '31 2'\nassert solution(input_data=\"5 3 1\") == '23 1 3 5'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 2') == \"18\"\nassert solution('4 2 2') == \"31\"\nassert solution('5 3 1') == \"1 3 5\"\nassert solution('6 3 1 6 3') == \"4\""
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('4 2 2') == '31'\nassert solution('5 3 1') == '1 3 5'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 2\n1 3 4 5 2\n5 3 2 1 4''') == '18'\nassert solution('''4 2 2\n10 8 8 3\n10 7 9 4\n\n''') == '31'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 2\") == \"18\"\nassert solution(\"4 2 2\") == \"31\"\nassert solution(\"5 3 1\") == \"1 3 5\"\nassert solution(\"6 3 1 6 3\") == \"4\"\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('4 2 2') == '31'\nassert solution('5 3 1') == '1 3 5'\nassert solution('6 3 1 6 3') == '4'\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3\\n1 2\\n1 3\\n1 4\\n') == 'No'\nassert solution('5 3\\n1 2\\n1 3\\n2 4\\n1 5\\n') == 'Yes'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == 'Yes\\naa\\n'\nassert solution('4 3') == 'No\\n'\nassert solution('5 1') == 'No\\n'\nassert solution('5 2') == 'No\\n'\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"4 3\") == \"No\""
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1\n1 2\n''') == \"Yes\"\nassert solution('''4 3\n1 2\n1 3\n1 4\n''') == \"No\"\nassert solution('''4 3\n1 2\n1 3\n1 4\n''') == \"Yes\"\nassert solution('''5 3\n1 2\n1 3\n2 4\n3 4\n''') == \"No\"\nassert solution('''5 3\n1 2\n1 3\n2 4\n3 4\n''') == \"Yes\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1\n1 2\n''') == 'Yes'\nassert solution('''4 3\n1 2\n1 3\n1 4\n''') == 'No'"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n1 2\\n\") == \"Yes\"\nassert solution(\"4 3\\n1 2\\n1 3\\n1 4\\n\") == \"No\"\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n1 2\n\n''') == 'Yes'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n\n''') == 'No'\nassert solution('''\n2 2\n1 3\n2 4\n\n''') == 'No'\nassert solution('''\n5 5\n1 2\n1 3\n2 4\n3 4\n4 5\n\n''') == 'Yes'\nassert solution('''\n4 5\n1 2\n2 3\n3 4\n4 5\n\n''') == 'Yes'\n'''\n\nimport sys\nsys.stdin = open('input.txt')"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"7\"\nassert solution(\"1 2 3\") == \"15\"\nassert solution(\"1 1 2\") == \"4\"\nassert solution(\"2 2 2\") == \"6\""
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 1 1\") == \"7\"\nassert solution(\"0 2 1\") == \"19\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 1 1\") == \"7\"\nassert solution(\"1 0 1\") == \"7\"\nassert solution(\"1 1 0\") == \"19\"\nprint(\"You're a wise guy!\") if solution() else print(\"You're a stupid fool!\")"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('0 2 1') == '19'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 1 1\") == \"7\"\nassert solution(\"0 2 1\") == \"19\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('1 0 1') == '19'"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 1 1\n1 0 1\n1 1 0\n3\n''') == '7'\nassert solution('''\n0 2 2\n1 0 100\n1 2 0\n5\n''') == '87'\nassert solution('''\n0 3 3\n1 0 100\n1 2 0\n3\n''') == '30'\nassert solution('''\n0 3 3\n1 0 100\n1 2 0\n3\n''') == '60'\nassert solution('''\n0 1 1\n1 0 1\n1 1 0\n3\n''') == '7'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('0 2 2') == '19'\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 1 1\") == \"7\"\nassert solution(\"0 2 2\") == \"19\"\nassert solution(\"0 1\") == \"7\"\nassert solution(\"1 1\") == \"4\""
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"0 1 1\\n1 0 1\\n1 1 0\\n3\\n\") == \"7\"\nassert solution(\n    \"0 2 1\\n1 0 100\\n1 2 0\\n5\\n\") == \"87\""
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"F\") == 0\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == 2\nassert solution(\"Bulbbasaur\") == 1\nprint(solution(input()))\n\n'''\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''Bulbbasaur\nF''') == '1'\nassert solution('''aBddulbasaurrgndgbualdBdsagaurrgndbb''') == '2'\nassert solution('''dgndgndgddgddgddgndb''') == '1'\nassert solution('''aaabbbbaa''') == '0'\nassert solution('''aaababab''') == '0'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Bulbbasaur') == '1'\nassert solution('F') == '0'\nassert solution('aBddulbasaurrgndgbualdBdsagaurrgndbb') == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\nassert solution(\"aBbcd\") == \"2\"\nassert solution(\"aBddd\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''BulbbasaurrgndgbualdBdsagaurrgndbb''') == '2'\nassert solution('''aBddulbasaurrgndgbualdBdsagaurrgndbb''') == '0'\nassert solution('''F''') == '0'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Bulbbasaur\") == '1'\nassert solution(\"F\") == '0'\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == '2'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''F\naBddulbasaurrgndgbualdBdsagaurrgndbb''') == '0'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"bulbbasaur\") == \"1\"\nassert solution(\"F\") == \"0\"\nassert solution(\"aBddulbasaurrgndgbualdBdsagaurrgndbb\") == \"2\"\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '2'\n\"\"\"\n\nstdin = input()"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == 'YES'\n\"\"\"\n\nfrom itertools import permutations\nimport re"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\n\nassert solution(\"5 5\\nAaBbCc\\nDdEeFf\\nGgHhIi\\nJjKkLl\") == \"NO\"\n\n\"\"\""
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == 'YES'\n\n'''\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\narc\nrac\n''') == 'YES'\n\nassert solution('''\n4 4\ncat\ndog\npen\npen\n''') == 'NO'\n\nassert solution('''\n2 2\nabc\n''') == 'NO'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\narc\\nrac\") == \"YES\"\nassert solution(\"2 1\\na\\n\") == \"NO\"\n'''"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('2 3') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('3 1') == 'NO'\nassert solution('4 4') == 'NO'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2\narc\nrac''') == 'NO'\nassert solution('''\n4 4\narc\nrac\nrac\narc''') == 'YES'\nassert solution('''\n3 4\ncba\ncda\nres''') == 'YES'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 3\\n'\n    'arc\\n'\n    ) == 'YES'\nassert solution(\n    '2 3\\n'\n    'rac\\n'\n    ) == 'NO'\nassert solution(\n    '2 2\\n'\n    'ab\\n'\n    ) == 'NO'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin) == \"YES\"\nassert solution(\"2 3\\narc\\nrac\") == \"YES\"\n\"\"\"\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 2\\nabc\\nabc') == 'NO'\nassert solution('2 1\\nabc\\nabc') == 'NO'\n\"\"\""
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 111') == '4'\nassert solution('3 111') == '4'\nassert solution('3 111') == '4'\n\"\"\"\n\nN, X = list(map(int, input().split()))"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 1') == '1'\nassert solution('4 1') == '1'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"10 3\") == \"4\"\nassert solution(\"9 9\") == \"10\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '5'\nassert solution('5 12') == '2'\nassert solution('7 11') == '0'\nassert solution('7 11') == '7'\nassert solution('1 3') == '1'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 111') == '4'\nassert solution('5 1') == '2'\nassert solution('6 1') == '3'\nassert solution('10 0') == '9'\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 111\n1111\n10111\n10010\"\"\") == \"4\"\nassert solution(\"\"\"2 6\n1\n11\"\"\") == \"4\"\nassert solution(\"\"\"5 11\n111\n11\n101\n100\n1010\"\"\") == \"6\"\nassert solution(\"\"\"10 2\n1\n1\n1111\n10111\n10111\"\"\") == \"10\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010\\n') == '4'\n\"\"\"\n"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"1 1\") == \"3\"\nassert solution(\"2 100\") == \"97\"\nassert solution(\"7 12\") == \"77\"\nassert solution(\"9 100\") == \"1023\""
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 111\\n1111\\n10111\\n10010') == '4'\n\"\"\"\n\nN, X = map(int, stdin.strip().split())\n\na = 0\nb = 0\nc = 0\n\nfor i in range(1, N+1):\n    if i <= X:\n        a += 1\n    if i >= X:\n        b += 1\n    if a!= 0 and b!= 0:\n        c = a + b\n        a = 0\n        b = 0\n\nprint(c)"
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 111\n1111''') == '4'\nassert solution('''3 111\n1111\n10111\n10010\n\n''') == '4'\nassert solution('''4\n1\n2\n3\n4\n5\n''') == '2'\nassert solution('''5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '9'\nassert solution('''4\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 11 5\\n') == 1\nassert solution('11 2 3\\n') == -1"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 11 5') == '1'\nassert solution('11 2 3') == '-1'"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 1\") == 1\nassert solution(\"10 2 1\") == -1\nassert solution(\"10 4 2\") == -1\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([11,11,5]) == \"1\"\nassert solution([11,2,3]) == \"-1\""
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"11 11 5\\n\") == \"1\"\nassert solution(\"11 2 3\\n\") == \"-1\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\nassert solution(\"1 1 1\") == \"0\"\nassert solution(\"10 10 10\") == \"0\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([11, 11, 5]) == \"1\"\nassert solution([11, 2, 3]) == \"-1\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"a b a c a b a\"\n    ) == \"YES\"\nassert solution(\n    \"jinotega\"\n    ) == \"NO\"\nassert solution(\n    \"a\"\n    ) == \"YES\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    'abacaba') == 'YES'\nassert solution(\n    'jinotega') == 'NO'\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abacaba') == 'YES'\nassert solution('jinotega') == 'NO'"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"YES\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"NO\"\n\nassert solution(\"jinotega\") == \"YES\""
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"6.5\""
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '20.0'\n\"\"\"\n\nimport math\n\nk, d, t = map(int, input().split())\n\nx = math.ceil((3 * k + d) / (6 * k))\ny = math.ceil(((k + 1) * k - 2 * (k - 1)) / (12 * d))\n\nprint(x + y)\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 5\") == \"5\"\nassert solution(\"3 2 10\") == \"10\"\nassert solution(\"3 2 12\") == \"5.5\"\n\n\n\"\"\""
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == '6.5'\nassert solution(\"4 2 20\") == '20.0'\n\n\n\n\"\"\"\n\nk, d, t = map(int, input().split())"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 20') == '20.0'\nassert solution('3 2 6') == '6.5'"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '6.5'\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"10.0\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"20.0\"\nassert solution(input) == \"3.5\"\n\n\"\"\"\n\nfrom math import floor\n\nk, d, t = map(int, input().split())\n\nturn_on = 2 * t + k + k * (d - t) / (2 * t)\nturn_off = k + k * (d - t) / (2 * t)\n\nprint(floor(turn_on + turn_off))\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 6\") == \"6.5\"\nassert solution(\"4 2 20\") == \"20.0\""
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2 2\\n..\\n..\\n\") == \"2\"\nassert solution(\n    \"4 4\\n....\\n#..\\n....\\n\") == \"1\"\nassert solution(\n    \"3 4\\n.##.\\n....\\n.#..\\n\") == \"2\""
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n.##.\\n#...\\n\") == \"2\"\nassert solution(\"4 4\\n....\\n.##.\\n....\\n\") == \"1\"\nassert solution(\"3 4\\n....\\n#..\\n\") == \"2\"\n\n\"\"\"\nfrom pprint import pprint\nfrom copy import deepcopy\nimport sys\n\nsys.setrecursionlimit(100000)\n\n\nclass Solution:\n    def __init__(self):\n        pass\n\n    def solution(self, stdin: str) -> str:\n        table = stdin.split(\"\\n\")\n        table_rows = int(table[0])\n        table_cols = int(table[1])\n\n        rows = [[0 for x in range(table_cols)] for x in range(table_rows)]\n        rows_with_forest = []\n        for x in range(len(table)):\n            row = table[x]\n            for y in range(len(row)):\n                if row[y] == \"#\":\n                    rows_with_forest.append((x, y))\n\n        def find_forest_neighbors(coord):\n            if coord in rows_with_forest:\n                rows_with_forest.remove(coord)\n            if coord[0] > 0:\n                if not rows[coord[0] - 1][coord[1]] == 0:\n                    yield (coord[0] - 1, coord[1])\n            if coord[0] < table_rows - 1:\n                if not rows[coord[0] + 1][coord[1]] == 0:\n                    yield (coord[0] + 1, coord[1])\n            if coord[1] > 0:\n                if not rows[coord[0]][coord[1] - 1] == 0:\n                    yield (coord[0], coord[1] - 1)\n            if coord[1] < table_cols - 1:\n                if not rows[coord[0]][coord[1] + 1] == 0:\n                    yield (coord[0], coord[1] + 1)\n\n        trees_count = 0\n        trees_to_remove = set()\n        for forest_coord in rows_with_forest:\n            for neighbor_coord in find_forest_neighbors(forest_coord):\n                if not neighbor_coord in rows_with_forest:\n                    trees_to_remove.add(forest_coord)\n                    trees_count += 1\n                    rows_with_forest.append(neighbor_coord)\n                    rows_with_forest.remove(forest_coord)\n                    break\n        for tree_coord in trees_to_remove:\n            rows_with_forest.remove(tree_coord)\n\n        return str(trees_count)\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n..\n..\n\nOutput\n2\n\nInput\n4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n..\n..\n''') == '2'\nassert solution('''\n4 4\n....\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 4') == '1'\nassert solution('3 4') == '2'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == '2'\nassert solution(\"4 4\") == '1'\nassert solution(\"3 4\") == '2'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 4') == '1'\nassert solution('4 4') == '2'\n\"\"\"\n\nfrom typing import List\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n..\\n..\") == \"2\"\nassert solution(\"4 4\\n....\\n#.#.\\n....\\n.#..\") == \"1\"\nassert solution(\"3 4\\n....\\n.##.\\n....\\n\") == \"2\"\nassert solution(\"3 4\\n#..\\n.##.\\n....\\n\") == \"1\"\nassert solution(\"3 3\\n.##.\\n.##.\\n#..\\n\") == \"1\"\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 4') == '1'\nassert solution('3 4') == '2'"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 4\n...\n...\n...\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n5 5\n.##.\n...#\n...#\n.##.\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n8 8\n...#.\n...#.\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '11'\nassert solution('5') == '23'\nassert solution('6') == '20'"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n1 1 3\") == \"6\"\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 1 3\n''') == '6'\nassert solution('''\n4\n2 1 2 3\n''') == '10'\nassert solution('''\n1\n1\n''') == '0'\nassert solution('''\n5\n1 1 2 2 2\n''') == '6'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 3\\n\") == '6'\nassert solution(\"4\\n2 3 4\\n\") == '3'\nassert solution(\"5\\n3 4 4 2\\n\") == '1'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '7'"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '1'\nassert solution('3') == '1'"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 1 3\\n') == '6'\nassert solution('4\\n3 2 1 3\\n') == '0'\nassert solution('4\\n3 2 5 1 3\\n') == '1'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1 3') == '6'\nassert solution('4\\n1 1 1 3') == '4'\nassert solution('5\\n1 1 1 2 2') == '8'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 1 3\n''') == '6'\nassert solution('''2\n3 1 4\n''') == '0'\nassert solution('''1\n2\n''') == '0'\nassert solution('''4\n4 2 6 1\n''') == '8'\nassert solution('''1\n4\n''') == '0'\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 3\") == \"6\"\nassert solution(\"3 1 3\") == \"1\"\nassert solution(\"3 3 3\") == \"1\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 4 3 7 5\\n') == '11'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n') == '1'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"11\"\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 4 3 7 5''') == '11'\nassert solution('''5\n1 2 3 4 5''') == '11'\nassert solution('''5\n1 2 3 4 5''') == '10'\nassert solution('''5\n1 2 3 4 5''') == '1'"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 4 3 7 5\n''') == '11'\nassert solution('''\n3\n1 2 3\n''') == '4'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11'\nassert solution('6\\n1 2 3 4 5 6') == '13'\nassert solution('5\\n3 1 2 4 5') == '10'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '11'\nassert solution('2') == '1'\nassert solution('1') == '4'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 4 3 7 5') == '11'\nassert solution('10\\n1 2 3 4 5') == '15'\nassert solution('5\\n1 2 3 4 5') == '5'\nassert solution('1\\n1 2 3 4 5') == '1'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 4 3 7 5\n''') == '11'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '17'\nassert solution('''20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n''') == '22'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n1 4 3 7 5\n\"\"\") == \"\"\"\n11\n3\n1\n4\n2\n\"\"\"[:-1]\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '11'\nassert solution('10') == '12'"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1\\n10.245') == '10.25'\nassert solution('6 2\\n10.245') == '10.3'\nassert solution('3 100\\n9.2') == '9.3'\n\n\"\"\"\nimport math"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"10.25\"\nassert solution(\"6 2\") == \"10.3\"\nassert solution(\"3 100\") == \"9.2\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 100\") == \"9.2\"\nassert solution(\"6 1\") == \"10.25\""
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '10.3'\n\n'''\n\nn, t = map(int, input().split())\n\ngrade = list(input().split('.'))"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"10.30\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\nassert solution('4 3') == '9.5'\nassert solution('7 1') == '10.0'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"6 1\\n10.245\") == \"10.25\"\n\nassert solution(\n    \"6 2\\n10.245\") == \"10.3\"\n\nassert solution(\n    \"3 100\\n9.2\") == \"9.2\"\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1\\n10.245') == '10.25'\nassert solution('6 2\\n10.245') == '10.3'\nassert solution('3 100\\n9.2') == '9.2'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 0 0 0\n''') == 'Impossible'\nassert solution('''\n1 1 1 1\n''') == '0110'\nassert solution('''\n1 2 2 1\n''') == '0110'\nassert solution('''\n1 1 1 1\n''') == '0110'\nassert solution('''\n1 1 1 1\n''') == '0110'\n''')\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '0110'\nassert solution('1 2 2 1') == '0111'\nassert solution('2 2 2 1') == '0011'\nassert solution('1 1 1 1') == '00011'\nassert solution('0 1 1 1') == '1111'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == \"Impossible\"\nassert solution('1 2 2 1') == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4\") == \"0110\"\nassert solution(\"1 2 2 1\") == \"0110\"\n\nassert solution(\"1 1 1 1\") == \"Impossible\"\n\nassert solution(\"0 0 0 0\") == \"Impossible\"\nassert solution(\"0 0 0 1\") == \"Impossible\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"0\", \"1\", \"1\", \"1\", \"1\"]) == \"0110\"\nassert solution([\"1\", \"1\", \"0\", \"0\", \"1\"]) == \"0111\"\nassert solution([\"1\", \"0\", \"1\", \"1\", \"0\"]) == \"0110\"\nassert solution([\"1\", \"1\", \"0\", \"0\", \"1\"]) == \"0111\"\nassert solution([\"1\", \"0\", \"1\", \"0\", \"1\"]) == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == \"Impossible\"\nassert solution('1 2 2 1') == \"0110\"\nassert solution('2 2 2 1') == \"1011\"\nassert solution('2 2 2 1') == \"1101\"\nassert solution('2 2 1 1') == \"0110\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '0110'\nassert solution('1 2 2 1') == '0110'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '0110'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0110\"\nassert solution() == \"Impossible\"\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == \"0110\"\nassert solution('1 2 2 1') == \"0111\"\nassert solution('2 1 1 0') == \"100\"\nassert solution('1 2 3 4') == \"Impossible\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '3'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"6\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '3'\nassert solution('10') == '2'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10\n*.P*.P*''') == '3'\nassert solution('''10\n.**PP.*P.*''') == '2'\nassert solution('''30\nP..*P**PPP*P..''') == '17'\nassert solution('''100\n*.P*.P*.P*.P*.P*''') == '2'\nassert solution('''10\n*.*PP.*P*P*P*''') == '10'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n.**PP.*P.*\n''') == '3'\nassert solution('''\n7\n*..P*P*\n''') == '3'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n*..P*P*\n\n''') == '3'\nassert solution('''\n10\n.**PP.*P.*\n\n''') == '2'"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6\n.**P*P*\n\"\"\") == \"3\"\nassert solution(\"\"\"\n6\n*..P*P*\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"2\"\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '3'\nassert solution('10') == '2'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '4'\nassert solution('8') == '8'\nassert solution('16') == '16'\n\n\nsolution(5)\n\nsolution(1)\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n''') == '4'\nassert solution('''3\n4\n''') == '8'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n\") == \"4\"\nassert solution(\"2\\n\") == \"8\"\nassert solution(\"3\\n\") == \"16\"\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '16'"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'\nassert solution('''\n5\n4\n2\n3\n1\n''') == '4'\nassert solution('''\n4\n2\n1\n3\n''') == '8'\nassert solution('''\n5\n4\n2\n3\n''') == '16'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '4'\nassert solution('3') == '8'\nassert solution('2') == '16'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '16'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 7 4 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\nprint(solution(input()))"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1 2\"\nassert solution(\"4 5 6 7 8\") == \"1 1\"\nassert solution(\"10 10 5 5 2\") == \"1 1\"\nassert solution(\"2 1 3 3 3 4 5 2\") == \"2 2\"\nassert solution(\"3 2 3 4 5\") == \"1 1\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1 3 9 7'\n\n\n\"\"\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4, 4, 4, 4]) == '4 4 4 4'\nassert solution([100, 100, 100, 100]) == '0 0 100 100'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1 1 1\\n\") == \"0 0 0 0\"\nassert solution(\"8 9 8 9 1\\n\") == \"0 0 8 8\"\nassert solution(\"1 10 10 10 10\\n\") == \"0 0 10 10\"\nassert solution(\"10 10 20 20 10\\n\") == \"0 0 10 10\"\nassert solution(\"100 100 100 100 100\\n\") == \"0 0 100 100\"\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4 4 4 4') == '2 2 4 4'\nassert solution('3 3 3 3') == '1 1 3 3'\nassert solution('2 5 5 5') == '2 5 4 5'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 6 1 1 2') == '1 1 2'\nassert solution('3 4 7 4') == '1 2'\nassert solution('4 5 3 5') == '2 3'\nassert solution('4 5 4 2') == '2 4'\nassert solution('10 20 20 10') == '10 20 20'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9 9 5 5 2 1\") == \"1 3 9 7\"\nassert solution(\"100 100 52 50 46 56\") == \"17 8 86 92\"\nassert solution(\"1000000 1000000 50500 1000000\") == \"50500 1000000\""
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n'''\n\nimport math\nfrom typing import List\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\nassert solution() == \"Yes\"\n\"\"\""
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('TTTTFFF') == 'No'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input(\"No\\n\")) == 'No'"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('TTFFTFFF') == 'No'\n\"\"\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"TTTTTFFF\") == \"No\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('FTFFTFFF') == 'Yes'\nassert solution('TTTTTTTFF') == 'No'\nassert solution('FTFFTFTFF') == 'Yes'\n\"\"\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('FTFFTFFF') == 'Yes', 'Test 1 failed'\nassert solution('FHTFFTF') == 'No', 'Test 2 failed'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"TTTTTFFF\") == \"No\"\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n''') == '2'\nassert solution('''2\n''') == '3'\nassert solution('''3\n''') == '5'\nassert solution('''4\n''') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n''') == '5'\nassert solution('''\n4\n''') == '6'\nassert solution('''\n1\n''') == '2'\nassert solution('''\n2\n''') == '3'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n''') == '2'\nassert solution('''2\n''') == '3'\nassert solution('''3\n''') == '5'\nassert solution('''4\n''') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 2\nassert solution('2') == 3\nassert solution('3') == 5\nassert solution('4') == 6\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"3\\n1 2 3\\n3\\n\") == \"1.3333333333\"\nassert solution(\"1\\n2\\n3\\n\") == \"0.0\"\nassert solution(\"3\\n4\\n5\\n\") == \"0.0\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2 3\\n3\\n\") == \"1.\"\nassert solution(\"4\\n2 4 3 3\\n3\\n\") == \"2.\"\nassert solution(\"10\\n1 10 10 10 10 10 10 10 10\\n3\\n\") == \"3.\"\nassert solution(\"3\\n1 2 3\\n3\\n\") == \"1.\"\nassert solution(\"10\\n1 1 2 3 4 5 6 7 8 9 10\\n10\\n\") == \"7.\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1 2 3\\n3') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1'\nassert solution('3\\n1 2 3\\n3\\n2') == '0.5'\nassert solution('3\\n1 2 3\\n3\\n2\\n') == '0.0'\nassert solution('3\\n1 2 3\\n3\\n2\\n3') == '0.3333333333'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('4\\n2 4 5 6\\n8\\n') == '0.4025'\nassert solution('1\\n1\\n') == '0.5'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1.3333333333'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3\n3\n\n''') == \"1.3333333333\"\nassert solution('''\n4\n2 3 1 1\n4\n\n''') == \"1.25\"\nassert solution('''\n3\n2 1 3\n3\n\n''') == \"2.3333333333\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1.3333333333\"\nassert solution(\"3\") == \"1.3333333333\"\nassert solution(\"5\") == \"1.3333333333\"\nassert solution(\"100\") == \"1.3333333333\""
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1.3333333333\"\nassert solution(\"1\") == \"1.\"\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n3\n\"\"\") == \"1.3333333333\"\nassert solution(\"\"\"\n3\n3 1 2\n3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n5 1 2\n3\n\"\"\") == \"1.5\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '6 6 6'\nassert solution('2 2 1') == '1'\nassert solution('4 5 3') == '3 3'\nassert solution('4 1 2 3') == '1 1 1 1'\nassert solution('5 5 5') == '5 5'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1 2''') == '13 7'\nassert solution('''5 2 1''') == '605 986'\nassert solution('''5 1 1''') == '12'\nassert solution('''5 1 3''') == '10'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 1 2\n1 2\n\"\"\") == \"13 7\"\nassert solution(\"\"\"\n2 100000 569\n605 986\n\"\"\") == \"986 605\"\nassert solution(\"\"\"\n7 1 2\n5 6 7\n\"\"\") == \"13 7\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 2') == '13 7'\nassert solution('4 4 2') == '17 8'\nassert solution('3 1 7') == '7 7'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 1 2\n9 7 11 15 5\n''') == '13 7'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5 1\n9 7 11 15 5''') == '13 7'\nassert solution('''5 1 1\n9 7 11 15 5''') == '12 9'\nassert solution('''3 5 1\n9 7 11 15 5''') == '12 7'\nassert solution('''5 1 1\n11 11 11 11 11''') == '11 11'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1 2\\n9 7 11 15 5\") == \"13 7\"\nassert solution(\"2 100000 569\\n605 986\") == \"986 605\"\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"13 7\""
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 1 2\n    9 7 11 15 5''') == '13 7'\nassert solution('''10\n    12 10 6''') == '10 12'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1 2\n9 7 11 15 5\n\nOutput\n13 7\n''') == '986 605'\nprint(solution('''\n5 1 2\n9 7 11 15 5\n\nOutput\n986 605\n'''))"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3 2 4 4\n2 5 4 10\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 3 3 3 5\n2 3 5 4 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5 5 1 2 3\n2 3 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5 5 1 1 3\n2 3 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3 3 3 3 5\n2 3 5 4 2\n\"\"\") == \"0\""
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 2 4 4\n2 5 4 10\n''') == '1'\nassert solution('''\n3 3 3 3 5\n2 3 5 4 2\n''') == '0'\nassert solution('''\n5 5 1 2 3\n2 3 5 4 2\n''') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 2 3 5\") == \"1\"\nassert solution(\"3 4 1 1 3\") == \"0\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1 3\") == \"0\"\nassert solution(\"3 2 2 2\") == \"0\"\nassert solution(\"5 5 3 3\") == \"0\"\nassert solution(\"4 1 2 3\") == \"1\"\n\nstdin = \"\"\"\n3 3 2 4 4\n2 5 4 10\n\n\"\"\"\n\nprint(solution(stdin))\n\n\"\"\"\n2 2 3 2\n2 4 2\n\n\"\"\"\n\nstdin = \"\"\"\n3 3 3 3 5\n2 3 5 4 2\n\n\"\"\"\n\nprint(solution(stdin))\n\n\"\"\"\n-1\n\"\"\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '0'\nassert solution('5 5 1 2 3') == '0'\n\nstdin = '''\n3 3 2 4 4\n2 5 4 10\n'''\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 2 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '-1'\nassert solution('3 4 1 1 3') == '3'"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 2 4 4\n2 5 4 10\n''') == '1'\nassert solution('''3 3 3 3 5\n2 3 5 4 2\n''') == '0'\nassert solution('''5 5 1 2 3\n2 3 5 4 2\n''') == '-1'\nassert solution('''3 4 1 1 3\n2 3 5 4 2\n''') == '3'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4 1 2 3\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"3\"\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == '0'"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 2 4 4') == '1'\nassert solution('3 3 3 3 5') == '0'\nassert solution('5 5 1 2 3') == '-1'\nassert solution('3 4 1 1 3') == '3'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nR3 R3\nG3 G3\nY3 Y3\nW3 W3\nB3 B3\n''') == '0'\nassert solution('''\n4\nB1 Y1 W1 G1 R1\n''') == '4'\nassert solution('''\n5\nR3 R3\nG3 G3\nY3 Y3\nW3 W3\nB3 B3\n''') == '2'\nassert solution('''\n5\nB4 G4 R4 R3\n''') == '1'\nassert solution('''\n5\nR3 Y3 W1 G1 R1\n''') == '2'\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\n\n'''\n\nn = int(input())\ncards = []\nfor i in range(n):\n    color, value = input().split()\n    cards.append((color, value))"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nB1 G1 Y1''') == '1'\nassert solution('''2\nG1 G1''') == '0'\nassert solution('''5\nB1 R1 R1 G1 Y1 G1''') == '1'\nassert solution('''4\nB1 G1 R1 R1''') == '2'\nassert solution('''1\nY1''') == '0'\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\nG4 R4 R3 B3''') == '2'\nassert solution('''5\nB1 Y1 W1 G1 R1''') == '4'''"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\nG3 G3\n''') == '0'\n\nassert solution('''4\nG4 R4 R3 B3\n''') == '2'\n\nassert solution('''5\nB1 Y1 W1 G1 R1\n''') == '4'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '4'"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution(\"5\") == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 6'\nassert solution('''4\n3 3 4 3\n4 7 6 5\n''') == '2 6'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5') == '2 6'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24') == '3 11'"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == \"2 3\"\nassert solution('2') == \"1 1\"\nassert solution('3') == \"1 1\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == '2 6'\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == '3 11'\nassert solution('''\n2\n1 1\n100 100\n''') == '1 1'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == '2 6'\n\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == '3 11'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n3 3 4 3\n4 7 6 5\n''') == '2 6'\nassert solution('''\n5\n10 30 5 6 24\n10 41 7 8 24\n''') == '3 11'\n'''\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"4\") == \"2 6\"\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 3 4 3\\n4 7 6 5\\n') == '2 6'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24\\n') == '3 11'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n3 3 4 3\n4 7 6 5\n''') == '2 6'\nassert solution('''5\n10 30 5 6 24\n10 41 7 8 24\n''') == '3 11'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n3 3 4 3\n4 7 6 5\n\"\"\") == \"2 6\"\nassert solution(\"\"\"\n5\n10 30 5 6 24\n10 41 7 8 24\n\"\"\") == \"3 11\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 4\\n\") == \"3B\"\nassert solution(\"2 2\\n\") == \"Impossible\"\nassert solution(\"3 2\\n\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 4\\n\") == \"3B\"\nassert solution(\"2 2\\n\") == \"Impossible\"\nassert solution(\"3 2\\n\") == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '3B'\nassert solution('2 2') == 'Impossible'\nassert solution('3 2') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 4\n''') == '3B'\nassert solution('''\n2 2\n''') == 'Impossible'\nassert solution('''\n3 2\n''') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 4\") == \"3B\"\nassert solution(\"2 2\") == \"Impossible\"\nassert solution(\"3 2\") == \"1A1B\"\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 4\\n') == '3B'\nassert solution('2 2\\n') == 'Impossible'\nassert solution('3 2\\n') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n\n''') == \"Impossible\"\nassert solution('''\n1 4\n\n''') == \"3B\"\nassert solution('''\n2 2\n\n''') == \"1A1B\""
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 4\n''') == '3B'\nassert solution('''\n2 2\n''') == 'Impossible'\nassert solution('''\n3 2\n''') == '1A1B'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 4\\n') == '3B'\nassert solution('2 2\\n') == 'Impossible'\nassert solution('3 2\\n') == '1A1B'"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4\\n') == '3B'\nassert solution('2 2\\n') == 'Impossible'\nassert solution('3 2\\n') == '1A1B'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\""
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\nassert solution(\"10 6\") == \"55\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n''') == '3'\nassert solution('''\n5 4\n''') == '25'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n3\n1''') == '3'\nassert solution('''5 4\n1\n2''') == '4'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\n\n'''\n\nimport math"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"25\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 4\") == \"25\"\nassert solution(\"100000 50000\") == \"466742068747470733\"\nassert solution(\"10000 1\") == \"1\"\nassert solution(\"10000 2\") == \"1\"\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\nassert solution('4 2') == '4'\nassert solution('6 7') == '9'\nassert solution('4 1') == '0'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\\n5 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\"\nassert solution(\"6 4\\n6 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"2\"\nassert solution(\"6 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"0\"\nassert solution(\"6 4\\n6 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\"\nassert solution(\"6 4\\n6 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"2\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution('4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n') == '1'"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2''') == '1'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\n4 1 2 3\n0 2 -3 1\n1 2\n2 3\n3 4\n4 2''') == '1'\nassert solution('''10 10\n10 1 2 3 4 5 6 7 8 9 10\n1 1 2\n1 1\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 5') == '6'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\"\nassert solution(\"6 6\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n5 5\\n5 5\\n\") == \"0\"\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('4') == '1'\nassert solution('4') == '1'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\\n\") == \"1\""
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n.o\n.o\no.T\n''') == '2'\nassert solution('''\n3 3\n.o\no.T\no.T\n''') == '2'\nassert solution('''\n5 5\nS.S.o.T\no.o\nS.o\no.T\no.S\nS.o\n''') == '1'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n.o.\n.o.''') == '-1'\n\n'''"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\n\"\"\""
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n.o.\\no.T\") == \"2\"\nassert solution(\"10 10\\n.o.\\no.T\") == \"0\"\n\n\"\"\""
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nS.o\\no.T\\n\") == \"2\"\nassert solution(\"4 5\\nS.o.\\no.T.\\n\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n.o\n.o.\no.T''') == '2'\nassert solution('''2 2\n.o\n.o''') == '-1'\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"8 5\") == \"2\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n.o.\\n.o.T\") == \"2\""
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\nassert solution('1000000000 999999') == '99999999999999'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n\n\"\"\"\nfrom math import gcd"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"199 200\") == \"200\""
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''3 2''') == '3'\nassert solution('''199 200''') == '200'\nassert solution('''123''') == '123'\nassert solution('''1011''') == '1011'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1''') == '1'\nassert solution('''3 2''') == '3'\nassert solution('''199 200''') == '200'\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().strip()"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n5 2\n3 3''') == 'Aoki'\nassert solution('''2\n5 2\n1 3''') == 'Takahashi'\nassert solution('''2\n5 2\n5 2''') == 'Takahashi'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n5 2\n3 3\n''') == 'Aoki'\nassert solution('''10\n9 9\n''') == 'Aoki'\nassert solution('''10\n10 10\n''') == 'Takahashi'\nassert solution('''2\n3 3\n''') == 'Takahashi'\nassert solution('''3\n10 10\n''') == 'Takahashi'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Aoki\"\nassert solution(\"4\") == \"Aoki\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n5 3\\n\") == \"Aoki\"\nassert solution(\"2 2\\n2 2\\n\") == \"Takahashi\"\nassert solution(\"2 2\\n1 1\\n\") == \"Takahashi\"\nassert solution(\"2 2\\n1 1\\n\") == \"Takahashi\"\nassert solution(\"2 2\\n1 1\\n\") == \"Takahashi\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Aoki'\nassert solution('3') == 'Aoki'\nassert solution('4') == 'Takahashi'\nassert solution('5') == 'Takahashi'\nassert solution('6') == 'Takahashi'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Takahashi', '1'\nassert solution('2') == 'Aoki', '2'\nassert solution('3') == 'Takahashi', '3'\nassert solution('4') == 'Takahashi', '4'\nassert solution('5') == 'Aoki', '5'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n3 3\") == \"Aoki\"\nassert solution(\"2\\n5 2\\n3 3\") == \"Takahashi\"\n\"\"\"\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Takahashi'\nassert solution('2') == 'Aoki'\nassert solution('3') == 'Takahashi'\nassert solution('4') == 'Aoki'\nassert solution('5') == 'Takahashi'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"4\\n3 3\\n1 2\") == \"Takahashi\""
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n5 2\\n3 3') == 'Aoki'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2''') == '0'\nassert solution('''3 3''') == '8'\nassert solution('''5 5''') == '8'\nassert solution('''10 10''') == '30'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 2\n''') == '0'\nassert solution('''\n3 3\n''') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\nassert solution(\"4 5\") == \"2\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n''') == '0'\nassert solution('''\n3 3\n''') == '8'\n\n\"\"\"\n\n\"\"\"\nPossible Solution\nn,m = map(int, stdin.readline().split())\n\nans = 0\nfor i in range(1,n):\n    for j in range(1,m):\n        ans = max(ans, abs(i-1) + abs(j-1))\n\nprint(ans)\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solve(self, n, m):\n        if not n or not m:\n            return 0\n        dp = [[0] * m for _ in range(n)]\n        dp[0][0] = 1\n        for i in range(1, n):\n            dp[i][0] = 1\n        for i in range(1, m):\n            dp[0][i] = 1\n        for i in range(1, n):\n            for j in range(1, m):\n                if dp[i - 1][j - 1]:\n                    dp[i][j] = 1\n                else:\n                    dp[i][j] = dp[i - 1][j - 1] + dp[i][j - 1]\n        return dp[-1][-1]"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"8\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n''') == '0'\nassert solution('''3 3\n''') == '8'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 3\") == \"0\""
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '-1'"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2\\n1 2 3 4\\n1 5 3 4\\n') == '1'\nassert solution('2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n') == '0'\nassert solution('2 4\\n1 2 3 4\\n1 5 6 4\\n') == '-1'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 3\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '-1'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '-1'\n\nimport os\nimport sys\n\nprint(solution(os.environ['OUTPUT_PATH']));\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s1) == \"1\"\nassert solution(s2) == \"0\"\nassert solution(s3) == \"0\""
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"0\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"-1\""
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\\n1 2 3 4\\n1 5 3 4\\n\") == \"1\"\nassert solution(\"2 3\\n1 2 4 5\\n1 2 1 3 2 3\\n\") == \"0\"\nassert solution(\"2 4\\n1 2 3 4\\n1 5 3 4\\n\") == \"-1\"\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 2 3 4\n1 5 3 4\n''') == '1'\nassert solution('''2 3\n1 2 4 5\n1 2 1 3 2 3\n''') == '0'\nassert solution('''2 3\n1 2 4 5\n1 2 1 3 2 3\n''') == '-1'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"24\"\n    \"17:30\"\n) == \"17:30\"\n\nassert solution(\n    \"12\"\n    \"17:30\"\n) == \"07:30\"\n\nassert solution(\n    \"24\"\n    \"99:99\"\n) == \"09:09\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '17:30'\nassert solution(input()) == '07:30'\nassert solution(input()) == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == '17:00'\nassert solution('24') == '17:00'\nassert solution('99') == '09:09'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == '12:00'\nassert solution('24') == '00:00'\nassert solution('99') == '09:09'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"24\") == \"09:09\"\nassert solution(\"12\") == \"17:30\"\nassert solution(\"24\") == \"07:09\""
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '12:00'\nassert solution('24') == '12:00'\nassert solution('17:30') == '17:30'\nassert solution('99:99') == '09:09'"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"24\") == \"99:99\"\nassert solution(\"12\") == \"17:30\"\nassert solution(\"24\") == \"09:09\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == '12:00'\nassert solution('24') == '12:00'\nassert solution('17:30') == '17:30'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"00:00\"\nassert solution(\"24\") == \"00:00\"\nassert solution(\"17:30\") == \"00:30\"\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('24') == '07:09'\nassert solution('12') == '17:30'\nassert solution('24') == '09:09'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('3 3') == '6'\nassert solution('5 5') == '3'\nassert solution('1 100') == '2'\nassert solution('1 100') == '1'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '4'\nassert solution('1') == '1'"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"2 2\") == \"2\""
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5\\n1 2 2\\n1 3 3\\n2 1 1\\n2 3 3\\n3 1 2') == '6'\nassert solution('5 5\\n1 2 2\\n1 3 3\\n2 1 1\\n2 3 3\\n3 1 2') == '6'\nassert solution('5 5\\n1 2 2\\n1 3 3\\n2 1 1\\n2 3 3\\n3 1 2') == '6'\nassert solution('5 5\\n1 2 2\\n1 3 3\\n2 1 1\\n2 3 3\\n3 1 2') == '6'\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3\n2\n1 2 1\n2 3 1\n3 1 1\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n2 1 2\\n1 2 1\\n2 3 1\\n3 1 1\\n\") == \"6\"\nassert solution(\"5 3\\n1 2 1\\n2 3 1\\n3 1 1\\n4 5 1\\n\") == \"6\"\nassert solution(\"5 3\\n1 2 1\\n2 3 1\\n3 1 1\\n4 5 1\\n\") == \"7\"\nassert solution(\"5 3\\n1 2 1\\n2 3 1\\n3 1 1\\n4 5 1\\n\") == \"4\"\nassert solution(\"5 3\\n1 2 1\\n2 3 1\\n3 1 1\\n4 5 1\\n\") == \"3\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"2\\n\"\n    \"1 2 1\\n\"\n    \"2 3 1\\n\"\n    \"3 1 1\\n\"\n) == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1\n1\n2 1\n2 3 1\n3 1 1\"\"\") == \"6\"\nassert solution(\"\"\"2\n3\n1 2 1\n2 3 1\n3 1 1\"\"\") == \"6\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n2\\n1 2 1\\n2 3 1\\n3 1 1') == '6'\nassert solution('6 5\\n0 0 0 0 0 0\\n1 0 0 1 0 1\\n1 1 0 0 1 0\\n1 1 1 0 0 1\\n0 0 0 1 0 1\\n1 0 0 1 0 1') == '7'\nassert solution('5 5\\n0 0 1 1 0\\n1 0 1 1 0\\n0 0 1 1 0\\n0 1 1 1 0\\n1 1 1 1 0') == '7'"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == '6'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 2 2 2 1 1\") == \"5\\n2 1\\n2 5\\n3 3\\n3 6\\n5 6\\n\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n0 0 3 0 1 1\n''') == '-1'\nassert solution('''\n1\n0\n''') == '0'\nprint(solution('''\n6\n3 2 2 2 1 1\n'''))"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n0\n\n''') == '0'\nassert solution('''\n2\n3 2\n\n''') == '-1'\nassert solution('''\n6\n2 0 3 0 1 1\n\n''') == '5'\nassert solution('''\n1\n0\n\n''') == '0'"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2 0 3 0 1 1') == '5\\n2 1'\nassert solution('6\\n2 0 3 0 1 1') == '-1'\nassert solution('4\\n3 0 3 0 1 1') == '0'"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\n2 0 3 0 1 1\n''') == '-1'\nassert solution('''\n6\n3 2 2 2 1 1\n''') == '5 6'\nassert solution('''\n1\n0\n''') == '0'\n\n\"\"\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n2 0 3 0 1 1\n\nOutput\n5\n2 1\n2 5\n3 3\n3 6\n5 6\n\nInput\n6\n0\n\nOutput\n0''') == '-1'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n2 0 3 0 1 1\n''') == '5'\nassert solution('''6\n1 1 1 1 1\n''') == '-1'\nassert solution('''6\n0\n''') == '0'\nassert solution('''6\n1 1 1 1 1\n''') == '1'\nassert solution('''6\n2 2 2 2 2 2\n''') == '2'\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"./inputs/input.test\") == \"0\"\nassert solution(\"./inputs/input.sample\") == \"3 2 1\"\nassert solution(\"./inputs/input.real\") == \"6 3 2 2 1 1\""
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n3 2 2 2 1 1\n''') == '-1'\nassert solution('''1\n0\n''') == '0'\nassert solution('''6\n2 0 3 0 1 1\n''') == '5'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n2 8\n12 20\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n3 10\n10 20 30\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n4 100\n100 200 300 400 500 600 700 800 900 1000 1010\n\"\"\"\n) == \"10\"\n\nassert solution(\n    \"\"\"\n1 2\n4 5\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n10\n10 20 30 40 50 60 70 80 90 100 1010\n\"\"\"\n) == \"4\""
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == '1'\nassert solution(\"2 8\") == '2'\nassert solution(\"3 10\") == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 8') == '2'\nassert solution('3 10') == '1'\nassert solution('2 20') == '0'\nassert solution('3 0') == '2'\nassert solution('0') == '2'"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 8\n12 20''') == \"2\"\nassert solution('''3 10\n10 20 30''') == \"1\"\n\n\"\"\"\nfrom itertools import product"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10\") == \"1\"\nassert solution(\"2 8\") == \"2\"\nassert solution(\"10 20 30\") == \"1\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n12 20\") == \"2\"\nassert solution(\"3 10\\n10 20 30\") == \"1\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3 10\n10 20 30\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n2 8\n12 20\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 8\n12 20''') == '2'\nassert solution('''3 10\n10 20 30''') == '1'\nassert solution('''3 10\n10 20 30\n\n''') == '0'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 8\n12 20''') == '2'\nassert solution('''3 10\n10 20 30''') == '1'\nassert solution('''5 10\n3 9 5 8 6 2 3\n1 2 2 2 2''') == '1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 8\") == \"2\"\nassert solution(\"3 10\") == \"1\"\nassert solution(\"4 6\") == \"2\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('0 0 0 1000') == '11.547005383792516398'"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('3 2') == '1.1838068897381495257'\nassert solution('-1 -1') == '0.0'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 5 5\") == \"3.729935587093555327\"\nassert solution(\"3 2\") == \"1.4142135623730951\"\nassert solution(\"-1 -1\") == \"1.4142135623730951\"\nassert solution(\"-1 0\") == \"1.4142135623730951\""
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == '3.729935587093555327'\nassert solution('''\n0 0 0 1000\n100 100\n-50 0\n50 0\n''') == '11.547005383792516398'\nprint('all test cases passed')\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"0 0 5 5\\n\"\n    \"3 2\\n\"\n    \"-1 -1\\n\"\n    \"-1 0\\n\"\n) == \"3.729935587093555327\"\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('3 2') == '1.4342944819032518284'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3.729935587093555327'\nassert solution(stdin='''0 0 5 5\n3 2\n-1 -1\n-1 0\n\n''') == '11.547005383792516398'\nassert solution(stdin='''0 0 0 1000\n100 1000\n-50 0\n50 0\n\n''') == '11.547005383792516398'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3.729935587093555327'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == '3.729935587093555327'\nassert solution('''\n0 0 0 1000\n100 1000\n-50 0\n50 0\n''') == '11.547005383792516398'\nassert solution('''\n0 0 0 1000\n100 1000\n-50 0\n50 0\n''') == '11.547005383792516398'\nassert solution('''\n0 0 0 1000\n100 1000\n-50 0\n50 0\n''') == '11.547005383792516398'\nassert solution('''\n0 0 0 1000\n100 1000\n-50 0\n50 0\n''') == '11.547005383792516398'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n0 0 5 5\n3 2\n-1 -1\n-1 0\n''') == '3.729935587093555327'\nassert solution('''\n0 0 0 1000\n100 100\n-50 0\n50 0\n''') == '11.547005383792516398'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1\n10\n2\n1 2\n''') == 'First'\nassert solution('''\n3\n1\n10\n2\n1 2\n''') == 'Second'\nassert solution('''\n2\n1\n10\n''') == 'Second'\n'''\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n\"\"\") == \"\"\"Second\nFirst\nFirst\"\"\"\nassert solution(\"\"\"\n2\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n\"\"\") == \"\"\"First\nSecond\"\"\"\nassert solution(\"\"\"\n2\n3\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n\"\"\") == \"\"\"Second\nFirst\"\"\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'First'\nassert solution('10') == 'Second'\nassert solution('2') == 'Second'\nassert solution('1') == 'First'\nassert solution('10') == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Second'\nassert solution('2') == 'Second'\nassert solution('3') == 'First'\nassert solution('4') == 'Second'\nassert solution('5') == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'First'\nassert solution('2') == 'Second'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162''') == 'Second\\nFirst\\nSecond'\nassert solution('''2\n1\n10\n1 3\n1 5\n1 7\n1 10\n1 13\n1 17\n1 20\n1 25\n1 35\n1 50\n1 80\n1 100\n1 300\n1 500\n1 1000\n1 2000\n1 5000\n1 10000\n1 100000\n1 2000000\n1 5000000\n1 10000000''') == 'Second\\nFirst\\nSecond'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"Second\"\nassert solution(\"1\") == \"First\"\nassert solution(\"1\\n1\") == \"Second\"\nassert solution(\"2\") == \"Second\"\nassert solution(\"1\\n2\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Second'\nassert solution('3') == 'Second'\n\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Second\"\nassert solution(\"2\") == \"Second\"\nassert solution(\"3\") == \"First\"\nassert solution(\"4\") == \"Second\"\nassert solution(\"5\") == \"Second\"\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"First\"\nassert solution(\"1\") == \"Second\"\nassert solution(\"10\") == \"Second\"\nassert solution(\"2\") == \"First\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 2') == '1'\nassert solution('5 3 2') == '1'\nassert solution('6 3 2') == '1'\nassert solution('1 4 2') == '1'\nassert solution('4 4 2') == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution(\"5 3 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 2\") == \"1\"\nassert solution(\"5 3 2\") == \"1\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"4 3 1 5 2\") == \"1\""
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''5 3 2\n4 3 1 5 2''') == '1'\n\nassert solution(\n'''5 3 2\n4 3 1 5 2\n''') == '2'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 2\n4 3 1 5 2\n''') == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"15 5 1 4\") == \"0\"\nassert solution(\"10 5 3 3\") == \"0\"\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 4\\n3 2 1') == '2'\nassert solution('2\\n3 4\\n3 2 1') == '3'\nassert solution('2\\n4 5\\n2 1 3') == '2'\nassert solution('4\\n3 4\\n3 2 1') == '1'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"5 5 5 5 5\") == \"1\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\""
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\nassert solution(\"6 6\") == \"67\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1 1\n    \"\"\") == \"1\"\nassert solution(\"\"\"3 2\n    \"\"\") == \"24\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1\n''') == '1'\nassert solution('''3 2\n''') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 2\n''') == '24'\nassert solution('''\n7 8\n''') == '1296'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == \"24\"\nassert solution('3 2') == \"49\"\nassert solution('4 3') == \"60\"\nassert solution('5 4') == \"126\"\nassert solution('6 5') == \"252\"\n"
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '24'\nprint(solution(input()))\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3 4\n\n1\n5 2\n2 3\n5 4\n2 4\n3 4\n''') == '6'\n\nassert solution('''\n2\n7 3\n\n1\n2 5\n3 6\n4 7\n5 6\n6 7\n''') == '1196'\n\nassert solution('''\n3\n5 6\n\n2\n3 4\n4 5\n5 6\n\n6\n3 4\n4 5\n5 6\n''') == '64921457'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 2\n\n\"\"\") == \"6\", \"Should return 6\"\n\nassert solution(\"\"\"\n4 4\n\n\"\"\") == \"3\", \"Should return 3\"\n\nassert solution(\"\"\"\n31 8\n\n\"\"\") == \"64921457\", \"Should return 94075536\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\nassert solution(\"31 8\") == \"64921457\"\n\n\n\n\n\"\"\"\n\nimport sys\nimport math\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5\n4\n3\n1\n1\n1\n2\n3\n4\n4\n''') == '6'\n\nassert solution('''\n10 5\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n''') == '3'\n\nassert solution('''\n10 3\n10\n1\n2\n3\n5\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n''') == '5'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3') == '64921457'\nassert solution('31 8') == '6560466'\nassert solution('35 32') == '3532'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\nassert solution('31 8') == '64921457'\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\nassert solution('31 8') == '64921457'"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"31 8\") == \"64921457\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"7 3\") == \"1196\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2\") == \"##..#\\n#.##.\\n#.#.#\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 2\") == \"###X#\"\nassert solution(\"5 4 5\") == \"###X#X\"\nassert solution(\"10 5 3\") == \"X.###.X.X\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2\") == \"##.#\"\nassert solution(\"5 4 5\") == \"#X#X\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 2\") == \"#.X#\\nX.#.\\n#...\\n\"\nassert solution(\"5 4 5\") == \"#XXX\\nX#.#\\nX#..\\n...#\\n#.#.#\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 4 5\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 2\") == \"X#.\\n.X#\\nX#..\"\nassert solution(\"5 4 5\") == \"X#X\\nX#.\\nX#..\\n...#\\n.#.#\"\nassert solution(\"12 12 1\") == \"###\\n##.\\n##.\\n#..\\n###\\n\"\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 2') == '#.X#\\nX.#.\\n#...\\n'\nassert solution('5 4 5') == '#.X#\\nX#.\\nX##\\n...#\\n#.#\\n'\n\n\n---\n\n3 4 2"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"3 4 2\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 2') == '#.X#\\nX.#.\\n#...'\nassert solution('5 4 5') == '#X.X#\\nX#.X\\nX#..\\n...#\\n#.#X'"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 1, 1]) == \"1\"\nassert solution([5, 1, 1]) == \"3\"\nassert solution([18, 1, 1]) == \"4\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '3'\nassert solution('18') == '4'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 1\n''') == '1'\nassert solution('''\n5\n1 2 2 2\n''') == '3'\nassert solution('''\n18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '4'"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 2 2') == '3'\nassert solution('18\\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4') == '4'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1\n''') == '1'\nassert solution('''5\n1 2 2 2\n''') == '3'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n\n\"\"\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\") == \"1 2 3\"\nassert solution(\"5 3 2\") == \"-1\"\nassert solution(\"5 3 2\") == \"1 2 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 5 4 2\") == \"1 3 4 2\"\nassert solution(\"3 5 3\") == \"3\"\nassert solution(\"9 10 9\") == \"9 10 9\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"1 1 1\") == \"1\"\n\n\"\"\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 2') == '4 2 1 5 3'\nassert solution('5 3 3') == '5 3 3'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5,3,2,1]) == \"2 4 1 5 3\"\nassert solution([3,2,1,1,2,3,4,5,6]) == \"-1\"\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 2\n''') == '2 4 1 5 3'"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 2') == '2 4 1 5 3'\n\n\"\"\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'Yes'\nassert solution('7') == 'No'\nassert solution('9') == 'Yes'\n\n\"\"\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'Yes'\nassert solution('3 6 9 18 36 108') == 'Yes'\nassert solution('2') == 'No'\nassert solution('7 17') == 'No'\nassert solution('9') == 'Yes'\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n6 9 18 36 108\n''') == 'Yes'\nassert solution('''2\n7 17\n''') == 'No'\nassert solution('''9\n4 8 10 12 15 18 33 44 81\n''') == 'Yes'"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2 7 17\") == \"No\"\nassert solution(\"9 4 8 10 12 15 18 33 44 81\") == \"Yes\""
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6 9 18 36 108\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"9\") == \"No\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"6\", \"3\", \"6\", \"9\", \"18\", \"36\", \"108\"]) == \"Yes\"\nassert solution([\"2\", \"7\", \"17\"]) == \"No\"\nassert solution([\"9\", \"4\", \"8\", \"10\", \"12\", \"15\", \"18\", \"33\", \"44\", \"81\"]) == \"Yes\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3 6 9 18 36\n3 7\n''') == 'Yes'\nassert solution('''5\n4 8 10 12 15 18 33 44 81\n''') == 'No'\nassert solution('''5\n4 6 8 10 12 15\n''') == 'Yes'\n\nassert solution('''8\n2 5 3 4 6 8 10\n''') == 'Yes'\nassert solution('''7\n1 2 3 4 5 6\n''') == 'No'"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"4\\n2 5 6 7 8\\n\") == \"No\"\nassert solution(\"6\\n3 6 9 18 36 108\\n\") == \"Yes\"\nassert solution(\"9\\n4 8 10 12 15 18 33 44 81\\n\") == \"Yes\"\n\n\n'''\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"Yes\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6 9 18 36 108') == 'Yes'\nassert solution('2 7 17') == 'No'\nassert solution('9 4 8 10 12 15 18 33 44 81') == 'Yes'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"3\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 2') == '1'\nassert solution('1\\n1 1') == '1'\nassert solution('5\\n1 -3 -5 -2') == '5'\nassert solution('5\\n1 2 -4') == '4'"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"12\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '12'"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n1 2 -6 4 5 3''') == '12'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 -6 4 5\n''') == '12'\n\nassert solution('''\n4\n1 2 -3 4 5\n''') == '11'\n\nassert solution('''\n10\n1 2 -5 3 -6 4 5 6 7 8 9\n''') == '21'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '12'\nassert solution('1 2 -6 4 5 3') == '24'\nassert solution('8') == '0'\nassert solution('9') == '0'\nassert solution('100') == '0'\n\n<====================================================>\n[See \u201cInductive Automata\u201d, Chapter 9, for a detailed description]\n<===================================================>\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"12\""
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 5\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n1 1 3\\n\") == \"4\"\nassert solution(\"4 3\\n3 1 4 2\\n\") == \"5\"\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3') == '5'\nassert solution('4 2') == '4'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 1, 4, 2]) == 5\nassert solution([3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1, 4, 2, 3, 1,"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"5\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"5 3\") == \"5\"\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nWrite a function that sorts a given list of strings using the merge sort algorithm.\n\nThe function has two required arguments and one optional argument:\n\norder - a string of size 1.\n\nIt has to return a sorted list of strings.\n\nInput\n4\n\napple banana mango apple\n\nOutput\n[apple, mango, banana, apple]\n\nInput\n4\n\napple banana mango apple\n\nOutput\n[apple, apple, banana, mango]\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nGiven a list of n numbers. Sort the list in ascending order using the merge sort algorithm.\n\nThe time complexity of the merge sort algorithm is O(n log n).\n\nInput\n5\n\n3 4 7 5 2\n\nOutput\n[2, 3, 4, 5, 7]\n\nInput\n2\n\n1 2\n\nOutput\n[1, 2]\n\n-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\nGiven an array, rotate it by k places to the right (starting from the right)"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '5'\nassert solution('3 1 4 2') == '5'"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n3 1 4 2\n''') == '5'"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"5\"\nassert solution(\"5 3\") == \"5\""
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '5'\nassert solution('1 2 3 4') == '4'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3') == '0 0'\nassert solution('3\\n2 3 1') == '0 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 3 1\n''') == '1 0'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 3 1\n''') == '0 0'\nassert solution('''\n3\n3 2 1\n''') == '0 1'\nassert solution('''\n3\n3 2 1\n''') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 2, 1]) == '0 1'\nassert solution([3, 1, 2]) == '0 1'\nassert solution([3, 1, 2]) == '0 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0 0'\nassert solution('3') == '0 1'\nassert solution('3') == '2 1'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 2 3\"\n    ) == \"0 0\"\n\nassert solution(\n    \"3\\n\"\n    \"2 3 1\"\n    ) == \"0 1\"\n\nassert solution(\n    \"3\\n\"\n    \"3 2 1\"\n    ) == \"2 1\"\n\nassert solution(\n    \"3\\n\"\n    \"3 3 1\"\n    ) == \"2 1\""
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 2, 1]) == \"0 0\"\nassert solution([3, 1, 2]) == \"1 1\"\nassert solution([3, 2, 1]) == \"0 1\"\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n3 2 1\") == \"0 1\"\nassert solution(\"3\\n1 2 3\") == \"0 0\""
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 3\n''') == '0 0'\nassert solution('''3\n2 3 1\n''') == '0 1'\nassert solution('''3\n3 2 1\n''') == '2 1'"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 3\n        2 1\n        2 3\n        1 3\n        3 1\n        3 2\n        2 2''') == '0 1'\nassert solution('''2 3 1\n        3 1\n        3 2\n        1 3\n        2 3\n        2 2\n        2 1''') == '0 2'\nassert solution('''3 2 1\n        2 1\n        3 2\n        1 3\n        2 3\n        2 2\n        2 1''') == '1 2'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2 4\naa\nbb\n\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n3 3\naba\nbba\n\n\"\"\"\n) == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '8'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4') == '6'\nassert solution('3 3') == '8'"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 4\naa\nbb''') == '6'\nassert solution('''3 3\naba\nbba''') == '8'\nassert solution('''4 5\nabbb\nbaaa\n''') == '8'"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 4\naa\nbb\n''') == '6'\nassert solution('''\n3 3\naba\nbba\n''') == '8'\nassert solution('''\n4 5\nabbb\nbaaa\n''') == '8'\nassert solution('''\n4 5\naba\nbba\n''') == '8'"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"6\"\nassert solution(\"3 3\") == \"8\"\nassert solution(\"4 5\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '6'\nassert solution(input()) == '8'\nassert solution(input()) == '8'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\\naaaa\\nbbbb\") == \"6\"\nassert solution(\"3 3\\nabca\\ncabd\") == \"8\""
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 4\") == \"6\"\nassert solution(\"3 3\") == \"8\"\nassert solution(\"4 5\") == \"8\"\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4\\naa\\nbb\\n') == '6'\nassert solution('3 3\\naba\\nbba\\n') == '8'\nassert solution('4 5\\nabbb\\nbaaa\\n') == '8'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\\n0 0 0\\n0 0 1\\n0 1 0\\n1 0 0\\n0 1 1\\n1 0 1\\n1 1 0\\n1 1 1\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\""
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n0 1 1\n0 1 1\n0 1 1\n1 1 1\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n0 0 0\n0 0 1\n0 0 1\n0 0 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'YES'\nassert solution('0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n') == 'NO'"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 0') == 'YES'\nassert solution('0 0 1') == 'YES'\nassert solution('0 0 1') == 'YES'\nassert solution('0 0 1') == 'YES'\nassert solution('0 0 1') == 'NO'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\nassert solution(\"0 0 1\") == \"YES\"\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\""
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'NO'\nassert solution('4') == 'YES'\nassert solution('6') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'YES'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n4 5 6') == 'YES\\n1 1 2 2'\nassert solution('4\\n8 3 6 1') == 'YES\\n1 1 1 2 2 1 1 1'\nassert solution('5\\n20 25 17 53') == 'NO\\n'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'YES\\n2 2 1 1 1'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'YES'\nassert solution('5') == 'NO'"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"YES\", \"Basic test\"\nassert solution(\"4\\n2 3 6 7\") == \"YES\\n2 2 1 1\", \"Solutions should be equal\"\nassert solution(\"5\\n6 15 35 77 22\") == \"NO\\n2 1 2 1 1\", \"Solutions should be equal\"\nassert solution(\"5\\n6 10 15 1000 75\") == \"NO\", \"Your solution is too weak\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"YES\", \"3\"\nassert solution(\"4\") == \"YES\", \"4\"\nassert solution(\"5\") == \"NO\", \"5\""
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == 'YES'\nassert solution('5') == 'NO'\nassert solution('6') == 'YES'\nassert solution('7') == 'NO'\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n2 3 6 7\") == \"YES\\n2 2 1 1\"\nassert solution(\"4\\n6 15 35 77 22\") == \"YES\\n2 1 2 1 1 1\"\nassert solution(\"4\\n6 10 15 1000 75\") == \"NO\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 6 7') == 'YES'\nassert solution('5 6 15 35 77 22') == 'YES'\nassert solution('5 6 10 15 1000 75') == 'NO'\nassert solution('4 3 2 1') == 'YES'\nassert solution('4 3 4') == 'NO'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"100\") == \"40\"\nassert solution(\"410\") == \"5\"\nassert solution(\"600\") == \"0\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"40\""
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(\"8\\n5\\n10\") == \"1\"\nassert solution(\"1000\\n60\\n70\") == \"40\"\nassert solution(\"10\\n60\\n70\") == \"0\"\nassert solution(\"1000\\n60\\n70\") == \"0\""
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('100') == '40'\nassert solution('410') == '5'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"60\\n70\\n\") == \"5\"\nassert solution(\"410\\n55\\n70\\n\") == \"5\"\nassert solution(\"600\\n60\\n70\\n\") == \"0\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"40\"\nassert solution(sys.stdin.read()) == \"5\"\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n100\n60\n70\n''') == '40'\nassert solution('''\n400\n80\n60\n''') == '20'\nassert solution('''\n400\n90\n60\n''') == '10'\nassert solution('''\n10000\n99\n100\n''') == '0'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == \"0\"\nassert solution(\"10\") == \"0\"\nassert solution(\"100\") == \"0\"\nassert solution(\"10001\") == \"0\"\nassert solution(\"1000000\") == \"0\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()[:-1]\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '12', 'one'\nassert solution('5') == '1', 'two'\nassert solution('1') == '1', 'three'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n3 1 4 1 5 9 2 6 5 3 5 8\n\"\"\") == \"3 4\"\nassert solution(\"\"\"\n5\n1 1 1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == '3 4', solution('12')\nassert solution('5') == '1 2 3 5', solution('5')"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 2\n1 1\n1\n''') == '1'\n\nassert solution('''\n3\n2 1 4 1\n2 2 2\n2 3 2\n''') == '4'\n\nassert solution('''\n4\n2 1 4 1\n2 2 2\n2 2 3\n''') == '4'\n\nassert solution('''\n3\n1 1 1\n1 1 1\n1\n''') == '1'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\\\n4\n1 1 1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\\\n5\n1 1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\\\n6\n1 1 1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\\\n7\n1 1 1 1 1 1 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\\\n8\n1 1 1 1 1 1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''12\n3 1 4 1 5 9 2 6 5 3 5 8''') == '12'\nassert solution('''5\n1 1 1 1 1''') == '1'\nassert solution('''15\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1''') == '15'\nassert solution('''12\n1 1 2 2 3 3 2 2 4 4 5 5 3 3''') == '12'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n5\") == \"1 2 3 4\"\nassert solution(\"12\\n6\") == \"1 2 3 4 5 6 7 8 9\""
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4 1 5 9 2 6 5 3 5 8\") == \"3 4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1 4 1 5 9 2 6 5 3 5 8\n''') == '3 4'\nassert solution('''\n4\n1 1 1 1 1\n''') == '1 1'\nassert solution('''\n5\n1 1 1 1 1\n''') == '1 1'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 1\n1 3 3\n''') == '6'\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 1\n1 3 3\n\"\"\") == \"6\"\nassert solution(\"\"\"3 2\n1 2 3\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '12'\nassert solution('5 1') == '5'\nassert solution('6 1') == '6'\nassert solution('9 1') == '9'\nassert solution('4 3') == '7'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n1 3 3\n''') == '6'\nassert solution('''\n4 1\n1 3 1\n''') == '0'\nassert solution('''\n4 2\n1 2 2\n''') == '0'\nassert solution('''\n4 1\n1 2 3\n''') == '1'\nassert solution('''\n4 2\n1 2 3\n''') == '1'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == '6'\nassert solution('2 2') == '3'\nassert solution('3 5') == '1'\nassert solution('4 5') == '1'\nassert solution('4 4') == '6'\n\n\"\"\"\n\n\nimport math\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"6\"\nassert solution(\"3 1\") == \"6\"\nassert solution(\"3 2\") == \"1\"\n\"\"\""
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '6'\nassert solution('10 10') == '50'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"6\"\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == 6\nassert solution('3 1') == 6\nassert solution('3 2') == 2\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"6\"\n\n'''\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '3'\nassert solution('3') == '-1'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('1') == '-1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"87654\") == \"10\"\nassert solution(\"30\") == \"10\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"-10\") == \"0\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\\n87654\") == \"10\"\nassert solution(\"100\\n87654\") == \"100\"\nassert solution(\"1\\n23\") == \"1\"\nassert solution(\"23\\n10\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '25'\nassert solution('1000000') == '26'\nassert solution('19') == '0'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1\\n\"\n    \"5\\n\"\n    ) == \"10\"\n\nassert solution(\n    \"5\\n\"\n    \"10\\n\"\n    ) == \"10\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n90') == '10'\nassert solution('3\\n20') == '-1'\nassert solution('10\\n1') == '-1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\") == \"1\"\nassert solution(\"10\\n30\") == \"10\"\nassert solution(\"5\\n12\") == \"2\"\nassert solution(\"100\\n9\") == \"100\"\nassert solution(\"3\\n25\") == \"1\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '10'\nassert solution('30') == '30'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('87654\\n30') == '10'"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"a\") == \"First\"\nassert solution(\"\") == \"First\"\nassert solution(\"aa\") == \"Second\"\nassert solution(\"ab\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Second'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aba') == 'Second'\nassert solution('bba') == 'First'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''aba\nFirst\nSecond''') == 'Second'\n\nassert solution('''aa\nFirst\nSecond''') == 'First'\n\nassert solution('''baba\nFirst\nSecond''') == 'Second'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aba') == 'Second'\nassert solution('abcd') == 'First'\nassert solution('abc') == 'First'\nassert solution('aaaa') == 'First'\nassert solution('abcde') == 'Second'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aba') == 'Second'\nassert solution('ab') == 'First'\nassert solution('aab') == 'Second'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''abc\n\n''') == 'Second'\nassert solution('''aba\n\n''') == 'Second'"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"abb\") == \"First\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"a\") == \"First\"\nassert solution(\"ab\") == \"Second\"\nassert solution(\"bb\") == \"First\"\nassert solution(\"bbba\") == \"Second\"\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"Second\"\nassert solution(\"abc\") == \"First\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n12345\n\n''') == '6'\nassert solution('''\n16\n439873893693495623498263984765\n\n''') == '40'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('16') == '40'\nassert solution('10') == '6'\nassert solution('12345') == '6'\nassert solution('439873893693495623498263984765') == '40'"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"6\"\nassert solution(\"16\") == \"40\"\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"0\") == 0\nassert solution(\"1\") == 1\nassert solution(\"12345\") == 6\nassert solution(\"123456789\") == 28\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('7') == '5'\nassert solution('8') == '6'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"6\"\n\"\"\"\n\na, s = int(input()), input()\n\nm = [[0 for i in range(len(s) + 1)] for j in range(len(s) + 1)]\n\nfor i in range(1, len(s) + 1):\n    for j in range(i, len(s) + 1):\n        m[i][j] = m[i - 1][j - 1] + int(s[i - 1]) * int(s[j - 1])\n\nprint(sum(i == j for i in range(1, len(s) + 1) for j in range(i, len(s) + 1)))\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '4'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('16') == '40'\nassert solution('12345') == '6'\nassert solution('439873893693495623498263984765') == '40'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    10\n    1234\n''') == '6'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 0\nassert solution(\"\") == 1\nassert solution(\"12345\") == 3\nassert solution(\"123456789\") == 3"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n0 1\\n2 1\\n') == '332748119'\nassert solution('1 2\\n1\\n1\\n') == '3'\nassert solution('3 3\\n0 1 1\\n4 3 5\\n') == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n0 1\n2 1\n''') == '332748119'\n\nassert solution('''\n3 2\n0 1 0\n3 5 5\n''') == '185138929'\n\nassert solution('''\n2 1\n0 1\n1 1\n''') == '974061117'\n\n\n\n'''\nimport math"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '3'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n''') == '332748119'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '974061117'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\n1''') == '332748119'\nassert solution('''1 2\n2''') == '185138929'\nassert solution('''1 2\n1''') == '974061117'"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '332748119'\nassert solution('''3 3\n0 1 1\n4 3 5''') == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 1\n1\n2\n3\n4\n\"\"\") == \"332748119\"\nassert solution(\"\"\"\n3 3\n1 2\n3 4\n\"\"\") == \"160955686\"\nassert solution(\"\"\"\n2 1\n0 1\n2 1\n\"\"\") == \"3\"\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '3'\n\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n\nassert solution('''\n4 3\n0 1 1\n4 3 5\n''') == '974061117'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''1 2\n1\n1\n''') == '3'\nassert solution('''3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n1''') == '332748119'\n\nassert solution('''2 2\n0 1\n1''') == '160955686'\n\nassert solution('''3 3\n0 1 1\n4 3 5\n''') == '974061117'\n\nassert solution('''2 1\n1\n1\n''') == '332748119'\n\nassert solution('''1\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AB') == 'A'\nassert solution('CD') == 'C'\nassert solution('BC') == 'BC'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\"\nassert solution(\"OZ\") == \"0\"\nprint(\"YOUR CODE IS CORRECT!\")\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nAJKEQSLOBSROFGZ\nOVGURWZLWVLUXTH\nOZ''') == 'ORZ'\nassert solution('''\nAA\nA\nA''') == '0'\nassert solution('''\nA\nA\nA''') == '0'\nassert solution('''\nAA\nAA\nAA''') == 'AA'\nassert solution('''\nAA\nAA\nAA''') == 'AA'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'ORZ'\nassert solution('OZ') == '0'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\"\nassert solution(\"OZ\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'ORZ'"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'OZ'\nassert solution('OZ') == '0'"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"AJKEQSLOBSROFGZ\",\n    \"OVGURWZLWVLUXTH\",\n    \"OZ\"\n) == \"ORZ\"\nassert solution(\n    \"AA\",\n    \"A\",\n    \"A\"\n) == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"AJKEQSLOBSROFGZ\nOVGURWZLWVLUXTH\nOZ\"\"\") == \"ORZ\"\nassert solution(r\"\"\"AA\nA\nA\n\n\"\"\") == \"0\""
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AJKEQSLOBSROFGZ') == 'ORZ'\nassert solution('OVGURWZLWVLUXTH') == 'ORZ'\nassert solution('OZ') == '0'\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"99\"\nassert solution(\"1 100 1\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('1 100 1') == '0'\nassert solution('100 100 100') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '99'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 1\") == \"99\"\nassert solution(\"1 100 1\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\") == \"99\"\nassert solution(\"1 100 1\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1') == '99'\nassert solution('1 100 1') == '0'\nassert solution('100 100 100') == '0'"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 1\\n1 100 1\\n1 100 100\") == \"99\"\nassert solution(\"100 100 100\\n1 1 1\\n1 1 1\") == \"0\""
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1\") == \"99\"\nassert solution(\"1 100 1\") == \"0\"\nassert solution(\"1 100 100\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1\\n1 100 1\\n1 100 100') == '99'\nassert solution('100 100 100\\n1 1 1\\n1 1 1') == '0'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n''') == '1'\nassert solution('''3 2\n''') == '1'\nassert solution('''3 3\n''') == '0'\nassert solution('''1000000000000 1048576\n''') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 2\n''') == '1'\nassert solution('''\n3 3\n''') == '0'\nassert solution('''\n1000000000000 1048576\n''') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('1000000000000 1048576') == '118606527258'"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution() == '1'\nassert solution() == '0'"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\n\nassert solution([\n    '1 1',\n    '2 2'\n    ]) == '2'\n\nassert solution([\n    '3 3',\n    '4 4'\n    ]) == '0'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('1000000000000 1048576') == '118606527258'"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution('''1 1\n''') == '1'\nassert solution('''3 2\n''') == '1'\nassert solution('''3 3\n''') == '0'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n''') == '1'\nassert solution('''\n3 2\n''') == '1'\nassert solution('''\n1000000000000 1048576\n''') == '118606527258'\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 5\n2\n\n''') == '1'\nassert solution('''\n3 5\n4\n\n''') == '0'\nprint(\"You're all set!\")\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''+-\n+-''') == 'Yes'\nassert solution('''++''') == 'Yes'\nassert solution('''-++''') == 'No'\nassert solution('''++-''') == 'Yes'\nassert solution('''-++-''') == 'No'"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-') == 'No'\nassert solution('++') == 'Yes'\nassert solution('-+') == 'Yes'\nassert solution('-+') == 'No'"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('++-') == 'Yes'\nassert solution('+-+-') == 'No'\nassert solution('+--+') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''+-\n-++''') == 'Yes'\nassert solution('''+-''') == 'No'\nassert solution('''++\n''') == 'Yes'\nassert solution('''-\n''') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('-++') == 'No'\nassert solution('-++-') == 'No'\nassert solution('-+') == 'No'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('-+') == 'No'\nassert solution('--') == 'No'\n\n\"\"\"\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''+-''') == 'No'\nassert solution('''+-++-''') == 'Yes'\nassert solution('''++''') == 'Yes'\nassert solution('''+--+-''') == 'No'\nassert solution('''+--+--+''') == 'Yes'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('-++-') == 'No'\nassert solution('+-') == 'Yes'\nassert solution('++') == 'Yes'\nassert solution('-') == 'No'"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('+-') == 'Yes'\nassert solution('++') == 'No'\nassert solution('-+') == 'No'\nassert solution('+') == 'No'\n\n\"\"\")\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''+-\n''') == 'No'\nassert solution('''+--+\n''') == 'Yes'\nassert solution('''+-+-\n''') == 'Yes'\nassert solution('''+--+-\n''') == 'No'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 0 0\n0 1\n-1 2\n1 2\n\nOutput\n12.566370614359172464\n''') == '12.566370614359172464'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == output\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"12.566370614359172464\"\n\n\n\n--Input is a bunch of floats--\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 0 0') == '12.566370614359172464'\nassert solution('4 1 -1') == '21.991148575128551812'\nassert solution('1 2') == '3.1415926535897932385'\nassert solution('1 2 3') == '4.1415926535897932385'\n\n'''\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 0 0\n0 1\n-1 2\n1 2\n\"\"\") == \"12.566370614359172464\"\n\nassert solution(\"\"\"\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n\"\"\") == \"21.991148575128551812\n\nassert solution(\"\"\"\n5 0 0\n-1 1\n0 2\n1 2\n2 0\n1 1\n\"\"\") == \"16.61443811086597485\n\nassert solution(\"\"\"\n6 0 0\n0 0\n0 1\n1 2\n2 0\n1 1\n\"\"\") == \"25.658135083523809516\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 0 0\") == \"12.566370614359172464\"\nassert solution(\"4 1 -1\") == \"21.991148575128551812\"\nassert solution(\"2 2\") == \"4.0\"\nassert solution(\"3 0 0\") == \"4.0\"\nassert solution(\"2 0\") == \"4.0\"\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 0 0\n0 1\n1 2\n2 0\n1 1''') == '21.991148575128551812'\n\n''')\n\nimport math\n\nn = int(input())\np = list(map(int, input().split()))\n\na = [[i, p[i]] for i in range(n)]\na.sort(key=lambda x: x[1])"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 0 0') == '12.566370614359172464'\nassert solution('4 1 -1') == '21.991148575128551812'\n\n'''"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 0 0\n0 1\n-1 2''') == '12.566370614359172464', 'First'\nassert solution('''4 1 -1\n0 0\n1 2\n2 0\n1 1''') == '21.991148575128551812', 'Second'\n\n\n\"\"\"\nfrom math import pi\nfrom math import sqrt\n\nn = int(input())\nr = 0\n\nfor _ in range(n):\n    x, y = map(int, input().split())\n    r += sqrt((x ** 2) + (y ** 2))\n\nprint(pi * r)\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 0 0\") == '12.566370614359172464'\nassert solution(\"4 1 -1\") == '21.991148575128551812'\n\"\"\"\nfrom math import sqrt"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '6 6'\nassert solution('48') == '9 42'\nassert solution('0') == '0 0'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '6 6'\nassert solution('48') == '9 42'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"3 2\"\nassert solution(\"10\") == \"2 2 2 2 2 2 2 2 2 2\"\nassert solution(\"100\") == \"100 100 100 100 100 100 100 100 100 100 100\"\nassert solution(\"1000\") == \"1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\"\nassert solution
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '6 6'\nassert solution('48') == '9 42'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == '0 0'\nassert solution(\"3\") == '1 1'\nassert solution(\"5\") == '3 3'\nassert solution(\"23\") == '9 3'\nassert solution(\"42\") == '6 6'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1 1'\nassert solution('6') == '1 1'\n\n'''\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '9 42'\nassert solution('6') == '6 6'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '6 9'\nassert solution('15') == '18 18'\nassert solution('12') == '18 18'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '6 6'\nassert solution('48') == '9 42'\n"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n5\n''') == '21 21'\n\nassert solution('''\n42\n''') == '9 42'\n\nassert solution('''\n100\n''') == '5 100'\n\nassert solution('''\n90\n''') == '10 90'\n\nassert solution('''\n17\n''') == '2 17'"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_lines) == \"Yes\"\n\nimport sys\ninput_lines = sys.stdin.read().splitlines()\nprint(solution(input_lines))\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == 'Yes'"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"Yes\"\nassert solution(input_) == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n(())') == 'Yes'\nassert solution('3\\n(())') == 'No'\nassert solution('2\\n(()') == 'No'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"10\") == \"Yes\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\""
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'Yes'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"5\\n()()()\") == \"Yes\"\nassert solution(\"5\\n())\") == \"No\"\nassert solution(\"10\\n((((\") == \"No\"\nassert solution(\"10\\n)()(\") == \"Yes\"\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('10') == 'Yes'"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"No\"\nassert solution('5') == \"Yes\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 50\\n50 50\\n\") == \"1\"\nassert solution(\"3 100\\n50 50 100\\n\") == \"5\"\nassert solution(\"2 50\\n50 50\\n\") == \"-1\""
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 50\n50 50\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 50\n50 50\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3 100\n50 50 100\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"5\"\n\nassert solution(input_) == \"2\"\n\n\"\"\""
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 50\\n50 50\\n') == '1'\nassert solution('2 50\\n50 50\\n') == '5'\nassert solution('3 100\\n50 50 100\\n') == '2'\nassert solution('4 100\\n50 50 100\\n') == '0'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 50\\n50 50 100\\n') == '1'\nassert solution('2 50\\n50 50\\n') == '2'\nassert solution('3 50\\n50 50 100\\n') == '5'\nassert solution('4 50\\n50 50 100 100\\n') == '2'\nassert solution('5 50\\n50 50 100 100 100\\n') == '-1'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 50\n50 50\n''') == '1'\nassert solution('''2 50\n50 50\n''') == '5'\nassert solution('''3 100\n50 50 100\n''') == '2'\nassert solution('''4 100\n50 50 50 50\n''') == '0'\nassert solution('''5 100\n50 50 50 50\n''') == '0'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 50]) == '1'\nassert solution([3, 100]) == '5'\nassert solution([2, 50]) == '-1'\nassert solution([2, 50]) == '0'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 50\n50 50 100\n''') == '1'\nassert solution('''2 50\n50 50\n''') == '-1'\nassert solution('''3 100\n50 50 100\n''') == '5'\nassert solution('''2 50\n50 50\n''') == '2'"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"2\"\n\nassert solution(l) == \"1\"\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 50\n50\n''') == '1'\nassert solution('''3 100\n50 50 100\n''') == '5'\nassert solution('''2 50\n50 50\n''') == '-1'\nassert solution('''2 50\n50 50\n''') == '0'\nassert solution('''\n1 1\n1\n''') == '1'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 6 8\n''') == '2'\n\nassert solution('''\n4\n5 7 2 9\n''') == '4'\n\nassert solution('''\n5\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\n\nassert solution('''\n5\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\n\nassert solution('''\n4\n1 2 3 4 5 6 7 8 9 10\n''') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n2 6 8\n\"\"\") == \"2\"\nassert solution(\"\"\"5\n2 3 4 9 12\n\"\"\") == \"4\"\nassert solution(\"\"\"4\n5 7 2 9\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\"\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 6 8') == '2'\nassert solution('5\\n2 3 4 9 12') == '4'\nassert solution('4\\n5 7 2 9') == '1'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n5 7 2 9\n''') == '4'\n\nassert solution('''\n3\n2 6 8\n''') == '2'\n\nassert solution('''\n4\n5 7 2 9\n''') == '4'\n\nassert solution('''\n5\n7 9 2 8\n''') == '1'\n\nassert solution('''\n3\n5 7 2 9\n''') == '1'"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n2 6 8\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n5 7 2 9\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n3 4 9 12\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n6\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n4 3 6 8\n\"\"\") == \"0\""
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 6 8') == '2'\nassert solution('5\\n2 3 4 9 12') == '4'\nassert solution('4\\n5 7 2 9') == '1'\n\n\nhttps://www.hackerrank.com/challenges/halloween-box-dimensions/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=greedy-algorithms\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n2 6 8\n\n3\n5 7 2 9\n\n4\n5 7 2 9\n''') == '2'\nassert solution('''5\n2 3 4 9 12\n\n4\n5 7 2 9\n''') == '1'\nassert solution('''4\n5 7 2 9\n\n4\n5 7 2 9\n''') == '0'\nassert solution('''8\n2 6 8\n\n3\n5 7 2 9\n\n4\n5 7 2 9\n''') == '0'\nassert solution('''10\n2 3 4 5 6 7 8 9 10\n\n2\n3\n5\n7\n''') == '4'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('5') == '1'\nassert solution('4') == '2'\nassert solution('6') == '3'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n2 3 4 5\n''') == '1'\nassert solution('''5\n2 3 4 5\n''') == '2'\nassert solution('''6\n2 3 4 5\n''') == '3'\nassert solution('''7\n2 3 4 5\n''') == '4'\nassert solution('''8\n2 3 4 5\n''') == '5'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n17 18\\n15 24\\n12 15\\n\") == \"6\"\nassert solution(\"5\\n90 108\\n45 105\\n75 40\\n\") == \"5\"\nassert solution(\"5\\n16 17\\n12 13\\n8 14\\n\") == \"-1\""
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 17, 18, 15, 24, 12, 15, 24, 12, 15]) == 6\nassert solution([2, 10, 16, 7, 17, 33, 30]) == -1\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\\\n3\n17 18\n15 24\n12 15\"\"\") == \"6\"\nassert solution(\"\"\"\\\n5\n90 108\n45 105\n75 40\"\"\") == \"5\"\nassert solution(\"\"\"\\\n3\n2 2\n8 2\"\"\") == \"-1\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n10 16\n7 17\n\"\"\") == \"5\"\nassert solution(\"\"\"\n3\n17 18\n15 24\n12 15\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n\"\"\") == \"5\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6'\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5'\nassert solution('''\n1\n1\n''') == '-1'"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6'\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5'\nassert solution('''\n2\n10 16\n7 17\n''') == '-1'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '6'\nassert solution() == '-1'\n\"\"\""
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5'\nassert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6'\n'''\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6'\n\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5'\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6'\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5'\nassert solution('''\n2\n10 16\n7 17\n''') == '-1'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"1 0\\n1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bab') == '1 0\\n1 3\\n'\nassert solution('bbbb') == '0\\n'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bab') == '2 0 1 3'\nassert solution('bbbb') == '0'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bbb') == '1 3'"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bab\") == \"2 0 1 3\"\nassert solution(\"bbbb\") == \"0\"\n\n'''\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bb') == '1 3'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bab') == '1 0'\nassert solution('bbbb') == '0'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bab\") == \"1 0\"\nassert solution(\"bbbb\") == \"0\"\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '0'\n\nstdin = 'bab'\nstdout = '2 0 1 0'\nassert solution(stdin) == stdout\n\nstdin = 'bbbb'\nstdout = '0'\nassert solution(stdin) == stdout\n\nstdin = 'aaa'\nstdout = '0'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bab\") == \"2 0 1 3\"\nassert solution(\"bbbb\") == \"0\""
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1\\n4 3 2\\n\") == \"POSSIBLE\"\nassert solution(\"5\\n0 0\\n0 1 2\\n0 1 1\\n\") == \"IMPOSSIBLE\""
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 3\\n') == 'POSSIBLE'\nassert solution('3\\n2 1\\n') == 'IMPOSSIBLE'\n'''\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n4 3 2\\n\") == \"POSSIBLE\"\nassert solution(\"1\\n1 1\\n\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"POSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\n\n'''\nimport sys"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'POSSIBLE'\nassert solution('2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"2\n0 1\n3 2\n\"\"\") == \"POSSIBLE\"\nassert solution(\"\"\"5\n0 1\n3 2\n4 5\n6 7\n8 9\n\"\"\") == \"POSSIBLE\"\nassert solution(\"\"\"10\n1 3\n1 6\n6 7\n3 4\n1 9\n9 2\n5 6\n6 8\n8 3\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"1\n1\n1\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"10\n0 1\n3 2\n4 5\n6 7\n8 9\n\"\"\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 1, 1]) == \"POSSIBLE\"\nassert solution([3, 1, 1, 3, 2, 1]) == \"POSSIBLE\"\nassert solution([3, 1, 1, 3, 2, 1, 3, 2, 1]) == \"POSSIBLE\"\nassert solution([3, 1, 1, 3, 2, 1, 3, 2, 1, 3, 2, 1]) == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('3\\n1 1\\n1 2 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 1\\n4 3 2') == 'POSSIBLE'\nassert solution('3\\n1 1\\n3 2 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"POSSIBLE\"\nassert solution(\"2\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"4\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1000000007') == '2'\nassert solution('1000000007') == '4'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"10 100000007\") == \"1\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n11''') == '1'\nassert solution('''\n4\n2''') == '1'\nassert solution('''\n5\n1000000000''') == '1'\nassert solution('''\n6\n100''') == '0'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"2 3\") == \"1\""
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1000000007') == '2'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1000000007''') == '2'\nassert solution('''5 1000000007''') == '5'\nassert solution('''4 1000000007''') == '3'\nassert solution('''6 1000000007''') == '4'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5') == '2'\nassert solution('20 2') == '20'\nassert solution('100 3') == '97'\nassert solution('4 3') == '0'\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"4 3\") == \"4\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 3 3') == '7'\nassert solution('4 1 5 1') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 3 3\n+-'''') == '7'\nassert solution('''4 1 5 1\n-''') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 3 3''') == '7'\nassert solution('''4 1 5 1''') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 1, 5, 1]) == 7\nassert solution([4, 1, 5, 1]) == -1\nassert solution([2, -1, 5, 1]) == -1\nassert solution([2, 2, 5, 1]) == 8\n\nstdin = '''\n4 1 5 1\n+-'\n'''\n\nprint(solution(stdin))\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3 3') == '7'\nassert solution('4 1 5 1') == '999999228'"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 1 5 1\n-''') == \"999999228\"\nassert solution('''2 2 3 3\n+''') == \"7\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 3 3''') == '7'\nassert solution('''4 1 5 1''') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 3 3\") == \"7\"\nassert solution(\"4 1 5 1\") == \"999999228\""
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 3 3\n+-+\n''') == '7'\n\nassert solution('''\n4 1 5 1\n-\n''') == '999999228'\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2 3 3\n+-+\n''') == '7'\n\nassert solution('''\n4 1 5 1\n-\n''') == '999999228'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1 2\n''') == '4'\n\nassert solution('''\n1 2 3 1\n''') == '2'\n\nassert solution('''\n10 2 1 7\n''') == '0'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 1 2''') == 4\nassert solution('''1 2 3 1''') == 2\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1 2\") == \"4\"\nassert solution(\"1 2 3 1\") == \"2\"\nassert solution(\"10 2 1 7\") == \"0\"\n\n\nstdin = \"1 2 3 1\"\na, b, c, l = map(int, input().split())\n\nd = (a**2 + b**2 + c**2)**0.5"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 1 2\n''') == 4\nassert solution('''\n1 2 3 1\n''') == 2\nassert solution('''\n10 2 1 7\n''') == 0\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 2') == 4\nassert solution('1 2 3 1') == 2\nassert solution('10 2 1 7') == 0"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 2\") == 4\nassert solution(\"1 2 3 1\") == 2\nassert solution(\"10 2 1 7\") == 0"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 1 1 2\n\"\"\") == '4'\nassert solution(\"\"\"\n1 2 3 1\n\"\"\") == '2'\nassert solution(\"\"\"\n10 2 1 7\n\"\"\") == '0'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 2 3 4 5''') == '10'\nassert solution('''5 2\n1 2 3 4 5\n6 7 8 9 10''') == '6'\nassert solution('''5 2\n1 2 3 4 5\n6 7 8 9 10\n1 1 1 1 1''') == '4'\nassert solution('''5 2\n1 2 3 4 5\n6 7 8 9 10\n1 1 1 1 1\n1 1 1 1 1''') == '3'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1''') == '6'\nassert solution('''3 2\n1''') == '5'"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2''') == '6'\nassert solution('''10 3''') == '36'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n1 1\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n2 2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2\n''') == '6'\n\nassert solution('''\n5 5\n''') == '7'\n\nassert solution('''\n3 2\n''') == '6'\n\nassert solution('''\n7 9\n''') == '10101011'\n\nassert solution('''\n3 7\n''') == '1'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"6\""
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2''') == '6'\nprint(solution('''3 2'''))\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '7'\nassert solution('10 10') == '47'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '6'\nassert solution('5 1') == '0'\nassert solution('10 20') == '8'"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '0'\nassert solution('1 4') == '1'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('1') == '0'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1 2\") == \"1\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n1 2\") == \"2\"\nassert solution(\"1\\n3 4\") == \"1\"\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2\n1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2\n3 2 1\n\"\"\") == \"1\"\n\nimport itertools"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''5\n1 2\n1 3\n1 4\n2 3\n2 4\n''') == '1'\nassert solution('''3\n1 2\n1 3\n''') == '0'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('10') == '8'\nassert solution('1000000') == '89774547'\nassert solution('1111111111111111') == '152797057'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n0 2 0\\n3 0 1\\n\") == \"2\"\n\nassert solution(\"3\\n0 2 0\\n1 0 3\\n\") == \"4\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n0 2 0\n3 0 1\n''') == \"2\"\nassert solution('''\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == \"18\"\nassert solution('''\n3\n0 2 0\n1 0 3\n''') == \"4\"\n\n\n\"\"\""
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('11') == '18'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 2 0\n3 0 1\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n\n\"\"\") == \"18\""
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n0 2 0\\n3 0 1\\n') == '2'\nassert solution('10\\n1 5 0 1 6 2 4 3 8\\n7 7 5 9 4 4 2 6 5 3\\n5 3 2 8 4 6 5 9\\n') == '21'\n\n\n\"\"\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    0 2 0\n    3 0 1\n    ''') == '2'\n    assert solution('''\n    3\n    0 2 0\n    1 0 3\n    ''') == '4'\n    assert solution('''\n    11\n    0 0 0 5 0 0 0 4 0 0 11\n    9 2 6 0 8 1 7 0 3 0 10\n    ''') == '18'\n''')\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('3') == '4'\n\n\nfrom collections import deque\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('11') == '18'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 2 0\n3 0 1\n''') == \"2\"\nassert solution('''\n3\n0 2 0\n1 0 3\n''') == \"4\"\nassert solution('''\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == \"18\"\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '18'\n\n'''\n\n\nimport sys\nfrom collections import Counter\nfrom bisect import bisect_left"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 10\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"6 5\") == \"YES\""
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"abb\") == \"YES\"\nassert solution(\"abbc\") == \"NO\"\nassert solution(\"ab*c\") == \"YES\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"6 5\") == \"YES\"\nassert solution(\"3 5\") == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 10\ncode*s\ncodeforces\n\n''') == \"YES\"\nassert solution('''\n1 1\nv\nk\n\n''') == \"NO\"\nassert solution('''\n9 6\ngfgf*gfgf\ngfgfgf\n\n''') == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\""
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'YES'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\\\n5 5\nvkcup\ngfgfgf\n''') == 'NO', 'Testing 1'\nassert solution('''\\\n5 6\nvkcup\ngfgfgf\n''') == 'YES', 'Testing 2'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\\\n4 9\nc*dd*\nd\n\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == '0.260000000000'\n\nassert solution(\"4\") == '0.800000000000'\n\nassert solution(\"5\") == '0.500000000000'\n\nassert solution(\"6\") == '0.400000000000'\n\nassert solution(\"7\") == '0.300000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0.1 0.2 0.3 0.8\n\n''') == '0.800000000000'\nprint(solution('''\n2\n0.1 0.2\n\n'''))\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n0.1 0.2\n''') == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0.800000000000\"\nassert solution(\"2\") == \"0.260000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0.260000000000\"\nassert solution(\"4\") == \"0.800000000000\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0.1 0.2\n\n''') == '0.260000000000'\nassert solution('''\n4\n0.1 0.2 0.3 0.8\n\n''') == '0.800000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'\nassert solution('3\\n0.1 0.2 0.3 0.8') == '0.260000000000'\nassert solution('4\\n0.1 0.2 0.3 0.8') == '0.260000000000'\nassert solution('5\\n0.1 0.2 0.3 0.8') == '0.260000000000'\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0.260000000000\"\nassert solution(\"1\") == \"0.800000000000\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 10 1 2 5\n''') == '5.0000000000'\nassert solution('''3 6 1 2 1\n''') == '4.7142857143'\nassert solution('''6 10 3 4 1\n''') == '5.0000000000'"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"\nassert solution(\"5 4 1 2 3\") == \"5\"\nassert solution(\"3 8 1 2 1\") == \"8\""
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '5.0000000000'\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 1 2 5\\n') == '5.0000000000'\nassert solution('3 6 1 2 1\\n') == '4.7142857143'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 1 2 5\\n') == '5.0000000000'\nassert solution('3 6 1 2 1\\n') == '4.7142857143'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10 1 2 5\") == \"5\"\nassert solution(\"3 6 1 2 1\") == \"4.7142857143\"\n\n\"\"\"\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5, 10, 1, 2, 5]) == \"5.0000000000\"\nassert solution([3, 6, 1, 2, 1]) == \"4.7142857143\""
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 10 1 2 5') == '5.0'\nassert solution('3 6 1 2 1') == '4.714285714285714'\n\n\"\"\"\n\nfrom math import inf\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_str) == '5.0000000000'\n'''"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.250'\nassert solution('4') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0.250'\nassert solution('3') == '0.279'\nassert solution('3') == '0.279'\n\n\n\"\"\"\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0.000 0.500 0.750 1.000 2.000 3.000\n''') == '0.250'\nassert solution('''3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\n''') == '0.279'"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'\nprint(solution(input()))"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0.250'\nassert solution('3') == '0.279'\nassert solution('10') == '1.0'\nassert solution('5') == '0.5'\nassert solution('3') == '0.125'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n0.000 0.500 0.750 1.000 2.000 3.000') == '0.250'\nassert solution('3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896') == '0.279'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0.000 0.500 0.750 1.000 2.000 3.000\n\n''') == '0.250'\nassert solution('''\n3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\n\n''') == '0.279'\nassert solution('''\n3\n0.00 4469.00 6526.00 4864.00 9356.00 7490.00 995.00\n\n''') == '0.008'\nassert solution('''\n3\n0.000 0.500 0.750 1.000 2.000 3.000\n\n''') == '0.250'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0.000 0.500 0.750 1.000 2.000 3.000\n''') == '0.250'\nassert solution('''\n3\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\n''') == '0.279'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n0.000 0.500 0.750 1.000 2.000 3.000\") == \"0.250\"\nassert solution(\"3\\n4469.000 6526.000 4864.000 9356.383 7490.000 995.896\") == \"0.279\""
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5\") == \"18\"\nassert solution(\"0 1\") == \"8\"\nassert solution(\"1 1\") == \"0\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5') == '18'\nassert solution('0 1') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 5\n5 2\n''') == '18'\nassert solution('''0 1\n0 0\n''') == '8'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '18'\nassert solution('0 1') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '18'\nassert solution('0 1') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5') == '18'\nassert solution('0 1') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"18\"\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5') == '18'\nassert solution('0 1') == '8'"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5\") == \"18\"\nassert solution(\"0 1\") == \"8\""
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '18'"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"4\\n\"\nassert solution(\"2\\n\") == \"10\\n\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '4\\n'\nassert solution('2\\n') == '10\\n'\nassert solution('10\\n') == '244\\n'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n6\n7\nX\nX\n''') == \"2\"\nassert solution('''3\n4\n5\nX\nX''') == \"10\"\n\nassert solution('''7\n7\n7\n7\n7\n7\n7''') == \"49\"\n\nassert solution('''7\n7\n7\n7\n7\n7\n7''') == \"6\"\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\"\nprint(\"\\033[32m%s\\033[0m\" % (\"TEST OK\"))\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\"\nassert solution(\"100\") == \"LL\""
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == '4'\nassert solution('2\\n') == '10'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n''') == '4'\nassert solution('''2\n''') == '10'\nassert solution('''10\n''') == '244'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"10\"\nassert solution(\"10\") == \"244\""
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1 2 3\n''') == '0'\nassert solution('''\n4\n1 4 1 4 9\n''') == '2'\nassert solution('''\n5\n1 4 1 4 9\n''') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_1) == '0'\nassert solution(input_2) == '2'\nassert solution(input_3) == '2'\nassert solution(input_4) == '0'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n''') == '0'\nassert solution('''4\n1 4 1 4 9\n''') == '2'\nassert solution('''5\n1 4 1 4 9\n''') == '2'\nassert solution('''6\n1 4 1 4 9\n''') == '3'\nassert solution('''7\n1 4 1 4 9\n''') == '3'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([4, 5, 1, 4, 9]) == 2\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == str(0)\nassert solution(s) == str(2)\nassert solution(s) == str(3)"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '2'"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n1 1 2 2\") == \"2\"\nassert solution(\"5\\n1 4 1 4 9\") == \"2\""
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == '0'\nprint(solution(input_))\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aaabccc\") == \"YES\", \"5\"\nassert solution(\"bbacc\") == \"NO\", \"3\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'\n\n\n\n\n\n\n\n\"\"\"\n\n\"\"\"\nThe number of 'a' and 'b' in the string are the same. \n\nThe number of 'c' is equal to the number of 'a' and 'b'. \n\nThe number of 'a' and 'b' are the same.\n\"\"\"\n\n\n\"\"\"\nThe number of 'b' and 'c' in the string are the same. \n\nThe number of 'a' and 'c' is equal to the number of 'b' and 'c'. \n\nThe number of 'b' and 'c' are the same.\n\"\"\"\n\n\n\"\"\"\nThe number of 'a' and 'c' in the string are the same. \n\nThe number of 'b' and 'c' are equal to the number of 'a' and 'c'. \n\nThe number of 'c' are equal to the number of 'b' and 'c'.\n\"\"\""
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'\n\nassert solution(input(1)) == 'NO'\n\nassert solution(input(2)) == 'YES'\n\nassert solution(input(3)) == 'YES'\n\nassert solution(input(4)) == 'NO'"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n\"\"\"\n\ns = input()"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaabccc\") == \"YES\"\nassert solution(\"bbacc\") == \"NO\"\nassert solution(\"aabc\") == \"YES\"\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4 1 2 5 3\n''') == '2'\nassert solution('''4\n4 1 2 5 3\n''') == '2'\nassert solution('''4\n4 1 2 5 3\n''') == '2'\nassert solution('''4\n4 1 2 5 3\n''') == '2'\nassert solution('''4\n4 1 2 5 3\n''') == '2'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '2'"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution(\"1\\n3 2\") == \"3\""
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n4 1 2 5 3''') == '2'\nassert solution('''4\n4 1 3 2''') == '2'\nassert solution('''4\n1 3 4 2''') == '2'\n'''\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 2\nassert solution('4') == 2\nassert solution('1') == 1\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4 1 2 5 3\n''') == '2'\nassert solution('''\n4\n4 1 3 2\n''') == '2'\nassert solution('''\n7\n4 1 2 3 5 6 7\n''') == '2'\nassert solution('''\n4\n5 1 2 3 4\n''') == '1'\nassert solution('''\n2\n2 3\n''') == '0'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '2'\nassert solution('100') == '20'\nassert solution('5') == '1'\nassert solution('10000') == '1'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n1 2 5 3''') == '2'\nassert solution('''5\n4 1 2 5 3''') == '2'\nassert solution('''4\n5 1 3 2''') == '2'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''5\n4 1 3 2''') == '1'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"3.5\"\nassert solution(\"6 3\") == \"4.95833333333\"\nassert solution(\"2 2\") == \"1.75\"\nassert solution(\"2 2\") == \"1.75\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 1\n''') == '3.500000000000'\nassert solution('''6 3\n''') == '4.958333333333'\nassert solution('''2 2\n''') == '1.750000000000'''"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 1') == '3.500000000000'\nassert solution('6 3') == '4.958333333333'\nassert solution('2 2') == '1.750000000000'"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '3.500000000000'\nassert solution('6 3') == '4.958333333333'\n\n\"\"\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 1\n''') == '3.500000000000'\nassert solution('''6 3\n''') == '4.958333333333'\nassert solution('''2 2\n''') == '1.750000000000'''"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_data) == str(3.5000000000000)\n\n\"\"\"\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1') == '3.500000000000'\nassert solution('6 3') == '4.958333333333'\nassert solution('2 2') == '1.750000000000'"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 1\n''') == '3.500000000000'\nassert solution('''6 3\n''') == '4.958333333333'\nassert solution('''2 2\n''') == '1.750000000000'''\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 1\n''') == '3.500000000000'\nassert solution('''\n6 3\n''') == '4.958333333333'\nassert solution('''\n2 2\n''') == '1.750000000000'\nassert solution('''\n20 21\n''') == '-1.1000000000000'\nassert solution('''\n10 10\n''') == '0.0'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1') == '3.500000000000'\nassert solution('6 3') == '4.958333333333'\nassert solution('2 2') == '1.750000000000'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2\n-><-\n5\n>''') == '3'\n\nassert solution('''4\n2\n<->\n5\n>>''') == '5'\n\nassert solution('''4\n3\n<-\n5\n>''') == '0'\n\nassert solution('''4\n3\n>''') == '0'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3'\nassert solution('4') == '5'\nassert solution('3') == '0'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n>-\n5\n<-\n3\n<>\n''') == '3'\nassert solution('''4\n<->\n5\n<->\n3\n<>\n''') == '3'\nassert solution('''3\n<>\n5\n<->\n3\n<>\n''') == '3'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution() == \"5\"\nassert solution() == \"3\"\nassert solution() == \"0\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4\n5\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n4\n6\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n3\n4\n<->\n5\n<<<\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"\n3\n2\n<->\n1\n<<<\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n>-><-\\n3\") == \"5\"\nassert solution(\"4\\n5\\n<-><-\\n3\") == \"4\"\nassert solution(\"4\\n5\\n<-<-\\n3\") == \"3\"\nassert solution(\"4\\n5\\n->>-\\n3\") == \"0\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '3'\n\nassert solution('''\n4\n>-><\n5\n>>>>\n3\n<<<\n2\n<>\n''') == '5'"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n5\\n-><-\\n5\\n>>>\\n3\\n<--\\n2\\n<>\") == \"3\\n5\\n3\"\nassert solution(\"6\\n5\\n-><-\\n5\\n>>>\\n3\\n<--\\n2\\n<>\") == \"5\\n4\\n4\"\nassert solution(\"1\\n1\\n-><\\n0\\n>>>\\n0\\n<>\") == \"0\\n0\\n0\"\nassert solution(\"10\\n10\\n-><-\\n5\\n>>>\\n4\\n<--\\n3\\n<>\") == \"10\\n10\\n10\"\nassert solution(\"5\\n2\\n<->\\n1\\n>->\\n0\\n<->\\n3\\n<->\\n4\\n<->\\n5\\n<->\\n6\\n<->\\n7\\n<->\\n8\\n<->\\n9\\n<->\\n10\\n<->\\n11\\n<->\\n12\\n<->\\n13\\n<->\\n14\\n<->\\n15\\n<->\\n16\\n<->\\n17\\n<->\\n18\\n<->\\n19\\n<->\\n20\\n<->\\n21\\n<->\\n22\\n<->\\n23\\n<->\\n24\\n<->\\n25\\n<->\\n26\\n<->\\n27\\n<->\\n28\\n<->\\n29\\n<->\\n30\\n<->\\n31\\n<->\\n32\\n<->\\n33\\n<->\\n34\\n<->\\n35\\n<->\\n36\\n<->\\n37\\n<->\\n38\\n<->\\n39\\n<->\\n40\\n<->\\n41\\n<->\\n42\\n<->\\n43\\n<->\\n44\\n<->\\n45\\n<->\\n46\\n<->\\n47\\n<->\\n48\\n<->\\n49\\n<->\\n50\\n<->\\n51\\n<->\\n52\\n<->\\n53\\n<->\\n54\\n<->\\n55\\n<->\\n56\\n<->\\n57\\n<->\\n58\\n<->\\n59\\n<->\\n60\\n<->\\n61\\n<->\\n62\\n<->\\n63\\n<->\\n64\\n<->\\n65\\n<->\\n66\\n<->\\n67\\n<->\\n68\\n<->\\n69\\n<->\\n70\\n<->\\n71\\n<->\\n72\\n<->\\n73\\n<->\\n74\\n<->\\n75\\n<->\\n76\\n<->\\n77\\n<->\\n78\\n<->\\n79\\n<->\\n80\\n<->\\n81\\n<->\\n82\\n<->\\n83\\n<->\\n84\\n<->\\n85\\n<->\\n86\\n<->\\n87\\n<->\\n88\\n<->\\n89\\n<->\\n90\\n<->\\n91\\n<->\\n92\\n<->\\n93\\n<->\\n94\\n<->\\n95\\n<->\\n96\\n<->\\n97\\n<->\\n98\\n<->\\n99\\n<->\\n100\\n<->\\n101\\n<->\\n102\\n<->\\n103\\n<->\\n104\\n<->\\n105\\n<->\\n106\\n<->\\n107\\n<->\\n108\\n<->\\n109\\n<->\\n110\\n<->\\n111\\n<->\\n112\\n<->\\n113\\n<->\\n114\\n<->\\n115\\n<->\\n116\\n<->\\n117\\n<->\\n118\\n<->\\n119\\n<->\\n120\\n<->\\n121\\n<->\\n122\\n<->\\n123\\n<->\\n124\\n<->\\n125\\n<->\\n126\\n<->\\n127\\n<->\\n128\\n<->\\n129\\n<->\\n130\\n<->\\n131\\n<->\\n132\\n<->\\n133\\n<->\\n134\\n<->\\n135\\n<->\\n136\\n<->\\n137\\n<->\\n138\\n<->\\n139\\n<->\\n140\\n<->\\n141\\n<->\\n142\\n<->\\n143\\n<->\\n144\\n<->\\n145\\n<->\\n146\\n<->\\n147\\n<->\\n148\\n<->\\n149\\n<->\\n150\\n<->\\n151\\n<->\\n152\\n<->\\n153\\n<->\\n154\\n<->\\n155\\n<->\\n156\\n<->\\n157\\n<->\\n158\\n<->\\n159\\n<->\\n160\\n<->\\n161\\n<->\\n162\\n<->\\n163\\n<->\\n164\\n<->\\n165\\n<->\\n166\\n<->\\n167\\n<->\\n168\\n<->\\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n\") == \"3\"\nassert solution(\"5\\n\") == \"5\"\nassert solution(\"3\\n\") == \"0\"\nassert solution(\"2\\n\") == \"0\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\nassert solution('1') == '202'\nassert solution('3') == '-1'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '16 9 9 10'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\nassert solution('3') == '202'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n4 5\n4 5\n4 10''') == '16'\nassert solution('''3\n1 1\n100 100\n1 1\n\nOutput\n202\n101 101 101 101 \n\nInput\n4\n1 100\n100 1\n1 100\n100 1\n\nOutput\n202\n101 101 101 101 \n''') == '-1'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n4 5\n4 5\n4 10\n\"\"\") == \"16\"\nassert solution(\"\"\"\n4\n1 100\n100 1\n1 100\n100 1\n\"\"\") == \"101 101 101 101 \nassert solution(\"\"\"\n4\n10 1\n1 100\n100 1\n1 100\n100 1\n\"\"\") == \"202\"\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n4 5\n4 5\n4 10\"\"\") == \"16\"\nassert solution(\"\"\"3\n4 4\n4 4\n4 4\"\"\") == \"202\"\nassert solution(\"\"\"1\n1 1\n1 1\"\"\") == \"101\"\nassert solution(\"\"\"2\n1 1\n2 1\"\"\") == \"100\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == \"16\"\nassert solution('3') == \"9 9 10\""
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '202'\nassert solution('3') == '9 9 10'\nassert solution('4') == '101 101 101 101'"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3\n4 5\n4 5\n4 10\"\"\") == \"16\"\nassert solution(\"\"\"3\n1 1\n100 100\n1 1\n\"\"\") == \"101 101 101 101?\"\nassert solution(\"\"\"3\n4 5\n4 5\n4 10\"\"\") == \"202\"\nassert solution(\"\"\"2\n1 1\n1 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 1 1 1\n\"\"\") == \"1 2 2\"\nassert solution(\"\"\"\n5\n1 2 3 2 2\n\"\"\") == \"0 1 3\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"0 1 3\"\nassert solution(\"\"\"\n3\n1 2 1\n\"\"\") == \"1 2 1\"\nassert solution(\"\"\"\n5\n1 2 3 2 2\n\"\"\") == \"0 1 3\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 1 1 1 1\n''') == '1 2 2'\nassert solution('''\n3\n1 2 3\n''') == '0 2'\n\nassert solution('''\n5\n1 2 3 2 2\n''') == '0 1 3'\nassert solution('''\n3\n1 2 3\n''') == '0 1 2'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n1 1 1 1\n''') == '1 2 2 \nassert solution('''5\n1 2 3 2 2\n''') == '0 1 3 '\nassert solution('''5\n1 2 3 2 2\n''') == '0 1 3 '\nassert solution('''3\n1 2 3\n''') == '0 1 2 '\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n''') == '0 2 3 4 5 6 7 8 9 10 '\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 1 1 1 1\n''') == '1 2 2 '\nassert solution('''3\n1 2 3\n''') == '0 2 '\nassert solution('''5\n1 2 3 2 2\n''') == '0 1 3 '\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5]) == \"1 2 2\"\nassert solution([3]) == \"0 1\""
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 1 1 1 1\n\n''') == '1 2 2'\nassert solution('''3\n1 2 3\n\n''') == '0 2'\n\nstdin = input()"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n') == '1 2 3 2 2'\nassert solution('3\\n') == '0 1 3'\nassert solution('6\\n') == '0 1 3'\nassert solution('8\\n') == '0 1 3'\nassert solution('10\\n') == '0 1 3'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1 2 2\"\nassert solution(\"3\") == \"0 2\"\nassert solution(\"5\") == \"1 2 3\"\nassert solution(\"4\") == \"0 1 3\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"1 2 3\"\nassert solution(\"3\") == \"0 2\"\nassert solution(\"5\") == \"0 1 3\"\nassert solution(\"8\") == \"0 1 2 3 4 5 6 7\"\nassert solution(\"3\") == \"0 1 2\"\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5\\n1 1 1 1 1\\n\") == \"1 2 2\", \"Too few hill\"\nassert solution(\n    \"3\\n1 2 3\\n\") == \"0 2\", \"Too few hill\"\n\nassert solution(\n    \"5\\n1 2 3 2 2\\n\") == \"0 1 3\", \"Too few hill\"\n\nassert solution(\n    \"5\\n1 2 3 2 2\\n\") == \"0 1 3\", \"Too few hill\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10010110\n100011\n\n10''') == '01'\n\nassert solution('''10010110\n110''') == '110110'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101101') == '110110'\nassert solution('10010110') == '01100011'\nassert solution('10') == '01'\n\"\"\"\nfrom functools import cmp_to_key"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '110110'\nassert solution(input()) == '01'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''101101''') == '110110'\nassert solution('''10010110''') == '01100011'\nassert solution('''10''') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''101101\n110\n\n''') == '110110'\nassert solution('''10010110\n100011\n\n''') == '01100011'\nassert solution('''10\n11100\n\n''') == '01'\nassert solution('''\n''') == ''\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('101101') == '110110'\nassert solution('110') == '01100011'\nassert solution('10') == '01'"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\"\nassert solution(\"11100\") == \"01\""
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"101101\") == \"110110\"\nassert solution(\"10010110\") == \"01100011\"\nassert solution(\"10\") == \"01\"\nassert solution(\"11100\") == \"01\"\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1110101\") == \"110110\"\nassert solution(\"10\") == \"01\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '-1'\nassert solution('1 0 0 1') == '0'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 2\") == \"1\"\nassert solution(\"3 4 1\") == \"-1\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1'\nassert solution('''3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\nOutput\n0\n''') == '-1'\nassert solution('''3 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '1'\nassert solution('''3 6 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 0 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '-1'\nassert solution('''4 7 2\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'\nassert solution('10 10 10 10') == '-1'\nassert solution('10 10 10 10 10 10 10 10 10 10') == '-1'"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''3 4 1\n1 0 0 1\n0 1 1 0\n1 0 0 1\n\nOutput\n0\n''') == '-1'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution('1') == '1'"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 0 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '1'\nassert solution('''3 4 1\n1 0 0 0\n0 1 1 1\n1 0 0 1\n\nOutput\n0\n''') == '-1'\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 2\") == \"1\"\nassert solution(\"3 4 1\") == \"0\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 2') == '1', \"Wrong!\"\nassert solution('3 4 1') == '0', \"Wrong!\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2 2 3 1 2\"\nassert solution(\"3\") == \"9999 10000 9998\""
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2 2 3 1 2'\nassert solution('4') == '2 2 3 1 2'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2 2 3 1 2\"\nassert solution(\"5\") == \"2 2 3 1 2\"\nassert solution(\"10\") == \"0 99990000 99970002\"\nassert solution(\"100\") == \"99990000 0 99980000\"\nassert solution(\"1000\") == \"99970002 99980000 0\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2 2 3 1 2\"\nassert solution(\"3\") == \"9999 10000 9998\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2 2 3 1 2'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n''') == '2 2 3 1 2'\n\nassert solution('''3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0\n\nOutput\n9999 10000 9998\n''') == '9999 10000 9998'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2 2 3 1 2'\nassert solution('3') == '9999 10000 9998'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n0 4 6 2 4\n4 0 6 2 4\n6 6 0 3 6\n2 2 3 0 2\n4 4 6 2 0\n''') == \"2 2 3 1 2\"\nassert solution('''\n3\n0 99990000 99970002\n99990000 0 99980000\n99970002 99980000 0\n\nOutput\n9999 10000 9998\n''') == \"9999 10000 9998\"\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '1 2'\nassert solution(\"3\") == '1 2 3'\nassert solution(\"4\") == '1 2 3 4'\nassert solution(\"5\") == '1 2 3 4 5'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"0 4 6 2 4\"\nassert solution(\"3\") == \"2 3 1 2\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"22\"\nassert solution() == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"22\"\n\nsolution(input())"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('6') == '22'\nassert solution('5') == '0'\nassert solution('4') == '6'"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9''') == '22'\nassert solution('''4\n11 1\n01 1\n00 100\n10 1\n01 1''') == '103'\nassert solution('''6\n11 19\n10 22\n00 18\n00 29\n11 29\n10 28''') == '105'\nassert solution('''3\n00 5000\n00 5000\n00 5000''') == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '22'\nassert solution() == '0'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '22'\nassert solution('5') == '105'\nassert solution('6') == '0'\nassert solution('3') == '0'\n\n'''\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '22'"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n''') == \"22\"\nassert solution('''5\n11 1\n01 1\n00 100\n10 1\n01 1\n''') == \"103\"\nassert solution('''6\n11 19\n10 22\n00 18\n00 29\n11 29\n10 28\n''') == \"105\"\nassert solution('''3\n00 5000\n00 5000\n00 5000\n''') == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"105\"\nassert solution(\"6\") == \"105\"\nassert solution(\"7\") == \"0\"\nassert solution(\"8\") == \"0\"\nassert solution(\"9\") == \"0\"\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"22\"\nassert solution(\"5\") == \"0\"\nassert solution(\"3\") == \"0\""
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\""
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 4 9\n1 3 1 2\n2 1 3\n4 3 6\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3 4 10\n2 3 1 2\n2 1 3\n4 3 6\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n3 4 9\n2 3 1 2\n2 1 3\n4 3 6\n\"\"\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'YES'\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'YES'\nassert solution('3 4 10') == 'YES'\nassert solution('3 4 9') == 'NO'\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 5\") == \"NO\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 5\") == \"NO\""
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4 9\n2 3 1 2\n2 1 3\n4 3 6''') == 'YES\nassert solution('''3 4 9\n1 3 1 2\n2 1 3\n4 3 6''') == 'YES\nassert solution('''3 4 9\n2 3 1 2\n2 1 3\n4 3 6''') == 'YES\nassert solution('''3 4 9\n1 3 1 2\n2 1 3\n4 3 6''') == 'YES'''\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1') == 'NO'\nassert solution('10 1') == 'YES'\nassert solution('8 1') == 'YES'\nassert solution('3 1') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n4 3 1 2\n4 3 1 2\n''') == 'YES'\nassert solution('''\n3\n3 1 2 3\n2 1 4 3\n''') == 'YES'\nassert solution('''\n4\n4 3 1 2\n3 4 2 1\n''') == 'YES'\nassert solution('''\n1\n3 1 2 3\n2 1 4 3\n''') == 'NO'\nassert solution('''\n2\n4 3 1 2\n2 1 4 3\n''') == 'NO'\n'''\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1\\n4 3 1 2') == 'NO'\nassert solution('4 1\\n4 3 1 2') == 'YES'\nassert solution('4 3\\n4 3 1 2') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 1\n2 3 4 1\n1 2 3 4\n''') == 'NO'\nassert solution('''4 1\n4 3 1 2\n3 4 2 1\n''') == 'YES'\nassert solution('''4 1\n4 3 1 2\n2 1 4 3\n''') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\\n1 2 3 4\") == \"YES\"\nassert solution(\"3 3 1 2\\n1 2 3 4\") == \"NO\"\nassert solution(\"4 3 1 2\\n3 4 2 1\") == \"YES\"\nassert solution(\"4 3 1 2\\n1 2 3 4\") == \"NO\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"4 1\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\nassert solution(\"4 1\") == \"YES\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == 'YES'\nassert solution(\"4 1\") == 'YES'\nassert solution(\"4 3\") == 'YES'\nassert solution(\"4 2\") == 'YES'\nassert solution(\"4 1\") == 'NO'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == 'YES'\nassert solution('4 1') == 'NO'\nassert solution('4 3') == 'YES'\nassert solution('4 3') == 'NO'\nassert solution('4 3') == 'YES'\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"YES\"\nassert solution(\"4 1\") == \"NO\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"4 2\") == \"NO\"\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n4\n5 6\n7\n3 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n''') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n\nassert solution('''7\n4\n5 6\n7\n3 1\n1 2\n4 1\n5 2\n2 6\n5 7\n6 6\n''') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution(\"7\") == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n\n\"\"\""
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4\\n'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'\nprint(solution(input()))\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n') == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution('7\\n') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '1 1'\nassert solution('7') == '2 1 3 4 5 6 7'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n''') == '1 1\\n3 1\\n1 5\\n4 4\\n'''\n\nassert solution('''\n7\n''') == '2 1\\n3 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'''\n\nassert solution('''\n3\n''') == '2 1\\n1 2\\n4 1\\n'''\n\nassert solution('''\n7\n''') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'''\n\nassert solution('''\n6\n''') == '5 2\\n1 5\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n'''"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'\nprint(solution(input()))\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1 1\\n3 1\\n1 5\\n4 4'\nassert solution('7') == '2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6'\nassert solution('11') == '1 1\\n3 1\\n1 5\\n4 4\\n5 2\\n2 6\\n5 7\\n6 6\\n7 6\\n3 6\\n4 6\\n7 6\\n6 6\\n5 7\\n7 6\\n6 6\\n5 7\\n4 6\\n7 6\\n6 6'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\\n\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\\n\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('3 2 1') == '-1'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\n\nassert solution([1,2,3]) == \"3\"\n\nassert solution([1,2,3,5]) == \"3\"\n\nassert solution([1,2,3,5,6,8]) == \"3\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n\n''') == '-1'\n\nassert solution('''\n3\n1 2 3\n\n''') == '3'"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1\\n\") == \"3\"\nassert solution(\"2\\n1 2\\n\") == \"4\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\"\nassert solution(\"1\\n1 2\\n\") == \"2\"\nassert solution(\"1\\n1 2 3 4 5 6\\n\") == \"0\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1\n1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n1 2 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 2 3 4\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"3\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n10\n3 4 5 6 7 8 9 10\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1\n3 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\n1 2 4 3 5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\n\"\"\"\n\nfrom functools import lru_cache"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''46 2\n''') == '7'\nassert solution('''2018 214\n''') == '92 205 1'\nassert solution('''0 0 1 0 1 1 1\n''') == '-1'\nassert solution('''0 0 1 0 1 1 1 1\n''') == '-1'\nassert solution('''2018 214\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0 1 0 1 1 1\n0 0"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n46 2\n''') == '7\\n0 1 0 0 1 1 1'\nassert solution('''\n2018 214\n''') == '3\\n92 205 1'"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'\nassert solution('20 -2') == '8'"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '93'\nassert solution('2018 109 245') == '-1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"46 2\") == \"7\"\nassert solution(\"2018 214\") == \"92 205 1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"-1\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''46 2''') == '7 0 1 0 0 1 1 1'\nassert solution('''2018 214''') == '3 92 205 1'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('46 2') == '7'\nassert solution('2018 214') == '92 205 1'\n\nassert solution('100 10') == '-1'\nassert solution('200 10000') == '3'"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"46 2\") == \"7\"\nassert solution(\"2018 214\") == \"3\"\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"7\"\nassert solution(\"\") == \"3\"\n\nfrom collections import defaultdict\nimport sys\n\nsys.setrecursionlimit(10 ** 9)\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 20 20\\n6 2\\n1 3\\n2 6\") == \"5.000000000000000\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\n\n\n'''"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == '5'\nassert solution([3, 20, 20]) == '5'\nassert solution([4, 1, 1]) == '0.400000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 10\n5 2\n1 3\n2 6\n\"\"\") == \"5.000000000000000\"\nassert solution(\"\"\"\n4 1\n2 3\n3 2\n2 3\n3 2\n\"\"\") == \"0.400000000000000\"\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 20 20\n6 2\n1 3\n2 6\n''') == '5.000000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 20 20\\n6 2\\n1 3\\n2 6') == '5.000000000000000'\nassert solution('4 1 1\\n2 3\\n3 2\\n2 3\\n3 2') == '0.400000000000000'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 2\n2 3\n3 2\n2 3\n3 2\n''') == '5.000000000000000'\nassert solution('''\n4 1 1\n2 3\n3 2\n2 3\n3 2\n''') == '0.400000000000000'\nassert solution('''\n3 2\n1 3\n2 6\n''') == '6.00000000000000'\n'''\n    pass\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1') == '1'\nassert solution('2 2 2') == '2'\nassert solution('3 3 3') == '3'\nassert solution('4 4 4') == '4'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1 1\n2 3\n3 2''') == '0.400000000000000'\nassert solution('''3 5 10\n4 5\n2 5\n3 5\n3 5\n''') == '4.99999999999999'\n\n\n'''\n\n\n\n'''"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 20 20\n6 2\n1 3\n2 6\n''') == '5.000000000000000'\nassert solution('''\n3 1 1\n2 3\n3 2\n''') == '0.400000000000000'\n'''\n1.    \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438.\n2.    \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 \u0431\u0443\u0434\u0435\u0442 \u044d\u0442\u0438\u043c \u043a\u043e\u0434\u043e\u043c:\n3.    \u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438. \u0412 \u0441\u043f\u0438\u0441\u043a\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0447\u0442\u043e\u0431\u044b \u043a\u0430\u0436\u0434\u0430\u044f \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0430 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0442\u0438\u043f:\n4.    \u0415\u0441\u043b\u0438 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0435\u0441\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b\u043c\u0438: \u043e\u043d\u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u044e\u0442\u0441\u044f \u0432 \u043e\u0434\u043d\u0443 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044e, \u0432 \u0434\u0440\u0443\u0433\u0443\u044e \u0438 \u0438\u0434\u0435\u0442 \u0440\u0430\u0437\u043c\u044b\u0442\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435.\n5.    \u0415\u0441\u043b\u0438 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0435\u0441\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b\u043c\u0438: \u043e\u043d\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u043a \u0441\u0432\u043e\u0435\u043c\u0443 \u044d\u0442\u0430\u043f\u0443 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0438\u0445 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435.\n6.    \u0415\u0441\u043b\u0438 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0435\u0441\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b\u043c\u0438: \u043e\u043d\u0438 \u043f\u043e\u043c\u0435\u0449\u0430\u044e\u0442\u0441\u044f \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044e \u0438 \u0438\u0434\u0443\u0442 \u0440\u0430\u0437\u043c\u044b\u0442\u0438\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0432 \u0441\u043f\u0438\u0441\u043a\u0435.\n7.    \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0441\u043f\u0438\u0441\u043e\u043a \u0441 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438, \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0432\u0448\u0438\u0435\u0441\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b\u043c\u0438: \u043e\u043d\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442\u0441\u044f \u043a \u0441\u0432\u043e\u0435\u043c\u0443 \u044d\u0442\u0430\u043f\u0443 \u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0439 \u0432 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0435 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f \u0438\u0445 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435.\n8.    \u041f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u0439, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432\u0441\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'\nassert solution('1000000000 5') == '9'"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n''') == '4'\nassert solution('''\n8 2\n''') == '5'\nassert solution('''\n''') == '1'\n\n'''\n    n, m = map(int, input().split())\n    if (n % 7)!= 0:\n        n = (n // 7) + 1\n    else:\n        n = n // 7\n\n    if (m % 7)!= 0:\n        m = (m // 7) + 1\n    else:\n        m = m // 7\n\n    return n * m\n'''\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 3]) == 4\nassert solution([8, 2]) == 5\nassert solution([3, 9]) == 6\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n''') == '4'\nassert solution('''\n8 2\n''') == '5'\nassert solution('''\n30 22\n''') == '9'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\""
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 3]) == 4\nassert solution([8, 2]) == 5\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"8 2\") == \"5\"\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n''') == '4'\nassert solution('''\n8 2\n''') == '5'"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 3]) == 4\nassert solution([8, 2]) == 5\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Conan'\nassert solution('2') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n4 5 7\n\n''') == 'Conan'\nassert solution('''2\n1 1\n\n''') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Conan\"\nassert solution(input_string=\"2\") == \"Agasa\"\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n7\n1 1\n4 5\n6 7\n''') == 'Conan'\nassert solution('''\n3\n4 5 7\n''') == 'Agasa'\nassert solution('''\n1\n1\n''') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4 6 8\\n') == 'Conan'\nassert solution('4\\n1 5 6\\n') == 'Agasa'\nassert solution('2\\n1 1\\n') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n1\\n4\\n2\\n5\\n') == 'Conan'\nassert solution('2\\n4\\n2\\n4\\n1\\n4\\n') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"Agasa\""
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n4 5 7') == 'Conan'\nassert solution('2\\n1 1') == 'Agasa'\nassert solution('3\\n7 2\\n1 4\\n5 6\\n3 6\\n1 6') == 'Agasa'\nassert solution('2\\n7 5\\n4 6\\n8 2\\n3 6\\n7 2\\n2 2') == 'Conan'\nassert solution('6\\n3 4 7 8 9 5\\n7 6 8 1 5\\n6 2 5 9 1\\n3 7 4 6\\n2 6 8 5\\n7 3 1 3') == 'Agasa'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'Agasa'\nassert solution('''\n3\n4 5 7\n''') == 'Conan'\nassert solution('''\n2\n1 1\n''') == 'Agasa'"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n4 5 7\n\n3\n2 3\n\n2\n1 1\n\"\"\") == \"Agasa\"\nassert solution(\"\"\"\n1\n1\n\n2\n2\n\n2\n2\n\n2\n2\n\n1\n1\n\n2\n2\n\n2\n2\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n2\n2\n\n2\n2\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n\n1\n1\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n..#\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n') == '\\n##.\\n..#\\n#.#'\nassert solution('2 2\\n') == '\\n##.\\n##.\\n#.#\\n#.#'\n'''\n\nimport sys\n\nh, w = map(int, sys.stdin.readline().strip().split())\n\ngrid = []\nfor i in range(h):\n    line = list(sys.stdin.readline().strip())\n    line[0], line[-1] = line[0], line[-1]\n    line[w-1], line[w-1] = line[w-1], line[w-1]\n    line = ''.join(line)\n    grid.append(line)\n\nfor row in range(1, h):\n    for col in range(1, w):\n        if grid[row][col] == '#':\n            if (grid[row-1][col] == '#' or grid[row][col-1] == '#') and (grid[row-1][col-1] == '#' or grid[row][col+1] == '#' or grid[row+1][col-1] == '#' or grid[row+1][col] == '#'):\n                grid[row][col] = '#'\n            else:\n                grid[row][col] = '.'\n\nfor line in grid:\n    print(line)\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n.....\n...#''') == '''2 3\n.##\n.##'''\n\nprint('''2 3\n.##\n.##''')\n\nassert solution('''4 2\n##.\n..#''') == '''4 2\n##.\n##.\n'''\n\nassert solution('''1 2\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3 3'\n\"\"\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '##.\\n.#.\\n#.#'\n\"\"\""
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"3 3\"\n\n\"\"\""
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"3 3\"\n\n'''\nfrom itertools import product\nimport sys\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"###\\n#.\\n#.#\"\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"3 3\"\nassert solution(\"3 2\") == \"2 2\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"3 2\") == \"3 2\"\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '3 3\\n##.\\n..#\\n#.#'\nassert solution('2 5') == '5 5\\n..#.#\\n.##.#\\n#.#.#\\n###.#\\n###.#'\nassert solution('3 5') == '5 5\\n###.#\\n##.##\\n#.#.#\\n#.#.#\\n###.#'\n\n\"\"\""
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5 4\\n'\n    '+ 1\\n'\n    '+ 2\\n'\n    '- 2\\n'\n    '- 1\\n') == '4\\n'\n    assert solution(\n    '3 2\\n'\n    '+ 1\\n'\n    '- 2\\n'\n    '+ 2\\n'\n    '+ 4\\n'\n    '- 4\\n') == '3\\n'\n    assert solution(\n    '2 4\\n'\n    '+ 1\\n'\n    '- 2\\n'\n    '+ 2\\n'\n    '+ 3\\n'\n    '- 3\\n'\n    ) == '0\\n'\n\n__author__ = 'artur'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '3'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"2 4\") == \"0\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4\\n1 2 3 5'\nassert solution() == '0'\nassert solution() == '3\\n2 3 5'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"2 4\") == \"0\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"2 4\") == \"0\"\n\nassert solution(\"5 6\") == \"3\"\nassert solution(\"3 2\") == \"2 3 5\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n\") == \"4\\n1 3 4 5\"\nassert solution(\"3 2\\n\") == \"1\\n3\""
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '2'\nassert solution('2 4') == '0'\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '1'\nassert solution('2 4') == '0'"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '4'\nassert solution('3 2') == '1 2'\nassert solution('5 6') == '3'"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"4\"\nassert solution(\"5 1\") == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2 3\n1 2 3\n9''') == '4'\nassert solution('''5 1\n5 4 2 4 5\n2\n5\n\n''') == '1'\nassert solution('''5 1\n5 4 2 4 5\n9''') == '0'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '1'\nassert solution('5 3') == '4'\nassert solution('9') == '4'\nassert solution('5 1') == '0'\nassert solution('5 1') == '0'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3\n1 2 3\n1 2 3\n9''') == \"4\"\nassert solution('''5 1\n5 4 2 4 5\n2\n5\n\nOutput\n1''') == \"1\""
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 3\\n\"\n    \"1 2 3\\n\"\n    \"1 2 3\\n\"\n    \"9\\n\"\n) == \"4\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2 3\\n1 2 3\\n9') == '4'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '1'\nassert solution('5 1\\n5 4 2 4 5\\n2\\n5\\n') == '0'"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 3\n1 2 3\n9\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 1\n5 4 2 4 5\n2\n5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 3\n1 2 3\n9\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5 1\n5 4 2 4 5\n2\n5\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == '1'\nassert solution('5 1') == '0'\nassert solution('3 3') == '4'\nassert solution('3 3') == '0'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\") == \"4\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"1\"\nassert solution(\"5 1\\n5 4 2 4 5\\n2\\n5\\n\") == \"0\"\nassert solution(\"3 3\\n1 2 3\\n1 2 3\\n9\\n\") == \"0\"\n\n\n'''"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'cbd'\nassert solution('4 4') == 'abda'\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"abda\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"abda\"\n\n\n'''\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('4 4') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"NO\"\nassert solution(\"4 4\") == \"abda\""
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 4') == 'cbd'\nassert solution('4 4') == 'abda'"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"NO\""
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\n\") == \"NO\"\nassert solution(\"3 4\\n\") == \"cbd\"\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\nabc') == 'bac'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == 'tokitsukaze'\nassert solution('6 1') == 'quailty'\nassert solution('6 5') == 'once again'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2\n0101\n\nOutput\nquailty''') == 'tokitsukaze'\n\nassert solution('''6 1\n010101\n\nOutput\nonce again''') == 'tokitsukaze'\n\nassert solution('''4 1\n0011\n\nOutput\nonce again''') == 'tokitsukaze'\n\nassert solution('''6 5\n010101\n\nOutput\nonce again''') == 'tokitsukaze'\n\nassert solution('''6 6\n11000101\n\nOutput\nonce again''') == 'tokitsukaze'"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n0101\n\nOutput\nquailty\n\nInput\n6 1\n010101\n\nOutput\nonce again\n\nInput\n6 5\n010101\n\nOutput\ntokitsukaze\n''') == 'quailty'\n\nassert solution('''\n6 1\n010101\n\nOutput\nonce again\n\nInput\n6 5\n010101\n\nOutput\ntokitsukaze\n''') == 'tokitsukaze'\n\nassert solution('''\n6 5\n010101\n\nOutput\nonce again\n\nInput\n6 5\n010101\n\nOutput\ntokitsukaze\n''') == 'tokitsukaze'\n\nassert solution('''\n6 1\n0101\n\nOutput\nonce again\n\nInput\n6 5\n010101\n\nOutput\ntokitsukaze\n''') == 'tokitsukaze'\n\nassert solution('''\n4 1\n0011\n\nOutput\nonce again\n\nInput\n6 5\n010101\n\nOutput\ntokitsukaze\n''') == 'tokitsukaze'\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == 'quailty'\nassert solution('6 1') == 'once again'\nassert solution('6 5') == 'tokitsukaze'\n\nprint(solution('''\n6 1\n0101\n'''))"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"tokitsukaze\"\nassert solution(\"6 1\") == \"quailty\"\nassert solution(\"4 1\") == \"once again\"\nassert solution(\"6 5\") == \"once again\"\n\"\"\""
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"tokitsukaze\"\nassert solution(input()) == \"quailty\"\nassert solution(input()) == \"once again\""
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 1\") == \"tokitsukaze\"\nassert solution(\"6 5\") == \"quailty\"\nassert solution(\"4 1\") == \"once again\"\n\n'''\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 1') == 'tokitsukaze'\nassert solution('6 5') == 'quailty'\n\"\"\""
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"quailty\"\nassert solution(\"6 1\") == \"once again\"\nassert solution(\"6 5\") == \"tokitsukaze\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\\n0101\") == \"once again\"\nassert solution(\"6 1\\n010101\") == \"tokitsukaze\"\nassert solution(\"6 5\\n010101\") == \"once again\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 50\\n20 100\\n60 10 40 80') == '50'\nassert solution('1 2 10\\n11\\n15 7') == '7'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4 50') == '50'\nassert solution('1 2 10') == '7'\n\nprint(solution('''20 100\n60 10 40 80\n\n1 2 10\n11\n15 7'''))"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4 50\") == \"50\"\nassert solution(\"1 2 10\") == \"7\""
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 4 50\n20 100\n60 10 40 80\n''') == '50'\nassert solution('''\n1 2 10\n11\n15 7\n''') == '7'"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2 10\n11''') == '7'\nassert solution('''1 2 50\n20 100\n60 10 40 80''') == '50'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 50') == '50'\nassert solution('1 2 10') == '7'\nassert solution('1 5 10') == '15'\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_str) == output_str\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 4 50\\n\"\n    \"20 100\\n\"\n    \"60 10 40 80\"\n) == \"50\"\nassert solution(\n    \"1 2 10\\n\"\n    \"11\"\n) == \"7\"\n\n\"\"\"\n\nimport math"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 10\n20 100\n60 10 40 80''') == '50'\n\n'''"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 10') == '7'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1 6\"\nassert solution(\"3 2\") == \"1 3\"\nassert solution(\"1 10\") == \"5 5\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1 6'\nassert solution('3 2') == '1 3'\nassert solution('1 10') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n1 1\n''') == '1 6'\nassert solution('''\n3 2\n0 0\n''') == '1 3'\nassert solution('''\n1 10\n5 3\n''') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_lines) == \"1 6\""
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_lines) == \"1 6\""
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 1\") == \"1 6\"\nassert solution(\"3 2\\n0 0\") == \"1 3\"\n\nassert solution(\"1 10\\n5 3\") == \"5 5\"\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3\\n1 1\\n') == '1 6'\nassert solution('3 2\\n0 0\\n') == '1 3'\nassert solution('1 10\\n5 3\\n') == '5 5'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 3\n1 1\n''') == '1 6'\n\nassert solution('''\n3 2\n0 0\n''') == '1 3'\n\nassert solution('''\n1 10\n5 3\n''') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3\n1 1\n''') == '1 6'\nassert solution('''3 2\n0 0\n''') == '1 3'\nassert solution('''1 10\n5 3\n''') == '5 5'"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1 6\"\nassert solution(\"3 2\") == \"1 6\"\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n-2 5 -1') == '2'\nassert solution('2\\n4 5 2') == '1 2'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0\\n'\nassert solution('5') == '2\\n'\nassert solution('100') == '8\\n'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\""
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('6') == '5'\nassert solution('9') == '6'\nassert solution('-2') == '2'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('100') == '1'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"2 3\"\nassert solution(\"4\") == \"2 3 3 4\"\nassert solution(\"50\") == \"2250\"\n\"\"\"\n\nn = int(input())\nsequence = input().split()\n\noperations = {}\n\nfor i, number in enumerate(sequence, 1):\n    if i % 2 == 0:\n        operations[i] = (int(number) - 1, int(number) + 1)\n    else:\n        operations[i] = (int(number) - 2, int(number) + 2)\n\nprint(len(list(operations.keys())))\n\nfor _ in range(n):\n    a, b = operations[int(input())]\n    sequence.append(str(a))\n    sequence.append(str(b))\n\nprint(' '.join(sequence))"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\n\n\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('12') == '3'\nassert solution('10') == '2'\n\"\"\""
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n\"\"\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n0 3\n1 5\n\n''') == \"3\"\n\nassert solution('''\n2\n1 10\n2 2\n\n''') == \"3\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n0 3\") == \"3\"\nassert solution(\"1\\n0 4\") == \"1\"\nassert solution(\"2\\n1 10\") == \"3\"\n\n---"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0 3\n1 5\n\n''') == '3'\nassert solution('''1 10\n2 2\n\n''') == '1'\n\n'''\n[i][j] = i%k and (2**k) - 1 <= j <= (2**(k+1) - 1)\n\nh = n // 2\nfor k in range(1, n):\n    j = h + 1\n    while True:\n        if (2**k) <= j <= (2**(k+1) - 1):\n            break\n        j += 1\n    if j < n:\n        i += j\n'''\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n0 3\n1 5\n''') == '3'\nassert solution('''\n1\n0 4\n''') == '1'\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\n\n\"\"\""
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0 3\n1 5\n''') == '3'\n\nassert solution('''\n1 10\n2 2\n''') == '3'"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([0, 3]) == \"3\"\nassert solution([1, 5]) == \"1\"\nassert solution([2, 1]) == \"1\"\nassert solution([3, 1]) == \"1\"\nassert solution([4, 1]) == \"1\""
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 18\n5 6 1 10 12 2\n''') == '16 0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'''\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n        \"6 18\"\n        \"5 6 1 10 12 2\"\n        ) == \"16\"\n\nassert solution(\n        \"3 50\"\n        \"25 25 50\"\n        ) == \"3 0 25 50\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 50\n25 25 50\n''') == '3\\n0 25 50'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 18\\n5 6 1 10 12 2') == '16'\nassert solution('3 50\\n25 25 50') == '3'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 18') == '16'\nassert solution('3 50') == '3 0 25 50'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n5 6 1 10 12 2\") == \"16\"\nassert solution(\"2\\n12 3 5 6 9\") == \"0 1 2 3 5 6 7 8 9\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n5 6 1 10 12 2\n''') == '16'\nassert solution('''\n6\n5 6 1 10 12 2\n''') == '0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 18\") == \"16 0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\""
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5\n5 6 1 10 12 2\n\"\"\"\n) == \"16 0 1 2 3 5 6 7 8 10 11 12 13 15 16 17 18\"\nassert solution(\n\"\"\"\n3\n5\n5 5 5 5 5 5\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n1\n100\n\"\"\"\n) == \"1 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\"\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 18\n5 6 1 10 12 2\n''') == '16'\nassert solution('''\n3 50\n25 25 50\n''') == '3'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n\n''') == '1'\nassert solution('''\n5\n\n''') == '3'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n''') == '3'\n\nassert solution('''\n2\n''') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2\n1\n''') == '3'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('10') == '4'\nassert solution('1000') == '5'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n') == '1'\nassert solution('6\\n') == '2'"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\n\"\"\"\nimport sys\nfrom itertools import combinations\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"1\"\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 1\n20 2\n30 3\n''') == '180'\nassert solution('''\n1\n5 10\n''') == '50'\nassert solution('''\n5\n10 10\n5 10\n5 10\n10 10\n''') == '50'\nassert solution('''\n3\n1 1\n2 2\n3 3\n''') == '21'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n10 1\n20 2\n30 3\n\n''') == '180'\nassert solution('''\n1\n5 10\n\n''') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '180'\nassert solution('1') == '50'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '180'\nassert solution('2') == '21'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"50\"\nassert solution(stdin='''\n10 1\n20 2\n30 3\n''') == \"180\"\nassert solution(stdin='''\n5 10\n''') == \"50\"\nassert solution(stdin='''\n3 1\n2 2\n4 3\n''') == \"21\""
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '180'\nassert solution('3') == '180'\nassert solution('1') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n10 1\\n20 2\\n30 3\\n') == '180'\nassert solution('2\\n3 1\\n2 2\\n4 3\\n') == '21'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n10 1\n20 2\n30 3\n\"\"\") == \"180\"\nassert solution(\"\"\"\n3\n3 1\n2 2\n4 3\n\"\"\") == \"21\"\nassert solution(\"\"\"\n1\n5 10\n\"\"\") == \"50\"\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n10 1\\n20 2\\n30 3') == '180'\nassert solution('3\\n3 1\\n2 2\\n4 3') == '21'\nassert solution('1\\n5 10') == '50'"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n10 1\n20 2\n30 3''') == '180'\n\nassert solution('''3\n3 1\n2 2\n4 3''') == '21'\n\nassert solution('''3\n5 10''') == '50'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n0 0 10\n''') == '2'\nassert solution('''5\n0 1 2 3 4\n''') == '1'\nassert solution('''4\n0 0 0 0\n''') == '4'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"9\") == \"3\"\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0 0 10''') == '2'\nassert solution('''5\n0 1 2 3 4''') == '1'\nassert solution('''4\n0 0 0 0''') == '4'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n0 0 10\\n') == '2'\nassert solution('5\\n0 1 2 3 4\\n') == '1'\nassert solution('4\\n0 0 0 0\\n') == '4'\nassert solution('9\\n0 1 0 2 0 1 1 2 10\\n') == '3'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n0 1 2 3 4\n''') == '1'\nassert solution('''9\n0 1 0 2 0 1 1 2 10\n''') == '3'\nassert solution('''4\n0 0 0 0\n''') == '4'\nassert solution('''2\n0 0\n''') == '1'\nassert solution('''1\n0\n''') == '1'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('9') == '3'"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"4\\n0 0 0 0\\n\") == \"4\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\""
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('4') == '4'\nassert solution('9') == '3'\nassert solution('10') == '1'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 0 10\n''') == '2'\nassert solution('''\n5\n0 1 2 3 4\n''') == '1'\nassert solution('''\n4\n0 0 0 0\n''') == '4'\n\nimport collections\nfrom typing import List\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n0 0 10\\n\") == \"2\"\nassert solution(\"5\\n0 1 2 3 4\\n\") == \"1\"\nassert solution(\"9\\n0 1 0 2 0 1 1 2 10\\n\") == \"3\""
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n0 0\\n0 1\\n1 0\\n1 1\") == \"5\""
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 0\n0 1\n1 0\n1 1\n''') == '5'\nassert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n''') == '5'\nassert solution('''\n2\n0 0\n1 0\n''') == '4'\nassert solution('''\n1\n0 0\n''') == '3'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0 0\n0 1\n1 0\n1 1\n''') == '3', \"Sample Test\"\nassert solution('''4\n0 0\n0 1\n1 0\n1 1\n''') == '6', \"Sample Test\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n0 0\n0 1\n1 0\n1 1''') == '6'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"4\") == \"5\"\nassert solution(\"6\") == \"18\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 1\\n1 1') == '5', 'Wrong'\nassert solution('10\\n2 3\\n3 6\\n5 4\\n4 5\\n6 4\\n4 6\\n7 3\\n1 6\\n1 1\\n1 4\\n2 5\\n3 1\\n5 7\\n7 6\\n5 5\\n1 1\\n8 7\\n7 4\\n5 3\\n6 2\\n5 6\\n5 7\\n3 3\\n1 3\\n8 8\\n7 4\\n3 5\\n4 7\\n6 7\\n1 6\\n6 3\\n4 8\\n7 5\\n5 4\\n7 8\\n8 8\\n1 6\\n3 1\\n5 2\\n5 3\\n8 8\\n6 1\\n1 2\\n2 4\\n5 3\\n2 5\\n2 5\\n1 1\\n2 7\\n6 2\\n6 7\\n5 4\\n4 6\\n3 4\\n1 4\\n3 1\\n4 6\\n7 7\\n5 4\\n4 1\\n1 7\\n5 3\\n4 3\\n1 6\\n7 2\\n7 2\\n4 8\\n3 5\\n5 7\\n7 4\\n5 7\\n3 6\\n7 8\\n7 4\\n3 6\\n6 4\\n1 6\\n1 1\\n1 4\\n1 6\\n5 7\\n2 5\\n2 5\\n1 1\\n5 5\\n6 6\\n1 4\\n5 7\\n5 6\\n5 6\\n5 7\\n5 1\\n6 4\\n4 7\\n5 1\\n1 7\\n5 1\\n2 7\\n6 5\\n2 7\\n6 5\\n2 6\\n3 5\\n6 5\\n6 6\\n5 1\\n1 1\\n1 4\\n5 6\\n5 1\\n1 7\\n3 4\\n7 5\\n5 6\\n2 6\\n1 1\\n5 6\\n7 1\\n6 4\\n1 7\\n6 3\\n1 3\\n6 1\\n1 7\\n5 5\\n4 7\\n6 7\\n4 3\\n1 3\\n4 7\\n2 6\\n5 6\\n2 1\\n4 4\\n1 3\\n3 7\\n2 6\\n2 4\\n4 2\\n6 7\\n1 1\\n7 2\\n1 7\\n1 2\\n1 3\\n2 5\\n2 7\\n4 6\\n7 5\\n1 1\\n5 4\\n5 3\\n4 5\\n4 6\\n5 4\\n4 6\\n3 4\\n3 5\\n2 7\\n3 7\\n6 4\\n7 6\\n6 6\\n5 2\\n5 2\\n4 3\\n5 3\\n3 7\\n1 3\\n5 5\\n6 5\\n3 6\\n1 4\\n5 4\\n5 3\\n1 3\\n5 5\\n5 2\\n4 6\\n6 4\\n1 3\\n4 4\\n1 7\\n1 7\\n5 1\\n3 4\\n3 5\\n5 3\\n7 1\\n6 5\\n7 3\\n7 7\\n5 6\\n4 5\\n1 4\\n1 7\\n4 6\\n5 2\\n3 5\\n2 4\\n2 4\\n3 6\\n5 7\\n4 3\\n5 2\\n2 7\\n4 5\\n2 4\\n1 1\\n3 4\\n3 5\\n6 7\\n4 1\\n2 2\\n5 4\\n3 4\\n1 5\\n5 7\\n4 4\\n6 5\\n1 1\\n4 4\\n5 6\\n3 5\\n3 4\\n2 6\\n5 4\\n5 5\\n6 7\\n4 4\\n5 7\\n3 5\\n2 5\\n5 3\\n6 1\\n7 5\\n5 6\\n6 7\\n1 6\\n3 6\\n5 6\\n1 4\\n2 5\\n5 3\\n3 6\\n1 4\\n2 6\\n7 6\\n6 5\\n4 5\\n5 6\\n1 6\\n7 5\\n2 5\\n5 2\\n5 1\\n2 4\\n1 3\\n1 2\\n5 4\\n5 4\\n4 4\\n3 5\\n4 6\\n7 3\\n7 5\\n3 6\\n1 3\\n5 4\\n2 5\\n4 2\\n2 2\\n2 5\\n3 7\\n1 5\\n5 6\\n7 6\\n1 6\\n4 6\\n4 5\\n3 7\\n2 6\\n3 5\\n5 5\\n7 2\\n5 7\\n5 4\\n5 6\\n1 6\\n7 5\\n5 6\\n4 4\\n3 7\\n1 4\\n3 5\\n4 5\\n1 3\\n1 6\\n3 7\\n6 7\\n2 6\\n5 6\\n1 3\\n7 1\\n4 6\\n3 5\\n3 4\\n4 6\\n6 7\\n1 5\\n4 6\\n4 4\\n4 7\\n4 7\\n7 4\\n7 6\\n6 6\\n2 6\\n3 4\\n5 3\\n5 3\\n5 3\\n1 4\\n4 3\\n4 5\\n1 4\\n4 6\\n2 4\\n5 7\\n1 6\\n7 2\\n2 1\\n1 2\\n2 4\\n5 2\\n3 4\\n6 4\\n7 5\\n5 3\\n5 3\\n2 5\\n2 4\\n5 4\\n1 4\\n3 5\\n3 5\\n3 4\\n4 5\\n4 5\\n6 5\\n3 6\\n2 5\\n3 5\\n5 2\\n3 7\\n5 2\\n2 6\\n2 3\\n4 6\\n4 5\\n4 3\\n4 5\\n5 1\\n2 5\\n3 5\\n3 5\\n4 5\\n5 7\\n1 6\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\n1 3\\"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1\\n') == '5'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n0 0\n0 1\n1 0\n1 1\n\n''') == '5'\nprint(solution('''4\n0 0\n0 1\n1 0\n1 1\n\n'''))\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5'\nprint(solution('''1\n0 0\n0 1\n1 0\n1 1'''))\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n0 0\n0 1\n1 0\n1 1\n\n''') == '5'\nassert solution('''\n5\n0 0\n0 1\n1 0\n1 1\n0 -1\n1 0\n0 1\n\n''') == '8'\nassert solution('''\n6\n-7 0\n-5 0\n-3 0\n-2 0\n2 0\n3 0\n\n''') == '10'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2\\n\") == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '3'\n    'B 1'\n    'W 2'\n    'B 3'\n    'W 1'\n    'W 3'\n    'B 2'\n    ) == '4'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\") == \"4\"\n\"\"\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3\\n\"\n    \"B 1\\n\"\n    \"W 2\\n\"\n    \"B 3\\n\"\n    \"W 1\\n\"\n    \"W 3\\n\"\n    \"B 2\\n\"\n) == \"4\\n\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nB 1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '4'\nassert solution('1\\nW 2\\nB 3\\nW 1\\nW 3\\nB 2') == '0'"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\n\n\"\"\"\nimport sys"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\nB 1\nW 2\nB 3\nW 1\nW 3\nB 2\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n6\n3\n\n''') == \"4\"\nassert solution('''\n5\n3\n5\n\n''') == \"4\"\nassert solution('''\n3\n3\n5\n\n''') == \"4\"\nassert solution('''\n1\n2\n2\n\n''') == \"2\"\nassert solution('''\n2\n1\n2\n\n''') == \"3\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_str) == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6\\n3\\n\") == \"4\"\nassert solution(\"5\\n3\\n5\\n\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"4\""
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\nassert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n6\n3\n''') == '4'\nassert solution('''5\n3\n5\n''') == '4'\nassert solution('''5\n5\n3\n''') == '4'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n6\\n3\") == \"4\"\nassert solution(\"5\\n3\\n5\") == \"4\"\nassert solution(\"1\") == \"1\""
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n6\\n3') == '4'\nassert solution('5\\n3\\n5') == '4'\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"4\"\nassert solution(\"3\") == \"4\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4, 2]) == 2\nassert solution([8, 1, 2, 4, 8, 16, 32, 64, 576]) == 32\n\n\n\n\"\"\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2', \"Wrong\"\nassert solution('8 1 2 4 8 16 32 64 576') == '32', \"Wrong\"\nassert solution('4 6 12 16 32 64') == '32', \"Wrong\"\nassert solution('7') == '7', \"Wrong\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n\") == \"2\"\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '5'\nassert solution('9') == '27'\nassert solution('6') == '9'\n\n\"\"\""
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4,2]) == '2'\nassert solution([8,1,2,4,8,16,32,64,576]) == '32'\nassert solution([8,1,2,4,8,16,32,64,576]) == '32'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n') == '3'\nassert solution('4\\n4\\n') == '4'\nassert solution('2\\n3\\n') == '4'\nassert solution('8\\n1 2 4 8 16 32 64 576\\n') == '32'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n4 2\n''') == '2'\nassert solution('''8\n1 2 4 8 16 32 64 576\n''') == '32'"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"32\"\nassert solution(\"8 2\\n\") == \"32\"\nassert solution(\"4 2\\n\") == \"4\""
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('4 2') == '4'\nassert solution('8 1 2 4 8 16 32 64 576') == '32'\nassert solution('8 -1 2 4 8 16 32 64 576') == '32'\nassert solution('8 1 2 4 8 16 32 64 576 -1') == '32'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 2\n2 4''') == '2'\nassert solution('''8 1 2 4 8 16 32 64 576''') == '32'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n1\n2\n3\n2\n4\n5\n6\n10\n''') == '2'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '2'\nassert solution('20 20') == '3'\nassert solution('30 30') == '3'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4\\n100 300 450 500\\n') == '2'\nassert solution('5 2\\n100 25\\n') == '3'\nassert solution('10 2\\n100 25\\n') == '-1'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 4\\n100 300 450 500\\n\") == \"2\"\nassert solution(\"50 2\\n100 25\\n\") == \"3\"\n\nprint(solution(input()))"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 4\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''400 4\n100 300 450 500\n''') == '2'\n\nassert solution('''50 2\n100 25\n''') == '3'\n\nassert solution('''100 5\n10 10 100 20 80\n''') == '4'"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"2\""
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n100 300 450 500\n''') == '2'\nassert solution('''50 2\n100 25\n''') == '3'\n\nassert solution('''50 1\n100 100\n''') == '-1'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n4\\n100 300 450 500') == '2'\nassert solution('1\\n1\\n100') == '1'\nassert solution('100 10\\n15000 25\\n80000') == '3'\nassert solution('50 2\\n100 25\\n1') == '2'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2\n''') == '6'\nassert solution('''5 3\n''') == '6'\nassert solution('''5 4\n''') == '6'\nassert solution('''5 5\n''') == '6'\nassert solution('''5 6\n''') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '6'\nassert solution('5 1') == '6'\nassert solution('1 1') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"6\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == '6'\nassert solution('3 2') == '2'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"4 2\") == \"6\"\nassert solution(\"5 2\") == \"8\"\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '6'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n''') == '6'\nprint(solution('''\n3 3\n'''))\nprint(solution('''\n4 1\n'''))"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '6'\nassert solution('3 3') == '6'\n\n'''\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '499122178'\nassert solution('6') == '29085314'\nassert solution('10') == '404603495'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"2\") == \"499122178\"\nassert solution(\"1\") == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '499122178'\nassert solution('4') == '499322808'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"499122178\"\nassert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\nassert solution(\"5\") == \"499122178\"\nassert solution(\"6\") == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '499122178\\n'\nassert solution('3\\n') == '499122178\\n'\nassert solution('10\\n') == '499122178\\n'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '499122178'\nassert solution('20') == '499122178'\nassert solution('12') == '5'\nassert solution('25') == '499122178'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '499122178'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"499122178\"\nassert solution(\"2\") == \"499122178\"\nassert solution(\"1\") == \"499122178\"\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.5'\nassert solution('2') == '0.3333333333333333'\n\n\"\"\"\n\nfrom math import sqrt, floor\nfrom collections import Counter, deque, defaultdict\nfrom functools import lru_cache"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"499122178\"\nassert solution(\"2\") == \"499122178\"\nassert solution(\"3\") == \"499122178\"\nassert solution(\"4\") == \"499122178\"\nassert solution(\"5\") == \"499122178\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n2\n''') == '2'\nassert solution('''\n3\n''') == '3'\nassert solution('''\n4\n''') == '4'\nassert solution('''\n5\n''') == '5'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n\") == \"6\", \"First test case\"\nassert solution(\"9\\n\") == \"666\", \"Second test case\"\nassert solution(\"11\\n\") == \"10\", \"Third test case\"\nassert solution(\"1\\n\") == \"-1\", \"Fourth test case\""
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\"\nassert solution(\"100\") == \"-1\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"666\"\nassert solution(\"2\") == \"6\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\"\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n''') == '6'\nassert solution('''2\n3\n''') == '6669'\nassert solution('''3\n4\n''') == '6669'\nassert solution('''4\n5\n''') == '6669'\nassert solution('''5\n6\n''') == '6669'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == -1\nassert solution('2') == 6\nassert solution('3') == 6669\nassert solution('10') == -1\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '6'\nassert solution('10') == '6669'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6669\"\nassert solution(\"10\") == \"-1\"\n\n\n'''\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1 4 3 2 0'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n''') == '-1'\nassert solution('''2\n''') == '2 4 3 2 0'\nassert solution('''5\n1 4 3 2 0''') == '1 4 3 2 0'\nassert solution('''5\n1 0 2 4 3''') == '1 0 2 4 3'\nassert solution('''5\n1 0 2 4 3''') == '1 0 2 4 3'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1 4 3 2 0\"\nassert solution(\"2\") == \"-1\"\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '-1'\nassert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n') == '1 4 3 2 0'\nassert solution('2\\n') == '-1'\n\n\"\"\""
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n''') == '1 4 3 2 0'\nassert solution('''2\n''') == '-1'"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 4 3') == 'No'\nassert solution('3\\n1 2\\n1 3\\n2 3') == 'Yes'\nassert solution('1\\n2 3\\n3 4\\n2\\n') == 'No'\nassert solution('5\\n1 2\\n1 3\\n2 4\\n3 4\\n4 5') == 'Yes'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'Yes'\nassert solution('4\\n1 2\\n1 3\\n2 4\\n1 2 3 4') == 'No'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n1 3\\n2 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\") == \"No\"\nassert solution(\"3\\n1 2\\n1 3\\n2 4\") == \"No\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\nassert solution('''5\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'No'"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"No\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\"\n\n\"\"\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes', 'first'\nassert solution('''\n5\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No','second'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No'\n\nstdin = '''\n6\n1 2\n1 3\n2 4\n1 2 3 4\n1 2 4 3\n1 3 2 4\n2 4 1 3\n2 4 1 3\n2 4 3 1\n3 1 4 2\n3 1 4 2\n3 1 4 2\n2 3 4 1\n2 3 4 1\n2 4 3 1\n3 4 1 2\n3 4 1 2\n3 4 2 1\n2 4 3 1\n2 4 3 1\n2 4 1 3\n'''\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"Yes\"\nassert solution() == \"No\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 3 4\") == \"Yes\"\nassert solution(\"4\\n1 2\\n1 3\\n2 4\\n1 2 4 3\") == \"No\"\n\n'''\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 6 5\\n1 2 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-1\""
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 6 5') == \"24500\"\nassert solution('2 4 5') == \"-1\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 5') == '24500'\nassert solution('2 5 5') == '-1'\nassert solution('20 10 1') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 5 3\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 7000\n''') == '24500', 'First sample test'\n\nassert solution('''\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 7000\n''') == '-1', 'Second sample test'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5 5') == '24500'\nassert solution('2 4 5') == '-1'\n\n'''\n\nfrom typing import List"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 6 5\n1 1 0 5000\n3 2 0 5500\n2 2 0 6000\n15 0 2 9000\n9 0 1 7000\n8 0 2 6500\n\"\"\") == \"24500\"\n\nassert solution(\"\"\"\n2 4 5\n1 2 0 5000\n2 1 0 4500\n2 1 0 3000\n8 0 1 6000\n\"\"\") == \"25000\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 6 5\") == \"24500\"\nassert solution(\"2 4 5\") == \"25000\"\nassert solution(\"3 2 0 5500\") == \"24500\"\nassert solution(\"15 0 2 9000\") == \"25000\"\nassert solution(\"9 0 1 7000\") == \"25000\"\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 0 5000') == '24500'\nassert solution('2 4 5') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\\n') == '24500'\nassert solution('2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\\n') == '-1'"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 6 5\\n1 1 0 5000\\n3 2 0 5500\\n2 2 0 6000\\n15 0 2 9000\\n9 0 1 7000\\n8 0 2 6500\") == \"24500\"\nassert solution(\"2 4 5\\n1 2 0 5000\\n2 1 0 4500\\n2 1 0 3000\\n8 0 1 6000\") == \"-\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\nassert solution('3 3 30') == '1.000000'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1 45\n''') == '0.828427125'\nassert solution('''\n6 4 30\n''') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 45\\n') == '0.828427125'\nassert solution('6 4 30\\n') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\nassert solution('1') == '0.0'\nassert solution('5 1 1') == '0.25'\nassert solution('1 1 0') == '0.0'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 5 45\n\"\"\") == \"19.668384925\"\nassert solution(\"\"\"\n6 6 30\n\"\"\") == \"0.828427125\"\n\"\"\")\nassert solution(\"\"\"\n1 2\n\"\"\") == \"1.000000\"\nassert solution(\"\"\"\n1 0\n\"\"\") == \"1.000000\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1 1 45\\n\"\n) == \"0.828427125\"\nassert solution(\n    \"6 4 30\\n\"\n) == \"19.668384925\""
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 45\\n\") == '0.828427125'\nassert solution(\"6 4 30\\n\") == '19.668384925'"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n5\n90\n''') == \"0.5\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 45\\n') == '0.828427125'\nassert solution('6 4 30\\n') == '19.668384925'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n''') == '3000'\nassert solution('''\n3 4\nATK 10\nATK 100\nATK 1000\n1\n11\n101\n1001\n''') == '992'\nassert solution('''\n2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n''') == '1'\nassert solution('''\n3 5\nATK 1000\nATK 2000\nATK 3000\nDEF 2500\nDEF 2000\n''') == '932'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n''') == '3000'\nassert solution('''3 4\nATK 10\nATK 100\nATK 1000\n1\n11\n101\n1001\n\n''') == '992'\nassert solution('''2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n\n''') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\nATK 2000\\nDEF 1700\\n2500\\n2500\\n2500\\n') == '3000'\nassert solution('3 4\\nDEF 0\\nATK 0\\n0\\n1\\n') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '3000'\nassert solution('3 4') == '992'\nassert solution('2 4') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\nATK 0\nATK 0\nATK 0\nDEF 0\n''') == '1'\nassert solution('''2 4\nATK 0\nATK 0\nATK 0\nDEF 0\n''') == '2'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 3]) == \"3000\"\nassert solution([3, 4]) == \"992\""
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '3000'\nassert solution('3 4') == '992'\nassert solution('2 4') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '992'\nassert solution('2 3') == '3000'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '3000'\nassert solution('3 4') == '992'\nassert solution('2 4') == '1'"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 3, 'ATK 2000', 'DEF 1700', '2500', '2500', '2500', '2500', '2500', '2500']) == '3000'\nassert solution([2, 4, 'ATK 10', 'ATK 100', 'ATK 1000', '1', '11', '101', '1001', '1']) == '992'\nassert solution([2, 4, 'DEF 0', 'ATK 0', '0', '0', '1', '1', '1', '1']) == '1'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n2 2 1 2 1''') == '2'\nassert solution('''2 2\n1 2\n0 0\n2 1 -100 -100''') == '2'\nassert solution('''5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4''') == '62'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\n\nassert solution('''\n2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2'\n\nassert solution('''\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62'\n\n\"\"\""
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '6'\nassert solution('2 2') == '2'\nassert solution('5 3 2 1 1') == '4'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '6'\nassert solution('2 2') == '2'\nassert solution('5 5') == '-1'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '6'\nassert solution('2 2') == '2'\nassert solution('5 4') == '62'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"6\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\nassert solution('''\n2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2'\nassert solution('''\n5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62'\n\nstdin = '''\n5 4\n4 3 1 2 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n'''\nprint(solution(stdin))"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n4 3 1 2 1\\n1 2 1 2 1\\n1 2 3 4 5 6 7 8 9\\n') == '6'\nassert solution('2 2\\n1 2\\n0 0\\n2 1 -100 -100\\n') == '2'"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\nassert solution('''2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2'\nassert solution('''5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '6'\nassert solution('2 2') == '2'\nassert solution('5 4') == '62'\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('aabb') == 'NO'\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abaa') == 'YES'\nassert solution('aabb') == 'NO'\nassert solution('bbaa') == 'YES'\n\nimport os\nimport sys\n\nfrom io import StringIO\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('aabb') == 'NO'"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"bbaa\") == \"NO\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abab') == 'NO'\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''aaba\nabaa''') == 'YES'\nassert solution('''aabb\nabab''') == 'NO'\nprint('All Tests Passed!')"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"bbaa\") == \"NO\"\nassert solution(\"aaba\") == \"YES\"\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abab\") == \"NO\""
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaba') == 'YES'\nassert solution('abab') == 'NO'\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"YES\", \"Case 1\"\nassert solution(\"2\") == \"NO\", \"Case 2\""
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n1 2\n\"\"\") == \"YES\", \"example\"\n\nassert solution(\"\"\"\n3\n1 2\n\"\"\") == \"NO\", \"example\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n\n1 2 3 4\n''') == \"YES\"\n\nassert solution('''\n4\n\n1 2 3 4\n''') == \"NO\"\n\nassert solution('''\n6\n\n1 3 5 2 4 6\n''') == \"YES\"\n\nassert solution('''\n6\n\n1 3 5 2 4 6\n''') == \"NO\"\n\nassert solution('''\n8\n\n1 3 4 2 5 6 7 8\n''') == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    1\n''') == 'NO'\nassert solution('''\n    2\n''') == 'YES'"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\""
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'NO'\nassert solution('1') == 'YES'\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'NO'\nassert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\n\nstdin = \"\"\"2\n1\n2\n\"\"\""
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n3\n\n''') == 'YES'\nassert solution('''1\n2\n\n''') == 'NO'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('5 3') == 'Yes'\nassert solution('6 3') == 'No'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"No\"\nassert solution(\"6 3\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\nassert solution(\"8 2\") == \"No\"\nassert solution(\"4 3\") == \"Yes\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\nab\nac\ncd\n1 2\n\n''') == 'Yes'\nassert solution('''\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n\n''') == 'Yes'\nassert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\n''') == 'No'\nassert solution('''\n7 4\na\nb\nc\ndd\n.\n.\n1 2 3\n\n''') == 'Yes'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"5 3\") == \"Yes\"\nassert solution(\"6 3\") == \"No\"\nassert solution(\"4 4\") == \"No\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == \"Yes\"\nassert solution(f) == \"?es?\"\nassert solution(w) == \"No\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"Yes\", \"Should be Yes\"\nassert solution() == \"No\", \"Should be No\"\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('5 3') == 'Yes'\nassert solution('4 4') == 'No'\nassert solution('6 3') == 'No'\nassert solution('5 3') == 'Yes'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\nab\nac\ncd\n1 2\n''') == 'Yes'\nassert solution('''\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n''') == 'Yes'\nassert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == 'No'\n\n\n## Task description:\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 2 3\n''') == 'Yes'\nassert solution('''4 4\na\nb\nc\ndd\n1 2 3\n\n''') == 'No'\nassert solution('''6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == 'Yes'\nassert solution('''5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 2 3\n\n''') == 'No'\nassert solution('''6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n\n''') == 'Yes'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == 'Yes'\nassert solution('5 5') == 'No'\nassert solution('5 2') == 'No'\nassert solution('4 4') == 'Yes'\nassert solution('6 6') == 'No'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\") == \"1\\n\"\nassert solution(\n    \"3\") == \"2\\n\"\nassert solution(\n    \"10\") == \"4\\n\""
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"5 2 3 1\") == \"2\"\nassert solution(\"2 3 1 2\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('2\\n1 1\\n') == '1'\nassert solution('5\\n1 2 3 4 5\\n') == '1'"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('10') == '3'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('1 2 3 4 5') == '2'\n\n-- Approach --\n\"\"\"\n--- My approach ---\n## create a array of length n\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2 3\n''') == '2'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('3\\n1 2 3') == '3'\nassert solution('3\\n1 2 3') == '4'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('6') == '2'"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n9 9 9 9 9 9 9 9 9') == '10'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\n\"\"\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('6') == '0'\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2\\n2 3\\n3 4\") == \"2\"\nassert solution(\"10\\n1 2\\n3 4\\n5 6\\n7 8\\n9 10\\n11 12\\n13 14\\n15 16\") == \"3\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n5 6\\n7 8\") == \"1\"\n\"\"\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\n\"\"\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 2\nassert solution('4') == 2\nassert solution('5') == 2\n\"\"\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 5\n''') == '4'\nassert solution('''10 3 10\n''') == '5'\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 2 5\n''') == '4'\nassert solution('''\n10 3 10\n''') == '5'\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2 5\n''') == \"4\"\n\nassert solution('''\n10 3 10\n''') == \"5\"\n\nassert solution('''\n12 3 5\n''') == \"7\"\n\nassert solution('''\n15 3 6\n''') == \"7\"\n\nassert solution('''\n2 5 2\n''') == \"1\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 2 5\") == \"4\"\nassert solution(\"10 3 10\") == \"5\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"1\"\nassert solution(\"0 0 1 1 1 0 0 1\") == \"2\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 2 5\n3\n1\n1\n3''') == \"4\"\nassert solution('''10 3 10\n3\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == \"5\""
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2 5\\n') == '4'\nassert solution('10 3 10\\n') == '5'\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n7 2 5\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n10 3 10\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '1 2 3 4 5', solution('5 6')\nassert solution('4 4') == '1 2 3 4 5', solution('4 4')\n\n\"\"\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 6') == '1 2 3 4 5'\nassert solution('4 4') == '1 2'"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '2'\nassert solution('4 4') == '1'\n\n\"\"\"\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '1'\nassert solution('1 4') == '2'\nassert solution('1 5') == '2'\nassert solution('2 3') == '1'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 4\"\n    ) == \"1\"\nassert solution(\n    \"5 5\"\n    ) == \"2\"\nassert solution(\n    \"6 6\"\n    ) == \"3\"\n\n\n\nstdin = input()\n\nn, m = map(int, stdin.split())\n\nG = []\nfor i in range(n):\n    G.append([])\nfor i in range(m):\n    a, b = map(int, stdin.split())\n    G[a - 1].append(b - 1)\n    G[b - 1].append(a - 1)\n\n\nG = sorted(G, key=lambda x: len(x))\n\nstep = 0\nfor g in G:\n    if len(g) == 1:\n        continue\n    step += 1\n    for i in g:\n        for j in g:\n            if i!= j:\n                g.append(j)\n                g.remove(i)\n                break\n    \nprint(step)\nfor g in G:\n    print(\" \".join(map(str, g)))"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '2'\nassert solution('4 4') == '1'\nassert solution('3 4') == '1 2'\n\"\"\"\nfrom typing import Dict\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"1\"\nassert solution(\"4 4\") == \"1\"\n\n---\n\nInput\n5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5\n\nOutput\n2\n2 3 \nInput\n4 4\n1 2\n1 3\n1 4\n3 4\n\nOutput\n1\n1 "
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"2\"\nassert solution(\"4 4\") == \"1\""
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '2'\nassert solution('4 4') == '1'\nassert solution('2 5') == '1'\nassert solution('10 11') == '5'\nassert solution('30 30') == '3'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 6\\n1 2\\n1 3\\n2 3\\n2 5\\n3 4\\n4 5\") == \"1\\n2 3\\n\"\nassert solution(\"4 4\\n1 2\\n1 3\\n1 4\\n3 4\\n\") == \"1\\n1\\n1 2\\n1 3\\n1 4\\n2 3\\n\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'Yes'\nassert solution('3') == 'No'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n75 150 75 50\\n') == 'Yes'\nassert solution('3\\n100 150 250\\n') == 'No'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\"\n\nassert solution() == \"No\"\n\"\"\"\nn = int(input())\na = list(map(int, input().split()))\n\ns = 0\n\nfor i in range(n):\n    s += a[i]"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n100 150 250\n\n2\n150 150\n''') == 'Yes'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n75 150 75 50\\n') == 'Yes'\nassert solution('3\\n100 150 250\\n') == 'No'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'No'\nassert solution('4') == 'Yes'"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n75 150 75 50\\n') == 'Yes'\nassert solution('3\\n100 150 250\\n') == 'No'\n\n\n\"\"\"\n\n\"\"\"\nn = int(input())\n\nd = {}\n\nfor i in range(n):\n    a = list(map(int, input().split()))\n    for j in range(1, len(a)):\n        if a[j-1] <= a[j]:\n            d[j] = d.get(j, 0) + a[j]\n\nfor i in range(1, len(d)+1):\n    if d.get(i) == None:\n        print('No')\n    else:\n        print('Yes')\n\"\"\"\n\nn = int(input())\n\nd = {}\n\nfor i in range(n):\n    a = list(map(int, input().split()))\n    for j in range(1, len(a)):\n        d[j] = d.get(j, 0) + a[j]\n\nfor i in range(1, len(d)+1):\n    if d.get(i) == None:\n        print('No')\n    else:\n        print('Yes')"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n75 150 75 50\\n') == 'Yes'\nassert solution('3\\n100 150 250\\n') == 'No'\n\"\"\"\n\n\"\"\"\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0433\u0440\u043e\u043a\u043e\u0432 n, \u0438 \u043c\u0430\u0441\u0441\u0438\u0432, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 n \u0447\u0438\u0441\u0435\u043b. \u0423 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u0438\u0433\u0440\u043e\u043a\u043e\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043e\u0434\u043d\u043e \u0438\u0437 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u043c\u0430\u0441\u0441\u0438\u0432\u0430:\n1 \u2264 a_1 \u2264 100 \u2014 \u0437\u0430\u0434\u0430\u0447\u0430 \u043e \u0441\u043e\u0431\u0430\u043a\u0435.\n2 \u2264 a_2 \u2264 100 \u2014 \u0437\u0430\u0434\u0430\u0447\u0430 \u043e \u0441\u043e\u0431\u0430\u043a\u0435.\n3 \u2264 a_3 \u2264 100 \u2014 \u0437\u0430\u0434\u0430\u0447\u0430 \u043e \u0441\u043e\u0431\u0430\u043a\u0435.\n\u0417\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0439 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442.\n\"\"\"\n\nn = int(input())\narray = list(map(int, input().split()))\n\nfor i in range(n):\n    if array[i] == array[i-1] or array[i] == array[i-2]:\n        array[i] *= 2\n        array[i-1] *= 3\n\nprint(array)"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Yes\", \"1st sample\"\nassert solution(\"2\") == \"No\", \"2nd sample\"\nassert solution(\"3\") == \"Yes\", \"3rd sample\"\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n75 150 75 50\n''') == 'Yes'\nassert solution('''\n3\n100 150 250\n''') == 'No'"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n20 10 10\n''') == '30'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '150'\nassert solution() == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n50 50 50\") == \"150\"\nassert solution(\"2\\n-1 -100 -1\") == \"100\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"150\"\nassert solution(\"2\") == \"100\"\nassert solution(\"-1\") == \"100\"\nassert solution(\"-1\") == \"150\"\nassert solution(\"0\") == \"0\"\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '150'\nassert solution('2') == '100'\nassert solution('2') == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"150\"\nprint(solution(input_string))\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '150'\nassert solution('2') == '100'"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n50 50 50\n''') == '150'\nassert solution('''2\n-1 -100 -1\n''') == '100'\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"150\"\nassert solution(input()) == \"100\""
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([50, 50, 50]) == 150\nassert solution([-1, -100, -1]) == 100\nassert solution([-1, 100, -1]) == 0"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"2 8\") == \"1\"\nassert solution(\"6 2\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\nab a\ncc c\nca a\nee c\nff d\n''') == 4\nassert solution('''\n6 2\nbb a\nba a\n''') == 0\nprint(solution(input()))"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 5\nab a\ncc c\nca a\nee c\nff d\n''') == '4'\nassert solution('''6 2\nbb a\nba a\n''') == '0'\nprint('all tests passed')\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 5\nab a\ncc c\nca a\nee c\nff d\n''') == '4'\nassert solution('''6 2\nbb a\nba a\n''') == '0'\nassert solution('''6 10\nbb a\nba a\na c\nca a\ncb c\ncc c\n''') == '11'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nca a\\nee c\\nff d\\n\") == \"4\"\nassert solution(\"2 8\\naf e\\ndc d\\ncc f\\nbc b\\nda b\\neb a\\nbb b\\nff c\\n\") == \"1\"\nassert solution(\"6 2\\nbb a\\nba a\\n\") == \"0\"\nprint(solution(input()))"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\nab a\\ncc c\\nc a\") == \"4\"\nassert solution(\"6 2\\nab a\\nbb b\") == \"1\"\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"4\"\nassert solution(\"2 8\") == \"1\"\nassert solution(\"6 2\") == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5\nab a\ncc c\nca a\nee c\nff d\n''') == \"4\"\nassert solution('''\n2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n''') == \"1\"\nassert solution('''\n6 2\nbb a\nba a\n''') == \"0\""
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5\nab a\ncc c\nca a\nee c\nff d\n\n2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n\n6 2\nbb a\nba a\n''') == '4'\nprint(\"All tests passed!\")"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5') == '4'\nassert solution('2 8') == '1'\nassert solution('6 2') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n''') == '10'\nassert solution('''1\n''') == '1'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == '3'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == '10'\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == '0'"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n''') == '1'\nassert solution('''\n3\n''') == '10'\n''')\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n1''') == '1'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n2\n3\n''') == '0'\nassert solution('''3\n3\n2\n''') == '3'\nassert solution('''4\n4\n3\n''') == '6'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"4 1\") == \"1.250000000000\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1.000000000000'\nassert solution('3 1') == '1.000000000000'\nassert solution('4 1') == '1.250000000000'\nassert solution('1 3') == '-1'\nassert solution('3 3') == '1.5000000000000'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 1\n\"\"\") == \"1.000000000000\"\nassert solution(\"\"\"\n1 3\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n4 1\n\"\"\") == \"1.250000000000\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\nassert solution('5 2') == '-1'"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\""
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"1.000000000000\"\nassert solution(\"1 3\") == \"-1\"\nassert solution(\"4 1\") == \"1.250000000000\"\nprint(solution(input()))"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n\n\"\"\") == \"1.000000000000\"\n\nassert solution(\"\"\"\n\n\"\"\") == \"-1\"\n\nassert solution(\"\"\"\n\n\"\"\") == \"1.250000000000\"\n\nassert solution(\"\"\"\n\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '10.0000000000'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n1\n1 4 1\n2 5 3\n\"\"\") == \"10.0000000000\"\n\n\"\"\"\n\n-----Explanation-----\n\nFirst, check whether the rocket can fly to Mars. If not, return -1.\n\nIf it can, calculate the required fuel mass, which consists of a take-off from Earth and a landing to Mars.\n\nThen, calculate the required fuel mass, which consists of a take-off from Mars and a landing to Earth.\n\nThe answer is the sum of the two.\n\n\"\"\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '10.0000000000'\n\nTest 1\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"10.0000000000\"\nassert solution(\"3\") == \"85.4800000000\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2\\n11 8\\n7 5\\n\") == \"10.0000000000\"\nassert solution(\n    \"3\\n1 4 1\\n2 5 3\\n\") == \"-1\"\nassert solution(\n    \"6\\n2 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\"\nassert solution(\n    \"100\\n200 100 100\\n250 250 250\\n200 200 200\\n100 100 100\\n\") == \"90000000000\"\n\n\n\"\"\"\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n12\\n11 8\\n\") == \"10.0000000000\"\nassert solution(\"3\\n1\\n1 4 1\\n2 5 3\\n\") == \"-1\"\nassert solution(\"6\\n2\\n4 6 3 3 5 6\\n2 6 3 6 5 3\\n\") == \"85.4800000000\""
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == '10.0000000000'\nassert solution('3') == '-1'\nassert solution('6') == '85.4800000000'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(test_input_1) == '10'\nassert solution(test_input_2) == '85.4800000000'"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n5\n4 1 5 1\n5 1 5 4\n3\n4 6 3 3 5 6\n2 6 3 6 5 3\n''') == '10.0000000000'\nassert solution('''\n6\n3\n5 6 3 6 5 3\n2 6 3 6 5 3\n''') == '85.4800000000'\nassert solution('''\n8\n1\n1 4 1\n2 5 3\n3 6 5 3\n4 7 6 5 3\n5 8 5 4\n6 9 6 4\n7 10 6 5 4\n8 11 6 5 4\n9 12 6 5 4\n10 13 6 5 4\n11 14 6 5 4\n12 15 6 5 4\n13 16 6 5 4\n14 17 6 5 4\n15 18 6 5 4\n16 19 6 5 4\n17 20 6 5 4\n18 21 6 5 4\n19 22 6 5 4\n20 23 6 5 4\n21 24 6 5 4\n22 25 6 5 4\n23 26 6 5 4\n24 27 6 5 4\n25 28 6 5 4\n26 29 6 5 4\n27 30 6 5 4\n28 31 6 5 4\n29 32 6 5 4\n30 33 6 5 4\n31 34 6 5 4\n32 35 6 5 4\n33 36 6 5 4\n34 37 6 5 4\n35 38 6 5 4\n36 39 6 5 4\n37 40 6 5 4\n38 41 6 5 4\n39 42 6 5 4\n40 43 6 5 4\n41 44 6 5 4\n42 45 6 5 4\n43 46 6 5 4\n44 47 6 5 4\n45 48 6 5 4\n46 49 6 5 4\n47 50 6 5 4\n48 51 6 5 4\n49 52 6 5 4\n50 53 6 5 4\n49 54 6 5 4\n48 55 6 5 4\n47 56 6 5 4\n46 57 6 5 4\n45 58 6 5 4\n44 59 6 5 4\n43 60 6 5 4\n42 61 6 5 4\n41 62 6 5 4\n40 63 6 5 4\n39 64 6 5 4\n38 65 6 5 4\n37 66 6 5 4\n36 67 6 5 4\n35 68 6 5 4\n34 69 6 5 4\n33 70 6 5 4\n32 71 6 5 4\n31 72 6 5 4\n30 73 6 5 4\n29 74 6 5 4\n28 75 6 5 4\n27 76 6 5 4\n26 77 6 5 4\n25 78 6 5 4\n24 79 6 5 4\n23 80 6 5 4\n22 81 6 5 4\n21 82 6 5 4\n20 83 6 5 4\n19 84 6 5 4\n18 85 6 5 4\n17 86 6 5 4\n16 87 6 5 4\n15 88 6 5 4\n14 89 6 5 4\n13 90 6 5 4\n12 91 6 5 4\n11 92 6 5 4\n10 93 6 5 4\n9 94 6 5 4\n8 95 6 5 4\n7 96 6 5 4\n6 97 6 5 4\n5 98 6 5 4\n4 99 6 5 4\n3 100 6 5 4\n2 101 6 5 4\n1 102 6 5 4\n''') == '10.0000000000'\nassert solution('''\n6\n4\n3 5 1 2\n5 1 4 2\n3 6 1 3\n4 7 1 3\n5 8 1 3\n6 9"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n11 8\n7 5''') == '10.0000000000'\n\nassert solution('''3\n1\n1 4 1\n2 5 3\n''') == '-1'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 0\nassert solution('10') == 4\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 0\nassert solution('10') == 4"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n\n''') == '4'\nassert solution('''\n10\n\n''') == '4'"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == 0\nassert solution(\"10\") == 4\n\n\"\"\"\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n\n''') == '0'"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n''') == '0'\nassert solution('''\n10\n''') == '4'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2\n3\n0\n3\n''') == '4'\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'Wh'\nassert solution('1 111111111111') == 'Wh'\n\"\"\"\n\nn = int(input())\n\nfor i in range(n):\n    a, b = (input().split())\n    lst = []\n    for j in range(len(a)):\n        lst.append(a[j] + b[j])\n    print(''.join(lst))"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'abdef'\nassert solution('1 111111111111') == 'Areyoubusy'\nassert solution('5 4') == 'Areyoubusy'\n\n'''\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'abdef'\nassert solution('1 111111111111') == 'Areyoubusy'\n\"\"\""
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"What are you doing at the end of the world? Are you busy? Will you save us?\"\n    ) == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\n    \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n    ) == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\n    \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n    ) == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\n    \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n    ) == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\n    \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n    ) == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n\nassert solution(\"What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n\nassert solution(\"What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n\nassert solution(\"What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n\nassert solution(\"What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\""
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == 'Wh'\nassert solution('1 2') == 'Wh'\nassert solution('1 111111111111') == 'abdef'\n\nassert solution('2 0') == '.'\nassert solution('2 1') == '.'"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \".\"\nassert solution(\"1\") == \"What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"5\") == \"abdef\"\nassert solution(\"10\") == \"Areyoubusy\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\nassert solution(\"What are you doing while sending \"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"What are you doing at the end of the world? Are you busy? Will you save us?\") == \"What are you doing while sending What are you doing at the end of the world? Are you busy? Will you save us?\"\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''? +? -? +? +? = 42''') == 'Possible'\nassert solution('''? -? = 1''') == 'Impossible'\nassert solution('''? = 1000000''') == 'Possible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('? +? -? +? = n') == 'Possible'\nassert solution('? +? = 1') == 'Impossible'\nassert solution('? +? +? +? = n') == 'Possible'\nassert solution('? -? -? = n') == 'Impossible'\nassert solution('? = 1') == 'Impossible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''? +? -? +? = 42''') == 'Possible'\nassert solution('''? +? = 1''') == 'Impossible'\nassert solution('''? = 1000000''') == 'Possible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'Possible'\nassert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('? +? -? +? = 42') == 'Possible'\nassert solution('? -? = 1') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?+?+?+?+?+?+?=42') == 'Possible'\nassert solution('?-?') == 'Impossible'\nassert solution('?=1000000') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('? +? -? +? +? = 42') == 'Possible'\nassert solution('? +? -? +? +? = 42') == 'Possible'\nassert solution('? +? -? +? +? = 42') == 'Impossible'\nassert solution('? -?') == 'Impossible'\nassert solution('? = 1000000') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_sample_1) == output_sample_1, \"Sample 1 is wrong\"\nassert solution(input_sample_2) == output_sample_2, \"Sample 2 is wrong\"\nassert solution(input_sample_3) == output_sample_3, \"Sample 3 is wrong\"\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''? +? -? +? = 42''') == 'Possible'\nassert solution('''? -? = 1''') == 'Impossible'\nassert solution('''? = 1000000''') == 'Possible'\n"
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n? +? -? +? = n\n''') == \"Possible\"\nassert solution('''\n? +? = 1\n''') == \"Impossible\"\nassert solution('''\n? -? = 1\n''') == \"Possible\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 0 2') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 0 2\\n0\\n0\\n0\\n') == '7 4 5'\nprint(solution(input()))\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"7 4 5\"\nassert solution(\"4\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"4\n1 2 0 2\n0 1 2 0\n0 2 0 1\n0 1 2 0\"\"\") == \"7 4 5\""
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"7 4 5\"\nassert solution(\"4 1 0 2\") == \"7 4 5\"\nassert solution(\"4 0\") == \"7 4 5\"\nassert solution(\"5 1 0 2 0\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '7 4 5'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '7 4 5'"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(r\"\"\"\n4\n1 2 0 2\n0\n0\n0\n\n\"\"\") == \"7 4 5\"\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1 2 0 2') == '7 4 5'"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n6\naabddc\n\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"\n3\nabc\n\n\"\"\") == \"No\"\nassert solution(\n\"\"\"\n3\njjj\n\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"\n8\naaaaaab\n\n\"\"\") == \"Yes\"\nassert solution(\n\"\"\"\n7\naabbbcc\n\n\"\"\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\naabddc\n\n3\nabc\n\n3\ncccccc\n\n''') == 'Yes'\n\nassert solution('''\n6\naabddc\n\n3\nabc\n\n3\ncccccc\n\n''') == 'Yes'\n\nassert solution('''\n6\naabddc\n\n3\nabc\n\n3\ncccccc\n\n''') == 'No'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"3\") == \"Yes\""
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nabc\") == \"Yes\"\nassert solution(\"5\\nbababc\") == \"No\"\nassert solution(\"5\\nabbd\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\naabddc''') == 'Yes'\nassert solution('''3\nabc''') == 'No'\nassert solution('''3\njjj''') == 'Yes'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"1\") == \"Yes\"\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'Yes'\nassert solution() == 'No'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\""
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"No\"\nassert solution(\"6\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n\n\"\"\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"54\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n2\n''') == '54'\nassert solution('''7 4\n3\n''') == '1728'\nprint(solution('''\n5 2\n2\n'''))\nassert solution('''\n7 4\n3\n''') == '1728'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2\n\n3\n2\n\n1\n1\n\n4\n2\n\n5\n3\n\n''') == '54'\nassert solution('''\n4\n4\n\n8\n3\n\n9\n4\n\n''') == '90'\nassert solution('''\n3\n1\n\n5\n2\n\n''') == '51'\n\nassert solution('''\n7\n2\n\n10\n4\n\n14\n7\n\n''') == '13'\n\nassert solution('''\n7\n5\n\n10\n4\n\n13\n7\n\n''') == '1295'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n''') == '54'\nassert solution('''\n7 4\n''') == '1728'\nassert solution('''\n13 2\n''') == '1'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5 2',\n    '',\n) == '54', 'Wrong!'\nassert solution(\n    '7 4',\n    '',\n) == '1728', 'Wrong!'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '54'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\nassert solution(\"5 2\") == \"54\"\nassert solution(\"7 4\") == \"1728\"\nassert solution(\"6 5\") == \"243\"\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'\nassert solution('15 10') == '461221180'\nassert solution('11 14') == '1657079434'"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 2') == '2'\nassert solution('7 4') == '1728'\nassert solution('8 0') == '0'\nassert solution('8 5') == '3'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\\nWWBBBW\\nWWBBBW\\nWWBBBW\\nWWWWWW\\nWWWWWW\") == \"2 4\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2 1\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"2 4\"\nassert solution(\"3 3\") == \"2 1\"\nassert solution(\"8 6\") == \"3 1\"\nassert solution(\"5 10\") == \"5 9\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1 1'\nassert solution('5 6') == '2 4'"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"WWBBBW\\n\"\n    \"WWBBBW\\n\"\n    \"WWBBBW\\n\"\n    \"WWWWWW\\n\"\n    \"WWWWWW\\n\"\n    ) == \"2 4\"\nassert solution(\n    \"3 3\\n\"\n    \"WWW\\n\"\n    \"WWW\\n\"\n    \"WWW\\n\"\n    \"\") == \"2 1\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6') == '2 4'\nassert solution('3 3') == '2 1'\n\"\"\"\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '2 4', 'Wrong result'\nassert solution('3 3') == '2 1', 'Wrong result'\nassert solution('1 5') == '1 4', 'Wrong result'\nassert solution('6 5') == '3 3', 'Wrong result'\nassert solution('9 9') == '6 4', 'Wrong result'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2 1'\nassert solution('''\n1 2\n1 2\n2 4\n''') == '2 1'\nassert solution('''\n3 2\n2 3\n3 4\n''') == '2 1'\nassert solution('''\n4 4\n1 2\n3 4\n5 6\n''') == '2 1'"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 1\nWWW\nBWW''') == '1 2'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW''') == '2 4'\nassert solution('''3 3\nWWW\nBWW\nWWW\n''') == '2 1'"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n\"\"\") == \"10 9 10 10 9\"\nassert solution(\"\"\"\n2 3\n1 2\n1 2\n1 2\n\n\"\"\") == \"5 6\""
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7') == '10 9 10 10 9'\nassert solution('2 3') == '5 6'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '5 6'\nassert solution('5 3') == '10 9 10 10 9'\nassert solution('10 1') == '10 10 10 10 9'"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'\nassert solution('''\n2 3\n1 2\n1 2\n1 2\n''') == '5 6'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7\\n2 4\\n5 1\\n2 3\\n3 4\\n4 1\\n5 3\\n3 5\") == \"10 9 10 10 9\"\nassert solution(\"2 3\\n1 2\\n1 2\\n1 2\\n\") == \"5 6\"\nassert solution(\"5\\n3\") == \"5\""
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'\nprint(solution(input()))\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\n1 2\n1 2\n1 2\n''') == '10 9 10 10 9 \n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'\nassert solution('''2 3\n1 2\n1 2\n1 2\n''') == '5 6'\nassert solution('''5 5\n1 2\n1 2\n1 2\n1 2\n''') == '5 5'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '10 9 10 10 9'\nassert solution('5 7') == '10 9 10 10 9'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 3\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == '10 9 10 10 9'\n\nassert solution('''\n5 3\n1 2\n1 2\n1 2\n1 2\n1 2\n''') == '5 6'\n\nassert solution('''\n5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\\n-1 -1\\n2\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n5\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n8\") == \"3\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution(\"1 1\\n-1 -1\\n2\") == \"2\"\nassert solution(\"1 1\\n-1 -1\\n3\\n1 0 0\\n0 1 0\\n1 1 -3\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2\") == \"2\""
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 1') == '2'\nassert solution('-1 -1') == '2'\nassert solution('-1 -1') == '2'\nassert solution('-2 -1') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\n-1 -1\\n2') == '2'\nassert solution('1 1\\n-1 -1\\n3\\n0 1 0\\n1 0 0\\n1 1 -3') == '2'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"-1 -1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"0 1 0\") == \"2\"\nassert solution(\"1 0 0\") == \"2\"\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1\n-1 -1\n2''') == '2'\nassert solution('''1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3\n\n''') == '2'\nassert solution('''1 1\n-1 -1\n4\n1 0 0\n0 1 0\n0 0 0\n0 0 0\n1 1 0\n0 0 0\n1 0 0\n\n''') == '1'\nassert solution('''1 1\n-1 -1\n7\n1 0 0\n0 1 0\n1 1 -3\n0 0 0\n0 0 0\n1 0 0\n\n''') == '0'\nassert solution('''1 1\n-1 -1\n10\n1 0 0\n0 1 0\n1 1 0\n0 0 0\n0 0 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0\n1 0 0\n\n''') == '1'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1 1\n-1 -1\n2\n0 1 0\n1 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 1 -3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1 1\n-1 -1\n3\n1 0 0\n0 1 0\n1 2 -2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == 'Kevin'\nassert solution('3 2') == 'Nicky'\nassert solution('1 2') == 'Kevin'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == 'Kevin'\nassert solution(input_2) == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1\\n3 4') == 'Kevin'\nassert solution('1 2\\n3') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'Kevin'\nassert solution('1 2') == 'Nicky'\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'Kevin'\nassert solution('2 1') == 'Nicky'\nassert solution('2 2') == 'Nicky'"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 1\n3 4\n\n\"\"\") == \"Kevin\"\n\nassert solution(\"\"\"\n1 2\n3\n\n\"\"\") == \"Nicky\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == \"Kevin\"\nassert solution('1 2') == \"Nicky\""
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"Kevin\"\nassert solution(\"1 2\") == \"Nicky\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n\") == \"1 1 1\"\nassert solution(\"3 1 2 3\\n\") == \"3 1 2 3\"\nassert solution(\"4 1 2 3\\n\") == \"1 2 3\\n1 2 3\\n1 2 3\\n1 2 3\"\n\n\n'''"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('2') == '1 1 1'\nassert solution('1') == '1'\nassert solution('0') == '1'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '-1'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 2 2\") == \"3\\n1 2 3\\n1 2 3\"\nassert solution(\"2\\n2 1\") == \"1 1 1\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n1 2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2 2 2\n\"\"\") == \"2\""
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n2 1\\n') == '1 2 3'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 2 3\\n') == '3\\n1 2 3\\n1 2 3\\n'\nassert solution('2\\n2 2\\n') == '1\\n1 1\\n2'\nassert solution('1\\n1 1\\n') == '1'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"3\"\nassert solution(\"2\\n2 1\\n\") == \"1\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n2 2 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n1 2 3 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n8\n5 5 4 3 2 1 0\n\"\"\") == \"1 1 1 1\"\nassert solution(\"\"\"\n3\n4 2 1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 1 1\"\nassert solution(\"2 2\") == \"1 1 1\"\nassert solution(\"2 2 2\") == \"1 1 1\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('00') == '1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1\") == \"1\"\nassert solution(\"0\") == \"1\"\nassert solution(\"101\") == \"1\"\nassert solution(\"01\") == \"2\"\nassert solution(\"00\") == \"1\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11\") == \"6\"\nassert solution(\"01\") == \"2\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nprint(solution(input()))\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n01\n''') == '1'\nassert solution('''\n11\n''') == '6'\nassert solution('''\n1\n''') == '1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n0') == '5'\nassert solution('1\\n0') == '1'\nassert solution('0\\n1') == '2'\nassert solution('1\\n0') == '2'\nassert solution('1\\n0') == '2'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('2') == '4'\nassert solution('10') == '2'\nassert solution('500') == '3'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"4\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == 1\nassert solution(\"2\") == 3\nassert solution(\"3\") == 6\nassert solution(\"4\") == 8\nassert solution(\"5\") == 10\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1 2\n''') == '3'\nassert solution('''2\n5 7\n''') == '4'\nassert solution('''1\n1 2\n''') == '0'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('2') == '4'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 1\nassert solution('3') == 4\nassert solution('2') == 3\nassert solution('4') == 5\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"5\"\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '4'\nassert solution('2') == '4'\nassert solution('5 7') == '4'\nassert solution('15') == '1'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == \"1\"\nassert solution('3') == \"4\"\nassert solution('2') == \"6\"\nassert solution('5') == \"12\"\n\n\"\"\""
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 1 2\") == \"1\"\nassert solution(\"3\\n1 1 2\") == \"3\"\nassert solution(\"5\\n1 1 2 3\") == \"3\"\nassert solution(\"8\\n1 1 2 3 4\") == \"4\"\nassert solution(\"7\\n1 1 2 3 4 5\") == \"4\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'YES'\nassert solution('4') == 'NO'\nassert solution('3') == 'YES'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2 3 0\n0 3 2 1\n''') == \"YES\"\nassert solution('''\n2\n1 0\n0 1\n''') == \"YES\"\nassert solution('''\n3\n1 2 3 0\n0 3 2 1\n''') == \"NO\"\n\n\"\"\"\n\n\"\"\"\n\nclass Solution:\n    def solve(self, n, a, b):\n        res = n\n        a_dict = {}\n        for i in range(n):\n            a_dict[i] = 1\n        \n        for i in range(n):\n            if a[i]!= 0:\n                res = self.go(res, a_dict, i, b)\n        return \"YES\" if res == 1 else \"NO\"\n\n    def go(self, res, a_dict, index, b):\n        # print(res, index, a_dict, b)\n        if index in a_dict and a_dict[index] == b:\n            res -= 1\n            a_dict[index] = 0\n            return res\n        \n        for i in range(index+1, n):\n            if a_dict[i] == 0:\n                res = self.go(res, a_dict, i, b)\n                if res == 0:\n                    return res\n                else:\n                    a_dict[i] = b\n            else:\n                return res\n        return res\n\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solve(self, n, a, b):\n        res = n\n        a_dict = {}\n        for i in range(n):\n            a_dict[i] = 1\n        \n        for i in range(n):\n            if a[i]!= 0:\n                res = self.go(res, a_dict, i, b)\n        return \"YES\" if res == 1 else \"NO\"\n\n    def go(self, res, a_dict, index, b):\n        # print(res, index, a_dict, b)\n        if index in a_dict and a_dict[index] == b:\n            res -= 1\n            a_dict[index] = 0\n            return res\n        \n        for i in range(index+1, n):\n            if a_dict[i] == 0:\n                res = self.go(res, a_dict, i, b)\n                if res == 0:\n                    return res\n                else:\n                    a_dict[i] = b\n            else:\n                return res\n        return res\n\n\"\"\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\"\nassert solution(\"4\\n1 2 3 0\\n0 1 2 3\\n\") == \"NO\"\n\n\"\"\"\n\n\nfrom collections import defaultdict\nfrom copy import deepcopy\nfrom itertools import combinations\nimport math\nimport re\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 0 2\n2 0 1\n''') == 'YES'\nassert solution('''\n2\n1 0\n0 1\n''') == 'YES'\nassert solution('''\n4\n1 2 3 0\n0 3 2 1\n''') == 'NO'"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 0 2\n2 0 1\n''') == 'YES'\nassert solution('''\n4\n1 2 3 0\n0 3 2 1\n''') == 'NO'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n\"\"\"\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"3\\n1 0 2\\n2 0 1\\n\") == \"YES\"\nassert solution(\"4\\n1 2 3 0\\n0 3 2 1\\n\") == \"NO\""
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n8 10 9 9 8 10\n1 1 1 1 1 1\n''') == '9000'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"9000\"\nassert solution(\"6\") == \"1160\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n8 10 9 9 8 10\n1 1 1 1 1 1\n''') == '9000'\nassert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '1160'\nprint('solution() done!')\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '9000'\nassert solution('6') == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n8 10 9 9 8 10\n1 1 1 1 1 1\n''') == '1160'\nassert solution('''\n6\n8 10 9 9 8 10\n1 10 5 5 1 10\n''') == '908'\n\n'''\nimport sys\nimport math\nn, *a, b = map(int, sys.stdin.read().split())"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == '9000'\nassert solution(input_2) == '1160'\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n8 10 9 9 8 10\n1 1 1 1 1 1\n''') == '9000'"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n\") == \"1160\"\nassert solution(\"4\\n2 3 4 5\\n1 3 2 2\\n\") == \"5\"\nassert solution(\"6\\n4 8 12 6\\n5 6 6 4\\n\") == \"1170\"\n\nstdin = \"\"\"\n6\n8 10 9 9 8 10\n1 1 1 1 1 1\n\"\"\"\nprint(solution(stdin))\n\n\"\"\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n8 10 9 9 8 10\n1 1 1 1 1 1''') == '9000'\nassert solution('''6\n8 10 9 9 8 10\n1 10 5 5 1 10''') == '1160'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\""
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '6', \"Case 1\"\nassert solution('8 6') == '1', \"Case 2\""
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 2\n2 3\n1 4\n1 4\n2 1\n''') == '6', 'First example'\nassert solution('''8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4\n''') == '1', 'Second example'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n1 3\n2 4\n3 1\n2 1\n2 1\n''') == '6', 'TEST FAILED'\nassert solution('''\n3 4\n1 2\n1 4\n1 3\n''') == '1', 'TEST FAILED'\nassert solution('''\n4 4\n2 3\n3 4\n1 2\n3 5\n''') == '1', 'TEST FAILED'\nassert solution('''\n7 6\n5 6\n5 7\n5 8\n6 3\n2 1\n7 3\n1 3\n1 4\n''') == '1', 'TEST FAILED'\nassert solution('''\n8 6\n1 2\n1 4\n1 3\n2 4\n3 4\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4\n''') == '1', 'TEST FAILED'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '6'\nassert solution('8 6') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2\n1 2\n1 3''') == '1'\nassert solution('''4\n2 3\n1 2\n1 3\n2 1''') == '6'\nassert solution('''8\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4''') == '1'\nprint(solution('''\n3\n1 2\n1 2\n1 3'''))\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"1\"\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 3\n''') == '1'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '6'\nassert solution('8 6') == '1'"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 2') == '6'\nassert solution('8 6') == '1'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"3\") == \"4\""
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\nassert solution() == '-1'\n\nstdin = \\\n'''\n4\n2 4 6 8\n'''\n\nprint(solution(stdin))"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '-1'\nassert solution('3') == '-1'\nassert solution('2') == '5'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '-1'\nassert solution('3') == '4'\nassert solution('2') == '5'"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n2 2 3 4 6\n''') == '5'\n\nassert solution('''\n4\n2 4 6 8\n''') == '-1'\n\nassert solution('''\n3\n2 6 9\n''') == '4'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 3 4 6') == '5'\nassert solution('3 4 2 6') == '-1'\nassert solution('4 5 6 8') == '4'"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '5'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2 2 3 4 6\n\n''') == '5'\nassert solution('''4\n2 4 6 8\n\n''') == '-1'\nassert solution('''3\n2 6 9\n\n''') == '4'"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '-1'\nassert solution('4') == '4'\nassert solution('5') == '5'\n\n\"\"\""
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\nprint(solution(input()))\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\nassert solution('abcba') == '0'\nassert solution('abcd') == '0'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abacabaca\") == \"3\"\nassert solution(\"abaca\") == \"0\"\nassert solution(\"ba\") == \"0\"\nassert solution(\"abc\") == \"0\"\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\"\n\"\"\""
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\nassert solution('abac') == '0'\n'''"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\nassert solution('abacabaca') == '3'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"2\"\nassert solution(\"4 5\") == \"1\"\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5\n11..2\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5\\n11..2\\n#..22\\n#.323\\n.#333') == '2'\nassert solution('5 5\\n1..4\\n##.2#\\n#.2##\\n##.3#\\n2.##') == '1'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 5\n11..2\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '4 5\\n'\n    '11..2\\n'\n    '#..22\\n'\n    '#.323\\n'\n    '#333\\n'\n    ) == '2'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == \"2\"\nassert solution(\"2 3\\n1 2\\n3 1\") == \"1\"\nassert solution(\"1 3\\n1 2\\n3 1\") == \"1\"\nassert solution(\"3 2\\n1 2\\n3 1\") == \"1\"\nassert solution(\"3 2\\n1 2\\n2 3\") == \"1\"\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n11..2\\n#..22\\n#.323\\n') == '2'\nassert solution('5 4\\n1#2#3\\n') == '-1'"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5') == '2'\nassert solution('4 5') == '1'\nassert solution('1 5') == '2'\nassert solution('5 5') == '3'\nassert solution('10 5') == '-1'\n\n\"\"\"\n\n\nfrom itertools import chain\nfrom itertools import combinations\nfrom math import gcd\nfrom math import ceil"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    5 5\n    1112\n    11#3\n    #11#\n    1131\n    ''') == '2'\n\nassert solution(\n    '''\n    7 8\n    1#2#3\n    #1#2#\n    #1#2#\n    #1#2#\n    #1#2#\n    #1#2#\n    ''') == '3'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1.2\n1#2#3\n1.2\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '-1'\nassert solution('8') == '6'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"-1\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"15\") == \"4\"\nassert solution(\"30\") == \"3\"\nassert solution(\"10000\") == \"2\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n(()\n\n''') == '6'\nassert solution('''8\n))((())(\n\n''') == '6'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'\nassert solution('9') == '-1'\nassert solution('5') == '-1'\nassert solution('4') == '-1'\n\n\"\"\"\nfrom collections import deque\nimport time"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"8\") == \"8\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '-1'\nassert solution('8') == '6'\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n()()\") == \"6\"\nassert solution(\"5\\n()))((\") == \"5\"\nassert solution(\"5\\n(()(\") == \"-\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '6'\nassert solution('3') == '-1'\nassert solution('6') == '6'"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n(()\\n') == '6'\nassert solution('3\\n(())())') == '6'\nassert solution('8\\n)()(((())))\\n') == '10'\nassert solution('1\\n()\\n') == '-1'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 5\\n4 4 0\\n1 3') == '1'\n\nassert solution('3 3 5\\n4 4 0\\n1 3') == '1'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('4 5 4') == '4'\nassert solution('3 5 4') == '1'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1') == '1\\n3 2\\n'\nassert solution('3 3 5\\n4 4 0\\n1 3\\n3 2\\n3 1') == '2\\n1 3\\n'\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 5\") == \"1\"\nassert solution(\"4 5 4\") == \"1\"\nassert solution(\"4 5 4\") == \"3\"\nassert solution(\"2 1 0 3\") == \"3\"\nassert solution(\"3 2\") == \"1 2\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 3 5\n4 4 0\n1 3\n3 2\n3 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\"\"\") == \"4\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"1 2 3 4\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 3 5\n4 4 0\n1 3\n3 2\n3 1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\"\"\") == \"4\"\n\n\"\"\"\nFind the minimum number of data centers in order to keep the data accessibility guarantees.\n\nFor each client, we are concerned with two conditions: that he or she can access the data, and that he or she can not access the data.\n\nIf a client can access the data, we can guarantee that it is accessible. If a client cannot access the data, we can guarantee that it is not accessible.\n\nIn fact, each client can only access the data if it is available, or not available, if it is not available.\n\nThis means that the availability of the data depends on the availability of the data center, and the availability of the data center, or not the availability of the data center.\n\nThe availability of the data depends on the availability of the data center, the availability of the data center, and the availability of the data center.\n\nThe availability of the data center depends on the availability of the data center, the availability of the data center, and the availability of the data center.\n\nThe availability of the data center depends on the availability of the data center, the availability of the data center, and the availability of the data center.\n\nWe are concerned with the number of data centers that are available in an experiment. We have to find the minimum number of these data centers that are available, so that all clients can access their data, and all clients can not access their data.\n\nYou are given n distinct integers u_1, u_2,..., u_n (0 \u2264 u_j < h), j-th of these numbers is an index of a maintenance hour for data center j.\n\nEach of the next m lines contains two integers c_{i}, 1 and c_{i}, 2 (1 \u2264 c_{i}, 1, c_{i}, 2 \u2264 n, c_{i}, 1 \u2260 c_{i}, 2), defining the data center indices containing the data of client i.\n\nEach of the next m lines contains two integers x_{i}, 1 and x_{i}, 2 (1 \u2264 x_{i}, 1, x_{i}, 2 \u2264 n, x_{i}, 1 \u2260 x_{i}, 2), the indices of the data centers, that must be placed in the order in which they have to be placed in the experiment.\n\nIt is guaranteed that the given maintenance schedule allows each client to access at least one copy of his data at any moment of day.\n\n\n-----Input-----\n\nInput contains four lines:\n\nThe first line contains integer n, m, h (1 \u2264 n, m, h \u2264 100 000).\n\nThe second line contains n integers u_1, u_2,..., u_{n} (0 \u2264 u_j < h).\n\nThe third line contains m integers c_1, c_2,..., c_{m} (1 \u2264 c_i < n), c_i being the data center index containing the data of client i.\n\nThe fourth line contains m integers x_1, x_2,..., x_{m} (1 \u2264 x_i < n), i-th of these numbers is the data center index in the order in which the clients are to be placed in the experiment.\n\nSample Input 1\n3 3 5\n4 4 0\n1 3\n3 2\n3 1\n\nSample Output 1\n1\n3\n\nSample Input 2\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\nSample Output 2\n4\n2 3 4 \n\nSample Input 3\n5 4 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\nSample Output 3\n1\n2 3 4 \n\nSample Input 4\n3 3 5\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\nSample Output 4\n1\n3 2 4 \n\n\n---\n\nclass Solution:\n    def minimumNumber(self, nums: List[int]) -> int:\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\"\"\") == \"1 2 3 4\"\nassert solution(\"\"\"\n3 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n\"\"\") == \"1 2 3 4\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 5\") == \"1\"\nassert solution(\"4 5 4\") == \"3\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3 5\n4 4 0\n1 3\n3 2\n3 1\n''') == '1'\nassert solution('''4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n2 3\n\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n2 5\n\n\"\"\") == \"15\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n\") == \"1\\n\"\nassert solution(\"2\\n2\\n\") == \"2\\n\"\nassert solution(\"2\\n3\\n\") == \"8\\n\""
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 8\nassert solution('2 2') == 4\nassert solution('1 1') == 1\n\n\n'''\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n''') == 8\nassert solution('''\n4 4\n''') == 80\nassert solution('''\n2 5\n''') == 36"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '8'"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"8\"\nassert solution(\"10 10\") == \"1010\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\\n\") == \"8\"\nassert solution(\"6 5\\n\") == \"7\"\nassert solution(\"12 14\\n\") == \"15\"\n\"\"\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"8\"\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n\n''') == '1'\nassert solution('''\n2 2\n\n''') == '8'\n\n''')\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '8'\nassert solution('5 5') == '8'\nassert solution('1 1') == '1'\n\n\n'''\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '5'\nassert solution('100 3') == '4'\nassert solution('1 2') == '5'\nassert solution('1 1') == '100'\n\"\"\"\nfrom typing import List\nfrom collections import defaultdict\nfrom functools import lru_cache"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '5'\nassert solution('100 3') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2\n2 3\n''') == '5'\nassert solution('''\n1 2\n2 1\n3 1\n''') == '4'\n\nassert solution('''\n1 2\n1 1\n2 100\n''') == '100'\n\n\nassert solution('''\n10 0\n20 0\n40 0\n60 0\n80 0\n''') == '0'\nassert solution('''\n7 5\n6 9\n8 4\n4 2\n8 1\n9 5\n''') == '18'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"100 3\") == \"100\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\nassert solution([5, 2, 1, 2, 2]) == \"5\"\nassert solution([1, 2, 1, 2, 2]) == \"100\"\nassert solution([1, 1, 2, 100]) == \"100\"\nassert solution([1, 2, 1, 1]) == \"100\"\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 2\n2 3''') == '5'\nassert solution('''100 3\n1 2\n2 1\n3 1\n''') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 2\\n2 3\\n') == '5'\nassert solution('100 3\\n1 2\\n2 1\\n3 1\\n') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n''') == '5'\nassert solution('''\n100 3\n1 2\n2 1\n3 1\n''') == '100'\nassert solution('''\n1 2\n1 1\n2 100\n''') == '100'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 2]) == '5'\nassert solution([100, 3]) == '100'\n\n\nfrom typing import List"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"5\"\nassert solution(\"100 3\") == \"4\"\nassert solution(\"1 2\") == \"100\"\nassert solution(\"1 2\") == \"1\"\n\n'''\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''aaa\nbbb\nccc\n''') == '2'\nassert solution('''aaabb\ncccc\nddddd\n''') == '1'\nassert solution('''lol\nusaco\n''') == '1'\n\nsolution('usaco')"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''aaa\naaabb\nusaco\nlol\n''') == '6'\nassert solution('''a\na\naa\n''') == '2'\nassert solution('''l\nll\nlll\n''') == '1'\nassert solution('''g\ngg\nggg\ngggg\n''') == '0'"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('aab') == 'aab'\nassert solution('asd') == 'asd'\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"aaabb\"\n) == \"6\"\nassert solution(\n    \"usaco\"\n) == \"1\"\nassert solution(\n    \"lol\"\n) == \"2\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaabb') == 6\nassert solution('usaco') == 1\nassert solution('lol') == 2\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\na\nbbb\nabab\nabab\na\na\nab\naaab\naaab\naaa\naaa\naaa\naaa\nbbbbb\nbbbbb\nbbbb\nbbbb\nbbbb\nbbbb\nbbbb\nabaaab\nabaaab\naaa\naaa\naaa\naaa\naaa\naaa\naaa\naaa\naaa\naaa\naaa\naaa\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\nbbb\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"1\""
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aab\") == \"2\"\nassert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\"\nassert solution(\"\") == \"\"\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"usaco\") == \"1\"\nassert solution(\"lol\") == \"2\"\nassert solution(\"aaabb\") == \"6\"\nassert solution(\"aababc\") == \"2\"\nassert solution(\"aaaab\") == \"1\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''4\n''') == '2'\nassert solution('''5\n''') == '2'\nassert solution('''6\n''') == '2'\nassert solution('''7\n''') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n\n''') == '1'\nassert solution('''\n10\n\n''') == '3'\nassert solution('''\n5\n\n''') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n\n'''\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n\n''') == '1'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\n\n---\n\nGerald has been selling state secrets at leisure. All the secrets cost the same: n marks. The state which secrets Gerald is selling, has no paper money, only coins. But there are coins of all positive integer denominations: 1 mark, 3 marks, 9 marks, 27 marks and so on. But there are coins of other denominations: 1/9, 1/27, 1/9, 1/27, 1/81, 1/27, 1/81, 1/27, 1/81, 1/27, 1/81, 1/27, 1/81, 1/27, 1/81.\n\nOf course, Gerald likes it when he gets money without the change. And all buyers respect him and try to give the desired sum without change, if possible. But this does not always happen.\n\nOne day an unlucky buyer came. He did not have the desired sum without change. Then he took out all his coins and tried to give Gerald a larger than necessary sum with as few coins as possible. What is the maximum number of coins he could get?\n\nThe formal explanation of the previous paragraph: we consider all the possible combinations of coins for which the buyer can not give Gerald the sum of n marks without change. For each such combination calculate the minimum number of coins that can bring the buyer at least n marks. Among all combinations choose the maximum of the minimum number of coins. This is the number we want.\n\n\n-----Input-----\n\nThe single line contains a single integer n (1 \u2264 n \u2264 10^17).\n\nPlease, do not use the %lld specifier to read or write 64 bit integers in \u0421++. It is preferred to use the cin, cout streams or the %I64d specifier.\n\n\n-----Output-----\n\nIn a single line print an integer: the maximum number of coins the unlucky buyer could have paid with.\n\n\n-----Examples-----\nInput\n1\n\nOutput\n1\n\nInput\n4\n\nOutput\n2\n\n\n\n-----Note-----\n\nIn the first test case, if a buyer has exactly one coin of at least 3 marks, then, to give Gerald one mark, he will have to give this coin. In this sample, the customer can not have a coin of one mark, as in this case, he will be able to give the money to Gerald without any change.\n\nIn the second test case, if the buyer had exactly three coins of 3 marks, then, to give Gerald 4 marks, he will have to give two of these coins. The buyer cannot give three coins as he wants to minimize the number of coins that he gives.\n\n\"\"\""
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 2'\nassert solution('2') == '2 1'\nassert solution('3') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1 2\"\nassert solution(\"2\\n3\\n4\") == \"2 1\"\nassert solution(\"2\\n4\\n3\") == \"2 1\"\nassert solution(\"1\\n1\\n1\") == \"2 1\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1\n1\n2\n2\"\"\") == \"1 2\"\nassert solution(\"\"\"3\n3\n1\n1\"\"\") == \"1 2\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 4\\n2 5\\n3 6\") == \"1 2\"\n\n\n\n--------------------------------------------------------------------------------------------------------------------------\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 3\n4 5\n2 6\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n3 5\n1 2\n2 4\n\"\"\") == \"1 2\"\nassert solution(\"\"\"\n1 2\n2 1\n\"\"\") == \"2 1\"\nassert solution(\"\"\"\n10\n1 3\n1 4\n1 6\n2 7\n4 8\n4 9\n5 10\n6 11\n4 12\n5 13\n3 14\n2 15\n2 16\n3 17\n5 18\n6 19\n3 20\n5 21\n6 22\n\"\"\") == \"1 3 2 1 2 1 3 1 2 2\"\nassert solution(\"\"\"\n100\n100 100\n99 99\n98 98\n97 97\n96 96\n95 95\n94 94\n93 93\n92 92\n91 91\n90 90\n89 89\n88 88\n87 87\n86 86\n85 85\n84 84\n83 83\n82 82\n81 81\n80 80\n79 79\n78 78\n77 77\n76 76\n75 75\n74 74\n73 73\n72 72\n71 71\n70 70\n69 69\n68 68\n67 67\n66 66\n65 65\n64 64\n63 63\n62 62\n61 61\n60 60\n59 59\n58 58\n57 57\n56 56\n55 55\n54 54\n53 53\n52 52\n51 51\n50 50\n49 49\n48 48\n47 47\n46 46\n45 45\n44 44\n43 43\n42 42\n41 41\n40 40\n39 39\n38 38\n37 37\n36 36\n35 35\n34 34\n33 33\n32 32\n31 31\n30 30\n29 29\n28 28\n27 27\n26 26\n25 25\n24 24\n23 23\n22 22\n21 21\n20 20\n19 19\n18 18\n17 17\n16 16\n15 15\n14 14\n13 13\n12 12\n11 11\n10 10\n9 9\n8 8\n7 7\n6 6\n5 5\n4 4\n3 3\n2 2\n1 1\n\"\"\") == \"1 3 2 2 1 3 1 2 2\"\nprint(\"You're a mean person!\")"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1 3\n3 2''') == '1 2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1 2\\n2 1\\n1 2\\n'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"-1\"\nassert solution(\"1 4\") == \"1 2\"\nassert solution(\"2 5\") == \"1 2\"\nassert solution(\"3 6\") == \"2 1\"\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    2 4\n    2 5\n    3 6\n    ''') == \"1 2\\n2 1\\n1 2\"\nassert solution('''\n    4 6\n    3 5\n    2 4\n    1 5\n    ''') == \"1 2\\n2 1\\n1 2\"\n''')\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"2 1 1\"\nassert solution(\"8\") == \"4\"\n\n\"\"\"\n\nn = int(input())\n\narr = []\nfor i in range(n):\n    arr.append(1)\n\nfor i in range(1, n):\n    arr[i] = arr[i-1] + 1\n\nfor i in range(len(arr)-1, 0, -1):\n    if arr[i-1] == arr[i]:\n        arr[i-1] = arr[i] + 1\n\nfor i in range(len(arr)):\n    print(arr[i], end=\"\")"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n''') == '1'\nassert solution('''2\n''') == '2'\nassert solution('''3\n''') == '3'\nassert solution('''8\n''') == '4'\nassert solution('''10\n''') == '11'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n\n2\n\n3\n\n4\n''') == '2 1'\nassert solution('''8\n\n4\n\n2\n\n3\n\n3\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n2\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n3\n\n2\n\n1\n\n2\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n2\n\n1\n\n1\n\n2\n\n2\n\n1\n\n2\n\n2\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n2\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n2\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2\n\n3\n\n3\n\n3\n\n2\n\n1\n\n1\n\n2"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '2 1'\nassert solution('3\\n') == '2 1 1'\nassert solution('8\\n') == '4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '2 1 1'\nassert solution('4') == '2 1 1 1'\nassert solution('5') == '2 2 1 1 1'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1\"\n) == \"1\"\n\nassert solution(\n    \"2\"\n) == \"2 1\"\n\nassert solution(\n    \"3\"\n) == \"2 1 1\"\n\nassert solution(\n    \"8\"\n) == \"4\"\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '2 1'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '2 1'\nassert solution('8\\n') == '4'\n\n\"\"\""
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"aA\") == \"2\"\nassert solution(\"aAa\") == \"2\"\nassert solution(\"aAaA\") == \"2\"\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '1'\nassert solution('2') == '2'\nassert solution('0rT22') == '01'"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '1'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n        \"\"\"\n        0rTrT022\n        \"\"\"\n        ) == \"02TrrT20\""
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == ''\nassert solution(\"A\") == 'A'\nassert solution(\"B\") == 'BA'\nassert solution(\"C\") == 'AC'\nassert solution(\"D\") == 'BD'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\naabaac\n''') == 'aba aca'\nassert solution('''\n0rTrT022\n''') == '02TrrT20'\nassert solution('''\naA\n''') == 'a A'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2\\naa A'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2 a A'\nassert solution() == '2 aba A'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'\nassert solution('8') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\na*d\\n2\\nabcd\\nacbd\\n\") == \"2\"\nassert solution(\"5\\nlo*er\\n2\\nlover\\nloser\\n\") == \"0\"\nassert solution(\"3\\na*a\\n2\\naaa\\naba\\n\") == \"1\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\nabcd\nacbd\n''') == \"1\"\nassert solution('''3\na*a\n2\naaa\naba\n''') == \"0\""
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\""
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\" +\n    \"abcd\\n\" +\n    \"acbd\\n\") == \"1\"\nassert solution(\"5\\n\" +\n    \"lo*er\\n\" +\n    \"2\\n\" +\n    \"aaa\\n\" +\n    \"aba\\n\") == \"0\"\nassert solution(\"3\\n\" +\n    \"a*a\\n\" +\n    \"2\\n\" +\n    \"aaa\\n\" +\n    \"aba\\n\") == \"1\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\na**d\\n2\\nabcd\\n') == '2'\nassert solution('5\\nlo*er\\n2\\nlover\\n') == '0'\nassert solution('3\\na*a\\n2\\naaa\\n') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('6') == '0'\nassert solution('7') == '0'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\nabc\\n2\\nabcd\\n\") == '2'\nassert solution(\"5\\nlo*er\\n2\\nloser\\n\") == '0'\nassert solution(\"3\\na*a\\n2\\naaa\\n\") == '1'"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\""
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '0'\nassert solution('3') == '1'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 1 1\n1 0 0 0 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n6 1 2\n3 8 0 1 0 0\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 1 1\n0 0 0 0 4\n\"\"\") == \"1\""
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 1 1\\n\"\n    \"1 0 0 0 4\\n\"\n) == \"1\"\n\nassert solution(\n    \"6 1 2\\n\"\n    \"3 8 0 1 0 0\\n\"\n) == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 1') == '1'\nassert solution('6 1 2') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1 1\\n1 0 0 0 4\") == \"1\"\nassert solution(\"6 1 2\\n3 8 0 1 0 0\") == \"2\""
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1 1\n1 0 0 0 4\n''') == '1'\nassert solution('''\n6 1 2\n3 8 0 1 0 0\n''') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1 1') == '1'\nassert solution('6 1 2') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3 1 1\n1 0 0 0 4\n\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n6 1 2\n3 8 0 1 0 0\n\"\"\"\n) == \"2\"\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1''') == '40'\nassert solution('''1 42''') == '1'\nassert solution('''6 4''') == '172'\nprint('All tests passed')\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\""
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"40\"\nassert solution(\"1 42\") == \"1\"\nassert solution(\"6 4\") == \"172\"\nprint(\"You're doing it! \ud83c\udf89\")\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n''') == '40'\nassert solution('''1 42\n''') == '1'\nassert solution('''6 4\n''') == '172'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(test_0) == '5'\nassert solution(test_1) == '6'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '11'\nassert solution('5') == '16'"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 1 4\") == \"5\"\nassert solution(\"3 1 4 4\") == \"6\"\nassert solution(\"4\") == \"11\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 1 4\") == \"5\"\nassert solution(\"4\\n3 1 4 4\") == \"11\"\nassert solution(\"5\\n3 1 4 1 5\") == \"11\"\nassert solution(\"6\\n3 1 4 1 5\") == \"14\"\n\nimport math\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 1 4\n\n''') == '5'\n\nassert solution('''\n4\n3 1 4 1\n\n''') == '6'\n\nassert solution('''\n5\n3 1 4 1 5\n\n''') == '11'"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"11\"\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '11'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"11\"\n\n\"\"\""
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n2 1 4\n\n''') == '5'\nassert solution('''4\n3 1 4 1\n\n''') == '6'\nassert solution('''5\n3 1 4 1 5\n\n''') == '11'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1 0 0 -1'\n) == '1'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 0 0 -1\") == \"1\"\nassert solution(\"2 -1\") == \"2\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(inp) == '1'\nassert solution(inp1) == '2'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 -1') == '2'\nassert solution('4\\n1 0 0 -1') == '1'\nprint(\"You're almost done! But there is one more thing.\")\nprint(\"If you do not solve it now, it will be all over your brain.\")\nprint(\"You will be tested on the following input:\")\nprint(\n    \"1\\n-2\\n2\\n-1\\n1\\n\"\n)\nprint(\"Incorrect code:\")\nprint(\"-2\\n1\\n-1\\n1\")\nprint(\n    \"Incorrect code:\")\nprint(\"3\\n0\\n1\\n1\")\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n-2 -2 1\n\n1 2\n''') == '1'\nassert solution('''\n3\n-3 1 2\n\n-2 3\n''') == '-1'\nassert solution('''\n2\n-2 1\n\n-2 2\n''') == '0'\nassert solution('''\n1\n-2\n\n2 1\n''') == '3'\nassert solution('''\n3\n-2 0 -1\n\n-2 2\n''') == '-1'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(\"1 -1\") == \"2\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 0 0 -1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n1 -1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n-1 -1 -1 0 -1\n\"\"\") == \"2\""
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n-1 0 0 -1') == '2'\n\nprint(solution('3\\n-1 0 0 -1'))\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"1\"\nassert solution('4') == \"2\"\nassert solution('5') == \"4\"\nassert solution('100') == \"2\"\nassert solution('-2') == \"1\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 0 0''') == '2'\nassert solution('''1 2''') == '0'\nassert solution('''2 1 0''') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0 0\\n1 2\\n2 3\") == \"2\"\nassert solution(\"2 1 0\\n1 2\\n2 2\") == \"0\"\nassert solution(\"2 5 7\\n3 4\\n14 4\") == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"2 1 0\") == \"0\"\nassert solution(\"2 5 7\") == \"1\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 0, 0],\n                [1, 2],\n                [2, 3]) == \"2\"\n\nassert solution([2, 1, 0],\n                [1, 2],\n                [2, 2]) == \"0\"\n\nassert solution([2, 5, 7],\n                [3, 4],\n                [14, 4]) == \"1\""
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 2, 3, 4, 5, 6, 7, 8]) == 2\nassert solution([1, 2, 3, 4, 5, 6, 7, 8]) == 0\nassert solution([1, 2, 3, 4, 5, 6, 7, 8]) == 0"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 0 0\") == \"2\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 5 7\") == \"1\"\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0 0') == '0'\nassert solution('2 1 0') == '1'\nassert solution('2 5 7') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 0 0\n1 2\n2 3\n\n2 1 0\n1 2\n2 2\n''') == '1'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 0 0\n1 2\n2 3\n''') == '2'\nassert solution('''\n5 1 0\n1 2\n2 3\n''') == '0'\nassert solution('''\n5 5 7\n3 4\n14 4\n''') == '1'"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('5') == '6'\nassert solution('10') == '12'\nassert solution('12') == '6'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"6 3\") == \"6\"\nassert solution(\"2 5\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"5 3\") == \"8\"\nassert solution(\"1 2\") == \"7\"\n\n\"\"\"\n\nfrom collections import Counter\nimport math\n\nN, M = list(map(int, input().split()))\nS = list(map(int, input().split()))\nl_i, r_i = list(map(int, input().split()))"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\") == \"6\"\nassert solution(\"5 2\\n01001\\n2 4\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\") == \"6\"\nassert solution(\"5 2\\n00100\\n1 2\") == \"7\"\nassert solution(\"5 2\\n00101\\n1 2\") == \"8\"\nassert solution(\"5 2\\n00111\\n1 2\") == \"9\"\nassert solution(\"5 2\\n01000\\n1 2\") == \"10\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"3 3\") == \"0\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"5 1\") == \"0\"\nassert solution(\"50 100\") == \"3\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n01001\\n2 4\\n3 5\\n\") == \"6\"\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '6'\nassert solution('5 2') == '6'\nassert solution('5 2') == '6'\nassert solution('5 2') == '6'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"5 2\") == \"6\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    1 1 1 1 1 1\n    ''') == '6'\nassert solution('''\n    1 2 1 2 1 2\n    ''') == '13'\n''')\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_data) == \"6\"\n\"\"\"\n\nn = tuple(map(int, input().split()))\nprint(sum([len(bin(n[0]).split('b')[1]) - 1, len(bin(n[1]).split('b')[1]) - 1, len(bin(n[2]).split('b')[1]) - 1, len(bin(n[3]).split('b')[1]) - 1, len(bin(n[4]).split('b')[1]) - 1, len(bin(n[5]).split('b')[1]) - 1]))\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    1 1 1 1 1 1\n    ''') == '6'\n    assert solution('''\n    1 2 1 2 1 2\n    ''') == '13'\n    assert solution('''\n    1 1 2 1 1 2\n    ''') == '11'\n''')"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    1 1 1 1 1 1\n    ''') == '6'\n\nassert solution('''\n    1 2 1 2 1 2\n    ''') == '13'\n'''\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == '6'\nassert solution('''\n1 2 1 2 1 2\n''') == '13'\n\nassert solution('''\n1 3 1 2 3 1\n''') == '12'\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '6'\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '6'\nassert solution(input('')) == '13'\nassert solution(input('')) == '0'\n\n\"\"\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n1 1 1 1 1 1\n''') == '6'\nassert solution(\n'''\n1 2 1 2 1 2\n''') == '13'\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1 1 1 1\") == \"6\"\nassert solution(\"1 2 1 2 1 2\") == \"13\""
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'\nassert solution('3\\n2 3 4 5') == '2'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'\n\n'''\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('9') == '4'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 3 4 6 9\\n\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 4 6 9\") == \"4\"\nassert solution(\"9\") == \"1\"\nassert solution(\"1 2 3 5 6 7 8 9 10\") == \"4\"\n\n\n\"\"\"\nfrom math import gcd\nimport sys"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'\nassert solution('10\\n2 3 6 4 6 7 8 9 10 11 12 13 14') == '12'\nassert solution('1000\\n2 3 4 6 9') == '5'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '10'\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"4\"\nassert solution(\"9\") == \"4\"\nassert solution(\"1 2 3 4 5\") == \"4\"\nassert solution(\"2 3 4 5 6 7 8 9 10\") == \"5\""
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 3 4 6 9\\n\") == \"4\"\nassert solution(\"9\\n1 2 3 5 6 7 8 9 10\\n\") == \"4\"\nassert solution(\"10\\n1 2 3 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"19\"\nassert solution(\"100\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n\") == \"20\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"20\"\n\n\n---\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 4 6 9\") == \"4\"\nassert solution(\"9 1 2 3 5 6 7 8 9 10\") == \"4\"\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2 3 4 6 9') == '4'\nassert solution('5\\n2 3 4 6 9') == '4'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'IR'\nassert solution('''3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == '''SURGERY COMPLETE\nIR\nR SrS\nS rr\nI lldll\nDONE\nSURGERY FAILED'''\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == '''SURGERY COMPLETE\nIR\nS rr\nI lldll\nDONE\n'''\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == \"SURGERY COMPLETE\"\n\nassert solution('''\n4\n1 2 3 4 5 6 7 E 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\n\"\"\") == \"\"\"SURGERY COMPLETE\nIR\nR SrS\nS rr\nI lldll\nDONE\nSURGERY FAILED\"\"\"\nassert solution(\"\"\"\n1\n6\nE\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\nassert solution(\"\"\"\n1\n4\n3 E\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\nassert solution(\"\"\"\n1\n2\n2\n3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\nassert solution(\"\"\"\n3\n8\n5 6\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''\n1\n2 3 4 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n2 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY COMPLETE\"\"\nassert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\nassert solution(\"\"\"\n3\n10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10\n\"\"\") == \"\"\"SURGERY COMPLETE\"\"\nassert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\nassert solution(\"\"\"\n1\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"\"\"SURGERY FAILED\"\"\"\n\"\"\".strip() == \"\"\"SURGERY FAILED\"\"\".strip()\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"SURGERY COMPLETE\"\nassert solution(\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY FAILED\"\nassert solution(\"\"\"\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY FAILED\"\nassert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY FAILED\"\nassert solution(\"\"\"\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n\"\"\") == \"SURGERY COMPLETE\""
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11') == 'SURGERY COMPLETE'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11') == 'SURGERY FAILED'\nassert solution('4\\n3\\n1 2 3 5 6 E\\n8 9 10 4 11 12 13\\n11') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\n\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3') == 'SURGERY COMPLETE'\nassert solution('2\\n3\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3') == 'SURGERY FAILED'\nassert solution('1\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n') == 'IR'\nassert solution('4\\n1 2 3 5 6 E 7\\n8 9 10 4 11 12 13\\n11\\n4 5 6 7 8 9 10 11 13 14\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 5\n''') == '6 5 8 3 4 1 9 2 7'\nassert solution('''3 2 1\n''') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n9 2 5\n''') == '6 5 8 3 4 1 9 2 7'\nassert solution('''\n3 2 1\n''') == '1 2 3'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''9 2 5\n3 2 1''') == '1 2 3'\nassert solution('''3 2 1''') == '1 2 3'\n\n\n\"\"\""
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\") == \"1 2 3\"\nassert solution(\"9 2 5\") == \"6 5 8 3 4 1 9 2 7\"\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 1') == '1 2 3'\nassert solution('3 2 1') == '1 2 3'\nassert solution('10 30 50 70 20 80 40 60 50') == '10 30 50 70 20 80 40 60 50'\nassert solution('10 30 50 70 20 80 40 60 50') == '10 30 50 70 20 80 40 60 50'\nassert solution('5 5 5 5 5') == '5 5 5 5 5'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3'\n\n'''\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9 2 5') == '6 5 8 3 4 1 9 2 7'\nassert solution('3 2 1') == '1 2 3'\n\nprint(solution(''))\nprint(solution('3 2 1'))\nprint(solution('9 2 5'))\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 2 5\n''') == '6 5 8 3 4 1 9 2 7'\nassert solution('''3 2 1\n''') == '1 2 3'"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2 1''') == '1 2 3'\nassert solution('''9 2 5''') == '6 5 8 3 4 1 9 2 7'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n3 2 1\n''') == '3'\nassert solution('''5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\nassert solution('''3 2\n1 0 1\n''') == '2'"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '2'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\nassert solution(\"5\") == '5'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 1\") == \"5\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '''\n3 2\n3 2 1\n\nOutput\n3\n\n3 2\n1 0 1\n\nOutput\n2\n\n3 2\n1 0 1\n\nOutput\n2\n'''\n) == \"2\"\n\nassert solution(\n    '''\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\nOutput\n5000000000\n\nInput\n3 2\n1 0 1\n\nOutput\n2\n\nInput\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\nOutput\n5000000000\n\nInput\n3 2\n1 0 1\n\nOutput\n2\n\nInput\n4 4\n2 8 4 1\n\nOutput\n4\n\nInput\n4 4\n2 8 4 1\n\nOutput\n5\n'''\n) == \"4\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 2\"\n) == \"3\"\nassert solution(\n    \"3 2\"\n) == \"3\"\nassert solution(\n    \"5 1\"\n) == \"5\"\nassert solution(\n    \"1000000000 1000000000 1000000000 1000000000 1000000000\"\n) == \"1000000000\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 2\n3 2 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n\"\"\") == \"5000000000\"\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 2\n1 0 1\n''') == '4'\n\nassert solution('''5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 1') == '5'\nassert solution('3 2') == '2'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 1') == '5'\nassert solution('3 2') == '3'\nassert solution('4 4') == '4'"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '3'\nassert solution('3 2') == '3'\nassert solution('5 1') == '5'\nassert solution('1000000000 1000000000 1000000000 1000000000 1000000000') == '5000000000'"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bbwwbwwb\") == \"5\"\nassert solution(\"bwwbwwbw\") == \"3\"\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''bwwbwwbw\nbwwbwwb''') == '5'\nassert solution('''bwwbwwb\nbwwbwwb''') == '3'\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''bwwwbwwbw\n''') == '5'\nassert solution('''bwwbwwb\n''') == '3'"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'\n\n\"\"\""
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"bwwwbwwbw\") == \"5\"\nassert solution(\"bwwbwwb\") == \"3\"\n\"\"\""
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bwwwbwwbw') == '5'\nassert solution('bwwbwwb') == '3'\n\nsolution('bwwbwwb')\n\n\n\"\"\"\nimport sys"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''bwwwbwwbw\n''') == '5'\nassert solution('''bwwbwwb\n''') == '3'\n\n'''"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '5'\n\n'''"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"5\"\nassert solution(input) == \"3\"\n\n'''"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_lines) == '10'\n\ninput_lines = \"\"\"4 4\n2 2\n0 1\n....\n..*.\n....\n\n\"\"\"\n\nprint(solution(input_lines))"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '10'"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5\\n3 2\\n1 2\\n.....\\n.***.\\n...**\\n*....') == \"10\"\n\nassert solution('4 4\\n2 2\\n0 1\\n.....\\n..*.\\n....\\n....') == \"7\""
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '10'\nassert solution('''4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '10'\nassert solution('4 4') == '7'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '10'"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n\nOutput\n10''') == \"10\"\nassert solution('''4 4\n2 2\n0 1\n....\n..*.\n....\n....\n\nOutput\n7''') == \"7\"\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'\nprint(solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n'''))"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"10\""
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\n'''\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 4 2 2\n''') == '2'\nassert solution('''\n6\n1 2 4 4 4 9\n''') == '2'\nassert solution('''\n2\n1 2\n''') == '1'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n1 4 2 2\") == \"2\"\nassert solution(\"6\\n1 2 4 4 4 9\") == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n1 2 4 4 4 9\n''') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4 2 5 3') == '1'\nassert solution('5\\n3 4 2 2 4') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\""
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 4 2 2\n''') == '2'\nassert solution('''\n6\n1 2 4 4 4 9\n''') == '2'\nassert solution('''\n100\n1 4 2 2\n''') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2 3 1\n''') == '2'\nassert solution('''5\n1 5 3 2 1\n''') == '1'\nassert solution('''6\n5 1 5 2 3\n''') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 4 2 2\") == \"2\"\nassert solution(\"6\") == \"2\"\n\"\"\"\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('6') == '2'\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"1\\n1 2 3\") == \"2\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 1\\naba') == '7'\nassert solution('4 1 1\\nabcd') == '12'\n\n\"\"\"\n\n\nimport sys\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 1\") == \"7\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"4 10 1\") == \"12\""
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 1\naba\n''') == '7'\nassert solution('''\n4 1 1\nabcd\n''') == '4'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 1\") == \"7\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"4 10 1\") == \"12\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 3 1\naba\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"\n4 1 1\naaaa\n\"\"\") == \"12\"\n\nassert solution(\n\"\"\"\n4 10 1\naaaaa\n\"\"\") == \"12\"\n\nassert solution(\n\"\"\"\n4 10 2\naabbaa\n\"\"\") == \"11\""
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3 1\naba\n''') == '7'\nassert solution('''4 1 1\nabcd\n''') == '4'\nassert solution('''4 10 1\naaaa\n''') == '12'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 3 1\\n\"\n    \"aba\\n\"\n    ) == \"7\"\n\nassert solution(\n    \"4 1 1\\n\"\n    \"aaaa\\n\"\n    ) == \"12\"\n\nassert solution(\n    \"4 10 1\\n\"\n    \"aaaa\\n\"\n    ) == \"12\"\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 1\\naba') == '7'\nassert solution('4 1 1\\nabcd') == '4'\nassert solution('4 10 1\\naaaa') == '12'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 1 1') == '4', solution('4 1 1')\nassert solution('3 3 1') == '7', solution('3 3 1')\nassert solution('4 10 1') == '12', solution('4 10 1')\nprint('\\033[92m' + \"Congratulations, your solution is correct.\" + '\\033[0m')\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 1\") == \"7\"\nassert solution(\"4 1 1\") == \"4\"\nassert solution(\"4 10 1\") == \"12\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        def solution(self, N, K)\n            # write your code in Python 3.8\n            N = int(N)\n            K = int(K)\n            # print(N, K)\n            dq = deque([i for i in range(1, N + 1)])\n            # print(dq)\n            cnt = 0\n            while len(dq) >= 2:\n                # print(dq)\n                dq.popleft()\n                # print(dq)\n                dq.pop()\n                # print(dq)\n                cnt += 1\n            return (cnt % pow(10, 9) + 7)\n\nstdin = input()\nprint(Solution().solution(stdin))"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 2') == '1'"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '2'\nassert solution('4 2') == '2'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '0'\nassert solution('3 1') == '0'\nassert solution('4 1') == '0'\nassert solution('5 1') == '1'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '1'\n\"\"\""
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"4 4\") == \"2\"\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"5 4\") == \"4\"\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\n\n\"\"\"\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\") == \"1\"\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n2 2 2 2\n''') == '8'\nassert solution('''\n4 -3\n3 -6 -3 12\n''') == '3'\n'''\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1') == \"8\"\nassert solution('4 2') == \"8\"\nassert solution('4 -3') == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n2 2\\n3 -6 -3 12\\n\") == \"8\"\nassert solution(\"4 -3\\n3 -6 -3 12\\n\") == \"3\"\nprint(solution(input()))"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2 2\") == 8\nassert solution(\"4 2 3 1\") == 3"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n2 2 2 2\") == \"8\"\nassert solution(\"4 -3\") == \"3\"\n\n'''"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output_"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == \"8\"\nassert solution('4 -3') == \"3\""
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2\\n2 2 2 2') == '8'\nassert solution('4 -3\\n3 -6 -3 12') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n2 2 2 2''') == '8'\nassert solution('''4 -3\n3 -6 -3 12''') == '3'"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 -3\n3 -6 -3 12\n''') == '3'\nassert solution('''\n4 2\n2 2 2 2\n''') == '8'\nassert solution('''\n4 -3\n3 -6 -3 12\n''') == '3'\nassert solution('''\n4 -3\n3 -6 -3 12\n''') == '4'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5 3 1 8''') == '11'\nassert solution('''4 2 1 300 1000''') == '5'\nassert solution('''3 5 3 1 8''') == '11'\nassert solution('''4 2 1 300 1000''') == '5'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5 3 1 8\na A\nA aa\naa AA\nAA a\n\n3 2 1 300 1000\na A\nA aa\naa AA\nAA a''') == \"11\"\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2 1 300 1000') == '5'\nassert solution('3 5 3 1 8') == '11'\nassert solution('4 2 1 300 1000') == '5'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5 3 1 8\na A\nA aa\naa AA\nAA a\n\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a''') == '11'"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3 5 3 1 8\na A\nA aa\naa AA\nAA a\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n3 2 1 3\na a\naa a\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4 2 1 3\na a\na aa\naa AA\nAA a\n\"\"\") == \"3\""
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n''') == '11'\nassert solution('''\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n''') == '5'\nassert solution('''\n4 4 1 300 1000\na A\na A\naa AA\nAA a\n''') == '5'\nassert solution('''\n5 2 1 300 1000\na A\nA aa\naa AA\nAA a\n''') == '3'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 5 3 1 8\na A\nA aa\naa AA\nAA a\n''') == '11'\nassert solution('''4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n''') == '5'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5 3 1 8\na A\nA aa\naa AA\nAA a\n\n4 2 1 300 1000\na A\nA aa\naa AA\nAA a''') == '11'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 3 1 8\n    BerBank University\n    University BerMall\n    University BerBank\n    ''') == '11'\n\nassert solution('''4 2 1 300 1000\n    a A\n    A aa\n    aa AA\n    AA a\n    ''') == '5'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5 3 1 8\nBerBank University\nUniversity BerMall\nUniversity BerBank\n''') == '11'\nassert solution('''4 2 1 300 1000\na A\nA aa\naa AA\nAA a\n''') == '5'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 5 2 1\") == \"YES\"\nassert solution(\"4\\n1 1 1 4\") == \"YES\"\nassert solution(\"12\\n1 2 3 4\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 1 3 1\") == \"YES\"\nassert solution(\"5 5 3 4 3\") == \"NO\"\n\nassert solution(\"5 2 1 3 1\") == \"YES\"\nassert solution(\"5 5 3 4 3\") == \"NO\"\n\nassert solution(\"5 2 1 3 1\") == \"YES\"\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == 'YES'\nassert solution('5') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 5 2 1') == 'YES'\nassert solution('4\\n1 1 1 4') == 'NO'\nassert solution('3\\n1 1 2') == 'NO'"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 1 5 2 1') == 'YES'\nassert solution('6\\n1 1 1 2 2 2') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 1 5 2 1') == 'YES', 'For testing'\nprint(solution(input()))\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'NO'\nassert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'NO'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES', \"Your function did not return the correct result\""
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('2') == '1100'"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n10 5 0 -5 -10\n''') == '-15'\nassert solution('''4\n1 1 1 1\n''') == '1'\nassert solution('''2\n900 1000\n''') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '-15'\nassert solution('4') == '1'\nassert solution('2') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '-15'\nassert solution('3') == '-5'\nassert solution('4') == '-5'\nassert solution('5') == '-15'\nassert solution('6') == '-15'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '-15'\nassert solution('3') == '-5'\nassert solution('4') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n10 5 0 -5 -10\n''') == '-15'\nassert solution('''\n4\n1 1 1 1\n''') == '1'\nassert solution('''\n2\n900 1000\n''') == '1100'\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n10 5 0 -5 -10\\n\") == \"-15\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"1\"\nassert solution(\"2\\n900 1000\\n\") == \"1100\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '-5'\nassert solution('4') == '-5'\nassert solution('5') == '-5'\nassert solution('6') == '-15'\n\nstdin = \"\"\"3\n10 5 0 -5 -10\n\"\"\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"-15\"\nassert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"1100\""
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5\"\n    ) == \"-15\"\nassert solution(\n    \"4\"\n    ) == \"1\"\nassert solution(\n    \"3\"\n    ) == \"-5\"\nassert solution(\n    \"2\"\n    ) == \"1100\""
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution('''\n    1 2\n    1 3\n    1 4\n''') == \"YES\"\nassert solution('''\n    5\n    1 2\n    1 3\n    1 4\n    2 5\n    2 6\n''') == \"YES\"\nassert solution('''\n    6\n    1 2\n    1 3\n    1 4\n    2 5\n    2 6\n''') == \"YES\"\nassert solution('''\n    2\n    1 2\n    1 3\n''') == \"NO\"\n'''\n[Image] \n\n[Image]\n'''"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"3 4\") == \"NO\"\n\ninput = sys.stdin.readlines()"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == \"NO\"\nassert solution('6') == \"YES\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n\"\"\"\n\nfrom collections import defaultdict, deque\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n1 3\n1 4''') == 'YES'\nassert solution('''3\n1 2\n1 3\n1 4''') == 'NO'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"YES\"\nassert solution(\"3\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"NO\"\nassert solution(\"5\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n\") == \"YES\"\n\n\"\"\""
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == \"YES\"\nassert solution('3') == \"NO\"\nassert solution('5') == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\n\n\"\"\"\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == \"YES\"\nassert solution('4') == \"YES\"\nassert solution('5') == \"NO\"\nassert solution('6') == \"YES\""
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == '2'\n\"\"\"\n\nimport math\n\nn = int(input())\n\narr = list(map(int, input().split()))\n\nres = 0\n\ns_arr = set(arr)\n\nfor i in range(len(s_arr)):\n    for j in range(len(s_arr)):\n        res += math.ceil(((abs(s_arr[i] - s_arr[j])) % len(s_arr)))\n\nprint(res)\n\nfor i in range(res):\n    print(s_arr[i])\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n2 6''') == '0'\nassert solution('''3\n1 2 3''') == '1'\nassert solution('''4\n4 8 3 2''') == '2'\nassert solution('''5\n2 4 6 5''') == '1'\nassert solution('''6\n2 5 3 3 5''') == '0'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n1 2 3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"0\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\n\"\"\"\n\nfrom typing import List\n\nn = int(input())\nb: List[int] = list(map(int, input().split()))"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 6\") == \"0\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"3 4 5\") == \"0\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('2\\n1 2') == '1'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3\n''') == '1'\nassert solution('''\n2 6\n''') == '0'\nassert solution('''\n3\n''') == '2'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1 2 3') == '2'\nassert solution('2 6') == '0'"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n2 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2\n3 3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"0\""
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\n\"\"\"\nimport itertools\n\nN = int(input())\nS_1 = input()\nS_2 = input()\n\nlen_1 = len(S_1)\nlen_2 = len(S_2)"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 6\n\n'''\nfrom math import factorial\nfrom functools import reduce\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\naab\\nccb\") == \"6\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"5\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '1'\nassert solution('5') == '5'\n'''\nn=int(input())\na=input()\nb=input()\nc=[]\nfor i in range(n):\n    for j in range(n):\n        if a[i]==b[j] or a[i]=='#' or b[j]=='#':\n            c.append('#')\n        else:\n            c.append(a[i])\n        if c[-1]=='#' or a[i]=='#' or b[j]=='#':\n            c.append('#')\n        else:\n            c.append(b[j])\nprint(len(set(c)))\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin := input()) == '6'\n'''\n\nimport math\nfrom itertools import combinations\nfrom collections import defaultdict\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '6'\n\"\"\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 6\n\"\"\""
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"6\"\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '2'\nassert solution('3') == '3'\n\"\"\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 100 5\\n5 2 1 2 1') == 'YES'\nassert solution('100 8 5\\n1 2 3 4 5 6 7') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '100 100 5\\n'\n    '5 2 1 2 1\\n'\n) == 'YES\\n'\n\nassert solution(\n    '100 8 5\\n'\n    '5 2 1 2 1\\n'\n) == 'NO\\n'\n\n'''\n\nfrom itertools import product"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100 100 5') == 'YES'\nassert solution('100 8 5') == 'NO'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n1 2 3 4 5 6 7\") == \"NO\""
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 2 1 2 1') == 'YES'\nassert solution('100 8 5') == 'NO'"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100 100 5\\n5 2 1 2 1\") == \"YES\"\nassert solution(\"100 8 5\\n1 2 3 4 5 6 7\") == \"NO\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100 100 5\") == \"YES\"\nassert solution(\"100 8 5\") == \"NO\"\nassert solution(\"100 100 7\") == \"NO\"\n\n\"\"\"\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\"\"\"\n\nn, m, k = [int(i) for i in input().split()]\na = sorted(input().split())"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"100 100 5\") == \"YES\"\nassert solution(\"100 8 5\") == \"NO\"\n\n\n\n---\n\nclass Solution:\n    def get_seq_common_divisor(self, x, y):\n        while y:\n            x, y = y, x % y\n        return x\n    \n    def get_table_row_index(self, x, seq):\n        for i in range(len(seq)):\n            if self.get_seq_common_divisor(x, seq[i]) == seq[i]:\n                return i\n        return None\n    \n    def get_table_row_index_recursive(self, seq):\n        row = []\n        for i in range(len(seq)):\n            row.append(self.get_table_row_index(seq[i], seq))\n        return row\n    \n    def get_table_row_indices(self, seq):\n        return self.get_table_row_index_recursive(seq)\n    \n    def check_sequence_in_table(self, seq:list) -> bool:\n        table_row_indices = self.get_table_row_indices(seq)\n        if not table_row_indices:\n            return False\n        else:\n            return all(table_row_indices)\n    \n    def solution(self, stdin: str) -> str:\n        return \"YES\" if self.check_sequence_in_table(list(map(int, stdin.split()))) else \"NO\"\n    \nassert solution(\"100 100 5\") == \"YES\"\nassert solution(\"100 8 5\") == \"NO\"\n\nprint(solution(input()))\n\n\"\"\""
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n4 1 5 10\n1 4 10 5\n\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '4'\nassert solution('''2\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '1'\nassert solution('''7\n6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\nassert solution('''6\n6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '2'"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n4 1 5 10\n1 4 10 5''') == \"4\"\n\nassert solution('''7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == \"3\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n1 1 2\") == \"3\"\nassert solution(\"1 1\\n1 1 2\") == \"2\"\nassert solution(\"3 1\\n1 3 2\") == \"1\"\nassert solution(\"5 5\\n2 2 2 2 2\") == \"9\"\nassert solution(\"10 10\\n1 1 2 2 3 3\") == \"7\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 2\n4 1 5 10\n1 4 10 5\n''') == '4', \"Wrong\"\nassert solution('''7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3', \"Wrong\"\nassert solution('''8 3\n2 1 1 2 2\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '6', \"Wrong\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == 4\n\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n\n''') == 3\n\nassert solution('''\n10 3\n4 1 5 10\n1 4 10 5\n2 1 2 1\n2 2 5 2\n2 3 5 3\n3 1 2 3\n1 4 3 4\n1 5 3 5\n4 2 4 3\n''') == 8\n\nassert solution('''\n8 2\n1 4 4 4 4 4 4\n3 2 3 3 3 3 3\n''') == 0\n\nassert solution('''\n3 3\n2 1 2\n1 2 3\n''') == 4"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == \"4\", \"First example\"\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == \"3\", \"Second example\"\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2') == '4'\nassert solution('7 6') == '3'\n'''\n\nclass Solution:\n    def solve(self, stdin: str) -> str:\n        def get_total(r1,r2):\n            return min(r1[1]-r1[0]+1,r2[1]-r2[0]+1)\n        n,m = list(map(int,stdin.split()))\n        black = set()\n        for i in range(m):\n            black.add((*list(map(int,stdin.split()))[2:4]))\n        nums = list(range(1,n**2+1))\n        new = nums[:]\n        res = float('inf')\n        for r in black:\n            new[r] = 0\n        for i in range(1,n**2+1):\n            if new[i] == 0:\n                continue\n            for j in range(i+1,n**2+1):\n                if new[j] == 0:\n                    continue\n                if new[i] + new[j] < res:\n                    res = new[i] + new[j]\n        return res"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n5\\n3\\n4\\n3\\n4\\n') == '4'\nassert solution('10\\n2\\n5\\n3\\n4\\n3\\n4\\n') == '4'\nassert solution('100\\n10\\n50\\n1\\n50\\n20\\n100\\n50\\n100\\n50\\n1\\n100\\n20\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n1\\n50\\n20\\n100\\n50\\n100\\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 6\\n2 1 2 1\\n4 2 4 3\\n2 5 2 5\\n2 3 5 3\\n1 2 1 2\\n3 2 5 3\\n\") == \"4\""
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 2\") == \"4\"\nassert solution(\"7 6\") == \"3\"\n\nINPUT_SEPARATOR = \"\\n\"\nOUTPUT_SEPARATOR = \"\\n\""
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no\\nyes\\nyes\\nno\\nyes'"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n1 5 2 6 1\") == 'yes'\nassert solution(\"5 3\\n1 6\") == 'no'\nassert solution(\"5 3\\n6 7\") == 'yes'\n\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        result = []\n        t = int(stdin.strip().split()[0])\n        for i in range(t):\n            n, k = map(int, stdin.strip().split()[i * 2 + 1].split())\n            result.append(\"yes\" if self.valid(n, k) else \"no\")\n        return \"\\n\".join(result)\n\n    def valid(self, n, k):\n        return (n + 1) % 2 == 1 and all([a % 2 == 0 for a in range(1, k + 1)]) and all([a > k - 1 for a in range(k + 1, n + 1)])\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        result = []\n        t = int(stdin.strip().split()[0])\n        for i in range(t):\n            n, k = map(int, stdin.strip().split()[i * 2 + 1].split())\n            result.append(\"yes\" if self.valid(n, k) else \"no\")\n        return \"\\n\".join(result)\n\n    def valid(self, n, k):\n        for i in range(1, k):\n            if (n + 1) % 2 == 1 and all([a % 2 == 0 for a in range(1, i + 1)]):\n                if all([a > k - 1 for a in range(k + 1, n + 1)]):\n                    return True\n            if (n + 1) % 2 == 0 and all([a % 2 == 1 for a in range(1, i + 1)]):\n                if all([a > k - 1 for a in range(k + 1, n + 1)]):\n                    return True\n        return False\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        result = []\n        t = int(stdin.strip().split()[0])\n        for i in range(t):\n            n, k = map(int, stdin.strip().split()[i * 2 + 1].split())\n            result.append(\"yes\" if self.valid(n, k) else \"no\")\n        return \"\\n\".join(result)\n\n    def valid(self, n, k):\n        result = []\n        for i in range(1, k):\n            if (n + 1) % 2 == 1 and all([a % 2 == 0 for a in range(1, i + 1)]):\n                if all([a > k - 1 for a in range(k + 1, n + 1)]):\n                    result.append(True)\n            if (n + 1) % 2 == 0 and all([a % 2 == 1 for a in range(1, i + 1)]):\n                if all([a > k - 1 for a in range(k + 1, n + 1)]):\n                    result.append(True)\n        return all(result)\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        result = []\n        t = int(stdin.strip().split()[0])\n        for i in range(t):\n            n, k = map(int, stdin.strip().split()[i * 2 + 1].split())\n            result.append(\"yes\" if self.valid(n, k) else \"no\")\n        return \"\\n\".join(result)\n\n    def valid(self, n, k):\n        return all([a > k - 1 for a in range(k + 1, n + 1)])\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        result = []\n        t = int(stdin.strip().split()[0])\n        for i in range(t):\n            n, k = map(int, stdin.strip().split()[i * 2 + 1].split())\n            result.append(\"yes\" if self.valid(n, k) else \"no\")\n        return \"\\n\".join(result)\n\n    def valid(self, n, k):\n        return all([a > k - 1 for a in range(k + 1, n + 1)])\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        result = []\n        t = int(stdin.strip().split()[0])\n        for i in range(t):\n            n, k = map(int, stdin.strip().split()[i * 2 + 1].split())\n            result.append(\"yes\" if self.valid(n, k) else \"no\")\n        return \"\\n\".join(result)\n\n    def valid(self, n, k):\n        return all([a > k - 1 for a in range(k + 1, n + 1)])\n\"\"\"\n\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        result = []\n        t = int(stdin.strip().split()[0])\n        for i in range(t):\n            n, k = map(int, stdin.strip().split()[i * 2 + 1].split())\n            result.append(\"yes\" if self.valid(n, k) else \"no\")\n        return \"\\n\".join(result)\n\n    def valid(self, n, k):\n        for i in range(1, k):\n            if (n + 1) % 2 == 1 and all([a % 2 == 0 for a in range(1, i + 1)]):\n                if all([a > k - 1 for a in range(k + 1"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3') == 'yes'\nassert solution('5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3') == 'no'\nassert solution('5 3\\n1 5 2 6 1\\n1 6\\n6\\n3 2\\n1 2 3\\n4 3\\n3 1 2 3') == 'no'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n6 4 7\\n1 2 3\\n1 2 3\\n3 2\") == \"yes\"\nassert solution(\"4\\n7 8 9 10\\n3 2 1 6\\n7 8 9 10\\n9 8 7 1\\n7 8 9 10\\n3 2 1 6\\n3 2 1 6\") == \"yes\"\nassert solution(\"5\\n3 5 6 7 8\\n4 2 1 5\\n4 2 1 5\\n4 2 1 5\\n4 3 1 2\\n4 3 1 2\") == \"no\"\nassert solution(\"4\\n7 8 9 10\\n3 2 1 6\\n7 8 9 10\\n9 8 7 1\\n7 8 9 10\\n3 2 1 6\\n3 2 1 6\") == \"yes\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'yes'\nassert solution('''5 5\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2 1\n5 4 3 2"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'no\\nno\\nno\\nno\\nyes'\nassert solution() == 'yes\\nyes\\nno\\no\\nyes'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"yes\\nno\\nyes\\nno\\nyes\"\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'no'\nassert solution('5 3') == 'yes'\nassert solution('1 6') == 'yes'\nassert solution('1 6') == 'yes'\nassert solution('6') == 'no'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'no'\n\nassert solution('''\n5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == 'yes'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n1 3\\n2 5\\n4 5\\n\") == \"2\"\nassert solution(\"4 2\\n1 4\\n2 4\\n\") == \"3\"\nassert solution(\"5 2 0 1\\n1 2\\n2 3\") == \"2\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"5 3\") == \"1 0 2 1 0\""
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'\n\nsolution.iterative_solution = iterative_solution\nsolution.recursive_solution = recursive_solution\n\nclass Solution:\n    def iterative_solution(self, stdin):\n        pass\n    \n    def recursive_solution(self, stdin):\n        pass\n\nclass Solution:\n    def iterative_solution(self, stdin):\n        pass\n    \n    def recursive_solution(self, stdin):\n        pass\n\nfrom collections import deque"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\""
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 3\n2 5\n4 5\n''') == '2'\nassert solution('''4 2\n1 4\n2 4\n''') == '3'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"4 2\") == \"3\"\n\"\"\""
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"9\"\nassert solution(\"100 3\") == \"99\"\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 3\n2 5\n4 5''') == '2'\n\nassert solution('''4 2\n1 4\n2 4''') == '3'"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n\"\"\") == \"NO\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\n\n'''\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n1 0 1\n2 1 3 2\n2 1 2\n2 2 3\n''') == 'YES'\nassert solution('''\n3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\n''') == 'NO'\nassert solution('''\n3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n''') == 'YES'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'YES'\nassert solution('3 3') == 'NO'\nassert solution('3 3') == 'NO'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"YES\", solution(\"3 3\")\nassert solution(\"3 3\") == \"NO\", solution(\"3 3\")\nassert solution(\"5 5\") == \"YES\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 3\n1 0 1\n2 1 3\n2 1 2\n2 2 3\"\"\") == \"NO\"\nassert solution(\"\"\"3 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\n\"\"\") == \"YES\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\n''') == \"NO\"\nassert solution('''\n2 3\n1 0 1\n3 1 2 3\n2 1 2\n1 3\n\n''') == \"YES\"\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\n\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\n\nassert solution(\"3 1 1\") == \"YES\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('(((#)((#)') == '1'\nassert solution('()((#((#(#())') == '2'\nassert solution('#') == '-1'\nassert solution('((#)(((#(#((#())))))())') == '2'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(test) == '2'\nassert solution(open) == '-1'"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    (\n    ((\n    ((\n    (((#(\n    \n    \"\"\"\n) == \"(())()())()\"\n\nassert solution(\n    \"\"\"\n    ((\n    ((\n    (((#(\n    \n    \"\"\"\n) == \"(())((()()()()(()(()())))(((())((()()()()()())(()()()()()()))()()((())((()()()()()())(()()()()()()))))()()((())(()()()()()()(()()()()()()))()((())((()())(()()()))()(()()()()()()(()(())(()()()()()())(()((())((()())(()()()))))()(()(()(()))((())((()()())(()()()))()())(()(()()()(()()()(()(())(()(()()()()())(()((()((())((()()(()())(()(()()())((()(())((()(())((()(()()())((()(()(()()))())((()(()())((()(()()((()()((((()(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''(((#)((#)''') == '1')\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''(((#)((#)\n\n''') == '1')\nassert solution('''())\n\n''') == '-1'\nassert solution('''#\n\n''') == '-1'\nassert solution('''(#\n\n''') == '1'\nassert solution(''')\n\n''') == '1'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '-1'\nassert solution('(#(#(#' ) == '1'\nassert solution('(((#(#(#)') == '2'\nassert solution('()((#((#(#)') == '2'\nassert solution('(#(#(#)') == '1'\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"(((#)((#)\") == \"1\"\nassert solution(\"(()((#(#))\") == \"2\"\nassert solution(\"#\") == \"-\"\nassert solution(\"((()((#(#)\") == \"2\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"(((((#)))((((#)))))\") == \"1\"\nassert solution(\"(()((#(()()))((((#()(#)))))\") == \"3\"\nassert solution
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"((#)((#)\") == \"1\"\n    assert solution(\n        \")((#((#(#()\") == \"2\"\n    assert solution(\n        \")((#)\") == \"1\"\n    assert solution(\n        \"#\") == \"1\"\n    assert solution(\n        \"()())\") == \"2\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'\nassert solution('8 5') == '-2'\n\nprint(solution(input()))"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\nxoxox\n\n-1\nxoxox\n\n1 2\nooxox\n\n6 1\nxxoxo\n\n4 0\nxxxx''') == '-16\\nxxoxo\\n'\n\nassert solution('''2 3\noooox\n\n-1\nooxox\n\n1 2\noooox\n\n6 1\nxxoxo\n\n4 0\nxxxx''') == '-1\\nxxxx\\n'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"2 2\") == \"-1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"5 5\") == \"9\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 4\n\n''') == '-1\n\nassert solution('''\n5 3\n\n''') == '-1\n\nassert solution('''\n5 4\n\n''') == '-1\n\nassert solution('''\n10 5\n\n''') == '-1\n\nassert solution('''\n10 0\n\n''') == '-1"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == 'xoxox'"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1\\n\"\n    \"0\\n\") == \"0\\n\"\nassert solution(\n    \"2\\n\"\n    \"0\\n\") == \"-1\\n\"\nassert solution(\n    \"3\\n\"\n    \"0\\n\") == \"-1\\n\"\nassert solution(\n    \"4\\n\"\n    \"0\\n\") == \"16\\n\"\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('3 2') == '1 2'\nassert solution('6 3') == '2 4 5 6'\nassert solution('4 2') == '1 2'\n\nstdin = input()\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"1 1 1\") == \"17\"\nassert solution(\"1 2 1\") == \"15\"\nassert solution(\"3 4 4\") == \"42\"\n\"\"\"\n\nn, m, k = tuple(map(int, input().split()))"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 1\n''') == '17'\nassert solution('''3 2 1\n''') == '16'\nassert solution('''5 5 2\n''') == '15'\n'''\n\n\n'''\nn, m, k = map(int, stdin.readline().split())"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '17'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 1\") == \"17\"\nassert solution(\"1 1 1\") == \"17\"\nassert solution(\"2 2 2\") == \"17\"\n\"\"\"\n\nn, m, k = map(int, stdin.strip().split())\n\npossible_patterns = 3**(n+m+k)\npatterns_count = 0\n\nfor i in range(n+m+k):\n    for j in range(i):\n        if i == n:\n            patterns_count += 1\n        elif i > n:\n            if j == n:\n                patterns_count += 1\n        elif i == k:\n            if j == k:\n                patterns_count += 1\n        elif i > k:\n            if j > k:\n                patterns_count += 1\n\nprint(patterns_count % 1000000007)"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"1 2 3\") == \"27\"\nassert solution(\"2 1 1\") == \"28\"\nassert solution(\"1 3 2\") == \"19\"\n\n---\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"2 1 1\") == \"17\"\nassert solution(\"3 1 1\") == \"17\"\nassert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1 1\n''') == '17', 'Sample Test Failed'\nassert solution('''1 2 1\n''') == '8', 'Sample Test Failed'\nassert solution('''2 3 1\n''') == '8', 'Sample Test Failed'\nassert solution('''3 2 1\n''') == '17', 'Sample Test Failed'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 1\\n\") == \"17\"\nassert solution(\"10 2 10\\n\") == \"1236\"\nassert solution(\"1 1 1\\n\") == \"17\"\nassert solution(\"1 1 1\\n\") == \"17\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1\\n\") == \"17\"\nassert solution(\"1 1 2\\n\") == \"0\"\nassert solution(\"2 2 2\\n\") == \"0\"\nassert solution(\"3 3 3\\n\") == \"0\"\nassert solution(\"4 4 4\\n\") == \"0\"\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"17\"\n\"\"\""
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''2 2\n1 2\n3 4\n''') == '3 2'\nassert solution('''5 6\n1 2 3 5 4 6 7\n8 9 10 11 12 13 14 15\n16 17 18 19 20 21 22 23\n24 25 26 27 28 29 30\n''') == '11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30'\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n1 2 1\n2 1 2\n3 4\n''') == '2 2 2'\nassert solution('''\n5 5\n1 2 1\n2 1 2\n3 4\n''') == '2 2 2'\nassert solution('''\n6 3\n1 2 1\n2 1 2\n3 4\n3 3\n4 2\n''') == '2 2 2'\nassert solution('''\n6 2\n1 2\n3 4\n3 4\n4 2\n''') == '2 2 2'"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\nprint(solution(input))\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2\n''') == '2 2 2 \nassert solution('''2 2\n1 2\n3 4\n''') == '2 3 \n'''"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2, 3]) == \"2 2 2\"\nassert solution([2, 2]) == \"2 2 2\"\nassert solution([2, 1]) == \"2 2 2\"\nassert solution([2, 2]) == \"2 2 2\"\nassert solution([3, 3]) == \"3 3 3\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 3\n1 2 1\n2 1 2\n''') == '2 2 2 \nassert solution('''\n2 2\n1 2\n3 4\n''') == '3 2 \n''')\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 3]) == \"2 2 2\"\nassert solution([2, 2]) == \"2 2 2\"\nassert solution([2, 1]) == \"2 2 2\"\nassert solution([2, 2]) == \"2 2 2\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '2 2 2'\nassert solution('2 2') == '2 2 2'\nassert solution('3 4') == '3 2 3'\nassert solution('1 2') == '2 2 2'\nassert solution('2 2') == '2 2 2'"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"2 2 2\"\nassert solution(\"2 2\") == \"2 2 2\"\nassert solution(\"2 2\") == \"2 2 2\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '2 2 2\\n2 2 2\\n'\nassert solution('2 2') == '2 2 2\\n2 2 2\\n'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''1 2\n1\n1\n''') == '3'\nassert solution('''3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '332748119'\nassert solution('1 2') == '185138929'\nassert solution('1 2') == '974061117'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '3'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"332748119\"\nassert solution(\"1 3\") == \"185138929\"\nassert solution(\"2 3\") == \"974061117\"\nassert solution(\"3 3\") == \"160955686\"\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '332748119'\nassert solution('1 2') == '185138929'\nassert solution('1 2') == '974061117'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1\n0 1\n2 1''') == '332748119'\nassert solution('''1 2\n1\n1\n''') == '3'\nassert solution('''3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1\\n0 1\\n2 1\") == \"332748119\"\nassert solution(\"3 3\\n0 1 1\\n4 3 5\") == \"160955686\"\nassert solution(\"4 3\\n0 1 1\\n1 2 3\") == \"974061117\""
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '332748119'\nassert solution(input_) == '185138929'\nassert solution(input_) == '974061117'"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1') == '332748119'\nassert solution('1 2') == '332748119'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '332748119'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n\nprint(solution(stdin))"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == '1'\nassert solution('5\\n') == '11'\nassert solution('5\\n') == '11'\nassert solution('5\\n') == '11'\nassert solution('5\\n') == '11'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"11\"\nassert solution(stdin=\"5\\n1 1 2 3 4 5\") == \"6\"\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"6\""
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 1 2 3') == '6'\nassert solution('5\\n1 2 3 4 5') == '11'"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '100'\nassert solution('3 1 5 2 6') == '11'\nassert solution('1 100 101 100 1') == '102'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"11\""
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n3 1 5 2 6\n\n''') == '11'\nassert solution('''5\n1 2 3 4 5\n\n''') == '6'\nassert solution('''5\n1 100 101 100 1\n\n''') == '102'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 1 2 3 4 5') == '6'\nassert solution('5\\n3 1 5 2 6') == '11'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"11\""
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '11'\nassert solution('''5\n100 101 100 101 1\n''') == '102'\nassert solution('''5\n1 1 1 1 1\n''') == '2'\nassert solution('''5\n1 1 1 1 1\n''') == '2'\nassert solution('''5\n1 2\n''') == '3'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 3\n2 3\n''') == \"Yes\"\nassert solution('''\n3 1\n1 3\n2 3\n''') == \"No\"\nassert solution('''\n4 3\n1 4\n2 4\n3 4\n4 13\n10 5\n11 5\n12 5\n13 6\n4 13\n6 7\n8 6\n13 6\n9 6\n''') == \"Yes\"\nassert solution('''\n5 5\n1 4\n2 4\n3 4\n4 13\n5 13\n6 7\n8 6\n9 6\n10 5\n11 5\n12 5\n13 6\n4 13\n6 7\n8 6\n13 6\n9 6\n10 5\n11 5\n12 5\n13 6\n''') == \"No\"\nassert solution('''\n6 8\n1 4\n2 4\n3 4\n4 13\n5 13\n6 7\n8 6\n9 6\n10 5\n11 5\n12 5\n13 6\n4 13\n6 7\n8 6\n13 6\n9 6\n10 5\n11 5\n12 5\n13 6\n''') == \"Yes\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == 'Yes'\nassert solution('3 1') == 'No'"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\n\"\"\"\n\n\nclass Graph:\n    def __init__(self):\n        self.matrix = []\n\n    def add_edge(self, u, v):\n        self.matrix.append([u, v])\n        self.matrix.append([v, u])\n\n    def __str__(self):\n        return f\"matrix = {self.matrix}\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('14 2') == 'Yes'\nassert solution('3 1') == 'No'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 1\n1 3\n2 3\n''') == 'No'\nassert solution('''\n3 1\n1 3\n2 3\n''') == 'Yes'\nassert solution('''\n2 1\n1 2\n''') == 'No'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == 'Yes'\nassert solution('1 1') == 'No'"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == 'Yes'\nassert solution('3 1') == 'No'"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\n\"\"\"\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"14 2\\n1 4\\n2 4\\n3 4\\n4 13\\n10 5\\n11 5\\n12 5\\n14 5\\n5 13\\n6 7\\n8 6\\n13 6\\n9 6\") == \"Yes\"\nassert solution(\"3 1\\n1 3\\n2 3\\n\") == \"No\""
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 3\n2 3\n''') == 'Yes'\nassert solution('''\n3 1\n1 3\n2 3\n''') == 'No'\nassert solution('''\n2 2\n1 3\n2 3\n''') == 'Yes'\nassert solution('''\n3 1\n1 3\n2 3\n''') == 'No'\nassert solution('''\n3 2\n1 3\n2 3\n''') == 'No'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"2 1\") == \"-\"\nassert solution(\"3 5\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"3 4\") == \"-1\"\nassert solution(\"2 5\") == \"-1\"\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"4 5\") == \"2\"\nassert solution(\"2 1\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"4 5\") == \"0\""
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '-1'\nassert solution('5 3') == '-1'\nassert solution('2 1') == '-1'\nassert solution('2 2') == '0'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"4 5\") == \"2\"\n\n\"\"\"\n\nimport math\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n.#.\n###\n##.''') == '1'\n\nassert solution('''4 5\n....#\n####.\n.###.\n.#...\n\n''') == '0'\n\nassert solution('''2 1\n.\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 3\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 2') == '-1'\nassert solution('3 5') == '0'\nassert solution('4 5') == '1'"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n.#.\n###\n##.\n\n''') == '1'\nassert solution('''4 2\n##\n.#\n##\n\n''') == '-1'\nassert solution('''3 5\n.....\n.....\n.....\n\n''') == '0'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n1 0 2 3\n5 5 5 2\n0 0 0''') == 'YES'\n\nassert solution('''4 3\n1 0 2 3\n\n5 6\n6 5 6 2 2\n\n5 6\n6 5 6 2 2\n\n6 5\n6 5 6 2 2\n\n5 5\n5 5 6 2 2\n\n6 5\n6 5 6 2 2\n''') == 'YES'\n\nassert solution('''3 5\n0 0 0\n\n5 6\n6 5 6 2 2\n\n5 5\n5 5 6 2 2\n\n6 5\n6 5 6 2 2\n\n5 5\n5 5 6 2 2\n\n6 5\n6 5 6 2 2\n''') == 'YES'\n\nassert solution('''3 5\n1 0 2 3\n\n5 6\n6 5 6 2 2\n\n5 5\n5 5 6 2 2\n\n6 5\n6 5 6 2 2\n\n5 5\n5 5 6 2 2\n\n6 5\n6 5 6 2 2\n''') == 'YES'\n\nassert solution('''3 5\n0 0 0\n\n5 6\n6 5 6 2 2\n\n5 5\n5 5 6 2 2\n\n6 5\n6 5 6 2 2\n\n5 5\n5 5 6 2 2\n\n6 5\n6 5 6 2 2\n''') == 'NO'"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 1 2\") == \"NO\"\nassert solution(\"1 2 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"3 2 1\") == \"YES\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''5 6\n0 0 0\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''5 6\n0 0 0\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'NO'\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 6\n0 0 0\n''') == 'YES'\n\nassert solution('''\n5 6\n0 0 0\n''') == 'YES'\n\nassert solution('''\n3 5\n1 0 2\n''') == 'YES'\n\nassert solution('''\n3 5\n0 0 0\n''') == 'YES'\n\nassert solution('''\n3 5\n0 0 0\n''') == 'YES'"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 0 2 3') == 'YES'\nassert solution('4 10\\n10 10 10 2 2') == 'YES'\nassert solution('5 6\\n6 5 6 2 2') == 'NO'"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() in {'YES', 'NO'}\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\nassert solution(\"5 6\") == \"NO\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"5 5\") == \"NO\"\n\nprint(solution(input()))\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5\n0 0 0\n''') == 'YES'\n\nassert solution('''5 5\n0 0 0\n''') == 'YES'\n\nassert solution('''3 4\n0 0 0\n''') == 'NO'\n\nassert solution('''5 2\n0 0 0\n''') == 'YES'\n\nassert solution('''5 5\n0 0 0\n''') == 'NO'"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 10\n10 10 10\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'YES'\nassert solution('''3 5\n0 0 0\n''') == 'NO'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(t_input) == t_ans\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4 3 6 2'"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2') == '4 3 6 2'\nassert solution('1') == '1'\nassert solution('2') == '1 1'\nassert solution('1 1') == '1 1 1 1'\nassert solution('3') == '1 1 1'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\\n') == '4 3 6 2'\nassert solution('1\\n42\\n') == '42'\nassert solution('4\\n1 1 1 1\\n') == '1 1'\nassert solution('5\\n3 1 2 3 4 5 4 5 6 6 1 2 1 2 3 2\\n') == '2 3 4 5 6'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n''') == '4 3 6 2'\nassert solution('''\n1\n42\n''') == '42'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('4') == '3 2 1 4'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\\\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n\"\"\") == \"4 3 6 2\"\nassert solution(\"\"\"\\\n1\n42\n\nOutput\n42 \n\"\"\") == \"42\"\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == None\nassert solution(\"\") == None\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 2 3\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1\\n2 1\\n3 1\\n1 2\\n1 3\") == \"6\"\nassert solution(\"4\\n2 1\\n2 2\\n3 1\\n3 2\\n1 2\\n2 1\") == \"5\"\nassert solution(\"5\\n1 1\\n2 1\\n3 1\\n3 2\\n1 2\\n2 1\") == \"5\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3\n''') == '3'\n\nassert solution('''4\n2 1\n2 2\n3 1\n3 2\n''') == '6'\n\nassert solution('''5\n2 1\n2 2\n3 1\n3 2\n4 1\n4 2\n''') == '7'\n\nassert solution('''6\n2 1\n2 2\n3 1\n3 2\n4 1\n4 2\n5 1\n5 2\n''') == '7'\n\nprint(solution('''6\n2 1\n2 2\n3 1\n3 2\n4 1\n4 2\n5 1\n5 2\n'''))\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 1\n1 2\n1 3\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n2 1\n2 2\n3 1\n3 2\n\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n4\n3 1\n3 2\n3 3\n\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n1 3\n3 1\n1 2\n1 4\n2 2\n\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n20\n0 0\n2 5\n4 1\n3 2\n4 4\n5 4\n6 7\n7 6\n8 8\n9 8\n10 9\n11 6\n12 7\n13 8\n14 9\n15 13\n16 6\n17 5\n18 5\n19 5\n20 7\n\n\"\"\") == \"5\""
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3\n''') == '3'\n\nassert solution('''3\n2 1\n2 2\n3 1\n3 2\n''') == '6'\n\nassert solution('''4\n2 1\n2 2\n3 1\n3 2\n''') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 3\n\n''') == '3'\n\nassert solution('''\n4\n2 1\n2 2\n3 1\n3 2\n\n''') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 1\n1 2\n1 3\n''') == '3'\nassert solution('''4\n2 1\n2 2\n3 1\n3 2\n''') == '6'\nassert solution('''5\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '6'\n\n\"\"\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n1\n2\n3\n2 3\n''') == '6'\nassert solution('''4\n2 1\n2 2\n3 1\n3 2\n''') == '6'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"10\"\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1\\n1 2\\n1 3') == '3'\nassert solution('4 1\\n2 1\\n3 1\\n3 2\\n1 3') == '6'\nassert solution('6 1\\n2 1\\n3 1\\n3 2\\n1 3\\n1 4\\n1 5\\n1 6') == '0'\n\n'''\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3 3'\nassert solution() == '4 4'\nassert solution() == '5 3'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1 1\"\nassert solution(\"3\") == \"1 1\"\nassert solution(\"5\") == \"3 3\"\nassert solution(\"5\") == \"1 3\"\nassert solution(\"5\") == \"2 2\"\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n.E.\nE.E\nE...E\n.EE.\nEE.EE''') == '3 3'\nassert solution('''3\nEEE\nE..\nE.E''') == '-1'\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '4 4'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"3 3\"\n\n\"\"\""
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n.E.\nE..\nE.E''') == '-1'\n\nassert solution('''3\n.E.\nE.E\n.E.E''') == '3 3'\n\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '4 4'\n\nassert solution('''5\nEEE\nE..\nE.E\n.EE\nEE.E''') == '5 5'"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n.E.\nE.E\n.E.\n''') == '-1'\nassert solution('''\n.E.\nE.E\n.E.\n.E.\n''') == '3 3'\nassert solution('''\nEE.EE\nE..\nE.E\nEE.EE\nEE.EE\n''') == '4 4'\n\nassert solution('''\n.E.\nE.E\n.E.\n.E.\nEE.EE\nE.E.\nE.E.\nEE.E.\nEE.E\n''') == '5 5'\n\nassert solution('''\n.E.\nE.E\n.E.\n.E.\nEE.EE\nE.E.\nE.E.\nEE.E.\nEE.E\n''') == '3 3'"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n.E.\nE..\nE.E''') == '-1'\nassert solution('''3\nEEE\nE..\nE.E''') == '3 3'\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '3 3'\n\n\n'''"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n.E.\nE..\nE.E''') == '1 1'\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '3 3'\n''')"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n.E.\nE..\nE.E''') == '3 3'\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '4 4'\nassert solution('''10\nEEE\nE..\nE.E.\nEE.E.\nE.E..\nE.E.E.\nE.E.E.\nE.E.E.\nE.E.E.\nEE.E.E''') == '3 6'\n''')\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 1'\nassert solution('5') == '3 3'\nassert solution('6') == '-1'\n\n\n'''\n\nimport sys"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10') == '32'\nassert solution('1 2 3 4 5 6 7 8 9 10') == '99'\nassert solution('1 0 1 0 1 0 1 0 1') == '0'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n10 2\n10 -1 2 2 2 2 2 2 -1 10\n\"\"\") == \"32\"\n\nassert solution(\"\"\"\n5 10\n-1 -1 -1 -1 -1\n\"\"\") == \"-1\"\n\n\"\"\"\nInput\n3\n5 -1 -2 4 5\n\nOutput\n3\n\"\"\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10') == '32'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('10 -1 2 2 2 2 2 -1 10') == '32'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"32\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"32\""
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10\") == \"32\"\nassert solution(\"10 2\") == \"32\"\nassert solution(\"5 2\") == \"1\""
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 2\n10 -1 2 2 2 2 2 2 -1 10\n''') == \"32\"\n\nassert solution('''\n5 10\n-1 -1 -1 -1 -1\n''') == \"-1\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"32\""
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10\") == \"32\"\nassert solution(\"3 2\") == \"2\"\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2\n10 -1 2 2 2 2 2 2 -1 10\n''') == '32'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('4 2 3') == '3'\nassert solution('1 2 3 4') == '4'\nassert solution('2 3 3 4') == '4'\nassert solution('1 2 3 4 5') == '5'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n2 3\\n') == '6'\nassert solution('4 1 2\\n1 1 2\\n') == '4'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 2\") == \"3\"\nassert solution(\"2 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 1, 2]) == \"3\"\nassert solution([4, 2, 3]) == \"79\"\nassert solution([4, 2, 3]) == \"79\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\"\nassert solution(\"5 2 2\") == \"16\"\nassert solution(\"5 3 4\") == \"32\"\nassert solution(\"5 5 5\") == \"50\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"3\", \"1\", \"2\"]) == \"3\"\nassert solution([\"4\", \"2\", \"3\"]) == \"79\"\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 2\") == \"3\"\nassert solution(\"4 2 3\") == \"79\""
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '7'\nassert solution('4 3') == '7'\nassert solution('5 3') == '4'\nassert solution('2 3') == '7'\nassert solution('3 1') == '7'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == '7'\nassert solution(\"2 3\") == '7'\nassert solution(\"4 3\") == '7'\nassert solution(\"3 0\") == '1'\nassert solution(\"0 3\") == '1'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '7'\nassert solution('1 1') == '7'\nassert solution('1 2') == '7'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '7\\n7\\n4\\n7'"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '7'\nassert solution('2 3') == '7'\nassert solution('3 4') == '7'\nassert solution('4 5') == '7'\nassert solution('5 5') == '7'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '7'\nassert solution('4 4') == '7'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"7\"\nassert solution(\"2 2\") == \"7\"\nassert solution(\"3 3\") == \"7\"\nassert solution(\"4 4\") == \"7\"\nassert solution(\"5 5\") == \"7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"4 3\") == \"7\"\nassert solution(\"5 3\") == \"7\"\nassert solution(\"6 3\") == \"7\"\nassert solution(\"7 3\") == \"7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"5 5\") == \"7\"\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '7'\nassert solution('3 3') == '7'\nassert solution('4 4') == '4'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 2\\n1 5 6 2\\n1 3\\n3 2\") == \"6\"\nassert solution(\"9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8\\n\") == \"9\""
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2\\n1 5 6 2\\n1 3\\n3 2') == '6'\nassert solution('9 3\\n3 2 1 6 5 9\\n8 9\\n3 2\\n2 7\\n3 4\\n7 6\\n4 5\\n2 1\\n2 8') == '9'\nassert solution('11 3\\n3 2 1 5 7\\n3 4\\n7 2\\n8 1\\n2 6\\n5 7\\n1 4\\n1 5\\n1 6\\n4 3\\n6 7\\n6 8') == '15'\nassert solution('16 3\\n1 2\\n2 3\\n3 4\\n4 5\\n1 6\\n2 7\\n3 8\\n4 9\\n1 10\\n2 11\\n5 12\\n6 13\\n7 14\\n8 15\\n9 16\\n10 17\\n11 18\\n12 19\\n13 20\\n14 21\\n15 22\\n16 23\\n17 24\\n18 25\\n19 26\\n20 27\\n21 28\\n22 29\\n23 30\\n24 31\\n25 32\\n26 33\\n27 34\\n28 35\\n29 36\\n30 37\\n31 38\\n32 39\\n33 40\\n34 41\\n35 42\\n36 43\\n37 44\\n38 45\\n39 46\\n40 47\\n41 48\\n42 49\\n43 50\\n44 51\\n45 52\\n46 53\\n47 54\\n48 55\\n49 56\\n50 57\\n51 58\\n52 59\\n53 60\\n54 61\\n55 62\\n56 63\\n57 64\\n58 65\\n59 66\\n60 67\\n61 68\\n62 69\\n63 70\\n64 71\\n65 72\\n66 73\\n67 74\\n68 75\\n69 76\\n70 77\\n71 78\\n72 79\\n73 80\\n74 81\\n75 82\\n76 83\\n77 84\\n78 85\\n79 86\\n80 87\\n81 88\\n82 89\\n83 90\\n84 91\\n85 92\\n86 93\\n87 94\\n88 95\\n89 96\\n90 97\\n91 98\\n92 99') == '57'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'\nassert solution('10 3') == '10'\nassert solution('100 2') == '100'\nassert solution('30 2') == '30'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\n\n\"\"\"\n\nn, k = map(int, input().split())\n\nT = {}\n\nfor i in range(1, n+1):\n    T[i] = set()\n\nfor i in range(k):\n    u1, u2 = map(int, input().split())\n    T[u1].add(u2)\n    T[u2].add(u1)\n\ntotal_sum = 0\n\nfor v in T.values():\n    if len(v) == 1:\n        total_sum += 1\n    else:\n        total_sum += len(v)\n\nprint(total_sum)"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n''') == '6'\nassert solution('''9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n''') == '9'\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n7 2\n1 5 6 2\n1 3\n3 2\n4 5\n3 7\n4 3\n4 6\n\n\"\"\"\n) == \"6\"\n\nassert solution(\n    \"\"\"\n9 3\n3 2 1 6 5 9\n8 9\n3 2\n2 7\n3 4\n7 6\n4 5\n2 1\n2 8\n\n\"\"\"\n) == \"9\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"6 4\") == \"2\"\nassert solution(\"7 4\") == \"3\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'\n\"\"\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3\\n3 1 3 4\\n3 2 5 6\\n1 7'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0010010') == '3 2 1 3 4'\nassert solution('00110011') == '-1'"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1001\") == \"2 1 1\"\nassert solution(\"0111\") == \"3 1 3\"\nassert solution(\"11111\") == \"3 1 3\"\nassert solution(\"10101\") == \"3 1 3 4\"\nassert solution(\"11110\") == \"3 1 3\"\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0010100\n''') == '3 1 3 4', 'First example'\nassert solution('''\n111\n''') == '-1', 'Second example'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''0010100\n        ''') == '3 1 3 4'\nassert solution('''111\n        ''') == '-1'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"111\") == \"1 7\"\nassert solution(\"0010100\") == \"3 1 3 4\"\nassert solution(\"111\") == \"1 7\"\nassert solution(\"1001\") == \"2 1 1\""
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0010100\n''') == '3 1 3 4'\nassert solution('''\n111\n''') == '-1'\nassert solution('''\n1101000111\n''') == '3 2 1 3 4 5 1 4 5 6'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n0010100\n''') == '3 1 3 4'\nassert solution('''\n111\n''') == '-1'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0010100\n''') == '3 1 3 4'\nassert solution('''\n1110\n''') == '-1'\nassert solution('''\n1111\n''') == '-1'\nassert solution('''\n00001\n''') == '1 1'\nassert solution('''\n110111\n''') == '2 2'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0010100') == '3 1 3 4'\nassert solution('111') == '-1'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n2 1 2\n2 2 3\n''') == '1'\n\nassert solution('''1 3\n3 1 2 3\n''') == '1'\n\nassert solution('''2 4\n2 1 2\n3 2 3 4\n''') == '2'\n\nassert solution('''3 7\n2 1 2\n2 3 4\n3 5 6 7\n''') == '24'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 3') == '1'\nassert solution('1 2') == '2'\nassert solution('2 2') == '1'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\n\nassert solution('''\n1 3\n3 1 2 3\n''') == '1'\n\nassert solution('''\n2 4\n2 1 2\n3 2 3 4\n''') == '2'\n\nassert solution('''\n3 7\n2 1 2\n2 3 4\n3 5 6 7\n''') == '24'\n\nassert solution('''\n2 2\n3 2 2 1\n2 1 2\n''') == '2'"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1'\nassert solution('2 4') == '2'\nassert solution('3 7') == '24'"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n2 1 2\\n2 2 3\") == \"1\"\nassert solution(\"1 3\\n2 1 2\\n3 2 3 4\") == \"2\"\nassert solution(\"1 3\\n2 1 2\\n3 2 3 4\") == \"1\"\nassert solution(\"2 4\") == \"1\""
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 3') == '6'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n3 4\n2 1 2\n2 3 4\n3 2 3 4\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n2 3\n2 1 2\n2 2 3\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n1 3\n3 1 2 3\n\"\"\"\n) == \"1\"\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1'\nassert solution('1 3') == '2'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\nassert solution('''\n1 3\n3 1 2 3\n''') == '1'\nassert solution('''\n2 2\n3 2 2 1\n2 1 2\n''') == '2'"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4') == '1'\nassert solution('1 3') == '2'\nassert solution('2 2') == '1'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n\n3\n1 4 2 3 1\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n\n4\n1 5 4 7\n\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n\n5\n1 2 2 3 1\n\n\"\"\") == \"4\""
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 4 2 3 1') == '3'\nassert solution('4\\n1 5 4 7') == '6'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 4 2 3 1\n''') == '3'\nassert solution('''4\n1 5 4 7\n''') == '6'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution() == '6'"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('4') == '6'\n\n'''"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n1 4 2 3 1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4\n1 5 4 7\n\"\"\") == \"6\"\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '6'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 4 2 3 1\n''') == \"3\"\nassert solution('''4\n1 5 4 7\n''') == \"6\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 1 2 3\n\"\"\") == \"\"\"\n1\n\"\"\".strip()\n\nassert solution(\"\"\"\n3\n2 3 1\n\"\"\") == \"\"\"\n3\n\"\"\".strip()\n\nassert solution(\"\"\"\n3\n1 1 1\n\"\"\") == \"\"\"\n2\n\"\"\".strip()\n\nassert solution(\"\"\"\n7\n1 1 1 1 1 1 1\n\"\"\") == \"\"\"\n21\n\"\"\".strip()\n\nassert solution(\"\"\"\n10\n1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"\"\"\n33\n\"\"\".strip()"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '20'\nassert solution('5') == '62'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 2\n''') == '4'\nassert solution('''\n4\n1 1 2 3\n''') == '20'\nprint(solution('''\n'''))"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '20'\nassert solution('5') == '62'"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"20\"\nassert solution(\"5\") == \"62\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"20\"\nassert solution(\"5\") == \"62\"\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1\n1 2\n\"\"\") == \"\"\"4\"\"\".strip()\nassert solution(\"\"\"\n3 3\n1 1 2\n\"\"\") == \"\"\"20\"\"\".strip()\nassert solution(\"\"\"\n2 2\n1 1\n\"\"\") == \"\"\"8\"\"\".strip()\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 2\n\n''') == '4'\nassert solution('''\n4\n1 1 1 1\n\n''') == '20'\nassert solution('''\n5\n1 1 1 1 1\n\n''') == '62'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 1 1 1') == '20'\n\nassert solution('7\\n0 0 1 1 1 1 1') == '73'\n\nassert solution('7\\n0 0 1 1 1 1 1') == '73'\n\nassert solution('7\\n0 0 0 1 1 1 1') == '73'\n\nassert solution('7\\n0 0 0 0 1 1 1') == '73'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1\n1 1\n1 1\n''') == '6'\nassert solution('''\n4\n1 2\n2 1\n3 5\n5 3\n''') == '15'\nassert solution('''\n1\n5 6\n''') == '7'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"7\""
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 2\") == \"6\"\nassert solution(\"3\\n1 1\") == \"7\"\nassert solution(\"1\\n5 6\") == \"15\"\nassert solution(\"1\\n5 6\") == \"15\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2\n2 1\n3 5\n5 3\n''') == '6'\nassert solution('''\n3\n1 1\n1 1\n1 1\n''') == '6'\nassert solution('''\n1\n5 6\n''') == '7'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\""
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 4\n1 2\n2 1\n3 5\n5 3\n''') == '7'\n\nassert solution('''\n4 2\n1 2\n2 1\n3 5\n5 3\n''') == '6'\n\nassert solution('''\n1 5\n3 5\n''') == '9'\n\nassert solution('''\n1 8\n1 9\n''') == '9'\n\nassert solution('''\n3 3\n1 2\n3 2\n''') == '3'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 1\n1 1\n1 1\n''') == '6'\nassert solution('''4\n1 2\n2 1\n3 5\n5 3\n''') == '15'\nassert solution('''1\n5 6\n''') == '7'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n1 1\n1 1\n''') == '6'\n\nassert solution('''\n4\n1 2\n2 1\n3 5\n5 3\n''') == '15'"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"2\") == \"7\"\nassert solution(\"3\") == \"15\"\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1\\n1 1\\n1 1\\n\") == \"6\"\nassert solution(\"4\\n1 2\\n2 1\\n3 5\\n5 3\\n\") == \"15\"\nassert solution(\"1\\n5 6\\n\") == \"7\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '6'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n10 10''') == '1'\n\nassert solution('''3\n3 3''') == '3'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n1\n2\n2\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '1\\n'\n    '4\\n'\n    '2\\n'\n    '3 3\\n'\n    '10 10 10\\n'\n    '17\\n'\n    ) == '3'\nassert solution(\n    '2\\n'\n    '1\\n'\n    '4 4\\n'\n    '2\\n'\n    '3\\n'\n    '10 10 10\\n'\n    '17\\n'\n    ) == '6'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2\n10 10\n17\n''') == '6'\nassert solution('''\n3\n3 3\n10 10 10\n17\n''') == '6'\nassert solution('''\n1\n4\n2\n''') == '1'\nassert solution('''\n1\n1\n10 10 10\n17\n''') == '1'\nassert solution('''\n2\n1\n4 4\n2\n''') == '3'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '4'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'\nassert solution() == '6'\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n4\n1\n2\n''') == '1'\n\nassert solution('''\n2\n1\n3\n2\n''') == '3'\n\nassert solution('''\n3\n3 3\n10 10 10\n17\n''') == '6'\n\nprint('solution() done!')\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"10 10 10\") == \"6\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\n3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3\n3 3\n10 10 10\n17\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n3\n2\n\"\"\") == \"2\"\n\nprint(solution(input()))\n\n\"\"\"\n\n(m / b_1 +... + b_n) % (10^9 + 7)\n\n(b_k / a_k +... + b_1) % (10^9 + 7)\n\n\"\"\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3 3 100\n1 1 1\n3 4 5''') == '10'\nassert solution('''3 6 5 1000000007\n1 2 1\n3 4 5''') == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 3 100''') == '10'\nassert solution('''3 6 5 1000000007''') == '0'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 3 3 100\"\n) == \"10\"\nassert solution(\n    \"3 6 5 1000000007\"\n) == \"0\"\nassert solution(\n    \"3 5 6 11\"\n) == \"0\"\n\nprint(solution(\n    input()\n))\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 6 5 1000000007') == '0'"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0'\nprint(solution())"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3 3 100\n1 2 1\n''') == '10'\nassert solution('''3 5 6 11\n1 2 3\n''') == '0'\nassert solution('''3 4 4 80000005\n1 2 2\n1 2 1\n1 4 1\n''') == '1'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3 3 3 100\\n1 1 1\\n\") == \"10\"\n\nassert solution(\n    \"3 5 6 11\\n1 2 1\\n\") == \"0\"\n\nassert solution(\n    \"5 4 4 1000000007\\n1 2 1\\n\") == \"0\"\n\nassert solution(\n    \"5 5 5 1000000007\\n1 2 1\\n\") == \"0\"\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 6 5') == '0'\nassert solution('3 3 3 100') == '10'"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 3 100\") == \"10\"\nassert solution(\"3 5 6 11\") == \"0\""
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"13 11 15 15\") == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 2 3\\nintel\\ncode') == 'YES'\nassert solution('4\\n1 2 3 1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\h\\i\\j\\k\\l\\m\\n') == 'NO'\nassert solution('4\\n13 11 15 15\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles') == 'YES'"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\na\\nb\\nc\\nd\\ne\\nf\\ng\\nh\\ni\\nj\\nk\\nl\\nm\\no\\np\\qr\\rs\\su\\ts\\tu\\tv\\tw\\tz\\\") == \"NO\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2 2 3\nintel\ncode\nch allenge\n''') == 'YES'\nassert solution('''\n3\n2 2 3\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'YES'\nassert solution('''\n4\n1 2 3 1\na\nbcdefghi\njklmnopqrstu\nvwxyz\n''') == 'NO'"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'YES', 'Should return \"YES\"'\nassert solution('4 5 6') == 'NO', 'Should return \"NO\"'\nassert solution('10 3') == 'NO', 'Should return \"NO\"'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n5 4\nalgo\nis\nbest\nexample\n''') == \"YES\"\n\nassert solution('''\n2\n8 4\ntake\nbeyond\nthe\nlimit\n''') == \"NO\""
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 2 3\") == \"YES\"\nassert solution(\"4\\n1 2 3\") == \"NO\"\nassert solution(\"5\\n10 12 15 5\") == \"YES\"\nassert solution(\"4\\n1 2 3\") == \"NO\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"NO\"\nassert solution(\"4 5 6\") == \"YES\"\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('4 5 6') == 'NO'\nassert solution('7 8 9') == 'NO'\nassert solution('10 11 12') == 'YES'\nassert solution('13 14 15') == 'YES'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\nassert solution('2') == '10'\nassert solution('3') == '26'\nassert solution('4') == '10'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n10\n''') == '26'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n4 7\n5\n''') == '14'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"26\"\nassert solution(\"1\") == \"10\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"26\""
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\nprint(solution(input()))\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '26'\nassert solution('3') == '26'\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 1 5\n\n''') == '26'\nassert solution('''\n1\n10\n\n''') == '10'"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\n\n\"\"\""
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == '3'\nassert solution(\"3 40\") == '32'\nassert solution(\"8 10\") == '20'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == '3'\nassert solution('3 40') == '32'"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4\\n1 3 5') == '3'\nassert solution('3 40\\n10 30 50') == '32'\nassert solution('8 4\\n10 10 10 10 10 10 10 10\\n5 5 5 5 5 5 5 5 5\\n10 9 8 7 6 5 4 3 2 1\\n2 2 1') == '5'\nassert solution('9 4\\n1 1 1 1 1 1 1 1 1\\n3 3 3 3 3 3 3 3 3\\n5 5 5 5 5 5 5 5 5\\n10 9 8 7 6 5 4 3 2 1\\n2 2 1') == '6'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '3'\nassert solution('3 40') == '32'\nprint(solution(*(input().split())))\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"3 40\") == \"32\"\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '32'\nassert solution('3 4') == '3'\nassert solution('3 40') == '32'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n1 3 5') == \"3\"\nassert solution('3 40\\n10 30 50') == \"32\""
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4\n1 3 5\n''') == '3'\n\nassert solution('''3 40\n10 30 50\n''') == '32'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4') == 3\nassert solution('3 40') == 32\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '3 4\\n1 3 5\\n') == '3'\nassert solution(\n    '3 40\\n10 30 50\\n') == '32'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n5 10\\n1 3\\n11 14\\n5 5\\n10 10\\n3 6\\n6 12\\n7 7\\n4 11') == '1 4 5 6 7 8 9'\nassert solution('5 1\\n1 1\\n3 3\\n2 3\\n1 2\\n3 4\\n4 5\\n') == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\n\nassert solution('''5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\n'''\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1 4'\nassert solution('5 1') == '1 2 4 5'\nassert solution('10 1') == '1 2 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 2 4'\nassert solution([5, 1, 1, 3, 3, 3, 4, 4, 4, 5]) == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'\n\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\nSample Output 3:\n1 2\n''') == '1 2'\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\nSample Output 3:\n1 2\n''') == '1 2'"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'\n\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\nSample Output 3:\n1 2\n''') == '1 2'\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\nSample Output 3:\n1 2\n''') == '1 2'\n\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\nSample Output 3:\n1 2\n''') == '1 2'\n\nassert solution('''\n10 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n5 5\n5 5\nSample Output 3:\n1 2\n''') == '1 2'"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 4 5 6 7 8 9'\nassert solution() == '1 2 4'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n\"\"\") == \"1 2 4\"\nassert solution(\"\"\"\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n\"\"\") == \"1 4\"\nassert solution(\"\"\"\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n\"\"\") == \"1 2 4\"\nassert solution(\"\"\"\n10 1\n1 1\n5 5\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n\"\"\") == \"1 2 4\"\nassert solution(\"\"\"\n2 1\n1 1\n5 5\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1 4 5 6 7 8 9\"\nassert solution(\"5 1\") == \"1 2 3 4 5 6 7 8 9\"\nassert solution(\"3 1\") == \"1 2 4\"\n\nstdin = \"\"\"\n6 2\n1 1\n3 3\n2 3\n4 4\n5 5\n6 6\n\"\"\"\nprint(solution(stdin))"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 2\n2 1\n1 2.0\n1 3.100\n\"\"\") == \"1\"\nassert solution(\"\"\"6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 2\n2 1\n1 2.0\n1 3.100\n\n\"\"\") == \"1\"\nassert solution(\"\"\"3 3\n1 5.0\n2 5.5\n3 6.0\n\n\"\"\") == \"0\"\nassert solution(\"\"\"6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\nassert solution(\"6 3\") == \"2\"\n\n\n\"\"\"\nimport math\nfrom collections import deque\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\nassert solution('''\n3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '0'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\n\nassert solution([\n    '3 2',\n    '1 5.0',\n    '2 5.5',\n    '3 6.0'\n]) == '1'\n\nassert solution([\n    '6 3',\n    '1 14.284235',\n    '2 17.921382',\n    '1 20.328172',\n    '3 20.842331',\n    '1 25.790145',\n    '1 27.204125'\n]) == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n1 1\n1 2.0\n1 3.100\n''') == '1'\nassert solution('''3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '0'\nassert solution('''6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '2'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\n\nassert solution('''\n3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '0'\n\nassert solution('''\n6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '2'"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"3 2\", \"2 1\", \"1 2.0\", \"1 3.100\", \"1 4.1\"]) == \"1\"\nassert solution([\"3 3\", \"1 5.0\", \"2 5.5\", \"3 6.0\", \"1 7.5\", \"1 8.0\"]) == \"0\""
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\nassert solution('''6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '0'\nassert solution('''5 1\n5 1.5\n1 2.0\n2 3.2\n1 4.4\n1 5.5\n''') == '1'\nassert solution('''3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '0'\nassert solution('''10 10\n1 1\n1 2.0\n1 3.100\n1 4.4\n1 5.5\n1 6.6\n1 7.7\n1 8.8\n1 9.9\n1 10.0\n1 11.1\n1 12.2\n1 13.3\n1 14.4\n1 15.5\n1 16.6\n1 17.7\n1 18.8\n1 19.9\n1 20.0\n1 21.1\n1 22.2\n1 23.3\n1 24.4\n1 25.5\n1 26.6\n1 27.7\n1 28.8\n1 29.9\n1 30.0\n1 31.1\n1 32.2\n1 33.3\n1 34.4\n1 35.5\n1 36.6\n1 37.7\n1 38.8\n1 39.9\n1 40.0\n1 41.1\n1 42.2\n1 43.3\n1 44.4\n1 45.5\n1 46.6\n1 47.7\n1 48.8\n1 49.9\n1 50.0\n1 51.1\n1 52.2\n1 53.3\n1 54.4\n1 55.5\n1 56.6\n1 57.7\n1 58.8\n1 59.9\n1 60.0\n1 61.1\n1 62.2\n1 63.3\n1 64.4\n1 65.5\n1 66.6\n1 67.7\n1 68.8\n1 69.9\n1 70.0\n1 71.1\n1 72.2\n1 73.3\n1 74.4\n1 75.5\n1 76.6\n1 77.7\n1 78.8\n1 79.9\n1 80.0\n1 81.1\n1 82.2\n1 83.3\n1 84.4\n1 85.5\n1 86.6\n1 87.7\n1 88.8\n1 89.9\n1 90.0\n1 91.1\n1 92.2\n1 93.3\n1 94.4\n1 95.5\n1 96.6\n1 97.7\n1 98.8\n1 99.9\n1 100.0\n1 101.1\n1 102.2\n1 103.3\n1 104.4\n1 105.5\n1 106.6\n1 107.7\n1 108.8\n1 109.9\n1 110.0\n1 111.1\n1 112.2\n1 113.3\n1 114.4\n1 115.5\n1 116.6\n1 117.7\n1 118.8\n1 119.9\n1 120.0\n1 121.1\n1 122.2\n1 123.3\n1 124.4\n1 125.5\n1 126.6\n1 127.7\n1 128.8\n1 129.9\n1 130.0\n1 131.1\n1 132.2\n1 133.3\n1 134.4\n1 135.5\n1 136.6\n1 137.7\n1 138.8\n1 139.9\n1 140.0\n1 141.1\n1 142.2\n1 143.3\n1 144.4\n1 145.5\n1 146.6\n1 147.7\n1 148.8\n1 149.9\n1 150.0\n1 151.1\n1 152.2\n1 153.3\n1 154.4\n1 155.5\n1 156.6\n1 157.7\n1 158.8\n1 159.9\n1 160.0\n1 161.1\n1 162.2\n1 163.3\n1 164.4\n1 165.5\n1 166.6\n1 167.7\n1 168.8\n1 169.9\n1 170.0\n1 171.1\n1 172.2\n1 173.3\n1 174.4\n1 175.5\n1 176.6\n1 177.7\n1 178.8\n1 179.9\n1 180.0\n1 181.1\n1 182.2\n1 183.3\n1 184.4\n1 185.5\n1 186.6\n1 187.7\n1 188.8\n1 189.9\n1 190.0\n1 191.1\n1 192.2\n1 193.3\n1 194.4\n1 195.5\n1 196.6\n1 197.7\n1 198.8\n1 199.9\n1 200.0\n1 201.1\n1 202.2\n1 203.3\n1 204.4\n1 205.5\n1 206.6\n1 207.7\n1 208.8\n1 209.9\n1 210.0\n1 211.1\n1 212.2\n1 213.3\n1 214.4\n1 215.5\n1 216.6\n1 217.7\n1 218.8\n1 219.9\n1 220.0\n1 221.1\n1 222.2\n1 223.3\n1 224.4\n1 225.5\n1 226.6\n1 227.7\n1 228.8\n1 229.9\n1 230.0\n1 231.1\n1 232.2\n1 233.3\n1 234.4\n1 235.5\n1 236.6\n1 237.7\n1 238.8\n1 239.9\n1 240.0\n1 241.1\n1 242.2\n1 243.3\n1 244.4\n1 245.5\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n4 5 6') == '3'\nassert solution('2 3\\n4 5 6') == '3'\nassert solution('2 4\\n4 5 6') == '2'\n\n\n-----Hint 1-----\n\nYou can try to use the idea that the problem is an equivalent of the set theory.\n\nSo you can solve it as a subset problem:\n\nGiven a set of n distinct positive integers a_1, a_2,..., a_{n}, find all the subsets of a_1,..., a_{n} such that their k-multiple free sets have at least one element.\n\nYou can also solve it in linear time by using a combination of the following ideas:\n\nSplit the problem into two subproblems:\nThe first is finding the maximum k-multiple free subset of a_1,..., a_{n} such that a_i is a factor of all a_j for 1 \u2264 j \u2264 n;\nThe second is finding the maximum k-multiple free subset of a_1,..., a_{n} such that a_i is a factor of at least one of the other subsets, and it cannot be a factor of any other subset.\n\nYou can solve the problem in one of these two ways:\nIn the first, you can find the max of the first and the second problem: if a_i is a factor of all a_j for 1 \u2264 j \u2264 n, then a_i is a factor of at least one of the other subsets, and it cannot be a factor of any other subset.\nIn the second, you can find the max of the first and the third problem: if a_i is a factor of at least one of the other subsets, then a_i is a factor of all the other subsets, and it cannot be a factor of any subset.\n\nIn this approach, you are able to solve it in linear time.\n\n\n-----Hint 2-----\n\nIf the problem is easier to solve in one of the two ways, then it is much easier to solve it in a linear time.\n\nSo try to solve the problem in one of the two ways.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^2) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^2) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^3) time.\n\nBut in the second approach, you can solve it in O(n^2) time.\n\nSo try to solve it in O(n^2) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^3) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^4) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^5) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^6) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^7) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^8) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^9) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^10) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^11) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^12) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^13) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^14) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^15) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^16) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^17) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^18) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^19) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^20) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^21) time.\n\nBut in the second approach, you can solve it in O(n) time.\n\nSo try to solve it in O(n) time.\n\n------------------------------------------------------------------------------------------------------------------------\n\nIn the first approach, you can solve it in O(n^22"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 3\\n2 3 6 5 4 10') == '4'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"3\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\\n2 3 6 5 4 10\") == \"3\"\nassert solution(\"6 2\\n2 3 6 5 4 10\") == \"4\"\nassert solution(\"6 2\\n2 3 6 5 4 10\") == \"4\"\nassert solution(\"6 2\\n2 3 6 5 4 10\") == \"4\"\nassert solution(\"6 2\\n2 3 6 5 4 10\") == \"4\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2\n1 2 3\n''') == '3'\nassert solution('''\n5 4\n10 12 24 15 50\n''') == '3'\nassert solution('''\n5 3\n5 6 9 12 20\n''') == '2'\nassert solution('''\n9 5\n8 7 2 2 9 2 5 6\n''') == '2'\nassert solution('''\n5 4\n10 12 14 45 56\n''') == '4'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5 6 7 8 9 10\\n') == '3'\nassert solution('3 2 1 4 5 6 7 8 9 10\\n') == '6'\nassert solution('3 2 1\\n') == '3'\nassert solution('4 1\\n') == '4'\nassert solution('1\\n') == '1'\n\"\"\"\n\nn, k = map(int, input().split())\n\nli = list(map(int, input().split()))\n\nlis = []\n\nfor i in range(len(li)):\n    for j in range(i+1, len(li)):\n        if li[j] % k == 0:\n            lis.append(li[j])\n\nprint(len(set(lis)))"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n6 2\n2 3 6 5 4 10\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2 3\n2 5 4 10\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n2\n1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"1\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n\nassert solution() == \"5\"\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\n\n'''\n\nn, k = map(int, input().split())\nA = list(map(int, input().split()))\n\nA.sort()\n\nmaxcount = 0\n\nfor i in range(len(A)):\n    if i < k:\n        continue\n    t = 1\n    for j in range(i - k, i):\n        if A[j] == A[i]:\n            t += 1\n    if t > maxcount:\n        maxcount = t\nprint(maxcount)\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n\") == \"3\"\nassert solution(\"2\\n2\\n\") == \"3\"\nassert solution(\"3\\n3\\n\") == \"3\"\nassert solution(\"4\\n1\\n\") == \"3\"\nassert solution(\"2\\n1\\n\") == \"2\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n1 2 3\"\"\") == \"4\"\nassert solution(\"\"\"9\n1 2 1 3 2 2 2 2 3\"\"\") == \"10\"\nassert solution(\"\"\"5\n1 2 1 2 3\"\"\") == \"4\"\nassert solution(\"\"\"1\n1\"\"\") == \"1\"\nassert solution(\"\"\"11\n1 2 2 2 3 3 3 3\"\"\") == \"7\""
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''3\n1 2 1\n''') == '4'\nassert solution('''9\n1 2 1 3 2 2 2 2 3\n''') == '10'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2\n3''') == '2'\n\nassert solution('''2\n2\n''') == '1'\n\nassert solution('''2\n1\n''') == '2'\n\nassert solution('''2\n2 2\n''') == '4'\n\nassert solution('''2\n1 2\n''') == '4'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('3') == '3'\nassert solution('9') == '10'\nassert solution('5') == '4'"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\nassert solution('3') == '3'\nassert solution('9') == '10'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 2\n''') == '2'\n\nassert solution('''\n3\n1 2 1\n''') == '4'\n\nassert solution('''\n9\n1 2 1 3 2 2 2 2 3\n''') == '10'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"10\""
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"2\", \"1 2\", \"3 2\", \"3 2\", \"3 2\", \"3 2\", \"3 2\", \"3 2\"]) == \"10\"\nassert solution([\"2\", \"1 2\", \"2 2\", \"2 2\", \"2 2\", \"2 2\", \"2 2\", \"2 2\"]) == \"20\"\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''3\n1 2 1\n''') == '4'\nassert solution('''9\n1 2 1 3 2 2 2 2 3\n''') == '10'\nprint('OK')"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('9') == '10'"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '0'"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"4\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\""
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"10\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\n\"\"\"\nimport sys\nimport math"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"100\") == \"9999\"\nassert solution(\"1000\") == \"999999999\"\nassert solution(\"10000\") == \"9999999999\""
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"5\"\nassert solution(\"8 9 7 5 6 9\") == \"4\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 6\n1 5 1 4\n''') == '5'\nassert solution('''2 5\n1 5\n''') == '4'\nassert solution('''2 2\n1 1\n''') == '0'\nassert solution('''5 1\n1 1 1 1 1\n''') == '1'"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == '5'\nassert solution('1 5 1 4') == '5'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '5'"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '5'\nassert solution('1 5 1 4') == '6'"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 6') == '5'\nassert solution('5 4') == '4'"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 5\n1 5 1 4\n\"\"\") == \"5\"\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 6') == '5'\n\"\"\"\nimport math\n\nn, m = map(int, input().split())\nbrightnesses = list(map(int, input().split()))\n\nnum_of_changes = 1\nwhile True:\n    favorite_level = math.ceil(num_of_changes / 2)\n    if favorite_level == 1:\n        break\n    elif favorite_level == 2:\n        for i in range(1, n):\n            if i!= num_of_changes - 1:\n                if brightnesses[i]!= 1:\n                    brightnesses[i] -= 1\n            else:\n                brightnesses[i] -= 1\n    else:\n        for i in range(1, n):\n            if i!= num_of_changes - 1:\n                if brightnesses[i]!= favorite_level:\n                    brightnesses[i] -= 1\n            else:\n                brightnesses[i] -= favorite_level\n    num_of_changes += 1\n\nprint(num_of_changes)\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 6\n1 5 1 4\n''') == '5'\nassert solution('''4 7\n1 1 2 3 4\n''') == '8'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5\\n1 2 3 4 5\\n') == '8'\nassert solution('10 5\\n1 5 2 4 3 8 9 7 6 5\\n') == '2'\nassert solution('6 5\\n1 5 2 4 3 8 9 7 6 5\\n') == '5'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''+-+-+\n+-+-+''') == '3'\nassert solution('''+-+-+\n-++-''') == '1'\nassert solution('''+-+-+\n+-+-++''') == '2'\nassert solution('''+-+-+\n+-+-++\n-++-''') == '2'\nassert solution('''+-+-+\n+-+-+\n-++-''') == '1'\n''')\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-+-+') == \"1\"\nassert solution('--++-') == \"2\"\nassert solution('+++++++') == \"3\""
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+-+-++') == '3'\nassert solution('+-+-++-') == '4'\nassert solution('+-+-++-+') == '5'\nassert solution('+-+-++-+-') == '6'"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('++++--') == '2'\nassert solution('+++--') == '3'\nassert solution('-+--') == '1'\nassert solution('--+--') == '2'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"+++--\") == \"2\"\n\n----------------------------------------"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+-+-+\") == \"3\"\nprint(solution(input()))\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+++++') == '1'\nassert solution('+-+-+') == '3'\nassert solution('+-+-++') == '1'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('-++--') == '3'\nassert solution('--++-') == '2'\nassert solution('+--+') == '1'\nassert solution('++--') == '2'\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+-+-+\") == \"1\"\nassert solution(\"+++++++\") == \"1\"\nassert solution(\"+++++++++++++\") == \"2\"\nassert solution(\"++++++++++++\") == \"3\"\nassert solution(\"++++++++++\") == \"3\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('0 0 0 0') == '0'\nassert solution('1 1 1 1') == '1'\nassert solution('1 0 1 1') == '1'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\n\"\n\"AND 9 4\\n\"\n\"IN 1\\n\"\n\"IN 1\\n\"\n\"XOR 6 5\\n\"\n\"AND 3 7\\n\"\n\"IN 0\\n\"\n\"NOT 10\\n\"\n\"IN 1\\n\"\n\"IN 1\\n\"\n\"AND 2 8\") == \"10110\"\n\n---\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n\n\n'''\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\") == \"10110\"\nprint(solution(input()))\n\"\"\""
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\nassert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '010101'\nassert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '011101'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n') == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nNOT 3\\nOR 3 2\") == \"1\"\nassert solution(\"5\\nOR 4 1\\nAND 5 2\\nOR 3 1\\nNOT 5\\nAND 5 1\") == \"0\"\nassert solution(\"3\\nOR 4 1\\nOR 5 1\\nXOR 6 2\\nAND 6 3\\nAND 6 1\\nAND 6 2\") == \"1\"\nassert solution(\"3\\nOR 4 1\\nOR 5 1\\nAND 6 2\\nAND 6 3\\nAND 6 1\\nAND 6 2\") == \"0\"\nassert solution(\"3\\nOR 4 1\\nOR 5 1\\nAND 6 2\\nAND 6 3\\nAND 6 1\\nAND 6 2\") == \"1\"\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == '10110'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\\nAND 9 4\\nIN 1\\nIN 1\\nXOR 6 5\\nAND 3 7\\nIN 0\\nNOT 10\\nIN 1\\nIN 1\\nAND 2 8\\n\") == \"10110\"\n\n\"\"\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1\") == \"2\"\nassert solution(\"6 3 2\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 1\") == \"2\"\nassert solution(\"6 3 2\") == \"2\""
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 3 1\n1 2 3 2 1\n1 2 3\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n5 3 2\n1 2 3 2 1\n1 2 3\n\"\"\") == \"1\"\nassert solution(\n\"\"\"\n5 3 1\n1 2 3 2 1\n1 2 3\n\"\"\") == \"2\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3 1\n1 2 3 2 1\n1 2 3''') == '2'\nassert solution('''6 3 2\n1 3 2 2 3 1\n1 2 3''') == '2'\nprint(solution(stdin))\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(\"5 3 1\\n1 2 3 2 1\\n1 2 3\") == \"1 3\"\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 1\\n1 2 3 2 1\\n1 2 3') == '2'\nassert solution('6 3 2\\n1 2 3\\n1 2 3') == '2'\nassert solution('7 3 2\\n1 2 3\\n1 2 3') == '1'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4 1\n1 2 3 2 1\n1 2 3\n\n5 2 1\n1 2 3 2 1\n1 2 3\n''') == '1 2'\n\nassert solution('''\n5 5 1\n1 2 3 2 1\n1 2 3\n\n4 4 1\n1 2 3 2 1\n1 2 3\n\n6 6 1\n1 2 3 2 1\n1 2 3\n\n''') == '1 3'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'\nassert solution('5 10 2') == '0'\nassert solution('3 3 1') == '0'\nassert solution('5 10 2') == '0'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 1 2') == '2'\nassert solution('3 3 1') == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"10 3 1\\n2\\n3\\n1 4\\n4 2\\n5\\n5\\n7\\n7\\n7\\n3 6\\n2\\n4\\n8\\n3 5\\n8\\n6\\n5 6\\n8\\n5 5\\n3 4\\n6\\n3 7\\n7\\n4 4\\n4 7\\n5\\n4 6\\n3 7\\n6\\n6 5\\n6 4\\n5 4\\n4\\n7 5\\n5\\n6\\n6 4\\n6 4\\n4 3\\n5\\n4 4\\n5 3\\n5\\n4\\n3 7\\n5\\n4\\n3\\n2 4\\n4 5\\n4 2\\n5 1\\n6\\n5 5\\n5 5\\n5 4\\n5 2\\n3 4\\n4\\n3 4\\n4\\n6\\n2 3\\n3\\n2 2\\n3\\n2\\n4\\n4 1\\n4\\n3 2\\n5\\n4\\n5\\n5\\n5\\n2 3\\n4 2\\n4 3\\n4 5\\n4 2\\n4 4\\n3\\n3 2\\n3 3\\n3\\n3\\n2 3\\n3\\n5 3\\n5\\n4 4\\n4\\n2 4\\n4\\n3\\n2 4\\n2\\n3 4\\n3 5\\n2 5\\n5\\n5\\n5\\n2\\n4 4\\n5\\n6 4\\n6 5\\n5\\n4\\n6\\n5\\n4\\n4 2\\n5\\n5\\n5\\n5\\n5\\n2 3\\n3\\n5\\n5\\n5\\n5\\n4 5\\n5\\n4\\n4\\n4\\n4 4\\n3 6\\n3 4\\n5\\n4\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n4 4\\n3 2\\n3 2\\n4\\n5\\n4 4\\n4\\n5 5\\n5\\n5\\n5\\n5\\n5\\n4 4\\n5\\n4\\n4 4\\n4\\n4\\n3 5\\n5\\n3 5\\n5\\n4\\n5\\n4\\n4\\n4 4\\n4\\n4\\n4 5\\n4\\n4 5\\n5\\n4\\n4\\n4\\n3 4\\n4\\n5 5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n4 4\\n3 5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n5\\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1 2\n2 3\n1 2\n2 3\n3 4\n4 2''') == '2'\nassert solution('''5 3 1\n2\n2 1\n3\n3 1\n2 2''') == '0'\nassert solution('''6 6 2\n1 3\n3 4\n3 5\n2 5\n1 6\n1 7\n6 8\n3 4\n4 5\n4 6\n5 6''') == '8'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1 2\") == '2'\nassert solution(\"3 3 1\") == '0'\nassert solution(\"5 2 2\") == '0'\nassert solution(\"1 1 1\") == '0'"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 2') == '2'\nassert solution('3 3 1') == '0'\nassert solution('3 3 1') == '0'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 3 1\") == \"0\"\n\n\n'''"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 1 2\n1 3\n1 2\n''') == '2'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 1 2\\n1 3\\n1 2\\n\") == \"2\"\nassert solution(\"3 3 1\\n2\\n1 2\\n1 3\\n2 3\\n\") == \"0\"\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n4 1 2\n1 3\n1 2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3 3 1\n2\n1 2\n1 3\n2 3\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n3 3 1\n2\n1 2\n1 3\n2 3\n\"\"\"\n) == \"0\""
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) in range(0, 50)\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == \"2\"\nassert solution('6') == \"3\"\nassert solution('8') == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"4\""
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '3'\nassert solution('4') == '1'\nassert solution('8') == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6\n10 2 3 5 4 2''') == '3'\nassert solution('''4\n100 100 100 100''') == '1'\nassert solution('''8\n7 6 5 4 3 2 2 3''') == '4'"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"3\""
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"4\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '3'\nassert solution('4') == '1'"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_1) == \"3\"\nassert solution(input_2) == \"4\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == '0'\nassert solution(input()) == '2'"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == 'Yes'\nassert solution('6 5') == 'No'\nassert solution('4 3') == 'No'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 4' 7 5\") == \"Yes\"\nassert solution(\"3 1 2\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 5\") == \"No\"\nassert solution(\"6 5\") == \"Yes\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 5\n2 4 4\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n\"\"\") == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"6 5\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 1\") == \"Yes\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3') == \"Yes\"\nassert solution('4 3') == \"No\"\nassert solution('6 5') == \"Yes\"\n\n\"\"\""
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\nassert solution(\"3 1 1 3 2\") == \"Yes\"\nassert solution(\"2 1 5\") == \"No\"\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 1\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n\"\"\"\n) == \"No\"\n\nassert solution(\n\"\"\"\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n\"\"\"\n) == \"Yes\"\n\nassert solution(\n\"\"\"\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n\"\"\"\n) == \"No\""
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2\\n1 1\\n3 1 3 2') == 'Yes\\n2 3'\nassert solution('4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1') == 'No'\nassert solution('4 3\\n4 3 2 2 1\\n3 1 1 3\\n3 2 3 3\\n2 3 1\\n') == 'Yes'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2\n1 1\n3 1 3 2\n2 1 1''') == 'Yes'\nassert solution('''4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n''') == 'No'"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0 2 1 4 3'\n\"\"\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n2\n3\n''') == '3\\n0 1 2 3'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2 3 1\""
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2 0 1\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\"\nassert solution(\"100\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\"\nassert solution(\"1000\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99\"\nassert solution(\"10000\") == \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0 2 1 4 3'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"3\") == \"0 1 2\"\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0 2 1 4 3'\n\"\"\""
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"0 2 1 4 3\"\n\n\"\"\"\n\nn = int(input())\n\nl = []\n\nfor i in range(0, n):\n    for j in range(0, n):\n        for k in range(0, n):\n            for l in range(0, n):\n                print(i,j,k,l)\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0 2'\nassert solution('3') == '0 1 2'\nassert solution('5') == '0 1 2 3 4'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"0 2 1 4 3\"\nassert solution(\"6\") == \"0 1 2 3 4 5\"\nassert solution(\"7\") == \"0 1 2 3 4 5 6\"\nassert solution(\"8\") == \"0 1 2 3 4 5 6 7\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1') == \"YES\"\nassert solution('3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1') == \"NO\"\nprint(solution(input()))\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"YES\"\nassert solution(input_1) == \"NO\"\n'''\nfrom math import *\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n\n''') == \"YES\"\n\n'''\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n0 0\n\"\"\") == \"NO\"\nprint(solution(input()))\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 4') == 'NO'\nassert solution('7 2') == 'NO'\nassert solution('3 4') == 'YES'\nassert solution('2 2') == 'YES'\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 3\") == \"NO\""
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'YES'\nassert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n''') == 'NO'"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n0 0\\n0 2\\n2 0\\n0 2\\n2 2\\n2 0\\n1 1\") == \"YES\"\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"4 4\") == \"YES\""
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n0 0\n0 2\n2 0\n0 2\n2 2\n2 0\n1 1\n\n''') == 'YES'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0\\n1\\n1\\n0\\n0\\n0\\n1\") == \"1\"\nassert solution(\"3\\n1\\n1\\n1\\n0\\n0\\n0\\n1\") == \"3\"\n\n\"\"\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"9\") == \"1\""
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"9\") == \"1\"\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\") == \"1\""
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1') == '011'\nassert solution('0') == '00'\nassert solution('1') == '111'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'\nassert solution(input()) == '7'"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1\\n3\\n7'\nassert solution('5') == '1\\n3\\n10\\n22\\n43'\nassert solution('9') == '1\\n3\\n10\\n24\\n51\\n109\\n213\\n421\\n833'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''3\n1\n1\n1\n\n'''\n    ) == '1'\n\nassert solution(\n    '''5\n1\n0\n1\n0\n1\n\n'''\n    ) == '4'\n\nassert solution(\n    '''9\n1\n1\n0\n0\n0\n1\n1\n0\n1\n\n'''\n    ) == '10'\n\n'''\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\n\u041f\u0435\u0440\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u0446\u0438\u0444\u0440\u044b \u0441 \u0447\u0438\u0441\u043b\u043e\u043c \u043e\u0442 1 \u0434\u043e 3 \u043a\u043e\u0434\u043e\u0432 \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u0430. \u0412\u0442\u043e\u0440\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u0446\u0438\u0444\u0440\u044b \u0441 \u0447\u0438\u0441\u043b\u043e\u043c \u043e\u0442 1 \u0434\u043e 4 \u043a\u043e\u0434\u043e\u0432 \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u0430. \u0422\u0440\u0435\u0442\u044c\u0435 \u0447\u0438\u0441\u043b\u043e \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u0446\u0438\u0444\u0440\u044b \u0441 \u0447\u0438\u0441\u043b\u043e\u043c \u043e\u0442 1 \u0434\u043e 4 \u043a\u043e\u0434\u043e\u0432 \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u0430. \n\n\u0414\u0430\u043b\u0435\u0435 \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u0434\u043d\u043e \u0441\u043b\u043e\u0432\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c \u043e\u0442\u0432\u0435\u0442\u043e\u043c.\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\n\u0422\u0440\u0435\u0442\u044c\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u044b\u0434\u0430\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u043e\u0434\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b \u043d\u0435 \u0431\u043e\u043b\u0435\u0435 $1000$ \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u0438 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u044b\u0435 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u0437\u043d\u0430\u043a\u043e\u043c $., \\, -, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, $, $, $, $ \u0432 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u0430\u043c\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435. \n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:\n\n3\n1\n1\n1\n\n3\n0\n1\n0\n1\n\n9\n1\n1\n0\n0\n0\n1\n1\n0\n1\n\n\u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u044b\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445:\n\n1\n4\n10\n22\n43\n\n1\n3\n10\n24\n51\n109\n213\n421\n833\n\n\n'''"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1\\n1\\n1\") == \"1\"\nassert solution(\"5\\n1\\n0\\n1\\n0\\n1\") == \"1\"\nassert solution(\"9\\n1\\n1\\n0\\n0\\n1\\n1\\n0\\n1\") == \"1\""
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 0') == 'First'\nassert solution('3 1') == 'Second'\nassert solution('3 2') == 'First'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\nassert solution('''\n2\n2 1\n1 2\n''') == 'Second'\nassert solution('''\n1\n1 1\n''') == 'Draw'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"First\"\nassert solution(input()) == \"Second\""
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"First\"\nassert solution(\"\"\"\n3\n0 2\n3 2\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\"\"\") == \"Second\"\nassert solution(\"\"\"\n4\n4 0\n5 3\n3 5\n1 2\n6 4\n7 4\n2 6\n3 5\n4 5\n5 2\n1 2\n5 3\n3 6\n2 5\n5 7\n6 6\n5 1\n4 7\n4 6\n1 4\n3 5\n5 2\n\"\"\") == \"First\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n\n''') == 'First'\nassert solution('''\n2 0\n7 2\n1 2\n3 9\n7 2\n\n''') == 'Second'\n\n'''\nimport sys"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\nassert solution('''2\n1 2\n2 3\n''') == 'Second'\nassert solution('''2\n4 5\n2 4\n''') == 'First'\nassert solution('''\n1 2\n2 3\n''') == 'Second'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 0\") == \"First\"\nassert solution(\"3 1\") == \"Second\"\nassert solution(\"3 2\") == \"First\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 1\n2 3\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\nassert solution('''\n3\n3 1\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'Second'\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 0\") == \"First\"\nassert solution(\"3 1\") == \"Second\"\nassert solution(\"3 2\") == \"First\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'First'\nassert solution('''3\n3 0\n6 2\n1 2\n2 3\n15 10\n12 14\n8 3\n10 1\n14 6\n12 6\n1 9\n13 1\n2 5\n3 9\n7 2\n''') == 'Second'\n\n'''\n\n\n\nimport collections\n\nn, m = list(map(int, input().split()))\ngraph = collections.defaultdict(list)\nfor _ in range(m):\n    u, v = list(map(int, input().split()))\n    graph[u].append(v)\n    graph[v].append(u)"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''abbac\nabaab\naabaa''') == \"Mike\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\n\n\nstdin = 'abba'"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Ann\"\n\nassert solution(\"aba\") == \"Ann\""
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abba') == 'Mike'\nassert solution('cba') == 'Mike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\nassert solution(\"cbb\") == \"Ann\"\nassert solution(\"cbc\") == \"Mike\"\n\ns = input()\nl = 0\nr = len(s)"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aba\") == \"Mike\"\nassert solution(\"aaaehnsvz\") == \"Mike\"\nassert solution(\"aaaehnsvz\") == \"Ann\"\nassert solution(\"aaaehnsvz\") == \"Mike\"\nassert solution(\"aaaehnsvz\") == \"Ann\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    aba\n''') == 'Mike'\nassert solution('''\n    abb\n''') == 'Mike'\nassert solution('''\n    ba\n''') == 'Mike'\nassert solution('''\n    bac\n''') == 'Mike'\nassert solution('''\n    abcd\n''') == 'Mike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'Mike'\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Ann\""
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 'Mike'\nassert solution('abracadabra') == 'Mike'\nassert solution('a') == 'Mike'\nassert solution('') == ''\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0', solution('1 2')\nassert solution('8 3 8') == '2', solution('8 3 8')\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '2'\nassert solution('10 10') == '1'\nassert solution('10 10') == '1'\nassert solution('5 5') == '1'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '0'\nassert solution('5 10 10 3 10 3 10') == '2'"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '0'\nassert solution('1 2') == '0'\nassert solution('1 2') == '0'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"0\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"1\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '0'"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('3 2') == '1'\nassert solution('8 3 8') == '2'\nassert solution('1 2') == '0'\nassert solution('8 12 8') == '2'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '1'\nassert solution('3 2') == '2'\n\nassert solution('10 2') == '2'\nassert solution('10 2') == '3'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2\n8 3 8\n1 2\n2 3\n''') == '0'\nassert solution('''3 2\n8 12 8\n1 2\n2 3\n''') == '2'\nassert solution('''4 10\n3 3 6 8\n1 2\n2 3\n1 4\n2 5\n3 6\n4 7\n5 8\n''') == '0'\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '0', \"Fails\""
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"ababacd\"\nassert solution(\"1 1\") == \"-1\""
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 4') == \"ababacd\"\nassert solution('4 7') == \"-\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 6') == 'a'\nassert solution('3 3') == 'abc'"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"ababacd\"\nassert solution(\"5 4\") == \"-1\"\nassert solution(\"15 5\") == \"ababacd\"\nassert solution(\"15 5\") == \"ababacd\"\nassert solution(\"10 9\") == \"ababacd\"\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"3 5\") == \"abababc\"\nassert solution(\"1 1\") == \"-\"\n\nsolution(sys.stdin)\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 4\n\n''') == 'ababacd'\nassert solution('''4 7\n\n''') == '-1'"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == 'abc'\nassert solution('4') == 'acb'\nassert solution('5') == 'bac'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == 'ababacd'\nassert solution('2 5') == 'ababaca'\nassert solution('6 8') == '-1'\nassert solution('6 6') == 'ababacd'\nassert solution('6 7') == 'ababaca'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"ababacd\"\nassert solution(\"4 7\") == \"-1\"\n\"\"\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 2') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"4\") == \"4\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"9\"\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1 1 2 2 2 1 1 2 2 1\") == \"4\"\n\n'''"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'\nassert solution() == '9'"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 1 2 1\n''') == '4'\nassert solution('''10\n1 1 2 2 2 1 1 2 2 1\n''') == '9'\nprint('all tests passed')\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 1 1 2') == '4'\nassert solution('10') == '9'\nassert solution('1 1 2 2 2 1 1 2 2 1') == '4'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '4'\nassert solution('10') == '9'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == ''\nassert solution('2\\n1 2 1 2') == '4'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1') == '9'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n5 4 2\n1 2 5\n4 3 2\n1 4 1\n2 3 1\n1 3 1\n''') == '3'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '+'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 1') == '2'\nassert solution('1 4 5') == '+'\nassert solution('2 3 4') == '+'\nassert solution('1 4 1') == '-\nassert solution('1 3 1') == '+-'\n\n\n\"\"\""
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6'\nassert solution('''\n5 1 1\n2 2 1\n1 4 1\n1 4 2\n2 3 2\n''') == '1'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 1\") == \"2\"\nassert solution(\"1 4 5\") == \"+\"\nassert solution(\"2 3 4\") == \"++\""
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\\n1 1 2\\n2 2 1\") == \"2\"\nassert solution(\"6 6 3\\n2 4 5\\n1 4 1\\n1 3 1\\n2 2 3\\n\") == \"6\""
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 1\") == \"2\"\nassert solution(\"1 4 5\") == \"++-\"\nassert solution(\"2 3 4\") == \"2\"\nassert solution(\"1 3 1\") == \"+\""
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6'\n\nassert solution('2 2 1\\n1 1 2\\n2 2 1') == '2'\n\nassert solution('6 6 3\\n2 2 6\\n1 4 5\\n2 3 4\\n1 4 1\\n1 3 1\\n2 2 3') == '6'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6'\nassert solution('''\n3 5 1\n1 2 3\n1 4 1\n4 2 5\n3 5 2\n''') == '3'\nassert solution('''\n2 5 1\n1 2 3\n2 4 3\n3 4 2\n1 4 1\n4 2 5\n''') == '2'\nassert solution('''\n4 5 1\n1 2 3\n1 4 1\n2 3 4\n3 4 2\n4 5 2\n''') == '4'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '2'\nassert solution('1 4 5') == '2'\nassert solution('2 3 4') == '+'\nassert solution('1 4 1') == '1'\nassert solution('1 3 1') == '-'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\nassert solution('0123456789') == '0123456789'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    1\n    6\n    8\n    9\n''') == '1869'\nassert solution('''\n    1\n    2\n    3\n''') == '0'\nassert solution('''\n    1\n    0\n    9\n    8\n''') == '1869'\nassert solution('''\n    1\n    6\n    9\n    8\n''') == '1869'\nassert solution('''\n    1\n    6\n    8\n    9\n''') == '0'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"18690\"\nassert solution(sys.stdin.read()) == \"1869\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\n\"\"\"\nfrom itertools import permutations"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\""
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1689\") == \"1869\"\nassert solution(\"18906\") == \"18690\"\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('14') == '42'\nassert solution('0') == '0'\nassert solution('10') == '10'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 6\") == \"3\"\nassert solution(\"5 5\") == \"3\"\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 2\n1 3\n3 4\n\n''') == '2'\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\n''') == '3'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 2\n1 3\n3 4\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\"\"\") == \"3\"\n\nprint(solution(input()))"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '3'"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '2'\nassert solution('4 6') == '-1'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 3\n3 4\n\n''') == '2'\nassert solution('''5 5\n4 2\n3 5\n4 5\n5 1\n1 2\n\n''') == '3'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == '2'\nassert solution(\"4 6\") == '-1'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 5') == '3'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == '2'\nassert solution(\"4 6\") == '-1'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"4 6\") == \"-1\""
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"9\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('3') == '3'"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"9\"\nassert solution(\"2\") == \"7\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n4 7\n\n''') == '3'\nassert solution('''3\n4 3 1\n\n''') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '9'\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n4 7\\n') == '3'\nassert solution('3\\n4 3 1\\n') == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == ''\nassert solution(\"3\") == ''\nassert solution(\"4 7\") == ''\nassert solution(\"1 2 3\") == ''\nassert solution(\"1 2 3 1\") == ''\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '9'"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 7\n4 3 1\n''') == '9'\nassert solution('''3\n4 3 1\n''') == '9'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_1) == \"9\"\nassert solution(example_input_2) == \"0\"\nassert solution(example_input_3) == \"-1\"\nassert solution(example_input_4) == \"0\"\nassert solution(input) == \"\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '9'\nassert solution('5\\n3 10 2 1 5') == '2'\nassert solution('4\\n0 5 15 10') == '0'\nassert solution('1\\n1') == '-1'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '9'\n\n\"\"\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n8 5\n''') == '9'\n\nassert solution('''\n5\n3 10 2 1 5\n''') == '2'\n\nassert solution('''\n1\n1\n''') == '-1'\n\nassert solution('''\n3\n0 5 15 10\n''') == '0'\n\nassert solution('''\n4\n0 5 15 10\n''') == '0'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n4 8 5\\n') == '9'\nassert solution('5\\n3 10 2 1 5\\n') == '2'\nassert solution('4\\n0 5 15 10\\n') == '0'\nassert solution('1\\n1\\n') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n\n2\n4 8 5\n\n''') == '9'\nassert solution('''\n\n3\n10 2 1 5\n\n''') == '2'\nassert solution('''\n\n4\n0 5 15 10\n\n''') == '0'\nassert solution('''\n\n1\n1\n\n''') == '-1'"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"9\"\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"-1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"2\") == \"0\""
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n4 8 5\\n') == '9'\nassert solution('5\\n3 10 2 1 5\\n') == '2'\nassert solution('4\\n0 5 15 10\\n') == '0'\nassert solution('1\\n1\\n') == '-1'\nassert solution('3\\n0 5 15 10\\n') == '0'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n\"\n    \"4 8 5\\n\"\n) == \"9\"\nassert solution(\n    \"5\\n\"\n    \"3 10 2 1 5\\n\"\n) == \"2\"\nassert solution(\n    \"4\\n\"\n    \"0 5 15 10\\n\"\n) == \"0\"\nassert solution(\n    \"1\\n\"\n    \"1\\n\"\n) == \"-1\""
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\""
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\"\nassert solution(\"20 4 5\") == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution(input) == '1'\n\"\"\"\n\nimport collections\nimport itertools\nimport re\n\nstdin = \"\"\"\n5 7 5\n1 2 3 4 5\n\"\"\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 4 5\n3 5 7 10\n\n''') == '3'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\"\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 4 5\n3 5 7 10\n''') == '3'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 4 5') == '3'\nassert solution('13 4 5') == '1'"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4 5\n3 5 7 10''') == '3'"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\"\nassert solution(\"123 4 5\") == \"3\""
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 4 5\") == \"3\"\nassert solution(\"13 4 5\") == \"1\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n101\n3 3\n3 2\n3 1''') == '2'\nassert solution('''4\n1111\n3 4\n5 2\n3 1\n3 2''') == '4'\nassert solution('''6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5''') == '6'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1110\n3 3\n3 2\n3 1\n''') == '2'\n\nassert solution('''4\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '4'\n\nassert solution('''6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n''') == '6'\n\n\"\"\""
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n11111\\n3 4\\n5 2') == '4'\nassert solution('4\\n1111\\n3 4\\n5 2') == '6'\nassert solution('6\\n011100\\n5 3\\n5 5\\n2 4\\n3 5\\n4 2\\n1 5') == '6'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n101\n3 4\n5 2\n3 1\n3 2\n''') == '2'\n\nassert solution('''\n4\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '4'\n\nassert solution('''\n6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n''') == '6'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"2\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n101\n3 3\n3 2\n3 1\n''') == '2'\n\nassert solution('''4\n1111\n3 4\n5 2\n3 1\n3 2\n''') == '4'\n\nassert solution('''6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n''') == '6'"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1111\n3 4\n5 2\n3 1\n3 2''') == '2'\nassert solution('''4\n1111\n3 4\n5 2\n3 1\n3 2''') == '4'\nassert solution('''6\n011100\n5 3\n5 5\n2 4\n3 5\n4 2\n1 5\n\n''') == '6'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('6') == '6'\nassert solution('1111') == '4'\nassert solution('3 4') == '3'\nassert solution('5 2') == '2'\n\n\"\"\"\nfrom math import inf"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\nassert solution(\"6\") == \"7\""
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"1111\"\n\nassert solution(input_2) == \"01010\"\n\nassert solution(input_3) == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\n''') == '1111'\nassert solution('''5 3\n''') == '01010'\nassert solution('''7 3\n''') == '1011011'\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n''') == \"1111\"\n\nassert solution('''\n5 3\n''') == \"01010\"\n\nassert solution('''\n7 3\n''') == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"01\"\nassert solution(\"4 5\") == \"111\"\nassert solution(\"5 3\") == \"1011\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1111''') == '1111'\nassert solution('''7 3\n01010''') == '101'\nassert solution('''7 3\n1011011''') == '110'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '1111'\nassert solution('5 3') == '01010'\nassert solution('7 3') == '1011011'"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\""
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"1111\"\nassert solution(\"5 3\") == \"01010\"\nassert solution(\"7 3\") == \"1011011\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n1 1 1\"\"\") == \"0/1\"\nassert solution(\"\"\"3\n1 1 2\"\"\") == \"0/1\"\nassert solution(\"\"\"3\n1 2 1\"\"\") == \"1/2\"\nassert solution(\"\"\"3\n1 2 2\"\"\") == \"1/2\"\nassert solution(\"\"\"3\n1 3 1\"\"\") == \"1/2\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1/1'\nassert solution('2') == '1/2'\nassert solution('3') == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0/1'\nassert solution('3') == '1/2'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == \"1/2\"\nassert solution('3') == \"0/1\"\nassert solution('3') == \"0/1\"\nassert solution('8') == \"1/8\"\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0/1'"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"0/1\"\nassert solution() == \"1/2\"\nassert solution() == \"1/2\""
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1/2'\nassert solution('3') == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n\n\"\"\") == \"0/1\"\nassert solution(\"\"\"\n2\n\n\"\"\") == \"1/2\"\nassert solution(\"\"\"\n4\n\n\"\"\") == \"0/1\"\n\nassert solution(\"\"\"\n5\n\n\"\"\") == \"0/1\"\n\nassert solution(\"\"\"\n6\n\n\"\"\") == \"0/1\""
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1/1'\nassert solution('3') == '0/1'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n3\n3 1\n''') == '1/2'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1 0 1 0 0'\nassert solution(input()) == '4 3 2 1 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n''') == '1 0 1 0 0'\nassert solution('''5\n9 7 8 6 5\n1 1\n2 1\n3 1\n4 1\n''') == '4 3 2 1 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\") == \"1 0 1 0 0\"\nassert solution(\"5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\") == \"4 3 2 1 0\""
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n\n\"\"\") == \"1 0 1 0 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2 1 0 1 0\"\nassert solution(\"\"\"\n5\n2 5 1 4 6\n1 7\n1 1\n3 5\n3 6\n\n\"\"\") == \"4 3 2 1 0\"\nassert solution(\"\"\"\n5\n9 7 8 6 5\n1 1\n2 1\n3 1\n4 1\n\n\"\"\") == \"4 3 2 1 0\"\nassert solution(\"\"\"\n5\n9 7 8 6 5\n1 1\n1 2\n3 1\n4 1\n\n\"\"\") == \"4 3 2 1 0\"\nassert solution(\"\"\"\n5\n1 1\n1 2\n1 3\n1 4\n\n\"\"\") == \"4 3 2 1 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1\\n') == '4 3 2 1 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 0 1 0 0\"\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0'\nassert solution('3\\n1 9\\n1 9\\n1 9\\n') == '4 2 1 1 0'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6\\n') == '1 0 1 0 0'\nassert solution('10\\n2 9 1 4 6 5 7 3 8 10\\n1 1\\n2 1\\n3 1\\n4 1\\n5 1\\n6 1\\n7 1\\n8 1\\n9 1\\n10 1\\n') == '4 3 2 1 0'"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 1 1\n''') == '1'\nassert solution('''5\n4 5 1 7 4\n''') == '8'\nassert solution('''2\n1 2\n''') == '2'\nassert solution('''3\n1 1 1\n''') == '11'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"8\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"11\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''5\n4 5 1 7 4\n\n''') == '1'"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\n\nassert solution([5, 4, 1, 7, 4]) == '1'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"2\\n2\") == \"1\"\nassert solution(\"3\\n2\") == \"1\"\nassert solution(\"1\\n2\") == \"0\"\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n4 5 1 7 4\n''') == '1'\nassert solution('''2\n1 2\n''') == '0'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n4 5 1 7 4\n\n''') == '1'\nassert solution('''2\n1 2\n\n''') == '0'\nassert solution('''3\n1 1 1\n\n''') == '1'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n4 5 1 7 4\n\nOutput\n1\n8\n01010\n00011\n01010\n10010\n00011\n11000\n00011\n11000\n''') == '1'\nassert solution('''\n2\n1 2\n\nOutput\n0\n2\n11\n11\n''') == '0'\nassert solution('''\n3\n1 1 1\n\nOutput\n1\n0\n11\n11\n''') == '1'\nassert solution('''\n4\n1 2 1 3\n\nOutput\n0\n2\n11\n11\n''') == '0'\nassert solution('''\n5\n4 5 1 7 4\n\nOutput\n1\n8\n01010\n00011\n01010\n10010\n00011\n11000\n00011\n11000\n''') == '1'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\""
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '0'\n\nimport random"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"2\"\n\n\"\"\"\nfrom copy import copy\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == \"1\"\nassert solution('1 1 2 3') == \"0\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"1\"\nprint(solution(input))\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5') == '1'\nassert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n0 2 5 4\\n2 1 6 4') == '2'\nassert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n0 2 5 4\\n2 1 6 4\\n0 3 4 6\\n1 5 2 4') == '2'\nassert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n0 2 5 4\\n2 1 6 4\\n0 3 4 6\\n1 5 2 4\\n0 6 7 4\\n1 3 5 6\\n2 7 4 6') == '1'\nassert solution('6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\\n0 2 5 4\\n2 1 6 4\\n0 3 4 6\\n1 5 2 4\\n0 6 7 4\\n1 3 5 6\\n2 7 4 6') == '0'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == \"1\"\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\n0 1 2 3\\n0 4 6 1\\n1 6 7 2\\n2 7 5 3\\n6 4 5 7\\n4 0 3 5\") == '1'\nassert solution(\"8\\n0 0 0 0 0 0 0 0\\n0 1 2 3 4 5 6\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\\n0 0 0 0 0 0 0\") == '1'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '1', 'Wrong answer'\n\n'''"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1'\nassert solution('0 1 2 3') == '1'\nassert solution('0 4 6 1') == '2'\nassert solution('1 6 7 2') == '2'\nassert solution('2 7 5 3') == '3'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '1'\n"
    }
]