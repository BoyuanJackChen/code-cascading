[
    {
        "number": 3000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5'\nassert solution('8') == '9'\nassert solution('4') == '5'\nassert solution('6') == '5'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('009990001') == '3'\nassert solution('29998') == '5'\nassert solution('610') == '4'\nassert solution('981') == '2'\n"
    },
    {
        "number": 3002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') =='seems legit'\nassert solution('2') == 'insufficient service'\nassert solution('1') == 'tampered odometer'\n"
    },
    {
        "number": 3003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n0 2 3\\n0 1\\n1\") == \"3\"\nassert solution(\"5\\n2 3 4\\n2 3 4\\n0 1\\n0 1\\n0 1\\n1\") == \"2\"\nassert solution(\"6\\n1 3\\n0 2 4\\n1 5\\n0 4\\n1 3 5\\n2 4\\n\") == \"2\"\n"
    },
    {
        "number": 3004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nBLUE 1 5000\nRED 5001 10000\n''') == '2'\nassert solution('''\nBLUE 1 6000\nRED 2000 8000\nWHITE 7000 10000\n''') == '3'\nassert solution('''\nBLUE 1 3000\nRED 2000 5000\nORANGE 4000 8000\nGREEN 7000 10000\n''') == '3'\nassert solution('''\nBLUE 1 4000\nRED 4002 10000\n''') == 'IMPOSSIBLE'\nassert solution('''\nBLUE 1 4000\nRED 4002 10000\n''') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('PRATTATTATTIC') == '6'\nassert solution('GGGGGGGGG') == '1'\nassert solution('PRIME') == '5'\nassert solution('BABBABABBABBA') == '6'\n"
    },
    {
        "number": 3006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"D 1\\nD 2\\nE\") == \"0\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\"\nassert solution(\"D 2\\nD 1\\nE\") == \"1\"\nassert solution(\"I 1 X\\nD 1\\nE\") == \"0\"\nassert solution(\"I 14 B\\nI 14 A\\nE\") == \"0\"\n"
    },
    {
        "number": 3007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 0 1 0 0 0\n0\n1\n0\n0\n0''') == '300'\nassert solution('''5 0 1 0 1 0\n0\n1\n0\n0\n0''') == '1900'\nassert solution('''6 0 1 1 0 0\n0\n1\n0\n0\n0\n0''') == '2300'\nassert solution('''10 399 0 0 0 0\n0\n1\n0\n0\n0\n0''') == '399'\n"
    },
    {
        "number": 3008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10') == '2'\nassert solution('2 10') == '2'\nassert solution('2 10') == '2'\nassert solution('2 10') == '2'\nassert solution('2 10') == '2'\n"
    },
    {
        "number": 3009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '28'\nassert solution('4') == '36.2842712475'\nassert solution('6') == '32'\n"
    },
    {
        "number": 3010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n"
    },
    {
        "number": 3011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '10'\nassert solution('55') == '55'\nassert solution('101') == '-1'\nassert solution('1234321') == '94708'\n"
    },
    {
        "number": 3012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 0 0 3') == '6'\nassert solution('1 2 0 0 4') == '4'\nassert solution('1 2 0 0 5') == '2'\nassert solution('1 2 0 0 6') == '0'\nassert solution('1 2 0 0 7') == '0'\n"
    },
    {
        "number": 3013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.5 -5.301 3.098') == '-1.26167861 3.88425357'\nassert solution('0.5 8 8') == '9.21068947 2.56226688'\nassert solution('1 8 8') == '6.22375968 -0.31921472'\n"
    },
    {
        "number": 3014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n1 2\n2 1\n''') == '1'\nassert solution('''3 3\n1 2\n2 3\n3 1\n''') == '1'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '0'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '2'\nassert solution('''4 5\n1 2\n2 3\n2 4\n3 1\n4 1\n''') == '4'\n"
    },
    {
        "number": 3015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 0 3\n0 1 1\n1 2 2\n2 0 4\n2 3 1\n2 3 3\n''') == '11'\nassert solution('''\n5 5 0 4\n0 1 1\n1 2 1\n2 3 1\n3 0 1\n2 4 1\n''') == 'infinity'\nassert solution('''\n3 3 1 2\n0 1 1\n1 0 1\n1 2 1\n''') == '2'\n"
    },
    {
        "number": 3016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 1 2 1\n2 1 2\n2 3 4\n''') == '6'\nassert solution('''\n3 3 1 1\n1 1\n2 2 3\n''') == '0'\nassert solution('''\n3 2 2 3\n1 1\n2 2 3\n''') == '18'\n"
    },
    {
        "number": 3017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == '468559'\n\nassert solution('''1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == '49401'\n\nassert solution('''1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == '20'\n\nassert solution('''1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == '1'\n\nassert solution('''1000000 1\nSample Output 1:\n468559\n\nSample Input 2:\n1000000 5\nSample Output 2:\n49401\n\nSample Input 3:\n1000000 16\nSample Output 3:\n20\n\nSample Input 4:\n9000000000000000000 62\nSample Output 4:\n1''') == '0'"
    },
    {
        "number": 3018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 9\n5 4 1\n''') == '1'\nassert solution('''4 13\n2 2 2 2\n''') == '3'\nassert solution('''18 90\n1 2 3 4 5 6 1 2 3 4 5 6 1 2 3 4 5 6\n''') == '12'\n"
    },
    {
        "number": 3019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n''') == '0'\nassert solution('''\n3\n4 7 8\n''') == '3'\nassert solution('''\n5\n2 3 4 5 8\n''') == '5'\n"
    },
    {
        "number": 3020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '4'\nassert solution('149') == '17'\nassert solution('123476544') == '11112'\n"
    },
    {
        "number": 3021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('d 4\\nabc\\nbca\\ncab\\naca\\n') == 'adcb'\nassert solution('c 4\\nabc\\nbca\\ncab\\naca\\n') == 'IMPOSSIBLE'\nassert solution('f 2\\ndea\\ncfb\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3 3 3\n''') == '9'\nassert solution('''\n10 20 0 0\n''') == '10'\nassert solution('''\n100 20 543 12\n''') == '164'\n"
    },
    {
        "number": 3023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 3\n0 1\n1 0\n-1 0\n0 -1\n-1 1 0\n2 1 0\n''') == 'yes'\nassert solution('''\n4 3 3\n0 1\n1 2\n-1 2\n0 -1\n-1 1 -2\n-1 -1 2\n0 -1 0\n''') == 'no'\nassert solution('''\n3 2 3\n2 1\n0 0\n-1 -2\n1 1 -2\n3 6 12\n''') == 'yes'\n"
    },
    {
        "number": 3024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('652526') == '4'\nassert solution('12121131221') == '7'\nassert solution('123456789') == '1'\n"
    },
    {
        "number": 3025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1\n1 2\n2 3\n1 3\n''') == '0'\nassert solution('''\n4 4\n24 10\n1 3\n2 3\n2 4\n1 4\n''') == '24'\nassert solution('''\n6 8\n100 500 300 75\n1 3\n1 4\n3 6\n4 5\n3 5\n4 6\n2 5\n2 6\n''') == '800'\n"
    },
    {
        "number": 3026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 2 4') == '1 4'\nassert solution('5\\n1 2 3 4 5') == '1 2 3 4 5'\nassert solution('4\\n2 1 4 3') == '-1'\n"
    },
    {
        "number": 3027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 4') == '2'\nassert solution('4 5') == '2'\nassert solution('5 6') == '3'\n"
    },
    {
        "number": 3028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 5\n2 1 1 1 2\n5 3 4 4 3\n4 3 3 3 2\n3 1 3 3 1\n''') == '6'\nassert solution('''3 3 3\n3 1 1\n1 3 2\n3 2 3\n''') == '13'\nassert solution('''3 2 2\n1 2\n2 1\n1 2\n''') == '-1'\n"
    },
    {
        "number": 3029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 1'\nassert solution('4') == '1 5'\nassert solution('3') == '1 1'\nassert solution('2') == '1 1'\nassert solution('1') == '1 1'\n"
    },
    {
        "number": 3030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '5'\n"
    },
    {
        "number": 3031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n1 3 1\n2 3 1\n3 4 3\n4 5 4\n5 6 3\n6 7 2\n6 8 2\n''') == '4'\nassert solution('''\n8\n1 2 2\n1 3 1\n2 4 3\n2 7 1\n3 5 2\n5 6 2\n7 8 1\n''') == '0'\nassert solution('''\n9\n1 2 2\n1 3 1\n1 4 5\n1 5 5\n2 6 3\n3 7 3\n4 8 1\n5 9 2\n''') == '5'\n"
    },
    {
        "number": 3032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '5'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '6'\nassert solution('''\n1 2\nR10 V1 V2 V1 E\n''') == '30'\nassert solution('''\n1 2\nV1 V2 V1 V1 V2\n''') == '6'\n"
    },
    {
        "number": 3033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 24') == '38'\nassert solution('10 11') == 'impossible'\nassert solution('9 216') == '546'\n"
    },
    {
        "number": 3034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20 60 2 1\n5 15 0.33333 30\n22 60 0.66666 70\n0 10\n''') == '466.662'\nassert solution('''3 4 2 1\n1 3 0.25 8\n2 4 0.66667 15\n1 2\n''') == '10.00005'\nassert solution('''3 4 1 0\n0 2 0.25 8\nSample Output 3:\n2.0\n''') == '2.0'\n"
    },
    {
        "number": 3035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nblue pink 1.0\nred pink 1.5\nblue red 1.0\n''') == '1.500000000000000'\nassert solution('''\n2\nblue red 1.0\nred pink 1.5\n''') == '0.000000000000000'\nassert solution('''\n4\norange pink 1.9\nyellow orange 1.9\ngreen yellow 1.9\nblue green 1.9\n''') == '10.000000000000000'\n"
    },
    {
        "number": 3036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 1 1 1 0\n2 3 1 5 3 2\n2 1 2\n3 3 4 5\n1 6\n''') == '180'\nassert solution('''\n3 2 2 1 1\n2 3 2\n1 1\n1 2\n1 2\n1 3\n1 1\n2 3\n''') == '22'\nassert solution('''\n3 1 1 1 1\n5 5 5\n3 1 2 3\n3 1 2 3\n3 1 2 3\n2 1\n''') == '0'\n"
    },
    {
        "number": 3037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8 5\n........\n...#....\n########\n"
    },
    {
        "number": 3038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3\n2 40 65\n2 100 150\n2 300 320\n''') == 'impossible'\nassert solution('''\n310\n3\n2 40 65\n2 100 150\n2 300 320\n''') == '300'\nassert solution('''\n90\n2\n2 20 35\n2 88 200\n''') == '88'\n"
    },
    {
        "number": 3039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n......\n......\n######\n......\n......\n......\n''') == 'cannot fold'\nassert solution('''\n......\n"
    },
    {
        "number": 3040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('ab') == 'ab'\nassert solution('abcd') == 'abcd'\nassert solution('abcdabc') == 'abcdabc'\n"
    },
    {
        "number": 3041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 4\n2 5\n''') == '4'\nassert solution('''\n2\n1 4\n2 10005\n''') == '6'\nassert solution('''\n3\n1 4\n2 10\n0 15\n''') == '4'\n"
    },
    {
        "number": 3042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n2 3 4 4 8 12 24') == '2'\nassert solution('3\\n7 7 7') == '3'\nassert solution('5\\n1 2 3 2 1') == '0'\n"
    },
    {
        "number": 3043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 5 4\nS#.F.\n.MFMG\n''') == '3'\nassert solution('''\n1 2 1\nGS\n''') == '1'\nassert solution('''\n2 2 10\nS#\n"
    },
    {
        "number": 3044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\nS..\n.#.\n..G\nDRRDD\n''') == '1'\nassert solution('''\n3 7\n.......\n.G.#.S.\n.......\nLDLDLLDR\n''') == '1'\nassert solution('''\n3 7\n.#.....\n.G.##S.\n.......\nLDLDLLDR\n''') == '2'\n"
    },
    {
        "number": 3045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1000200 799'\nassert solution('2') == 'uncertain'\nassert solution('1') == 'impossible'\n"
    },
    {
        "number": 3046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '2 1'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') == '1 2'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') =='syntax error'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') =='syntax error'\nassert solution('''\n2\n4 7\n9 8\n14 17\n19 18\n''') =='syntax error'\n"
    },
    {
        "number": 3047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('_ 90 22 _ 6 _ _ _ 81\\n_ 40 _ _ _ 12 60 _ 90 _\\n') == '1'\nassert solution('85 55 _ 99 51 _ _ _ _ _\\n_ _ _ _ _ _ _ 85 63 153\\n') == '1'\nassert solution('160 _ _ 136 _ _ _ _ _ 170\\n_ _ _ _ _ _ _ _ _\\n') == '8640'\n"
    },
    {
        "number": 3048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2\n1 3\n''') == '2'\nassert solution('''\n5\n2 1\n1 5\n3 1\n4 3\n''') == '8'\nassert solution('''\n10\n2 1\n1 5\n3 1\n4 3\n5 6\n7 8\n5 9\n5 10\n''') == '24'\n"
    },
    {
        "number": 3049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('secretmessage') == 'essa'\nassert solution('boot') == '3'\nassert solution('treetreetreetree') == '0'\nassert solution('apples') == '0'\n"
    },
    {
        "number": 3050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('4') == '4'\nassert solution('5') == '1'\nassert solution('3') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\nassert solution('4') == '11'\n"
    },
    {
        "number": 3052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '163.5274740179'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\nassert solution('60.0 0.0 50.0 170.0') == '163.5274740179'\nassert solution('60.0 0.0 50.0 170.0') == '168.7916512460'\n"
    },
    {
        "number": 3053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5 3') == 'rarity'\nassert solution('9 8 1') == 'canterlot'\nassert solution('5 3 5') =='madam'\n"
    },
    {
        "number": 3054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Blue Ridge mountain road. Leaves, glowing in autumn sun, fall in Virginia.\") == \"Blue Ridge mountain road.\\nLeaves, glowing in autumn sun,\\nfall in Virginia.\"\nassert solution(\"Who would know if we had too few syllables?\") == \"Who would know if we had too few syllables?\"\nassert solution(\"International contest- motivation high Programmers have fun!. \") == \"International\\ncontest- motivation high\\nProgrammers have fun!\"\n"
    },
    {
        "number": 3055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\nThoreTiemann\nThoreHusfeldt\n''') == 'ThoreH'\nassert solution('''\n2\nThoreHusfeldt\nJohanSannemo\n''') == 'ThoreHusfeldt'\nassert solution('''\n2\nThoreHusfeldt\nThoreHusfeldt\n''') == 'ThoreHusfeldt'\nassert solution('''\n2\nThoreHusfeldt\nThoreHusfeldt\n''') == 'ThoreHusfeldt'\nassert solution('''\n2\nThoreHusfeldt\nThoreHusfeldt\n''') == 'ThoreHusfeldt'\n"
    },
    {
        "number": 3056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('P*P') == '6'\nassert solution('L*R') == '25'\nassert solution('**') == '33'\n"
    },
    {
        "number": 3057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nherp is derp\nderp is herp\nherp is herp\nderp is derp\n''') == 'yes'\nassert solution('''\noskar not lukas\noskar is poptart\nlukas is smart\n''') == 'wait what?'\nassert solution('''\nmoo not foo\n''') == 'yes'\nassert solution('''\nmoo not foo\n''') == 'wait what?'\nassert solution('''\nmoo not foo\n''') == 'wait what?'\n"
    },
    {
        "number": 3058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 4'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == 'impossible'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 3059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n100 111 5\n20 0.5 10\n80 0.5 2\n85 0.5 2\n90 0.5 2\n95 0.5 2\n''') == '124'\nassert solution('''\n10 20 3\n5 0.3 8\n6 0.8 3\n8 0.9 3\n''') == '18.9029850746'\nassert solution('''\n2 4 1\n1 0.5 5\n''') == '3'\n"
    },
    {
        "number": 3060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2 1 2'\nassert solution('2 1') == '1'\nassert solution('5 22') == '4 3 4 2'\n"
    },
    {
        "number": 3061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n3 4\n2 4\n''') == '2'\nassert solution('''\n7 6\n1 2\n2 3\n2 5\n6 3\n7 2\n3 4\n''') == '2'\nassert solution('''\n7 5\n1 2\n2 3\n3 4\n5 6\n6 7\n''') == '0'\n"
    },
    {
        "number": 3062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 0') == '20.00000000'\nassert solution('1.00 0.10') == '20.00000000'\nassert solution('-10 10') == '3.14159265'\n"
    },
    {
        "number": 3063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 100\n1 100\n4 70\n3 70\n''') == '170'\nassert solution('''\n3\n2 120\n3 50\n2 80\n''') == '150'\n"
    },
    {
        "number": 3064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2'\nassert solution('6 6') == '5'\n"
    },
    {
        "number": 3065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1\n0\n2 1 2\n1 0\n1 0\n1 0\n1 0\n''') == '0.5'\nassert solution('''\n8\n6\n1 0 2 3 0 1\n7 1 2 3 4 5 6 7\n1 0\n2 0 3\n2 0 2\n1 0\n1 0\n1 0\n1 0\n1 0\n1 0\n''') == '0.0446429'\n"
    },
    {
        "number": 3066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 2 3 3 2 1\n''') == '3\n1 6 1\n2 5 2\n3 4 3\n'''\n"
    },
    {
        "number": 3067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('1 100') == '1 100'\nassert solution('1 1') == '1 1'\nassert solution('5 10 20 30 40 50') == '10 20 28 27 30 40 50'\n"
    },
    {
        "number": 3068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '2600'\nassert solution('3') == '506'\nassert solution('1') == '2600'\nassert solution('2') == '506'\nassert solution('1 2 1') == '506'\n"
    },
    {
        "number": 3069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('()))') == 'possible'\nassert solution(')))(') == 'impossible'\nassert solution('(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((("
    },
    {
        "number": 3070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 1800 9000 1800\n1 2000 9200 1600\n1 2200 9400 1400\n''') == '1800'\nassert solution('''\n2 2\n1 1800 3600 1800\n1 1900 3600 1600\n''') == 'impossible'\n"
    },
    {
        "number": 3071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\nA1-B2 B1-A2 A3-B3\nA2-B3 B2-A3 A1-B1\nA3-B1 B3-A1 A2-B2\nA1-C1 A2-B1 B1-C2\nA1-B2 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B2 A2-C1 B1-C2\nA1-C1 A2-B1 B1-C2\nA1-B3 A2-C1 B1-C2\nA1-C2 A2-B2 B1-C1\nA1-B1 A2-C1 B1-C2\nA1-C2 A"
    },
    {
        "number": 3072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '7'\nassert solution('4 4') == '9'\n"
    },
    {
        "number": 3073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2 2 100\n1 1 1 1 500\n''') == '600'\nassert solution('''\n2 0 2 1 100\n6 0 8 1 1\n''') == '100'\n"
    },
    {
        "number": 3074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n"
    },
    {
        "number": 3075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == '10'\nassert solution('''\n3 10\n2 100\n1 10\n13 5\n''') == 'cancel road trip'\nassert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == 'cancel road trip'\nassert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == 'cancel road trip'\nassert solution('''\n3 10\n2 100\n1 10\n11 5\n''') == 'cancel road trip'\n"
    },
    {
        "number": 3076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 9\n2 8\n1 1\n3 4\n5 100\n''') == '1 8 9 9 100 101 108 109 109'\nassert solution('''\n5 7\n2 2\n3 8\n2 7\n2 4\n3 8\n''') == '0 7 8 11 15 16 19'\n"
    },
    {
        "number": 3077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 3') == '1'\nassert solution('1 5 3') == '3'\nassert solution('1 5 3') == '3'\nassert solution('1 5 3') == '3'\nassert solution('1 5 3') == '3'\n"
    },
    {
        "number": 3078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10000\\n1\\n1\\n1\\n1\\n1') == '4'\nassert solution('5 9\\n1\\n1\\n10\\n1\\n9') == '2'\n"
    },
    {
        "number": 3079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'NE'\nassert solution('4') == 'DA'\n"
    },
    {
        "number": 3080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4 4\n1 2\n1 3\n2 4\n3 4\n1 1 4\n2 1 4\n1 1 3\n2 2 3 2\n''') == '2'\nassert solution('''\n8 10 4\n1 2\n2 3\n1 3\n3 6\n6 8\n2 4\n2 5\n4 7\n5 7\n7 8\n2 3 4 5 6\n2 2 6 8\n1 1 6\n1 1 8\n''') == '0'\n"
    },
    {
        "number": 3081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 1\n''') == '2'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '0'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '1'\nassert solution('''\n2 2\n1 1\n0 1\n1 0\n1 2 1\n2 1 3\n''') == '0'\n"
    },
    {
        "number": 3082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '40.500000000'\nassert solution('3 15\\nD 4 10 1\\nC 6 1\\nC 9 3') == '49.000000000'\n"
    },
    {
        "number": 3083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\na 2 10 3\nb 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == '5 4 9 3 1 10 7 6 2'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\nassert solution('''\n10\na 2 10 3\na 1 6\nc 2 1 5\nd 1 9\ne 1 4\nf 1 2\ng 2 6 8\nh 0\ni 1 3\nj 1 7\n''') == 'fail'\n"
    },
    {
        "number": 3084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00:00') == '3'\nassert solution('01:01') == '3'\nassert solution('00:08') == '3'\nassert solution('00:00') == '3'\n"
    },
    {
        "number": 3085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''(((())))''') == '4,4:'''\n"
    },
    {
        "number": 3086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n26 02 03 03 1\n''') == '5'\nassert solution('''\n1 1\n26 02 03 03 2\n''') == '185'\nassert solution('''\n1 1\n26 02 03 03 3\n''') == '-1'\nassert solution('''\n1 1\n26 02 03 03 4\n''') == '-1'\nassert solution('''\n1 1\n26 02 03 03 5\n''') == '-1'\n"
    },
    {
        "number": 3087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '5 6 1 2 3 4'\nassert solution('4 2') == '2 3 4 1'\n"
    },
    {
        "number": 3088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1374 2') == '7413'\nassert solution('210 1') == '201'\n"
    },
    {
        "number": 3089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.666666666666667'\nassert solution('4') == '0.733333333333333'\n"
    },
    {
        "number": 3090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 4') == '9'\nassert solution('2 3 100') == '21'\n"
    },
    {
        "number": 3091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''\n9 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''\n8 2 7 -\n1 1 1 2\n''') == '2'\nassert solution('''\n9 2 7 -\n1 1 1 2\n''') == '4'\nassert solution('''\n8 2 7 -\n1 1 1 2\n''') == '2'\n"
    },
    {
        "number": 3092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '3'\nassert solution('4 4') == '2'\n"
    },
    {
        "number": 3093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '6'\nassert solution('3 4') == '24'\n"
    },
    {
        "number": 3094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '1'\nassert solution('3 4 5 1 2') == '1'\n"
    },
    {
        "number": 3095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '9'\nassert solution('3 3') == '4'\nassert solution('3 3') == '0'\nassert solution('3 3') == '0'\nassert solution('3 3') == '0'\n"
    },
    {
        "number": 3096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2 1 3 4\\n1 2\\n1 3\\n3 4') == '6'\nassert solution('4\\n3 4 5 6\\n1 2\\n1 3\\n2 4') == '3'\n"
    },
    {
        "number": 3097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 10\\n5 8\\n') == '18\\n8\\n'\nassert solution('3\\n17 144\\n121 121\\n89 98\\n') == '265\\n25\\n10\\n'\n"
    },
    {
        "number": 3098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '0.50000000'\nassert solution('5 5') == '12.50000000'\n"
    },
    {
        "number": 3099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1 3\n0 1\n1 2\n2 3\n1\n''') == '2'\nassert solution('''\n4 0 4\n0 2\n0 1\n2 1\n2 3\n\n''') == '1'\n"
    },
    {
        "number": 3100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1') == '6'\nassert solution('2 2 2') == '30'\n"
    },
    {
        "number": 3101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2021 2020 2020'\nassert solution('2') == 'impossible'\nassert solution('1') == 'impossible'\n"
    },
    {
        "number": 3102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n3') == '0'\nassert solution('1\\n4') == '0'\nassert solution('1\\n5') == '0'\nassert solution('1\\n6') == '0'\n"
    },
    {
        "number": 3103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 0') == '2'\nassert solution('3 5 1') == '4'\nassert solution('4 5 1') == 'begin repairs'\n"
    },
    {
        "number": 3104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('143175=120') == '14+31+75=120'\nassert solution('5025=30') == '5+025=30'\n"
    },
    {
        "number": 3105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8\\n1\\n3\\n2\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n1\\n5\\n2\\n4\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\nassert solution('8\\n1\\n2\\n3\\n4\\n1\\n5\\n2\\n4\\n') == '-1'\nassert solution('8\\n1\\n2\\n3\\n4\\n1\\n5\\n2\\n4\\n') == '1 2'\n"
    },
    {
        "number": 3106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1101') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n3 1 3 1\n2 2 1\n3 3 1 3\n1 2''') == '1'\nassert solution('''2 1\n4 1 6 3 6\n7 3 4 2 6 5 6 1\n1 2\n2 3\n3 1''') == '0'\n"
    },
    {
        "number": 3108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '4.000000'\nassert solution('4 2') == '3.666666'\n"
    },
    {
        "number": 3109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.0 0.0\n0.0 2.0\n''') == '0.750'\nassert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\nassert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\nassert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.625'\nassert solution('''\n2 2 5 5\n2.0 2.0\n4.0\n1.0 0.0\n0.0 1.0\n1.5 0.0\n0.0 2.0\n''') == '0.750'\n"
    },
    {
        "number": 3110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 4\n0 3 6\n4 0 3\n''') == '2'\nassert solution('''\n3 4\n2 3 0 7\n0 0 2 1\n0 0 3 0\n''') == '37'\n"
    },
    {
        "number": 3111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '10'\nassert solution('4 4') == '1'\n"
    },
    {
        "number": 3112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2 3\n1 3\n2 3\n3 4\n''') == '2'\nassert solution('''\n5 2 4\n1 3\n3 4\n2 4\n4 5\n''') == '1'\n"
    },
    {
        "number": 3113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'no'\nassert solution('2') == 'no'\nassert solution('3') == 'yes'\nassert solution('4') == 'yes'\nassert solution('5') == 'yes'\n"
    },
    {
        "number": 3114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2\n2 3\n1 3\n''') == 'YES'\nassert solution('''\n4 3\n1 2\n1 3\n1 4\n''') == 'NO'\n"
    },
    {
        "number": 3115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n0 > 1\n1 = 2\n0 = 2\n''') == 'inconsistent'\nassert solution('''\n5 5\n0 = 1\n1 = 2\n3 = 4\n0 > 3\n1 > 4\n''') == 'consistent'\n"
    },
    {
        "number": 3116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 0 0\\n1 1 0\\n0 0 0\\n0 0 1\\n') == '1.57079633'\nassert solution('4\\n-100 0 0\\n10 0 10\\n-10 -10 -10\\n0 0 0\\n') == '41938.65135885'\n"
    },
    {
        "number": 3117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n11\nsabcabcfabc\n''') == '3'\nassert solution('''\n18\ntrutrutiktiktappop\n''') == '4'\nassert solution('''\n1\na\n''') == '1'\nassert solution('''\n2\nab\n''') == '1'\nassert solution('''\n3\nabc\n''') == '2'\n"
    },
    {
        "number": 3118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == 'huge'\nassert solution('4') == 'huge'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '4'\nassert solution('6 1') == '9'\n"
    },
    {
        "number": 3120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''concat(shuffle([1,2]),shuffle([1,2]))''') == 'not equal'\nassert solution('''sorted(concat([3,2,1],[4,5,6]))''') == 'equal'\n"
    },
    {
        "number": 3121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Oh no'\nassert solution('1 3') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 3122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '3'\nassert solution('5 5') == 'impossible'\n"
    },
    {
        "number": 3123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 1 1 3\n''') == '2'\nassert solution('''\n1\n22\n''') == '4'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n''') == '1'\n"
    },
    {
        "number": 3124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a+b-c') == '- +d-', 'First'\nassert solution('a-b+d-c') == '- +d-', 'Second'\nassert solution('knuth-morris-pratt') == '<any> <empty>', 'Third'\nassert solution('knuthmorrispratt') == '<any> <empty>', 'Fourth'\n"
    },
    {
        "number": 3126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n0\n7\nt 0\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\n''') == '0'\nassert solution('''3 0\n2 6 6\n10\nt 1\nt 2\nt 3\nt 4\nt 5\nt 6\nt 7\nt 8\nt 9\nt 10\n''') == '11'\n"
    },
    {
        "number": 3127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 8') == '2'\nassert solution('5 6') == '0'\n"
    },
    {
        "number": 3128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n1 2\n1 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '4 5 6'\nassert solution('''\n6\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n2 4\n2 5\n2 6\n''') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CPCC') == '1'\nassert solution('PPPPCCCC') == '8'\n"
    },
    {
        "number": 3130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1\\n1 3\\n2 3\\n2') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\nassert solution('3 2 1\\n1 3\\n2 3\\n3') == '1 2 3'\n"
    },
    {
        "number": 3131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '39'\nassert solution('5 1') == '4'\n"
    },
    {
        "number": 3132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\nxx.\nxxx\n...\n''') == '1 1 2'\nassert solution('''4 6\nxx....\nxx.xxx\n...xxx\n...xxx\n''') == '1 2 3'\n"
    },
    {
        "number": 3133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == 'indistinguishable'\nassert solution('2 0 1') == '0'\n"
    },
    {
        "number": 3134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0110') == '1111'\nassert solution('1001') == '0111'\n"
    },
    {
        "number": 3135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10000') == '+0000'\nassert solution('1111') == '+000-'\n"
    },
    {
        "number": 3136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n2 1 1 1\n2 2\n1\n1\n1 2 1\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '2'\nassert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\nassert solution('''\n2 1 1 1\n2 2\n1\n1\n1 2 1\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '2'\nassert solution('''\n7 8 3 2\n1 2\n7 3 4\n5 6\n1 3 2\n1 4 1\n1 5 1\n1 6 6\n2 3 9\n2 4 2\n2 6 4\n7 6 5\n''') == '9'\n"
    },
    {
        "number": 3137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 1\n2 2\n1 1 R\n010\n000\n000''') == '2'\nassert solution('''3 4 2\n2 2\n3 4 R\n2327\n6009\n2112\n3 2 R\n1310\n2101\n1301\nSample Output 3:\n7\n''') == '7'\n"
    },
    {
        "number": 3138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\nD 3 1\nD 2 2\nD 1 3\nP 1\nP 2\nP 3\n''') == 'NE'\nassert solution('''\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '3'\nassert solution('''\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == '1'\nassert solution('''\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == 'NE'\nassert solution('''\n6\nD 8 8\nD 2 4\nD 5 6\nP 2\nD 6 2\nP 4\n''') == 'NE'\n"
    },
    {
        "number": 3140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1 10') == '2'\nassert solution('2 3 5 6') == '5'\n"
    },
    {
        "number": 3141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1.0 0.0 1.4\\n-1.0 0.0 -1.4\\n0.0 1.0 -0.2') == '2.0000000000'\nassert solution('5\\n1.4 1.0 0.0\\n-0.4 -1.0 0.0\\n-0.1 -0.25 -0.5\\n-1.2 0.0 0.9\\n0.2 0.5 0.5') == '2.0000000000'\n"
    },
    {
        "number": 3142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 9 5') == '1'\nassert solution('1 100 10') == '9'\n"
    },
    {
        "number": 3143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('4 5') == '7'\nassert solution('4 3 2 1') == '4 4 2 4 4 1 4'\n"
    },
    {
        "number": 3144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10 3 2') == '4'\nassert solution('10 10 5 0') == '10'\n"
    },
    {
        "number": 3145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 20\n0123456789\n''') == '10'\nassert solution('''\n6 100 9294\n23689\n''') == '111'\n"
    },
    {
        "number": 3146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '1.500000 2.666667'\nassert solution('5 2') == '1.500000 3.666667'\n"
    },
    {
        "number": 3147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 6\n101010\n111001\n101001\n''') == '3'\nassert solution('''4 5\n10010\n01010\n10101\n01001\n''') == '3'\nassert solution('''5 5\n10010\n01010\n10101\n01001\n10100\n''') == '3'\nassert solution('''6 6\n10010\n01010\n10101\n01001\n10100\n10010\n''') == '-1'\nassert solution('''7 7\n10010\n01010\n10101\n01001\n10100\n10010\n01010\n''') == '-1'\n"
    },
    {
        "number": 3148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '-3 -1'\nassert solution('4') == '3 4'\n"
    },
    {
        "number": 3149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6 5 45 20') == '2 5.086781'\nassert solution('3 0.25 2 45 20') == '1 12.715255'\n"
    },
    {
        "number": 3150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n0 0 1 0\n0 0 0 1\n1 0 1 1\n0 1 1 1\n0 0 1 1\n1 0 0 1\n''') == '8'\nassert solution('''\n4\n5 1 7 1\n1 1 5 1\n4 0 4 4\n7 0 3 4\n''') == '1'\n"
    },
    {
        "number": 3151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == '4 3'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 3152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '16'\nassert solution('4') == '109'\n"
    },
    {
        "number": 3153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n5 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''\n4 3\n5 3 1 1\n1 3\n2 3\n4 1\n''') == '5'\n"
    },
    {
        "number": 3154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '1 2'\nassert solution('2 1') == 'impossible'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '5 2'\nassert solution('2020') == '2020 1'\n"
    },
    {
        "number": 3156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3\n0 chocolate\n1 icecream\n2 cookies\n3\nchocolate\ncookies\nicecream\n''') == 'impossible'\nassert solution('''\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'unique'\nassert solution('''\n3\n4\n0 chocolate\n1 icecream\n2 cookies\n2 chocolate\n3\nchocolate\nicecream\ncookies\n''') == 'ambiguous'\n"
    },
    {
        "number": 3157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0 10') == '0'\nassert solution('1 2 10') == '1'\n"
    },
    {
        "number": 3158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 pan\\n') == '1 pan'\nassert solution('2 zoom out\\n') == '3 zoom out'\nassert solution('3 pan\\n') == '3 pan'\nassert solution('4 zoom out\\n') == '4 zoom out'\nassert solution('5 pan\\n') == '5 pan'\n"
    },
    {
        "number": 3159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 20') == 'apples are great!\\n'\nassert solution('7 7') == '+++++++\\n+  =  +\\n+ +++ +\\n+ + + +\\n+ +++ +\\n+     +\\n+++++++'\n"
    },
    {
        "number": 3160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HH') == '2.0'\nassert solution('H?') == '1.5'\n"
    },
    {
        "number": 3161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '6'\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '6'\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '6'\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '6'\nassert solution('''\n4\n1111\n1111\n1111\n1111\n''') == '6'\n"
    },
    {
        "number": 3162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nh 1 4 1\\nv 2 4 2\\nh 10 2 2\\nv 11 2 3') == '2'\nassert solution('4\\nh 1 10 1\\nh 5 10 2\\nv 1 10 1\\nv 5 10 3') == '4'\n"
    },
    {
        "number": 3163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2'\nassert solution('3 3') == '4'\nassert solution('2 2') == '-1'\nassert solution('3 3') == '4'\n"
    },
    {
        "number": 3164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 2 3 3 4 2\n''') == '2'\nassert solution('''\n8\n1 2 1 3 1 3 1 2\n''') == '4'\n"
    },
    {
        "number": 3165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 2\n1 1 1\n2 2 1\n2 2 2 1\n1 1 1 2\n''') == '4'\nassert solution('''\n2 2 2\n1 1 1\n2 2 2\n2 2 2 1\n1 1 1 2\n''') == '2'\n"
    },
    {
        "number": 3166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == '1'\nassert solution('''\n4 2\n0 0 1 1\n1 0 0 1\n0 1 0 0\n0 0 1 0\n0 2\n''') == 'impossible'\n"
    },
    {
        "number": 3167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4\n1 1 2 1\n3\n0 9\n2 6\n7 7\n''') == '35'\nassert solution('''\n10 4\n1 1 2 1\n3\n0 10\n2 6\n7 7\n''') == '18'\nassert solution('''\n10 4\n1 1 2 1\n3\n0 10\n2 6\n7 7\n''') == '8'\n"
    },
    {
        "number": 3168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1\\n2\\n3\\n4') == '0\\n1\\n3\\n6'\nassert solution('5\\n3\\n2\\n4\\n1\\n5') == '0\\n1\\n2\\n4\\n6'\n"
    },
    {
        "number": 3169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 2 2\\n1 1 3 2\\n2 4 7 3\\n3 3 5 3') == '2 4 1 3'\nassert solution('4\\n0 0 1 1\\n1 2 0 3\\n2 2 3 3\\n4 0 3 1') == '4 3 1 2'\n"
    },
    {
        "number": 3170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''23456789TJ23456789TJA89Q66JK37T2A4AQK3AK5T8Q24K97JQ5\n89724TJTA67K4J87Q8T6Q7J2324T558KA99A3KA356QJ6523QK49''') == 'Theta wins'\n"
    },
    {
        "number": 3171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 charlatan 1\\n1 not charlatan 1') == 'charlatan'\nassert solution('2 1\\n1 and fabulist 1 fabulist 2') == 'fabulist'\n"
    },
    {
        "number": 3172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1.00 5.00\\n3.00 3.00\\n4.00 2.00\\n6.00 4.50\\n7.00 1.00') == '4'\nassert solution('3\\n-1.50 -1.00\\n1.50 -1.00\\n0.00 1.00') == '3'\n"
    },
    {
        "number": 3173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 5 2\nR..?.\n.X...\n100 100 7 100 8\n''') == '16'\nassert solution('''\n2 3 1\nX..\n.?.\n10 1000 1\n''') == '10'\n"
    },
    {
        "number": 3174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n0 4 4\n1 5 1\n2 6 1\n''') == '1.414'\nassert solution('''\n6 11\n0 0 1\n0 1 2\n1 0 3\n1 1 4\n5 5 1\n20 20 10\n''') == '5.657'\n"
    },
    {
        "number": 3175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1 1 1 1') == '1.0'\nassert solution('3 1 1 1') == '0.433'\n"
    },
    {
        "number": 3176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\n1 1 5\n2 1 5\n1 2 4\n2 3 5\n3 2 30\n3 3 5\n''') == '5'\nassert solution('''\n8 10\n1 1 15\n2 2 30\n1 2 8\n2 1 7\n3 2 8\n2 3 7\n4 2 100\n3 3 15\n''') == '36'\n"
    },
    {
        "number": 3177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 2') == '3'\n"
    },
    {
        "number": 3178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 8') == '-1'\nassert solution('6 5') == '5'\n"
    },
    {
        "number": 3179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '4.00'\nassert solution('6 3') == '9.00'\n"
    },
    {
        "number": 3180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3 2\nPAINT 2 0 0 3 3\nPAINT 3 0 3 3 3\n''') == '2 1 2 3'\nassert solution('''3 3 4\nPAINT 3 0 0 1 1\nSAVE\nPAINT 2 1 1 2 2\nLOAD 1\n''') == '3 1 1'\n"
    },
    {
        "number": 3181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3\") == \"1 4 2 3\"\nassert solution(\"5 1\") == \"-1\"\n"
    },
    {
        "number": 3182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '0'\nassert solution('6') == '0'\nassert solution('7') == '0'\n"
    },
    {
        "number": 3183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4 0 3') == '4 140'\nassert solution('2 1 0 1') == '1000 100'\n"
    },
    {
        "number": 3184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n100 7\n1 50\n50 70\n70 90\n90 40\n20 60\n60 80\n80 20\n''') == '3'\nassert solution('''\n8 2\n8 3\n5 7\n''') == 'impossible'\n"
    },
    {
        "number": 3185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('120') == '5'\nassert solution('51090942171709440000') == '21'\n"
    },
    {
        "number": 3186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 1 2') == '45'\nassert solution('3 3 3') == '10'\n"
    },
    {
        "number": 3187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '18'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n5\n''') == '20'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == 'impossible'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == 'impossible'\nassert solution('''\n5\n3 1\n4 1\n5 9\n2 6\n5 3\n10\n''') == 'impossible'\n"
    },
    {
        "number": 3188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '11'\nassert solution('4') == '10'\n"
    },
    {
        "number": 3189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 2') == '0'\n"
    },
    {
        "number": 3190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n3\n2\n''') == '1'\nassert solution('''\n3\n1 3 2\n2\n''') == '5'\nassert solution('''\n3\n1 3 2\n2\n''') == '1'\nassert solution('''\n3\n1 3 2\n2\n''') == '5'\nassert solution('''\n3\n1 3 2\n2\n''') == '1'\n"
    },
    {
        "number": 3191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 100 20') == '0'\nassert solution('10 10 1') == '19'\n"
    },
    {
        "number": 3192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'SHIP IT'\nassert solution('''\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\nassert solution('''\n4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'SHIP IT'\nassert solution('''\n5\nclassa classb myfilec execd libe\nclassa 2\nimport classb\nimport myfilec, libe\nclassb 1\nimport execd\nmyfilec 1\nimport libe\nexecd 1\nimport libe\nlibe 0\n''') == 'SHIP IT'\nassert solution('''\n4\na b c d\na 1\nimport d, b, c\nb 2\nimport d\nimport c\nc 1\nimport c\nd 0\n''') == 'SHIP IT'\n"
    },
    {
        "number": 3193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5+3+x') == '1'\nassert solution('20+3+x') == '2'\n"
    },
    {
        "number": 3194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 10\n0 15\n5 20\n''') == 'yes'\nassert solution('''\n2 10\n1 15\n0 20\n''') == 'no'\n"
    },
    {
        "number": 3195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4 4') == '0.25'\nassert solution('4 4 4') == '0'\n"
    },
    {
        "number": 3196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 7') == '3'\nassert solution('6 8') == 'inf'\n"
    },
    {
        "number": 3197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == '4'\nassert solution('''\n12 3\n2 3 4 5 6 7 4 7 8 8 12 12\n''') == '2'\n"
    },
    {
        "number": 3198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'hoose'\nassert solution('4') == 'hoose'\nassert solution('3') == 'noise'\nassert solution('2') == 'noise'\nassert solution('1') == 'NO TYPOS'\n"
    },
    {
        "number": 3199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 3') == '5'\n"
    },
    {
        "number": 3200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '44.72135955'\nassert solution('2') == '68.52419365'\n"
    },
    {
        "number": 3201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 1 5') == '1'\nassert solution('3 4 2 3') == '2'\n"
    },
    {
        "number": 3202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '3'\nassert solution('5 3') == '2'\n"
    },
    {
        "number": 3203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '50'\nassert solution('0 50') == '25'\nassert solution('100 100') == '50'\n"
    },
    {
        "number": 3204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n100\n200\n''') == '160'\nassert solution('''\n3\n100\n200\n2010\n''') == '250'\n"
    },
    {
        "number": 3205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n0 1 1\n2 3 1\n''') == '2'\nassert solution('''\n5 5\n0 1 3\n1 2 3\n2 3 3\n3 4 3\n4 0 3\n''') == '0'\n"
    },
    {
        "number": 3206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n3 3 2 1\n3 3 3\n''') == '1 1\\n1 2\\n2 3 4'\nassert solution('''\n4 2\n3 3 2 2\n6 3\n''') == '-1'\n"
    },
    {
        "number": 3207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3 10\n0 0 D\n10 1 L\n''') == '10.0\nassert solution('''4 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n''') == '4.0\nassert solution('''5 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n7 2 D\n''') == '10.0\nassert solution('''6 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n7 2 D\n8 2 D\n''') == '10.0\nassert solution('''7 3 7\n1 0 D\n3 0 D\n4 1 L\n6 2 D\n7 2 D\n8 2 D\n9 2 D\n''') == '10.0\n"
    },
    {
        "number": 3208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ex eoii jpxbmx cvz uxju sjzzcn jzz') == 'we will avenge our dead parrot arr'\nassert solution('wl jkd') == 'Impossible'\n"
    },
    {
        "number": 3209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Hamburg Bremen') == '68.3'\nassert solution('Amsterdam Rotterdam') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '4'\n"
    },
    {
        "number": 3211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '4'\nassert solution('4') == 'impossible'\n"
    },
    {
        "number": 3212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n500 500 499\n0 0 999\n1000 1000 200\nSample Output 1:\nBill enters at (0.00, 1000.00) and leaves at (1000.00, 800.00).\n\nSample Input 2:\n4\n250 250 300\n750 250 300\n250 750 300\n750 750 300\nSample Output 2:\nBill will be bitten.\n''') == 'Bill will be bitten.'\n"
    },
    {
        "number": 3213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\nassert solution('''8 3\nxxxxxxxx\n''') == 'xxoooooo'\nassert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\nassert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\nassert solution('''8 3\n++xx+x++\n''') == '++xx+o++'\n"
    },
    {
        "number": 3214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nThe fox said, \"When?\"\n\"Not till 12 o'clock\", replied the hen.\n\"That clock is stopped, it will never strike.\", he said.\n\"\"\") == \"\"\"\nclock: oclock\nhe: hen the\nhen: he when\nis: it\nit: is\noclock: clock\nthe: he\ntill: will\nwhen: hen\nwill: till\n"
    },
    {
        "number": 3215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n1 2 7 3 8 9 4 5 10 6\n''') == '1'\nassert solution('''\n10\n3 8 1 9 4 5 2 7 10 6\n''') == '2'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\n"
    },
    {
        "number": 3216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.142857 6') == '1/7'\nassert solution('1.6 1') == '5/3'\n"
    },
    {
        "number": 3217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 0 0\\n0 0 1\\n') == '6'\nassert solution('2\\n0 0 0\\n0 0 1\\n') == '10'\n"
    },
    {
        "number": 3218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n-1 2 -1\n2 2\n1 -1 1\n''') == '1'\nassert solution('''\n7\n-1 4 5 1 0 -1 -1\n-1 3 2 0 0 1\n-1 4 -1 1 0 -1 -1\n1 3 4 2 2 4\n0 2 3 -1 4 4 2\n-1 4 4 3 3 2\n1 -1 -1 -1 4 2 -1\n''') == '1'\n"
    },
    {
        "number": 3219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1001') == '3'\nassert solution('1111') == '1'\n"
    },
    {
        "number": 3220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'LLL'\nassert solution('5') == 'LLRLR'\n"
    },
    {
        "number": 3221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 7 10\n1 2 1000000\n2 3 2000000\n3 4 3000000\n4 5 4000000\n5 6 5000000\n6 7 6000000\n7 1 7000000\n''') == '49000000000070'\nassert solution('''\n6 6 7\n1 3 1000000\n3 5 3000000\n5 1 5000000\n2 4 2000000\n4 6 4000000\n6 2 6000000\n''') == '25000000000021'\n"
    },
    {
        "number": 3222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"4 4\") == \"2\"\n"
    },
    {
        "number": 3223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'POSSIBLE'\nassert solution('2') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.5 0.5 0.5'\nassert solution('-1 0 0\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0.0 0.0 -0.0'\n"
    },
    {
        "number": 3225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 1\\n1 2 7\\n2 3 8\\n1') == 'IMPOSSIBLE'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3') == '74.6666666667'\nassert solution('3 2 1\\n1 2 7\\n2 3 8\\n1\\n2 3\\n1\\n2 3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '1'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '2'\nassert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '0'\nassert solution('''7 7\n1 2\n2 3\n3 1\n4 5\n5 6\n6 7\n7 4\n''') == '0'\nassert solution('''5 6\n1 2\n2 3\n3 1\n3 4\n1 4\n4 5\n5 6\n6 7\n7 4\n''') == '0'\n"
    },
    {
        "number": 3228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 10 2\n0\n15\n30\n45\n''') == '10'\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '5'\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '10'\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '5'\nassert solution('''\n4 10 3\n0\n15\n30\n45\n''') == '10'\n"
    },
    {
        "number": 3229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n50 50 75\n25 25 25\n''') == '2'\nassert solution('''\n5 2\n50 50 50 50\n25 25 25 25\n''') == '1'\nassert solution('''\n4 2\n50 50 75\n25 25 25\n''') == '1'\nassert solution('''\n5 2\n50 50 50 50\n25 25 25 25\n''') == '1'\nassert solution('''\n4 2\n50 50 75\n25 25 25\n''') == '1'\n"
    },
    {
        "number": 3230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n.LX.\n.X..\n....\n.L..''') == '1'\nassert solution('''4 4\n.XLX\n.X..\n...L\n.X..''') == '2'\n"
    },
    {
        "number": 3231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'home'\nassert solution('5 2 1\\n1 1\\n2 0 2\\n2 1 3\\n2 2 4\\n1 3') == 'detention'\n"
    },
    {
        "number": 3232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('tralalal') == 'allatral'\nassert solution('zzzz') == '-1'\n"
    },
    {
        "number": 3233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '8'\n"
    },
    {
        "number": 3234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '1'\nassert solution('''\n2 2\n0 1 20\n1 0 5\n''') == '1'\nassert solution('''\n3 3\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\nassert solution('''\n4 4\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\nassert solution('''\n5 5\n0 1 10\n1 2 10\n0 3 10\n3 2 10\n2 0 20\n''') == '0'\n"
    },
    {
        "number": 3236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '5'\nassert solution('4 3') == '1'\nassert solution('4 4 8 12') == '1'\n"
    },
    {
        "number": 3237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n020302\n''') == '7'\nassert solution('''\n1311\n''') == '24'\nassert solution('''\n11\n''') == '1'\n"
    },
    {
        "number": 3238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 10\n"
    },
    {
        "number": 3239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('50 0.125') == '16.339203308'\nassert solution('201 1.000') == '5.000000000'\n"
    },
    {
        "number": 3240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 3') == '3'\n"
    },
    {
        "number": 3241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '10.5'\nassert solution('3') == '-1'\nassert solution('3') == '-1'\nassert solution('3') == '-1'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0.5\\n2 0.51\\n1 0.49') == '1'\nassert solution('2 0.5\\n2 0.51\\n1 0.49') == '2'\nassert solution('2 0.5\\n2 0.51\\n1 0.49') == '2'\nassert solution('2 0.5\\n2 0.51\\n1 0.49') == '2'\nassert solution('2 0.5\\n2 0.51\\n1 0.49') == '2'\n"
    },
    {
        "number": 3243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 2\n3 3 3 3\n0 1\n0 3\n1 3\n1 2\n2 3\n''') == 'yes'\nassert solution('''\n5 4 4\n1 1 2 2 2\n0 1\n2 3\n3 4\n4 2\n''') == 'no'\n"
    },
    {
        "number": 3244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2 1'\nassert solution('4') == '5 8'\n"
    },
    {
        "number": 3245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\npython\\njava\\n') == 'python\\njava'\nassert solution('2\\npython\\njava\\n') == 'python\\njava'\nassert solution('3\\npython\\njava\\n') == 'python\\njava'\nassert solution('4\\npython\\njava\\n') == 'python\\njava'\nassert solution('5\\npython\\njava\\n') == 'python\\njava'\n"
    },
    {
        "number": 3246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'\nassert solution('hello') == 'impossible'\nassert solution('tihssnetnceemkaesprfecetsesne') == 'this sentence makes perfect sense'\nassert solution('hitehre') == 'impossible'\n"
    },
    {
        "number": 3247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 2') == '16'\n"
    },
    {
        "number": 3248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '4'\nassert solution('5') == '1'\nassert solution('10') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('50\\n4\\n110 10\\n80 10\\n80 0\\n110 0\\n') == '6\\n85\\n90\\n95\\n100\\n105'\nassert solution('24\\n3\\n10 10\\n30 10\\n20 20\\n') == '4\\n17.071067\\n20\\n22.928932'\n"
    },
    {
        "number": 3250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 11') == 'yes'\nassert solution('10 7') == 'no'\n"
    },
    {
        "number": 3251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('10 30') == '3'\nassert solution('20 40') == '3'\nassert solution('30 50') == '3'\n"
    },
    {
        "number": 3252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '5836'\nassert solution('''\n5 2\n10 10 5\n9 8 10\n4 12 20\n12 4 8\n2 3 16\n''') == '1828'\n"
    },
    {
        "number": 3253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '50'\nassert solution('2') == 'impossible'\nassert solution('1') == 'impossible'\n"
    },
    {
        "number": 3254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5.0') == '0 0 0 0 1'\nassert solution('4.5') == '0 0 0 1 1'\n"
    },
    {
        "number": 3255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3 1') == '8'\nassert solution('8 2 1') == '3'\n"
    },
    {
        "number": 3256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '3'\nassert solution('6 3') == '4'\n"
    },
    {
        "number": 3257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1.732050') == '1.732050808'\nassert solution('1 1 3.0') == '-1'\n"
    },
    {
        "number": 3258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2.4999999987500003'\nassert solution('2') == '9.999999999000002'\n"
    },
    {
        "number": 3259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n2 1 6\n1 1 5 1 2\n2 1 6\n''') == '0\n\nassert solution('''\n4 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '3\n\nassert solution('''\n6 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '2\n\nassert solution('''\n6 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '1\n\nassert solution('''\n6 5\n1 1 4 3 4\n2 1 1\n2 2 2\n2 3 3\n2 4 4\n''') == '0"
    },
    {
        "number": 3260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 7 1000000007') == '1'\nassert solution('3 2 1000000007') == '4'\n"
    },
    {
        "number": 3261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 10\\n6') == '5'\nassert solution('3 5\\n11') == '8'\n"
    },
    {
        "number": 3262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '2'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '3'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\nassert solution('''\n4 5 3\n1 2 3\n0 1 1\n0 3 1\n0 2 1\n1 2 1\n3 2 1\n''') == '1'\n"
    },
    {
        "number": 3263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n3 120\n''') == '3'\nassert solution('''\n3 1\n10\n10\n1 10\n1 10\n1 10\n''') == '3'\nassert solution('''\n3 2\n10 20\n5 5\n2 20\n1 30\n1 32\n''') == '3'\nassert solution('''\n3 3\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n''') == '3'\nassert solution('''\n3 4\n10 20 30\n5 5 10\n2 20\n1 30\n1 32\n''') == '3'\n"
    },
    {
        "number": 3264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '5'\n"
    },
    {
        "number": 3265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '2'\nassert solution('4 3') == '-1'\n"
    },
    {
        "number": 3266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 0 3\") == \"4 3 5\"\nassert solution(\"2 1 0 1\") == \"2 100000 1\"\n"
    },
    {
        "number": 3267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\nSMS\nMMS\n''') == '3 5'\nassert solution('''\n2 3\nS.M\nM..\n''') == '2 0'\n"
    },
    {
        "number": 3268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 B\n1 B\n2 E a\n2 E b\n2 S\n5 G a\n5 T a\n5 E a\n5 E b\n1 S\n10 E a\n10 G b\n1 T a\n''') == '2'\nassert solution('''\n6\n0 B\n1 B\n1 T a\n2 E a\n2 S\n5 T a\nSample Output 2:\n1\n6 b\n''') == '1'\n"
    },
    {
        "number": 3269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '40'\nassert solution('288 291') == '76'\n"
    },
    {
        "number": 3270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\nCAT\\nDOG\") == \"COG\"\nassert solution(\"3\\nCAT\\nDOG\\nCOT\") == \"COT\"\nassert solution(\"4\\nCAT\\nDOG\\nCOT\\nCAT\") == \"CAT\"\nassert solution(\"5\\nCAT\\nDOG\\nCOT\\nCAT\\nCAT\") == \"CAT\"\nassert solution(\"6\\nCAT\\nDOG\\nCOT\\nCAT\\nCAT\\nCAT\") == \"CAT\"\n"
    },
    {
        "number": 3271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 1') == '9'\nassert solution('4 3') == '6'\n"
    },
    {
        "number": 3272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n.V.\n.V.\n..#..\n.V.#.\n.V./\n''') == '3'\nassert solution('''\n2 5\nV...\nH...V\n''') == '-1'\n"
    },
    {
        "number": 3273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\nn fox jumps ove\\nuick brown f\\nThe quick b\\ny dog.\\nrown fox\\nmps over the l\\nthe lazy dog\\n') == 'AMBIGUOUS'\nassert solution('4\\ncdefghi\\nefghijk\\nefghijx\\nabcdefg\\n') == 'AMBIGUOUS'\nassert solution('1\\n') == 'AMBIGUOUS'\nassert solution('2\\n') == 'AMBIGUOUS'\nassert solution('3\\n') == 'AMBIGUOUS'\n"
    },
    {
        "number": 3274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '--+0-'\nassert solution('3 2') == '0+-'\n"
    },
    {
        "number": 3275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\n"
    },
    {
        "number": 3276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5\nWRRRG\nWRRRG\nWRRRG\nWBBBB\n''') == 'YES'\nassert solution('''3 4\nWWRR\nWRRR\nWRRR\n''') == 'NO'\n"
    },
    {
        "number": 3277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 5') == '1'\nassert solution('6 3 5') == '3'\n"
    },
    {
        "number": 3278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3 2'\nassert solution('5') == '12 3'\n"
    },
    {
        "number": 3279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1\n0\n0\n3\n''') == '100'\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\nSample Input 3:\n3\n0\n1 1\n1\n1 1\n1\n1\nSample Output 3:\n0000\n1001\n0010\n101\n010\n000\n100\n''') == '100'\nassert solution('''\n3\n0\n1 1\n1\n1 1\n1\n1\nSample Input 4:\n4\n0\n1 1\n1\n1 1\n1\n1\nSample Output 4:\n0000\n1001\n0010\n101\n010\n000\n100\n''') == '100'\nassert solution('''\n4\n0\n1 1\n1\n1 1\n1\n1\nSample Input 5:\n5\n0\n1 1\n1\n1 1\n1\n1\nSample Output 5:\n0000\n1001\n0010\n101\n010\n000\n100\n''') == '100'\nassert solution('''\n5\n0\n1 1\n1\n1 1\n1\n1\nSample Input 6:\n6\n0\n1 1\n1\n1 1\n1\n1\nSample Output 6:\n0000\n1001\n0010\n101\n010\n000\n100\n''') == '100'\n"
    },
    {
        "number": 3280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n1 2\n2 3\n2 3\n''') == '2'\nassert solution('''\n4 1\n1 3\n4 6\n7 8\n2 5\n''') == '3'\n'''\n"
    },
    {
        "number": 3281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6 500') == '90.00000000'\nassert solution('5 6 450') == '126.86989765'\n"
    },
    {
        "number": 3282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('37') == '4'\nassert solution('30014') == '7'\n"
    },
    {
        "number": 3283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 1') == '3.5'\nassert solution('3 3 2') == '4.9'\n"
    },
    {
        "number": 3284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 1 5') == '19'\nassert solution('12 12 1 12') == '4'\n"
    },
    {
        "number": 3285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '4'\nassert solution('1 12') == '4'\n"
    },
    {
        "number": 3286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('car') == '1'\nassert solution('cocar') == '2'\n"
    },
    {
        "number": 3287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 2 0 1\n''') == '8'\nassert solution('''\n5\n1000000 1 1 1 1\n''') == '0'\n"
    },
    {
        "number": 3288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 650') == 'zyz'\nassert solution('2 651') == '-1'\n"
    },
    {
        "number": 3289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '4'\nassert solution('10') == '8'\n"
    },
    {
        "number": 3290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 3') == '0'\nassert solution('3 5 2') == '2'\n"
    },
    {
        "number": 3291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n3 2\n''') == '1'\nassert solution('''\n1 2\n3 4\n''') == '3'\nassert solution('''\n1 2\n3 4\n''') == '2'\nassert solution('''\n1 2\n3 4\n''') == '0'\nassert solution('''\n1 2\n3 4\n''') == '-1'\n"
    },
    {
        "number": 3292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '24'\n"
    },
    {
        "number": 3293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3 1\n2 3 4 1\n3 4 5 1\n''') == '3'\nassert solution('''\n3\n2 2 3 8\n3 1 5 6\n1 9 4 7\n''') == '39'\n"
    },
    {
        "number": 3294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5.2696518641'\nassert solution('1') == '9'\n"
    },
    {
        "number": 3295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '8'\nassert solution('5') == '4'\nassert solution('6') == '24'\n"
    },
    {
        "number": 3296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('6 6') == '240'\n"
    },
    {
        "number": 3297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''SEND+MORE=MONEY''') == '9567+1085=10652'\nassert solution('''A+A=A''') == 'impossible'\n"
    },
    {
        "number": 3298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '14'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '88'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'\nassert solution('''\n4 4\n1 2 3 0\n0 0 5 6\n0 4 7 8\n7 0 0 10\n''') == '-1'\n"
    },
    {
        "number": 3300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.000'\nassert solution('1 1') == '0.000'\nassert solution('1 99999') == '9999700002.000'\n"
    },
    {
        "number": 3301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8 1 6\n1 2 5\n1 3 1\n2 6 6\n2 3 6\n4 2 3\n3 4 1\n4 5 1\n5 6 1\n5\n1 3 6 5 4\n''') == '3'\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == '3'\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == 'Infinity'\nassert solution('''\n3 4 1 2\n1 2 6\n1 3 2\n1 2 7\n2 3 3\n2\n1 2\n''') == '3'\n"
    },
    {
        "number": 3302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'impossible'\nassert solution('6 1') == '000'\nassert solution('3 1') == 'impossible'\n"
    },
    {
        "number": 3303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '1'\nassert solution('99') == '1'\nassert solution('90') == '10'\n"
    },
    {
        "number": 3304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('beginning') == '5'\nassert solution('velvet') == '7'\n"
    },
    {
        "number": 3306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '2'\nassert solution('2 3') == '23'\nassert solution('1 23') == '23'\nassert solution('2 17') == '23'\nassert solution('1 1') == '1'\n"
    },
    {
        "number": 3307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0.0000000000'\nassert solution('6') == '9.476048311178'\n"
    },
    {
        "number": 3308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 0\\n1 1\\n0 2\\n-2 0\\n0 -2\\n') == '8.0000000000'\nassert solution('5\\n0.2 0.00\\n0 -0.2\\n0.0 0\\n-0.2 0\\n0 0.20\\n') == '0.0200000000'\n"
    },
    {
        "number": 3309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 4 3\n1 1 9 9 1 6 6 39 9\n''') == '2'\nassert solution('''\n10 2 2\n1 1 1 1 1 2 2 2 2 2\n''') == '2'\n"
    },
    {
        "number": 3310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2') == '3.666666667'\nassert solution('4 11 4') == '20.000000000'\n"
    },
    {
        "number": 3311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 42\n''') == '2'\nassert solution('''\n5 123456789\n''') == '16317634'\n"
    },
    {
        "number": 3312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 0 0 2') == '0'\nassert solution('3 1 1 1 8') == '4'\n"
    },
    {
        "number": 3313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1 10 10\n8 8\n5 1\n4 6\n4 7\n7 9\n''') == '3'\nassert solution('''5 1 100 100\n27 75\n79 77\n40 93\n62 41\n52 45\n''') == '3'\n"
    },
    {
        "number": 3314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == 2\nassert solution(\"ABBBAAAA\") == 3\nassert solution(\"BBBCCCBB\") == 3\n"
    },
    {
        "number": 3315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nA\nB\nAA\nBBB\nAAA\n''') == '3'\nassert solution('''5\nA\nABA\nBBB\nABABA\nAAAAAB\n''') == '3'\n"
    },
    {
        "number": 3316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4') == '0.1'\nassert solution('1\\n2\\n3\\n4') == '0.1909090909'\n"
    },
    {
        "number": 3317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '5'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '5'\nassert solution('''\nABABABcABABAbAbab\n3\n0 2\n1 6\n0 7\n''') == '4'\n"
    },
    {
        "number": 3318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '2'\nassert solution('5 3') == '3'\nassert solution('10 3') == '4'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 8 8 8') == '1'\nassert solution('10 1 2 1 8 -6 1') == '2'\n"
    },
    {
        "number": 3320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 7') == '1'\nassert solution('4 7') == '2'\nassert solution('4 7') == '3'\nassert solution('4 7') == '3'\n"
    },
    {
        "number": 3321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '2'\n\nassert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '1'\n\nassert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '1'\n\nassert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '1'\n\nassert solution('''\n6\n1 5 4 3 2 6\n1 2 5 4 3 6\n''') == '1'"
    },
    {
        "number": 3322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2') == '60'\nassert solution('1 1 1') == '-1'\nassert solution('1 1 1 1') == '-1'\nassert solution('1 1 1 1 1') == '-1'\nassert solution('1 1 1 1 1 1') == '-1'\n"
    },
    {
        "number": 3323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n10000 0 0\n0 10000 0\n0 0 10000\n3\n5000 0 0\n0 2000 0\n0 0 4000\n''') == 'Case #1: 1\\nCase #2: 2\\nCase #3: 3\\n'\n"
    },
    {
        "number": 3324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\nassert solution('''+1 2 H 2 O 1\n+1 2 C 1 O 2\n-1 1 O 2\n-1 3 C 6 H 12 O 6\n0 0''') == '6 6 6 1'\n"
    },
    {
        "number": 3325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n30 50\n20 0\n100 0\n100 40\n20 40\n''') == '20.83'\nassert solution('''\n3\n10 10\n0 0\n10 10\n''') == '10.0'\nassert solution('''\n2\n10 10\n0 0\n10 10\n''') == '10.0'\nassert solution('''\n1\n10 10\n0 0\n10 10\n''') == '10.0'\nassert solution('''\n1\n10 10\n0 0\n10 10\n''') == '10.0'\n"
    },
    {
        "number": 3326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\nassert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\nassert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\nassert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\nassert solution('''\n3 3\n1 2 5\n7 6 4\n9 8 3\n''') == '49'\n"
    },
    {
        "number": 3327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\nassert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\nassert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\nassert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\nassert solution('''\n1 15\n##.........####\n1\nCROSSWORD\n''') == '##CROSSWORD####'\n"
    },
    {
        "number": 3328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '31'\nassert solution('3 2') == '32'\nassert solution('3 3') == '33'\nassert solution('3 4') == '34'\nassert solution('3 5') == '35'\n"
    },
    {
        "number": 3329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1\\nBBW') == '2'\nassert solution('3 1\\nBBWW') == '1'\nassert solution('3 1\\nWWWWB') == '0'\nassert solution('3 1\\nWWWWB') == '0'\nassert solution('3 1\\nWWWWB') == '0'\n"
    },
    {
        "number": 3330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '0.556'\nassert solution('3 2 1') == '0.556'\nassert solution('1 2 3') == '0.556'\n"
    },
    {
        "number": 3331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 3 2') == '3'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'\nassert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'\nassert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'\nassert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'\nassert solution('''\n4\n1 3 6\n2 5 8\n3 3 5\n5 3 6\n''') == '13'\n"
    },
    {
        "number": 3333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10.000000 20.123456\\n1\\n13.141593 20.123456') == '3.141593'\nassert solution('10.000000 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593 20.123456\\n1\\n13.141593"
    },
    {
        "number": 3334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2.13333333333333'\nassert solution('4') == '2.13333333333333'\nassert solution('5') == 'impossible'\n"
    },
    {
        "number": 3335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n"
    },
    {
        "number": 3336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n35 M classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '3'\nassert solution('''\n1 F classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '1'\nassert solution('''\n1 F classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '1'\nassert solution('''\n1 F classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '1'\nassert solution('''\n1 F classicism programming\n0 M baroque skiing\n43 M baroque chess\n30 F baroque soccer\n''') == '1'\n"
    },
    {
        "number": 3337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\n'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\n'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\n'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\n'\nassert solution('5\\na 0\\na 1\\nb 2\\nc 2 3\\nb 4\\n') == '2\\n1\\n2\\n'\n"
    },
    {
        "number": 3338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'\nassert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'\nassert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'\nassert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'\nassert solution('6 1\\n78 61 88 71\\n80 80 90 90\\n70 90 80 100\\n90 70 0 0\\n80 67 0 0\\n90 63 0 0') == '5'\n"
    },
    {
        "number": 3339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '4'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '0'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '1'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '0'\nassert solution('4 5\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4') == '1'\n"
    },
    {
        "number": 3340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2\\n2 3\\n3 4\\n\") == \"2 3\"\nassert solution(\"5\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"2 4\"\nassert solution(\"6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n\") == \"2 4\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n\") == \"2 4\"\nassert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n\") == \"2 4\"\n"
    },
    {
        "number": 3341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '5'\nassert solution('1 3') == '3'\nassert solution('2 1') == '2'\nassert solution('3 5') == '5'\nassert solution('7 2') == '0'\n"
    },
    {
        "number": 3342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '1'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '0'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '0'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '0'\n"
    },
    {
        "number": 3343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'GHOST'\nassert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'SAFE'\nassert solution('4 3\\n3 C\\n2 C\\n1 C\\n') == 'SAFE'\n"
    },
    {
        "number": 3344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '2'\nassert solution('1 2') == '1'\nassert solution('1.1 2') == '1.1'\nassert solution('1.1 2.1') == '1.1'\nassert solution('1.1 2.1 3.1') == '1.1'\n"
    },
    {
        "number": 3345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('3\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('4\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('5\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\nassert solution('6\\n0 0\\n10 0\\n2\\n30 0\\n15 0') == '10'\n"
    },
    {
        "number": 3346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\n') == '0'\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\n') == '1'\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nE 17 4\\n') == '2'\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\n') == '3'\nassert solution('8 3\\nW 10 0\\nW 10 3\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\nE 17 4\\n') == '4'\n"
    },
    {
        "number": 3347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n8\\n5 6\\n3 4\\n5 13\\n6 10') == '3'\nassert solution('5\\n8\\n5 6\\n3 4\\n5 13\\n6 10') == '4'\nassert solution('5\\n8\\n5 6\\n3 4\\n5 13\\n6 10') == '5'\nassert solution('5\\n8\\n5 6\\n3 4\\n5 13\\n6 10') == '5'\nassert solution('5\\n8\\n5 6\\n3 4\\n5 13\\n6 10') == '5'\n"
    },
    {
        "number": 3348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4\\n10 3 3') == 'ABB'\nassert solution('4 4\\n10 3 3') == 'ABC'\nassert solution('4 4\\n10 3 3') == 'ABC'\nassert solution('4 4\\n10 3 3') == 'ABC'\nassert solution('4 4\\n10 3 3') == 'ABC'\n"
    },
    {
        "number": 3349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'\n\nassert solution('''\n11\nBETWEEN\nSUBTLE\nSHADING\nAND\nTHE\nABSENCE\nOF\nLIGHT\nLIES\nNUANCE\nIQLUSION\nBTWNSBTLSHDNGNDTHBSNCFLGHTLSTHNNCFQLSN\n''') == 'BETWEEN SUBTLE SHADING AND THE ABSENCE OF LIGHT LIES THE NUANCE OF IQLUSION'"
    },
    {
        "number": 3350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abrahellehhelleh') == '12'\nassert solution('abrahelehhelleh') == '12'\nassert solution('abrahelehleh') == '12'\nassert solution('abrahelehleh') == '12'\nassert solution('abrahelehleh') == '12'\n"
    },
    {
        "number": 3351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '70'\nassert solution('''\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1\n"
    },
    {
        "number": 3352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '8'\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '8'\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9\n0 1\n0 4\n1 4\n0 1\n0 4\n''') == '7'\n"
    },
    {
        "number": 3353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 7') == '6'\nassert solution('-2 0') == '2'\nassert solution('0 -1') == '2'\nassert solution('-2 1') == '1'\nassert solution('1 0') == '1'\n"
    },
    {
        "number": 3354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 4 40') == '3'\nassert solution('3 1 4 40.1') == '3'\nassert solution('3 1 4 40.01') == '3'\nassert solution('3 1 4 40.001') == '3'\nassert solution('3 1 4 40.0001') == '3'\n"
    },
    {
        "number": 3355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\nassert solution('''\n3 352\n93 82 444\n92 76 436\n99 62 -1\n0 70 66 71 97\n76 0 87 66 74\n62 90 0 60 94\n60 68 68 0 69\n83 78 83 73 0\n''') == '99'\n"
    },
    {
        "number": 3356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2 3\\n4 2\\n'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '2 3\\n4 5\\n'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '2 3\\n4 5\\n'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '2 3\\n4 5\\n'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n') == '2 3\\n4 5\\n'\n"
    },
    {
        "number": 3357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '9.0000'\nassert solution('2') == '12.00000'\nassert solution('3') == '12.00000'\nassert solution('4') == '9.0'\n"
    },
    {
        "number": 3358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'DI Y'\nassert solution('1') == 'DI Y'\nassert solution('0') == 'DI Y'\nassert solution('255') == 'DI Y'\nassert solution('256') == 'DI Y'\n"
    },
    {
        "number": 3359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 6') == '2'\nassert solution('1 5 6') == '2'\nassert solution('1 5 6') == '2'\nassert solution('1 5 6') == '2'\nassert solution('1 5 6') == '2'\n"
    },
    {
        "number": 3360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\nassert solution('5\\nS -> aSa\\nS -> bSb\\nS -> a\\nS -> b\\nS -> \\nwhere are the abaaba palindromes on this line\\nnone on this line\\nhow about this aaaaaaabbbbbbbbbbbbbbba\\neven a single a or b is a palindrome\\n') == 'abaaba'\n"
    },
    {
        "number": 3361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '0'\nassert solution('3') == '1'\nassert solution('2') == '1'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'GO FOR IT'\nassert solution('4 4') == 'GO FOR IT'\nassert solution('4 4') == 'NO WAY'\nassert solution('4 4') == 'NO WAY'\nassert solution('4 4') == 'NO WAY'\n"
    },
    {
        "number": 3363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 900\n800 700 400 300 200\n''') == '2243'\nassert solution('''\n5 100\n800 700 400 300 200\n''') == '1900'\nassert solution('''\n5 200\n800 700 400 300 200\n''') == '1900'\nassert solution('''\n5 300\n800 700 400 300 200\n''') == '1900'\nassert solution('''\n5 400\n800 700 400 300 200\n''') == '1900'\n"
    },
    {
        "number": 3364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 4\\n? 1 3\\n= 1 8\\n= 3 8\\n? 1 3\\n') == 'yes\\nno\\n'\n"
    },
    {
        "number": 3365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n10 5 4 8 3\n''') == '2'\nassert solution('''\n5 3\n10 5 4 8 3\n''') == '2'\nassert solution('''\n5 3\n10 5 4 8 3\n''') == '2'\nassert solution('''\n5 3\n10 5 4 8 3\n''') == '2'\nassert solution('''\n5 3\n10 5 4 8 3\n''') == '2'\n"
    },
    {
        "number": 3366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 127') == '1083'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 4') == '1'\n"
    },
    {
        "number": 3367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\nHow much is 6 times 9? 42\nHow much is 9 times 6? 42\nIs there intelligent life on Earth? Probably\nWhat is the air speed velocity of an unladen swallow? African?''') == '2.0000000000'\n"
    },
    {
        "number": 3368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == 'POSSIBLE'\nassert solution('''\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == 'FALSE ALARM'\nassert solution('''\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == 'FALSE ALARM'\nassert solution('''\n3 6\nmonkey 2 lion penguin\nlion 3 monkey penguin lion\npenguin 1 monkey\n''') == 'FALSE ALARM'\n"
    },
    {
        "number": 3369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100') == 'triple correlation 4(1)4(3)3 found'\nassert solution('4 6 3 3 2 7 1 8 7 8 7 6 1 1 7 2 5 4 7 2') == 'triple correlation 4(1)4(3)3 found'\nassert solution('0 4 4 5 8 3 0 6 9 3 2 6 6 8 5 2 5 1 2 7') == 'triple correlation 4(1)4(3)3 found'\nassert solution('2 4 1 0 0 4 9 1 8 7 5 0 4 4 8 4 3 2 6 8') == 'triple correlation 4(1)4(3)3 found'\nassert solution('8 5 6 7 0 9 7 0 3 6 1 4 4 1 2 3 2 6 9 9') == 'triple correlation 4(1)4(3)3 found'\n"
    },
    {
        "number": 3370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '40.5'\nassert solution('3 2') == '40.5'\nassert solution('3 3') == '40.5'\nassert solution('3 4') == '40.5'\nassert solution('3 5') == '40.5'\n"
    },
    {
        "number": 3371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 6') == 'Impossible'\nassert solution('5 5') == '2008'\nassert solution('10 10') == '2008'\nassert solution('20 20') == '2008'\nassert solution('30 30') == '2008'\n"
    },
    {
        "number": 3372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == '3'\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == '4'\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == '4'\nassert solution('''\n4 0 1\nN 1 2\nC 1 2\nN 1 3\nC 1 1\n''') == 'impossible'\n"
    },
    {
        "number": 3373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n()\n((()\n)()\n''') == 10\nassert solution('''\n3\n(()\n)()\n''') == 4\nassert solution('''\n3\n()\n()\n''') == 4\nassert solution('''\n3\n(()\n)()\n''') == 4\nassert solution('''\n3\n()\n()\n''') == 4\n"
    },
    {
        "number": 3374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9\\n377 a\\n455 h\\n180 a\\n211 a\\n134 a\\n46 h\\n111 h\\n213 h\\n17 a\\n15\\n1 2\\n1 4\\n1 6\\n2 3\\n2 4\\n2 5\\n3 5\\n4 6\\n4 7\\n4 9\\n5 7\\n5 8\\n6 9\\n7 9\\n7 8\\n') == '85293'\n"
    },
    {
        "number": 3375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4') == '5'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4') == '5'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4 5') == '5'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4 5\\n5 6') == '5'\nassert solution('4 5\\n1 2\\n1 3\\n2 3\\n1 4\\n2 4\\n3 4\\n4 5\\n5 6\\n6 7') == '5'\n"
    },
    {
        "number": 3376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''\n2\n2 caterpillar 2 pupa 7 butterfly\n2 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''\n1\n1 caterpillar 1 pupa 7 butterfly\n1 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''\n2\n2 caterpillar 2 pupa 7 butterfly\n2 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\nassert solution('''\n3\n3 caterpillar 3 pupa 7 butterfly\n3 dove 3 pigeon 7 aaabaaajss\n3 mouse 1 electromouse 5 rat\n7\n0 electromouse\n500 electromouse\n1000 electromouse\n1500 rat\n2000 aaabaaajss\n2500 pigeon\n3000 butterfly\n''') == '5100'\n"
    },
    {
        "number": 3377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\nassert solution('5\\n0\\n1 1\\n1 1\\n2 2 3\\n1 4\\n8\\n1\\n2\\n3\\n1\\n4\\n2\\n3\\n5\\n') == '6\\n1\\n2\\n3\\n1\\n4\\n5\\n'\n"
    },
    {
        "number": 3378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n1 2 R 6\n''') == '10'\nassert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n1 2 R 6\n''') == '10'\nassert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n1 2 R 6\n''') == '10'\nassert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n1 2 R 6\n''') == '10'\nassert solution('''\n2 5\n1 2 1 2 1\n4\n1 2 O 3\n1 2 R 5\n2 1 O 3\n1 2 R 6\n''') == '10'\n"
    },
    {
        "number": 3379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n1 3') == '1'\nassert solution('1 2\\n2 3') == '2'\nassert solution('1 2\\n3 2') == '1'\nassert solution('1 2\\n3 2') == '1'\nassert solution('1 2\\n3 2') == '1'\n"
    },
    {
        "number": 3380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0.962962962963'\nassert solution('5') == '0.9642857142857'\nassert solution('6') == '0.9642857142857'\nassert solution('7') == '0.9642857142857'\nassert solution('8') == '0.9642857142857'\n"
    },
    {
        "number": 3381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0 0\\n40000000 0\\n0 40000000'\nassert solution('10') == '0 0\\n40000000 0\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0 40000000\\n0"
    },
    {
        "number": 3382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 5 2') == '1'\nassert solution('1 2 3 4') == 'impossible'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5 6') == 'impossible'\nassert solution('1 2 3 4 5 6 7') == '3'\n"
    },
    {
        "number": 3383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 3 5 5') == '2'\nassert solution('20 3 5 5') == '2'\nassert solution('20 3 5 5') == '2'\nassert solution('20 3 5 5') == '2'\nassert solution('20 3 5 5') == '2'\n"
    },
    {
        "number": 3384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13') == '12 14'\nassert solution('123') == '12 14'\nassert solution('1234') == '12 14'\nassert solution('12345') == '12 14'\nassert solution('123456') == '12 14'\n"
    },
    {
        "number": 3385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '0'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '1'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '2'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '3'\nassert solution('5\\n1 0 0\\n1 0 1\\n3 0 1\\n3 0 0\\n3 0 1\\n') == '4'\n"
    },
    {
        "number": 3386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"1 1\\n2 2\\n1 3\\n2 1\\n1 2\\n2 3\"\n"
    },
    {
        "number": 3387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10') == '3.33333333'\nassert solution('3 10') == '3.33333333'\nassert solution('3 10') == '3.33333333'\n"
    },
    {
        "number": 3388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 3 2') == '1'\nassert solution('4\\n3 3 2 1') == '2'\nassert solution('5\\n3 3 2 1 2') == '3'\nassert solution('6\\n3 3 2 1 2 1') == '4'\nassert solution('7\\n3 3 2 1 2 1 1') == '5'\n"
    },
    {
        "number": 3389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\nabba\n''') == '2'\nassert solution('''\n4 2\naab\n''') == '1'\nassert solution('''\n4 2\naab\n''') == '1'\nassert solution('''\n4 2\naab\n''') == '1'\nassert solution('''\n4 2\naab\n''') == '1'\n"
    },
    {
        "number": 3390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3\\n2 4') == '3'\nassert solution('4 3\\n1 2\\n2 3\\n2 4') == '4'\nassert solution('5 3\\n1 2\\n2 3\\n2 4\\n3 4') == '5'\nassert solution('6 3\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5') == '6'\nassert solution('7 3\\n1 2\\n2 3\\n2 4\\n3 4\\n4 5\\n5 6') == '7'\n"
    },
    {
        "number": 3391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('1 0') == '0'\nassert solution('0 1') == '1'\nassert solution('1000 1') == '1'\nassert solution('1 3') == '0'\n"
    },
    {
        "number": 3392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3\n3 2 2\n5 2 1\n3 2 1\n1 2 1\n1 2 3\n''') == '7'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n\nassert solution('''\n1\n1\n1\n''') == '1'"
    },
    {
        "number": 3393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '20'\nassert solution('5 2') == '20'\nassert solution('5 2') == '20'\nassert solution('5 2') == '20'\nassert solution('5 2') == '20'\n"
    },
    {
        "number": 3394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '6'\nassert solution('1 2 2') == '0'\nassert solution('2 3 4') == '0'\nassert solution('3 4 1') == '0'\nassert solution('3') == '0'\n"
    },
    {
        "number": 3395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n') == '2'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n') == 'impossible'\nassert solution('3 1 1\\n2\\n3\\n1 2\\n2 3 1\\n1 1\\n') == 'impossible'\n"
    },
    {
        "number": 3396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n250 250\n250 750\n''') == '500.00'\nassert solution('''\n3\n250 250\n250 750\n250 750\n''') == '500.00'\nassert solution('''\n4\n250 250\n250 750\n250 750\n250 750\n''') == '500.00'\nassert solution('''\n5\n250 250\n250 750\n250 750\n250 750\n250 750\n''') == '500.00'\nassert solution('''\n6\n250 250\n250 750\n250 750\n250 750\n250 750\n250 750\n''') == '500.00'\n"
    },
    {
        "number": 3397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0'\nassert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('2 3') == '1'\nassert solution('2 4') == '1'\n"
    },
    {
        "number": 3398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '2'\nassert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '1'\nassert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '0'\nassert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '0'\nassert solution('''80 50 3 2\n75 5 25 20 50 35\n50 5 25 35''') == '0'\n"
    },
    {
        "number": 3399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n2211\n1112\n1112\n''') == 'AAAA'\nassert solution('''\n3 4\n2211\n1112\n1112\n''') == 'BBBB'\nassert solution('''\n3 4\n2211\n1112\n1112\n''') == '....'\nassert solution('''\n3 4\n2211\n1112\n1112\n''') == 'CCCC'\nassert solution('''\n3 4\n2211\n1112\n1112\n''') == 'impossible'\n"
    },
    {
        "number": 3400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 3 3') == '9'\nassert solution('3 4 1 2 3 2') == '7'\nassert solution('4 3 1 2 1') == '4'\n"
    },
    {
        "number": 3401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 2 8') == '20.396078'\nassert solution('0 0 6') == '20.396078'\nassert solution('3 4 7') == 'IMPOSSIBLE'\nassert solution('0 8 8') == '20.396078'\nassert solution('6 8 8') == '20.396078'\n"
    },
    {
        "number": 3402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abca') == 'b'\nassert solution('bc cd da dd ee ff gg hh ii jj kk ll mm') == 'c'\nassert solution('nn oo pp qq rr ss tt uu vv ww xx yy zz') == 'd'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'z'\nassert solution('abcdefghijklmnopqrstuvwxyz') == 'z'\n"
    },
    {
        "number": 3403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija''') == '12'\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija''') == '10'\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija''') == '16'\nassert solution('''5\nhobotnica\nrobot\nhobi\nhobit\nrobi\n4\nrobi\nhobi\nhobit\nrakija''') == '7'\n"
    },
    {
        "number": 3404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('14 4\\nJQ IRKEYFG EXQ') == 'THIS IS A TEST'\nassert solution('1 2\\nA B') == 'A B'\nassert solution('1 2\\nA B') == 'A B'\nassert solution('1 2\\nA B') == 'A B'\nassert solution('1 2\\nA B') == 'A B'\n"
    },
    {
        "number": 3405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2.6') == '135'\nassert solution('1.6') == '135'\nassert solution('1.6') == '135'\nassert solution('1.6') == '135'\nassert solution('1.6') == '135'\n"
    },
    {
        "number": 3406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '4'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\nassert solution('''\n4\n0 1\n3 7\n4 5\n6 5\n9\n1 4\n1 6\n2 3\n2 5\n3 5\n3 6\n4 8\n5 4\n6 3\n''') == '0'\n"
    },
    {
        "number": 3407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\nassert solution('5\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0.0000000 0.0000000\\n1.0000000 0.0000000\\n-1.0000000 0.0000000\\n0.0000000 1.0000000\\n0.0000000 -1.0000000'\n"
    },
    {
        "number": 3408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\naaa\nabc\naba\na*a\naaa*\n*aaa\n''') == '2\\n1\\n1\\n'\n"
    },
    {
        "number": 3409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\nassert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '0'\nassert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\nassert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '0'\nassert solution('''\n4 2\nXO\nOX\nXO\nOX\nOX\nOO\nXO\nOO\n''') == '1'\n"
    },
    {
        "number": 3410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('3 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('4 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('5 0\\n0 2\\n-2 0\\n0 -2') == '16'\nassert solution('6 0\\n0 2\\n-2 0\\n0 -2') == '16'\n"
    },
    {
        "number": 3411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 10 50\\n8 8 2 -2') == '80'\nassert solution('4 10 50\\n8 8 2 -2\\n
    },
    {
        "number": 3412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 8') == '3.000000000'\nassert solution('0 0 10 10') == '3.000000000'\nassert solution('5 1') == '3.000000000'\nassert solution('5 9') == '3.000000000'\nassert solution('3') == '3.000000000'\n"
    },
    {
        "number": 3413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '1'\nassert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '2'\nassert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '3'\nassert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '4'\nassert solution('''\n4 3\n0 1 0 0\n1 2\n2 3\n2 4\n''') == '5'\n"
    },
    {
        "number": 3414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '6.283185'\nassert solution('3 3') == '6.283185'\nassert solution('3 3') == '6.283185'\nassert solution('3 3') == '6.283185'\nassert solution('3 3') == '6.283185'\n"
    },
    {
        "number": 3415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 3 4 5 6'\n"
    },
    {
        "number": 3416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\nassert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\nassert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\nassert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\nassert solution('''\n4 4\n1 2\n1 3\n2 4\n3 4\n''') == '1 2 3 4'\n"
    },
    {
        "number": 3417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 2') == '1'\nassert solution('2 2\\n1 2\\n1 2') == '2'\nassert solution('2 3\\n1 2\\n1 2\\n1 2') == '1'\nassert solution('2 4\\n1 2\\n1 2\\n1 2\\n1 2') == '2'\nassert solution('2 5\\n1 2\\n1 2\\n1 2\\n1 2') == '1'\n"
    },
    {
        "number": 3418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '45'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\n"
    },
    {
        "number": 3419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\nassert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\nassert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\nassert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\nassert solution('''\n5 20 20\n7 11 9 12 2\n''') == '4'\n"
    },
    {
        "number": 3420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\n"
    },
    {
        "number": 3421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n01\n''') == '2 1'\nassert solution('''\n1\n10\n''') == '2 1'\nassert solution('''\n1\n11\n''') == '2 1'\nassert solution('''\n1\n00\n''') == '2 1'\nassert solution('''\n1\n01\n''') == '2 1'\n"
    },
    {
        "number": 3422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1\n2123\n2 2\n21\n10\n2 2\n23\n12\nSample Output:\n4 3\n2123\n1012\n2123\n----\n2233\n2233\n1111\n"
    },
    {
        "number": 3423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n14\nlibattr\nvim-X11 vim-common gtk2 libattr\nvim-common\ngtk2 libtiff atk pango glib2\nlibtiff zlib libjpeg\natk\npango xorg-x11-libs freetype glib2\nglib2\nzlib\nlibjpeg\nxorg-x11-libs grep freetype\ngrep pcre\npcre\nfreetype\n3\nemacs xorg-x11 lisp\nxorg-x11\nlisp emacs\n0\n''') == 'atk\\nfreetype\\nglib2\\nlibattr\\nlibjpeg\\npcre\\ngrep\\nvim-common\\nxorg-x11-libs\\npango\\nzlib\\ngtk2\\nvim-X11\\n'''\n"
    },
    {
        "number": 3424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('32 20') == '16'\nassert solution('32 20') == '16'\nassert solution('32 20') == '16'\nassert solution('32 20') == '16'\nassert solution('32 20') == '16'\n"
    },
    {
        "number": 3425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n.##\\n.##\\n') == '5 13'\nassert solution('3 4\\n.##\\n.##\\n') == '5 13'\nassert solution('3 4\\n.##\\n.##\\n') == '5 13'\nassert solution('3 4\\n.##\\n.##\\n') == '5 13'\nassert solution('3 4\\n.##\\n.##\\n') == '5 13'\n"
    },
    {
        "number": 3426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\nassert solution('''\n3 3\n1 2 5 1\n2 3 3 1\n3 1? 0\n''') == '5'\n"
    },
    {
        "number": 3427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '2'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '4'\n"
    },
    {
        "number": 3428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1 3 2') == '2.000000'\nassert solution('2 5 1') == '2.000000'\nassert solution('1 1 1 3 2') == '1.000000'\nassert solution('1 1 1 3 2') == '1.000000'\nassert solution('1 1 1 3 2') == '1.000000'\n"
    },
    {
        "number": 3430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\nassert solution('''\n3\n1 2\n2 3\n4\n1 2\n1 3\n1 4\n''') == '96'\n"
    },
    {
        "number": 3431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '3'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2') == '4'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n1 3') == '5'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4') == '6'\nassert solution('5\\n0 0\\n0 1\\n1 0\\n1 1\\n1 2\\n1 3\\n1 4\\n1 5') == '7'\n"
    },
    {
        "number": 3432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 8') == '10'\nassert solution('3 1') == '9'\nassert solution('1 4') == '10'\n"
    },
    {
        "number": 3433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"IMPOSSIBLE\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"3\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"2\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"1\"\nassert solution(\"4 4\\n####\\n#JF#\\n#..#\\n#..#\") == \"0\"\n"
    },
    {
        "number": 3434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 2') == '0.3333333333'\nassert solution('1 2 3') == '0.3333333333'\nassert solution('1 2 3 4') == '0.3333333333'\nassert solution('1 2 3 4 5') == '0.3333333333'\nassert solution('1 2 3 4 5 6') == '0.3333333333'\n"
    },
    {
        "number": 3435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '11'\nassert solution('101') == '101'\nassert solution('1111') == '1111'\nassert solution('10101') == '10101'\n"
    },
    {
        "number": 3436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '1'\nassert solution('2 2') == '6'\nassert solution('1 1') == '1'\nassert solution('2 2') == '6'\n"
    },
    {
        "number": 3437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == '2930'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == 'Impossible'\nassert solution('1000 2000 7\\n100\\n480\\n500\\n550\\n1000\\n1400\\n1500') == 'Impossible'\n"
    },
    {
        "number": 3438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '2'\nassert solution('0') == '0'\nassert solution('0 0') == '0'\nassert solution('0 0 0') == '0'\nassert solution('0 0 0 0') == '0'\n"
    },
    {
        "number": 3439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\nassert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\nassert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\nassert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\nassert solution('''\n3 3\n-5 2 -5\n-1 -2 -1\n5 4 -5\n2 2\n''') == '10'\n"
    },
    {
        "number": 3440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '0'\nassert solution('2 2') == '1'\nassert solution('2 3') == '2'\nassert solution('2 4') == '3'\nassert solution('2 5') == '4'\n"
    },
    {
        "number": 3442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == '10'\nassert solution('1 2') == '0'\nassert solution('1 3') == '1'\nassert solution('1 4') == '1'\nassert solution('1 5') == '1'\n"
    },
    {
        "number": 3443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '0'\nassert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '1'\nassert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '2'\nassert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '3'\nassert solution('4\\n0 0\\n1000 0\\n0 1000\\n1000 1000') == '4'\n"
    },
    {
        "number": 3444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 1 0.5\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5') == '0.500000000 1.000000000'\nassert solution('2 1\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5\\n0 1 0.5') == '0.500000000 1.000000000'\n"
    },
    {
        "number": 3445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\nassert solution('''\n6\n1 1\n4 1\n1 5\n10 10\n10 8\n7 10\n''') == '7'\n"
    },
    {
        "number": 3446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '9-b'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '8-a'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '6-a'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '5-b'\nassert solution('''\na b\n3-b 5-b\n6-a 2-b\n2\naba\nbba\n''') == '4-b'\n"
    },
    {
        "number": 3447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n34\\n35\\n36\\n37\\n38\\n39\\n40\\n41\\n42\\n43\\n44\\n45\\n46\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401"
    },
    {
        "number": 3448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'YES'\nassert solution('3 2') == 'NO'\nassert solution('3 3') == 'YES'\nassert solution('3 4') == 'NO'\nassert solution('3 5') == 'NO'\n"
    },
    {
        "number": 3449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '176'\nassert solution('1') == '0'\nassert solution('6 6') == '0'\nassert solution('333333') == '0'\nassert solution('300003') == '0'\n"
    },
    {
        "number": 3450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '12'\nassert solution('123') == '123'\nassert solution('1234') == '123'\nassert solution('12345') == '123'\nassert solution('123456') == '123'\n"
    },
    {
        "number": 3451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '?', \"Should be '?'\"\nassert solution('4 1') == '?', \"Should be '?'\"\nassert solution('4 1') == '?', \"Should be '?'\"\nassert solution('4 1') == '?', \"Should be '?'\"\nassert solution('4 1') == '?', \"Should be '?'\"\n"
    },
    {
        "number": 3452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13\\n2 2 4\\n3 1 3 5\\n2 2 4\\n3 1 3 6\\n2 2 6\\n2 4 5\\n2 8 9\\n2 7 9\\n2 7 8\\n2 11 13\\n2 10 12\\n2 11 13\\n2 10 12\\n') == '2 4\\n5 6\\n7 8 9 10 11 12 13\\n'\n"
    },
    {
        "number": 3453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'\nassert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'\nassert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'\nassert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'\nassert solution('''\n5 5\n1 2 3\n1 4 8\n2 3 12\n3 5 4\n4 5 2\n''') == '35 39 36 27 29'\n"
    },
    {
        "number": 3454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '0 672'\nassert solution('3 3') == '0 672'\nassert solution('3 2') == '0 672'\nassert solution('2 2') == '0 0'\nassert solution('2 1') == '0 0'\n"
    },
    {
        "number": 3455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50') == '2.500000'\nassert solution('4 5 100\\n0 10 10\\n1 10 5\\n1 20 35\\n2 2 18\\n2 40 50\\n3 3 3') == 'Impossible'\n"
    },
    {
        "number": 3456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5 3 4') == '3'\nassert solution('4\\n2 2 2 2') == '4'\nassert solution('5\\n1 2 3 4 5') == '5'\nassert solution('6\\n1 2 3 4 5 6') == '6'\nassert solution('7\\n1 2 3 4 5 6 7') == '7'\n"
    },
    {
        "number": 3457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1') == '2'\nassert solution('2 2 2') == '1'\nassert solution('2 3 2') == '0'\nassert solution('2 4 2') == '0'\nassert solution('2 5 2') == '0'\n"
    },
    {
        "number": 3458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 5') == '7'\nassert solution('2 3 4') == '5'\nassert solution('3 4 5') == '5'\nassert solution('4 5 6') == '6'\nassert solution('5 6 7') == '7'\n"
    },
    {
        "number": 3459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\nfred jetsons\njohn jets\nruth rockets\n'''\nassert solution('''\n2\n4\nfred dinosaur 2 jets jetsons\njohn rhinocerous 2 jets rockets\nmary rhinocerous 2 jetsons rockets\nruth platypus 1 rockets\n''') == '''\nfred jetsons\njohn jets\nruth rockets\n'''\n"
    },
    {
        "number": 3460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 3\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n2\n1\n''') == '1'\nassert solution('''\n3\n1 2\n-10 9\n-2 3\n''') == '1 2 1'\nassert solution('''\n3\n1 2\n-10 9\n-2 3\n''') == '1 2 1'\n"
    },
    {
        "number": 3461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\nassert solution('''\n4\n1 1 7\n3 2 3\n5 1 4\n6 10 10\n''') == '2.125'\n"
    },
    {
        "number": 3462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"*.*\") == [\"main.c\", \"a.out\", \"readme\"]\nassert solution(\"*.c\") == [\"main.c\"]\nassert solution(\"*.c*\") == [\"main.c\", \"a.out\", \"readme\"]\nassert solution(\"*.c*\") == [\"main.c\", \"a.out\", \"readme\"]\nassert solution(\"*.c*\") == [\"main.c\", \"a.out\", \"readme\"]\n"
    },
    {
        "number": 3463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.500000\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.500000\\n0.500000\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000'\nassert solution('1 1\\n0.500000\\n0.500000\\n0.500000\\n0.500000\\n0.500000') == '0.500000'\n"
    },
    {
        "number": 3464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 49.9') == '0.0'\nassert solution('0.1 49.9') == '0.0'\nassert solution('0.01 49.9') == '0.0'\nassert solution('0.001 49.9') == '0.0'\nassert solution('0.0001 49.9') == '0.0'\n"
    },
    {
        "number": 3465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n2 3\\n3 1\\n4 1') == '4 1\\n2 1\\n3 2\\n1 3'\nassert solution('1 2\\n2 3\\n3 1\\n4 1\\n5 2\\n5 3\\n5 1\\n6 2\\n6 3\\n6 1\\n7 2\\n7 3\\n7 1\\n8 2\\n8 3\\n8 1\\n9 2\\n9 3\\n9 1\\n10 2\\n10 3\\n10 1\\n11 2\\n11 3\\n11 1\\n12 2\\n12 3\\n12 1\\n13 2\\n13 3\\n13 1\\n14 2\\n14 3\\n14 1\\n15 2\\n15 3\\n15 1\\n16 2\\n16 3\\n16 1\\n17 2\\n17 3\\n17 1\\n18 2\\n18 3\\n18 1\\n19 2\\n19 3\\n19 1\\n20 2\\n20 3\\n20 1\\n21 2\\n21 3\\n21 1\\n22 2\\n22 3\\n22 1\\n23 2\\n23 3\\n23 1\\n24 2\\n24 3\\n24 1\\n25 2\\n25 3\\n25 1\\n26 2\\n26 3\\n26 1\\n27 2\\n27 3\\n27 1\\n28 2\\n28 3\\n28 1\\n29 2\\n29 3\\n29 1\\n30 2\\n30 3\\n30 1\\n31 2\\n31 3\\n31 1\\n32 2\\n32 3\\n32 1\\n33 2\\n33 3\\n33 1\\n34 2\\n34 3\\n34 1\\n35 2\\n35 3\\n35 1\\n36 2\\n36 3\\n36 1\\n37 2\\n37 3\\n37 1\\n38 2\\n38 3\\n38 1\\n39 2\\n39 3\\n39 1\\n40 2\\n40 3\\n40 1\\n41 2\\n41 3\\n41 1\\n42 2\\n42 3\\n42 1\\n43 2\\n43 3\\n43 1\\n44 2\\n44 3\\n44 1\\n45 2\\n45 3\\n45 1\\n46 2\\n46 3\\n46 1\\n47 2\\n47 3\\n47 1\\n48 2\\n48 3\\n48 1\\n49 2\\n49 3\\n49 1\\n50 2\\n50 3\\n50 1\\n51 2\\n51 3\\n51 1\\n52 2\\n52 3\\n52 1\\n53 2\\n53 3\\n53 1\\n54 2\\n54 3\\n54 1\\n55 2\\n55 3\\n55 1\\n56 2\\n56 3\\n56 1\\n57 2\\n57 3\\n57 1\\n58 2\\n58 3\\n58 1\\n59 2\\n59 3\\n59 1\\n60 2\\n60 3\\n60 1\\n61 2\\n61 3\\n61 1\\n62 2\\n62 3\\n62 1\\n63 2\\n63 3\\n63 1\\n64 2\\n64 3\\n64 1\\n65 2\\n65 3\\n65 1\\n66 2\\n66 3\\n66 1\\n67 2\\n67 3\\n67 1\\n68 2\\n68 3\\n68 1\\n69 2\\n69 3\\n69 1\\n70 2\\n70 3\\n70 1\\n71 2\\n71 3\\n71 1\\n72 2\\n72 3\\n72 1\\n73 2\\n73 3\\n73 1\\n74 2\\n74 3\\n74 1\\n75 2\\n75 3\\n75 1\\n76 2\\n76 3\\n76 1\\n77 2\\n77 3\\n77 1\\n78 2\\n78 3\\n78 1\\n79 2\\n79 3\\n79 1\\n80 2\\n80 3\\n80 1\\n81 2\\n81 3\\n81 1\\n82 2\\n82 3\\n82 1\\n83 2\\n83 3\\n83 1\\n84 2\\n84 3\\n84 1\\n85 2\\n85 3\\n85 1\\n86 2\\n86 3\\n86 1\\n87 2\\n87 3\\n87 1\\n88 2\\n88 3\\n88 1\\n89 2\\n89 3\\n89 1\\n90 2\\n90 3\\n90 1\\n91 2\\n91 3\\n91 1\\n92 2\\n92 3\\n92 1\\n93 2\\n93 3\\n93 1\\n94 2\\n94 3\\n94 1\\n95 2\\n95 3\\n95 1\\n96 2\\n96 3\\n96 1\\n97 2\\n97 3\\n97 1\\n98 2\\n98 3\\n98 1\\n99 2\\n99 3\\n99 1\\n100 2\\n100 3\\n100 1\\n101 2\\n101 3\\n101 1\\n102 2\\n102 3\\n102 1\\n103 2\\n103 3\\n103 1\\n104 2\\n104 3\\n104 1\\n105 2\\n105 3\\n105 1\\n106 2\\n106 3\\n106 1\\n107 2\\n107 3\\n107 1\\n108 2\\n108 3\\n108 1\\n109 2\\n109 3\\n109 1\\n110 2\\n110 3\\n110 1\\n111 2\\n111 3\\n111 1\\n112 2\\n112 3\\n112 1\\n113 2\\n113 3\\n113 1\\n114 2\\n114 3\\n114 1\\n115 2\\n115 3\\n115 1\\n116 2\\n116 3\\n116 1\\n117 2\\n117 3\\n117 1\\n118 2\\n118 3\\n118 1\\n119 2\\n119 3\\n119 1\\n120 2\\n120 3\\n120 1\\n121 2\\n121 3\\n121 1\\n122 2\\n122 3\\n122 1\\n123 2\\n123 3\\n123 1\\n124 2\\n124 3\\n124 1\\n125 2\\n125 3\\n125 1\\n126 2\\n126 3\\n126 1\\n127 2\\n127 3\\n127 1\\n128 2\\n128 3\\n128 1\\n129 2\\n129 3\\n129 1\\n130 2\\n130 3\\n130 1\\n131 2\\n131 3\\n131 1\\n132 2\\n132 3\\n132 1\\n133 2\\n133 3\\n133 1\\n134 2\\n134 3\\n134 1\\n135 2\\n135 3\\n135 1\\n136 2\\n136 3\\n136 1\\n137 2\\n137 3\\n137 1\\n138 2\\n138"
    },
    {
        "number": 3466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5') == '1'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 2 5 3 5') == '2'\nassert solution('6 5\\n2 1 6 3 5 3\\n1 2 5 3 5\\n1 2 5 3 5\\n1 2 5 3 5') == 'forever'\n"
    },
    {
        "number": 3467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 10\\n0 1 1 2 6') == '3'\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 1 2 6') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 1 2 6\\n0 1 1 2 6') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 1 2 6\\n0 1 1 2 6\\n0 1 1 2 6') == 'impossible'\nassert solution('2 1 10\\n0 1 1 2 6\\n0 1 1 2 6\\n0 1 1 2 6\\n0 1 1 2 6\\n0 1 1 2 6') == 'impossible'\n"
    },
    {
        "number": 3468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 100\n99 1\n1 99\n''') == '2 1 2'\nassert solution('''\n2 100\n99 1\n1 99\n''') == '2 1 2'\nassert solution('''\n2 100\n99 1\n1 99\n''') == '2 1 2'\nassert solution('''\n2 100\n99 1\n1 99\n''') == '2 1 2'\nassert solution('''\n2 100\n99 1\n1 99\n''') == '2 1 2'\n"
    },
    {
        "number": 3469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'\nassert solution('H\\nT\\n0.5') == '0.5'\n"
    },
    {
        "number": 3470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '8'\nassert solution('6') == '1 3 5 7 9 11 13 15'\n"
    },
    {
        "number": 3471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\n'\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\n'\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\n'\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\n'\nassert solution('4\\n1 3 5 7\\n3\\n2 2\\n2 5\\n1 5\\n') == '3\\n1\\n0\\n'\n"
    },
    {
        "number": 3472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n1 1 -2 0') == '0'\nassert solution('2 1\\n1 1 -2 0\\n1 1 -2 0') == '1'\nassert solution('2 1\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0') == '2'\nassert solution('2 1\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0') == '3'\nassert solution('2 1\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0\\n1 1 -2 0') == '4'\n"
    },
    {
        "number": 3473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '194'\nassert solution('1') == '194'\nassert solution('0') == '194'\nassert solution('3') == '194'\nassert solution('4') == '194'\n"
    },
    {
        "number": 3474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 10 10 10 0') == 'negative-infinity 0'\nassert solution('5 10 10 5 10 0') == '5 12.5'\nassert solution('6 10 10 10 10 0') == 'negative-infinity -5'\n"
    },
    {
        "number": 3475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n100 30000\n200 20000\n300 10000\n400 0\n50 10000\n75 20000\n400 -40000\n''') == '2'\n"
    },
    {
        "number": 3476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 -2 5 200\\n-8 0 -4 -10\\n11 4 0 100') == '345 2\\nrotS 2 1\\nnegR 2'\n"
    },
    {
        "number": 3477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '0.5'\nassert solution('3 2 1') == '0.5'\nassert solution('3 2 1 1') == '0.5'\nassert solution('3 2 1 1 1') == '0.5'\nassert solution('3 2 1 1 1 1') == '0.5'\n"
    },
    {
        "number": 3478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5 2 6 7 7 8 9 6 8 5 9'\nassert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5 2 6 7 7 8 9 6 8 5 9'\nassert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5 2 6 7 7 8 9 6 8 5 9'\nassert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5 2 6 7 7 8 9 6 8 5 9'\nassert solution('''\n9 11\n1 4\n5 4\n1 5\n6 2\n6 7\n7 2\n3 8\n3 9\n8 9\n6 8\n5 9\n''') == '1 4 5 2 6 7 7 8 9 6 8 5 9'\n"
    },
    {
        "number": 3479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n11 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\nassert solution('''\n10 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\nassert solution('''\n10 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\nassert solution('''\n10 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\nassert solution('''\n10 2\n12000\n9000\n4500\n10000\n12000\n11000\n12000\n18000\n10000\n9000\n12000\n''') == '13500'\n"
    },
    {
        "number": 3480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 16\nHot cross buns! = Hot cross buns! =\n4 4 4 4 4 4 4 4\nOne a pen- ny, Two a pen- ny, Hot cross buns! =\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2"
    },
    {
        "number": 3481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\nassert solution('''\n3 2 1\n1 2 10\n1 4 6 6\n1 6 10 5\n2 10 30 33\n''') == '33'\n"
    },
    {
        "number": 3482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\nassert solution('''\n3\n20 15 10\n7 7\n30 0\n''') == '405'\n"
    },
    {
        "number": 3483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 4 7\n''') == '28 4 21 14.0'\nassert solution('''\n3\n1 2 3\n''') == '3 3 3'\nassert solution('''\n2\n1 2\n''') == '2 2'\nassert solution('''\n1\n1\n''') == '1 1'\nassert solution('''\n4\n1 2 4 7\n''') == '28 4 21 14.0'\n"
    },
    {
        "number": 3484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n1 2 3 4\n2 3 4 1\n''') == 'yes\\n1 2 3 4\\n2 3 4 1\\n3 4 1 2\\n4 1 2 3\\n'''\n"
    },
    {
        "number": 3485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '10.000000000'\nassert solution('10') == '10.000000000'\nassert solution('10 10 -10 -4 10') == '10.000000000'\nassert solution('10 10 -10 -4 10 10') == '10.000000000'\nassert solution('10 10 -10 -4 10 10 10') == '10.000000000'\n"
    },
    {
        "number": 3486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n30\\n3\\n2\\n45') == '1'\nassert solution('5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45') == '2'\nassert solution('10\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45') == '3'\nassert solution('100\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\n30\\n3\\n2\\n45\\n5\\"
    },
    {
        "number": 3487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.360000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 1.000000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 -1.000000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 0.360000000'\nassert solution('6 6 3.0 0.66\\n2 4 8\\n4 6 1\\n3 6 1\\n4 5 5\\n1 5 7\\n3 5 3\\n') == '0.000000000 0.000000000'\n"
    },
    {
        "number": 3488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '4'\nassert solution('0 0') == '0'\nassert solution('0 3') == '0'\nassert solution('3 3') == '0'\nassert solution('3 0') == '0'\n"
    },
    {
        "number": 3489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 0') == '2'\nassert solution('4 1') == '3 2'\nassert solution('4 2') == '3 1'\nassert solution('4 3') == '3 1'\nassert solution('4 4') == '3 1'\n"
    },
    {
        "number": 3490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n0 0 0\n0 1.5 0\n''') == 'ok'\nassert solution('''\n2\n0 0 0\n0 1.5 0\n''') == 'crash'\nassert solution('''\n3\n0 0 0\n0 1.5 0\n0 0 0\n''') == 'crash'\nassert solution('''\n4\n0 0 0\n0 1.5 0\n0 0 0\n''') == 'crash'\nassert solution('''\n5\n0 0 0\n0 1.5 0\n0 0 0\n''') == 'crash'\n"
    },
    {
        "number": 3491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n0 1\n0 3\n1 2\n2 4\n0 2\n0 4\n2 3\n2 4''') == '2'\n"
    },
    {
        "number": 3492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '2'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '3'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '4'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '5'\nassert solution('''\n7 3 3 3\nA B C\nD E F\n3 A E G\n3 A C E\n3 B D F\n''') == '5'\n"
    },
    {
        "number": 3493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"2 1 2\"\nassert solution(\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"3 1 2\"\nassert solution(\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"3 1 2\"\nassert solution(\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"3 1 2\"\nassert solution(\"\"\"\n3\nYYY\nNYY\nYNY\n\"\"\") == \"3 1 2\"\n"
    },
    {
        "number": 3494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '4'\nassert solution('3 3') == '0'\nassert solution('3 3') == '5'\n"
    },
    {
        "number": 3495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1.118 2.037'\nassert solution('5') == '4.114 -2.842'\nassert solution('3') == '1.118 2.037'\nassert solution('4') == '6.297 -0.784'\nassert solution('5') == '4.114 -2.842'\n"
    },
    {
        "number": 3496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"3\\n5\\n8\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"5\\n8\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"8\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"10\\n\"\nassert solution(\"4 5\\n2 3 5 7\\n2\\n3\\n5\\n6\\n8\\n\") == \"13\\n\"\n"
    },
    {
        "number": 3497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3') == '0'\nassert solution('6 4') == '1'\nassert solution('6 5') == '1'\nassert solution('6 6') == '2'\nassert solution('6 7') == '2'\n"
    },
    {
        "number": 3498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '106'\nassert solution('1 1 5 C1 L1 C1 U1 C1') == '107'\nassert solution('70 3 1 C1') == '71'\n"
    },
    {
        "number": 3499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AA') == '51'\nassert solution('AAB') == '51'\nassert solution('AAAB') == '51'\nassert solution('AAABB') == '51'\nassert solution('AAABBB') == '51'\n"
    },
    {
        "number": 3500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n1\n1 1\n1 1\n1 1\n1 1\n''') == '1'\nassert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\nassert solution('''\n2\n3 29 45 56 68\n1 19 43 50 72\n11 25 40 49 61\n9 23 31 58 63\n4 27 42 54 71\n''') == '1 2'\n"
    },
    {
        "number": 3501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\nassert solution('3\\n3 2 1\\n1 2 3\\n1 2 3') == '0'\n"
    },
    {
        "number": 3502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4') == '0.4\\n0'\nassert solution('5\\n1 2 3\\n6 2 3\\n10 2 3\\n16 3 4\\n20 3 5') == '0.2\\n0.171428571429'\n"
    },
    {
        "number": 3503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"3\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"2\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"impossible\"\nassert solution(\"1\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"1 + 5 = 6\\n3 * 3 = 9\\n4 - 5 = -1\\n-1 - -6 = 5\"\nassert solution(\"1\\n1 5\\n3 3\\n4 5\\n-1 -6\") == \"impossible\"\n"
    },
    {
        "number": 3504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '4'\nassert solution('1 8') == '1'\nassert solution('2 3') == '2'\nassert solution('2 8') == '0'\nassert solution('5 8') == '0'\n"
    },
    {
        "number": 3505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5 6') == '2'\nassert solution('1 2 3 4 5 6 7') == '1'\nassert solution('1 2 3 4 5 6 7 8') == '0'\n"
    },
    {
        "number": 3506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 31 2\\n20 60\\n50 90') == '4 3'\nassert solution('1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n"
    },
    {
        "number": 3507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 1') == '3'\nassert solution('2 2 2') == '6'\nassert solution('2 2 3') == '0'\nassert solution('2 2 4') == '0'\nassert solution('2 2 5') == '0'\n"
    },
    {
        "number": 3508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1341 2412 1200 3112 2391') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391\\n') == '3 1'\nassert solution('5\\n1341 2412 1200 3112 2391\\n1') == '2 1'\nassert solution('5\\n1341 2412 1200 3112 2391\\n1\\n') == '2 1'\nassert solution('5\\n1341 2412 1200 3112 2391\\n1\\n2') == '2 1'\n"
    },
    {
        "number": 3509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 20') == '6'\nassert solution('3 5') == '10'\nassert solution('1 3 7') == '7'\nassert solution('2 1 1') == '1'\nassert solution('2 3 2') == '3'\n"
    },
    {
        "number": 3510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 ab b\\n1 b') == '0 1'\nassert solution('2 ab b\\n1 b\\n1 c') == '0 1'\nassert solution('2 ab b\\n1 b\\n1 c\\n1 d') == '0 1'\nassert solution('2 ab b\\n1 b\\n1 c\\n1 d\\n1 e') == '0 1'\nassert solution('2 ab b\\n1 b\\n1 c\\n1 d\\n1 e\\n1 f') == '0 1'\n"
    },
    {
        "number": 3511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3'\nassert solution('2 4\\n1 1 2\\n2\\n1 1 2\\n2\\n') == '1\\n3'\n"
    },
    {
        "number": 3512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\nassert solution('3\\n0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\nassert solution('3\\n0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\nassert solution('3\\n0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\nassert solution('3\\n0 5 2\\n5 0 4\\n2 4 0\\n') == '7'\n"
    },
    {
        "number": 3513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1099511627776') == '8'\nassert solution('123456789') == '0'\nassert solution
    },
    {
        "number": 3514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\nx..\n.x.\nx.x\n''') == '2'\nassert solution('''\n3 3\nx.x\n.x.\nx.x\n''') == '1'\nassert solution('''\n3 3\nx.x\n.x.\nx.x\n''') == '0'\nassert solution('''\n3 3\nx.x\n.x.\nx.x\n''') == '0'\nassert solution('''\n3 3\nx.x\n.x.\nx.x\n''') == '0'\n"
    },
    {
        "number": 3515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6\\n'\nassert solution('5\\n1 3 2\\n2 5 2\\n3 0 0\\n4 2 4\\n5 3 0') == '9\\n-1\\n5\\n6\\n'\n"
    },
    {
        "number": 3516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '91'\nassert solution('1') == '1'\nassert solution('2') == '1'\n"
    },
    {
        "number": 3517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '15'\nassert solution('3') == '15'\nassert solution('4') == '15'\nassert solution('5') == '15'\nassert solution('6') == '15'\n"
    },
    {
        "number": 3518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98') == 'impossible'\nassert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n1 5 716\\n2 4 716\\n3 5 716\\n4 5 716\\n5 4 716') == 'impossible'\nassert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n1 5 716\\n2 4 716\\n3 5 716\\n4 5 716\\n5 4 716\\n6 5 716') == 'impossible'\nassert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n1 5 716\\n2 4 716\\n3 5 716\\n4 5 716\\n5 4 716\\n6 5 716\\n7 5 716') == 'impossible'\nassert solution('5 4\\n3 1 375\\n2 5 283\\n1 4 716\\n3 4 98\\n1 5 716\\n2 4 716\\n3 5 716\\n4 5 716\\n5 4 716\\n6 5 716\\n7 5 716\\n8 5 716') == 'impossible'\n"
    },
    {
        "number": 3519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.000000000'\nassert solution('2') == '1.000000000'\nassert solution('3') == '1.000000000'\nassert solution('4') == '1.000000000'\nassert solution('5') == '1.000000000'\n"
    },
    {
        "number": 3520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100 3 10') == '115.000000000'\nassert solution('15 99 98') == '115.000000000'\nassert solution('40 3 2') == '115.000000000'\nassert solution('90 10 9') == '115.000000000'\n"
    },
    {
        "number": 3521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n100 1 1\\n100 1 1.5') == '199.500000'\nassert solution('3\\n100 1 1\\n100 1 1.5\\n100 1 1.5') == '199.500000'\nassert solution('4\\n100 1 1\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5') == '199.500000'\nassert solution('5\\n100 1 1\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5') == '199.500000'\nassert solution('6\\n100 1 1\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5\\n100 1 1.5') == '199.500000'\n"
    },
    {
        "number": 3522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1'\nassert solution('''\n2 4\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '2'\nassert solution('''\n2 5\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '2'\nassert solution('''\n2 6\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '1'\nassert solution('''\n2 7\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '2'\n"
    },
    {
        "number": 3523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13\\n3 2 1 1') == '5'\nassert solution('10\\n3 2 1 1') == 'Impossible'\nassert solution('10\\n3 2 1 1') == '5'\nassert solution('10\\n3 2 1 1') == '5'\nassert solution('10\\n3 2 1 1') == '5'\n"
    },
    {
        "number": 3524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aabcad\naba\nacd''') == 'yes'\nassert solution('''aabcad\naba\nacd''') == 'no'\nassert solution('''aabcad\naba\nacd''') == 'no'\nassert solution('''aabcad\naba\nacd''') == 'no'\nassert solution('''aabcad\naba\nacd''') == 'no'\n"
    },
    {
        "number": 3525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\nassert solution('''4 5 10\n3 2\n1 2 4 7\n3 1 1 6\n3 4 7 10\n2 4 3 5\n4 2 8 9\n''') == '5'\n"
    },
    {
        "number": 3526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n2 4 same\\n3 5 same\\n') == '4'\nassert solution('5 2\\n2 4 same\\n3 5 same\\n') == '0'\nassert solution('5 2\\n2 4 same\\n3 5 same\\n') == '1'\nassert solution('5 2\\n2 4 same\\n3 5 same\\n') == '2'\nassert solution('5 2\\n2 4 same\\n3 5 same\\n') == '3'\n"
    },
    {
        "number": 3527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5') == '3'\nassert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n6 7') == '4'\nassert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n6 7\\n8 9') == '3'\nassert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n6 7\\n8 9\\n10 11') == '4'\nassert solution('6 4\\n0 1\\n0 2\\n3 4\\n3 5\\n6 7\\n8 9\\n10 11\\n12 13') == '3'\n"
    },
    {
        "number": 3528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 4\\n2 2\\n4 1\\n3 5\\n5 3\\nLUR') == '9.0\\n6.5\\n2.5'\n"
    },
    {
        "number": 3529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '0'\nassert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\nassert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '0'\nassert solution('''\n3 3 2\nB 1 2\nB 2 3\nR 3 1\n''') == '1'\n"
    },
    {
        "number": 3530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '88'\nassert solution('5') == '5'\nassert solution('4') == '7'\n"
    },
    {
        "number": 3531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 1 2') == '5'\nassert solution('3 3 1 2') == '5'\nassert solution('3 3 1 2') == '5'\nassert solution('3 3 1 2') == '5'\nassert solution('3 3 1 2') == '5'\n"
    },
    {
        "number": 3532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('mirkovC4nizCC44') =='mirkovniz'\nassert solution('mirkovC4nizCC44') =='mirkovniz'\n"
    },
    {
        "number": 3533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '32'\nassert solution('3\\n3\\n65\\n45\\n60\\n25') == '32'\n"
    },
    {
        "number": 3534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 0 3 1\\n') == '3\\n2'\nassert solution('5\\n1 2 0 3 1\\n') == '2'\nassert solution('5\\n1 2 0 3 1\\n') == '2'\nassert solution('5\\n1 2 0 3 1\\n') == '2'\nassert solution('5\\n1 2 0 3 1\\n') == '2'\n"
    },
    {
        "number": 3535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '2'\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '1'\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '0'\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '1'\nassert solution('2 4 4\\n+ 1 1\\n- 1 2\\n+ 1 3\\n- 1 4') == '0'\n"
    },
    {
        "number": 3536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000000000 0') == '500000004'\nassert solution('1000000000 1') == '500000004'\n"
    },
    {
        "number": 3537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nassert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nassert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nassert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\nassert solution('''\n5 8\n1 2 1 10\n2 4 11 16\n2 1 9 12\n3 5 28 100\n1 2 3 8\n4 3 20 21\n1 3 13 27\n3 5 23 24\n''') == '12'\n"
    },
    {
        "number": 3538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 19\\n15 5 3\\n12 4 4\\n20 10 5') == '3'\nassert solution('3 10\\n15 5 3\\n12 4 4\\n20 10 5') == '2'\nassert solution('3 10\\n15 5 3\\n12 4 4\\n20 10 5') == '1'\nassert solution('3 10\\n15 5 3\\n12 4 4\\n20 10 5') == '0'\nassert solution('3 10\\n15 5 3\\n12 4 4\\n20 10 5') == '0'\n"
    },
    {
        "number": 3539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '2'\nassert solution('4 4') == '2'\nassert solution('5 5') == '2'\n"
    },
    {
        "number": 3540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RGGR\") == \"3\"\nassert solution(\"GBGB\") == \"3\"\nassert solution(\"BYBY\") == \"3\"\nassert solution(\"YRYR\") == \"3\"\n"
    },
    {
        "number": 3541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAAAA'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAABB'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAABB'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAABB'\nassert solution('''5\n-2 -1 0 1 2\n2 1 0 -1 -2\n''') == 'AAABB'\n"
    },
    {
        "number": 3542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == '2'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\nassert solution('6 3\\n2 3\\n4 0\\n0 2\\n6 1\\n') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\naustria\\nautocorrect\\nprogram\\nprogramming\\ncomputer\\nautocorrelation\\nprogramming\\ncompetition\\nzyx\\naustria\\n') == '12\\n4\\n11\\n3\\n2\\n'\n"
    },
    {
        "number": 3544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 1 1') == '3'\nassert solution('4\\n0 1 1 1\\n0 1 1 1') == '4'\nassert solution('5\\n0 1 1 1 1\\n0 1 1 1 1') == '5'\nassert solution('6\\n0 1 1 1 1 1\\n0 1 1 1 1 1') == '6'\nassert solution('7\\n0 1 1 1 1 1 1\\n0 1 1 1 1 1 1') == '7'\n"
    },
    {
        "number": 3545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"HFBIGEDCJA\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\"\nassert solution(\"BIGEDCJFAH\") == \"Pre In Post In Pre\""
    },
    {
        "number": 3546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '10'\nassert solution('3') == '1'\nassert solution('4') == '0'\n"
    },
    {
        "number": 3547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n1\n0 0 100 100\n''') == '100.00'\nassert solution('''\n2\n0 0 100 100\n30 30 60 60\n''') == '10000.00'\nassert solution('''\n3\n0 0 100 100\n30 30 60 60\n40 40 60 60\n''') == '10000.00'\nassert solution('''\n4\n0 0 100 100\n30 30 60 60\n40 40 60 60\n40 40 60 60\n''') == '10000.00'\n"
    },
    {
        "number": 3548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '5'\nassert solution('4 5') == '4'\nassert solution('2 4') == '1'\nassert solution('1 2') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11 13 17\\n5 2 4\\n0 0 0') == '2095'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '1'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '1'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '1'\nassert solution('1 1 1\\n1 1 1\\n1 1 1') == '1'\n"
    },
    {
        "number": 3550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint c;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon'\n\nassert solution('''\nvar a = \"Gon\";\nvar b = a;\nvar c = `My name is ${a}`;\nprint `My name is ${b}`;\nend.\n''') == 'My name is Gon\\nMy name is Gon'"
    },
    {
        "number": 3551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n7 8\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('2\\n10\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('3\\n10\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('4\\n10\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\nassert solution('5\\n10\\n10') == 'fill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1\\nfill 2\\ntransfer 2 1\\ntransfer 2 0\\ndiscard 1'\n"
    },
    {
        "number": 3552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 4 3') == '27'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 1') == '1'\nassert solution('1 1 1 1 1') == '1'\nassert solution('1 1 1 1 1 1') == '1'\n"
    },
    {
        "number": 3553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '3'\nassert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '-1'\nassert solution('4 3 5\\n2 3 1 2\\n2\\n1 3 3\\n2\\n1 1 1\\n2\\n') == '4'\n"
    },
    {
        "number": 3554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 3000 1000') == '533.3333333333'\nassert solution('1000000 1000 1000') == '533.3333333333'\nassert solution('1000000 1000 1000') == '533.3333333333'\nassert solution('1000000 1000 1000') == '533.3333333333'\nassert solution('1000000 1000 1000') == '533.3333333333'\n"
    },
    {
        "number": 3555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 0') == '14.14'\nassert solution('2 1') == '14.14'\nassert solution('2 2') == '14.14'\nassert solution('2 3') == '14.14'\nassert solution('2 4') == '14.14'\n"
    },
    {
        "number": 3556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n123456 14323 1700000\n123458 41412 1900000\n123457 15221 1800000\n123456\n123458\n123457\n''') == '123457 0\\n0 2\\n123458 1\\n'''\n"
    },
    {
        "number": 3557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 5 10 2 5\\n2 4 5 1 3') == '90'\nassert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n1 2 3 4 5') == '90'\nassert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n1 2 3 4 5\\n1 2 3 4 5') == '90'\nassert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '90'\nassert solution('5\\n3 5 10 2 5\\n2 4 5 1 3\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2 3 4 5') == '90'\n"
    },
    {
        "number": 3558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2') == '6.000000'\nassert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n0 5 2') == '6.000000'\nassert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n0 5 2\\n0 6 2') == '6.000000'\nassert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n0 5 2\\n0 6 2\\n0 7 2') == '6.000000'\nassert solution('3 10\\n1 2 6\\n0 4 3\\n0 8 2\\n0 5 2\\n0 6 2\\n0 7 2\\n0 8 2') == '6.000000'\n"
    },
    {
        "number": 3559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n0 0\\n1.') == '1.\\n..\\n0'\nassert solution('2\\n0 0\\n0 0\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\n1.\\"
    },
    {
        "number": 3560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1'\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1'\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1'\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1'\nassert solution('3\\na\\nbc\\nabc\\n3\\n1 abca\\n2 1\\n2 3') == '1'\n"
    },
    {
        "number": 3561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == 'YES'\nassert solution('1 1 1 1') == 'NO'\nassert solution('1 1 1 1') == 'YES'\nassert solution('1 1 1 1') == 'NO'\nassert solution('1 1 1 1') == 'YES'\n"
    },
    {
        "number": 3562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 96') == '80.5696000000'\nassert solution('1 1 1') == '1.0'\nassert solution('1 1 1.1') == '1.1'\nassert solution('1 1 1.1 1') == '1.1'\nassert solution('1 1 1.1 1.1') == '1.1'\n"
    },
    {
        "number": 3563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 0 0 1 1 1 0 0 1') == '2'\nassert solution('4 0 0 1 1 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0"
    },
    {
        "number": 3564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 3') == 'impossible'\nassert solution('1 1 1') == 'impossible'\nassert solution('1 1 1') == 'impossible'\nassert solution('1 1 1') == 'impossible'\nassert solution('1 1 1') == 'impossible'\n"
    },
    {
        "number": 3565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 15') == '3907'\nassert solution('10 10') == '0'\nassert solution('10 10') == '0'\nassert solution('10 10') == '0'\nassert solution('10 10') == '0'\n"
    },
    {
        "number": 3566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1') == '1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n1 2') == '2'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n1 2\\n1 3') == '1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n1 2\\n1 3\\n1 4') == '1'\nassert solution('5 4\\n3 1 3 4 2\\n0 5\\n0 9\\n4 5\\n2 1\\n1 2\\n1 3\\n1 4\\n1 5') == '1'\n"
    },
    {
        "number": 3567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '00010'\nassert solution('1 1') == '11111'\nassert solution
    },
    {
        "number": 3568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n6 2\\n0 4\\n6 12') == 'possible'\nassert solution('1\\n6 2\\n6 12') == 'impossible'\nassert solution('1\\n6 2\\n6 12\\n6 12') == 'impossible'\nassert solution('1\\n6 2\\n6 12\\n6 12\\n6 12') == 'possible'\nassert solution('1\\n6 2\\n6 12\\n6 12\\n6 12\\n6 12') == 'impossible'\n"
    },
    {
        "number": 3569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '2'\nassert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '1'\nassert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '0'\nassert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '0'\nassert solution('5\\n5 0 1\\n10 0 1\\n0 5 1\\n0 -5 1\\n-5 0 1') == '0'\n"
    },
    {
        "number": 3570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies business_as_usual\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\nassert solution('''\n10\nE business_as_usual\nE bobby_dies\nS 1 bobby_died\nE stuff_happens\nE jr_does_bad_things\nS 2!bobby_dies\nE it_goes_on_and_on\nD 4\nS 1!bobby_dies\nS 2!bobby_dies it_goes_on_and_on\n''') == 'Yes'\n"
    },
    {
        "number": 3571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('24 5 8 7') == '+------------------------+-+\\n|exercitation ullamco    |^|\\n|laboris nisi ut aliquip | |\\n|ex ea commodo consequat |X|\\n|Duis aute irure dolor in| |\\n|reprehenderit in        |v|\\n+------------------------+-+'\n"
    },
    {
        "number": 3572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0') == 'possible'\nassert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n0 1 2 3') == 'impossible'\nassert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n0 1 2 3\\n0 2 3 4') == 'impossible'\nassert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n0 1 2 3\\n0 2 3 4\\n0 1 3 2') == 'impossible'\nassert solution('4 10\\n0 3 2 1\\n3 0 1 3\\n2 1 0 2\\n1 3 2 0\\n0 1 2 3\\n0 2 3 4\\n0 1 3 2\\n0 2 3 4') == 'impossible'\n"
    },
    {
        "number": 3573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1\\n1\\n2') == '1.00000000'\nassert solution('2 1 1\\n1\\n2') == '1.00000000'\nassert solution('2 1 1\\n1\\n2') == '1.00000000'\nassert solution('2 1 1\\n1\\n2') == '1.00000000'\nassert solution('2 1 1\\n1\\n2') == '1.00000000'\n"
    },
    {
        "number": 3574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '1\\n3\\n1\\n3\\n'\nassert solution('5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '3\\n1\\n3\\n'\nassert solution('5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '2\\n1\\n3\\n'\nassert solution('5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '1\\n3\\n'\nassert solution('5\\n4 3 3 2\\n3\\n1 2\\n1 1\\n2 4\\n') == '3\\n1\\n3\\n'\n"
    },
    {
        "number": 3575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 2') == '1'\n"
    },
    {
        "number": 3576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 2') == '14500000001'\nassert solution('5 5 2') == '1450000020'\nassert solution('5 5 3') == '1450000030'\nassert solution('5 5 4') == '1450000040'\nassert solution('5 5 5') == '1450000050'\n"
    },
    {
        "number": 3577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3\\n4') == '0\\n1\\n1\\n2'\nassert solution('2\\n3\\n4\\n5') == '1\\n1\\n1\\n2'\nassert solution('3\\n4\\n5\\n6') == '1\\n1\\n1\\n2'\nassert solution('4\\n5\\n6\\n7') == '1\\n1\\n1\\n2'\nassert solution('5\\n6\\n7\\n8') == '1\\n1\\n1\\n2'\n"
    },
    {
        "number": 3578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\nassert solution('''\n5 3\n1 2 1000\n2 3 1000\n4 5 500\n2\n1 4 300\n3 5 300\n''') == '3100'\n"
    },
    {
        "number": 3579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '5.25'\nassert solution('1 8') == '5.25'\nassert solution('6 5') == '5.25'\nassert solution('2 5') == '5.25'\nassert solution('2 9') == '5.25'\n"
    },
    {
        "number": 3580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 1 2 1 1\n5\n1 3 1 2 3\n1 2 1 2\n2 2 2 3\n3 2 1 2\n4 2 1 2\n''') == '7\\n2\\n2\\n0\\n4\\n'''\n"
    },
    {
        "number": 3581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n40 30 30 40 20 40 50 30 30 50\n0.0 0.0 0.45 0.45 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.3 0.3 0.3 0.3 0.1\n0.2 0.2 0.2 0.2 0.2 0.2\n0.3 0.0 0.3 0.3 0.3 0.1\n0.0 0.8 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.4 0.4 0.0 0.0 0.0 0.2\n0.8 0.0 0.0 0.0 0.0 0.2\n''') == '32.6405451448'\n"
    },
    {
        "number": 3582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1 4 3') == '2 3 4 1'\nassert solution('2\\n1 1 4 3') == '2 3 4 1'\nassert solution('3\\n1 1 4 3') == '2 3 4 1'\nassert solution('4\\n1 1 4 3') == '2 3 4 1'\nassert solution('5\\n1 1 4 3') == '2 3 4 1'\n"
    },
    {
        "number": 3583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\nassert solution('6\\n1 2\\n1 3\\n2 4\\n3 3\\n3 2\\n2 1') == '7.656854249492381'\n"
    },
    {
        "number": 3584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '2'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '1'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '0'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '0'\nassert solution('''\n3 5 3\n1 1\n2 2\n1 3\n0 0\n0 3\n1 4\n3 3\n3 0\n''') == '0'\n"
    },
    {
        "number": 3585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '9'\nassert solution('1 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 1') == '1'\nassert solution('1 2') == '2'\n"
    },
    {
        "number": 3586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nassert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nassert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nassert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\nassert solution('5\\n2\\n3\\n5\\n7\\n12') == '12'\n"
    },
    {
        "number": 3587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '110'\nassert solution('10') == '01'\nassert solution('11') == '11'\nassert solution('111') == '111'\nassert solution('00') == '00'\n"
    },
    {
        "number": 3588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\nassert solution('''\n3\n2\n20 100\n100 10\n1\n150 50\n1\n150 100\n''') == '100 250 320'\n"
    },
    {
        "number": 3589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('50 100') == '3 7 4 6 5 7 2 15 2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 3') == '1'\nassert solution('1 4') == '1'\n"
    },
    {
        "number": 3590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\nassert solution('2\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\nassert solution('3\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\nassert solution('4\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\nassert solution('5\\n0 0\\n0 14\\n15 14\\n15 0') == '40.0000000000'\n"
    },
    {
        "number": 3591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n2 1 3') == '1'\nassert solution('2\\n3\\n1 2 3') == '1'\nassert solution('3\\n3\\n1 2 3') == '1'\nassert solution('4\\n3\\n1 2 3') == '1'\nassert solution('5\\n3\\n1 2 3') == '1'\n"
    },
    {
        "number": 3592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00\n0.00 1.00 2.00"
    },
    {
        "number": 3593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nassert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nassert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nassert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\nassert solution('5 3\\n2 1 -1\\n1 3 2\\n0 2 3\\n2 1 1\\n3 3 0') == '16'\n"
    },
    {
        "number": 3594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nO 4\\n') == '2 1 4'\nassert solution('2\\nO 4\\n') == '1 2 4'\nassert solution('3\\nO 4\\n') == '1 2 4'\nassert solution('4\\nO 4\\n') == '1 2 4'\nassert solution('5\\nO 4\\n') == '1 2 4'\n"
    },
    {
        "number": 3595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 8') == '4'\nassert solution('5 1 12 4') == '3'\nassert solution('5 5 9 10') == '4'\nassert solution('1 6 4 10') == '1'\nassert solution('2 11 7 14') == '2'\n"
    },
    {
        "number": 3596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('-99.99 99.99 9999.99') == '9.585073'\nassert solution('99 9 999 9999') == '9.585073'\nassert solution('9 99 9 99 9') == '9.585073'\n"
    },
    {
        "number": 3597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 30') == '12.74 127.83'\nassert solution('20 30') == '12.74 127.83'\nassert solution('20 30') == '12.74 127.83'\nassert solution('20 30') == '12.74 127.83'\nassert solution('20 30') == '12.74 127.83'\n"
    },
    {
        "number": 3598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n110\\n6') == '0116'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n"
    },
    {
        "number": 3599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3') == '0 2 4'\nassert solution('10 3') == '0 2 4 5 6 7 8 9 10'\nassert solution('10 4') == '0 2 4 5 6 7 8 9 10'\nassert solution('10 5') == '0 2 4 5 6 7 8 9 10'\nassert solution('10 6') == '0 2 4 5 6 7 8 9 10'\n"
    },
    {
        "number": 3600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'possible'\nassert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\nassert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'possible'\nassert solution('''\n4\n7\n2 2 4\n3 1 3 5\n1 2\n2 1 5\n4 2 6 4 7\n2 5 7\n2 6 5\n''') == 'impossible'\n"
    },
    {
        "number": 3601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == '4.00000'\nassert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\nassert solution('1\\n0 0\\n0 10\\n2\\n4 10\\n4 0') == 'impossible'\n"
    },
    {
        "number": 3602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '0'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '0'\nassert solution('''\n3 2 5\n1 1\n1 3\n3 1\n3 3\n2 2\n''') == '1'\n"
    },
    {
        "number": 3603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '3 1 0 2 4'\nassert solution('5 5') == 'impossible'\n"
    },
    {
        "number": 3604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 1\n0 0\n0 1\n1 0\n1 1\n''') == '2'\nassert solution('''\n4 1\n0 0\n0 1\n1 0\n1 1\n''') == '2'\nassert solution('''\n4 1\n0 0\n0 1\n1 0\n1 1\n''') == '2'\nassert solution('''\n4 1\n0 0\n0 1\n1 0\n1 1\n''') == '2'\nassert solution('''\n4 1\n0 0\n0 1\n1 0\n1 1\n''') == '2'\n"
    },
    {
        "number": 3605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\nassert solution('''\n10 2\n1 3 5 7 9 11 13 15 17 16\n''') == '1'\n"
    },
    {
        "number": 3606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\nassert solution('''\n7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\nassert solution('''\n7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\nassert solution('''\n7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\nassert solution('''\n7 5\nACDBB\n5 6\n8 9\n4 13\n1 10\n7 4\n10 9\n3 7\n''') == '7 4'\n"
    },
    {
        "number": 3607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 LET A = 1\\n20 PRINT 'HELLO THERE '\\n30 PRINTLN A\\n40 LET A = A + 1\\n50 IF A <= 5 THEN GOTO 20\\n60 PRINTLN 'DONE'\") == \"HELLO THERE 1\\nHELLO THERE 2\\nHELLO THERE 3\\nHELLO THERE 4\\nHELLO THERE 5\\nDONE\"\n"
    },
    {
        "number": 3608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('3 0 1') == '3'\nassert solution('0 1') == '1'\nassert solution('0 1 0 1') == '2'\nassert solution('3 0 1 0 1') == '3'\n"
    },
    {
        "number": 3609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRRRRLL'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'LLRLRRLR'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'impossible'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'impossible'\nassert solution('''\n5\n1 2\n2 5\n2 3\n1 3\n3 5\n4 5\n3 4\n1 3\n''') == 'impossible'\n"
    },
    {
        "number": 3610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1009 2011\\n1017 2011') == '1\\n2011'\nassert solution('3\\n1009 2011\\n1017 2011\\n1009 2012') == '1\\n2012'\nassert solution('3\\n1009 2011\\n1017 2011\\n1009 2012\\n1009 2013') == '1\\n2012'\nassert solution('3\\n1009 2011\\n1017 2011\\n1009 2012\\n1009 2013\\n1009 2014') == '1\\n2012'\nassert solution('3\\n1009 2011\\n1017 2011\\n1009 2012\\n1009 2013\\n1009 2014\\n1009 2015') == '1\\n2012'\n"
    },
    {
        "number": 3611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\nassert solution('''\n4 4\n0 1 100\n0 2 100\n1 3 100\n2 3 100\n0 3\n''') == '0 3'\n"
    },
    {
        "number": 3612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '20'\nassert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '20'\nassert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '20'\nassert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '20'\nassert solution('''2.0 10.0\n3 3 0 0\n2001 1000 100\n1001 10000 200\n100 0 0''') == '20'\n"
    },
    {
        "number": 3613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '4'\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '3'\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '2'\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '1'\nassert solution('6\\n0 2 3 4 5 6\\n0 1 3 4 5 6\\n1 6 5 4 2 1\\n2 6 5 3 2 1\\n1 1 2 3 4 6\\n2 1 2 3 4 5\\n') == '0'\n"
    },
    {
        "number": 3614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7') == '4'\nassert solution('5\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 5 6 7 8') == '8'\nassert solution('10\\n1 1\\n1 2 3 4\\n2 3 4 5\\n3 4 5 6\\n4 5 6 7\\n5 5 6 7 8\\n6 6 7 8 9\\n7 7 8 9 10') == '10'\n"
    },
    {
        "number": 3615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '6'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '7'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '8'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '9'\nassert solution('5\\n1.0 1.0\\n3.1 1.0\\n1.0 3.1\\n3.1 3.1\\n4.2 3.1') == '10'\n"
    },
    {
        "number": 3616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n2\\n2') == '5'\nassert solution('3\\n2\\n2') == '4'\nassert solution('3\\n2\\n2') == '4'\nassert solution('3\\n2\\n2') == '4'\nassert solution('3\\n2\\n2') == '4'\n"
    },
    {
        "number": 3617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3\\n2 2 2 1') == '1 1'\nassert solution('2 3\\n2 2 2 1') == '1 1'\nassert solution('3 3\\n2 2 2 1') == '1 1'\nassert solution('4 3\\n2 2 2 1') == '1 1'\nassert solution('5 3\\n2 2 2 1') == '1 1'\n"
    },
    {
        "number": 3618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '10'\nassert solution('3') == '10'\nassert solution('4') == '10'\nassert solution('5') == '10'\n"
    },
    {
        "number": 3619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '0.001'\nassert solution('1 2') == '0.001'\nassert solution('1 2') == '0.001'\nassert solution('1 2') == '0.001'\nassert solution('1 2') == '0.001'\n"
    },
    {
        "number": 3620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1') == '0'\nassert solution('3 3 2 10000\\n1 2\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\n1 3\\n2 3\\n3 1\\n1 3\\n2 1\\n1 2\\"
    },
    {
        "number": 3621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n0 1 1 1\n1 0 2 2\n1 2 0 3\n1 2 3 0\n''') == '26'\n"
    },
    {
        "number": 3622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.333333333'\nassert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.666666667'\nassert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.333333333'\nassert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.666666667'\nassert solution('''\n3 2\n20 20 20 40\nX.X\nT.T\n''') == '0.333333333'\n"
    },
    {
        "number": 3623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('45 45 0 0') == '0.75'\nassert solution('0 0 0 0') == '0.0'\nassert solution('0 0 0 0.1') == '0.1'\nassert solution('0 0 0 0.001') == '0.001'\nassert solution('0 0 0 0.00001') == '0.00001'\n"
    },
    {
        "number": 3624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '4'\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '12'\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '12'\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '12'\nassert solution('''\n5 6\n0 1 2\n0 3 8\n1 2 11\n2 3 5\n2 4 2\n4 3 9\n''') == '12'\n"
    },
    {
        "number": 3625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n10 10 0 5\n''') == '100'\nassert solution('''\n2\n10 10 0 5\n''') == '100'\nassert solution('''\n3\n10 10 0 5\n''') == '100'\nassert solution('''\n4\n10 10 0 5\n''') == '100'\nassert solution('''\n5\n10 10 0 5\n''') == '100'\n"
    },
    {
        "number": 3626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\nassert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '0'\nassert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\nassert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '0'\nassert solution('''\n3\n0 0 2 2\n1 1 3 4\n5 7 6 8\n''') == '1'\n"
    },
    {
        "number": 3627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\nassert solution('''5 5\nE E E E E\n1 2 3 4 5\n5 4 3 2 1\n-2 -2 -2 -2 -2\n8 8 8 8 8\n9 9 9 9 9\nS S S S S''') == '17'\n"
    },
    {
        "number": 3628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2 3 1 1') == '1 4 3 5 2'\nassert solution('5\\n3 2 3 1 1') == '1 4 3 5 2'\nassert solution('5\\n3 2 3 1 1') == '1 4 3 5 2'\nassert solution('5\\n3 2 3 1 1') == '1 4 3 5 2'\nassert solution('5\\n3 2 3 1 1') == '1 4 3 5 2'\n"
    },
    {
        "number": 3629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 0 1\\n1 4\\n') == '0.76772047'\nassert solution('2\\n3 0 1\\n1 4\\n') == '0.0'\nassert solution('3\\n3 0 1\\n1 4\\n') == '0.0'\nassert solution('4\\n3 0 1\\n1 4\\n') == '0.0'\nassert solution('5\\n3 0 1\\n1 4\\n') == '0.0'\n"
    },
    {
        "number": 3630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('hello teams') == '27'\nassert solution('hello helmp') == '27'\nassert solution('hello helmp helmp') == '27'\nassert solution('hello helmp helmp helmp helmp') == '27'\nassert solution('hello helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp helmp"
    },
    {
        "number": 3631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '2'\nassert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '1'\nassert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '0'\nassert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '0'\nassert solution('''\n6 3\n1 8\n5 4\n7 7\n9 2\n16 6\n17 10\n4 7 2\n6 3 1\n12 6 3\n''') == '0'\n"
    },
    {
        "number": 3632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\na\nb\nc\nd\ne\ncad\n''') == '26'\n\nassert solution('''\n5 3\na\nb\nc\nd\ne\ncad\n''') == '26'\n\nassert solution('''\n5 3\na\nb\nc\nd\ne\ncad\n''') == '26'\n\nassert solution('''\n5 3\na\nb\nc\nd\ne\ncad\n''') == '26'\n\nassert solution('''\n5 3\na\nb\nc\nd\ne\ncad\n''') == '26'"
    },
    {
        "number": 3633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 30') == '3 5 2 1 4'\nassert solution('5 10 30') == '3 5 2 1 4'\nassert solution('5 10 30') == '3 5 2 1 4'\nassert solution('5 10 30') == '3 5 2 1 4'\nassert solution('5 10 30') == '3 5 2 1 4'\n"
    },
    {
        "number": 3634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3') =='shovel time!'\nassert solution('1\\n2\\n3') =='shovel time!'\nassert solution('1\\n2\\n3') =='shovel time!'\nassert solution('1\\n2\\n3') =='shovel time!'\n"
    },
    {
        "number": 3635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n1\\n2') == '3'\nassert solution('4\\n1 2 1 2') == '3'\nassert solution('4\\n1 2 1 2\\n1 2 1 2') == '3'\nassert solution('4\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2') == '3'\nassert solution('4\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2\\n1 2 1 2') == '3'\n"
    },
    {
        "number": 3636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4 999999937') == '79'\nassert solution('5 5 999999937') == '79'\nassert solution('6 6 999999937') == '79'\nassert solution('7 7 999999937') == '79'\nassert solution('8 8 999999937') == '79'\n"
    },
    {
        "number": 3637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n''') == 'zucchini'\nassert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n+pepperoni\n''') == 'zucchini'\nassert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n+pepperoni\n+pepperoni\n''') == 'zucchini'\nassert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n+pepperoni\n+pepperoni\n+pepperoni\n''') == 'zucchini'\nassert solution('''\n1\n4 +zucchini +mozzarella +mushrooms -artichoke\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepperoni\n+pepper"
    },
    {
        "number": 3638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'PS'\nassert solution('3 5') == 'PS'\nassert solution('3 6') == 'PS'\nassert solution('3 7') == 'PS'\nassert solution('3 8') == 'PS'\n"
    },
    {
        "number": 3639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '288'\nassert solution('0.1 2.0') == '288'\nassert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('0') == '0'\n"
    },
    {
        "number": 3640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('pastimeofwhimsy') == '1'\nassert solution('meow') == '1'\nassert solution('meowmeow') == '2'\nassert solution('meowmeowmeow') == '3'\nassert solution('meowmeowmeowmeow') == '4'\n"
    },
    {
        "number": 3641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n1 2 2 1 \n''') == 'YES'\nassert solution('''\n3 4\n1 2 2 1 \n''') == 'NO'\nassert solution('''\n3 4\n1 2 2 1 \n''') == 'NO'\nassert solution('''\n3 4\n1 2 2 1 \n''') == 'NO'\nassert solution('''\n3 4\n1 2 2 1 \n''') == 'NO'\n"
    },
    {
        "number": 3642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2\\n3') == '3/1'\nassert solution('1 2\\n3\\n4') == '3/1'\nassert solution('1 2\\n3\\n4\\n5') == '3/1'\nassert solution('1 2\\n3\\n4\\n5\\n6') == '3/1'\nassert solution('1 2\\n3\\n4\\n5\\n6\\n7') == '3/1'\n"
    },
    {
        "number": 3643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1.114672365'\nassert solution('1') == '1.0'\nassert solution('1.2') == '1.114672365'\nassert solution('2.2') == '1.114672365'\nassert solution('1.2 10.2') == '1.114672365'\n"
    },
    {
        "number": 3644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 3\\n1 1\\n2 1\\n2 0') == '3 1 2 3'\nassert solution('5\\n0 3\\n1 1\\n2 1\\n2 0') == '4 1 2 3'\nassert solution('10\\n0 3\\n1 1\\n2 1\\n2 0') == '9 1 2 3'\nassert solution('100\\n0 3\\n1 1\\n2 1\\n2 0') == '99 1 2 3'\nassert solution('1000\\n0 3\\n1 1\\n2 1\\n2 0') == '999 1 2 3'\n"
    },
    {
        "number": 3645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == 'none'\nassert solution('5') == 'none'\n"
    },
    {
        "number": 3646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 1 0 1 2 3 3') == '5'\nassert solution('2\\n1 1 0 1 2 3 3') == '4'\nassert solution('3\\n2 1 0 1 2 3 3') == '3'\nassert solution('4\\n2 1 0 1 2 3 3') == '2'\nassert solution('5\\n2 1 0 1 2 3 3') == '1'\n"
    },
    {
        "number": 3647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"1 4 5 6 -1\"\nassert solution(\"5 5\") == \"1 4 -1 -1 -1\"\nassert solution(\"5 5\") == \"1 4 -1 -1 -1\"\nassert solution(\"5 5\") == \"1 4 -1 -1 -1\"\nassert solution(\"5 5\") == \"1 4 -1 -1 -1\"\n"
    },
    {
        "number": 3648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == '6'\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\nassert solution('''\n4 6 1\n1\n1 2 1\n1 3 1\n1 4 1\n2 3 2\n2 4 4\n3 4 3\n''') == 'impossible'\n"
    },
    {
        "number": 3649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 2 1') == '01001'\nassert solution('1 1 1 1') == '11111'\nassert solution('1 1 1 1') == '11111'\nassert solution('1 1 1 1') == '11111'\nassert solution('1 1 1 1') == '11111'\n"
    },
    {
        "number": 3650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'possible'\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\nassert solution('''\n3 4 6\n1 1\n1 2\n2 2\n2 3\n3 3\n3 4\n''') == 'impossible'\n"
    },
    {
        "number": 3651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3') == '2.0'\nassert solution('4\\n0 0 1\\n0 1 1\\n2 0 3\\n2 1 3\\n1 0 2\\n1 1 2\\n1 2 2\\n1 3 2\\n1 4 2\\n1 5 2\\n1 6 2\\n1 7 2\\n1 8 2\\n1 9 2\\n1 10 2\\n1 11 2\\n1 12 2\\n1 13 2\\n1 14 2\\n1 15 2\\n1 16 2\\n1 17 2\\n1 18 2\\n1 19 2\\n1 20 2\\n1 21 2\\n1 22 2\\n1 23 2\\n1 24 2\\n1 25 2\\n1 26 2\\n1 27 2\\n1 28 2\\n1 29 2\\n1 30 2\\n1 31 2\\n1 32 2\\n1 33 2\\n1 34 2\\n1 35 2\\n1 36 2\\n1 37 2\\n1 38 2\\n1 39 2\\n1 40 2\\n1 41 2\\n1 42 2\\n1 43 2\\n1 44 2\\n1 45 2\\n1 46 2\\n1 47 2\\n1 48 2\\n1 49 2\\n1 50 2\\n1 51 2\\n1 52 2\\n1 53 2\\n1 54 2\\n1 55 2\\n1 56 2\\n1 57 2\\n1 58 2\\n1 59 2\\n1 60 2\\n1 61 2\\n1 62 2\\n1 63 2\\n1 64 2\\n1 65 2\\n1 66 2\\n1 67 2\\n1 68 2\\n1 69 2\\n1 70 2\\n1 71 2\\n1 72 2\\n1 73 2\\n1 74 2\\n1 75 2\\n1 76 2\\n1 77 2\\n1 78 2\\n1 79 2\\n1 80 2\\n1 81 2\\n1 82 2\\n1 83 2\\n1 84 2\\n1 85 2\\n1 86 2\\n1 87 2\\n1 88 2\\n1 89 2\\n1 90 2\\n1 91 2\\n1 92 2\\n1 93 2\\n1 94 2\\n1 95 2\\n1 96 2\\n1 97 2\\n1 98 2\\n1 99 2\\n1 100 2\\n1 101 2\\n1 102 2\\n1 103 2\\n1 104 2\\n1 105 2\\n1 106 2\\n1 107 2\\n1 108 2\\n1 109 2\\n1 110 2\\n1 111 2\\n1 112 2\\n1 113 2\\n1 114 2\\n1 115 2\\n1 116 2\\n1 117 2\\n1 118 2\\n1 119 2\\n1 120 2\\n1 121 2\\n1 122 2\\n1 123 2\\n1 124 2\\n1 125 2\\n1 126 2\\n1 127 2\\n1 128 2\\n1 129 2\\n1 130 2\\n1 131 2\\n1 132 2\\n1 133 2\\n1 134 2\\n1 135 2\\n1 136 2\\n1 137 2\\n1 138 2\\n1 139 2\\n1 140 2\\n1 141 2\\n1 142 2\\n1 143 2\\n1 144 2\\n1 145 2\\n1 146 2\\n1 147 2\\n1 148 2\\n1 149 2\\n1 150 2\\n1 151 2\\n1 152 2\\n1 153 2\\n1 154 2\\n1 155 2\\n1 156 2\\n1 157 2\\n1 158 2\\n1 159 2\\n1 160 2\\n1 161 2\\n1 162 2\\n1 163 2\\n1 164 2\\n1 165 2\\n1 166 2\\n1 167 2\\n1 168 2\\n1 169 2\\n1 170 2\\n1 171 2\\n1 172 2\\n1 173 2\\n1 174 2\\n1 175 2\\n1 176 2\\n1 177 2\\n1 178 2\\n1 179 2\\n1 180 2\\n1 181 2\\n1 182 2\\n1 183 2\\n1 184 2\\n1 185 2\\n1 186 2\\n1 187 2\\n1 188 2\\n1 189 2\\n1 190 2\\n1 191 2\\n1 192 2\\n1 193 2\\n1 194 2\\n1 195 2\\n1 196 2\\n1 197 2\\n1 198 2\\n1 199 2\\n1 200 2\\n1 201 2\\n1 202 2\\n1 203 2\\n1 204 2\\n1 205 2\\n1 206 2\\n1 207 2\\n1 208 2\\n1 209 2\\n1 210 2\\n1 211 2\\n1 212 2\\n1 213 2\\n1 214 2\\n1 215 2\\n1 216 2\\n1 217 2\\n1 218 2\\n1 219 2\\n1 220 2\\n1 221 2\\n1 222 2\\n1 223 2\\n1 224 2\\n1 225 2\\n1 226 2\\n1 227 2\\n1 228 2\\n1 229 2\\n1 230 2\\n1 231 2\\n1 232 2\\n1 233 2\\n1 234 2\\n1 235 2\\n1 236 2\\n1 237 2\\n1 238 2\\n1 239 2\\n1 240 2\\n1 241 2\\n1 242 2\\n1 243 2\\n1 244 2\\n1 245 2\\n1 246 2\\n1 247 2\\n1 248 2\\n1 249 2\\n1 250 2\\n1 251 2\\n1 252 2\\n1 253 2\\n1 254 2\\n1 255 2\\n1 256 2\\n1 257 2\\n1 258 2\\n1 259 2\\n1 260 2\\n1 261 2\\n1 262 2\\n1 263 2\\n1 264 2\\n1 265 2\\n1 266 2\\n1 267 2\\n1 268 2\\n1 269 2\\n1 270 2\\n1 271 2\\n1 272 2\\n"
    },
    {
        "number": 3652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '4'\nassert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '3'\nassert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '2'\nassert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '1'\nassert solution('''\n7\n5 4 3 2 1 6 7\n5 5 1 1 3 4 7\n3 7 1 4 5 6 2\n''') == '0'\n"
    },
    {
        "number": 3653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 5\n''') == '0'\nassert solution('''\n1 10\n''') == '1'\nassert solution('''\n1 100\n''') == '1'\nassert solution('''\n1 1000000\n''') == '1'\nassert solution('''\n1 1000000\n''') == '1'\n"
    },
    {
        "number": 3655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2\\n1 0\\n0 1\\n3 3\\n1 0 0\\n0 1 0\\n0 0 1\\n') == '0 0\\n1 1\\n'\n"
    },
    {
        "number": 3656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 0.950000\\n0.700000 50') == '44.975'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.950000\\n0.700000 50') == '44.975'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.950000\\n0.700000 50\\n0.950000\\n0.700000 50') == '44.975'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.950000\\n0.700000 50\\n0.950000\\n0.700000 50\\n0.950000\\n0.700000 50') == '44.975'\nassert solution('1 2 0.950000\\n0.700000 50\\n0.950000\\n0.700000 50\\n0.950000\\n0.700000 50\\n0.950000\\n0.700000 50\\n0.950000\\n0.700000 50') == '44.975'\n"
    },
    {
        "number": 3657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 3') == '2'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('5 2') == '2'\nassert solution('1 3') == '3'\nassert solution('3') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '4.0'\nassert solution('1 1') == '1.0'\nassert solution('1 1.1') == '1.1'\nassert solution('1 1.1 1.1') == '1.2'\nassert solution('1 1.1 1.1 1.1') == '1.3'\n"
    },
    {
        "number": 3659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n220 29\\n195 20\\n200 9\\n180 30') == '18000'\nassert solution('5\\n300 300 300 300 300\\n300 300 300 300 300\\n300 300 300 300 300\\n300 300 300 300 300\\n300 300 300 300 300') == '18000'\nassert solution('10\\n300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300 300 300 300\\n300 300 300 300 300 300 300 300 300"
    },
    {
        "number": 3660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('BUYSTICKERS') == '28'\nassert solution('TICKERS') == 'IMPOSSIBLE'\nassert solution('STICKY') == 'IMPOSSIBLE'\nassert solution('ERS') == 'IMPOSSIBLE'\nassert solution('BUYER') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 8') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5'\nassert solution('5 3 8') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5'\nassert solution('5 3 8') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5'\nassert solution('5 3 8') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5'\nassert solution('5 3 8') == 'INDV 1\\nINDV 2\\nCORP 1\\nINDV 4\\nCORP 2\\nINDV 3\\nCORP 3\\nINDV 5'\n"
    },
    {
        "number": 3662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n10 1\\n0\\n10\\n10') == '2.4142135624'\nassert solution('2\\n10 1\\n0\\n10\\n10') == '2.4142135624'\nassert solution('3\\n10 1\\n0\\n10\\n10') == '2.4142135624'\nassert solution('4\\n10 1\\n0\\n10\\n10') == '2.4142135624'\nassert solution('5\\n10 1\\n0\\n10\\n10') == '2.4142135624'\n"
    },
    {
        "number": 3663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\nassert solution('''\n3\n1 2 5\n3 1 5\n2 1\n5 0\n1 3\n''') == '15'\n"
    },
    {
        "number": 3664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 3 3 4') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD'\nassert solution('5 5 3 3 5') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n@DDDD'\nassert solution('5 5 3 3 6') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n@DDDD\\n@DDDD'\nassert solution('5 5 3 3 7') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n@DDDD\\n@DDDD\\n@DDDD'\nassert solution('5 5 3 3 8') == '.....\\n..BBC\\n..A.C\\n....C\\n@DDDD\\n@DDDD\\n@DDDD\\n@DDDD\\n@DDDD'\n"
    },
    {
        "number": 3665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '001'\nassert solution('5 4') == '001'\nassert solution('5 5') == '001'\nassert solution('5 6') == '001'\nassert solution('5 7') == '001'\n"
    },
    {
        "number": 3666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"19/13\") == \"19 20\"\nassert solution(\"10/1\") == \"10\"\nassert solution(\"19/14\") == \"19 20\"\nassert solution(\"4/3\") == \"4\"\nassert solution(\"20/7\") == \"20\"\n"
    },
    {
        "number": 3667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'possible'\nassert solution('0 0') == 'possible'\nassert solution('0 2') == 'impossible'\nassert solution('2 0') == 'impossible'\nassert solution('1 2 3') == 'impossible'\n"
    },
    {
        "number": 3668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n2\n2\n2\n''') == '4'\nassert solution('''\n4 2\n2\n2\n2\n''') == '4'\nassert solution('''\n4 2\n2\n2\n2\n''') == '4'\nassert solution('''\n4 2\n2\n2\n2\n''') == '4'\nassert solution('''\n4 2\n2\n2\n2\n''') == '4'\n"
    },
    {
        "number": 3669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Mirko'\nassert solution('1 1') == 'Mirko'\nassert solution('1 2') == 'Slavko'\nassert solution('1 3') == 'Slavko'\n"
    },
    {
        "number": 3670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2 4'\nassert solution('6') == '2 4'\nassert solution('34') == '2 4'\nassert solution('38') == '2 4'\n"
    },
    {
        "number": 3671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n10000 400000 500000 900000\n''') == '12'\nassert solution('''\n5\n8 10 2 1000000 30556926000\n''') == '12'\n"
    },
    {
        "number": 3672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'YES'\nassert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'NO'\nassert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'NO'\nassert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'NO'\nassert solution('''\n8 8\n0\n2 4 0\n1 8 0\n8 5 0\n4 3 7 0\n5 2 6 0\n1 6 0\n7 3 0\n''') == 'NO'\n"
    },
    {
        "number": 3673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '5 6 1 2 3 4'\nassert solution('1 2') == '1 2'\nassert solution('1 2 3') == '1 2 3'\nassert solution('1 2 3 4') == '1 2 3 4'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\n"
    },
    {
        "number": 3674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 8 4') == '20512'\nassert solution('1 1 1 1') == 'IMPOSSIBLE'\nassert solution('1 1 1 1 1') == 'IMPOSSIBLE'\nassert solution('1 1 1 1 1 1') == 'IMPOSSIBLE'\nassert solution('1 1 1 1 1 1 1') == 'IMPOSSIBLE'\n"
    },
    {
        "number": 3675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\nBAC\nABC\n''') == '2'\nassert solution('''\n3 8\nHGBDFCAE\nADBGHFCE\nHCFGBDAE\n''') == '3'\nassert solution('''\n4 5\nABCD\nABCD\nABCD\nABCD\n''') == '4'\nassert solution('''\n4 5\nABCD\nABCD\nABCD\nABCD\n''') == '4'\nassert solution('''\n4 5\nABCD\nABCD\nABCD\nABCD\n''') == '4'\n"
    },
    {
        "number": 3676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 4') == '6'\n"
    },
    {
        "number": 3677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '3'\nassert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '2'\nassert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '1'\nassert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '0'\nassert solution('5 3\\n2 1 2\\n3 0 2 3\\n3 0 1 4\\n2 1 4\\n2 2 3') == '0'\n"
    },
    {
        "number": 3678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1') == 'YES'\nassert solution('2\\n6\\n1 1\\n1 3\\n2 2\\n2 3\\n3 1\\n3 2\\n3\\n1 1\\n1 2\\n2 1') == 'NO'\n"
    },
    {
        "number": 3679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3.000000000'\nassert solution('3') == '3.000000000'\nassert solution('4') == '3.000000000'\nassert solution('5') == '3.000000000'\nassert solution('6') == '3.000000000'\n"
    },
    {
        "number": 3680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('3') == '1'\nassert solution('1 2 3') == '2'\nassert solution('3') == '1'\nassert solution('1 2 3 4') == '2'\n"
    },
    {
        "number": 3681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '2'\nassert solution('''\n3 4 5\n1 3 4\n0 2 2 3 2\n1 3 2\n1 2 4\n1 1 4\n''') == '3'\n"
    },
    {
        "number": 3682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\nHelloWorld.c\nint Main() {\n    printf(\"Hello %d\\n\",i);\n}\n***END***\nAdd.c\nint Main() {\n  for (int i=0; i<10; i++)\n    sum += i;\n  printf(\"SUM %d\", sum);\n}\n***END***\nint Main() {\n  printf(\"Hello %d\\n\",i);\n  printf(\"THE END\\n\");\n}\n***END***\n''') == '2 HelloWorld.c\\ndef solution(stdin: str) -> str\\n\\nassert solution('''\\n2\\nHelloWorld.c\\nint Main() {\\n    printf(\"Hello %d\\n\",i);\\n}\\n***END***\\nAdd.c\\nint Main() {\\n  for (int i=0; i<10; i++) \\n    sum += i;\\n  printf(\"SUM %d\", sum);\\n}\\n***END***\\nint Main() {\\n  printf(\"Hello %d\\n\",i);\\n  printf(\"THE END\\n\");\\n}\\n***END***\\n''')\n\n'''\n\n'''"
    },
    {
        "number": 3683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '1'\nassert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '2'\nassert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '2'\nassert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '2'\nassert solution('''\n3 3\n2 2 2\n4 2 1\n4 4 1\n''') == '2'\n"
    },
    {
        "number": 3684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\nassert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\nassert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\nassert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\nassert solution('''\n3 20\n50 70 10\n100 110 4\n150 190 16\n''') == '5'\n"
    },
    {
        "number": 3685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 5\n(2 5) (5 3)\n.....\n.#.#.\n.#.#.\n....#\n.#.##\n1\n6 (4 2) (4 3) (3 3) (2 3) (1 3) (1 2)\n''') == '26'\n"
    },
    {
        "number": 3686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\nassert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') =='success'\nassert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\nassert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') =='success'\nassert solution('6\\n-1 0\\n0 0\\n1 0\\n-1 1\\n0 2\\n1 1') == 'failure'\n"
    },
    {
        "number": 3687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('3 3') == 'impossible'\nassert solution('5 2 2') == 'impossible'\nassert solution('5 2 2') == 'impossible'\n"
    },
    {
        "number": 3688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '0'\nassert solution('3 2') == '0'\nassert solution('3 2') == '0'\nassert solution('3 2') == '0'\n"
    },
    {
        "number": 3689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('4 2') == '4'\nassert solution('5 2') == '5'\nassert solution('6 2') == '6'\nassert solution('7 2') == '7'\n"
    },
    {
        "number": 3690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12 30 45 3 11\") == \"NO\"\nassert solution(\"12 0 1 12 1\") == \"YES\"\nassert solution(\"3 47 0 4 9\") == \"YES\"\n"
    },
    {
        "number": 3691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1 2 3 1 0\n2 4 20''') == '3'\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '2'\nassert solution('''1 1 2 3 1 0\n2 2 1''') == '0'\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '0'\nassert solution('''1 1 2 3 1 0\n15 27 26''') == '0'\n"
    },
    {
        "number": 3692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0 1\n2 0 1\n4 0 1\n''') == '4'\nassert solution('''\n3\n0 0 2\n3 0 2\n6 0 2\n''') == '8'\nassert solution('''\n3\n0 0 2\n2 0 2\n1 1 2\n''') == '6'\n"
    },
    {
        "number": 3693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 0 6 0 6 6 0 6\n1 3 3 5 5 3 3 1\n''') == 'YES'\nassert solution('''\n0 0 6 0 6 6 0 6\n7 3 9 5 11 3 9 1\n''') == 'NO'\nassert solution('''\n6 0 6 6 0 6 0 0\n7 4 4 7 7 10 10 7\n''') == 'YES'\n"
    },
    {
        "number": 3694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n0\") == \"cslnb\"\nassert solution(\"2\\n1 0\") == \"cslnb\"\nassert solution(\"2\\n2 2\") == \"sjfnb\"\nassert solution(\"3\\n2 3 1\") == \"sjfnb\"\n"
    },
    {
        "number": 3695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('1 1') == '0'\n"
    },
    {
        "number": 3696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1 0 1'\nassert solution('3') == '2 -1 0 1'\nassert solution('4') == '2 -1 0 1'\nassert solution('5') == '2 -1 0 1'\n"
    },
    {
        "number": 3697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1 5 4\n1 2 1 3\n''') == '1 3 3'\nassert solution('''\n3 1 5 3\n1 3 1\n''') == '2 3 2'\nassert solution('''\n3 2 5 3\n1 3 1\n''') == '1 2 2'\n"
    },
    {
        "number": 3698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('110') == '3'\nassert solution('111111011') == '169'\n"
    },
    {
        "number": 3699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 1 2 0 0') == '11.084259940083'\nassert solution('5 0 4 2 2 0') == '33.121375178000'\n"
    },
    {
        "number": 3700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 5\n''') == '2'\nassert solution('''\n8 15\n''') == '1'\nassert solution('''\n7 20\n''') == '0'\nassert solution('''\n1000000000000 1000000000001\n''') == '500000000000'\n"
    },
    {
        "number": 3701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"11\"\nassert solution(input()) == \"0\"\n"
    },
    {
        "number": 3702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 1') == '2 1'\nassert solution('5 1 2') == '19 5'\n"
    },
    {
        "number": 3703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 1') == '6'\nassert solution('10 2') == '4'\n"
    },
    {
        "number": 3704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.0.0.0/0'\nassert solution('4') == '0.0.0.0/0'\nassert solution('5') == '195.0.0.0/8'\nassert solution('2') == '195.0.0.0/8'\nassert solution('3') == '-1'\n"
    },
    {
        "number": 3705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n11\n00000000008\n''') == '1'\nassert solution('''\n22\n0011223344556677889988\n''') == '2'\nassert solution('''\n11\n31415926535\n''') == '0'\n"
    },
    {
        "number": 3706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\n2 2 2 3 2\n0 0 0 1 0\n1 1 1 2 1\n''') == '4'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '3'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1\n''') == '-1'\n"
    },
    {
        "number": 3707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 6 4 5\n''') == 'YES'\nassert solution('''8 6 4 6\n''') == 'NO'\nassert solution('''10 3 11 4\n''') == 'YES'\nassert solution('''4 2 1 4\n''') == 'YES'\nassert solution('''4 2 1 4\n''') == 'NO'\n"
    },
    {
        "number": 3708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"6\"\nassert solution(\"7 8\") == \"12\"\nassert solution(\"2 2\") == \"-1\"\n"
    },
    {
        "number": 3709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 0 1\n1 1 0\n1 0 0\n1 0 0\n1 0 0\n''') == 'NO'\nassert solution('''3 2\n1 0\n1 1\n0 1\n\n''') == 'YES'\n"
    },
    {
        "number": 3710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"Yes\"\nassert solution(\"2 7\") == \"No\"\n"
    },
    {
        "number": 3711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 1') == '6'\nassert solution('6 4 2') == '8'\nassert solution('2 3 4') == '-1'\n"
    },
    {
        "number": 3712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 2 4 3') == '2'\nassert solution('3\\n4 1 1') == '0'\nassert solution('4\\n0 3 0 4') == '0'\nassert solution('5\\n0 3 0 4') == '-1'\nassert solution('6\\n0 3 0 4') == '-1'\n"
    },
    {
        "number": 3713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\n10000011\n''') == '5'\nassert solution('''\n2\n01\n''') == '2'\n"
    },
    {
        "number": 3714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3 1 4\n''') == '3'\nassert solution('''4\n4 4 4 4\n''') == '-1'\nassert solution('''4\n2 1 4 3\n''') == '1'\n"
    },
    {
        "number": 3715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n\n1 3 2 0\n\n''') == '2'\n\nassert solution('''\n7\n\n1 3 3 2 1 2 3\n\n''') == '0'\n\nassert solution('''\n2\n\n2 2\n\n''') == '1'\n"
    },
    {
        "number": 3716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '504'\nassert solution('7') == '210'\n"
    },
    {
        "number": 3717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 0 1 1\n1 1 2 2\n3 0 4 1\n''') == '1 1'\nassert solution('''\n4\n0 0 5 5\n0 1 4 4\n1 2 6 7\n1 1 4 4\n''') == '1 1'\nassert solution('''\n5\n0 0 10 8\n1 2 6 7\n2 3 5 6\n3 4 4 5\n8 1 9 2\n''') == '3 4'\n"
    },
    {
        "number": 3718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n18 55 16 17') == 'YES'\nassert solution('6\\n40 41 43 44 44 44') == 'NO'\nassert solution('8\\n5 972 3 4 1 4 970 971') == 'YES'\n"
    },
    {
        "number": 3719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 9\n1 2 3\n1 2 3 7 8 9 11 12 13\n''') == '9'\nassert solution('''5 5\n1 2 3 4 5\n1 2 3 4 5\n''') == '10'\n"
    },
    {
        "number": 3720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Vasya'\nassert solution('2') == 'Petya'\nassert solution('8') == 'Petya'\n"
    },
    {
        "number": 3721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 3') == '0'\nassert solution('1 5 3') == '2'\nassert solution('4 3 6') == '1'\n\n\"\"\"\n\nimport sys"
    },
    {
        "number": 3722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nA\\nB\\nB\\nA') == '2'\nassert solution('5\\nA\\nB\\nB\\nA') == '3'\nassert solution('10\\nA\\nB\\nB\\nA') == '4'\nassert solution('20\\nA\\nB\\nB\\nA') == '5'\nassert solution('100\\nA\\nB\\nB\\nA') == '6'\n"
    },
    {
        "number": 3723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 4\\n') == '2'\nassert solution('5\\n2 3 4 6 7\\n') == '3'\n"
    },
    {
        "number": 3724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nABAAC') == '11'\nassert solution('5\\nABAAC') == '11'\nassert solution('5\\nABAAC') == '11'\nassert solution('5\\nABAAC') == '11'\nassert solution('5\\nABAAC') == '11'\n"
    },
    {
        "number": 3725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4 2\n1 1\n0 1\n2 3\n''') == '3'\nassert solution('''1023\n1 2\n1 0\n1 2\n1 1\n''') == '-1'\n"
    },
    {
        "number": 3726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('4 5') == '2'\n"
    },
    {
        "number": 3727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"2 2 2 3\") == \"NO\"\n"
    },
    {
        "number": 3728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4\n1 3 2 4\n1 3 4 2\n''') == 'YES'\nassert solution('''\n4 4\n1 2 3 4\n2 3 4 1\n3 4 1 2\n4 1 2 3\n''') == 'NO'\nassert solution('''\n3 6\n2 1 3 4 5 6\n1 2 4 3 5 6\n1 2 3 4 6 5\n''') == 'YES'\n"
    },
    {
        "number": 3729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 2 1') == '666666672'\n"
    },
    {
        "number": 3730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n7 2 3 1 5 6') == '5'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8'\n"
    },
    {
        "number": 3731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 8\") == \"2\"\nassert solution(\"4 2 2 6\") == \"3\"\nassert solution(\"3 7 4 6\") == \"1\"\n"
    },
    {
        "number": 3732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5\") == \"2\"\nassert solution(\"-1 4 15\") == \"4\"\nassert solution(\"0 -1 5\") == \"-1\"\n"
    },
    {
        "number": 3733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 1\n2 1 2 3 4 3\n''') == '2'\nassert solution('''\n6 2\n1 1 2 2 3 3\n''') == '0'\nassert solution('''\n6 1\n1 1 2 2 3 3\n''') == '2'\n"
    },
    {
        "number": 3734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"monday\\ntuesday\") == \"NO\"\nassert solution(\"saturday\\ntuesday\") == \"YES\"\nassert solution(\"saturday\\nsunday\") == \"YES\"\nassert solution(\"sunday\\nsaturday\") == \"YES\"\n"
    },
    {
        "number": 3735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''35\n10000000000\n''') == '17'\nassert solution('''10000000000\n''') == '91'\n"
    },
    {
        "number": 3736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AHA') == 'YES'\nassert solution('Z') == 'NO'\nassert solution('XO') == 'NO'\n"
    },
    {
        "number": 3737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n''') == '0'\nassert solution('''\n2\n1 2\n''') == '1'\nassert solution('''\n3\n1 2 5\n''') == '1'\n"
    },
    {
        "number": 3738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"-1 1000000000\") == \"Yes\"\nassert solution(\"0 0\") == \"Yes\"\nassert solution(\"R\") == \"Yes\"\n"
    },
    {
        "number": 3739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 3 7\") == \"1\"\nassert solution(\"10   3   7\") == \"1\"\nassert solution(\"314\") == \"0\"\nassert solution(\"22 19 3\") == \"1\"\nassert solution(\"60\") == \"1\"\n"
    },
    {
        "number": 3740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '8'\nassert solution('3') == '7'\nassert solution('4') == '6'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n3 6 28 9\n''') == '4'\nassert solution('''\n5\n5 12 9 16 48\n''') == '3'\nassert solution('''\n4\n1 2 4 8\n''') == '-1'\n"
    },
    {
        "number": 3742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n0 5 0 2 3\n''') == '2'\nassert solution('''\n7\n1 0 0 5 0 0 2\n''') == '1 7 3 5 6 4 2'\n"
    },
    {
        "number": 3743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('5') == '5'\n"
    },
    {
        "number": 3744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 2') == '18'\nassert solution('4 2 2') == '31'\nassert solution('5 3 1') == '1 3 5'\nassert solution('6 3 1 6 3') == '4'\n"
    },
    {
        "number": 3745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n"
    },
    {
        "number": 3746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 1') == '7'\nassert solution('0 2 1') == '19'\nassert solution('0 1 1') == '7'\nassert solution('0 2 1') == '19'\nassert solution('0 1 1') == '7'\n"
    },
    {
        "number": 3747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''Bulbbasaur\n''') == '1'\nassert solution('''F\n''') == '0'\nassert solution('''aBddulbasaurrgndgbualdBdsagaurrgndbb\n''') == '2'\n"
    },
    {
        "number": 3748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\narc\\nrac') == 'YES'\nassert solution('2 3\\narc\\nrac') == 'NO'\n\"\"\""
    },
    {
        "number": 3749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 111\") == \"4\"\nassert solution(\"3 100\") == \"3\"\nassert solution(\"3 100\") == \"3\"\nassert solution(\"3 100\") == \"3\"\nassert solution(\"3 100\") == \"3\"\n"
    },
    {
        "number": 3750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 11 5\") == \"1\"\nassert solution(\"11 2 3\") == \"-1\"\n"
    },
    {
        "number": 3751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abacaba\") == \"YES\"\nassert solution(\"jinotega\") == \"NO\"\n"
    },
    {
        "number": 3752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2 6''') == '6.5'\nassert solution('''4 2 20''') == '20.0'\n"
    },
    {
        "number": 3753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2\n..\n..\n\nOutput\n2\n\nInput\n4 4\n....\n"
    },
    {
        "number": 3754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 3\\n') == '6'\nassert solution('4\\n1 1 2 3\\n') == '8'\nassert solution('5\\n1 1 2 3 4\\n') == '10'\nassert solution('6\\n1 1 2 3 4 5\\n') == '12'\nassert solution('7\\n1 1 2 3 4 5 6\\n') == '14'\n"
    },
    {
        "number": 3755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '11'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1') == '10.25'\nassert solution('6 2') == '10.3'\nassert solution('3 100') == '9.2'\n"
    },
    {
        "number": 3757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4''') == '0110'\nassert solution('''1 2 2 1''') == '0110'\nassert solution('''1 2 2 1''') == '0110'\nassert solution('''1 2 2 1''') == '0110'\nassert solution('''1 2 2 1''') == '0110'\n"
    },
    {
        "number": 3758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n*..P*P*\n''') == '3'\nassert solution('''\n10\n.**PP.*P.*\n''') == '2'\n"
    },
    {
        "number": 3759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '8'\nassert solution('3') == '16'\n"
    },
    {
        "number": 3760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9 9 5 5 2 1') == '1 3 9 7'\nassert solution('100 100 52 50 46 56') == '17 8 86 92'\n"
    },
    {
        "number": 3761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"FTFFTFFF\") == \"Yes\"\nassert solution(\"TTTTTTTT\") == \"No\"\nassert solution(\"TTTTTTTT\") == \"Yes\"\nassert solution(\"TTTTTTTT\") == \"Yes\"\nassert solution(\"TTTTTTTT\") == \"Yes\"\n"
    },
    {
        "number": 3762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('4') == '6'\n"
    },
    {
        "number": 3763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\nassert solution('3\\n1 2 3\\n3\\n') == '1.3333333333'\n"
    },
    {
        "number": 3764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1 2\n9 7 11 15 5\n''') == '13 7'\nassert solution('''\n2 100000 569\n''') == '986 605'\n"
    },
    {
        "number": 3765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2 4 4\") == \"1\"\nassert solution(\"3 3 3 3 5\") == \"0\"\nassert solution(\"5 5 1 2 3\") == \"0\"\nassert solution(\"3 4 1 1 3\") == \"3\"\n"
    },
    {
        "number": 3766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\nG3 G3\n\n''') == '0'\nassert solution('''\n4\nB1 Y1 W1 G1 R1\n\n''') == '4'\nassert solution('''\n5\nB1 Y1 W1 G1 R1\n\n''') == '4'\nassert solution('''\n5\nB1 Y1 W1 G1 R1\n\n''') == '4'\nassert solution('''\n5\nB1 Y1 W1 G1 R1\n\n''') == '4'\n"
    },
    {
        "number": 3767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3 3 4 3\\n4 7 6 5\\n') == '2 6'\nassert solution('5\\n10 30 5 6 24\\n10 41 7 8 24\\n') == '3 11'\n"
    },
    {
        "number": 3768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 4\n''') == '3B'\nassert solution('''2 2\n''') == 'Impossible'\nassert solution('''3 2\n''') == '1A1B'\n"
    },
    {
        "number": 3769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '3'\nassert solution('5 4') == '25'\n"
    },
    {
        "number": 3770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\nassert solution(\"4 4\\n4 1 2 3\\n0 2 -3 1\\n1 2\\n2 3\\n3 4\\n4 2\") == \"1\"\n"
    },
    {
        "number": 3771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\n"
    },
    {
        "number": 3772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 2') == '3'\nassert solution('199 200') == '200'\n"
    },
    {
        "number": 3773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n5 2\\n3 3\") == \"Aoki\"\nassert solution(\"2\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"2\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"2\\n5 2\\n3 3\") == \"Takahashi\"\nassert solution(\"2\\n5 2\\n3 3\") == \"Takahashi\"\n"
    },
    {
        "number": 3774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '0'\nassert solution('3 3') == '8'\n"
    },
    {
        "number": 3775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 2 3 4\n1 5 3 4\n''') == '1'\nassert solution('''\n2 2\n1 2 3 4\n1 5 6 4\n''') == '0'\nassert solution('''\n2 3\n1 2 4 5\n1 2 1 3 2 3\n''') == '-1'\n"
    },
    {
        "number": 3776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"00:00\"\nassert solution(\"24\") == \"00:00\"\nassert solution(\"99\") == \"09:09\"\n"
    },
    {
        "number": 3777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"3 3\") == \"6\"\n"
    },
    {
        "number": 3778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n2 0 3 0 1 1\n''') == '5'\nassert solution('''\n1\n0\n''') == '0'\nassert solution('''\n6\n3 2 2 2 1 1\n''') == '-1'\n"
    },
    {
        "number": 3779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 8\n12 20''') == '2'\nassert solution('''3 10\n10 20 30''') == '1'\n"
    },
    {
        "number": 3780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 5 5') == '3.729935587093555327'\nassert solution('3 2') == '1.4142135623730951'\nassert solution('-1 -1') == '0.0'\nassert solution('-1 0') == '1.4142135623730951'\nassert solution('0 0 0 1000') == '11.547005383792516398'\n"
    },
    {
        "number": 3781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second'\nassert solution('''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'First'\nassert solution('''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second'\nassert solution('''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'First'\nassert solution('''\n3\n1\n10\n2\n1 2\n21\n476523737 103976339 266993 706803678 802362985 892644371 953855359 196462821 817301757 409460796 773943961 488763959 405483423 616934516 710762957 239829390 55474813 818352359 312280585 185800870 255245162\n''') == 'Second'\n"
    },
    {
        "number": 3782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"1\"\nassert solution(\"5 5 2\") == \"1\"\nassert solution
    },
    {
        "number": 3783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"24\"\n"
    },
    {
        "number": 3784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '6'\nassert solution('4 4') == '3'\nassert solution('7 3') == '1196'\nassert solution('31 8') == '64921457'\n"
    },
    {
        "number": 3785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 2\") == \"###.X#\"\nassert solution(\"5 4 5\") == \"###.X#\"\nassert solution(\"5 5 5\") == \"###.X#\"\nassert solution(\"5 5 5\") == \"###.X#\"\nassert solution(\"5 5 5\") == \"###.X#\"\n"
    },
    {
        "number": 3786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1\n''') == '1'\nassert solution('''\n5\n1 2 2 2\n''') == '3'\nassert solution('''\n18\n1 1 1 4 4 3 2 2 2 10 8 9 9 9 10 10 4\n''') == '4'\n"
    },
    {
        "number": 3787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"5 3 2\") == \"2 4 1 5 3\"\nassert solution(\"5 3 2\") == \"2 4 1 5 3\"\n"
    },
    {
        "number": 3788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n6 9 18 36 108\n''') == 'Yes'\nassert solution('''\n2\n7 17\n''') == 'No'\nassert solution('''\n9\n4 8 10 12 15 18 33 44 81\n''') == 'Yes'\n"
    },
    {
        "number": 3789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 2 -6 4 5 3\n''') == '12'\nassert solution('''\n5\n1 2 -6 4 5\n''') == '10'\nassert solution('''\n4\n1 2 -6 4\n''') == '6'\nassert solution('''\n3\n1 2 -6\n''') == '6'\nassert solution('''\n2\n1 2\n''') == '2'\n"
    },
    {
        "number": 3790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == '5'\nassert solution('4 3') == '5'\nassert solution('4 3') == '5'\nassert solution('4 3') == '5'\nassert solution('4 3') == '5'\n"
    },
    {
        "number": 3791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0 0'\nassert solution('3') == '0 1'\nassert solution('3') == '2 1'\nassert solution('3') == '2 1'\nassert solution('3') == '2 1'\n"
    },
    {
        "number": 3792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 4\naa\nbb''') == '6'\nassert solution('''3 3\naba\nbba''') == '8'\nassert solution('''4 5\nabbb\nbaaa\n\n''') == '8'\n"
    },
    {
        "number": 3793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0\\n0 0 1\\n0 0 1\\n0 0 1\\n0 1 1\\n0 1 1\\n0 1 1\\n1 1 1\\n1 1 1\\n1 1 1\") == \"YES\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\nassert solution(\"0 0 0\\n0 0 0\\n0 0 0\\n0 0 0\\n1 1 1\\n1 1 1\\n1 1 1\\n1 1 1\\n\") == \"NO\"\n"
    },
    {
        "number": 3794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 3 6 7\n''') == 'YES'\nassert solution('''\n5\n6 15 35 77 22\n''') == 'YES'\nassert solution('''\n5\n6 10 15 1000 75\n''') == 'NO'\n"
    },
    {
        "number": 3795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''100\n60\n70''') == '40'\nassert solution('''410\n55\n70''') == '5'\nassert solution('''600\n60\n70''') == '0'\n"
    },
    {
        "number": 3796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '12'\nassert solution('5') == '1'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1\") == \"6\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"3 5\") == \"0\"\n"
    },
    {
        "number": 3798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n"
    },
    {
        "number": 3799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aba') == 'Second'\nassert solution('abc') == 'First'\nassert solution('abcdef') == 'Second'\nassert solution('abcdefgh') == 'First'\nassert solution('abcdefghi') == 'First'\n"
    },
    {
        "number": 3800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n12345\n''') == '6'\nassert solution('''\n16\n439873893693495623498263984765\n''') == '40'\n"
    },
    {
        "number": 3801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '3'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AJKEQSLOBSROFGZ\") == \"ORZ\"\nassert solution(\"OVGURWZLWVLUXTH\") == \"ORZ\"\nassert solution(\"OZ\") == \"0\"\n"
    },
    {
        "number": 3803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 1\") == \"99\"\nassert solution(\"1 100 1\") == \"0\"\nassert solution(\"100 100 100\") == \"0\"\n"
    },
    {
        "number": 3804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n3 2\n''') == '1'\nassert solution('''\n3 3\n''') == '0'\nassert solution('''\n1000000000000 1048576\n''') == '118606527258'\n"
    },
    {
        "number": 3805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+-') == 'No'\nassert solution('++') == 'Yes'\nassert solution('+-') == 'No'\nassert solution('+-') == 'No'\nassert solution('+-') == 'No'\n"
    },
    {
        "number": 3806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 0 0\n0 1\n-1 2\n1 2\n''') == '12.566370614359172464'\n\nassert solution('''\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n''') == '21.991148575128551812'\n\nassert solution('''\n3 0 0\n0 1\n-1 2\n1 2\n''') == '12.566370614359172464'\n\nassert solution('''\n4 1 -1\n0 0\n1 2\n2 0\n1 1\n''') == '21.991148575128551812'\n\nassert solution('''\n3 0 0\n0 1\n-1 2\n1 2\n''') == '12.566370614359172464'"
    },
    {
        "number": 3807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('48') == '9 42'\nassert solution('6') == '6 6'\n"
    },
    {
        "number": 3808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n(()\n\n''') == 'Yes'\nassert solution('''3\n(()\n\n''') == 'No'\nassert solution('''10\n)))))(((((\n\n''') == 'No'\n"
    },
    {
        "number": 3809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 50\n50 50 100\n''') == '1'\nassert solution('''2 50\n50 50\n''') == '5'\nassert solution('''3 100\n50 50 100\n''') == '2'\nassert solution('''4 100\n50 50 100\n''') == '0'\nassert solution('''5 100\n50 50 100\n''') == '-1'\n"
    },
    {
        "number": 3810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 6 8\") == \"2\"\nassert solution(\"5\\n2 3 4 9 12\") == \"4\"\nassert solution(\"4\\n5 7 2 9\") == \"1\"\n"
    },
    {
        "number": 3811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n17 18\n15 24\n12 15\n''') == '6'\nassert solution('''\n5\n90 108\n45 105\n75 40\n165 175\n33 30\n''') == '5'\nassert solution('''\n2\n10 16\n7 17\n''') == '-1'\n"
    },
    {
        "number": 3812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bab\") == \"1 0\"\nassert solution(\"bbbb\") == \"0\"\n"
    },
    {
        "number": 3813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"POSSIBLE\"\nassert solution(\"4\") == \"IMPOSSIBLE\"\n"
    },
    {
        "number": 3814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1000000007\") == \"2\"\nassert solution(\"3 1000000007\") == \"4\"\nassert solution(\"4 1000000007\") == \"4\"\nassert solution(\"5 1000000007\") == \"5\"\nassert solution(\"6 1000000007\") == \"5\"\n"
    },
    {
        "number": 3815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 3 3\n+-+\n''') == '7'\nassert solution('''\n4 1 5 1\n-\n''') == '999999228'\n"
    },
    {
        "number": 3816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 2') == '4'\nassert solution('1 2 3 1') == '2'\nassert solution('10 2 1 7') == '0'\n"
    },
    {
        "number": 3817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '6'\nassert solution('5 2') == '10'\nassert solution('10 2') == '10'\n"
    },
    {
        "number": 3818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 2 3 4') == '0'\nassert solution('1 2 3 4 5') == '0'\n"
    },
    {
        "number": 3819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n0 2 0\n3 0 1\n''') == '2'\nassert solution('''\n3\n0 2 0\n1 0 3\n''') == '4'\nassert solution('''\n11\n0 0 0 5 0 0 0 4 0 0 11\n9 2 6 0 8 1 7 0 3 0 10\n''') == '18'\n"
    },
    {
        "number": 3820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n"
    },
    {
        "number": 3821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0.1 0.2 0.3 0.8') == '0.800000000000'\nassert solution('2\\n0.1 0.2') == '0.260000000000'\n"
    },
    {
        "number": 3822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 1 2 5') == '5.0000000000'\nassert solution('3 6 1 2 1') == '4.7142857143'\n"
    },
    {
        "number": 3823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0.250'\nassert solution('3') == '0.279'\nassert solution('3') == '0.279'\nassert solution('3') == '0.279'\nassert solution('3') == '0.279'\n"
    },
    {
        "number": 3824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '18'\nassert solution('0 1') == '8'\n"
    },
    {
        "number": 3825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '10'\nassert solution('10') == '244'\n"
    },
    {
        "number": 3826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0'\nassert solution('''\n4\n1 4 1 4 9\n''') == '2'\nassert solution('''\n5\n1 4 1 4 9\n''') == '2'\nassert solution('''\n5\n1 4 1 4 9\n''') == '2'\nassert solution('''\n5\n1 4 1 4 9\n''') == '2'\n"
    },
    {
        "number": 3827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaabccc') == 'YES'\nassert solution('bbacc') == 'NO'\nassert solution('aabc') == 'YES'\n"
    },
    {
        "number": 3828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4 1 2 5 3\n''') == '2'\nassert solution('''\n4\n4 1 3 2\n''') == '2'\nassert solution('''\n5\n4 1 2 5 3\n''') == '2'\nassert solution('''\n5\n4 1 2 5 3\n''') == '2'\nassert solution('''\n5\n4 1 2 5 3\n''') == '2'\n"
    },
    {
        "number": 3829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 1\n''') == '3.500000000000'\nassert solution('''6 3\n''') == '4.958333333333'\nassert solution('''2 2\n''') == '1.750000000000'\n"
    },
    {
        "number": 3830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '3'\nassert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '5'\nassert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '0'\nassert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '0'\nassert solution('''\n4\n-><-\n5\n>>>>>\n3\n<--\n2\n<>\n''') == '0'\n"
    },
    {
        "number": 3831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '16'\nassert solution('4') == '9 9 10'\nassert solution('3') == '202'\nassert solution('4') == '101 101 101 101'\n"
    },
    {
        "number": 3832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 2 3 2 2'\nassert solution('3') == '0 1 3'\n"
    },
    {
        "number": 3833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"110110\"\nassert solution(input()) == \"01\"\nassert solution(input()) == \"01\"\n"
    },
    {
        "number": 3834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 2') == '1'\nassert solution('3 4 1') == '0'\nassert solution('3 4 1') == '-1'\n"
    },
    {
        "number": 3835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2 2 3 1 2'\nassert solution('3') == '2 2 3 1 2'\nassert solution('4') == '2 2 3 1 2'\nassert solution('5') == '2 2 3 1 2'\nassert solution('6') == '2 2 3 1 2'\n"
    },
    {
        "number": 3836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n11 6\n10 4\n01 3\n00 3\n00 7\n00 9\n\n''') == '22'\nassert solution('''\n5\n11 1\n01 1\n00 100\n10 1\n01 1\n\n''') == '105'\nassert solution('''\n3\n00 5000\n00 5000\n00 5000\n\n''') == '0'\n"
    },
    {
        "number": 3837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\nassert solution(\"3 4 10\") == \"YES\"\nassert solution(\"3 4 9\") == \"YES\"\n"
    },
    {
        "number": 3838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == 'NO'\nassert solution('4 1') == 'YES'\nassert solution('4 1') == 'YES'\nassert solution('4 1') == 'YES'\nassert solution('4 1') == 'YES'\n"
    },
    {
        "number": 3839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1 1\\n3 1\\n1 5\\n4 4\"\nassert solution(\"7\") == \"2 1\\n1 2\\n4 1\\n5 2\\n2 6\\n5 7\\n6 6\"\n"
    },
    {
        "number": 3840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '-1'\nassert solution('3') == '3'\n"
    },
    {
        "number": 3841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''46 2\n''') == '7'\nassert solution('''2018 214\n''') == '92 205 1'\n"
    },
    {
        "number": 3842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 20 20') == '5.000000000000000'\nassert solution('4 1 1') == '0.400000000000000'\nassert solution('5 1 1') == '0.400000000000000'\nassert solution('6 1 1') == '0.400000000000000'\nassert solution('7 1 1') == '0.400000000000000'\n"
    },
    {
        "number": 3843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '4'\nassert solution('8 2') == '5'\n"
    },
    {
        "number": 3844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n4 5 7') == 'Conan'\nassert solution('2\\n1 1') == 'Agasa'\n"
    },
    {
        "number": 3845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"3 3\"\nassert solution(\"1 1\") == \"1 1\"\nassert solution(\"2 2\") == \"2 2\"\nassert solution(\"3 3\") == \"3 3\"\nassert solution(\"4 4\") == \"4 4\"\n"
    },
    {
        "number": 3846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n+ 1\n+ 2\n- 2\n- 1\n\n''') == '4'\nassert solution('''3 2\n+ 1\n- 2\n+ 2\n- 1\n\n''') == '1'\nassert solution('''2 4\n+ 1\n- 1\n+ 2\n- 2\n\n''') == '0'\nassert solution('''5 6\n+ 1\n- 1\n- 3\n+ 3\n+ 4\n- 4\n\n''') == '3'\nassert solution('''2 4\n+ 1\n- 2\n+ 2\n- 1\n\n''') == '0'\n"
    },
    {
        "number": 3847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 2 3\n1 2 3\n9''') == '4'\nassert solution('''5 1\n5 4 2 4 5\n2\n5\n\n''') == '1'\n"
    },
    {
        "number": 3848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"NO\"\nassert solution(\"3 4\") == \"abda\"\nassert solution(\"4 4\") == \"abcd\"\n"
    },
    {
        "number": 3849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"tokitsukaze\"\nassert solution(\"6 1\") == \"quailty\"\nassert solution(\"6 5\") == \"once again\"\n"
    },
    {
        "number": 3850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 50') == '50'\nassert solution('1 2 10') == '7'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n"
    },
    {
        "number": 3851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n1 1\n''') == '1 6'\nassert solution('''\n3 2\n0 0\n''') == '1 3'\nassert solution('''\n1 10\n5 3\n''') == '5 5'\n"
    },
    {
        "number": 3852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2 3'\nassert solution('10') == '2 3 4 5 6 7 8 9 10'\nassert solution('100') == '2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051"
    },
    {
        "number": 3853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '3'\n"
    },
    {
        "number": 3854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 18\n5 6 1 10 12 2\n''') == '16'\nassert solution('''\n3 50\n25 25 50\n''') == '3'\n"
    },
    {
        "number": 3855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n''') == '3'\nassert solution('''\n2\n''') == '2'\n"
    },
    {
        "number": 3856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '180'\nassert solution('3') == '21'\nassert solution('1') == '50'\n"
    },
    {
        "number": 3857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('9') == '3'\n"
    },
    {
        "number": 3858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5'\nassert solution('4\\n0 0\\n0 1\\n1 0\\n1 1') == '5'\n"
    },
    {
        "number": 3859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"2\"\n"
    },
    {
        "number": 3860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n6\n3\n''') == '4'\nassert solution('''5\n3\n5\n''') == '4'\nassert solution('''5\n3\n5\n''') == '4'\nassert solution('''5\n3\n5\n''') == '4'\nassert solution('''5\n3\n5\n''') == '4'\n"
    },
    {
        "number": 3861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2\n''') == '2'\nassert solution('''\n8\n1 2 4 8 16 32 64 576\n''') == '32'\n"
    },
    {
        "number": 3862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n100 300 450 500\n''') == '2'\nassert solution('''\n50 2\n100 25\n''') == '3'\n"
    },
    {
        "number": 3863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '6'\nassert solution('5 2') == '10'\nassert solution('10 2') == '20'\nassert solution('10 3') == '20'\nassert solution('10 4') == '20'\n"
    },
    {
        "number": 3864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '499122178'\nassert solution('4') == '499122178'\nassert solution('5') == '499122178'\nassert solution('6') == '499122178'\nassert solution('7') == '499122178'\n"
    },
    {
        "number": 3865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6669'\nassert solution('10') == '-1'\n"
    },
    {
        "number": 3866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 4 3 2 0'\nassert solution('2') == '-1'\n"
    },
    {
        "number": 3867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 4 3\n''') == 'No'\nassert solution('''\n4\n1 2\n1 3\n2 4\n1 2 3 4\n''') == 'Yes'\n"
    },
    {
        "number": 3868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 6 5\") == \"24500\"\nassert solution(\"2 4 5\") == \"-1\"\n"
    },
    {
        "number": 3869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 45') == '0.828427125'\nassert solution('6 4 30') == '19.668384925'\n"
    },
    {
        "number": 3870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\nATK 2000\nDEF 1700\n2500\n2500\n2500\n''') == '3000'\nassert solution('''2 4\nDEF 0\nATK 0\n0\n0\n1\n1\n''') == '1'\nassert solution('''3 4\nATK 10\nATK 100\nATK 1000\n1\n11\n101\n1001\n''') == '992'\n"
    },
    {
        "number": 3871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n4 3 1 2 1\n1 2 1 2 1\n1 2 3 4 5 6 7 8 9\n''') == '6'\nassert solution('''2 2\n1 2\n0 0\n2 1 -100 -100\n''') == '2'\nassert solution('''5 4\n4 3 2 1 1\n0 2 6 7 4\n12 12 12 6 -3 -5 3 10 -4\n''') == '62'\n"
    },
    {
        "number": 3872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaba\") == \"YES\"\nassert solution(\"abaa\") == \"YES\"\nassert solution(\"aabb\") == \"NO\"\nassert solution(\"bbaa\") == \"NO\"\n"
    },
    {
        "number": 3873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n"
    },
    {
        "number": 3874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\nab\nac\ncd\n1 2\n''') == 'Yes'\nassert solution('''\n5 3\ntest\ntezt\ntest.\n.est\ntes.\n1 4 5\n''') == 'Yes'\nassert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == 'No'\nassert solution('''\n4 4\na\nb\nc\ndd\n1 2 3\n''') == 'Yes'\nassert solution('''\n6 3\n.svn\n.git\n....\n...\n..\n.\n1 2 3\n''') == 'No'\n"
    },
    {
        "number": 3875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"4\"\n"
    },
    {
        "number": 3876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2\\n2 3\\n3 4\\n') == '2'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '3'\nassert solution('6\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n') == '4'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n') == '5'\nassert solution('8\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n') == '6'\n"
    },
    {
        "number": 3877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2 5') == '4'\nassert solution('10 3 10') == '5'\n"
    },
    {
        "number": 3878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n1 2\n1 3\n2 3\n2 5\n3 4\n4 5''') == '2'\nassert solution('''4 4\n1 2\n1 3\n1 4\n3 4''') == '1'\n"
    },
    {
        "number": 3879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n75 150 75 50\n''') == 'Yes'\nassert solution('''\n3\n100 150 250\n''') == 'No'\nassert solution('''\n2\n100 150\n''') == 'No'\nassert solution('''\n1\n100\n''') == 'Yes'\nassert solution('''\n1\n100\n''') == 'Yes'\n'''\n"
    },
    {
        "number": 3880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n50 50 50\n''') == '150'\nassert solution('''2\n-1 -100 -1\n''') == '100'\n"
    },
    {
        "number": 3881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5\nab a\ncc c\nca a\nee c\nff d\n''') == '4'\nassert solution('''2 8\naf e\ndc d\ncc f\nbc b\nda b\neb a\nbb b\nff c\n''') == '1'\nassert solution('''6 2\nbb a\nba a\n''') == '0'\n"
    },
    {
        "number": 3882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '10'\n"
    },
    {
        "number": 3883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1.000000000000'\nassert solution('1 3') == '-1'\nassert solution('4 1') == '1.250000000000'\n"
    },
    {
        "number": 3884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n12\n11 8\n7 5\n''') == '10.0000000000'\nassert solution('''\n3\n1\n1 4 1\n2 5 3\n''') == '-1'\nassert solution('''\n6\n2\n4 6 3 3 5 6\n2 6 3 6 5 3\n''') == '85.4800000000'\n"
    },
    {
        "number": 3885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n''') == '0'\nassert solution('''\n10\n''') == '4'\n"
    },
    {
        "number": 3886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Wh\"\nassert solution(\"1 2\") == \"abdef\"\nassert solution(\"1 111111111111\") == \"Areyoubusy\"\n\n\"\"\""
    },
    {
        "number": 3887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''? +? -? +? = 42''') == 'Possible'\nassert solution('''? -? = 1''') == 'Impossible'\nassert solution('''? = 1000000''') == 'Possible'\n"
    },
    {
        "number": 3888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '7 4 5'\nassert solution('5') == '7 4 5'\nassert solution('6') == '7 4 5'\nassert solution('7') == '7 4 5'\nassert solution('8') == '7 4 5'\n"
    },
    {
        "number": 3889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\nabc\n\n''') == 'Yes'\nassert solution('''\n3\njjj\n\n''') == 'No'\nassert solution('''\n6\naabddc\n\n''') == 'Yes'\nassert solution('''\n6\nabc\n\n''') == 'No'\n"
    },
    {
        "number": 3890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '54'\nassert solution('7 4') == '1728'\n"
    },
    {
        "number": 3891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\nWWBBBW\nWWBBBW\nWWBBBW\nWWWWWW\nWWWWWW\n''') == '2 4'\nassert solution('''3 3\nWWW\nBWW\nWWW\n''') == '2 1'\n"
    },
    {
        "number": 3892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 7\n2 4\n5 1\n2 3\n3 4\n4 1\n5 3\n3 5\n''') == '10 9 10 10 9'\nassert solution('''2 3\n1 2\n1 2\n1 2\n''') == '5 6'\n"
    },
    {
        "number": 3893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"-1 -1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"0 1 0\") == \"2\"\nassert solution(\"1 0 0\") == \"2\"\n"
    },
    {
        "number": 3894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Kevin'\nassert solution('1 2') == 'Nicky'\nassert solution('1 2') == 'Kevin'\nassert solution('1 2') == 'Nicky'\nassert solution('1 2') == 'Kevin'\n"
    },
    {
        "number": 3895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('0') == '-1'\nassert solution('-1') == '-1'\n"
    },
    {
        "number": 3896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '6'\nassert solution('01') == '2'\nassert solution('1') == '1'\n"
    },
    {
        "number": 3897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('2') == '4'\nassert solution('5') == '4'\nassert solution('4') == '4'\n"
    },
    {
        "number": 3898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n"
    },
    {
        "number": 3899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n8 10 9 9 8 10\\n1 1 1 1 1 1\\n') == '9000'\nassert solution('6\\n8 10 9 9 8 10\\n1 10 5 5 1 10\\n') == '1160'\n"
    },
    {
        "number": 3900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n2 3\n1 4\n1 4\n2 1\n''') == '6'\nassert solution('''\n8 6\n5 6\n5 7\n5 8\n6 2\n2 1\n7 3\n1 3\n1 4\n''') == '1'\n"
    },
    {
        "number": 3901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '-1'\nassert solution('3') == '4'\n"
    },
    {
        "number": 3902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abacabaca') == '3'\nassert solution('abaca') == '0'\nassert solution('abac') == '0'\nassert solution('abacaba') == '0'\nassert solution('abacabacaba') == '0'\n"
    },
    {
        "number": 3903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\\n11..2\\n#..22\\n#.323\\n.#333\") == \"2\"\nassert solution(\"1 5\\n1#2#3\") == \"-1\"\n"
    },
    {
        "number": 3904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"1\"\nassert solution(\"8\") == \"6\"\nassert solution(\"3\") == \"1\"\n"
    },
    {
        "number": 3905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3 5\n4 4 0\n1 3\n3 2\n3 1\n''') == '1'\nassert solution('''\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4'\nassert solution('''\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4'\nassert solution('''\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4'\nassert solution('''\n4 5 4\n2 1 0 3\n4 3\n3 2\n1 2\n1 4\n1 3\n''') == '4'\n"
    },
    {
        "number": 3906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '8'\nassert solution('4 5') == '8'\nassert solution('10 10') == '8'\nassert solution('10 10') == '8'\nassert solution('10 10') == '8'\n"
    },
    {
        "number": 3907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n''') == '5'\nassert solution('''\n100 3\n1 2\n2 1\n3 1\n''') == '100'\nassert solution('''\n1 2\n1 1\n2 100\n''') == '100'\n"
    },
    {
        "number": 3908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aaabb''') == '6'\nassert solution('''usaco''') == '1'\nassert solution('''lol''') == '2'\n"
    },
    {
        "number": 3909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\n"
    },
    {
        "number": 3910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 2'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2'\nassert solution('5') == '1 2'\n"
    },
    {
        "number": 3911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2 1'\nassert solution('3') == '2 1 1'\nassert solution('8') == '4'\n"
    },
    {
        "number": 3912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\naabaac\n''') == '2'\nassert solution('''\n0rTrT022\n''') == '1'\nassert solution('''\naA\n''') == '2'\nassert solution('''\naA\n''') == '1'\nassert solution('''\naA\n''') == '1'\n"
    },
    {
        "number": 3913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\na**d\n2\nabcd\nacbd\n''') == '2'\nassert solution('''5\nlo*er\n2\nlover\nloser\n''') == '0'\nassert solution('''3\na*a\n2\naaa\naba\n''') == '1'\n"
    },
    {
        "number": 3914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 1\\n1 0 0 0 4\\n') == '1'\nassert solution('6 1 2\\n3 8 0 1 0 0\\n') == '2'\n"
    },
    {
        "number": 3915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '40'\nassert solution('1 42') == '1'\nassert solution('6 4') == '172'\n"
    },
    {
        "number": 3916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2 1 4\n''') == '5'\nassert solution('''\n4\n3 1 4 1\n''') == '6'\nassert solution('''\n5\n3 1 4 1 5\n''') == '11'\n"
    },
    {
        "number": 3917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0 0 -1') == '1'\nassert solution('2 -1') == '2'\nassert solution('3 -1') == '2'\nassert solution('4 -1') == '2'\nassert solution('5 -1') == '2'\n"
    },
    {
        "number": 3918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 0 0\n1 2\n2 3\n''') == '2'\nassert solution('''\n2 1 0\n1 2\n2 2\n''') == '0'\nassert solution('''\n2 5 7\n3 4\n14 4\n''') == '1'\n"
    },
    {
        "number": 3919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"6\"\n"
    },
    {
        "number": 3920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 1 1 1 1\n''') == '6'\nassert solution('''\n1 2 1 2 1 2\n''') == '13'\n'''\n"
    },
    {
        "number": 3921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 3 4 6 9') == '4'\nassert solution('9\\n1 2 3 5 6 7 8 9 10') == '4'\n"
    },
    {
        "number": 3922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY COMPLETE'\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\nassert solution('''\n2\n3\n1 2 3 5 6 E 7\n8 9 10 4 11 12 13\n11\n34 45 6 22 16 43 38 44 5 4 41 14 7 29 28 19 9 18 42 8 17 33 1\nE 15 40 36 31 24 10 2 21 11 32 23 30 27 35 25 13 12 39 37 26 20 3\n''') == 'SURGERY FAILED'\n"
    },
    {
        "number": 3923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2 1\n''') == '1 2 3'\nassert solution('''9 2 5\n''') == '6 5 8 3 4 1 9 2 7'\nassert solution('''3 2 1\n''') == '1 2 3'\n"
    },
    {
        "number": 3924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n3 2 1\n''') == '3'\nassert solution('''\n5 1\n1000000000 1000000000 1000000000 1000000000 1000000000\n''') == '5000000000'\nassert solution('''\n3 2\n1 0 1\n''') == '2'\n"
    },
    {
        "number": 3925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''bwwwbwwbw\nbwwbwwb''') == '5'\nassert solution('''bwwbwwb\nbwwbwwb''') == '3'\nassert solution('''bwwbwwb\nbwwbwwb''') == '5'\nassert solution('''bwwbwwb\nbwwbwwb''') == '3'\nassert solution('''bwwbwwb\nbwwbwwb''') == '5'\n"
    },
    {
        "number": 3926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 5\n3 2\n1 2\n.....\n.***.\n...**\n*....\n''') == '10'\nassert solution('''\n4 4\n2 2\n0 1\n....\n..*.\n....\n....\n''') == '7'\n'''\n"
    },
    {
        "number": 3927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 4 2 2\n''') == '2'\nassert solution('''\n6\n1 2 4 4 4 9\n''') == '2'\n"
    },
    {
        "number": 3928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 1\naba''') == '7'\nassert solution('''4 1 1\nabcd''') == '4'\nassert solution('''4 10 1\naaaa''') == '12'\n"
    },
    {
        "number": 3929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'\nassert solution('2 3') == '0'\nassert solution('2 4') == '0'\nassert solution('2 5') == '0'\n"
    },
    {
        "number": 3930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '8'\nassert solution('4 -3') == '3'\n"
    },
    {
        "number": 3931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 5 3 1 8\n    a A\n    A aa\n    aa AA\n    AA a\n''') == '11'\nassert solution('''4 2 1 300 1000\n    a A\n    A aa\n    aa AA\n    AA a\n''') == '5'\n"
    },
    {
        "number": 3932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1 4\") == \"YES\"\nassert solution(\"5 1 5 2 1\") == \"NO\"\n"
    },
    {
        "number": 3933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n10 5 0 -5 -10\n''') == '-15'\nassert solution('''4\n1 1 1 1\n''') == '1'\nassert solution('''2\n900 1000\n''') == '1100'\n"
    },
    {
        "number": 3934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'\nassert solution('''\n5\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\nassert solution('''\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'\nassert solution('''\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'NO'\nassert solution('''\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n''') == 'YES'\n"
    },
    {
        "number": 3935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('2 6') == '0'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n"
    },
    {
        "number": 3936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\naab\nccb\n''') == '6'\nassert solution('''4\naab\nccb\naac\n''') == '6'\nassert solution('''5\naab\nccb\naac\naad\n''') == '6'\nassert solution('''6\naab\nccb\naac\naad\naae\n''') == '6'\nassert solution('''7\naab\nccb\naac\naad\naae\naaf\n''') == '6'\n"
    },
    {
        "number": 3937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n100 100 5\n5 2 1 2 1\n''') == 'YES'\nassert solution('''\n100 8 5\n5 2 1 2 1\n''') == 'NO'\nassert solution('''\n100 100 7\n1 2 3 4 5 6 7\n''') == 'NO'\n"
    },
    {
        "number": 3938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == '4'\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\nassert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == '4'\nassert solution('''\n7 6\n2 1 2 1\n4 2 4 3\n2 5 2 5\n2 3 5 3\n1 2 1 2\n3 2 5 3\n''') == '3'\nassert solution('''\n10 2\n4 1 5 10\n1 4 10 5\n''') == '4'\n"
    },
    {
        "number": 3939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'yes'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\nassert solution('''5 3\n1 5 2 6 1\n1 6\n6\n3 2\n1 2 3\n4 3\n3 1 2 3\n10 3\n1 2 3 4 5 6 7 8 9 10''') == 'no'\n"
    },
    {
        "number": 3940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '2'\nassert solution('4 2') == '3'\n"
    },
    {
        "number": 3941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\n"
    },
    {
        "number": 3942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''(((#)((#)\n''') == '1')\nassert solution('''()((#((#(#()\n''') == '2')\nassert solution('''#\n''') == '-1'\nassert solution('''(#)\n''') == '-1'\nassert solution('''(#)\n''') == '-1'\n"
    },
    {
        "number": 3943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == '-1'\nassert solution('4 0') == '16'\nassert solution('0 4') == '-16'\n"
    },
    {
        "number": 3944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 1\") == \"17\"\nassert solution(\"1 1 1\") == \"17\"\nassert solution(\"1 1 1\") == \"17\"\nassert solution(\"1 1 1\") == \"17\"\nassert solution(\"1 1 1\") == \"17\"\n"
    },
    {
        "number": 3945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 2 1\n2 1 2\n''') == '2 2 2'\nassert solution('''2 2\n1 2\n3 4\n''') == '3 2'\n"
    },
    {
        "number": 3946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n0 1\n2 1\n''') == '332748119'\nassert solution('''\n1 2\n1\n1\n''') == '3'\nassert solution('''\n3 3\n0 1 1\n4 3 5\n''') == '160955686'\n"
    },
    {
        "number": 3947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '11'\nassert solution('5') == '6'\nassert solution('5') == '6'\nassert solution('5') == '6'\nassert solution('5') == '6'\n"
    },
    {
        "number": 3948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('14 2') == 'Yes'\nassert solution('3 1') == 'No'\n"
    },
    {
        "number": 3949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"3 5\") == \"0\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"3 5\") == \"0\"\n"
    },
    {
        "number": 3950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 0 2 3\n''') == 'YES'\nassert solution('''\n3 10\n10 10 10\n''') == 'YES'\nassert solution('''\n5 6\n6 5 6 2 2\n''') == 'NO'\nassert solution('''\n3 5\n0 0 0\n''') == 'YES'\nassert solution('''\n3 5\n0 0 0\n''') == 'YES'\n"
    },
    {
        "number": 3951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 1 2 3 4 3 2 6 1 1 2 2 1 2 3 2\n''') == '4 3 6 2'\nassert solution('''\n1\n42\n''') == '42'\nassert solution('''\n2\n1 1 1 1\n''') == '1 1'\n"
    },
    {
        "number": 3952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 1\n1 2\n1 3\n''') == '3'\nassert solution('''\n4\n2 1\n2 2\n3 1\n3 2\n''') == '6'\nassert solution('''\n5\n1 1\n2 1\n3 1\n4 1\n5 1\n''') == '5'\n"
    },
    {
        "number": 3953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n.E.\nE..\nE.E''') == '-1'\nassert solution('''3\nEEE\nE..\nE.E''') == '3 3'\nassert solution('''5\nEE.EE\nE.EE.\nE...E\n.EE.E\nEE.EE''') == '4 4'\n"
    },
    {
        "number": 3954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10') == '32'\nassert solution('10 2') == '32'\nassert solution('10 -1 2 2 2 2 2 2 -1 10') == '32'\n"
    },
    {
        "number": 3955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 2') == '3'\nassert solution('4 2 3') == '79'\n"
    },
    {
        "number": 3956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"7\"\nassert solution(\"4 4\") == \"7\"\nassert solution(\"5 5\") == \"7\"\nassert solution(\"6 6\") == \"7\"\nassert solution(\"7 7\") == \"7\"\n"
    },
    {
        "number": 3957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2') == '6'\nassert solution('9 3') == '9'\nassert solution('10 3') == '10'\nassert solution('10 4') == '10'\nassert solution('10 5') == '10'\n"
    },
    {
        "number": 3958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0010100') == '3 1 3 4'\nassert solution('111') == '-1'\n"
    },
    {
        "number": 3959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n2 1 2\n2 2 3\n''') == '1'\nassert solution('''\n1 3\n3 1 2 3\n''') == '1'\nassert solution('''\n2 4\n2 1 2\n3 2 3 4\n''') == '2'\nassert solution('''\n3 7\n2 1 2\n2 3 4\n3 5 6 7\n''') == '24'\n"
    },
    {
        "number": 3960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 4 2 3 1\n''') == '3'\nassert solution('''\n4\n1 5 4 7\n''') == '6'\n"
    },
    {
        "number": 3961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('4') == '20'\nassert solution('5') == '62'\n"
    },
    {
        "number": 3962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"7\"\nassert solution(\"1\") == \"7\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"1 2\") == \"3\"\n"
    },
    {
        "number": 3963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n\n4\n2\n\n''') == '1'\nassert solution('''\n2\n1\n4 4\n2\n\n''') == '3'\nassert solution('''\n3\n3 3\n10 10 10\n17\n\n''') == '6'\n"
    },
    {
        "number": 3964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3 100') == '10'\nassert solution('3 6 5 1000000007') == '0'\n"
    },
    {
        "number": 3965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 2 3\\nintel\\ncode\\nch allenge\") == \"YES\"\nassert solution(\"4\\n1 2 3 1\\nto be or not to be that is the question\\nwhether tis nobler in the mind to suffer\\nthe slings and arrows of outrageous fortune\\nor to take arms against a sea of troubles\") == \"NO\"\n"
    },
    {
        "number": 3966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '26'\nassert solution('1') == '10'\n"
    },
    {
        "number": 3967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 4\n1 3 5\n''') == '3'\nassert solution('''3 40\n10 30 50\n''') == '32'\n"
    },
    {
        "number": 3968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 1\n1 1\n5 10\n1 3\n11 14\n5 5\n10 10\n3 6\n6 12\n7 7\n4 11\n''') == '1 4 5 6 7 8 9'\nassert solution('''\n5 1\n1 1\n3 3\n2 3\n1 2\n3 4\n4 5\n''') == '1 2 4'\nassert solution('''\n5 1\n1 1\n3 3\n3 3\n4 4\n4 4\n5 5\n''') == '1 2 4'\n"
    },
    {
        "number": 3969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 2\n2 1\n1 2.0\n1 3.100\n''') == '1'\nassert solution('''3 3\n1 5.0\n2 5.5\n3 6.0\n''') == '0'\nassert solution('''6 3\n1 14.284235\n2 17.921382\n1 20.328172\n3 20.842331\n1 25.790145\n1 27.204125\n''') == '2'\n"
    },
    {
        "number": 3970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 2\\n2 3 6 5 4 10') == '3'\nassert solution('6 2\\n2 3 6 5 4 10') == '3'\n"
    },
    {
        "number": 3971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2\n''') == '2'\nassert solution('''\n3\n1 2 1 3\n''') == '4'\nassert solution('''\n9\n1 2 1 3 2 2 2 2 3\n''') == '10'\n"
    },
    {
        "number": 3972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '4'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '4'\n"
    },
    {
        "number": 3973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6\") == \"5\"\nassert solution(\"1 5 1 4\") == \"5\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"4 4\") == \"1\"\n"
    },
    {
        "number": 3974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+-+-+') == '1'\nassert solution('+-+-++') == '2'\nassert solution('+-+-++-') == '3'\nassert solution('+-+-++-+') == '4'\nassert solution('+-+-++-+-') == '5'\n"
    },
    {
        "number": 3975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\nassert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\nassert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\nassert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\nassert solution('''\nAND 9 4\nIN 1\nIN 1\nXOR 6 5\nAND 3 7\nIN 0\nNOT 10\nIN 1\nIN 1\nAND 2 8\n''') == '10110'\n"
    },
    {
        "number": 3976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 1') == '2'\nassert solution('6 3 2') == '2'\n"
    },
    {
        "number": 3977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1 2\") == \"2\"\nassert solution(\"3 3 1\") == \"0\"\n"
    },
    {
        "number": 3978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n10 2 3 5 4 2\n''') == '3'\nassert solution('''\n4\n100 100 100 100\n''') == '1'\nassert solution('''\n8\n7 6 5 4 3 2 2 3\n''') == '4'\n"
    },
    {
        "number": 3979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2\n1 1\n3 1 3 2\n2 1 5\n2 4 4\n2 4 4\n''') == 'Yes'\nassert solution('''\n6 5\n2 1 2\n2 1 2\n3 1 2 3\n2 1 5\n2 4 4\n2 4 4\n''') == 'No'\nassert solution('''\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n''') == 'Yes'\nassert solution('''\n4 3\n4 3 2 2 1\n3 1 1 3\n3 2 3 3\n2 3 1\n''') == 'No'\n"
    },
    {
        "number": 3980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0 2 1 4 3'\nassert solution('2') == '0 1 2 3 4'\nassert solution('3') == '0 1 2 3 4'\nassert solution('4') == '0 1 2 3 4'\nassert solution('5') == '0 1 2 3 4'\n"
    },
    {
        "number": 3981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 4') == 'NO'\nassert solution('3 4') == 'YES'\nassert solution('3 4') == 'NO'\nassert solution('3 4') == 'YES'\n"
    },
    {
        "number": 3982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\n"
    },
    {
        "number": 3983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 0\") == \"First\"\nassert solution(\"3 1\") == \"Second\"\nassert solution(\"3 2\") == \"First\"\nassert solution(\"3 3\") == \"Second\"\nassert solution(\"3 4\") == \"Second\"\n"
    },
    {
        "number": 3984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abba\") == \"Mike\"\nassert solution(\"cba\") == \"Mike\"\n"
    },
    {
        "number": 3985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '0'\nassert solution('3 2') == '2'\nassert solution('3 2') == '2'\nassert solution('3 2') == '2'\nassert solution('3 2') == '2'\n"
    },
    {
        "number": 3986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4') == 'ababacd'\nassert solution('4 7') == '-1'\n"
    },
    {
        "number": 3987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n1 2 1 2') == '4'\nassert solution('10\\n1 1 2 2 2 1 1 2 2 1') == '9'\n"
    },
    {
        "number": 3988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n6 6 3\n2 2 6\n1 4 5\n2 3 4\n1 4 1\n1 3 1\n2 2 3\n''') == '6'\nassert solution('''\n3 3 1\n1 1 2\n2 2 1\n''') == '1'\nassert solution('''\n3 3 1\n1 1 2\n2 2 1\n''') == '2'\nassert solution('''\n3 3 1\n1 1 2\n2 2 1\n''') == '1'\n"
    },
    {
        "number": 3989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1689') == '1869'\nassert solution('18906') == '18690'\n"
    },
    {
        "number": 3990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 6\") == \"-1\"\nassert solution(\"5 5\") == \"3\"\n"
    },
    {
        "number": 3991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '9'\n"
    },
    {
        "number": 3992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 8 5\n''') == '9'\nassert solution('''\n4\n0 5 15 10\n''') == '0'\nassert solution('''\n1\n1\n''') == '-1'\n"
    },
    {
        "number": 3993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 4 5\n3 5 7 10\n''') == '3'\nassert solution('''\n13 4 5\n7 8 9 10\n''') == '1'\nassert solution('''\n10 4 5\n3 5 7 10\n''') == '1'\nassert solution('''\n10 4 5\n3 5 7 10\n''') == '1'\nassert solution('''\n10 4 5\n3 5 7 10\n''') == '1'\n"
    },
    {
        "number": 3994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"6\") == \"6\"\n"
    },
    {
        "number": 3995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n''') == '1111'\nassert solution('''5 3\n''') == '01010'\nassert solution('''7 3\n''') == '1011011'\n"
    },
    {
        "number": 3996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0/1'\nassert solution('2') == '1/2'\nassert solution('3') == '0/1'\n"
    },
    {
        "number": 3997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 5 1 4 6\\n1 7\\n1 1\\n3 5\\n3 6') == '1 0 1 0 0'\nassert solution('5\\n9 7 8 6 5\\n1 1\\n2 1\\n3 1\\n4 1') == '4 3 2 1 0'\n"
    },
    {
        "number": 3998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('2') == '2'\nassert solution('3') == '11'\nassert solution('1') == '0'\n"
    },
    {
        "number": 3999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('6') == '1'\nassert solution('6') == '1'\nassert solution('6') == '1'\nassert solution('6') == '1'\n"
    }
]